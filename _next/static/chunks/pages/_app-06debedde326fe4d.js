(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
  [2888],
  {
    48711: function (s, x, W) {
      "use strict";
      W.d(x, {
        Z: function () {
          return createCache;
        },
      });
      var X = (function () {
          function StyleSheet(s) {
            var x = this;
            (this._insertTag = function (s) {
              var W;
              (W =
                0 === x.tags.length
                  ? x.insertionPoint
                    ? x.insertionPoint.nextSibling
                    : x.prepend
                    ? x.container.firstChild
                    : x.before
                  : x.tags[x.tags.length - 1].nextSibling),
                x.container.insertBefore(s, W),
                x.tags.push(s);
            }),
              (this.isSpeedy = void 0 === s.speedy || s.speedy),
              (this.tags = []),
              (this.ctr = 0),
              (this.nonce = s.nonce),
              (this.key = s.key),
              (this.container = s.container),
              (this.prepend = s.prepend),
              (this.insertionPoint = s.insertionPoint),
              (this.before = null);
          }
          var s = StyleSheet.prototype;
          return (
            (s.hydrate = function (s) {
              s.forEach(this._insertTag);
            }),
            (s.insert = function (s) {
              if (this.ctr % (this.isSpeedy ? 65e3 : 1) == 0) {
                var x;
                this._insertTag(
                  ((x = document.createElement("style")).setAttribute(
                    "data-emotion",
                    this.key
                  ),
                  void 0 !== this.nonce && x.setAttribute("nonce", this.nonce),
                  x.appendChild(document.createTextNode("")),
                  x.setAttribute("data-s", ""),
                  x)
                );
              }
              var W = this.tags[this.tags.length - 1];
              if (this.isSpeedy) {
                var X = (function (s) {
                  if (s.sheet) return s.sheet;
                  for (var x = 0; x < document.styleSheets.length; x++)
                    if (document.styleSheets[x].ownerNode === s)
                      return document.styleSheets[x];
                })(W);
                try {
                  X.insertRule(s, X.cssRules.length);
                } catch (s) {}
              } else W.appendChild(document.createTextNode(s));
              this.ctr++;
            }),
            (s.flush = function () {
              this.tags.forEach(function (s) {
                var x;
                return null == (x = s.parentNode) ? void 0 : x.removeChild(s);
              }),
                (this.tags = []),
                (this.ctr = 0);
            }),
            StyleSheet
          );
        })(),
        ee = Math.abs,
        et = String.fromCharCode,
        er = Object.assign;
      function Utility_replace(s, x, W) {
        return s.replace(x, W);
      }
      function indexof(s, x) {
        return s.indexOf(x);
      }
      function Utility_charat(s, x) {
        return 0 | s.charCodeAt(x);
      }
      function Utility_substr(s, x, W) {
        return s.slice(x, W);
      }
      function Utility_strlen(s) {
        return s.length;
      }
      function Utility_append(s, x) {
        return x.push(s), s;
      }
      var ei = 1,
        eo = 1,
        ea = 0,
        es = 0,
        el = 0,
        ec = "";
      function node(s, x, W, X, ee, et, er) {
        return {
          value: s,
          root: x,
          parent: W,
          type: X,
          props: ee,
          children: et,
          line: ei,
          column: eo,
          length: er,
          return: "",
        };
      }
      function Tokenizer_copy(s, x) {
        return er(
          node("", null, null, "", null, null, 0),
          s,
          { length: -s.length },
          x
        );
      }
      function next() {
        return (
          (el = es < ea ? Utility_charat(ec, es++) : 0),
          eo++,
          10 === el && ((eo = 1), ei++),
          el
        );
      }
      function peek() {
        return Utility_charat(ec, es);
      }
      function token(s) {
        switch (s) {
          case 0:
          case 9:
          case 10:
          case 13:
          case 32:
            return 5;
          case 33:
          case 43:
          case 44:
          case 47:
          case 62:
          case 64:
          case 126:
          case 59:
          case 123:
          case 125:
            return 4;
          case 58:
            return 3;
          case 34:
          case 39:
          case 40:
          case 91:
            return 2;
          case 41:
          case 93:
            return 1;
        }
        return 0;
      }
      function alloc(s) {
        return (ei = eo = 1), (ea = Utility_strlen((ec = s))), (es = 0), [];
      }
      function delimit(s) {
        var x, W;
        return ((x = es - 1),
        (W = (function delimiter(s) {
          for (; next(); )
            switch (el) {
              case s:
                return es;
              case 34:
              case 39:
                34 !== s && 39 !== s && delimiter(el);
                break;
              case 40:
                41 === s && delimiter(s);
                break;
              case 92:
                next();
            }
          return es;
        })(91 === s ? s + 2 : 40 === s ? s + 1 : s)),
        Utility_substr(ec, x, W)).trim();
      }
      var eu = "-ms-",
        ed = "-moz-",
        eh = "-webkit-",
        ep = "comm",
        ef = "rule",
        eg = "decl",
        em = "@keyframes";
      function Serializer_serialize(s, x) {
        for (var W = "", X = s.length, ee = 0; ee < X; ee++)
          W += x(s[ee], ee, s, x) || "";
        return W;
      }
      function stringify(s, x, W, X) {
        switch (s.type) {
          case "@layer":
            if (s.children.length) break;
          case "@import":
          case eg:
            return (s.return = s.return || s.value);
          case ep:
            return "";
          case em:
            return (s.return =
              s.value + "{" + Serializer_serialize(s.children, X) + "}");
          case ef:
            s.value = s.props.join(",");
        }
        return Utility_strlen((W = Serializer_serialize(s.children, X)))
          ? (s.return = s.value + "{" + W + "}")
          : "";
      }
      function ruleset(s, x, W, X, et, er, ei, eo, ea, es, el) {
        for (
          var ec = et - 1,
            eu = 0 === et ? er : [""],
            ed = eu.length,
            eh = 0,
            ep = 0,
            eg = 0;
          eh < X;
          ++eh
        )
          for (
            var em = 0,
              ew = Utility_substr(s, ec + 1, (ec = ee((ep = ei[eh])))),
              eb = s;
            em < ed;
            ++em
          )
            (eb = (
              ep > 0 ? eu[em] + " " + ew : Utility_replace(ew, /&\f/g, eu[em])
            ).trim()) && (ea[eg++] = eb);
        return node(s, x, W, 0 === et ? ef : eo, ea, es, el);
      }
      function declaration(s, x, W, X) {
        return node(
          s,
          x,
          W,
          eg,
          Utility_substr(s, 0, X),
          Utility_substr(s, X + 1, -1),
          X
        );
      }
      var identifierWithPointTracking = function (s, x, W) {
          for (
            var X = 0, ee = 0;
            (X = ee),
              (ee = peek()),
              38 === X && 12 === ee && (x[W] = 1),
              !token(ee);

          )
            next();
          return Utility_substr(ec, s, es);
        },
        toRules = function (s, x) {
          var W = -1,
            X = 44;
          do
            switch (token(X)) {
              case 0:
                38 === X && 12 === peek() && (x[W] = 1),
                  (s[W] += identifierWithPointTracking(es - 1, x, W));
                break;
              case 2:
                s[W] += delimit(X);
                break;
              case 4:
                if (44 === X) {
                  (s[++W] = 58 === peek() ? "&\f" : ""), (x[W] = s[W].length);
                  break;
                }
              default:
                s[W] += et(X);
            }
          while ((X = next()));
          return s;
        },
        getRules = function (s, x) {
          var W;
          return (W = toRules(alloc(s), x)), (ec = ""), W;
        },
        ew = new WeakMap(),
        compat = function (s) {
          if ("rule" === s.type && s.parent && !(s.length < 1)) {
            for (
              var x = s.value,
                W = s.parent,
                X = s.column === W.column && s.line === W.line;
              "rule" !== W.type;

            )
              if (!(W = W.parent)) return;
            if (
              (1 !== s.props.length || 58 === x.charCodeAt(0) || ew.get(W)) &&
              !X
            ) {
              ew.set(s, !0);
              for (
                var ee = [], et = getRules(x, ee), er = W.props, ei = 0, eo = 0;
                ei < et.length;
                ei++
              )
                for (var ea = 0; ea < er.length; ea++, eo++)
                  s.props[eo] = ee[ei]
                    ? et[ei].replace(/&\f/g, er[ea])
                    : er[ea] + " " + et[ei];
            }
          }
        },
        removeLabel = function (s) {
          if ("decl" === s.type) {
            var x = s.value;
            108 === x.charCodeAt(0) &&
              98 === x.charCodeAt(2) &&
              ((s.return = ""), (s.value = ""));
          }
        },
        eb = [
          function (s, x, W, X) {
            if (s.length > -1 && !s.return)
              switch (s.type) {
                case eg:
                  s.return = (function emotion_cache_browser_esm_prefix(s, x) {
                    switch (
                      45 ^ Utility_charat(s, 0)
                        ? (((((((x << 2) ^ Utility_charat(s, 0)) << 2) ^
                            Utility_charat(s, 1)) <<
                            2) ^
                            Utility_charat(s, 2)) <<
                            2) ^
                          Utility_charat(s, 3)
                        : 0
                    ) {
                      case 5103:
                        return eh + "print-" + s + s;
                      case 5737:
                      case 4201:
                      case 3177:
                      case 3433:
                      case 1641:
                      case 4457:
                      case 2921:
                      case 5572:
                      case 6356:
                      case 5844:
                      case 3191:
                      case 6645:
                      case 3005:
                      case 6391:
                      case 5879:
                      case 5623:
                      case 6135:
                      case 4599:
                      case 4855:
                      case 4215:
                      case 6389:
                      case 5109:
                      case 5365:
                      case 5621:
                      case 3829:
                        return eh + s + s;
                      case 5349:
                      case 4246:
                      case 4810:
                      case 6968:
                      case 2756:
                        return eh + s + ed + s + eu + s + s;
                      case 6828:
                      case 4268:
                        return eh + s + eu + s + s;
                      case 6165:
                        return eh + s + eu + "flex-" + s + s;
                      case 5187:
                        return (
                          eh +
                          s +
                          Utility_replace(
                            s,
                            /(\w+).+(:[^]+)/,
                            eh + "box-$1$2" + eu + "flex-$1$2"
                          ) +
                          s
                        );
                      case 5443:
                        return (
                          eh +
                          s +
                          eu +
                          "flex-item-" +
                          Utility_replace(s, /flex-|-self/, "") +
                          s
                        );
                      case 4675:
                        return (
                          eh +
                          s +
                          eu +
                          "flex-line-pack" +
                          Utility_replace(s, /align-content|flex-|-self/, "") +
                          s
                        );
                      case 5548:
                        return (
                          eh +
                          s +
                          eu +
                          Utility_replace(s, "shrink", "negative") +
                          s
                        );
                      case 5292:
                        return (
                          eh +
                          s +
                          eu +
                          Utility_replace(s, "basis", "preferred-size") +
                          s
                        );
                      case 6060:
                        return (
                          eh +
                          "box-" +
                          Utility_replace(s, "-grow", "") +
                          eh +
                          s +
                          eu +
                          Utility_replace(s, "grow", "positive") +
                          s
                        );
                      case 4554:
                        return (
                          eh +
                          Utility_replace(
                            s,
                            /([^-])(transform)/g,
                            "$1" + eh + "$2"
                          ) +
                          s
                        );
                      case 6187:
                        return (
                          Utility_replace(
                            Utility_replace(
                              Utility_replace(s, /(zoom-|grab)/, eh + "$1"),
                              /(image-set)/,
                              eh + "$1"
                            ),
                            s,
                            ""
                          ) + s
                        );
                      case 5495:
                      case 3959:
                        return Utility_replace(
                          s,
                          /(image-set\([^]*)/,
                          eh + "$1$`$1"
                        );
                      case 4968:
                        return (
                          Utility_replace(
                            Utility_replace(
                              s,
                              /(.+:)(flex-)?(.*)/,
                              eh + "box-pack:$3" + eu + "flex-pack:$3"
                            ),
                            /s.+-b[^;]+/,
                            "justify"
                          ) +
                          eh +
                          s +
                          s
                        );
                      case 4095:
                      case 3583:
                      case 4068:
                      case 2532:
                        return (
                          Utility_replace(s, /(.+)-inline(.+)/, eh + "$1$2") + s
                        );
                      case 8116:
                      case 7059:
                      case 5753:
                      case 5535:
                      case 5445:
                      case 5701:
                      case 4933:
                      case 4677:
                      case 5533:
                      case 5789:
                      case 5021:
                      case 4765:
                        if (Utility_strlen(s) - 1 - x > 6)
                          switch (Utility_charat(s, x + 1)) {
                            case 109:
                              if (45 !== Utility_charat(s, x + 4)) break;
                            case 102:
                              return (
                                Utility_replace(
                                  s,
                                  /(.+:)(.+)-([^]+)/,
                                  "$1" +
                                    eh +
                                    "$2-$3$1" +
                                    ed +
                                    (108 == Utility_charat(s, x + 3)
                                      ? "$3"
                                      : "$2-$3")
                                ) + s
                              );
                            case 115:
                              return ~indexof(s, "stretch")
                                ? emotion_cache_browser_esm_prefix(
                                    Utility_replace(
                                      s,
                                      "stretch",
                                      "fill-available"
                                    ),
                                    x
                                  ) + s
                                : s;
                          }
                        break;
                      case 4949:
                        if (115 !== Utility_charat(s, x + 1)) break;
                      case 6444:
                        switch (
                          Utility_charat(
                            s,
                            Utility_strlen(s) -
                              3 -
                              (~indexof(s, "!important") && 10)
                          )
                        ) {
                          case 107:
                            return Utility_replace(s, ":", ":" + eh) + s;
                          case 101:
                            return (
                              Utility_replace(
                                s,
                                /(.+:)([^;!]+)(;|!.+)?/,
                                "$1" +
                                  eh +
                                  (45 === Utility_charat(s, 14)
                                    ? "inline-"
                                    : "") +
                                  "box$3$1" +
                                  eh +
                                  "$2$3$1" +
                                  eu +
                                  "$2box$3"
                              ) + s
                            );
                        }
                        break;
                      case 5936:
                        switch (Utility_charat(s, x + 11)) {
                          case 114:
                            return (
                              eh +
                              s +
                              eu +
                              Utility_replace(s, /[svh]\w+-[tblr]{2}/, "tb") +
                              s
                            );
                          case 108:
                            return (
                              eh +
                              s +
                              eu +
                              Utility_replace(
                                s,
                                /[svh]\w+-[tblr]{2}/,
                                "tb-rl"
                              ) +
                              s
                            );
                          case 45:
                            return (
                              eh +
                              s +
                              eu +
                              Utility_replace(s, /[svh]\w+-[tblr]{2}/, "lr") +
                              s
                            );
                        }
                        return eh + s + eu + s + s;
                    }
                    return s;
                  })(s.value, s.length);
                  break;
                case em:
                  return Serializer_serialize(
                    [
                      Tokenizer_copy(s, {
                        value: Utility_replace(s.value, "@", "@" + eh),
                      }),
                    ],
                    X
                  );
                case ef:
                  if (s.length)
                    return s.props
                      .map(function (x) {
                        var W;
                        switch (
                          ((W = x),
                          (W = /(::plac\w+|:read-\w+)/.exec(W)) ? W[0] : W)
                        ) {
                          case ":read-only":
                          case ":read-write":
                            return Serializer_serialize(
                              [
                                Tokenizer_copy(s, {
                                  props: [
                                    Utility_replace(
                                      x,
                                      /:(read-\w+)/,
                                      ":" + ed + "$1"
                                    ),
                                  ],
                                }),
                              ],
                              X
                            );
                          case "::placeholder":
                            return Serializer_serialize(
                              [
                                Tokenizer_copy(s, {
                                  props: [
                                    Utility_replace(
                                      x,
                                      /:(plac\w+)/,
                                      ":" + eh + "input-$1"
                                    ),
                                  ],
                                }),
                                Tokenizer_copy(s, {
                                  props: [
                                    Utility_replace(
                                      x,
                                      /:(plac\w+)/,
                                      ":" + ed + "$1"
                                    ),
                                  ],
                                }),
                                Tokenizer_copy(s, {
                                  props: [
                                    Utility_replace(
                                      x,
                                      /:(plac\w+)/,
                                      eu + "input-$1"
                                    ),
                                  ],
                                }),
                              ],
                              X
                            );
                        }
                        return "";
                      })
                      .join("");
              }
          },
        ],
        createCache = function (s) {
          var x,
            W,
            ee,
            er,
            ea,
            eu = s.key;
          if ("css" === eu) {
            var ed = document.querySelectorAll(
              "style[data-emotion]:not([data-s])"
            );
            Array.prototype.forEach.call(ed, function (s) {
              -1 !== s.getAttribute("data-emotion").indexOf(" ") &&
                (document.head.appendChild(s), s.setAttribute("data-s", ""));
            });
          }
          var eh = s.stylisPlugins || eb,
            ef = {},
            eg = [];
          (er = s.container || document.head),
            Array.prototype.forEach.call(
              document.querySelectorAll('style[data-emotion^="' + eu + ' "]'),
              function (s) {
                for (
                  var x = s.getAttribute("data-emotion").split(" "), W = 1;
                  W < x.length;
                  W++
                )
                  ef[x[W]] = !0;
                eg.push(s);
              }
            );
          var em =
              ((W = (x = [compat, removeLabel].concat(eh, [
                stringify,
                ((ee = function (s) {
                  ea.insert(s);
                }),
                function (s) {
                  !s.root && (s = s.return) && ee(s);
                }),
              ])).length),
              function (s, X, ee, et) {
                for (var er = "", ei = 0; ei < W; ei++)
                  er += x[ei](s, X, ee, et) || "";
                return er;
              }),
            stylis = function (s) {
              var x, W;
              return Serializer_serialize(
                ((W = (function parse(s, x, W, X, ee, er, ea, eu, ed) {
                  for (
                    var eh,
                      ef = 0,
                      eg = 0,
                      em = ea,
                      ew = 0,
                      eb = 0,
                      ev = 0,
                      ey = 1,
                      e_ = 1,
                      eC = 1,
                      ex = 0,
                      eE = "",
                      eA = ee,
                      eS = er,
                      ek = X,
                      eT = eE;
                    e_;

                  )
                    switch (((ev = ex), (ex = next()))) {
                      case 40:
                        if (108 != ev && 58 == Utility_charat(eT, em - 1)) {
                          -1 !=
                            indexof(
                              (eT += Utility_replace(delimit(ex), "&", "&\f")),
                              "&\f"
                            ) && (eC = -1);
                          break;
                        }
                      case 34:
                      case 39:
                      case 91:
                        eT += delimit(ex);
                        break;
                      case 9:
                      case 10:
                      case 13:
                      case 32:
                        eT += (function (s) {
                          for (; (el = peek()); )
                            if (el < 33) next();
                            else break;
                          return token(s) > 2 || token(el) > 3 ? "" : " ";
                        })(ev);
                        break;
                      case 92:
                        eT += (function (s, x) {
                          for (
                            var W;
                            --x &&
                            next() &&
                            !(el < 48) &&
                            !(el > 102) &&
                            (!(el > 57) || !(el < 65)) &&
                            (!(el > 70) || !(el < 97));

                          );
                          return (
                            (W = es + (x < 6 && 32 == peek() && 32 == next())),
                            Utility_substr(ec, s, W)
                          );
                        })(es - 1, 7);
                        continue;
                      case 47:
                        switch (peek()) {
                          case 42:
                          case 47:
                            Utility_append(
                              node(
                                (eh = (function (s, x) {
                                  for (; next(); )
                                    if (s + el === 57) break;
                                    else if (s + el === 84 && 47 === peek())
                                      break;
                                  return (
                                    "/*" +
                                    Utility_substr(ec, x, es - 1) +
                                    "*" +
                                    et(47 === s ? s : next())
                                  );
                                })(next(), es)),
                                x,
                                W,
                                ep,
                                et(el),
                                Utility_substr(eh, 2, -2),
                                0
                              ),
                              ed
                            );
                            break;
                          default:
                            eT += "/";
                        }
                        break;
                      case 123 * ey:
                        eu[ef++] = Utility_strlen(eT) * eC;
                      case 125 * ey:
                      case 59:
                      case 0:
                        switch (ex) {
                          case 0:
                          case 125:
                            e_ = 0;
                          case 59 + eg:
                            -1 == eC && (eT = Utility_replace(eT, /\f/g, "")),
                              eb > 0 &&
                                Utility_strlen(eT) - em &&
                                Utility_append(
                                  eb > 32
                                    ? declaration(eT + ";", X, W, em - 1)
                                    : declaration(
                                        Utility_replace(eT, " ", "") + ";",
                                        X,
                                        W,
                                        em - 2
                                      ),
                                  ed
                                );
                            break;
                          case 59:
                            eT += ";";
                          default:
                            if (
                              (Utility_append(
                                (ek = ruleset(
                                  eT,
                                  x,
                                  W,
                                  ef,
                                  eg,
                                  ee,
                                  eu,
                                  eE,
                                  (eA = []),
                                  (eS = []),
                                  em
                                )),
                                er
                              ),
                              123 === ex)
                            ) {
                              if (0 === eg)
                                parse(eT, x, ek, ek, eA, er, em, eu, eS);
                              else
                                switch (
                                  99 === ew && 110 === Utility_charat(eT, 3)
                                    ? 100
                                    : ew
                                ) {
                                  case 100:
                                  case 108:
                                  case 109:
                                  case 115:
                                    parse(
                                      s,
                                      ek,
                                      ek,
                                      X &&
                                        Utility_append(
                                          ruleset(
                                            s,
                                            ek,
                                            ek,
                                            0,
                                            0,
                                            ee,
                                            eu,
                                            eE,
                                            ee,
                                            (eA = []),
                                            em
                                          ),
                                          eS
                                        ),
                                      ee,
                                      eS,
                                      em,
                                      eu,
                                      X ? eA : eS
                                    );
                                    break;
                                  default:
                                    parse(eT, ek, ek, ek, [""], eS, 0, eu, eS);
                                }
                            }
                        }
                        (ef = eg = eb = 0),
                          (ey = eC = 1),
                          (eE = eT = ""),
                          (em = ea);
                        break;
                      case 58:
                        (em = 1 + Utility_strlen(eT)), (eb = ev);
                      default:
                        if (ey < 1) {
                          if (123 == ex) --ey;
                          else if (
                            125 == ex &&
                            0 == ey++ &&
                            125 ==
                              ((el = es > 0 ? Utility_charat(ec, --es) : 0),
                              eo--,
                              10 === el && ((eo = 1), ei--),
                              el)
                          )
                            continue;
                        }
                        switch (((eT += et(ex)), ex * ey)) {
                          case 38:
                            eC = eg > 0 ? 1 : ((eT += "\f"), -1);
                            break;
                          case 44:
                            (eu[ef++] = (Utility_strlen(eT) - 1) * eC),
                              (eC = 1);
                            break;
                          case 64:
                            45 === peek() && (eT += delimit(next())),
                              (ew = peek()),
                              (eg = em =
                                Utility_strlen(
                                  (eE = eT +=
                                    (function (s) {
                                      for (; !token(peek()); ) next();
                                      return Utility_substr(ec, s, es);
                                    })(es))
                                )),
                              ex++;
                            break;
                          case 45:
                            45 === ev && 2 == Utility_strlen(eT) && (ey = 0);
                        }
                    }
                  return er;
                })(
                  "",
                  null,
                  null,
                  null,
                  [""],
                  (x = alloc((x = s))),
                  0,
                  [0],
                  x
                )),
                (ec = ""),
                W),
                em
              );
            },
            ew = {
              key: eu,
              sheet: new X({
                key: eu,
                container: er,
                nonce: s.nonce,
                speedy: s.speedy,
                prepend: s.prepend,
                insertionPoint: s.insertionPoint,
              }),
              nonce: s.nonce,
              inserted: ef,
              registered: {},
              insert: function (s, x, W, X) {
                (ea = W),
                  stylis(s ? s + "{" + x.styles + "}" : x.styles),
                  X && (ew.inserted[x.name] = !0);
              },
            };
          return ew.sheet.hydrate(eg), ew;
        };
    },
    38741: function (s, x, W) {
      "use strict";
      W.d(x, {
        E: function () {
          return eu;
        },
        T: function () {
          return es;
        },
        c: function () {
          return createEmotionProps;
        },
        h: function () {
          return el;
        },
        i: function () {
          return eo;
        },
        w: function () {
          return withEmotionCache;
        },
      });
      var X = W(67294),
        ee = W(48711),
        et = W(70444),
        er = W(15953),
        ei = W(27278),
        eo = !1,
        ea = X.createContext(
          "undefined" != typeof HTMLElement ? (0, ee.Z)({ key: "css" }) : null
        );
      ea.Provider;
      var withEmotionCache = function (s) {
          return (0, X.forwardRef)(function (x, W) {
            return s(x, (0, X.useContext)(ea), W);
          });
        },
        es = X.createContext({}),
        el = {}.hasOwnProperty,
        ec = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__",
        createEmotionProps = function (s, x) {
          var W = {};
          for (var X in x) el.call(x, X) && (W[X] = x[X]);
          return (W[ec] = s), W;
        },
        Insertion = function (s) {
          var x = s.cache,
            W = s.serialized,
            X = s.isStringTag;
          return (
            (0, et.hC)(x, W, X),
            (0, ei.L)(function () {
              return (0, et.My)(x, W, X);
            }),
            null
          );
        },
        eu = withEmotionCache(function (s, x, W) {
          var ee = s.css;
          "string" == typeof ee &&
            void 0 !== x.registered[ee] &&
            (ee = x.registered[ee]);
          var ei = s[ec],
            ea = [ee],
            eu = "";
          "string" == typeof s.className
            ? (eu = (0, et.fp)(x.registered, ea, s.className))
            : null != s.className && (eu = s.className + " ");
          var ed = (0, er.O)(ea, void 0, X.useContext(es));
          eu += x.key + "-" + ed.name;
          var eh = {};
          for (var ep in s)
            el.call(s, ep) &&
              "css" !== ep &&
              ep !== ec &&
              !eo &&
              (eh[ep] = s[ep]);
          return (
            (eh.className = eu),
            W && (eh.ref = W),
            X.createElement(
              X.Fragment,
              null,
              X.createElement(Insertion, {
                cache: x,
                serialized: ed,
                isStringTag: "string" == typeof ei,
              }),
              X.createElement(ei, eh)
            )
          );
        });
    },
    70917: function (s, x, W) {
      "use strict";
      W.d(x, {
        F4: function () {
          return keyframes;
        },
        iv: function () {
          return css;
        },
        ms: function () {
          return eo;
        },
      });
      var X = W(38741),
        ee = W(67294),
        et = W(70444),
        er = W(27278),
        ei = W(15953);
      function css() {
        for (var s = arguments.length, x = Array(s), W = 0; W < s; W++)
          x[W] = arguments[W];
        return (0, ei.O)(x);
      }
      W(48711), W(8679);
      var keyframes = function () {
          var s = css.apply(void 0, arguments),
            x = "animation-" + s.name;
          return {
            name: x,
            styles: "@keyframes " + x + "{" + s.styles + "}",
            anim: 1,
            toString: function () {
              return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
            },
          };
        },
        classnames = function classnames(s) {
          for (var x = s.length, W = 0, X = ""; W < x; W++) {
            var ee = s[W];
            if (null != ee) {
              var et = void 0;
              switch (typeof ee) {
                case "boolean":
                  break;
                case "object":
                  if (Array.isArray(ee)) et = classnames(ee);
                  else
                    for (var er in ((et = ""), ee))
                      ee[er] && er && (et && (et += " "), (et += er));
                  break;
                default:
                  et = ee;
              }
              et && (X && (X += " "), (X += et));
            }
          }
          return X;
        },
        Insertion = function (s) {
          var x = s.cache,
            W = s.serializedArr;
          return (
            (0, er.L)(function () {
              for (var s = 0; s < W.length; s++) (0, et.My)(x, W[s], !1);
            }),
            null
          );
        },
        eo = (0, X.w)(function (s, x) {
          var W = !1,
            er = [],
            css = function () {
              if (W && X.i) throw Error("css can only be used during render");
              for (
                var s = arguments.length, ee = Array(s), eo = 0;
                eo < s;
                eo++
              )
                ee[eo] = arguments[eo];
              var ea = (0, ei.O)(ee, x.registered);
              return er.push(ea), (0, et.hC)(x, ea, !1), x.key + "-" + ea.name;
            },
            eo = {
              css: css,
              cx: function () {
                if (W && X.i) throw Error("cx can only be used during render");
                for (
                  var s,
                    ee,
                    er,
                    ei,
                    eo = arguments.length,
                    ea = Array(eo),
                    es = 0;
                  es < eo;
                  es++
                )
                  ea[es] = arguments[es];
                return (
                  (s = x.registered),
                  (ee = classnames(ea)),
                  (er = []),
                  (ei = (0, et.fp)(s, er, ee)),
                  er.length < 2 ? ee : ei + css(er)
                );
              },
              theme: ee.useContext(X.T),
            },
            ea = s.children(eo);
          return (
            (W = !0),
            ee.createElement(
              ee.Fragment,
              null,
              ee.createElement(Insertion, { cache: x, serializedArr: er }),
              ea
            )
          );
        });
    },
    15953: function (s, x, W) {
      "use strict";
      W.d(x, {
        O: function () {
          return serializeStyles;
        },
      });
      var X,
        ee,
        et = {
          animationIterationCount: 1,
          aspectRatio: 1,
          borderImageOutset: 1,
          borderImageSlice: 1,
          borderImageWidth: 1,
          boxFlex: 1,
          boxFlexGroup: 1,
          boxOrdinalGroup: 1,
          columnCount: 1,
          columns: 1,
          flex: 1,
          flexGrow: 1,
          flexPositive: 1,
          flexShrink: 1,
          flexNegative: 1,
          flexOrder: 1,
          gridRow: 1,
          gridRowEnd: 1,
          gridRowSpan: 1,
          gridRowStart: 1,
          gridColumn: 1,
          gridColumnEnd: 1,
          gridColumnSpan: 1,
          gridColumnStart: 1,
          msGridRow: 1,
          msGridRowSpan: 1,
          msGridColumn: 1,
          msGridColumnSpan: 1,
          fontWeight: 1,
          lineHeight: 1,
          opacity: 1,
          order: 1,
          orphans: 1,
          scale: 1,
          tabSize: 1,
          widows: 1,
          zIndex: 1,
          zoom: 1,
          WebkitLineClamp: 1,
          fillOpacity: 1,
          floodOpacity: 1,
          stopOpacity: 1,
          strokeDasharray: 1,
          strokeDashoffset: 1,
          strokeMiterlimit: 1,
          strokeOpacity: 1,
          strokeWidth: 1,
        },
        er = /[A-Z]|^ms/g,
        ei = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
        isCustomProperty = function (s) {
          return 45 === s.charCodeAt(1);
        },
        isProcessableValue = function (s) {
          return null != s && "boolean" != typeof s;
        },
        eo =
          ((X = Object.create(null)),
          function (s) {
            return (
              void 0 === X[s] &&
                (X[s] = isCustomProperty(s)
                  ? s
                  : s.replace(er, "-$&").toLowerCase()),
              X[s]
            );
          }),
        processStyleValue = function (s, x) {
          switch (s) {
            case "animation":
            case "animationName":
              if ("string" == typeof x)
                return x.replace(ei, function (s, x, W) {
                  return (ee = { name: x, styles: W, next: ee }), x;
                });
          }
          return 1 === et[s] ||
            isCustomProperty(s) ||
            "number" != typeof x ||
            0 === x
            ? x
            : x + "px";
        };
      function handleInterpolation(s, x, W) {
        if (null == W) return "";
        if (void 0 !== W.__emotion_styles) return W;
        switch (typeof W) {
          case "boolean":
            return "";
          case "object":
            if (1 === W.anim)
              return (
                (ee = { name: W.name, styles: W.styles, next: ee }), W.name
              );
            if (void 0 !== W.styles) {
              var X = W.next;
              if (void 0 !== X)
                for (; void 0 !== X; )
                  (ee = { name: X.name, styles: X.styles, next: ee }),
                    (X = X.next);
              return W.styles + ";";
            }
            return (function (s, x, W) {
              var X = "";
              if (Array.isArray(W))
                for (var ee = 0; ee < W.length; ee++)
                  X += handleInterpolation(s, x, W[ee]) + ";";
              else
                for (var et in W) {
                  var er = W[et];
                  if ("object" != typeof er)
                    null != x && void 0 !== x[er]
                      ? (X += et + "{" + x[er] + "}")
                      : isProcessableValue(er) &&
                        (X += eo(et) + ":" + processStyleValue(et, er) + ";");
                  else if (
                    Array.isArray(er) &&
                    "string" == typeof er[0] &&
                    (null == x || void 0 === x[er[0]])
                  )
                    for (var ei = 0; ei < er.length; ei++)
                      isProcessableValue(er[ei]) &&
                        (X +=
                          eo(et) + ":" + processStyleValue(et, er[ei]) + ";");
                  else {
                    var ea = handleInterpolation(s, x, er);
                    switch (et) {
                      case "animation":
                      case "animationName":
                        X += eo(et) + ":" + ea + ";";
                        break;
                      default:
                        X += et + "{" + ea + "}";
                    }
                  }
                }
              return X;
            })(s, x, W);
          case "function":
            if (void 0 !== s) {
              var et = ee,
                er = W(s);
              return (ee = et), handleInterpolation(s, x, er);
            }
        }
        if (null == x) return W;
        var ei = x[W];
        return void 0 !== ei ? ei : W;
      }
      var ea = /label:\s*([^\s;{]+)\s*(;|$)/g;
      function serializeStyles(s, x, W) {
        if (
          1 === s.length &&
          "object" == typeof s[0] &&
          null !== s[0] &&
          void 0 !== s[0].styles
        )
          return s[0];
        var X,
          et = !0,
          er = "";
        ee = void 0;
        var ei = s[0];
        null == ei || void 0 === ei.raw
          ? ((et = !1), (er += handleInterpolation(W, x, ei)))
          : (er += ei[0]);
        for (var eo = 1; eo < s.length; eo++)
          (er += handleInterpolation(W, x, s[eo])), et && (er += ei[eo]);
        ea.lastIndex = 0;
        for (var es = ""; null !== (X = ea.exec(er)); ) es += "-" + X[1];
        return {
          name:
            (function (s) {
              for (var x, W = 0, X = 0, ee = s.length; ee >= 4; ++X, ee -= 4)
                (x =
                  (65535 &
                    (x =
                      (255 & s.charCodeAt(X)) |
                      ((255 & s.charCodeAt(++X)) << 8) |
                      ((255 & s.charCodeAt(++X)) << 16) |
                      ((255 & s.charCodeAt(++X)) << 24))) *
                    1540483477 +
                  (((x >>> 16) * 59797) << 16)),
                  (x ^= x >>> 24),
                  (W =
                    ((65535 & x) * 1540483477 + (((x >>> 16) * 59797) << 16)) ^
                    ((65535 & W) * 1540483477 + (((W >>> 16) * 59797) << 16)));
              switch (ee) {
                case 3:
                  W ^= (255 & s.charCodeAt(X + 2)) << 16;
                case 2:
                  W ^= (255 & s.charCodeAt(X + 1)) << 8;
                case 1:
                  (W ^= 255 & s.charCodeAt(X)),
                    (W =
                      (65535 & W) * 1540483477 + (((W >>> 16) * 59797) << 16));
              }
              return (
                (W ^= W >>> 13),
                (
                  ((W =
                    (65535 & W) * 1540483477 + (((W >>> 16) * 59797) << 16)) ^
                    (W >>> 15)) >>>
                  0
                ).toString(36)
              );
            })(er) + es,
          styles: er,
          next: ee,
        };
      }
    },
    27278: function (s, x, W) {
      "use strict";
      W.d(x, {
        L: function () {
          return er;
        },
      });
      var X,
        ee = W(67294),
        et =
          !!(X || (X = W.t(ee, 2))).useInsertionEffect &&
          (X || (X = W.t(ee, 2))).useInsertionEffect,
        er =
          et ||
          function (s) {
            return s();
          };
      et || ee.useLayoutEffect;
    },
    70444: function (s, x, W) {
      "use strict";
      function getRegisteredStyles(s, x, W) {
        var X = "";
        return (
          W.split(" ").forEach(function (W) {
            void 0 !== s[W] ? x.push(s[W] + ";") : W && (X += W + " ");
          }),
          X
        );
      }
      W.d(x, {
        My: function () {
          return insertStyles;
        },
        fp: function () {
          return getRegisteredStyles;
        },
        hC: function () {
          return registerStyles;
        },
      });
      var registerStyles = function (s, x, W) {
          var X = s.key + "-" + x.name;
          !1 === W &&
            void 0 === s.registered[X] &&
            (s.registered[X] = x.styles);
        },
        insertStyles = function (s, x, W) {
          registerStyles(s, x, W);
          var X = s.key + "-" + x.name;
          if (void 0 === s.inserted[x.name]) {
            var ee = x;
            do
              s.insert(x === ee ? "." + X : "", ee, s.sheet, !0),
                (ee = ee.next);
            while (void 0 !== ee);
          }
        };
    },
    98099: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X = W(97117);
      function writeUint16BE(s, x, W) {
        return (
          void 0 === x && (x = new Uint8Array(2)),
          void 0 === W && (W = 0),
          (x[W + 0] = s >>> 8),
          (x[W + 1] = s >>> 0),
          x
        );
      }
      function writeUint16LE(s, x, W) {
        return (
          void 0 === x && (x = new Uint8Array(2)),
          void 0 === W && (W = 0),
          (x[W + 0] = s >>> 0),
          (x[W + 1] = s >>> 8),
          x
        );
      }
      function readInt32BE(s, x) {
        return (
          void 0 === x && (x = 0),
          (s[x] << 24) | (s[x + 1] << 16) | (s[x + 2] << 8) | s[x + 3]
        );
      }
      function readUint32BE(s, x) {
        return (
          void 0 === x && (x = 0),
          ((s[x] << 24) | (s[x + 1] << 16) | (s[x + 2] << 8) | s[x + 3]) >>> 0
        );
      }
      function readInt32LE(s, x) {
        return (
          void 0 === x && (x = 0),
          (s[x + 3] << 24) | (s[x + 2] << 16) | (s[x + 1] << 8) | s[x]
        );
      }
      function readUint32LE(s, x) {
        return (
          void 0 === x && (x = 0),
          ((s[x + 3] << 24) | (s[x + 2] << 16) | (s[x + 1] << 8) | s[x]) >>> 0
        );
      }
      function writeUint32BE(s, x, W) {
        return (
          void 0 === x && (x = new Uint8Array(4)),
          void 0 === W && (W = 0),
          (x[W + 0] = s >>> 24),
          (x[W + 1] = s >>> 16),
          (x[W + 2] = s >>> 8),
          (x[W + 3] = s >>> 0),
          x
        );
      }
      function writeUint32LE(s, x, W) {
        return (
          void 0 === x && (x = new Uint8Array(4)),
          void 0 === W && (W = 0),
          (x[W + 0] = s >>> 0),
          (x[W + 1] = s >>> 8),
          (x[W + 2] = s >>> 16),
          (x[W + 3] = s >>> 24),
          x
        );
      }
      function writeUint64BE(s, x, W) {
        return (
          void 0 === x && (x = new Uint8Array(8)),
          void 0 === W && (W = 0),
          writeUint32BE((s / 4294967296) >>> 0, x, W),
          writeUint32BE(s >>> 0, x, W + 4),
          x
        );
      }
      function writeUint64LE(s, x, W) {
        return (
          void 0 === x && (x = new Uint8Array(8)),
          void 0 === W && (W = 0),
          writeUint32LE(s >>> 0, x, W),
          writeUint32LE((s / 4294967296) >>> 0, x, W + 4),
          x
        );
      }
      (x.readInt16BE = function (s, x) {
        return (
          void 0 === x && (x = 0), (((s[x + 0] << 8) | s[x + 1]) << 16) >> 16
        );
      }),
        (x.readUint16BE = function (s, x) {
          return void 0 === x && (x = 0), ((s[x + 0] << 8) | s[x + 1]) >>> 0;
        }),
        (x.readInt16LE = function (s, x) {
          return (
            void 0 === x && (x = 0), (((s[x + 1] << 8) | s[x]) << 16) >> 16
          );
        }),
        (x.readUint16LE = function (s, x) {
          return void 0 === x && (x = 0), ((s[x + 1] << 8) | s[x]) >>> 0;
        }),
        (x.writeUint16BE = writeUint16BE),
        (x.writeInt16BE = writeUint16BE),
        (x.writeUint16LE = writeUint16LE),
        (x.writeInt16LE = writeUint16LE),
        (x.readInt32BE = readInt32BE),
        (x.readUint32BE = readUint32BE),
        (x.readInt32LE = readInt32LE),
        (x.readUint32LE = readUint32LE),
        (x.writeUint32BE = writeUint32BE),
        (x.writeInt32BE = writeUint32BE),
        (x.writeUint32LE = writeUint32LE),
        (x.writeInt32LE = writeUint32LE),
        (x.readInt64BE = function (s, x) {
          void 0 === x && (x = 0);
          var W = readInt32BE(s, x),
            X = readInt32BE(s, x + 4);
          return 4294967296 * W + X - (X >> 31) * 4294967296;
        }),
        (x.readUint64BE = function (s, x) {
          return (
            void 0 === x && (x = 0),
            4294967296 * readUint32BE(s, x) + readUint32BE(s, x + 4)
          );
        }),
        (x.readInt64LE = function (s, x) {
          void 0 === x && (x = 0);
          var W = readInt32LE(s, x);
          return (
            4294967296 * readInt32LE(s, x + 4) + W - (W >> 31) * 4294967296
          );
        }),
        (x.readUint64LE = function (s, x) {
          void 0 === x && (x = 0);
          var W = readUint32LE(s, x);
          return 4294967296 * readUint32LE(s, x + 4) + W;
        }),
        (x.writeUint64BE = writeUint64BE),
        (x.writeInt64BE = writeUint64BE),
        (x.writeUint64LE = writeUint64LE),
        (x.writeInt64LE = writeUint64LE),
        (x.readUintBE = function (s, x, W) {
          if ((void 0 === W && (W = 0), s % 8 != 0))
            throw Error("readUintBE supports only bitLengths divisible by 8");
          if (s / 8 > x.length - W)
            throw Error(
              "readUintBE: array is too short for the given bitLength"
            );
          for (var X = 0, ee = 1, et = s / 8 + W - 1; et >= W; et--)
            (X += x[et] * ee), (ee *= 256);
          return X;
        }),
        (x.readUintLE = function (s, x, W) {
          if ((void 0 === W && (W = 0), s % 8 != 0))
            throw Error("readUintLE supports only bitLengths divisible by 8");
          if (s / 8 > x.length - W)
            throw Error(
              "readUintLE: array is too short for the given bitLength"
            );
          for (var X = 0, ee = 1, et = W; et < W + s / 8; et++)
            (X += x[et] * ee), (ee *= 256);
          return X;
        }),
        (x.writeUintBE = function (s, x, W, ee) {
          if (
            (void 0 === W && (W = new Uint8Array(s / 8)),
            void 0 === ee && (ee = 0),
            s % 8 != 0)
          )
            throw Error("writeUintBE supports only bitLengths divisible by 8");
          if (!X.isSafeInteger(x))
            throw Error("writeUintBE value must be an integer");
          for (var et = 1, er = s / 8 + ee - 1; er >= ee; er--)
            (W[er] = (x / et) & 255), (et *= 256);
          return W;
        }),
        (x.writeUintLE = function (s, x, W, ee) {
          if (
            (void 0 === W && (W = new Uint8Array(s / 8)),
            void 0 === ee && (ee = 0),
            s % 8 != 0)
          )
            throw Error("writeUintLE supports only bitLengths divisible by 8");
          if (!X.isSafeInteger(x))
            throw Error("writeUintLE value must be an integer");
          for (var et = 1, er = ee; er < ee + s / 8; er++)
            (W[er] = (x / et) & 255), (et *= 256);
          return W;
        }),
        (x.readFloat32BE = function (s, x) {
          return (
            void 0 === x && (x = 0),
            new DataView(s.buffer, s.byteOffset, s.byteLength).getFloat32(x)
          );
        }),
        (x.readFloat32LE = function (s, x) {
          return (
            void 0 === x && (x = 0),
            new DataView(s.buffer, s.byteOffset, s.byteLength).getFloat32(x, !0)
          );
        }),
        (x.readFloat64BE = function (s, x) {
          return (
            void 0 === x && (x = 0),
            new DataView(s.buffer, s.byteOffset, s.byteLength).getFloat64(x)
          );
        }),
        (x.readFloat64LE = function (s, x) {
          return (
            void 0 === x && (x = 0),
            new DataView(s.buffer, s.byteOffset, s.byteLength).getFloat64(x, !0)
          );
        }),
        (x.writeFloat32BE = function (s, x, W) {
          return (
            void 0 === x && (x = new Uint8Array(4)),
            void 0 === W && (W = 0),
            new DataView(x.buffer, x.byteOffset, x.byteLength).setFloat32(W, s),
            x
          );
        }),
        (x.writeFloat32LE = function (s, x, W) {
          return (
            void 0 === x && (x = new Uint8Array(4)),
            void 0 === W && (W = 0),
            new DataView(x.buffer, x.byteOffset, x.byteLength).setFloat32(
              W,
              s,
              !0
            ),
            x
          );
        }),
        (x.writeFloat64BE = function (s, x, W) {
          return (
            void 0 === x && (x = new Uint8Array(8)),
            void 0 === W && (W = 0),
            new DataView(x.buffer, x.byteOffset, x.byteLength).setFloat64(W, s),
            x
          );
        }),
        (x.writeFloat64LE = function (s, x, W) {
          return (
            void 0 === x && (x = new Uint8Array(8)),
            void 0 === W && (W = 0),
            new DataView(x.buffer, x.byteOffset, x.byteLength).setFloat64(
              W,
              s,
              !0
            ),
            x
          );
        });
    },
    15501: function (s, x, W) {
      "use strict";
      var X = W(25439),
        ee = W(63027),
        et = W(17309),
        er = W(98099),
        ei = W(4153);
      (x.Cv = 32), (x.WH = 12), (x.pg = 16);
      var eo = new Uint8Array(16),
        ea = (function () {
          function ChaCha20Poly1305(s) {
            if (
              ((this.nonceLength = x.WH),
              (this.tagLength = x.pg),
              s.length !== x.Cv)
            )
              throw Error("ChaCha20Poly1305 needs 32-byte key");
            this._key = new Uint8Array(s);
          }
          return (
            (ChaCha20Poly1305.prototype.seal = function (s, x, W, ee) {
              if (s.length > 16)
                throw Error("ChaCha20Poly1305: incorrect nonce length");
              var er,
                ei = new Uint8Array(16);
              ei.set(s, ei.length - s.length);
              var eo = new Uint8Array(32);
              X.stream(this._key, ei, eo, 4);
              var ea = x.length + this.tagLength;
              if (ee) {
                if (ee.length !== ea)
                  throw Error("ChaCha20Poly1305: incorrect destination length");
                er = ee;
              } else er = new Uint8Array(ea);
              return (
                X.streamXOR(this._key, ei, x, er, 4),
                this._authenticate(
                  er.subarray(er.length - this.tagLength, er.length),
                  eo,
                  er.subarray(0, er.length - this.tagLength),
                  W
                ),
                et.wipe(ei),
                er
              );
            }),
            (ChaCha20Poly1305.prototype.open = function (s, x, W, ee) {
              if (s.length > 16)
                throw Error("ChaCha20Poly1305: incorrect nonce length");
              if (x.length < this.tagLength) return null;
              var er,
                eo = new Uint8Array(16);
              eo.set(s, eo.length - s.length);
              var ea = new Uint8Array(32);
              X.stream(this._key, eo, ea, 4);
              var es = new Uint8Array(this.tagLength);
              if (
                (this._authenticate(
                  es,
                  ea,
                  x.subarray(0, x.length - this.tagLength),
                  W
                ),
                !ei.equal(es, x.subarray(x.length - this.tagLength, x.length)))
              )
                return null;
              var el = x.length - this.tagLength;
              if (ee) {
                if (ee.length !== el)
                  throw Error("ChaCha20Poly1305: incorrect destination length");
                er = ee;
              } else er = new Uint8Array(el);
              return (
                X.streamXOR(
                  this._key,
                  eo,
                  x.subarray(0, x.length - this.tagLength),
                  er,
                  4
                ),
                et.wipe(eo),
                er
              );
            }),
            (ChaCha20Poly1305.prototype.clean = function () {
              return et.wipe(this._key), this;
            }),
            (ChaCha20Poly1305.prototype._authenticate = function (s, x, W, X) {
              var ei = new ee.Poly1305(x);
              X &&
                (ei.update(X),
                X.length % 16 > 0 && ei.update(eo.subarray(X.length % 16))),
                ei.update(W),
                W.length % 16 > 0 && ei.update(eo.subarray(W.length % 16));
              var ea = new Uint8Array(8);
              X && er.writeUint64LE(X.length, ea),
                ei.update(ea),
                er.writeUint64LE(W.length, ea),
                ei.update(ea);
              for (var es = ei.digest(), el = 0; el < es.length; el++)
                s[el] = es[el];
              ei.clean(), et.wipe(es), et.wipe(ea);
            }),
            ChaCha20Poly1305
          );
        })();
      x.OK = ea;
    },
    25439: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X = W(98099),
        ee = W(17309);
      function streamXOR(s, x, W, et, er) {
        if ((void 0 === er && (er = 0), 32 !== s.length))
          throw Error("ChaCha: key size must be 32 bytes");
        if (et.length < W.length)
          throw Error("ChaCha: destination is shorter than source");
        if (0 === er) {
          if (8 !== x.length && 12 !== x.length)
            throw Error("ChaCha nonce must be 8 or 12 bytes");
          (eo = (ei = new Uint8Array(16)).length - x.length), ei.set(x, eo);
        } else {
          if (16 !== x.length)
            throw Error("ChaCha nonce with counter must be 16 bytes");
          (ei = x), (eo = er);
        }
        for (
          var ei, eo, ea = new Uint8Array(64), es = 0;
          es < W.length;
          es += 64
        ) {
          !(function (s, x, W) {
            for (
              var ee = (W[3] << 24) | (W[2] << 16) | (W[1] << 8) | W[0],
                et = (W[7] << 24) | (W[6] << 16) | (W[5] << 8) | W[4],
                er = (W[11] << 24) | (W[10] << 16) | (W[9] << 8) | W[8],
                ei = (W[15] << 24) | (W[14] << 16) | (W[13] << 8) | W[12],
                eo = (W[19] << 24) | (W[18] << 16) | (W[17] << 8) | W[16],
                ea = (W[23] << 24) | (W[22] << 16) | (W[21] << 8) | W[20],
                es = (W[27] << 24) | (W[26] << 16) | (W[25] << 8) | W[24],
                el = (W[31] << 24) | (W[30] << 16) | (W[29] << 8) | W[28],
                ec = (x[3] << 24) | (x[2] << 16) | (x[1] << 8) | x[0],
                eu = (x[7] << 24) | (x[6] << 16) | (x[5] << 8) | x[4],
                ed = (x[11] << 24) | (x[10] << 16) | (x[9] << 8) | x[8],
                eh = (x[15] << 24) | (x[14] << 16) | (x[13] << 8) | x[12],
                ep = 1634760805,
                ef = 857760878,
                eg = 2036477234,
                em = 1797285236,
                ew = ee,
                eb = et,
                ev = er,
                ey = ei,
                e_ = eo,
                eC = ea,
                ex = es,
                eE = el,
                eA = ec,
                eS = eu,
                ek = ed,
                eT = eh,
                eI = 0;
              eI < 20;
              eI += 2
            )
              (eA ^= ep = (ep + ew) | 0),
                (ew ^= e_ = (e_ + (eA = (eA >>> 16) | (eA << 16))) | 0),
                (ew = (ew >>> 20) | (ew << 12)),
                (eS ^= ef = (ef + eb) | 0),
                (eb ^= eC = (eC + (eS = (eS >>> 16) | (eS << 16))) | 0),
                (eb = (eb >>> 20) | (eb << 12)),
                (ek ^= eg = (eg + ev) | 0),
                (ev ^= ex = (ex + (ek = (ek >>> 16) | (ek << 16))) | 0),
                (ev = (ev >>> 20) | (ev << 12)),
                (eT ^= em = (em + ey) | 0),
                (ey ^= eE = (eE + (eT = (eT >>> 16) | (eT << 16))) | 0),
                (ey = (ey >>> 20) | (ey << 12)),
                (ek ^= eg = (eg + ev) | 0),
                (ev ^= ex = (ex + (ek = (ek >>> 24) | (ek << 8))) | 0),
                (ev = (ev >>> 25) | (ev << 7)),
                (eT ^= em = (em + ey) | 0),
                (ey ^= eE = (eE + (eT = (eT >>> 24) | (eT << 8))) | 0),
                (ey = (ey >>> 25) | (ey << 7)),
                (eS ^= ef = (ef + eb) | 0),
                (eb ^= eC = (eC + (eS = (eS >>> 24) | (eS << 8))) | 0),
                (eb = (eb >>> 25) | (eb << 7)),
                (eA ^= ep = (ep + ew) | 0),
                (ew ^= e_ = (e_ + (eA = (eA >>> 24) | (eA << 8))) | 0),
                (ew = (ew >>> 25) | (ew << 7)),
                (eT ^= ep = (ep + eb) | 0),
                (eb ^= ex = (ex + (eT = (eT >>> 16) | (eT << 16))) | 0),
                (eb = (eb >>> 20) | (eb << 12)),
                (eA ^= ef = (ef + ev) | 0),
                (ev ^= eE = (eE + (eA = (eA >>> 16) | (eA << 16))) | 0),
                (ev = (ev >>> 20) | (ev << 12)),
                (eS ^= eg = (eg + ey) | 0),
                (ey ^= e_ = (e_ + (eS = (eS >>> 16) | (eS << 16))) | 0),
                (ey = (ey >>> 20) | (ey << 12)),
                (ek ^= em = (em + ew) | 0),
                (ew ^= eC = (eC + (ek = (ek >>> 16) | (ek << 16))) | 0),
                (ew = (ew >>> 20) | (ew << 12)),
                (eS ^= eg = (eg + ey) | 0),
                (ey ^= e_ = (e_ + (eS = (eS >>> 24) | (eS << 8))) | 0),
                (ey = (ey >>> 25) | (ey << 7)),
                (ek ^= em = (em + ew) | 0),
                (ew ^= eC = (eC + (ek = (ek >>> 24) | (ek << 8))) | 0),
                (ew = (ew >>> 25) | (ew << 7)),
                (eA ^= ef = (ef + ev) | 0),
                (ev ^= eE = (eE + (eA = (eA >>> 24) | (eA << 8))) | 0),
                (ev = (ev >>> 25) | (ev << 7)),
                (eT ^= ep = (ep + eb) | 0),
                (eb ^= ex = (ex + (eT = (eT >>> 24) | (eT << 8))) | 0),
                (eb = (eb >>> 25) | (eb << 7));
            X.writeUint32LE((ep + 1634760805) | 0, s, 0),
              X.writeUint32LE((ef + 857760878) | 0, s, 4),
              X.writeUint32LE((eg + 2036477234) | 0, s, 8),
              X.writeUint32LE((em + 1797285236) | 0, s, 12),
              X.writeUint32LE((ew + ee) | 0, s, 16),
              X.writeUint32LE((eb + et) | 0, s, 20),
              X.writeUint32LE((ev + er) | 0, s, 24),
              X.writeUint32LE((ey + ei) | 0, s, 28),
              X.writeUint32LE((e_ + eo) | 0, s, 32),
              X.writeUint32LE((eC + ea) | 0, s, 36),
              X.writeUint32LE((ex + es) | 0, s, 40),
              X.writeUint32LE((eE + el) | 0, s, 44),
              X.writeUint32LE((eA + ec) | 0, s, 48),
              X.writeUint32LE((eS + eu) | 0, s, 52),
              X.writeUint32LE((ek + ed) | 0, s, 56),
              X.writeUint32LE((eT + eh) | 0, s, 60);
          })(ea, ei, s);
          for (var el = es; el < es + 64 && el < W.length; el++)
            et[el] = W[el] ^ ea[el - es];
          !(function (s, x, W) {
            for (var X = 1; W--; )
              (X = (X + (255 & s[x])) | 0), (s[x] = 255 & X), (X >>>= 8), x++;
            if (X > 0) throw Error("ChaCha: counter overflow");
          })(ei, 0, eo);
        }
        return ee.wipe(ea), 0 === er && ee.wipe(ei), et;
      }
      (x.streamXOR = streamXOR),
        (x.stream = function (s, x, W, X) {
          return void 0 === X && (X = 0), ee.wipe(W), streamXOR(s, x, W, W, X);
        });
    },
    4153: function (s, x) {
      "use strict";
      function compare(s, x) {
        if (s.length !== x.length) return 0;
        for (var W = 0, X = 0; X < s.length; X++) W |= s[X] ^ x[X];
        return 1 & ((W - 1) >>> 8);
      }
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.select = function (s, x, W) {
          return (~(s - 1) & x) | ((s - 1) & W);
        }),
        (x.lessOrEqual = function (s, x) {
          return (((0 | s) - (0 | x) - 1) >>> 31) & 1;
        }),
        (x.compare = compare),
        (x.equal = function (s, x) {
          return 0 !== s.length && 0 !== x.length && 0 !== compare(s, x);
        });
    },
    31050: function (s, x, W) {
      "use strict";
      (x.Xx = x._w = x.aP = x.KS = x.jQ = void 0), W(31416);
      let X = W(93350);
      function gf(s) {
        let x = new Float64Array(16);
        if (s) for (let W = 0; W < s.length; W++) x[W] = s[W];
        return x;
      }
      W(17309), (x.jQ = 64), (x.KS = 64), (x.aP = 32);
      let ee = new Uint8Array(32);
      ee[0] = 9;
      let et = gf(),
        er = gf([1]),
        ei =
          (gf([
            30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585,
            16505, 36039, 65139, 11119, 27886, 20995,
          ]),
          gf([
            61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171,
            33010, 6542, 64743, 22239, 55772, 9222,
          ])),
        eo = gf([
          54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982,
          57905, 49316, 21502, 52590, 14035, 8553,
        ]),
        ea = gf([
          26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214,
          26214, 26214, 26214, 26214, 26214, 26214,
        ]);
      function set25519(s, x) {
        for (let W = 0; W < 16; W++) s[W] = 0 | x[W];
      }
      function car25519(s) {
        let x = 1;
        for (let W = 0; W < 16; W++) {
          let X = s[W] + x + 65535;
          (x = Math.floor(X / 65536)), (s[W] = X - 65536 * x);
        }
        s[0] += x - 1 + 37 * (x - 1);
      }
      function sel25519(s, x, W) {
        let X = ~(W - 1);
        for (let W = 0; W < 16; W++) {
          let ee = X & (s[W] ^ x[W]);
          (s[W] ^= ee), (x[W] ^= ee);
        }
      }
      function pack25519(s, x) {
        let W = gf(),
          X = gf();
        for (let s = 0; s < 16; s++) X[s] = x[s];
        car25519(X), car25519(X), car25519(X);
        for (let s = 0; s < 2; s++) {
          W[0] = X[0] - 65517;
          for (let s = 1; s < 15; s++)
            (W[s] = X[s] - 65535 - ((W[s - 1] >> 16) & 1)), (W[s - 1] &= 65535);
          W[15] = X[15] - 32767 - ((W[14] >> 16) & 1);
          let s = (W[15] >> 16) & 1;
          (W[14] &= 65535), sel25519(X, W, 1 - s);
        }
        for (let x = 0; x < 16; x++)
          (s[2 * x] = 255 & X[x]), (s[2 * x + 1] = X[x] >> 8);
      }
      gf([
        41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153,
        11085, 57099, 20417, 9344, 11139,
      ]);
      function add(s, x, W) {
        for (let X = 0; X < 16; X++) s[X] = x[X] + W[X];
      }
      function sub(s, x, W) {
        for (let X = 0; X < 16; X++) s[X] = x[X] - W[X];
      }
      function mul(s, x, W) {
        let X,
          ee,
          et = 0,
          er = 0,
          ei = 0,
          eo = 0,
          ea = 0,
          es = 0,
          el = 0,
          ec = 0,
          eu = 0,
          ed = 0,
          eh = 0,
          ep = 0,
          ef = 0,
          eg = 0,
          em = 0,
          ew = 0,
          eb = 0,
          ev = 0,
          ey = 0,
          e_ = 0,
          eC = 0,
          ex = 0,
          eE = 0,
          eA = 0,
          eS = 0,
          ek = 0,
          eT = 0,
          eI = 0,
          eP = 0,
          eR = 0,
          eN = 0,
          eO = W[0],
          eM = W[1],
          eD = W[2],
          eB = W[3],
          eL = W[4],
          ej = W[5],
          eU = W[6],
          e$ = W[7],
          eF = W[8],
          ez = W[9],
          eH = W[10],
          eV = W[11],
          eW = W[12],
          eK = W[13],
          eZ = W[14],
          eG = W[15];
        (et += (X = x[0]) * eO),
          (er += X * eM),
          (ei += X * eD),
          (eo += X * eB),
          (ea += X * eL),
          (es += X * ej),
          (el += X * eU),
          (ec += X * e$),
          (eu += X * eF),
          (ed += X * ez),
          (eh += X * eH),
          (ep += X * eV),
          (ef += X * eW),
          (eg += X * eK),
          (em += X * eZ),
          (ew += X * eG),
          (er += (X = x[1]) * eO),
          (ei += X * eM),
          (eo += X * eD),
          (ea += X * eB),
          (es += X * eL),
          (el += X * ej),
          (ec += X * eU),
          (eu += X * e$),
          (ed += X * eF),
          (eh += X * ez),
          (ep += X * eH),
          (ef += X * eV),
          (eg += X * eW),
          (em += X * eK),
          (ew += X * eZ),
          (eb += X * eG),
          (ei += (X = x[2]) * eO),
          (eo += X * eM),
          (ea += X * eD),
          (es += X * eB),
          (el += X * eL),
          (ec += X * ej),
          (eu += X * eU),
          (ed += X * e$),
          (eh += X * eF),
          (ep += X * ez),
          (ef += X * eH),
          (eg += X * eV),
          (em += X * eW),
          (ew += X * eK),
          (eb += X * eZ),
          (ev += X * eG),
          (eo += (X = x[3]) * eO),
          (ea += X * eM),
          (es += X * eD),
          (el += X * eB),
          (ec += X * eL),
          (eu += X * ej),
          (ed += X * eU),
          (eh += X * e$),
          (ep += X * eF),
          (ef += X * ez),
          (eg += X * eH),
          (em += X * eV),
          (ew += X * eW),
          (eb += X * eK),
          (ev += X * eZ),
          (ey += X * eG),
          (ea += (X = x[4]) * eO),
          (es += X * eM),
          (el += X * eD),
          (ec += X * eB),
          (eu += X * eL),
          (ed += X * ej),
          (eh += X * eU),
          (ep += X * e$),
          (ef += X * eF),
          (eg += X * ez),
          (em += X * eH),
          (ew += X * eV),
          (eb += X * eW),
          (ev += X * eK),
          (ey += X * eZ),
          (e_ += X * eG),
          (es += (X = x[5]) * eO),
          (el += X * eM),
          (ec += X * eD),
          (eu += X * eB),
          (ed += X * eL),
          (eh += X * ej),
          (ep += X * eU),
          (ef += X * e$),
          (eg += X * eF),
          (em += X * ez),
          (ew += X * eH),
          (eb += X * eV),
          (ev += X * eW),
          (ey += X * eK),
          (e_ += X * eZ),
          (eC += X * eG),
          (el += (X = x[6]) * eO),
          (ec += X * eM),
          (eu += X * eD),
          (ed += X * eB),
          (eh += X * eL),
          (ep += X * ej),
          (ef += X * eU),
          (eg += X * e$),
          (em += X * eF),
          (ew += X * ez),
          (eb += X * eH),
          (ev += X * eV),
          (ey += X * eW),
          (e_ += X * eK),
          (eC += X * eZ),
          (ex += X * eG),
          (ec += (X = x[7]) * eO),
          (eu += X * eM),
          (ed += X * eD),
          (eh += X * eB),
          (ep += X * eL),
          (ef += X * ej),
          (eg += X * eU),
          (em += X * e$),
          (ew += X * eF),
          (eb += X * ez),
          (ev += X * eH),
          (ey += X * eV),
          (e_ += X * eW),
          (eC += X * eK),
          (ex += X * eZ),
          (eE += X * eG),
          (eu += (X = x[8]) * eO),
          (ed += X * eM),
          (eh += X * eD),
          (ep += X * eB),
          (ef += X * eL),
          (eg += X * ej),
          (em += X * eU),
          (ew += X * e$),
          (eb += X * eF),
          (ev += X * ez),
          (ey += X * eH),
          (e_ += X * eV),
          (eC += X * eW),
          (ex += X * eK),
          (eE += X * eZ),
          (eA += X * eG),
          (ed += (X = x[9]) * eO),
          (eh += X * eM),
          (ep += X * eD),
          (ef += X * eB),
          (eg += X * eL),
          (em += X * ej),
          (ew += X * eU),
          (eb += X * e$),
          (ev += X * eF),
          (ey += X * ez),
          (e_ += X * eH),
          (eC += X * eV),
          (ex += X * eW),
          (eE += X * eK),
          (eA += X * eZ),
          (eS += X * eG),
          (eh += (X = x[10]) * eO),
          (ep += X * eM),
          (ef += X * eD),
          (eg += X * eB),
          (em += X * eL),
          (ew += X * ej),
          (eb += X * eU),
          (ev += X * e$),
          (ey += X * eF),
          (e_ += X * ez),
          (eC += X * eH),
          (ex += X * eV),
          (eE += X * eW),
          (eA += X * eK),
          (eS += X * eZ),
          (ek += X * eG),
          (ep += (X = x[11]) * eO),
          (ef += X * eM),
          (eg += X * eD),
          (em += X * eB),
          (ew += X * eL),
          (eb += X * ej),
          (ev += X * eU),
          (ey += X * e$),
          (e_ += X * eF),
          (eC += X * ez),
          (ex += X * eH),
          (eE += X * eV),
          (eA += X * eW),
          (eS += X * eK),
          (ek += X * eZ),
          (eT += X * eG),
          (ef += (X = x[12]) * eO),
          (eg += X * eM),
          (em += X * eD),
          (ew += X * eB),
          (eb += X * eL),
          (ev += X * ej),
          (ey += X * eU),
          (e_ += X * e$),
          (eC += X * eF),
          (ex += X * ez),
          (eE += X * eH),
          (eA += X * eV),
          (eS += X * eW),
          (ek += X * eK),
          (eT += X * eZ),
          (eI += X * eG),
          (eg += (X = x[13]) * eO),
          (em += X * eM),
          (ew += X * eD),
          (eb += X * eB),
          (ev += X * eL),
          (ey += X * ej),
          (e_ += X * eU),
          (eC += X * e$),
          (ex += X * eF),
          (eE += X * ez),
          (eA += X * eH),
          (eS += X * eV),
          (ek += X * eW),
          (eT += X * eK),
          (eI += X * eZ),
          (eP += X * eG),
          (em += (X = x[14]) * eO),
          (ew += X * eM),
          (eb += X * eD),
          (ev += X * eB),
          (ey += X * eL),
          (e_ += X * ej),
          (eC += X * eU),
          (ex += X * e$),
          (eE += X * eF),
          (eA += X * ez),
          (eS += X * eH),
          (ek += X * eV),
          (eT += X * eW),
          (eI += X * eK),
          (eP += X * eZ),
          (eR += X * eG),
          (ew += (X = x[15]) * eO),
          (eb += X * eM),
          (ev += X * eD),
          (ey += X * eB),
          (e_ += X * eL),
          (eC += X * ej),
          (ex += X * eU),
          (eE += X * e$),
          (eA += X * eF),
          (eS += X * ez),
          (ek += X * eH),
          (eT += X * eV),
          (eI += X * eW),
          (eP += X * eK),
          (eR += X * eZ),
          (eN += X * eG),
          (et += 38 * eb),
          (er += 38 * ev),
          (ei += 38 * ey),
          (eo += 38 * e_),
          (ea += 38 * eC),
          (es += 38 * ex),
          (el += 38 * eE),
          (ec += 38 * eA),
          (eu += 38 * eS),
          (ed += 38 * ek),
          (eh += 38 * eT),
          (ep += 38 * eI),
          (ef += 38 * eP),
          (eg += 38 * eR),
          (em += 38 * eN),
          (ee = Math.floor((X = et + (ee = 1) + 65535) / 65536)),
          (et = X - 65536 * ee),
          (ee = Math.floor((X = er + ee + 65535) / 65536)),
          (er = X - 65536 * ee),
          (ee = Math.floor((X = ei + ee + 65535) / 65536)),
          (ei = X - 65536 * ee),
          (ee = Math.floor((X = eo + ee + 65535) / 65536)),
          (eo = X - 65536 * ee),
          (ee = Math.floor((X = ea + ee + 65535) / 65536)),
          (ea = X - 65536 * ee),
          (ee = Math.floor((X = es + ee + 65535) / 65536)),
          (es = X - 65536 * ee),
          (ee = Math.floor((X = el + ee + 65535) / 65536)),
          (el = X - 65536 * ee),
          (ee = Math.floor((X = ec + ee + 65535) / 65536)),
          (ec = X - 65536 * ee),
          (ee = Math.floor((X = eu + ee + 65535) / 65536)),
          (eu = X - 65536 * ee),
          (ee = Math.floor((X = ed + ee + 65535) / 65536)),
          (ed = X - 65536 * ee),
          (ee = Math.floor((X = eh + ee + 65535) / 65536)),
          (eh = X - 65536 * ee),
          (ee = Math.floor((X = ep + ee + 65535) / 65536)),
          (ep = X - 65536 * ee),
          (ee = Math.floor((X = ef + ee + 65535) / 65536)),
          (ef = X - 65536 * ee),
          (ee = Math.floor((X = eg + ee + 65535) / 65536)),
          (eg = X - 65536 * ee),
          (ee = Math.floor((X = em + ee + 65535) / 65536)),
          (em = X - 65536 * ee),
          (ee = Math.floor((X = ew + ee + 65535) / 65536)),
          (ew = X - 65536 * ee),
          (et += ee - 1 + 37 * (ee - 1)),
          (ee = Math.floor((X = et + (ee = 1) + 65535) / 65536)),
          (et = X - 65536 * ee),
          (ee = Math.floor((X = er + ee + 65535) / 65536)),
          (er = X - 65536 * ee),
          (ee = Math.floor((X = ei + ee + 65535) / 65536)),
          (ei = X - 65536 * ee),
          (ee = Math.floor((X = eo + ee + 65535) / 65536)),
          (eo = X - 65536 * ee),
          (ee = Math.floor((X = ea + ee + 65535) / 65536)),
          (ea = X - 65536 * ee),
          (ee = Math.floor((X = es + ee + 65535) / 65536)),
          (es = X - 65536 * ee),
          (ee = Math.floor((X = el + ee + 65535) / 65536)),
          (el = X - 65536 * ee),
          (ee = Math.floor((X = ec + ee + 65535) / 65536)),
          (ec = X - 65536 * ee),
          (ee = Math.floor((X = eu + ee + 65535) / 65536)),
          (eu = X - 65536 * ee),
          (ee = Math.floor((X = ed + ee + 65535) / 65536)),
          (ed = X - 65536 * ee),
          (ee = Math.floor((X = eh + ee + 65535) / 65536)),
          (eh = X - 65536 * ee),
          (ee = Math.floor((X = ep + ee + 65535) / 65536)),
          (ep = X - 65536 * ee),
          (ee = Math.floor((X = ef + ee + 65535) / 65536)),
          (ef = X - 65536 * ee),
          (ee = Math.floor((X = eg + ee + 65535) / 65536)),
          (eg = X - 65536 * ee),
          (ee = Math.floor((X = em + ee + 65535) / 65536)),
          (em = X - 65536 * ee),
          (ee = Math.floor((X = ew + ee + 65535) / 65536)),
          (ew = X - 65536 * ee),
          (et += ee - 1 + 37 * (ee - 1)),
          (s[0] = et),
          (s[1] = er),
          (s[2] = ei),
          (s[3] = eo),
          (s[4] = ea),
          (s[5] = es),
          (s[6] = el),
          (s[7] = ec),
          (s[8] = eu),
          (s[9] = ed),
          (s[10] = eh),
          (s[11] = ep),
          (s[12] = ef),
          (s[13] = eg),
          (s[14] = em),
          (s[15] = ew);
      }
      function edadd(s, x) {
        let W = gf(),
          X = gf(),
          ee = gf(),
          et = gf(),
          er = gf(),
          eo = gf(),
          ea = gf(),
          es = gf(),
          el = gf();
        sub(W, s[1], s[0]),
          sub(el, x[1], x[0]),
          mul(W, W, el),
          add(X, s[0], s[1]),
          add(el, x[0], x[1]),
          mul(X, X, el),
          mul(ee, s[3], x[3]),
          mul(ee, ee, ei),
          mul(et, s[2], x[2]),
          add(et, et, et),
          sub(er, X, W),
          sub(eo, et, ee),
          add(ea, et, ee),
          add(es, X, W),
          mul(s[0], er, eo),
          mul(s[1], es, ea),
          mul(s[2], ea, eo),
          mul(s[3], er, es);
      }
      function cswap(s, x, W) {
        for (let X = 0; X < 4; X++) sel25519(s[X], x[X], W);
      }
      function pack(s, x) {
        let W = gf(),
          X = gf(),
          ee = gf();
        (function (s, x) {
          let W;
          let X = gf();
          for (W = 0; W < 16; W++) X[W] = x[W];
          for (W = 253; W >= 0; W--)
            mul(X, X, X), 2 !== W && 4 !== W && mul(X, X, x);
          for (W = 0; W < 16; W++) s[W] = X[W];
        })(ee, x[2]),
          mul(W, x[0], ee),
          mul(X, x[1], ee),
          pack25519(s, X),
          (s[31] ^=
            (function (s) {
              let x = new Uint8Array(32);
              return pack25519(x, s), 1 & x[0];
            })(W) << 7);
      }
      function scalarbase(s, x) {
        let W = [gf(), gf(), gf(), gf()];
        set25519(W[0], eo),
          set25519(W[1], ea),
          set25519(W[2], er),
          mul(W[3], eo, ea),
          (function (s, x, W) {
            set25519(s[0], et),
              set25519(s[1], er),
              set25519(s[2], er),
              set25519(s[3], et);
            for (let X = 255; X >= 0; --X) {
              let ee = (W[(X / 8) | 0] >> (7 & X)) & 1;
              cswap(s, x, ee), edadd(x, s), edadd(s, s), cswap(s, x, ee);
            }
          })(s, W, x);
      }
      x._w = function (s) {
        if (s.length !== x.aP)
          throw Error(`ed25519: seed must be ${x.aP} bytes`);
        let W = (0, X.hash)(s);
        (W[0] &= 248), (W[31] &= 127), (W[31] |= 64);
        let ee = new Uint8Array(32),
          et = [gf(), gf(), gf(), gf()];
        scalarbase(et, W), pack(ee, et);
        let er = new Uint8Array(64);
        return er.set(s), er.set(ee, 32), { publicKey: ee, secretKey: er };
      };
      let es = new Float64Array([
        237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222,
        20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16,
      ]);
      function modL(s, x) {
        let W, X, ee, et;
        for (X = 63; X >= 32; --X) {
          for (W = 0, ee = X - 32, et = X - 12; ee < et; ++ee)
            (x[ee] += W - 16 * x[X] * es[ee - (X - 32)]),
              (W = Math.floor((x[ee] + 128) / 256)),
              (x[ee] -= 256 * W);
          (x[ee] += W), (x[X] = 0);
        }
        for (ee = 0, W = 0; ee < 32; ee++)
          (x[ee] += W - (x[31] >> 4) * es[ee]),
            (W = x[ee] >> 8),
            (x[ee] &= 255);
        for (ee = 0; ee < 32; ee++) x[ee] -= W * es[ee];
        for (X = 0; X < 32; X++) (x[X + 1] += x[X] >> 8), (s[X] = 255 & x[X]);
      }
      function reduce(s) {
        let x = new Float64Array(64);
        for (let W = 0; W < 64; W++) x[W] = s[W];
        for (let x = 0; x < 64; x++) s[x] = 0;
        modL(s, x);
      }
      x.Xx = function (s, x) {
        let W = new Float64Array(64),
          ee = [gf(), gf(), gf(), gf()],
          et = (0, X.hash)(s.subarray(0, 32));
        (et[0] &= 248), (et[31] &= 127), (et[31] |= 64);
        let er = new Uint8Array(64);
        er.set(et.subarray(32), 32);
        let ei = new X.SHA512();
        ei.update(er.subarray(32)), ei.update(x);
        let eo = ei.digest();
        ei.clean(),
          reduce(eo),
          scalarbase(ee, eo),
          pack(er, ee),
          ei.reset(),
          ei.update(er.subarray(0, 32)),
          ei.update(s.subarray(32)),
          ei.update(x);
        let ea = ei.digest();
        reduce(ea);
        for (let s = 0; s < 32; s++) W[s] = eo[s];
        for (let s = 0; s < 32; s++)
          for (let x = 0; x < 32; x++) W[s + x] += ea[s] * et[x];
        return modL(er.subarray(32), W), er;
      };
    },
    79984: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.isSerializableHash = function (s) {
          return (
            void 0 !== s.saveState &&
            void 0 !== s.restoreState &&
            void 0 !== s.cleanSavedState
          );
        });
    },
    512: function (s, x, W) {
      "use strict";
      var X = W(25629),
        ee = W(17309),
        et = (function () {
          function HKDF(s, x, W, ee) {
            void 0 === W && (W = new Uint8Array(0)),
              (this._counter = new Uint8Array(1)),
              (this._hash = s),
              (this._info = ee);
            var et = X.hmac(this._hash, W, x);
            (this._hmac = new X.HMAC(s, et)),
              (this._buffer = new Uint8Array(this._hmac.digestLength)),
              (this._bufpos = this._buffer.length);
          }
          return (
            (HKDF.prototype._fillBuffer = function () {
              this._counter[0]++;
              var s = this._counter[0];
              if (0 === s) throw Error("hkdf: cannot expand more");
              this._hmac.reset(),
                s > 1 && this._hmac.update(this._buffer),
                this._info && this._hmac.update(this._info),
                this._hmac.update(this._counter),
                this._hmac.finish(this._buffer),
                (this._bufpos = 0);
            }),
            (HKDF.prototype.expand = function (s) {
              for (var x = new Uint8Array(s), W = 0; W < x.length; W++)
                this._bufpos === this._buffer.length && this._fillBuffer(),
                  (x[W] = this._buffer[this._bufpos++]);
              return x;
            }),
            (HKDF.prototype.clean = function () {
              this._hmac.clean(),
                ee.wipe(this._buffer),
                ee.wipe(this._counter),
                (this._bufpos = 0);
            }),
            HKDF
          );
        })();
      x.t = et;
    },
    25629: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X = W(79984),
        ee = W(4153),
        et = W(17309),
        er = (function () {
          function HMAC(s, x) {
            (this._finished = !1),
              (this._inner = new s()),
              (this._outer = new s()),
              (this.blockSize = this._outer.blockSize),
              (this.digestLength = this._outer.digestLength);
            var W = new Uint8Array(this.blockSize);
            x.length > this.blockSize
              ? this._inner.update(x).finish(W).clean()
              : W.set(x);
            for (var ee = 0; ee < W.length; ee++) W[ee] ^= 54;
            this._inner.update(W);
            for (var ee = 0; ee < W.length; ee++) W[ee] ^= 106;
            this._outer.update(W),
              X.isSerializableHash(this._inner) &&
                X.isSerializableHash(this._outer) &&
                ((this._innerKeyedState = this._inner.saveState()),
                (this._outerKeyedState = this._outer.saveState())),
              et.wipe(W);
          }
          return (
            (HMAC.prototype.reset = function () {
              if (
                !X.isSerializableHash(this._inner) ||
                !X.isSerializableHash(this._outer)
              )
                throw Error(
                  "hmac: can't reset() because hash doesn't implement restoreState()"
                );
              return (
                this._inner.restoreState(this._innerKeyedState),
                this._outer.restoreState(this._outerKeyedState),
                (this._finished = !1),
                this
              );
            }),
            (HMAC.prototype.clean = function () {
              X.isSerializableHash(this._inner) &&
                this._inner.cleanSavedState(this._innerKeyedState),
                X.isSerializableHash(this._outer) &&
                  this._outer.cleanSavedState(this._outerKeyedState),
                this._inner.clean(),
                this._outer.clean();
            }),
            (HMAC.prototype.update = function (s) {
              return this._inner.update(s), this;
            }),
            (HMAC.prototype.finish = function (s) {
              return (
                this._finished
                  ? this._outer.finish(s)
                  : (this._inner.finish(s),
                    this._outer
                      .update(s.subarray(0, this.digestLength))
                      .finish(s),
                    (this._finished = !0)),
                this
              );
            }),
            (HMAC.prototype.digest = function () {
              var s = new Uint8Array(this.digestLength);
              return this.finish(s), s;
            }),
            (HMAC.prototype.saveState = function () {
              if (!X.isSerializableHash(this._inner))
                throw Error(
                  "hmac: can't saveState() because hash doesn't implement it"
                );
              return this._inner.saveState();
            }),
            (HMAC.prototype.restoreState = function (s) {
              if (
                !X.isSerializableHash(this._inner) ||
                !X.isSerializableHash(this._outer)
              )
                throw Error(
                  "hmac: can't restoreState() because hash doesn't implement it"
                );
              return (
                this._inner.restoreState(s),
                this._outer.restoreState(this._outerKeyedState),
                (this._finished = !1),
                this
              );
            }),
            (HMAC.prototype.cleanSavedState = function (s) {
              if (!X.isSerializableHash(this._inner))
                throw Error(
                  "hmac: can't cleanSavedState() because hash doesn't implement it"
                );
              this._inner.cleanSavedState(s);
            }),
            HMAC
          );
        })();
      (x.HMAC = er),
        (x.hmac = function (s, x, W) {
          var X = new er(s, x);
          X.update(W);
          var ee = X.digest();
          return X.clean(), ee;
        }),
        (x.equal = ee.equal);
    },
    97117: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.mul =
          Math.imul ||
          function (s, x) {
            var W = 65535 & s,
              X = 65535 & x;
            return (
              (W * X +
                (((((s >>> 16) & 65535) * X + W * ((x >>> 16) & 65535)) <<
                  16) >>>
                  0)) |
              0
            );
          }),
        (x.add = function (s, x) {
          return (s + x) | 0;
        }),
        (x.sub = function (s, x) {
          return (s - x) | 0;
        }),
        (x.rotl = function (s, x) {
          return (s << x) | (s >>> (32 - x));
        }),
        (x.rotr = function (s, x) {
          return (s << (32 - x)) | (s >>> x);
        }),
        (x.isInteger =
          Number.isInteger ||
          function (s) {
            return "number" == typeof s && isFinite(s) && Math.floor(s) === s;
          }),
        (x.MAX_SAFE_INTEGER = 9007199254740991),
        (x.isSafeInteger = function (s) {
          return (
            x.isInteger(s) &&
            s >= -x.MAX_SAFE_INTEGER &&
            s <= x.MAX_SAFE_INTEGER
          );
        });
    },
    63027: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X = W(4153),
        ee = W(17309);
      x.DIGEST_LENGTH = 16;
      var et = (function () {
        function Poly1305(s) {
          (this.digestLength = x.DIGEST_LENGTH),
            (this._buffer = new Uint8Array(16)),
            (this._r = new Uint16Array(10)),
            (this._h = new Uint16Array(10)),
            (this._pad = new Uint16Array(8)),
            (this._leftover = 0),
            (this._fin = 0),
            (this._finished = !1);
          var W = s[0] | (s[1] << 8);
          this._r[0] = 8191 & W;
          var X = s[2] | (s[3] << 8);
          this._r[1] = ((W >>> 13) | (X << 3)) & 8191;
          var ee = s[4] | (s[5] << 8);
          this._r[2] = ((X >>> 10) | (ee << 6)) & 7939;
          var et = s[6] | (s[7] << 8);
          this._r[3] = ((ee >>> 7) | (et << 9)) & 8191;
          var er = s[8] | (s[9] << 8);
          (this._r[4] = ((et >>> 4) | (er << 12)) & 255),
            (this._r[5] = (er >>> 1) & 8190);
          var ei = s[10] | (s[11] << 8);
          this._r[6] = ((er >>> 14) | (ei << 2)) & 8191;
          var eo = s[12] | (s[13] << 8);
          this._r[7] = ((ei >>> 11) | (eo << 5)) & 8065;
          var ea = s[14] | (s[15] << 8);
          (this._r[8] = ((eo >>> 8) | (ea << 8)) & 8191),
            (this._r[9] = (ea >>> 5) & 127),
            (this._pad[0] = s[16] | (s[17] << 8)),
            (this._pad[1] = s[18] | (s[19] << 8)),
            (this._pad[2] = s[20] | (s[21] << 8)),
            (this._pad[3] = s[22] | (s[23] << 8)),
            (this._pad[4] = s[24] | (s[25] << 8)),
            (this._pad[5] = s[26] | (s[27] << 8)),
            (this._pad[6] = s[28] | (s[29] << 8)),
            (this._pad[7] = s[30] | (s[31] << 8));
        }
        return (
          (Poly1305.prototype._blocks = function (s, x, W) {
            for (
              var X = this._fin ? 0 : 2048,
                ee = this._h[0],
                et = this._h[1],
                er = this._h[2],
                ei = this._h[3],
                eo = this._h[4],
                ea = this._h[5],
                es = this._h[6],
                el = this._h[7],
                ec = this._h[8],
                eu = this._h[9],
                ed = this._r[0],
                eh = this._r[1],
                ep = this._r[2],
                ef = this._r[3],
                eg = this._r[4],
                em = this._r[5],
                ew = this._r[6],
                eb = this._r[7],
                ev = this._r[8],
                ey = this._r[9];
              W >= 16;

            ) {
              var e_,
                eC = s[x + 0] | (s[x + 1] << 8);
              ee += 8191 & eC;
              var ex = s[x + 2] | (s[x + 3] << 8);
              et += ((eC >>> 13) | (ex << 3)) & 8191;
              var eE = s[x + 4] | (s[x + 5] << 8);
              er += ((ex >>> 10) | (eE << 6)) & 8191;
              var eA = s[x + 6] | (s[x + 7] << 8);
              ei += ((eE >>> 7) | (eA << 9)) & 8191;
              var eS = s[x + 8] | (s[x + 9] << 8);
              (eo += ((eA >>> 4) | (eS << 12)) & 8191),
                (ea += (eS >>> 1) & 8191);
              var ek = s[x + 10] | (s[x + 11] << 8);
              es += ((eS >>> 14) | (ek << 2)) & 8191;
              var eT = s[x + 12] | (s[x + 13] << 8);
              el += ((ek >>> 11) | (eT << 5)) & 8191;
              var eI = s[x + 14] | (s[x + 15] << 8);
              (ec += ((eT >>> 8) | (eI << 8)) & 8191), (eu += (eI >>> 5) | X);
              var eP = 0;
              (eP =
                (e_ =
                  0 +
                  ee * ed +
                  et * (5 * ey) +
                  er * (5 * ev) +
                  ei * (5 * eb) +
                  eo * (5 * ew)) >>> 13),
                (e_ &= 8191),
                (e_ +=
                  ea * (5 * em) +
                  es * (5 * eg) +
                  el * (5 * ef) +
                  ec * (5 * ep) +
                  eu * (5 * eh)),
                (eP += e_ >>> 13),
                (e_ &= 8191);
              var eR = eP;
              (eR +=
                ee * eh +
                et * ed +
                er * (5 * ey) +
                ei * (5 * ev) +
                eo * (5 * eb)),
                (eP = eR >>> 13),
                (eR &= 8191),
                (eR +=
                  ea * (5 * ew) +
                  es * (5 * em) +
                  el * (5 * eg) +
                  ec * (5 * ef) +
                  eu * (5 * ep)),
                (eP += eR >>> 13),
                (eR &= 8191);
              var eN = eP;
              (eN +=
                ee * ep + et * eh + er * ed + ei * (5 * ey) + eo * (5 * ev)),
                (eP = eN >>> 13),
                (eN &= 8191),
                (eN +=
                  ea * (5 * eb) +
                  es * (5 * ew) +
                  el * (5 * em) +
                  ec * (5 * eg) +
                  eu * (5 * ef)),
                (eP += eN >>> 13),
                (eN &= 8191);
              var eO = eP;
              (eO += ee * ef + et * ep + er * eh + ei * ed + eo * (5 * ey)),
                (eP = eO >>> 13),
                (eO &= 8191),
                (eO +=
                  ea * (5 * ev) +
                  es * (5 * eb) +
                  el * (5 * ew) +
                  ec * (5 * em) +
                  eu * (5 * eg)),
                (eP += eO >>> 13),
                (eO &= 8191);
              var eM = eP;
              (eM += ee * eg + et * ef + er * ep + ei * eh + eo * ed),
                (eP = eM >>> 13),
                (eM &= 8191),
                (eM +=
                  ea * (5 * ey) +
                  es * (5 * ev) +
                  el * (5 * eb) +
                  ec * (5 * ew) +
                  eu * (5 * em)),
                (eP += eM >>> 13),
                (eM &= 8191);
              var eD = eP;
              (eD += ee * em + et * eg + er * ef + ei * ep + eo * eh),
                (eP = eD >>> 13),
                (eD &= 8191),
                (eD +=
                  ea * ed +
                  es * (5 * ey) +
                  el * (5 * ev) +
                  ec * (5 * eb) +
                  eu * (5 * ew)),
                (eP += eD >>> 13),
                (eD &= 8191);
              var eB = eP;
              (eB += ee * ew + et * em + er * eg + ei * ef + eo * ep),
                (eP = eB >>> 13),
                (eB &= 8191),
                (eB +=
                  ea * eh +
                  es * ed +
                  el * (5 * ey) +
                  ec * (5 * ev) +
                  eu * (5 * eb)),
                (eP += eB >>> 13),
                (eB &= 8191);
              var eL = eP;
              (eL += ee * eb + et * ew + er * em + ei * eg + eo * ef),
                (eP = eL >>> 13),
                (eL &= 8191),
                (eL +=
                  ea * ep + es * eh + el * ed + ec * (5 * ey) + eu * (5 * ev)),
                (eP += eL >>> 13),
                (eL &= 8191);
              var ej = eP;
              (ej += ee * ev + et * eb + er * ew + ei * em + eo * eg),
                (eP = ej >>> 13),
                (ej &= 8191),
                (ej += ea * ef + es * ep + el * eh + ec * ed + eu * (5 * ey)),
                (eP += ej >>> 13),
                (ej &= 8191);
              var eU = eP;
              (eU += ee * ey + et * ev + er * eb + ei * ew + eo * em),
                (eP = eU >>> 13),
                (eU &= 8191),
                (eU += ea * eg + es * ef + el * ep + ec * eh + eu * ed),
                (eP += eU >>> 13),
                (eU &= 8191),
                (e_ = 8191 & (eP = ((eP = ((eP << 2) + eP) | 0) + e_) | 0)),
                (eP >>>= 13),
                (eR += eP),
                (ee = e_),
                (et = eR),
                (er = eN),
                (ei = eO),
                (eo = eM),
                (ea = eD),
                (es = eB),
                (el = eL),
                (ec = ej),
                (eu = eU),
                (x += 16),
                (W -= 16);
            }
            (this._h[0] = ee),
              (this._h[1] = et),
              (this._h[2] = er),
              (this._h[3] = ei),
              (this._h[4] = eo),
              (this._h[5] = ea),
              (this._h[6] = es),
              (this._h[7] = el),
              (this._h[8] = ec),
              (this._h[9] = eu);
          }),
          (Poly1305.prototype.finish = function (s, x) {
            void 0 === x && (x = 0);
            var W,
              X,
              ee,
              et,
              er = new Uint16Array(10);
            if (this._leftover) {
              for (et = this._leftover, this._buffer[et++] = 1; et < 16; et++)
                this._buffer[et] = 0;
              (this._fin = 1), this._blocks(this._buffer, 0, 16);
            }
            for (
              W = this._h[1] >>> 13, this._h[1] &= 8191, et = 2;
              et < 10;
              et++
            )
              (this._h[et] += W),
                (W = this._h[et] >>> 13),
                (this._h[et] &= 8191);
            for (
              this._h[0] += 5 * W,
                W = this._h[0] >>> 13,
                this._h[0] &= 8191,
                this._h[1] += W,
                W = this._h[1] >>> 13,
                this._h[1] &= 8191,
                this._h[2] += W,
                er[0] = this._h[0] + 5,
                W = er[0] >>> 13,
                er[0] &= 8191,
                et = 1;
              et < 10;
              et++
            )
              (er[et] = this._h[et] + W), (W = er[et] >>> 13), (er[et] &= 8191);
            for (er[9] -= 8192, X = (1 ^ W) - 1, et = 0; et < 10; et++)
              er[et] &= X;
            for (et = 0, X = ~X; et < 10; et++)
              this._h[et] = (this._h[et] & X) | er[et];
            for (
              et = 1,
                this._h[0] = (this._h[0] | (this._h[1] << 13)) & 65535,
                this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 65535,
                this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 65535,
                this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 65535,
                this._h[4] =
                  ((this._h[4] >>> 12) |
                    (this._h[5] << 1) |
                    (this._h[6] << 14)) &
                  65535,
                this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 65535,
                this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 65535,
                this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 65535,
                ee = this._h[0] + this._pad[0],
                this._h[0] = 65535 & ee;
              et < 8;
              et++
            )
              (ee = (((this._h[et] + this._pad[et]) | 0) + (ee >>> 16)) | 0),
                (this._h[et] = 65535 & ee);
            return (
              (s[x + 0] = this._h[0] >>> 0),
              (s[x + 1] = this._h[0] >>> 8),
              (s[x + 2] = this._h[1] >>> 0),
              (s[x + 3] = this._h[1] >>> 8),
              (s[x + 4] = this._h[2] >>> 0),
              (s[x + 5] = this._h[2] >>> 8),
              (s[x + 6] = this._h[3] >>> 0),
              (s[x + 7] = this._h[3] >>> 8),
              (s[x + 8] = this._h[4] >>> 0),
              (s[x + 9] = this._h[4] >>> 8),
              (s[x + 10] = this._h[5] >>> 0),
              (s[x + 11] = this._h[5] >>> 8),
              (s[x + 12] = this._h[6] >>> 0),
              (s[x + 13] = this._h[6] >>> 8),
              (s[x + 14] = this._h[7] >>> 0),
              (s[x + 15] = this._h[7] >>> 8),
              (this._finished = !0),
              this
            );
          }),
          (Poly1305.prototype.update = function (s) {
            var x,
              W = 0,
              X = s.length;
            if (this._leftover) {
              (x = 16 - this._leftover) > X && (x = X);
              for (var ee = 0; ee < x; ee++)
                this._buffer[this._leftover + ee] = s[W + ee];
              if (
                ((X -= x), (W += x), (this._leftover += x), this._leftover < 16)
              )
                return this;
              this._blocks(this._buffer, 0, 16), (this._leftover = 0);
            }
            if (
              (X >= 16 &&
                ((x = X - (X % 16)), this._blocks(s, W, x), (W += x), (X -= x)),
              X)
            ) {
              for (var ee = 0; ee < X; ee++)
                this._buffer[this._leftover + ee] = s[W + ee];
              this._leftover += X;
            }
            return this;
          }),
          (Poly1305.prototype.digest = function () {
            if (this._finished) throw Error("Poly1305 was finished");
            var s = new Uint8Array(16);
            return this.finish(s), s;
          }),
          (Poly1305.prototype.clean = function () {
            return (
              ee.wipe(this._buffer),
              ee.wipe(this._r),
              ee.wipe(this._h),
              ee.wipe(this._pad),
              (this._leftover = 0),
              (this._fin = 0),
              (this._finished = !0),
              this
            );
          }),
          Poly1305
        );
      })();
      (x.Poly1305 = et),
        (x.oneTimeAuth = function (s, x) {
          var W = new et(s);
          W.update(x);
          var X = W.digest();
          return W.clean(), X;
        }),
        (x.equal = function (s, W) {
          return (
            s.length === x.DIGEST_LENGTH &&
            W.length === x.DIGEST_LENGTH &&
            X.equal(s, W)
          );
        });
    },
    31416: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.randomStringForEntropy =
          x.randomString =
          x.randomUint32 =
          x.randomBytes =
          x.defaultRandomSource =
            void 0);
      let X = W(46008),
        ee = W(98099),
        et = W(17309);
      function randomBytes(s, W = x.defaultRandomSource) {
        return W.randomBytes(s);
      }
      (x.defaultRandomSource = new X.SystemRandomSource()),
        (x.randomBytes = randomBytes),
        (x.randomUint32 = function (s = x.defaultRandomSource) {
          let W = randomBytes(4, s),
            X = (0, ee.readUint32LE)(W);
          return (0, et.wipe)(W), X;
        });
      let er = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
      function randomString(s, W = er, X = x.defaultRandomSource) {
        if (W.length < 2) throw Error("randomString charset is too short");
        if (W.length > 256) throw Error("randomString charset is too long");
        let ee = "",
          ei = W.length,
          eo = 256 - (256 % ei);
        for (; s > 0; ) {
          let x = randomBytes(Math.ceil((256 * s) / eo), X);
          for (let X = 0; X < x.length && s > 0; X++) {
            let et = x[X];
            et < eo && ((ee += W.charAt(et % ei)), s--);
          }
          (0, et.wipe)(x);
        }
        return ee;
      }
      (x.randomString = randomString),
        (x.randomStringForEntropy = function (
          s,
          W = er,
          X = x.defaultRandomSource
        ) {
          let ee = Math.ceil(s / (Math.log(W.length) / Math.LN2));
          return randomString(ee, W, X);
        });
    },
    75455: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.BrowserRandomSource = void 0),
        (x.BrowserRandomSource = class {
          constructor() {
            (this.isAvailable = !1), (this.isInstantiated = !1);
            let s =
              "undefined" != typeof self ? self.crypto || self.msCrypto : null;
            s &&
              void 0 !== s.getRandomValues &&
              ((this._crypto = s),
              (this.isAvailable = !0),
              (this.isInstantiated = !0));
          }
          randomBytes(s) {
            if (!this.isAvailable || !this._crypto)
              throw Error("Browser random byte generator is not available.");
            let x = new Uint8Array(s);
            for (let s = 0; s < x.length; s += 65536)
              this._crypto.getRandomValues(
                x.subarray(s, s + Math.min(x.length - s, 65536))
              );
            return x;
          }
        });
    },
    58871: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.NodeRandomSource = void 0);
      let X = W(17309);
      x.NodeRandomSource = class {
        constructor() {
          (this.isAvailable = !1), (this.isInstantiated = !1);
          {
            let s = W(35883);
            s &&
              s.randomBytes &&
              ((this._crypto = s),
              (this.isAvailable = !0),
              (this.isInstantiated = !0));
          }
        }
        randomBytes(s) {
          if (!this.isAvailable || !this._crypto)
            throw Error("Node.js random byte generator is not available.");
          let x = this._crypto.randomBytes(s);
          if (x.length !== s)
            throw Error("NodeRandomSource: got fewer bytes than requested");
          let W = new Uint8Array(s);
          for (let s = 0; s < W.length; s++) W[s] = x[s];
          return (0, X.wipe)(x), W;
        }
      };
    },
    46008: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.SystemRandomSource = void 0);
      let X = W(75455),
        ee = W(58871);
      x.SystemRandomSource = class {
        constructor() {
          if (
            ((this.isAvailable = !1),
            (this.name = ""),
            (this._source = new X.BrowserRandomSource()),
            this._source.isAvailable)
          ) {
            (this.isAvailable = !0), (this.name = "Browser");
            return;
          }
          if (
            ((this._source = new ee.NodeRandomSource()),
            this._source.isAvailable)
          ) {
            (this.isAvailable = !0), (this.name = "Node");
            return;
          }
        }
        randomBytes(s) {
          if (!this.isAvailable)
            throw Error("System random byte generator is not available.");
          return this._source.randomBytes(s);
        }
      };
    },
    73294: function (s, x, W) {
      "use strict";
      var X = W(98099),
        ee = W(17309);
      (x.k = 32), (x.cn = 64);
      var et = (function () {
        function SHA256() {
          (this.digestLength = x.k),
            (this.blockSize = x.cn),
            (this._state = new Int32Array(8)),
            (this._temp = new Int32Array(64)),
            (this._buffer = new Uint8Array(128)),
            (this._bufferLength = 0),
            (this._bytesHashed = 0),
            (this._finished = !1),
            this.reset();
        }
        return (
          (SHA256.prototype._initState = function () {
            (this._state[0] = 1779033703),
              (this._state[1] = 3144134277),
              (this._state[2] = 1013904242),
              (this._state[3] = 2773480762),
              (this._state[4] = 1359893119),
              (this._state[5] = 2600822924),
              (this._state[6] = 528734635),
              (this._state[7] = 1541459225);
          }),
          (SHA256.prototype.reset = function () {
            return (
              this._initState(),
              (this._bufferLength = 0),
              (this._bytesHashed = 0),
              (this._finished = !1),
              this
            );
          }),
          (SHA256.prototype.clean = function () {
            ee.wipe(this._buffer), ee.wipe(this._temp), this.reset();
          }),
          (SHA256.prototype.update = function (s, x) {
            if ((void 0 === x && (x = s.length), this._finished))
              throw Error("SHA256: can't update because hash was finished.");
            var W = 0;
            if (((this._bytesHashed += x), this._bufferLength > 0)) {
              for (; this._bufferLength < this.blockSize && x > 0; )
                (this._buffer[this._bufferLength++] = s[W++]), x--;
              this._bufferLength === this.blockSize &&
                (hashBlocks(
                  this._temp,
                  this._state,
                  this._buffer,
                  0,
                  this.blockSize
                ),
                (this._bufferLength = 0));
            }
            for (
              x >= this.blockSize &&
              ((W = hashBlocks(this._temp, this._state, s, W, x)),
              (x %= this.blockSize));
              x > 0;

            )
              (this._buffer[this._bufferLength++] = s[W++]), x--;
            return this;
          }),
          (SHA256.prototype.finish = function (s) {
            if (!this._finished) {
              var x = this._bytesHashed,
                W = this._bufferLength,
                ee = x % 64 < 56 ? 64 : 128;
              this._buffer[W] = 128;
              for (var et = W + 1; et < ee - 8; et++) this._buffer[et] = 0;
              X.writeUint32BE((x / 536870912) | 0, this._buffer, ee - 8),
                X.writeUint32BE(x << 3, this._buffer, ee - 4),
                hashBlocks(this._temp, this._state, this._buffer, 0, ee),
                (this._finished = !0);
            }
            for (var et = 0; et < this.digestLength / 4; et++)
              X.writeUint32BE(this._state[et], s, 4 * et);
            return this;
          }),
          (SHA256.prototype.digest = function () {
            var s = new Uint8Array(this.digestLength);
            return this.finish(s), s;
          }),
          (SHA256.prototype.saveState = function () {
            if (this._finished)
              throw Error("SHA256: cannot save finished state");
            return {
              state: new Int32Array(this._state),
              buffer:
                this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
              bufferLength: this._bufferLength,
              bytesHashed: this._bytesHashed,
            };
          }),
          (SHA256.prototype.restoreState = function (s) {
            return (
              this._state.set(s.state),
              (this._bufferLength = s.bufferLength),
              s.buffer && this._buffer.set(s.buffer),
              (this._bytesHashed = s.bytesHashed),
              (this._finished = !1),
              this
            );
          }),
          (SHA256.prototype.cleanSavedState = function (s) {
            ee.wipe(s.state),
              s.buffer && ee.wipe(s.buffer),
              (s.bufferLength = 0),
              (s.bytesHashed = 0);
          }),
          SHA256
        );
      })();
      x.mE = et;
      var er = new Int32Array([
        1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,
        2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,
        1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774,
        264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986,
        2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711,
        113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,
        1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
        3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344,
        430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,
        1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424,
        2428436474, 2756734187, 3204031479, 3329325298,
      ]);
      function hashBlocks(s, x, W, ee, et) {
        for (; et >= 64; ) {
          for (
            var ei = x[0],
              eo = x[1],
              ea = x[2],
              es = x[3],
              el = x[4],
              ec = x[5],
              eu = x[6],
              ed = x[7],
              eh = 0;
            eh < 16;
            eh++
          ) {
            var ep = ee + 4 * eh;
            s[eh] = X.readUint32BE(W, ep);
          }
          for (var eh = 16; eh < 64; eh++) {
            var ef = s[eh - 2],
              eg =
                ((ef >>> 17) | (ef << 15)) ^
                ((ef >>> 19) | (ef << 13)) ^
                (ef >>> 10),
              em =
                (((ef = s[eh - 15]) >>> 7) | (ef << 25)) ^
                ((ef >>> 18) | (ef << 14)) ^
                (ef >>> 3);
            s[eh] = ((eg + s[eh - 7]) | 0) + ((em + s[eh - 16]) | 0);
          }
          for (var eh = 0; eh < 64; eh++) {
            var eg =
                ((((((el >>> 6) | (el << 26)) ^
                  ((el >>> 11) | (el << 21)) ^
                  ((el >>> 25) | (el << 7))) +
                  ((el & ec) ^ (~el & eu))) |
                  0) +
                  ((ed + ((er[eh] + s[eh]) | 0)) | 0)) |
                0,
              em =
                ((((ei >>> 2) | (ei << 30)) ^
                  ((ei >>> 13) | (ei << 19)) ^
                  ((ei >>> 22) | (ei << 10))) +
                  ((ei & eo) ^ (ei & ea) ^ (eo & ea))) |
                0;
            (ed = eu),
              (eu = ec),
              (ec = el),
              (el = (es + eg) | 0),
              (es = ea),
              (ea = eo),
              (eo = ei),
              (ei = (eg + em) | 0);
          }
          (x[0] += ei),
            (x[1] += eo),
            (x[2] += ea),
            (x[3] += es),
            (x[4] += el),
            (x[5] += ec),
            (x[6] += eu),
            (x[7] += ed),
            (ee += 64),
            (et -= 64);
        }
        return ee;
      }
      x.vp = function (s) {
        var x = new et();
        x.update(s);
        var W = x.digest();
        return x.clean(), W;
      };
    },
    93350: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X = W(98099),
        ee = W(17309);
      (x.DIGEST_LENGTH = 64), (x.BLOCK_SIZE = 128);
      var et = (function () {
        function SHA512() {
          (this.digestLength = x.DIGEST_LENGTH),
            (this.blockSize = x.BLOCK_SIZE),
            (this._stateHi = new Int32Array(8)),
            (this._stateLo = new Int32Array(8)),
            (this._tempHi = new Int32Array(16)),
            (this._tempLo = new Int32Array(16)),
            (this._buffer = new Uint8Array(256)),
            (this._bufferLength = 0),
            (this._bytesHashed = 0),
            (this._finished = !1),
            this.reset();
        }
        return (
          (SHA512.prototype._initState = function () {
            (this._stateHi[0] = 1779033703),
              (this._stateHi[1] = 3144134277),
              (this._stateHi[2] = 1013904242),
              (this._stateHi[3] = 2773480762),
              (this._stateHi[4] = 1359893119),
              (this._stateHi[5] = 2600822924),
              (this._stateHi[6] = 528734635),
              (this._stateHi[7] = 1541459225),
              (this._stateLo[0] = 4089235720),
              (this._stateLo[1] = 2227873595),
              (this._stateLo[2] = 4271175723),
              (this._stateLo[3] = 1595750129),
              (this._stateLo[4] = 2917565137),
              (this._stateLo[5] = 725511199),
              (this._stateLo[6] = 4215389547),
              (this._stateLo[7] = 327033209);
          }),
          (SHA512.prototype.reset = function () {
            return (
              this._initState(),
              (this._bufferLength = 0),
              (this._bytesHashed = 0),
              (this._finished = !1),
              this
            );
          }),
          (SHA512.prototype.clean = function () {
            ee.wipe(this._buffer),
              ee.wipe(this._tempHi),
              ee.wipe(this._tempLo),
              this.reset();
          }),
          (SHA512.prototype.update = function (s, W) {
            if ((void 0 === W && (W = s.length), this._finished))
              throw Error("SHA512: can't update because hash was finished.");
            var X = 0;
            if (((this._bytesHashed += W), this._bufferLength > 0)) {
              for (; this._bufferLength < x.BLOCK_SIZE && W > 0; )
                (this._buffer[this._bufferLength++] = s[X++]), W--;
              this._bufferLength === this.blockSize &&
                (hashBlocks(
                  this._tempHi,
                  this._tempLo,
                  this._stateHi,
                  this._stateLo,
                  this._buffer,
                  0,
                  this.blockSize
                ),
                (this._bufferLength = 0));
            }
            for (
              W >= this.blockSize &&
              ((X = hashBlocks(
                this._tempHi,
                this._tempLo,
                this._stateHi,
                this._stateLo,
                s,
                X,
                W
              )),
              (W %= this.blockSize));
              W > 0;

            )
              (this._buffer[this._bufferLength++] = s[X++]), W--;
            return this;
          }),
          (SHA512.prototype.finish = function (s) {
            if (!this._finished) {
              var x = this._bytesHashed,
                W = this._bufferLength,
                ee = x % 128 < 112 ? 128 : 256;
              this._buffer[W] = 128;
              for (var et = W + 1; et < ee - 8; et++) this._buffer[et] = 0;
              X.writeUint32BE((x / 536870912) | 0, this._buffer, ee - 8),
                X.writeUint32BE(x << 3, this._buffer, ee - 4),
                hashBlocks(
                  this._tempHi,
                  this._tempLo,
                  this._stateHi,
                  this._stateLo,
                  this._buffer,
                  0,
                  ee
                ),
                (this._finished = !0);
            }
            for (var et = 0; et < this.digestLength / 8; et++)
              X.writeUint32BE(this._stateHi[et], s, 8 * et),
                X.writeUint32BE(this._stateLo[et], s, 8 * et + 4);
            return this;
          }),
          (SHA512.prototype.digest = function () {
            var s = new Uint8Array(this.digestLength);
            return this.finish(s), s;
          }),
          (SHA512.prototype.saveState = function () {
            if (this._finished)
              throw Error("SHA256: cannot save finished state");
            return {
              stateHi: new Int32Array(this._stateHi),
              stateLo: new Int32Array(this._stateLo),
              buffer:
                this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
              bufferLength: this._bufferLength,
              bytesHashed: this._bytesHashed,
            };
          }),
          (SHA512.prototype.restoreState = function (s) {
            return (
              this._stateHi.set(s.stateHi),
              this._stateLo.set(s.stateLo),
              (this._bufferLength = s.bufferLength),
              s.buffer && this._buffer.set(s.buffer),
              (this._bytesHashed = s.bytesHashed),
              (this._finished = !1),
              this
            );
          }),
          (SHA512.prototype.cleanSavedState = function (s) {
            ee.wipe(s.stateHi),
              ee.wipe(s.stateLo),
              s.buffer && ee.wipe(s.buffer),
              (s.bufferLength = 0),
              (s.bytesHashed = 0);
          }),
          SHA512
        );
      })();
      x.SHA512 = et;
      var er = new Int32Array([
        1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399,
        3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265,
        2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394,
        310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994,
        1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317,
        3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139,
        264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901,
        1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837,
        2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879,
        3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901,
        113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964,
        773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823,
        1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142,
        2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273,
        3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344,
        3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720,
        430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593,
        883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403,
        1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012,
        2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044,
        2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573,
        3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711,
        3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554,
        174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315,
        685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100,
        1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866,
        1607167915, 987167468, 1816402316, 1246189591,
      ]);
      function hashBlocks(s, x, W, ee, et, ei, eo) {
        for (
          var ea,
            es,
            el,
            ec,
            eu,
            ed,
            eh,
            ep,
            ef = W[0],
            eg = W[1],
            em = W[2],
            ew = W[3],
            eb = W[4],
            ev = W[5],
            ey = W[6],
            e_ = W[7],
            eC = ee[0],
            ex = ee[1],
            eE = ee[2],
            eA = ee[3],
            eS = ee[4],
            ek = ee[5],
            eT = ee[6],
            eI = ee[7];
          eo >= 128;

        ) {
          for (var eP = 0; eP < 16; eP++) {
            var eR = 8 * eP + ei;
            (s[eP] = X.readUint32BE(et, eR)),
              (x[eP] = X.readUint32BE(et, eR + 4));
          }
          for (var eP = 0; eP < 80; eP++) {
            var eN = ef,
              eO = eg,
              eM = em,
              eD = ew,
              eB = eb,
              eL = ev,
              ej = ey,
              eU = e_,
              e$ = eC,
              eF = ex,
              ez = eE,
              eH = eA,
              eV = eS,
              eW = ek,
              eK = eT,
              eZ = eI;
            if (
              ((ea = e_),
              (eu = 65535 & (es = eI)),
              (ed = es >>> 16),
              (eh = 65535 & ea),
              (ep = ea >>> 16),
              (ea =
                ((eb >>> 14) | (eS << 18)) ^
                ((eb >>> 18) | (eS << 14)) ^
                ((eS >>> 9) | (eb << 23))),
              (eu +=
                65535 &
                (es =
                  ((eS >>> 14) | (eb << 18)) ^
                  ((eS >>> 18) | (eb << 14)) ^
                  ((eb >>> 9) | (eS << 23)))),
              (ed += es >>> 16),
              (eh += 65535 & ea),
              (ep += ea >>> 16),
              (ea = (eb & ev) ^ (~eb & ey)),
              (eu += 65535 & (es = (eS & ek) ^ (~eS & eT))),
              (ed += es >>> 16),
              (eh += 65535 & ea),
              (ep += ea >>> 16),
              (ea = er[2 * eP]),
              (eu += 65535 & (es = er[2 * eP + 1])),
              (ed += es >>> 16),
              (eh += 65535 & ea),
              (ep += ea >>> 16),
              (ea = s[eP % 16]),
              (eu += 65535 & (es = x[eP % 16])),
              (ed += es >>> 16),
              (eh += 65535 & ea),
              (ep += ea >>> 16),
              (ed += eu >>> 16),
              (eh += ed >>> 16),
              (ep += eh >>> 16),
              (el = (65535 & eh) | (ep << 16)),
              (ec = (65535 & eu) | (ed << 16)),
              (ea = el),
              (eu = 65535 & (es = ec)),
              (ed = es >>> 16),
              (eh = 65535 & ea),
              (ep = ea >>> 16),
              (ea =
                ((ef >>> 28) | (eC << 4)) ^
                ((eC >>> 2) | (ef << 30)) ^
                ((eC >>> 7) | (ef << 25))),
              (eu +=
                65535 &
                (es =
                  ((eC >>> 28) | (ef << 4)) ^
                  ((ef >>> 2) | (eC << 30)) ^
                  ((ef >>> 7) | (eC << 25)))),
              (ed += es >>> 16),
              (eh += 65535 & ea),
              (ep += ea >>> 16),
              (ea = (ef & eg) ^ (ef & em) ^ (eg & em)),
              (eu += 65535 & (es = (eC & ex) ^ (eC & eE) ^ (ex & eE))),
              (ed += es >>> 16),
              (eh += 65535 & ea),
              (ep += ea >>> 16),
              (ed += eu >>> 16),
              (eh += ed >>> 16),
              (ep += eh >>> 16),
              (eU = (65535 & eh) | (ep << 16)),
              (eZ = (65535 & eu) | (ed << 16)),
              (ea = eD),
              (eu = 65535 & (es = eH)),
              (ed = es >>> 16),
              (eh = 65535 & ea),
              (ep = ea >>> 16),
              (ea = el),
              (eu += 65535 & (es = ec)),
              (ed += es >>> 16),
              (eh += 65535 & ea),
              (ep += ea >>> 16),
              (ed += eu >>> 16),
              (eh += ed >>> 16),
              (ep += eh >>> 16),
              (eD = (65535 & eh) | (ep << 16)),
              (eH = (65535 & eu) | (ed << 16)),
              (eg = eN),
              (em = eO),
              (ew = eM),
              (eb = eD),
              (ev = eB),
              (ey = eL),
              (e_ = ej),
              (ef = eU),
              (ex = e$),
              (eE = eF),
              (eA = ez),
              (eS = eH),
              (ek = eV),
              (eT = eW),
              (eI = eK),
              (eC = eZ),
              eP % 16 == 15)
            )
              for (var eR = 0; eR < 16; eR++)
                (ea = s[eR]),
                  (eu = 65535 & (es = x[eR])),
                  (ed = es >>> 16),
                  (eh = 65535 & ea),
                  (ep = ea >>> 16),
                  (ea = s[(eR + 9) % 16]),
                  (eu += 65535 & (es = x[(eR + 9) % 16])),
                  (ed += es >>> 16),
                  (eh += 65535 & ea),
                  (ep += ea >>> 16),
                  (ea =
                    (((el = s[(eR + 1) % 16]) >>> 1) |
                      ((ec = x[(eR + 1) % 16]) << 31)) ^
                    ((el >>> 8) | (ec << 24)) ^
                    (el >>> 7)),
                  (eu +=
                    65535 &
                    (es =
                      ((ec >>> 1) | (el << 31)) ^
                      ((ec >>> 8) | (el << 24)) ^
                      ((ec >>> 7) | (el << 25)))),
                  (ed += es >>> 16),
                  (eh += 65535 & ea),
                  (ep += ea >>> 16),
                  (ea =
                    (((el = s[(eR + 14) % 16]) >>> 19) |
                      ((ec = x[(eR + 14) % 16]) << 13)) ^
                    ((ec >>> 29) | (el << 3)) ^
                    (el >>> 6)),
                  (eu +=
                    65535 &
                    (es =
                      ((ec >>> 19) | (el << 13)) ^
                      ((el >>> 29) | (ec << 3)) ^
                      ((ec >>> 6) | (el << 26)))),
                  (ed += es >>> 16),
                  (eh += 65535 & ea),
                  (ep += ea >>> 16),
                  (ed += eu >>> 16),
                  (eh += ed >>> 16),
                  (ep += eh >>> 16),
                  (s[eR] = (65535 & eh) | (ep << 16)),
                  (x[eR] = (65535 & eu) | (ed << 16));
          }
          (ea = ef),
            (eu = 65535 & (es = eC)),
            (ed = es >>> 16),
            (eh = 65535 & ea),
            (ep = ea >>> 16),
            (ea = W[0]),
            (eu += 65535 & (es = ee[0])),
            (ed += es >>> 16),
            (eh += 65535 & ea),
            (ep += ea >>> 16),
            (ed += eu >>> 16),
            (eh += ed >>> 16),
            (ep += eh >>> 16),
            (W[0] = ef = (65535 & eh) | (ep << 16)),
            (ee[0] = eC = (65535 & eu) | (ed << 16)),
            (ea = eg),
            (eu = 65535 & (es = ex)),
            (ed = es >>> 16),
            (eh = 65535 & ea),
            (ep = ea >>> 16),
            (ea = W[1]),
            (eu += 65535 & (es = ee[1])),
            (ed += es >>> 16),
            (eh += 65535 & ea),
            (ep += ea >>> 16),
            (ed += eu >>> 16),
            (eh += ed >>> 16),
            (ep += eh >>> 16),
            (W[1] = eg = (65535 & eh) | (ep << 16)),
            (ee[1] = ex = (65535 & eu) | (ed << 16)),
            (ea = em),
            (eu = 65535 & (es = eE)),
            (ed = es >>> 16),
            (eh = 65535 & ea),
            (ep = ea >>> 16),
            (ea = W[2]),
            (eu += 65535 & (es = ee[2])),
            (ed += es >>> 16),
            (eh += 65535 & ea),
            (ep += ea >>> 16),
            (ed += eu >>> 16),
            (eh += ed >>> 16),
            (ep += eh >>> 16),
            (W[2] = em = (65535 & eh) | (ep << 16)),
            (ee[2] = eE = (65535 & eu) | (ed << 16)),
            (ea = ew),
            (eu = 65535 & (es = eA)),
            (ed = es >>> 16),
            (eh = 65535 & ea),
            (ep = ea >>> 16),
            (ea = W[3]),
            (eu += 65535 & (es = ee[3])),
            (ed += es >>> 16),
            (eh += 65535 & ea),
            (ep += ea >>> 16),
            (ed += eu >>> 16),
            (eh += ed >>> 16),
            (ep += eh >>> 16),
            (W[3] = ew = (65535 & eh) | (ep << 16)),
            (ee[3] = eA = (65535 & eu) | (ed << 16)),
            (ea = eb),
            (eu = 65535 & (es = eS)),
            (ed = es >>> 16),
            (eh = 65535 & ea),
            (ep = ea >>> 16),
            (ea = W[4]),
            (eu += 65535 & (es = ee[4])),
            (ed += es >>> 16),
            (eh += 65535 & ea),
            (ep += ea >>> 16),
            (ed += eu >>> 16),
            (eh += ed >>> 16),
            (ep += eh >>> 16),
            (W[4] = eb = (65535 & eh) | (ep << 16)),
            (ee[4] = eS = (65535 & eu) | (ed << 16)),
            (ea = ev),
            (eu = 65535 & (es = ek)),
            (ed = es >>> 16),
            (eh = 65535 & ea),
            (ep = ea >>> 16),
            (ea = W[5]),
            (eu += 65535 & (es = ee[5])),
            (ed += es >>> 16),
            (eh += 65535 & ea),
            (ep += ea >>> 16),
            (ed += eu >>> 16),
            (eh += ed >>> 16),
            (ep += eh >>> 16),
            (W[5] = ev = (65535 & eh) | (ep << 16)),
            (ee[5] = ek = (65535 & eu) | (ed << 16)),
            (ea = ey),
            (eu = 65535 & (es = eT)),
            (ed = es >>> 16),
            (eh = 65535 & ea),
            (ep = ea >>> 16),
            (ea = W[6]),
            (eu += 65535 & (es = ee[6])),
            (ed += es >>> 16),
            (eh += 65535 & ea),
            (ep += ea >>> 16),
            (ed += eu >>> 16),
            (eh += ed >>> 16),
            (ep += eh >>> 16),
            (W[6] = ey = (65535 & eh) | (ep << 16)),
            (ee[6] = eT = (65535 & eu) | (ed << 16)),
            (ea = e_),
            (eu = 65535 & (es = eI)),
            (ed = es >>> 16),
            (eh = 65535 & ea),
            (ep = ea >>> 16),
            (ea = W[7]),
            (eu += 65535 & (es = ee[7])),
            (ed += es >>> 16),
            (eh += 65535 & ea),
            (ep += ea >>> 16),
            (ed += eu >>> 16),
            (eh += ed >>> 16),
            (ep += eh >>> 16),
            (W[7] = e_ = (65535 & eh) | (ep << 16)),
            (ee[7] = eI = (65535 & eu) | (ed << 16)),
            (ei += 128),
            (eo -= 128);
        }
        return ei;
      }
      x.hash = function (s) {
        var x = new et();
        x.update(s);
        var W = x.digest();
        return x.clean(), W;
      };
    },
    17309: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.wipe = function (s) {
          for (var x = 0; x < s.length; x++) s[x] = 0;
          return s;
        });
    },
    57664: function (s, x, W) {
      "use strict";
      x.gi = x.Au = x.KS = x.kz = void 0;
      let X = W(31416),
        ee = W(17309);
      function gf(s) {
        let x = new Float64Array(16);
        if (s) for (let W = 0; W < s.length; W++) x[W] = s[W];
        return x;
      }
      (x.kz = 32), (x.KS = 32);
      let et = new Uint8Array(32);
      et[0] = 9;
      let er = gf([56129, 1]);
      function car25519(s) {
        let x = 1;
        for (let W = 0; W < 16; W++) {
          let X = s[W] + x + 65535;
          (x = Math.floor(X / 65536)), (s[W] = X - 65536 * x);
        }
        s[0] += x - 1 + 37 * (x - 1);
      }
      function sel25519(s, x, W) {
        let X = ~(W - 1);
        for (let W = 0; W < 16; W++) {
          let ee = X & (s[W] ^ x[W]);
          (s[W] ^= ee), (x[W] ^= ee);
        }
      }
      function add(s, x, W) {
        for (let X = 0; X < 16; X++) s[X] = x[X] + W[X];
      }
      function sub(s, x, W) {
        for (let X = 0; X < 16; X++) s[X] = x[X] - W[X];
      }
      function mul(s, x, W) {
        let X,
          ee,
          et = 0,
          er = 0,
          ei = 0,
          eo = 0,
          ea = 0,
          es = 0,
          el = 0,
          ec = 0,
          eu = 0,
          ed = 0,
          eh = 0,
          ep = 0,
          ef = 0,
          eg = 0,
          em = 0,
          ew = 0,
          eb = 0,
          ev = 0,
          ey = 0,
          e_ = 0,
          eC = 0,
          ex = 0,
          eE = 0,
          eA = 0,
          eS = 0,
          ek = 0,
          eT = 0,
          eI = 0,
          eP = 0,
          eR = 0,
          eN = 0,
          eO = W[0],
          eM = W[1],
          eD = W[2],
          eB = W[3],
          eL = W[4],
          ej = W[5],
          eU = W[6],
          e$ = W[7],
          eF = W[8],
          ez = W[9],
          eH = W[10],
          eV = W[11],
          eW = W[12],
          eK = W[13],
          eZ = W[14],
          eG = W[15];
        (et += (X = x[0]) * eO),
          (er += X * eM),
          (ei += X * eD),
          (eo += X * eB),
          (ea += X * eL),
          (es += X * ej),
          (el += X * eU),
          (ec += X * e$),
          (eu += X * eF),
          (ed += X * ez),
          (eh += X * eH),
          (ep += X * eV),
          (ef += X * eW),
          (eg += X * eK),
          (em += X * eZ),
          (ew += X * eG),
          (er += (X = x[1]) * eO),
          (ei += X * eM),
          (eo += X * eD),
          (ea += X * eB),
          (es += X * eL),
          (el += X * ej),
          (ec += X * eU),
          (eu += X * e$),
          (ed += X * eF),
          (eh += X * ez),
          (ep += X * eH),
          (ef += X * eV),
          (eg += X * eW),
          (em += X * eK),
          (ew += X * eZ),
          (eb += X * eG),
          (ei += (X = x[2]) * eO),
          (eo += X * eM),
          (ea += X * eD),
          (es += X * eB),
          (el += X * eL),
          (ec += X * ej),
          (eu += X * eU),
          (ed += X * e$),
          (eh += X * eF),
          (ep += X * ez),
          (ef += X * eH),
          (eg += X * eV),
          (em += X * eW),
          (ew += X * eK),
          (eb += X * eZ),
          (ev += X * eG),
          (eo += (X = x[3]) * eO),
          (ea += X * eM),
          (es += X * eD),
          (el += X * eB),
          (ec += X * eL),
          (eu += X * ej),
          (ed += X * eU),
          (eh += X * e$),
          (ep += X * eF),
          (ef += X * ez),
          (eg += X * eH),
          (em += X * eV),
          (ew += X * eW),
          (eb += X * eK),
          (ev += X * eZ),
          (ey += X * eG),
          (ea += (X = x[4]) * eO),
          (es += X * eM),
          (el += X * eD),
          (ec += X * eB),
          (eu += X * eL),
          (ed += X * ej),
          (eh += X * eU),
          (ep += X * e$),
          (ef += X * eF),
          (eg += X * ez),
          (em += X * eH),
          (ew += X * eV),
          (eb += X * eW),
          (ev += X * eK),
          (ey += X * eZ),
          (e_ += X * eG),
          (es += (X = x[5]) * eO),
          (el += X * eM),
          (ec += X * eD),
          (eu += X * eB),
          (ed += X * eL),
          (eh += X * ej),
          (ep += X * eU),
          (ef += X * e$),
          (eg += X * eF),
          (em += X * ez),
          (ew += X * eH),
          (eb += X * eV),
          (ev += X * eW),
          (ey += X * eK),
          (e_ += X * eZ),
          (eC += X * eG),
          (el += (X = x[6]) * eO),
          (ec += X * eM),
          (eu += X * eD),
          (ed += X * eB),
          (eh += X * eL),
          (ep += X * ej),
          (ef += X * eU),
          (eg += X * e$),
          (em += X * eF),
          (ew += X * ez),
          (eb += X * eH),
          (ev += X * eV),
          (ey += X * eW),
          (e_ += X * eK),
          (eC += X * eZ),
          (ex += X * eG),
          (ec += (X = x[7]) * eO),
          (eu += X * eM),
          (ed += X * eD),
          (eh += X * eB),
          (ep += X * eL),
          (ef += X * ej),
          (eg += X * eU),
          (em += X * e$),
          (ew += X * eF),
          (eb += X * ez),
          (ev += X * eH),
          (ey += X * eV),
          (e_ += X * eW),
          (eC += X * eK),
          (ex += X * eZ),
          (eE += X * eG),
          (eu += (X = x[8]) * eO),
          (ed += X * eM),
          (eh += X * eD),
          (ep += X * eB),
          (ef += X * eL),
          (eg += X * ej),
          (em += X * eU),
          (ew += X * e$),
          (eb += X * eF),
          (ev += X * ez),
          (ey += X * eH),
          (e_ += X * eV),
          (eC += X * eW),
          (ex += X * eK),
          (eE += X * eZ),
          (eA += X * eG),
          (ed += (X = x[9]) * eO),
          (eh += X * eM),
          (ep += X * eD),
          (ef += X * eB),
          (eg += X * eL),
          (em += X * ej),
          (ew += X * eU),
          (eb += X * e$),
          (ev += X * eF),
          (ey += X * ez),
          (e_ += X * eH),
          (eC += X * eV),
          (ex += X * eW),
          (eE += X * eK),
          (eA += X * eZ),
          (eS += X * eG),
          (eh += (X = x[10]) * eO),
          (ep += X * eM),
          (ef += X * eD),
          (eg += X * eB),
          (em += X * eL),
          (ew += X * ej),
          (eb += X * eU),
          (ev += X * e$),
          (ey += X * eF),
          (e_ += X * ez),
          (eC += X * eH),
          (ex += X * eV),
          (eE += X * eW),
          (eA += X * eK),
          (eS += X * eZ),
          (ek += X * eG),
          (ep += (X = x[11]) * eO),
          (ef += X * eM),
          (eg += X * eD),
          (em += X * eB),
          (ew += X * eL),
          (eb += X * ej),
          (ev += X * eU),
          (ey += X * e$),
          (e_ += X * eF),
          (eC += X * ez),
          (ex += X * eH),
          (eE += X * eV),
          (eA += X * eW),
          (eS += X * eK),
          (ek += X * eZ),
          (eT += X * eG),
          (ef += (X = x[12]) * eO),
          (eg += X * eM),
          (em += X * eD),
          (ew += X * eB),
          (eb += X * eL),
          (ev += X * ej),
          (ey += X * eU),
          (e_ += X * e$),
          (eC += X * eF),
          (ex += X * ez),
          (eE += X * eH),
          (eA += X * eV),
          (eS += X * eW),
          (ek += X * eK),
          (eT += X * eZ),
          (eI += X * eG),
          (eg += (X = x[13]) * eO),
          (em += X * eM),
          (ew += X * eD),
          (eb += X * eB),
          (ev += X * eL),
          (ey += X * ej),
          (e_ += X * eU),
          (eC += X * e$),
          (ex += X * eF),
          (eE += X * ez),
          (eA += X * eH),
          (eS += X * eV),
          (ek += X * eW),
          (eT += X * eK),
          (eI += X * eZ),
          (eP += X * eG),
          (em += (X = x[14]) * eO),
          (ew += X * eM),
          (eb += X * eD),
          (ev += X * eB),
          (ey += X * eL),
          (e_ += X * ej),
          (eC += X * eU),
          (ex += X * e$),
          (eE += X * eF),
          (eA += X * ez),
          (eS += X * eH),
          (ek += X * eV),
          (eT += X * eW),
          (eI += X * eK),
          (eP += X * eZ),
          (eR += X * eG),
          (ew += (X = x[15]) * eO),
          (eb += X * eM),
          (ev += X * eD),
          (ey += X * eB),
          (e_ += X * eL),
          (eC += X * ej),
          (ex += X * eU),
          (eE += X * e$),
          (eA += X * eF),
          (eS += X * ez),
          (ek += X * eH),
          (eT += X * eV),
          (eI += X * eW),
          (eP += X * eK),
          (eR += X * eZ),
          (eN += X * eG),
          (et += 38 * eb),
          (er += 38 * ev),
          (ei += 38 * ey),
          (eo += 38 * e_),
          (ea += 38 * eC),
          (es += 38 * ex),
          (el += 38 * eE),
          (ec += 38 * eA),
          (eu += 38 * eS),
          (ed += 38 * ek),
          (eh += 38 * eT),
          (ep += 38 * eI),
          (ef += 38 * eP),
          (eg += 38 * eR),
          (em += 38 * eN),
          (ee = Math.floor((X = et + (ee = 1) + 65535) / 65536)),
          (et = X - 65536 * ee),
          (ee = Math.floor((X = er + ee + 65535) / 65536)),
          (er = X - 65536 * ee),
          (ee = Math.floor((X = ei + ee + 65535) / 65536)),
          (ei = X - 65536 * ee),
          (ee = Math.floor((X = eo + ee + 65535) / 65536)),
          (eo = X - 65536 * ee),
          (ee = Math.floor((X = ea + ee + 65535) / 65536)),
          (ea = X - 65536 * ee),
          (ee = Math.floor((X = es + ee + 65535) / 65536)),
          (es = X - 65536 * ee),
          (ee = Math.floor((X = el + ee + 65535) / 65536)),
          (el = X - 65536 * ee),
          (ee = Math.floor((X = ec + ee + 65535) / 65536)),
          (ec = X - 65536 * ee),
          (ee = Math.floor((X = eu + ee + 65535) / 65536)),
          (eu = X - 65536 * ee),
          (ee = Math.floor((X = ed + ee + 65535) / 65536)),
          (ed = X - 65536 * ee),
          (ee = Math.floor((X = eh + ee + 65535) / 65536)),
          (eh = X - 65536 * ee),
          (ee = Math.floor((X = ep + ee + 65535) / 65536)),
          (ep = X - 65536 * ee),
          (ee = Math.floor((X = ef + ee + 65535) / 65536)),
          (ef = X - 65536 * ee),
          (ee = Math.floor((X = eg + ee + 65535) / 65536)),
          (eg = X - 65536 * ee),
          (ee = Math.floor((X = em + ee + 65535) / 65536)),
          (em = X - 65536 * ee),
          (ee = Math.floor((X = ew + ee + 65535) / 65536)),
          (ew = X - 65536 * ee),
          (et += ee - 1 + 37 * (ee - 1)),
          (ee = Math.floor((X = et + (ee = 1) + 65535) / 65536)),
          (et = X - 65536 * ee),
          (ee = Math.floor((X = er + ee + 65535) / 65536)),
          (er = X - 65536 * ee),
          (ee = Math.floor((X = ei + ee + 65535) / 65536)),
          (ei = X - 65536 * ee),
          (ee = Math.floor((X = eo + ee + 65535) / 65536)),
          (eo = X - 65536 * ee),
          (ee = Math.floor((X = ea + ee + 65535) / 65536)),
          (ea = X - 65536 * ee),
          (ee = Math.floor((X = es + ee + 65535) / 65536)),
          (es = X - 65536 * ee),
          (ee = Math.floor((X = el + ee + 65535) / 65536)),
          (el = X - 65536 * ee),
          (ee = Math.floor((X = ec + ee + 65535) / 65536)),
          (ec = X - 65536 * ee),
          (ee = Math.floor((X = eu + ee + 65535) / 65536)),
          (eu = X - 65536 * ee),
          (ee = Math.floor((X = ed + ee + 65535) / 65536)),
          (ed = X - 65536 * ee),
          (ee = Math.floor((X = eh + ee + 65535) / 65536)),
          (eh = X - 65536 * ee),
          (ee = Math.floor((X = ep + ee + 65535) / 65536)),
          (ep = X - 65536 * ee),
          (ee = Math.floor((X = ef + ee + 65535) / 65536)),
          (ef = X - 65536 * ee),
          (ee = Math.floor((X = eg + ee + 65535) / 65536)),
          (eg = X - 65536 * ee),
          (ee = Math.floor((X = em + ee + 65535) / 65536)),
          (em = X - 65536 * ee),
          (ee = Math.floor((X = ew + ee + 65535) / 65536)),
          (ew = X - 65536 * ee),
          (et += ee - 1 + 37 * (ee - 1)),
          (s[0] = et),
          (s[1] = er),
          (s[2] = ei),
          (s[3] = eo),
          (s[4] = ea),
          (s[5] = es),
          (s[6] = el),
          (s[7] = ec),
          (s[8] = eu),
          (s[9] = ed),
          (s[10] = eh),
          (s[11] = ep),
          (s[12] = ef),
          (s[13] = eg),
          (s[14] = em),
          (s[15] = ew);
      }
      function scalarMult(s, x) {
        let W = new Uint8Array(32),
          X = new Float64Array(80),
          ee = gf(),
          et = gf(),
          ei = gf(),
          eo = gf(),
          ea = gf(),
          es = gf();
        for (let x = 0; x < 31; x++) W[x] = s[x];
        (W[31] = (127 & s[31]) | 64),
          (W[0] &= 248),
          (function (s, x) {
            for (let W = 0; W < 16; W++) s[W] = x[2 * W] + (x[2 * W + 1] << 8);
            s[15] &= 32767;
          })(X, x);
        for (let s = 0; s < 16; s++) et[s] = X[s];
        ee[0] = eo[0] = 1;
        for (let s = 254; s >= 0; --s) {
          let x = (W[s >>> 3] >>> (7 & s)) & 1;
          sel25519(ee, et, x),
            sel25519(ei, eo, x),
            add(ea, ee, ei),
            sub(ee, ee, ei),
            add(ei, et, eo),
            sub(et, et, eo),
            mul(eo, ea, ea),
            mul(es, ee, ee),
            mul(ee, ei, ee),
            mul(ei, et, ea),
            add(ea, ee, ei),
            sub(ee, ee, ei),
            mul(et, ee, ee),
            sub(ei, eo, es),
            mul(ee, ei, er),
            add(ee, ee, eo),
            mul(ei, ei, ee),
            mul(ee, eo, es),
            mul(eo, et, X),
            mul(et, ea, ea),
            sel25519(ee, et, x),
            sel25519(ei, eo, x);
        }
        for (let s = 0; s < 16; s++)
          (X[s + 16] = ee[s]),
            (X[s + 32] = ei[s]),
            (X[s + 48] = et[s]),
            (X[s + 64] = eo[s]);
        let el = X.subarray(32),
          ec = X.subarray(16);
        !(function (s, x) {
          let W = gf();
          for (let s = 0; s < 16; s++) W[s] = x[s];
          for (let s = 253; s >= 0; s--)
            mul(W, W, W), 2 !== s && 4 !== s && mul(W, W, x);
          for (let x = 0; x < 16; x++) s[x] = W[x];
        })(el, el),
          mul(ec, ec, el);
        let eu = new Uint8Array(32);
        return (
          !(function (s, x) {
            let W = gf(),
              X = gf();
            for (let s = 0; s < 16; s++) X[s] = x[s];
            car25519(X), car25519(X), car25519(X);
            for (let s = 0; s < 2; s++) {
              W[0] = X[0] - 65517;
              for (let s = 1; s < 15; s++)
                (W[s] = X[s] - 65535 - ((W[s - 1] >> 16) & 1)),
                  (W[s - 1] &= 65535);
              W[15] = X[15] - 32767 - ((W[14] >> 16) & 1);
              let s = (W[15] >> 16) & 1;
              (W[14] &= 65535), sel25519(X, W, 1 - s);
            }
            for (let x = 0; x < 16; x++)
              (s[2 * x] = 255 & X[x]), (s[2 * x + 1] = X[x] >> 8);
          })(eu, ec),
          eu
        );
      }
      (x.Au = function (s) {
        let W = (0, X.randomBytes)(32, s),
          er = (function (s) {
            if (s.length !== x.KS)
              throw Error(`x25519: seed must be ${x.KS} bytes`);
            let W = new Uint8Array(s),
              X = scalarMult(W, et);
            return { publicKey: X, secretKey: W };
          })(W);
        return (0, ee.wipe)(W), er;
      }),
        (x.gi = function (s, W, X = !1) {
          if (s.length !== x.kz)
            throw Error("X25519: incorrect secret key length");
          if (W.length !== x.kz)
            throw Error("X25519: incorrect public key length");
          let ee = scalarMult(s, W);
          if (X) {
            let s = 0;
            for (let x = 0; x < ee.length; x++) s |= ee[x];
            if (0 === s) throw Error("X25519: invalid shared key");
          }
          return ee;
        });
    },
    40926: function (s, x, W) {
      "use strict";
      function getBrowerCrypto() {
        return (
          (null === W.g || void 0 === W.g ? void 0 : W.g.crypto) ||
          (null === W.g || void 0 === W.g ? void 0 : W.g.msCrypto) ||
          {}
        );
      }
      function getSubtleCrypto() {
        let s = getBrowerCrypto();
        return s.subtle || s.webkitSubtle;
      }
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.isBrowserCryptoAvailable =
          x.getSubtleCrypto =
          x.getBrowerCrypto =
            void 0),
        (x.getBrowerCrypto = getBrowerCrypto),
        (x.getSubtleCrypto = getSubtleCrypto),
        (x.isBrowserCryptoAvailable = function () {
          return !!getBrowerCrypto() && !!getSubtleCrypto();
        });
    },
    88618: function (s, x, W) {
      "use strict";
      var X = W(83454);
      function isReactNative() {
        return (
          "undefined" == typeof document &&
          "undefined" != typeof navigator &&
          "ReactNative" === navigator.product
        );
      }
      function isNode() {
        return (
          void 0 !== X && void 0 !== X.versions && void 0 !== X.versions.node
        );
      }
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.isBrowser = x.isNode = x.isReactNative = void 0),
        (x.isReactNative = isReactNative),
        (x.isNode = isNode),
        (x.isBrowser = function () {
          return !isReactNative() && !isNode();
        });
    },
    1468: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      let X = W(34308);
      X.__exportStar(W(40926), x), X.__exportStar(W(88618), x);
    },
    34308: function (s, x, W) {
      "use strict";
      W.r(x),
        W.d(x, {
          __assign: function () {
            return __assign;
          },
          __asyncDelegator: function () {
            return __asyncDelegator;
          },
          __asyncGenerator: function () {
            return __asyncGenerator;
          },
          __asyncValues: function () {
            return __asyncValues;
          },
          __await: function () {
            return __await;
          },
          __awaiter: function () {
            return __awaiter;
          },
          __classPrivateFieldGet: function () {
            return __classPrivateFieldGet;
          },
          __classPrivateFieldSet: function () {
            return __classPrivateFieldSet;
          },
          __createBinding: function () {
            return __createBinding;
          },
          __decorate: function () {
            return __decorate;
          },
          __exportStar: function () {
            return __exportStar;
          },
          __extends: function () {
            return __extends;
          },
          __generator: function () {
            return __generator;
          },
          __importDefault: function () {
            return __importDefault;
          },
          __importStar: function () {
            return __importStar;
          },
          __makeTemplateObject: function () {
            return __makeTemplateObject;
          },
          __metadata: function () {
            return __metadata;
          },
          __param: function () {
            return __param;
          },
          __read: function () {
            return __read;
          },
          __rest: function () {
            return __rest;
          },
          __spread: function () {
            return __spread;
          },
          __spreadArrays: function () {
            return __spreadArrays;
          },
          __values: function () {
            return __values;
          },
        });
      /*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ var extendStatics =
        function (s, x) {
          return (extendStatics =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (s, x) {
                s.__proto__ = x;
              }) ||
            function (s, x) {
              for (var W in x) x.hasOwnProperty(W) && (s[W] = x[W]);
            })(s, x);
        };
      function __extends(s, x) {
        function __() {
          this.constructor = s;
        }
        extendStatics(s, x),
          (s.prototype =
            null === x
              ? Object.create(x)
              : ((__.prototype = x.prototype), new __()));
      }
      var __assign = function () {
        return (__assign =
          Object.assign ||
          function (s) {
            for (var x, W = 1, X = arguments.length; W < X; W++)
              for (var ee in (x = arguments[W]))
                Object.prototype.hasOwnProperty.call(x, ee) && (s[ee] = x[ee]);
            return s;
          }).apply(this, arguments);
      };
      function __rest(s, x) {
        var W = {};
        for (var X in s)
          Object.prototype.hasOwnProperty.call(s, X) &&
            0 > x.indexOf(X) &&
            (W[X] = s[X]);
        if (null != s && "function" == typeof Object.getOwnPropertySymbols)
          for (
            var ee = 0, X = Object.getOwnPropertySymbols(s);
            ee < X.length;
            ee++
          )
            0 > x.indexOf(X[ee]) &&
              Object.prototype.propertyIsEnumerable.call(s, X[ee]) &&
              (W[X[ee]] = s[X[ee]]);
        return W;
      }
      function __decorate(s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      }
      function __param(s, x) {
        return function (W, X) {
          x(W, X, s);
        };
      }
      function __metadata(s, x) {
        if ("object" == typeof Reflect && "function" == typeof Reflect.metadata)
          return Reflect.metadata(s, x);
      }
      function __awaiter(s, x, W, X) {
        return new (W || (W = Promise))(function (ee, et) {
          function fulfilled(s) {
            try {
              step(X.next(s));
            } catch (s) {
              et(s);
            }
          }
          function rejected(s) {
            try {
              step(X.throw(s));
            } catch (s) {
              et(s);
            }
          }
          function step(s) {
            var x;
            s.done
              ? ee(s.value)
              : ((x = s.value) instanceof W
                  ? x
                  : new W(function (s) {
                      s(x);
                    })
                ).then(fulfilled, rejected);
          }
          step((X = X.apply(s, x || [])).next());
        });
      }
      function __generator(s, x) {
        var W,
          X,
          ee,
          et,
          er = {
            label: 0,
            sent: function () {
              if (1 & ee[0]) throw ee[1];
              return ee[1];
            },
            trys: [],
            ops: [],
          };
        return (
          (et = { next: verb(0), throw: verb(1), return: verb(2) }),
          "function" == typeof Symbol &&
            (et[Symbol.iterator] = function () {
              return this;
            }),
          et
        );
        function verb(et) {
          return function (ei) {
            return (function (et) {
              if (W) throw TypeError("Generator is already executing.");
              for (; er; )
                try {
                  if (
                    ((W = 1),
                    X &&
                      (ee =
                        2 & et[0]
                          ? X.return
                          : et[0]
                          ? X.throw || ((ee = X.return) && ee.call(X), 0)
                          : X.next) &&
                      !(ee = ee.call(X, et[1])).done)
                  )
                    return ee;
                  switch (
                    ((X = 0), ee && (et = [2 & et[0], ee.value]), et[0])
                  ) {
                    case 0:
                    case 1:
                      ee = et;
                      break;
                    case 4:
                      return er.label++, { value: et[1], done: !1 };
                    case 5:
                      er.label++, (X = et[1]), (et = [0]);
                      continue;
                    case 7:
                      (et = er.ops.pop()), er.trys.pop();
                      continue;
                    default:
                      if (
                        !(ee =
                          (ee = er.trys).length > 0 && ee[ee.length - 1]) &&
                        (6 === et[0] || 2 === et[0])
                      ) {
                        er = 0;
                        continue;
                      }
                      if (
                        3 === et[0] &&
                        (!ee || (et[1] > ee[0] && et[1] < ee[3]))
                      ) {
                        er.label = et[1];
                        break;
                      }
                      if (6 === et[0] && er.label < ee[1]) {
                        (er.label = ee[1]), (ee = et);
                        break;
                      }
                      if (ee && er.label < ee[2]) {
                        (er.label = ee[2]), er.ops.push(et);
                        break;
                      }
                      ee[2] && er.ops.pop(), er.trys.pop();
                      continue;
                  }
                  et = x.call(s, er);
                } catch (s) {
                  (et = [6, s]), (X = 0);
                } finally {
                  W = ee = 0;
                }
              if (5 & et[0]) throw et[1];
              return { value: et[0] ? et[1] : void 0, done: !0 };
            })([et, ei]);
          };
        }
      }
      function __createBinding(s, x, W, X) {
        void 0 === X && (X = W), (s[X] = x[W]);
      }
      function __exportStar(s, x) {
        for (var W in s)
          "default" === W || x.hasOwnProperty(W) || (x[W] = s[W]);
      }
      function __values(s) {
        var x = "function" == typeof Symbol && Symbol.iterator,
          W = x && s[x],
          X = 0;
        if (W) return W.call(s);
        if (s && "number" == typeof s.length)
          return {
            next: function () {
              return (
                s && X >= s.length && (s = void 0),
                { value: s && s[X++], done: !s }
              );
            },
          };
        throw TypeError(
          x ? "Object is not iterable." : "Symbol.iterator is not defined."
        );
      }
      function __read(s, x) {
        var W = "function" == typeof Symbol && s[Symbol.iterator];
        if (!W) return s;
        var X,
          ee,
          et = W.call(s),
          er = [];
        try {
          for (; (void 0 === x || x-- > 0) && !(X = et.next()).done; )
            er.push(X.value);
        } catch (s) {
          ee = { error: s };
        } finally {
          try {
            X && !X.done && (W = et.return) && W.call(et);
          } finally {
            if (ee) throw ee.error;
          }
        }
        return er;
      }
      function __spread() {
        for (var s = [], x = 0; x < arguments.length; x++)
          s = s.concat(__read(arguments[x]));
        return s;
      }
      function __spreadArrays() {
        for (var s = 0, x = 0, W = arguments.length; x < W; x++)
          s += arguments[x].length;
        for (var X = Array(s), ee = 0, x = 0; x < W; x++)
          for (
            var et = arguments[x], er = 0, ei = et.length;
            er < ei;
            er++, ee++
          )
            X[ee] = et[er];
        return X;
      }
      function __await(s) {
        return this instanceof __await ? ((this.v = s), this) : new __await(s);
      }
      function __asyncGenerator(s, x, W) {
        if (!Symbol.asyncIterator)
          throw TypeError("Symbol.asyncIterator is not defined.");
        var X,
          ee = W.apply(s, x || []),
          et = [];
        return (
          (X = {}),
          verb("next"),
          verb("throw"),
          verb("return"),
          (X[Symbol.asyncIterator] = function () {
            return this;
          }),
          X
        );
        function verb(s) {
          ee[s] &&
            (X[s] = function (x) {
              return new Promise(function (W, X) {
                et.push([s, x, W, X]) > 1 || resume(s, x);
              });
            });
        }
        function resume(s, x) {
          try {
            var W;
            (W = ee[s](x)).value instanceof __await
              ? Promise.resolve(W.value.v).then(fulfill, reject)
              : settle(et[0][2], W);
          } catch (s) {
            settle(et[0][3], s);
          }
        }
        function fulfill(s) {
          resume("next", s);
        }
        function reject(s) {
          resume("throw", s);
        }
        function settle(s, x) {
          s(x), et.shift(), et.length && resume(et[0][0], et[0][1]);
        }
      }
      function __asyncDelegator(s) {
        var x, W;
        return (
          (x = {}),
          verb("next"),
          verb("throw", function (s) {
            throw s;
          }),
          verb("return"),
          (x[Symbol.iterator] = function () {
            return this;
          }),
          x
        );
        function verb(X, ee) {
          x[X] = s[X]
            ? function (x) {
                return (W = !W)
                  ? { value: __await(s[X](x)), done: "return" === X }
                  : ee
                  ? ee(x)
                  : x;
              }
            : ee;
        }
      }
      function __asyncValues(s) {
        if (!Symbol.asyncIterator)
          throw TypeError("Symbol.asyncIterator is not defined.");
        var x,
          W = s[Symbol.asyncIterator];
        return W
          ? W.call(s)
          : ((s = __values(s)),
            (x = {}),
            verb("next"),
            verb("throw"),
            verb("return"),
            (x[Symbol.asyncIterator] = function () {
              return this;
            }),
            x);
        function verb(W) {
          x[W] =
            s[W] &&
            function (x) {
              return new Promise(function (X, ee) {
                !(function (s, x, W, X) {
                  Promise.resolve(X).then(function (x) {
                    s({ value: x, done: W });
                  }, x);
                })(X, ee, (x = s[W](x)).done, x.value);
              });
            };
        }
      }
      function __makeTemplateObject(s, x) {
        return (
          Object.defineProperty
            ? Object.defineProperty(s, "raw", { value: x })
            : (s.raw = x),
          s
        );
      }
      function __importStar(s) {
        if (s && s.__esModule) return s;
        var x = {};
        if (null != s)
          for (var W in s) Object.hasOwnProperty.call(s, W) && (x[W] = s[W]);
        return (x.default = s), x;
      }
      function __importDefault(s) {
        return s && s.__esModule ? s : { default: s };
      }
      function __classPrivateFieldGet(s, x) {
        if (!x.has(s))
          throw TypeError("attempted to get private field on non-instance");
        return x.get(s);
      }
      function __classPrivateFieldSet(s, x, W) {
        if (!x.has(s))
          throw TypeError("attempted to set private field on non-instance");
        return x.set(s, W), W;
      }
    },
    80699: function (s, x) {
      var W = "undefined" != typeof self ? self : this,
        X = (function () {
          function F() {
            (this.fetch = !1), (this.DOMException = W.DOMException);
          }
          return (F.prototype = W), new F();
        })();
      (function (s) {
        var x = {
          searchParams: "URLSearchParams" in X,
          iterable: "Symbol" in X && "iterator" in Symbol,
          blob:
            "FileReader" in X &&
            "Blob" in X &&
            (function () {
              try {
                return new Blob(), !0;
              } catch (s) {
                return !1;
              }
            })(),
          formData: "FormData" in X,
          arrayBuffer: "ArrayBuffer" in X,
        };
        if (x.arrayBuffer)
          var W = [
              "[object Int8Array]",
              "[object Uint8Array]",
              "[object Uint8ClampedArray]",
              "[object Int16Array]",
              "[object Uint16Array]",
              "[object Int32Array]",
              "[object Uint32Array]",
              "[object Float32Array]",
              "[object Float64Array]",
            ],
            ee =
              ArrayBuffer.isView ||
              function (s) {
                return s && W.indexOf(Object.prototype.toString.call(s)) > -1;
              };
        function normalizeName(s) {
          if (
            ("string" != typeof s && (s = String(s)),
            /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(s))
          )
            throw TypeError("Invalid character in header field name");
          return s.toLowerCase();
        }
        function normalizeValue(s) {
          return "string" != typeof s && (s = String(s)), s;
        }
        function iteratorFor(s) {
          var W = {
            next: function () {
              var x = s.shift();
              return { done: void 0 === x, value: x };
            },
          };
          return (
            x.iterable &&
              (W[Symbol.iterator] = function () {
                return W;
              }),
            W
          );
        }
        function Headers(s) {
          (this.map = {}),
            s instanceof Headers
              ? s.forEach(function (s, x) {
                  this.append(x, s);
                }, this)
              : Array.isArray(s)
              ? s.forEach(function (s) {
                  this.append(s[0], s[1]);
                }, this)
              : s &&
                Object.getOwnPropertyNames(s).forEach(function (x) {
                  this.append(x, s[x]);
                }, this);
        }
        function consumed(s) {
          if (s.bodyUsed) return Promise.reject(TypeError("Already read"));
          s.bodyUsed = !0;
        }
        function fileReaderReady(s) {
          return new Promise(function (x, W) {
            (s.onload = function () {
              x(s.result);
            }),
              (s.onerror = function () {
                W(s.error);
              });
          });
        }
        function readBlobAsArrayBuffer(s) {
          var x = new FileReader(),
            W = fileReaderReady(x);
          return x.readAsArrayBuffer(s), W;
        }
        function bufferClone(s) {
          if (s.slice) return s.slice(0);
          var x = new Uint8Array(s.byteLength);
          return x.set(new Uint8Array(s)), x.buffer;
        }
        function Body() {
          return (
            (this.bodyUsed = !1),
            (this._initBody = function (s) {
              if (((this._bodyInit = s), s)) {
                if ("string" == typeof s) this._bodyText = s;
                else if (x.blob && Blob.prototype.isPrototypeOf(s))
                  this._bodyBlob = s;
                else if (x.formData && FormData.prototype.isPrototypeOf(s))
                  this._bodyFormData = s;
                else if (
                  x.searchParams &&
                  URLSearchParams.prototype.isPrototypeOf(s)
                )
                  this._bodyText = s.toString();
                else {
                  var W;
                  x.arrayBuffer &&
                  x.blob &&
                  (W = s) &&
                  DataView.prototype.isPrototypeOf(W)
                    ? ((this._bodyArrayBuffer = bufferClone(s.buffer)),
                      (this._bodyInit = new Blob([this._bodyArrayBuffer])))
                    : x.arrayBuffer &&
                      (ArrayBuffer.prototype.isPrototypeOf(s) || ee(s))
                    ? (this._bodyArrayBuffer = bufferClone(s))
                    : (this._bodyText = s = Object.prototype.toString.call(s));
                }
              } else this._bodyText = "";
              !this.headers.get("content-type") &&
                ("string" == typeof s
                  ? this.headers.set("content-type", "text/plain;charset=UTF-8")
                  : this._bodyBlob && this._bodyBlob.type
                  ? this.headers.set("content-type", this._bodyBlob.type)
                  : x.searchParams &&
                    URLSearchParams.prototype.isPrototypeOf(s) &&
                    this.headers.set(
                      "content-type",
                      "application/x-www-form-urlencoded;charset=UTF-8"
                    ));
            }),
            x.blob &&
              ((this.blob = function () {
                var s = consumed(this);
                if (s) return s;
                if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                if (this._bodyArrayBuffer)
                  return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                if (!this._bodyFormData)
                  return Promise.resolve(new Blob([this._bodyText]));
                throw Error("could not read FormData body as blob");
              }),
              (this.arrayBuffer = function () {
                return this._bodyArrayBuffer
                  ? consumed(this) || Promise.resolve(this._bodyArrayBuffer)
                  : this.blob().then(readBlobAsArrayBuffer);
              })),
            (this.text = function () {
              var s,
                x,
                W,
                X = consumed(this);
              if (X) return X;
              if (this._bodyBlob)
                return (
                  (s = this._bodyBlob),
                  (W = fileReaderReady((x = new FileReader()))),
                  x.readAsText(s),
                  W
                );
              if (this._bodyArrayBuffer)
                return Promise.resolve(
                  (function (s) {
                    for (
                      var x = new Uint8Array(s), W = Array(x.length), X = 0;
                      X < x.length;
                      X++
                    )
                      W[X] = String.fromCharCode(x[X]);
                    return W.join("");
                  })(this._bodyArrayBuffer)
                );
              if (!this._bodyFormData) return Promise.resolve(this._bodyText);
              throw Error("could not read FormData body as text");
            }),
            x.formData &&
              (this.formData = function () {
                return this.text().then(decode);
              }),
            (this.json = function () {
              return this.text().then(JSON.parse);
            }),
            this
          );
        }
        (Headers.prototype.append = function (s, x) {
          (s = normalizeName(s)), (x = normalizeValue(x));
          var W = this.map[s];
          this.map[s] = W ? W + ", " + x : x;
        }),
          (Headers.prototype.delete = function (s) {
            delete this.map[normalizeName(s)];
          }),
          (Headers.prototype.get = function (s) {
            return (s = normalizeName(s)), this.has(s) ? this.map[s] : null;
          }),
          (Headers.prototype.has = function (s) {
            return this.map.hasOwnProperty(normalizeName(s));
          }),
          (Headers.prototype.set = function (s, x) {
            this.map[normalizeName(s)] = normalizeValue(x);
          }),
          (Headers.prototype.forEach = function (s, x) {
            for (var W in this.map)
              this.map.hasOwnProperty(W) && s.call(x, this.map[W], W, this);
          }),
          (Headers.prototype.keys = function () {
            var s = [];
            return (
              this.forEach(function (x, W) {
                s.push(W);
              }),
              iteratorFor(s)
            );
          }),
          (Headers.prototype.values = function () {
            var s = [];
            return (
              this.forEach(function (x) {
                s.push(x);
              }),
              iteratorFor(s)
            );
          }),
          (Headers.prototype.entries = function () {
            var s = [];
            return (
              this.forEach(function (x, W) {
                s.push([W, x]);
              }),
              iteratorFor(s)
            );
          }),
          x.iterable &&
            (Headers.prototype[Symbol.iterator] = Headers.prototype.entries);
        var et = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
        function Request(s, x) {
          var W,
            X,
            ee = (x = x || {}).body;
          if (s instanceof Request) {
            if (s.bodyUsed) throw TypeError("Already read");
            (this.url = s.url),
              (this.credentials = s.credentials),
              x.headers || (this.headers = new Headers(s.headers)),
              (this.method = s.method),
              (this.mode = s.mode),
              (this.signal = s.signal),
              ee ||
                null == s._bodyInit ||
                ((ee = s._bodyInit), (s.bodyUsed = !0));
          } else this.url = String(s);
          if (
            ((this.credentials =
              x.credentials || this.credentials || "same-origin"),
            (x.headers || !this.headers) &&
              (this.headers = new Headers(x.headers)),
            (this.method =
              ((X = (W = x.method || this.method || "GET").toUpperCase()),
              et.indexOf(X) > -1 ? X : W)),
            (this.mode = x.mode || this.mode || null),
            (this.signal = x.signal || this.signal),
            (this.referrer = null),
            ("GET" === this.method || "HEAD" === this.method) && ee)
          )
            throw TypeError("Body not allowed for GET or HEAD requests");
          this._initBody(ee);
        }
        function decode(s) {
          var x = new FormData();
          return (
            s
              .trim()
              .split("&")
              .forEach(function (s) {
                if (s) {
                  var W = s.split("="),
                    X = W.shift().replace(/\+/g, " "),
                    ee = W.join("=").replace(/\+/g, " ");
                  x.append(decodeURIComponent(X), decodeURIComponent(ee));
                }
              }),
            x
          );
        }
        function Response(s, x) {
          x || (x = {}),
            (this.type = "default"),
            (this.status = void 0 === x.status ? 200 : x.status),
            (this.ok = this.status >= 200 && this.status < 300),
            (this.statusText = "statusText" in x ? x.statusText : "OK"),
            (this.headers = new Headers(x.headers)),
            (this.url = x.url || ""),
            this._initBody(s);
        }
        (Request.prototype.clone = function () {
          return new Request(this, { body: this._bodyInit });
        }),
          Body.call(Request.prototype),
          Body.call(Response.prototype),
          (Response.prototype.clone = function () {
            return new Response(this._bodyInit, {
              status: this.status,
              statusText: this.statusText,
              headers: new Headers(this.headers),
              url: this.url,
            });
          }),
          (Response.error = function () {
            var s = new Response(null, { status: 0, statusText: "" });
            return (s.type = "error"), s;
          });
        var er = [301, 302, 303, 307, 308];
        (Response.redirect = function (s, x) {
          if (-1 === er.indexOf(x)) throw RangeError("Invalid status code");
          return new Response(null, { status: x, headers: { location: s } });
        }),
          (s.DOMException = X.DOMException);
        try {
          new s.DOMException();
        } catch (x) {
          (s.DOMException = function (s, x) {
            (this.message = s), (this.name = x);
            var W = Error(s);
            this.stack = W.stack;
          }),
            (s.DOMException.prototype = Object.create(Error.prototype)),
            (s.DOMException.prototype.constructor = s.DOMException);
        }
        function fetch(W, X) {
          return new Promise(function (ee, et) {
            var er = new Request(W, X);
            if (er.signal && er.signal.aborted)
              return et(new s.DOMException("Aborted", "AbortError"));
            var ei = new XMLHttpRequest();
            function abortXhr() {
              ei.abort();
            }
            (ei.onload = function () {
              var s,
                x,
                W = {
                  status: ei.status,
                  statusText: ei.statusText,
                  headers:
                    ((s = ei.getAllResponseHeaders() || ""),
                    (x = new Headers()),
                    s
                      .replace(/\r?\n[\t ]+/g, " ")
                      .split(/\r?\n/)
                      .forEach(function (s) {
                        var W = s.split(":"),
                          X = W.shift().trim();
                        if (X) {
                          var ee = W.join(":").trim();
                          x.append(X, ee);
                        }
                      }),
                    x),
                };
              W.url =
                "responseURL" in ei
                  ? ei.responseURL
                  : W.headers.get("X-Request-URL");
              var X = "response" in ei ? ei.response : ei.responseText;
              ee(new Response(X, W));
            }),
              (ei.onerror = function () {
                et(TypeError("Network request failed"));
              }),
              (ei.ontimeout = function () {
                et(TypeError("Network request failed"));
              }),
              (ei.onabort = function () {
                et(new s.DOMException("Aborted", "AbortError"));
              }),
              ei.open(er.method, er.url, !0),
              "include" === er.credentials
                ? (ei.withCredentials = !0)
                : "omit" === er.credentials && (ei.withCredentials = !1),
              "responseType" in ei && x.blob && (ei.responseType = "blob"),
              er.headers.forEach(function (s, x) {
                ei.setRequestHeader(x, s);
              }),
              er.signal &&
                (er.signal.addEventListener("abort", abortXhr),
                (ei.onreadystatechange = function () {
                  4 === ei.readyState &&
                    er.signal.removeEventListener("abort", abortXhr);
                })),
              ei.send(void 0 === er._bodyInit ? null : er._bodyInit);
          });
        }
        (fetch.polyfill = !0),
          X.fetch ||
            ((X.fetch = fetch),
            (X.Headers = Headers),
            (X.Request = Request),
            (X.Response = Response)),
          (s.Headers = Headers),
          (s.Request = Request),
          (s.Response = Response),
          (s.fetch = fetch),
          Object.defineProperty(s, "__esModule", { value: !0 });
      })({}),
        (X.fetch.ponyfill = !0),
        delete X.fetch.polyfill,
        ((x = X.fetch).default = X.fetch),
        (x.fetch = X.fetch),
        (x.Headers = X.Headers),
        (x.Request = X.Request),
        (x.Response = X.Response),
        (s.exports = x);
    },
    12044: function (s, x, W) {
      "use strict";
      W.d(x, {
        Ep: function () {
          return E;
        },
        Fd: function () {
          return y;
        },
        Rt: function () {
          return A;
        },
        gw: function () {
          return ee.a;
        },
        jI: function () {
          return k;
        },
      });
      var X = W(36559),
        ee = W.n(X),
        et = W(85094);
      let er = { level: "info" },
        ei = "custom_context";
      let O = class O {
        constructor(s) {
          (this.nodeValue = s),
            (this.sizeInBytes = new TextEncoder().encode(
              this.nodeValue
            ).length),
            (this.next = null);
        }
        get value() {
          return this.nodeValue;
        }
        get size() {
          return this.sizeInBytes;
        }
      };
      let d = class d {
        constructor(s) {
          (this.head = null),
            (this.tail = null),
            (this.lengthInNodes = 0),
            (this.maxSizeInBytes = s),
            (this.sizeInBytes = 0);
        }
        append(s) {
          let x = new O(s);
          if (x.size > this.maxSizeInBytes)
            throw Error(
              `[LinkedList] Value too big to insert into list: ${s} with size ${x.size}`
            );
          for (; this.size + x.size > this.maxSizeInBytes; ) this.shift();
          this.head ? this.tail && (this.tail.next = x) : (this.head = x),
            (this.tail = x),
            this.lengthInNodes++,
            (this.sizeInBytes += x.size);
        }
        shift() {
          if (!this.head) return;
          let s = this.head;
          (this.head = this.head.next),
            this.head || (this.tail = null),
            this.lengthInNodes--,
            (this.sizeInBytes -= s.size);
        }
        toArray() {
          let s = [],
            x = this.head;
          for (; null !== x; ) s.push(x.value), (x = x.next);
          return s;
        }
        get length() {
          return this.lengthInNodes;
        }
        get size() {
          return this.sizeInBytes;
        }
        toOrderedArray() {
          return Array.from(this);
        }
        [Symbol.iterator]() {
          let s = this.head;
          return {
            next: () => {
              if (!s) return { done: !0, value: null };
              let x = s.value;
              return (s = s.next), { done: !1, value: x };
            },
          };
        }
      };
      let L = class L {
        constructor(s, x = 1024e3) {
          (this.level = s ?? "error"),
            (this.levelValue = X.levels.values[this.level]),
            (this.MAX_LOG_SIZE_IN_BYTES = x),
            (this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES));
        }
        forwardToConsole(s, x) {
          x === X.levels.values.error
            ? console.error(s)
            : x === X.levels.values.warn
            ? console.warn(s)
            : x === X.levels.values.debug
            ? console.debug(s)
            : x === X.levels.values.trace
            ? console.trace(s)
            : console.log(s);
        }
        appendToLogs(s) {
          this.logs.append(
            (0, et.u)({ timestamp: new Date().toISOString(), log: s })
          );
          let x = "string" == typeof s ? JSON.parse(s).level : s.level;
          x >= this.levelValue && this.forwardToConsole(s, x);
        }
        getLogs() {
          return this.logs;
        }
        clearLogs() {
          this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);
        }
        getLogArray() {
          return Array.from(this.logs);
        }
        logsToBlob(s) {
          let x = this.getLogArray();
          return (
            x.push((0, et.u)({ extraMetadata: s })),
            new Blob(x, { type: "application/json" })
          );
        }
      };
      let m = class m {
        constructor(s, x = 1024e3) {
          this.baseChunkLogger = new L(s, x);
        }
        write(s) {
          this.baseChunkLogger.appendToLogs(s);
        }
        getLogs() {
          return this.baseChunkLogger.getLogs();
        }
        clearLogs() {
          this.baseChunkLogger.clearLogs();
        }
        getLogArray() {
          return this.baseChunkLogger.getLogArray();
        }
        logsToBlob(s) {
          return this.baseChunkLogger.logsToBlob(s);
        }
        downloadLogsBlobInBrowser(s) {
          let x = URL.createObjectURL(this.logsToBlob(s)),
            W = document.createElement("a");
          (W.href = x),
            (W.download = `walletconnect-logs-${new Date().toISOString()}.txt`),
            document.body.appendChild(W),
            W.click(),
            document.body.removeChild(W),
            URL.revokeObjectURL(x);
        }
      };
      let B = class B {
        constructor(s, x = 1024e3) {
          this.baseChunkLogger = new L(s, x);
        }
        write(s) {
          this.baseChunkLogger.appendToLogs(s);
        }
        getLogs() {
          return this.baseChunkLogger.getLogs();
        }
        clearLogs() {
          this.baseChunkLogger.clearLogs();
        }
        getLogArray() {
          return this.baseChunkLogger.getLogArray();
        }
        logsToBlob(s) {
          return this.baseChunkLogger.logsToBlob(s);
        }
      };
      var eo = Object.defineProperty,
        ea = Object.defineProperties,
        es = Object.getOwnPropertyDescriptors,
        el = Object.getOwnPropertySymbols,
        ec = Object.prototype.hasOwnProperty,
        eu = Object.prototype.propertyIsEnumerable,
        f = (s, x, W) =>
          x in s
            ? eo(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        i = (s, x) => {
          for (var W in x || (x = {})) ec.call(x, W) && f(s, W, x[W]);
          if (el) for (var W of el(x)) eu.call(x, W) && f(s, W, x[W]);
          return s;
        },
        g = (s, x) => ea(s, es(x));
      function k(s) {
        return g(i({}, s), { level: s?.level || er.level });
      }
      function y(s, x = ei) {
        return typeof s.bindings > "u"
          ? (function (s, x = ei) {
              return s[x] || "";
            })(s, x)
          : s.bindings().context || "";
      }
      function E(s, x, W = ei) {
        let X = (function (s, x, W = ei) {
            let X = y(s, W);
            return X.trim() ? `${X}/${x}` : x;
          })(s, x, W),
          ee = s.child({ context: X });
        return (function (s, x, W = ei) {
          return (s[W] = x), s;
        })(ee, X, W);
      }
      function A(s) {
        return "u" > typeof s.loggerOverride &&
          "string" != typeof s.loggerOverride
          ? { logger: s.loggerOverride, chunkLoggerController: null }
          : "u" > typeof window
          ? (function (s) {
              var x, W;
              let X = new m(
                null == (x = s.opts) ? void 0 : x.level,
                s.maxSizeInBytes
              );
              return {
                logger: ee()(
                  g(i({}, s.opts), {
                    level: "trace",
                    browser: g(
                      i({}, null == (W = s.opts) ? void 0 : W.browser),
                      { write: (s) => X.write(s) }
                    ),
                  })
                ),
                chunkLoggerController: X,
              };
            })(s)
          : (function (s) {
              var x;
              let W = new B(
                null == (x = s.opts) ? void 0 : x.level,
                s.maxSizeInBytes
              );
              return {
                logger: ee()(g(i({}, s.opts), { level: "trace" }), W),
                chunkLoggerController: W,
              };
            })(s);
      }
    },
    43014: function () {},
    85094: function (s, x, W) {
      "use strict";
      W.d(x, {
        D: function () {
          return safeJsonParse;
        },
        u: function () {
          return safeJsonStringify;
        },
      });
      let JSONStringify = (s) =>
          JSON.stringify(s, (s, x) =>
            "bigint" == typeof x ? x.toString() + "n" : x
          ),
        JSONParse = (s) => {
          let x = s.replace(
            /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g,
            '$1"$2n"$3'
          );
          return JSON.parse(x, (s, x) => {
            let W = "string" == typeof x && x.match(/^\d+n$/);
            return W ? BigInt(x.substring(0, x.length - 1)) : x;
          });
        };
      function safeJsonParse(s) {
        if ("string" != typeof s)
          throw Error(`Cannot safe json parse value of type ${typeof s}`);
        try {
          return JSONParse(s);
        } catch (x) {
          return s;
        }
      }
      function safeJsonStringify(s) {
        return "string" == typeof s ? s : JSONStringify(s) || "";
      }
    },
    36900: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      let X = W(30004);
      X.__exportStar(W(46869), x), X.__exportStar(W(88033), x);
    },
    46869: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.ONE_THOUSAND = x.ONE_HUNDRED = void 0),
        (x.ONE_HUNDRED = 100),
        (x.ONE_THOUSAND = 1e3);
    },
    88033: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.ONE_YEAR =
          x.FOUR_WEEKS =
          x.THREE_WEEKS =
          x.TWO_WEEKS =
          x.ONE_WEEK =
          x.THIRTY_DAYS =
          x.SEVEN_DAYS =
          x.FIVE_DAYS =
          x.THREE_DAYS =
          x.ONE_DAY =
          x.TWENTY_FOUR_HOURS =
          x.TWELVE_HOURS =
          x.SIX_HOURS =
          x.THREE_HOURS =
          x.ONE_HOUR =
          x.SIXTY_MINUTES =
          x.THIRTY_MINUTES =
          x.TEN_MINUTES =
          x.FIVE_MINUTES =
          x.ONE_MINUTE =
          x.SIXTY_SECONDS =
          x.THIRTY_SECONDS =
          x.TEN_SECONDS =
          x.FIVE_SECONDS =
          x.ONE_SECOND =
            void 0),
        (x.ONE_SECOND = 1),
        (x.FIVE_SECONDS = 5),
        (x.TEN_SECONDS = 10),
        (x.THIRTY_SECONDS = 30),
        (x.SIXTY_SECONDS = 60),
        (x.ONE_MINUTE = x.SIXTY_SECONDS),
        (x.FIVE_MINUTES = 5 * x.ONE_MINUTE),
        (x.TEN_MINUTES = 10 * x.ONE_MINUTE),
        (x.THIRTY_MINUTES = 30 * x.ONE_MINUTE),
        (x.SIXTY_MINUTES = 60 * x.ONE_MINUTE),
        (x.ONE_HOUR = x.SIXTY_MINUTES),
        (x.THREE_HOURS = 3 * x.ONE_HOUR),
        (x.SIX_HOURS = 6 * x.ONE_HOUR),
        (x.TWELVE_HOURS = 12 * x.ONE_HOUR),
        (x.TWENTY_FOUR_HOURS = 24 * x.ONE_HOUR),
        (x.ONE_DAY = x.TWENTY_FOUR_HOURS),
        (x.THREE_DAYS = 3 * x.ONE_DAY),
        (x.FIVE_DAYS = 5 * x.ONE_DAY),
        (x.SEVEN_DAYS = 7 * x.ONE_DAY),
        (x.THIRTY_DAYS = 30 * x.ONE_DAY),
        (x.ONE_WEEK = x.SEVEN_DAYS),
        (x.TWO_WEEKS = 2 * x.ONE_WEEK),
        (x.THREE_WEEKS = 3 * x.ONE_WEEK),
        (x.FOUR_WEEKS = 4 * x.ONE_WEEK),
        (x.ONE_YEAR = 365 * x.ONE_DAY);
    },
    66736: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      let X = W(30004);
      X.__exportStar(W(44273), x),
        X.__exportStar(W(47001), x),
        X.__exportStar(W(52939), x),
        X.__exportStar(W(36900), x);
    },
    52939: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      let X = W(30004);
      X.__exportStar(W(88766), x);
    },
    88766: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.IWatch = void 0),
        (x.IWatch = class {});
    },
    83207: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.fromMiliseconds = x.toMiliseconds = void 0);
      let X = W(36900);
      (x.toMiliseconds = function (s) {
        return s * X.ONE_THOUSAND;
      }),
        (x.fromMiliseconds = function (s) {
          return Math.floor(s / X.ONE_THOUSAND);
        });
    },
    83873: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.delay = void 0),
        (x.delay = function (s) {
          return new Promise((x) => {
            setTimeout(() => {
              x(!0);
            }, s);
          });
        });
    },
    44273: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      let X = W(30004);
      X.__exportStar(W(83873), x), X.__exportStar(W(83207), x);
    },
    47001: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }), (x.Watch = void 0);
      let Watch = class Watch {
        constructor() {
          this.timestamps = new Map();
        }
        start(s) {
          if (this.timestamps.has(s))
            throw Error(`Watch already started for label: ${s}`);
          this.timestamps.set(s, { started: Date.now() });
        }
        stop(s) {
          let x = this.get(s);
          if (void 0 !== x.elapsed)
            throw Error(`Watch already stopped for label: ${s}`);
          let W = Date.now() - x.started;
          this.timestamps.set(s, { started: x.started, elapsed: W });
        }
        get(s) {
          let x = this.timestamps.get(s);
          if (void 0 === x) throw Error(`No timestamp found for label: ${s}`);
          return x;
        }
        elapsed(s) {
          let x = this.get(s),
            W = x.elapsed || Date.now() - x.started;
          return W;
        }
      };
      (x.Watch = Watch), (x.default = Watch);
    },
    30004: function (s, x, W) {
      "use strict";
      W.r(x),
        W.d(x, {
          __assign: function () {
            return __assign;
          },
          __asyncDelegator: function () {
            return __asyncDelegator;
          },
          __asyncGenerator: function () {
            return __asyncGenerator;
          },
          __asyncValues: function () {
            return __asyncValues;
          },
          __await: function () {
            return __await;
          },
          __awaiter: function () {
            return __awaiter;
          },
          __classPrivateFieldGet: function () {
            return __classPrivateFieldGet;
          },
          __classPrivateFieldSet: function () {
            return __classPrivateFieldSet;
          },
          __createBinding: function () {
            return __createBinding;
          },
          __decorate: function () {
            return __decorate;
          },
          __exportStar: function () {
            return __exportStar;
          },
          __extends: function () {
            return __extends;
          },
          __generator: function () {
            return __generator;
          },
          __importDefault: function () {
            return __importDefault;
          },
          __importStar: function () {
            return __importStar;
          },
          __makeTemplateObject: function () {
            return __makeTemplateObject;
          },
          __metadata: function () {
            return __metadata;
          },
          __param: function () {
            return __param;
          },
          __read: function () {
            return __read;
          },
          __rest: function () {
            return __rest;
          },
          __spread: function () {
            return __spread;
          },
          __spreadArrays: function () {
            return __spreadArrays;
          },
          __values: function () {
            return __values;
          },
        });
      /*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ var extendStatics =
        function (s, x) {
          return (extendStatics =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (s, x) {
                s.__proto__ = x;
              }) ||
            function (s, x) {
              for (var W in x) x.hasOwnProperty(W) && (s[W] = x[W]);
            })(s, x);
        };
      function __extends(s, x) {
        function __() {
          this.constructor = s;
        }
        extendStatics(s, x),
          (s.prototype =
            null === x
              ? Object.create(x)
              : ((__.prototype = x.prototype), new __()));
      }
      var __assign = function () {
        return (__assign =
          Object.assign ||
          function (s) {
            for (var x, W = 1, X = arguments.length; W < X; W++)
              for (var ee in (x = arguments[W]))
                Object.prototype.hasOwnProperty.call(x, ee) && (s[ee] = x[ee]);
            return s;
          }).apply(this, arguments);
      };
      function __rest(s, x) {
        var W = {};
        for (var X in s)
          Object.prototype.hasOwnProperty.call(s, X) &&
            0 > x.indexOf(X) &&
            (W[X] = s[X]);
        if (null != s && "function" == typeof Object.getOwnPropertySymbols)
          for (
            var ee = 0, X = Object.getOwnPropertySymbols(s);
            ee < X.length;
            ee++
          )
            0 > x.indexOf(X[ee]) &&
              Object.prototype.propertyIsEnumerable.call(s, X[ee]) &&
              (W[X[ee]] = s[X[ee]]);
        return W;
      }
      function __decorate(s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      }
      function __param(s, x) {
        return function (W, X) {
          x(W, X, s);
        };
      }
      function __metadata(s, x) {
        if ("object" == typeof Reflect && "function" == typeof Reflect.metadata)
          return Reflect.metadata(s, x);
      }
      function __awaiter(s, x, W, X) {
        return new (W || (W = Promise))(function (ee, et) {
          function fulfilled(s) {
            try {
              step(X.next(s));
            } catch (s) {
              et(s);
            }
          }
          function rejected(s) {
            try {
              step(X.throw(s));
            } catch (s) {
              et(s);
            }
          }
          function step(s) {
            var x;
            s.done
              ? ee(s.value)
              : ((x = s.value) instanceof W
                  ? x
                  : new W(function (s) {
                      s(x);
                    })
                ).then(fulfilled, rejected);
          }
          step((X = X.apply(s, x || [])).next());
        });
      }
      function __generator(s, x) {
        var W,
          X,
          ee,
          et,
          er = {
            label: 0,
            sent: function () {
              if (1 & ee[0]) throw ee[1];
              return ee[1];
            },
            trys: [],
            ops: [],
          };
        return (
          (et = { next: verb(0), throw: verb(1), return: verb(2) }),
          "function" == typeof Symbol &&
            (et[Symbol.iterator] = function () {
              return this;
            }),
          et
        );
        function verb(et) {
          return function (ei) {
            return (function (et) {
              if (W) throw TypeError("Generator is already executing.");
              for (; er; )
                try {
                  if (
                    ((W = 1),
                    X &&
                      (ee =
                        2 & et[0]
                          ? X.return
                          : et[0]
                          ? X.throw || ((ee = X.return) && ee.call(X), 0)
                          : X.next) &&
                      !(ee = ee.call(X, et[1])).done)
                  )
                    return ee;
                  switch (
                    ((X = 0), ee && (et = [2 & et[0], ee.value]), et[0])
                  ) {
                    case 0:
                    case 1:
                      ee = et;
                      break;
                    case 4:
                      return er.label++, { value: et[1], done: !1 };
                    case 5:
                      er.label++, (X = et[1]), (et = [0]);
                      continue;
                    case 7:
                      (et = er.ops.pop()), er.trys.pop();
                      continue;
                    default:
                      if (
                        !(ee =
                          (ee = er.trys).length > 0 && ee[ee.length - 1]) &&
                        (6 === et[0] || 2 === et[0])
                      ) {
                        er = 0;
                        continue;
                      }
                      if (
                        3 === et[0] &&
                        (!ee || (et[1] > ee[0] && et[1] < ee[3]))
                      ) {
                        er.label = et[1];
                        break;
                      }
                      if (6 === et[0] && er.label < ee[1]) {
                        (er.label = ee[1]), (ee = et);
                        break;
                      }
                      if (ee && er.label < ee[2]) {
                        (er.label = ee[2]), er.ops.push(et);
                        break;
                      }
                      ee[2] && er.ops.pop(), er.trys.pop();
                      continue;
                  }
                  et = x.call(s, er);
                } catch (s) {
                  (et = [6, s]), (X = 0);
                } finally {
                  W = ee = 0;
                }
              if (5 & et[0]) throw et[1];
              return { value: et[0] ? et[1] : void 0, done: !0 };
            })([et, ei]);
          };
        }
      }
      function __createBinding(s, x, W, X) {
        void 0 === X && (X = W), (s[X] = x[W]);
      }
      function __exportStar(s, x) {
        for (var W in s)
          "default" === W || x.hasOwnProperty(W) || (x[W] = s[W]);
      }
      function __values(s) {
        var x = "function" == typeof Symbol && Symbol.iterator,
          W = x && s[x],
          X = 0;
        if (W) return W.call(s);
        if (s && "number" == typeof s.length)
          return {
            next: function () {
              return (
                s && X >= s.length && (s = void 0),
                { value: s && s[X++], done: !s }
              );
            },
          };
        throw TypeError(
          x ? "Object is not iterable." : "Symbol.iterator is not defined."
        );
      }
      function __read(s, x) {
        var W = "function" == typeof Symbol && s[Symbol.iterator];
        if (!W) return s;
        var X,
          ee,
          et = W.call(s),
          er = [];
        try {
          for (; (void 0 === x || x-- > 0) && !(X = et.next()).done; )
            er.push(X.value);
        } catch (s) {
          ee = { error: s };
        } finally {
          try {
            X && !X.done && (W = et.return) && W.call(et);
          } finally {
            if (ee) throw ee.error;
          }
        }
        return er;
      }
      function __spread() {
        for (var s = [], x = 0; x < arguments.length; x++)
          s = s.concat(__read(arguments[x]));
        return s;
      }
      function __spreadArrays() {
        for (var s = 0, x = 0, W = arguments.length; x < W; x++)
          s += arguments[x].length;
        for (var X = Array(s), ee = 0, x = 0; x < W; x++)
          for (
            var et = arguments[x], er = 0, ei = et.length;
            er < ei;
            er++, ee++
          )
            X[ee] = et[er];
        return X;
      }
      function __await(s) {
        return this instanceof __await ? ((this.v = s), this) : new __await(s);
      }
      function __asyncGenerator(s, x, W) {
        if (!Symbol.asyncIterator)
          throw TypeError("Symbol.asyncIterator is not defined.");
        var X,
          ee = W.apply(s, x || []),
          et = [];
        return (
          (X = {}),
          verb("next"),
          verb("throw"),
          verb("return"),
          (X[Symbol.asyncIterator] = function () {
            return this;
          }),
          X
        );
        function verb(s) {
          ee[s] &&
            (X[s] = function (x) {
              return new Promise(function (W, X) {
                et.push([s, x, W, X]) > 1 || resume(s, x);
              });
            });
        }
        function resume(s, x) {
          try {
            var W;
            (W = ee[s](x)).value instanceof __await
              ? Promise.resolve(W.value.v).then(fulfill, reject)
              : settle(et[0][2], W);
          } catch (s) {
            settle(et[0][3], s);
          }
        }
        function fulfill(s) {
          resume("next", s);
        }
        function reject(s) {
          resume("throw", s);
        }
        function settle(s, x) {
          s(x), et.shift(), et.length && resume(et[0][0], et[0][1]);
        }
      }
      function __asyncDelegator(s) {
        var x, W;
        return (
          (x = {}),
          verb("next"),
          verb("throw", function (s) {
            throw s;
          }),
          verb("return"),
          (x[Symbol.iterator] = function () {
            return this;
          }),
          x
        );
        function verb(X, ee) {
          x[X] = s[X]
            ? function (x) {
                return (W = !W)
                  ? { value: __await(s[X](x)), done: "return" === X }
                  : ee
                  ? ee(x)
                  : x;
              }
            : ee;
        }
      }
      function __asyncValues(s) {
        if (!Symbol.asyncIterator)
          throw TypeError("Symbol.asyncIterator is not defined.");
        var x,
          W = s[Symbol.asyncIterator];
        return W
          ? W.call(s)
          : ((s = __values(s)),
            (x = {}),
            verb("next"),
            verb("throw"),
            verb("return"),
            (x[Symbol.asyncIterator] = function () {
              return this;
            }),
            x);
        function verb(W) {
          x[W] =
            s[W] &&
            function (x) {
              return new Promise(function (X, ee) {
                !(function (s, x, W, X) {
                  Promise.resolve(X).then(function (x) {
                    s({ value: x, done: W });
                  }, x);
                })(X, ee, (x = s[W](x)).done, x.value);
              });
            };
        }
      }
      function __makeTemplateObject(s, x) {
        return (
          Object.defineProperty
            ? Object.defineProperty(s, "raw", { value: x })
            : (s.raw = x),
          s
        );
      }
      function __importStar(s) {
        if (s && s.__esModule) return s;
        var x = {};
        if (null != s)
          for (var W in s) Object.hasOwnProperty.call(s, W) && (x[W] = s[W]);
        return (x.default = s), x;
      }
      function __importDefault(s) {
        return s && s.__esModule ? s : { default: s };
      }
      function __classPrivateFieldGet(s, x) {
        if (!x.has(s))
          throw TypeError("attempted to get private field on non-instance");
        return x.get(s);
      }
      function __classPrivateFieldSet(s, x, W) {
        if (!x.has(s))
          throw TypeError("attempted to set private field on non-instance");
        return x.set(s, W), W;
      }
    },
    47367: function (s, x, W) {
      "use strict";
      let X;
      W.d(x, {
        Z: function () {
          return universal_provider_dist_index_es_C;
        },
      });
      var ee,
        et,
        er,
        ei,
        eo,
        ea,
        es,
        el,
        ec,
        eu,
        ed = {};
      W.r(ed),
        W.d(ed, {
          identity: function () {
            return eW;
          },
        });
      var eh = {};
      W.r(eh),
        W.d(eh, {
          base2: function () {
            return eK;
          },
        });
      var ep = {};
      W.r(ep),
        W.d(ep, {
          base8: function () {
            return eZ;
          },
        });
      var ef = {};
      W.r(ef),
        W.d(ef, {
          base10: function () {
            return eG;
          },
        });
      var eg = {};
      W.r(eg),
        W.d(eg, {
          base16: function () {
            return eY;
          },
          base16upper: function () {
            return eQ;
          },
        });
      var em = {};
      W.r(em),
        W.d(em, {
          base32: function () {
            return eJ;
          },
          base32hex: function () {
            return e2;
          },
          base32hexpad: function () {
            return e5;
          },
          base32hexpadupper: function () {
            return e6;
          },
          base32hexupper: function () {
            return e3;
          },
          base32pad: function () {
            return e0;
          },
          base32padupper: function () {
            return e1;
          },
          base32upper: function () {
            return eX;
          },
          base32z: function () {
            return e4;
          },
        });
      var ew = {};
      W.r(ew),
        W.d(ew, {
          base36: function () {
            return e8;
          },
          base36upper: function () {
            return e9;
          },
        });
      var eb = {};
      W.r(eb),
        W.d(eb, {
          base58btc: function () {
            return e7;
          },
          base58flickr: function () {
            return tt;
          },
        });
      var ev = {};
      W.r(ev),
        W.d(ev, {
          base64: function () {
            return tr;
          },
          base64pad: function () {
            return ta;
          },
          base64url: function () {
            return ts;
          },
          base64urlpad: function () {
            return tl;
          },
        });
      var ey = {};
      W.r(ey),
        W.d(ey, {
          base256emoji: function () {
            return th;
          },
        });
      var e_ = {};
      W.r(e_),
        W.d(e_, {
          sha256: function () {
            return tf;
          },
          sha512: function () {
            return tg;
          },
        });
      var eC = {};
      W.r(eC),
        W.d(eC, {
          identity: function () {
            return tm;
          },
        });
      var ex = {};
      W.r(ex),
        W.d(ex, {
          code: function () {
            return tb;
          },
          decode: function () {
            return raw_decode;
          },
          encode: function () {
            return raw_encode;
          },
          name: function () {
            return tw;
          },
        });
      var eE = {};
      W.r(eE),
        W.d(eE, {
          code: function () {
            return tC;
          },
          decode: function () {
            return json_decode;
          },
          encode: function () {
            return json_encode;
          },
          name: function () {
            return t_;
          },
        });
      var eA = W(17187),
        eS = W.n(eA),
        ek = W(66736);
      let IEvents = class IEvents {};
      let n = class n extends IEvents {
        constructor(s) {
          super();
        }
      };
      let eT = ek.FIVE_SECONDS,
        eI = { pulse: "heartbeat_pulse" };
      let index_es_i = class index_es_i extends n {
        constructor(s) {
          super(s),
            (this.events = new eA.EventEmitter()),
            (this.interval = eT),
            (this.interval = s?.interval || eT);
        }
        static async init(s) {
          let x = new index_es_i(s);
          return await x.init(), x;
        }
        async init() {
          await this.initialize();
        }
        stop() {
          clearInterval(this.intervalRef);
        }
        on(s, x) {
          this.events.on(s, x);
        }
        once(s, x) {
          this.events.once(s, x);
        }
        off(s, x) {
          this.events.off(s, x);
        }
        removeListener(s, x) {
          this.events.removeListener(s, x);
        }
        async initialize() {
          this.intervalRef = setInterval(
            () => this.pulse(),
            (0, ek.toMiliseconds)(this.interval)
          );
        }
        pulse() {
          this.events.emit(eI.pulse);
        }
      };
      let eP =
          /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/,
        eR =
          /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/,
        eN = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
      function jsonParseTransform(s, x) {
        if (
          "__proto__" === s ||
          ("constructor" === s && x && "object" == typeof x && "prototype" in x)
        ) {
          console.warn(
            `[destr] Dropping "${s}" key to prevent prototype pollution.`
          );
          return;
        }
        return x;
      }
      function destr(s, x = {}) {
        if ("string" != typeof s) return s;
        let W = s.trim();
        if ('"' === s[0] && s.endsWith('"') && !s.includes("\\"))
          return W.slice(1, -1);
        if (W.length <= 9) {
          let s = W.toLowerCase();
          if ("true" === s) return !0;
          if ("false" === s) return !1;
          if ("undefined" === s) return;
          if ("null" === s) return null;
          if ("nan" === s) return Number.NaN;
          if ("infinity" === s) return Number.POSITIVE_INFINITY;
          if ("-infinity" === s) return Number.NEGATIVE_INFINITY;
        }
        if (!eN.test(s)) {
          if (x.strict) throw SyntaxError("[destr] Invalid JSON");
          return s;
        }
        try {
          if (eP.test(s) || eR.test(s)) {
            if (x.strict) throw Error("[destr] Possible prototype pollution");
            return JSON.parse(s, jsonParseTransform);
          }
          return JSON.parse(s);
        } catch (W) {
          if (x.strict) throw W;
          return s;
        }
      }
      var eO = W(48764).Buffer;
      function asyncCall(s, ...x) {
        try {
          var W;
          return (W = s(...x)) && "function" == typeof W.then
            ? W
            : Promise.resolve(W);
        } catch (s) {
          return Promise.reject(s);
        }
      }
      function stringify(s) {
        if (
          (function (s) {
            let x = typeof s;
            return null === s || ("object" !== x && "function" !== x);
          })(s)
        )
          return String(s);
        if (
          (function (s) {
            let x = Object.getPrototypeOf(s);
            return !x || x.isPrototypeOf(Object);
          })(s) ||
          Array.isArray(s)
        )
          return JSON.stringify(s);
        if ("function" == typeof s.toJSON) return stringify(s.toJSON());
        throw Error("[unstorage] Cannot stringify value!");
      }
      function checkBufferSupport() {
        if (void 0 === eO)
          throw TypeError("[unstorage] Buffer is not supported!");
      }
      let eM = "base64:";
      function normalizeKey(s) {
        return s
          ? s
              .split("?")[0]
              .replace(/[/\\]/g, ":")
              .replace(/:+/g, ":")
              .replace(/^:|:$/g, "")
          : "";
      }
      function unstorage_d569726e_normalizeBaseKey(s) {
        return (s = normalizeKey(s)) ? s + ":" : "";
      }
      let memory = () => {
        let s = new Map();
        return {
          name: "memory",
          getInstance: () => s,
          hasItem: (x) => s.has(x),
          getItem: (x) => s.get(x) ?? null,
          getItemRaw: (x) => s.get(x) ?? null,
          setItem(x, W) {
            s.set(x, W);
          },
          setItemRaw(x, W) {
            s.set(x, W);
          },
          removeItem(x) {
            s.delete(x);
          },
          getKeys: () => [...s.keys()],
          clear() {
            s.clear();
          },
          dispose() {
            s.clear();
          },
        };
      };
      function watch(s, x, W) {
        return s.watch ? s.watch((s, X) => x(s, W + X)) : () => {};
      }
      async function dispose(s) {
        "function" == typeof s.dispose && (await asyncCall(s.dispose));
      }
      function promisifyRequest(s) {
        return new Promise((x, W) => {
          (s.oncomplete = s.onsuccess = () => x(s.result)),
            (s.onabort = s.onerror = () => W(s.error));
        });
      }
      function createStore(s, x) {
        let W = indexedDB.open(s);
        W.onupgradeneeded = () => W.result.createObjectStore(x);
        let X = promisifyRequest(W);
        return (s, W) => X.then((X) => W(X.transaction(x, s).objectStore(x)));
      }
      function defaultGetStore() {
        return X || (X = createStore("keyval-store", "keyval")), X;
      }
      function get(s, x = defaultGetStore()) {
        return x("readonly", (x) => promisifyRequest(x.get(s)));
      }
      var eD = W(85094),
        z = (s = {}) => {
          let x;
          let W = s.base && s.base.length > 0 ? `${s.base}:` : "",
            e = (s) => W + s;
          return (
            s.dbName && s.storeName && (x = createStore(s.dbName, s.storeName)),
            {
              name: "idb-keyval",
              options: s,
              hasItem: async (s) => !(typeof (await get(e(s), x)) > "u"),
              getItem: async (s) => (await get(e(s), x)) ?? null,
              setItem: (s, W) =>
                (function (s, x, W = defaultGetStore()) {
                  return W(
                    "readwrite",
                    (W) => (W.put(x, s), promisifyRequest(W.transaction))
                  );
                })(e(s), W, x),
              removeItem: (s) =>
                (function (s, x = defaultGetStore()) {
                  return x(
                    "readwrite",
                    (x) => (x.delete(s), promisifyRequest(x.transaction))
                  );
                })(e(s), x),
              getKeys: () =>
                (function (s = defaultGetStore()) {
                  return s("readonly", (s) => {
                    var x;
                    if (s.getAllKeys) return promisifyRequest(s.getAllKeys());
                    let W = [];
                    return ((x = (s) => W.push(s.key)),
                    (s.openCursor().onsuccess = function () {
                      this.result && (x(this.result), this.result.continue());
                    }),
                    promisifyRequest(s.transaction)).then(() => W);
                  });
                })(x),
              clear: () =>
                (function (s = defaultGetStore()) {
                  return s(
                    "readwrite",
                    (s) => (s.clear(), promisifyRequest(s.transaction))
                  );
                })(x),
            }
          );
        };
      let _ = class _ {
        constructor() {
          this.indexedDb = (function (s = {}) {
            let x = {
                mounts: { "": s.driver || memory() },
                mountpoints: [""],
                watching: !1,
                watchListeners: [],
                unwatch: {},
              },
              getMount = (s) => {
                for (let W of x.mountpoints)
                  if (s.startsWith(W))
                    return {
                      base: W,
                      relativeKey: s.slice(W.length),
                      driver: x.mounts[W],
                    };
                return { base: "", relativeKey: s, driver: x.mounts[""] };
              },
              getMounts = (s, W) =>
                x.mountpoints
                  .filter((x) => x.startsWith(s) || (W && s.startsWith(x)))
                  .map((W) => ({
                    relativeBase:
                      s.length > W.length ? s.slice(W.length) : void 0,
                    mountpoint: W,
                    driver: x.mounts[W],
                  })),
              onChange = (s, W) => {
                if (x.watching)
                  for (let X of ((W = normalizeKey(W)), x.watchListeners))
                    X(s, W);
              },
              startWatch = async () => {
                if (!x.watching)
                  for (let s in ((x.watching = !0), x.mounts))
                    x.unwatch[s] = await watch(x.mounts[s], onChange, s);
              },
              stopWatch = async () => {
                if (x.watching) {
                  for (let s in x.unwatch) await x.unwatch[s]();
                  (x.unwatch = {}), (x.watching = !1);
                }
              },
              runBatch = (s, x, W) => {
                let X = new Map(),
                  getBatch = (s) => {
                    let x = X.get(s.base);
                    return (
                      x ||
                        ((x = { driver: s.driver, base: s.base, items: [] }),
                        X.set(s.base, x)),
                      x
                    );
                  };
                for (let W of s) {
                  let s = "string" == typeof W,
                    X = normalizeKey(s ? W : W.key),
                    ee = s ? void 0 : W.value,
                    et = s || !W.options ? x : { ...x, ...W.options },
                    er = getMount(X);
                  getBatch(er).items.push({
                    key: X,
                    value: ee,
                    relativeKey: er.relativeKey,
                    options: et,
                  });
                }
                return Promise.all([...X.values()].map((s) => W(s))).then((s) =>
                  s.flat()
                );
              },
              W = {
                hasItem(s, x = {}) {
                  s = normalizeKey(s);
                  let { relativeKey: W, driver: X } = getMount(s);
                  return asyncCall(X.hasItem, W, x);
                },
                getItem(s, x = {}) {
                  s = normalizeKey(s);
                  let { relativeKey: W, driver: X } = getMount(s);
                  return asyncCall(X.getItem, W, x).then((s) => destr(s));
                },
                getItems: (s, x) =>
                  runBatch(s, x, (s) =>
                    s.driver.getItems
                      ? asyncCall(
                          s.driver.getItems,
                          s.items.map((s) => ({
                            key: s.relativeKey,
                            options: s.options,
                          })),
                          x
                        ).then((x) =>
                          x.map((x) => ({
                            key: (function (...s) {
                              return normalizeKey(s.join(":"));
                            })(s.base, x.key),
                            value: destr(x.value),
                          }))
                        )
                      : Promise.all(
                          s.items.map((x) =>
                            asyncCall(
                              s.driver.getItem,
                              x.relativeKey,
                              x.options
                            ).then((s) => ({ key: x.key, value: destr(s) }))
                          )
                        )
                  ),
                getItemRaw(s, x = {}) {
                  s = normalizeKey(s);
                  let { relativeKey: W, driver: X } = getMount(s);
                  return X.getItemRaw
                    ? asyncCall(X.getItemRaw, W, x)
                    : asyncCall(X.getItem, W, x).then((s) =>
                        "string" == typeof s && s.startsWith(eM)
                          ? (checkBufferSupport(),
                            eO.from(s.slice(eM.length), "base64"))
                          : s
                      );
                },
                async setItem(s, x, X = {}) {
                  if (void 0 === x) return W.removeItem(s);
                  s = normalizeKey(s);
                  let { relativeKey: ee, driver: et } = getMount(s);
                  et.setItem &&
                    (await asyncCall(et.setItem, ee, stringify(x), X),
                    et.watch || onChange("update", s));
                },
                async setItems(s, x) {
                  await runBatch(s, x, async (s) => {
                    if (s.driver.setItems)
                      return asyncCall(
                        s.driver.setItems,
                        s.items.map((s) => ({
                          key: s.relativeKey,
                          value: stringify(s.value),
                          options: s.options,
                        })),
                        x
                      );
                    s.driver.setItem &&
                      (await Promise.all(
                        s.items.map((x) =>
                          asyncCall(
                            s.driver.setItem,
                            x.relativeKey,
                            stringify(x.value),
                            x.options
                          )
                        )
                      ));
                  });
                },
                async setItemRaw(s, x, X = {}) {
                  if (void 0 === x) return W.removeItem(s, X);
                  s = normalizeKey(s);
                  let { relativeKey: ee, driver: et } = getMount(s);
                  if (et.setItemRaw) await asyncCall(et.setItemRaw, ee, x, X);
                  else {
                    if (!et.setItem) return;
                    await asyncCall(
                      et.setItem,
                      ee,
                      (function (s) {
                        if ("string" == typeof s) return s;
                        checkBufferSupport();
                        let x = eO.from(s).toString("base64");
                        return eM + x;
                      })(x),
                      X
                    );
                  }
                  et.watch || onChange("update", s);
                },
                async removeItem(s, x = {}) {
                  "boolean" == typeof x && (x = { removeMeta: x }),
                    (s = normalizeKey(s));
                  let { relativeKey: W, driver: X } = getMount(s);
                  X.removeItem &&
                    (await asyncCall(X.removeItem, W, x),
                    (x.removeMeta || x.removeMata) &&
                      (await asyncCall(X.removeItem, W + "$", x)),
                    X.watch || onChange("remove", s));
                },
                async getMeta(s, x = {}) {
                  "boolean" == typeof x && (x = { nativeOnly: x }),
                    (s = normalizeKey(s));
                  let { relativeKey: W, driver: X } = getMount(s),
                    ee = Object.create(null);
                  if (
                    (X.getMeta &&
                      Object.assign(ee, await asyncCall(X.getMeta, W, x)),
                    !x.nativeOnly)
                  ) {
                    let s = await asyncCall(X.getItem, W + "$", x).then((s) =>
                      destr(s)
                    );
                    s &&
                      "object" == typeof s &&
                      ("string" == typeof s.atime &&
                        (s.atime = new Date(s.atime)),
                      "string" == typeof s.mtime &&
                        (s.mtime = new Date(s.mtime)),
                      Object.assign(ee, s));
                  }
                  return ee;
                },
                setMeta(s, x, W = {}) {
                  return this.setItem(s + "$", x, W);
                },
                removeMeta(s, x = {}) {
                  return this.removeItem(s + "$", x);
                },
                async getKeys(s, x = {}) {
                  s = unstorage_d569726e_normalizeBaseKey(s);
                  let W = getMounts(s, !0),
                    X = [],
                    ee = [];
                  for (let s of W) {
                    let W = await asyncCall(
                      s.driver.getKeys,
                      s.relativeBase,
                      x
                    );
                    for (let x of W) {
                      let W = s.mountpoint + normalizeKey(x);
                      X.some((s) => W.startsWith(s)) || ee.push(W);
                    }
                    X = [
                      s.mountpoint,
                      ...X.filter((x) => !x.startsWith(s.mountpoint)),
                    ];
                  }
                  return s
                    ? ee.filter(
                        (x) => x.startsWith(s) && "$" !== x[x.length - 1]
                      )
                    : ee.filter((s) => "$" !== s[s.length - 1]);
                },
                async clear(s, x = {}) {
                  (s = unstorage_d569726e_normalizeBaseKey(s)),
                    await Promise.all(
                      getMounts(s, !1).map(async (s) => {
                        if (s.driver.clear)
                          return asyncCall(s.driver.clear, s.relativeBase, x);
                        if (s.driver.removeItem) {
                          let W = await s.driver.getKeys(
                            s.relativeBase || "",
                            x
                          );
                          return Promise.all(
                            W.map((W) => s.driver.removeItem(W, x))
                          );
                        }
                      })
                    );
                },
                async dispose() {
                  await Promise.all(
                    Object.values(x.mounts).map((s) => dispose(s))
                  );
                },
                watch: async (s) => (
                  await startWatch(),
                  x.watchListeners.push(s),
                  async () => {
                    (x.watchListeners = x.watchListeners.filter(
                      (x) => x !== s
                    )),
                      0 === x.watchListeners.length && (await stopWatch());
                  }
                ),
                async unwatch() {
                  (x.watchListeners = []), await stopWatch();
                },
                mount(s, X) {
                  if (
                    (s = unstorage_d569726e_normalizeBaseKey(s)) &&
                    x.mounts[s]
                  )
                    throw Error(`already mounted at ${s}`);
                  return (
                    s &&
                      (x.mountpoints.push(s),
                      x.mountpoints.sort((s, x) => x.length - s.length)),
                    (x.mounts[s] = X),
                    x.watching &&
                      Promise.resolve(watch(X, onChange, s))
                        .then((W) => {
                          x.unwatch[s] = W;
                        })
                        .catch(console.error),
                    W
                  );
                },
                async unmount(s, W = !0) {
                  (s = unstorage_d569726e_normalizeBaseKey(s)) &&
                    x.mounts[s] &&
                    (x.watching &&
                      s in x.unwatch &&
                      (x.unwatch[s](), delete x.unwatch[s]),
                    W && (await dispose(x.mounts[s])),
                    (x.mountpoints = x.mountpoints.filter((x) => x !== s)),
                    delete x.mounts[s]);
                },
                getMount(s = "") {
                  s = normalizeKey(s) + ":";
                  let x = getMount(s);
                  return { driver: x.driver, base: x.base };
                },
                getMounts(s = "", x = {}) {
                  s = normalizeKey(s);
                  let W = getMounts(s, x.parents);
                  return W.map((s) => ({
                    driver: s.driver,
                    base: s.mountpoint,
                  }));
                },
                keys: (s, x = {}) => W.getKeys(s, x),
                get: (s, x = {}) => W.getItem(s, x),
                set: (s, x, X = {}) => W.setItem(s, x, X),
                has: (s, x = {}) => W.hasItem(s, x),
                del: (s, x = {}) => W.removeItem(s, x),
                remove: (s, x = {}) => W.removeItem(s, x),
              };
            return W;
          })({
            driver: z({
              dbName: "WALLET_CONNECT_V2_INDEXED_DB",
              storeName: "keyvaluestorage",
            }),
          });
        }
        async getKeys() {
          return this.indexedDb.getKeys();
        }
        async getEntries() {
          return (
            await this.indexedDb.getItems(await this.indexedDb.getKeys())
          ).map((s) => [s.key, s.value]);
        }
        async getItem(s) {
          let x = await this.indexedDb.getItem(s);
          if (null !== x) return x;
        }
        async setItem(s, x) {
          await this.indexedDb.setItem(s, (0, eD.u)(x));
        }
        async removeItem(s) {
          await this.indexedDb.removeItem(s);
        }
      };
      var eB =
          "u" > typeof globalThis
            ? globalThis
            : "u" > typeof window
            ? window
            : "u" > typeof W.g
            ? W.g
            : "u" > typeof self
            ? self
            : {},
        eL = { exports: {} };
      function k(s) {
        var x;
        return [s[0], (0, eD.D)(null != (x = s[1]) ? x : "")];
      }
      !(function () {
        function t() {}
        (t.prototype.getItem = function (s) {
          return this.hasOwnProperty(s) ? String(this[s]) : null;
        }),
          (t.prototype.setItem = function (s, x) {
            this[s] = String(x);
          }),
          (t.prototype.removeItem = function (s) {
            delete this[s];
          }),
          (t.prototype.clear = function () {
            let s = this;
            Object.keys(s).forEach(function (x) {
              (s[x] = void 0), delete s[x];
            });
          }),
          (t.prototype.key = function (s) {
            return (s = s || 0), Object.keys(this)[s];
          }),
          t.prototype.__defineGetter__("length", function () {
            return Object.keys(this).length;
          }),
          "u" > typeof eB && eB.localStorage
            ? (eL.exports = eB.localStorage)
            : "u" > typeof window && window.localStorage
            ? (eL.exports = window.localStorage)
            : (eL.exports = new t());
      })();
      let K = class K {
        constructor() {
          this.localStorage = eL.exports;
        }
        async getKeys() {
          return Object.keys(this.localStorage);
        }
        async getEntries() {
          return Object.entries(this.localStorage).map(k);
        }
        async getItem(s) {
          let x = this.localStorage.getItem(s);
          if (null !== x) return (0, eD.D)(x);
        }
        async setItem(s, x) {
          this.localStorage.setItem(s, (0, eD.u)(x));
        }
        async removeItem(s) {
          this.localStorage.removeItem(s);
        }
      };
      let O = async (s, x, W) => {
          let X = "wc_storage_version",
            ee = await x.getItem(X);
          if (ee && ee >= 1) {
            W(x);
            return;
          }
          let et = await s.getKeys();
          if (!et.length) {
            W(x);
            return;
          }
          let er = [];
          for (; et.length; ) {
            let W = et.shift();
            if (!W) continue;
            let X = W.toLowerCase();
            if (
              X.includes("wc@") ||
              X.includes("walletconnect") ||
              X.includes("wc_") ||
              X.includes("wallet_connect")
            ) {
              let X = await s.getItem(W);
              await x.setItem(W, X), er.push(W);
            }
          }
          await x.setItem(X, 1), W(x), j(s, er);
        },
        j = async (s, x) => {
          x.length &&
            x.forEach(async (x) => {
              await s.removeItem(x);
            });
        };
      let h = class h {
        constructor() {
          (this.initialized = !1),
            (this.setInitialized = (s) => {
              (this.storage = s), (this.initialized = !0);
            });
          let s = new K();
          this.storage = s;
          try {
            let x = new _();
            O(s, x, this.setInitialized);
          } catch {
            this.initialized = !0;
          }
        }
        async getKeys() {
          return await this.initialize(), this.storage.getKeys();
        }
        async getEntries() {
          return await this.initialize(), this.storage.getEntries();
        }
        async getItem(s) {
          return await this.initialize(), this.storage.getItem(s);
        }
        async setItem(s, x) {
          return await this.initialize(), this.storage.setItem(s, x);
        }
        async removeItem(s) {
          return await this.initialize(), this.storage.removeItem(s);
        }
        async initialize() {
          this.initialized ||
            (await new Promise((s) => {
              let x = setInterval(() => {
                this.initialized && (clearInterval(x), s());
              }, 20);
            }));
        }
      };
      var ej = W(12044);
      let index_es_n = class index_es_n extends IEvents {
        constructor(s) {
          super(), (this.opts = s), (this.protocol = "wc"), (this.version = 2);
        }
      };
      let index_es_h = class index_es_h extends IEvents {
        constructor(s, x) {
          super(),
            (this.core = s),
            (this.logger = x),
            (this.records = new Map());
        }
      };
      let a = class a {
        constructor(s, x) {
          (this.logger = s), (this.core = x);
        }
      };
      let g = class g extends IEvents {
        constructor(s, x) {
          super(), (this.relayer = s), (this.logger = x);
        }
      };
      let u = class u extends IEvents {
        constructor(s) {
          super();
        }
      };
      let p = class p {
        constructor(s, x, W, X) {
          (this.core = s), (this.logger = x), (this.name = W);
        }
      };
      let d = class d extends IEvents {
        constructor(s, x) {
          super(), (this.relayer = s), (this.logger = x);
        }
      };
      let index_es_x = class index_es_x extends IEvents {
        constructor(s, x) {
          super(), (this.core = s), (this.logger = x);
        }
      };
      let index_es_y = class index_es_y {
        constructor(s, x, W) {
          (this.core = s), (this.logger = x), (this.store = W);
        }
      };
      let v = class v {
        constructor(s, x) {
          (this.projectId = s), (this.logger = x);
        }
      };
      let index_es_C = class index_es_C {
        constructor(s, x, W) {
          (this.core = s), (this.logger = x), (this.telemetryEnabled = W);
        }
      };
      let S = class S {
        constructor(s) {
          (this.opts = s), (this.protocol = "wc"), (this.version = 2);
        }
      };
      let M = class M {
        constructor(s) {
          this.client = s;
        }
      };
      var eU = W(31050),
        e$ = W(31416);
      let eF = "base64url",
        ez = "utf8",
        eH = "utf8",
        eV = "base58btc";
      function allocUnsafe(s = 0) {
        return null != globalThis.Buffer &&
          null != globalThis.Buffer.allocUnsafe
          ? globalThis.Buffer.allocUnsafe(s)
          : new Uint8Array(s);
      }
      function concat_concat(s, x) {
        x || (x = s.reduce((s, x) => s + x.length, 0));
        let W = allocUnsafe(x),
          X = 0;
        for (let x of s) W.set(x, X), (X += x.length);
        return W;
      }
      var base_x = function (s, x) {
        if (s.length >= 255) throw TypeError("Alphabet too long");
        for (var W = new Uint8Array(256), X = 0; X < W.length; X++) W[X] = 255;
        for (var ee = 0; ee < s.length; ee++) {
          var et = s.charAt(ee),
            er = et.charCodeAt(0);
          if (255 !== W[er]) throw TypeError(et + " is ambiguous");
          W[er] = ee;
        }
        var ei = s.length,
          eo = s.charAt(0),
          ea = Math.log(ei) / Math.log(256),
          es = Math.log(256) / Math.log(ei);
        function decodeUnsafe(s) {
          if ("string" != typeof s) throw TypeError("Expected String");
          if (0 === s.length) return new Uint8Array();
          var x = 0;
          if (" " !== s[0]) {
            for (var X = 0, ee = 0; s[x] === eo; ) X++, x++;
            for (
              var et = ((s.length - x) * ea + 1) >>> 0, er = new Uint8Array(et);
              s[x];

            ) {
              var es = W[s.charCodeAt(x)];
              if (255 === es) return;
              for (
                var el = 0, ec = et - 1;
                (0 !== es || el < ee) && -1 !== ec;
                ec--, el++
              )
                (es += (ei * er[ec]) >>> 0),
                  (er[ec] = es % 256 >>> 0),
                  (es = (es / 256) >>> 0);
              if (0 !== es) throw Error("Non-zero carry");
              (ee = el), x++;
            }
            if (" " !== s[x]) {
              for (var eu = et - ee; eu !== et && 0 === er[eu]; ) eu++;
              for (var ed = new Uint8Array(X + (et - eu)), eh = X; eu !== et; )
                ed[eh++] = er[eu++];
              return ed;
            }
          }
        }
        return {
          encode: function (x) {
            if (
              (x instanceof Uint8Array ||
                (ArrayBuffer.isView(x)
                  ? (x = new Uint8Array(x.buffer, x.byteOffset, x.byteLength))
                  : Array.isArray(x) && (x = Uint8Array.from(x))),
              !(x instanceof Uint8Array))
            )
              throw TypeError("Expected Uint8Array");
            if (0 === x.length) return "";
            for (
              var W = 0, X = 0, ee = 0, et = x.length;
              ee !== et && 0 === x[ee];

            )
              ee++, W++;
            for (
              var er = ((et - ee) * es + 1) >>> 0, ea = new Uint8Array(er);
              ee !== et;

            ) {
              for (
                var el = x[ee], ec = 0, eu = er - 1;
                (0 !== el || ec < X) && -1 !== eu;
                eu--, ec++
              )
                (el += (256 * ea[eu]) >>> 0),
                  (ea[eu] = el % ei >>> 0),
                  (el = (el / ei) >>> 0);
              if (0 !== el) throw Error("Non-zero carry");
              (X = ec), ee++;
            }
            for (var ed = er - X; ed !== er && 0 === ea[ed]; ) ed++;
            for (var eh = eo.repeat(W); ed < er; ++ed) eh += s.charAt(ea[ed]);
            return eh;
          },
          decodeUnsafe: decodeUnsafe,
          decode: function (s) {
            var W = decodeUnsafe(s);
            if (W) return W;
            throw Error(`Non-${x} character`);
          },
        };
      };
      new Uint8Array(0);
      let equals = (s, x) => {
          if (s === x) return !0;
          if (s.byteLength !== x.byteLength) return !1;
          for (let W = 0; W < s.byteLength; W++) if (s[W] !== x[W]) return !1;
          return !0;
        },
        coerce = (s) => {
          if (s instanceof Uint8Array && "Uint8Array" === s.constructor.name)
            return s;
          if (s instanceof ArrayBuffer) return new Uint8Array(s);
          if (ArrayBuffer.isView(s))
            return new Uint8Array(s.buffer, s.byteOffset, s.byteLength);
          throw Error("Unknown type, must be binary type");
        },
        bytes_fromString = (s) => new TextEncoder().encode(s),
        bytes_toString = (s) => new TextDecoder().decode(s);
      let Encoder = class Encoder {
        constructor(s, x, W) {
          (this.name = s), (this.prefix = x), (this.baseEncode = W);
        }
        encode(s) {
          if (s instanceof Uint8Array)
            return `${this.prefix}${this.baseEncode(s)}`;
          throw Error("Unknown type, must be binary type");
        }
      };
      let Decoder = class Decoder {
        constructor(s, x, W) {
          if (((this.name = s), (this.prefix = x), void 0 === x.codePointAt(0)))
            throw Error("Invalid prefix character");
          (this.prefixCodePoint = x.codePointAt(0)), (this.baseDecode = W);
        }
        decode(s) {
          if ("string" == typeof s) {
            if (s.codePointAt(0) !== this.prefixCodePoint)
              throw Error(
                `Unable to decode multibase string ${JSON.stringify(s)}, ${
                  this.name
                } decoder only supports inputs prefixed with ${this.prefix}`
              );
            return this.baseDecode(s.slice(this.prefix.length));
          }
          throw Error("Can only multibase decode strings");
        }
        or(s) {
          return or(this, s);
        }
      };
      let ComposedDecoder = class ComposedDecoder {
        constructor(s) {
          this.decoders = s;
        }
        or(s) {
          return or(this, s);
        }
        decode(s) {
          let x = s[0],
            W = this.decoders[x];
          if (W) return W.decode(s);
          throw RangeError(
            `Unable to decode multibase string ${JSON.stringify(
              s
            )}, only inputs prefixed with ${Object.keys(
              this.decoders
            )} are supported`
          );
        }
      };
      let or = (s, x) =>
        new ComposedDecoder({
          ...(s.decoders || { [s.prefix]: s }),
          ...(x.decoders || { [x.prefix]: x }),
        });
      let Codec = class Codec {
        constructor(s, x, W, X) {
          (this.name = s),
            (this.prefix = x),
            (this.baseEncode = W),
            (this.baseDecode = X),
            (this.encoder = new Encoder(s, x, W)),
            (this.decoder = new Decoder(s, x, X));
        }
        encode(s) {
          return this.encoder.encode(s);
        }
        decode(s) {
          return this.decoder.decode(s);
        }
      };
      let from = ({ name: s, prefix: x, encode: W, decode: X }) =>
          new Codec(s, x, W, X),
        baseX = ({ prefix: s, name: x, alphabet: W }) => {
          let { encode: X, decode: ee } = base_x(W, x);
          return from({
            prefix: s,
            name: x,
            encode: X,
            decode: (s) => coerce(ee(s)),
          });
        },
        decode = (s, x, W, X) => {
          let ee = {};
          for (let s = 0; s < x.length; ++s) ee[x[s]] = s;
          let et = s.length;
          for (; "=" === s[et - 1]; ) --et;
          let er = new Uint8Array(((et * W) / 8) | 0),
            ei = 0,
            eo = 0,
            ea = 0;
          for (let x = 0; x < et; ++x) {
            let et = ee[s[x]];
            if (void 0 === et) throw SyntaxError(`Non-${X} character`);
            (eo = (eo << W) | et),
              (ei += W) >= 8 && ((ei -= 8), (er[ea++] = 255 & (eo >> ei)));
          }
          if (ei >= W || 255 & (eo << (8 - ei)))
            throw SyntaxError("Unexpected end of data");
          return er;
        },
        base_encode = (s, x, W) => {
          let X = "=" === x[x.length - 1],
            ee = (1 << W) - 1,
            et = "",
            er = 0,
            ei = 0;
          for (let X = 0; X < s.length; ++X)
            for (ei = (ei << 8) | s[X], er += 8; er > W; )
              (er -= W), (et += x[ee & (ei >> er)]);
          if ((er && (et += x[ee & (ei << (W - er))]), X))
            for (; (et.length * W) & 7; ) et += "=";
          return et;
        },
        rfc4648 = ({ name: s, prefix: x, bitsPerChar: W, alphabet: X }) =>
          from({
            prefix: x,
            name: s,
            encode: (s) => base_encode(s, X, W),
            decode: (x) => decode(x, X, W, s),
          }),
        eW = from({
          prefix: "\x00",
          name: "identity",
          encode: (s) => bytes_toString(s),
          decode: (s) => bytes_fromString(s),
        }),
        eK = rfc4648({
          prefix: "0",
          name: "base2",
          alphabet: "01",
          bitsPerChar: 1,
        }),
        eZ = rfc4648({
          prefix: "7",
          name: "base8",
          alphabet: "01234567",
          bitsPerChar: 3,
        }),
        eG = baseX({ prefix: "9", name: "base10", alphabet: "0123456789" }),
        eY = rfc4648({
          prefix: "f",
          name: "base16",
          alphabet: "0123456789abcdef",
          bitsPerChar: 4,
        }),
        eQ = rfc4648({
          prefix: "F",
          name: "base16upper",
          alphabet: "0123456789ABCDEF",
          bitsPerChar: 4,
        }),
        eJ = rfc4648({
          prefix: "b",
          name: "base32",
          alphabet: "abcdefghijklmnopqrstuvwxyz234567",
          bitsPerChar: 5,
        }),
        eX = rfc4648({
          prefix: "B",
          name: "base32upper",
          alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
          bitsPerChar: 5,
        }),
        e0 = rfc4648({
          prefix: "c",
          name: "base32pad",
          alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
          bitsPerChar: 5,
        }),
        e1 = rfc4648({
          prefix: "C",
          name: "base32padupper",
          alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
          bitsPerChar: 5,
        }),
        e2 = rfc4648({
          prefix: "v",
          name: "base32hex",
          alphabet: "0123456789abcdefghijklmnopqrstuv",
          bitsPerChar: 5,
        }),
        e3 = rfc4648({
          prefix: "V",
          name: "base32hexupper",
          alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
          bitsPerChar: 5,
        }),
        e5 = rfc4648({
          prefix: "t",
          name: "base32hexpad",
          alphabet: "0123456789abcdefghijklmnopqrstuv=",
          bitsPerChar: 5,
        }),
        e6 = rfc4648({
          prefix: "T",
          name: "base32hexpadupper",
          alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
          bitsPerChar: 5,
        }),
        e4 = rfc4648({
          prefix: "h",
          name: "base32z",
          alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
          bitsPerChar: 5,
        }),
        e8 = baseX({
          prefix: "k",
          name: "base36",
          alphabet: "0123456789abcdefghijklmnopqrstuvwxyz",
        }),
        e9 = baseX({
          prefix: "K",
          name: "base36upper",
          alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
        }),
        e7 = baseX({
          name: "base58btc",
          prefix: "z",
          alphabet:
            "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
        }),
        tt = baseX({
          name: "base58flickr",
          prefix: "Z",
          alphabet:
            "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",
        }),
        tr = rfc4648({
          prefix: "m",
          name: "base64",
          alphabet:
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          bitsPerChar: 6,
        }),
        ta = rfc4648({
          prefix: "M",
          name: "base64pad",
          alphabet:
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
          bitsPerChar: 6,
        }),
        ts = rfc4648({
          prefix: "u",
          name: "base64url",
          alphabet:
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
          bitsPerChar: 6,
        }),
        tl = rfc4648({
          prefix: "U",
          name: "base64urlpad",
          alphabet:
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
          bitsPerChar: 6,
        }),
        tc = Array.from(
          "\uD83D\uDE80\uD83E\uDE90☄\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09☀\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02❤\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09☺\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E✌✨\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D❣\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33✋\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13⭐✅\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6✔\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90☹\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20☝\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B⚽\uD83E\uDD19☕\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81⚡\uD83C\uDF1E\uD83C\uDF88❌✊\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C✈\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74▶➡❓\uD83D\uDC8E\uD83D\uDCB8⬇\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A⚠\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37☎\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51❄\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42"
        ),
        tu = tc.reduce((s, x, W) => ((s[W] = x), s), []),
        td = tc.reduce((s, x, W) => ((s[x.codePointAt(0)] = W), s), []),
        th = from({
          prefix: "\uD83D\uDE80",
          name: "base256emoji",
          encode: function (s) {
            return s.reduce((s, x) => (s += tu[x]), "");
          },
          decode: function (s) {
            let x = [];
            for (let W of s) {
              let s = td[W.codePointAt(0)];
              if (void 0 === s) throw Error(`Non-base256emoji character: ${W}`);
              x.push(s);
            }
            return new Uint8Array(x);
          },
        });
      function varint_encode(s, x, W) {
        x = x || [];
        for (var X = (W = W || 0); s >= 2147483648; )
          (x[W++] = (255 & s) | 128), (s /= 128);
        for (; -128 & s; ) (x[W++] = (255 & s) | 128), (s >>>= 7);
        return (x[W] = 0 | s), (varint_encode.bytes = W - X + 1), x;
      }
      function read(s, x) {
        var W,
          X = 0,
          x = x || 0,
          ee = 0,
          et = x,
          er = s.length;
        do {
          if (et >= er)
            throw ((read.bytes = 0), RangeError("Could not decode varint"));
          (W = s[et++]),
            (X += ee < 28 ? (127 & W) << ee : (127 & W) * Math.pow(2, ee)),
            (ee += 7);
        } while (W >= 128);
        return (read.bytes = et - x), X;
      }
      var tp = {
        encode: varint_encode,
        decode: read,
        encodingLength: function (s) {
          return s < 128
            ? 1
            : s < 16384
            ? 2
            : s < 2097152
            ? 3
            : s < 268435456
            ? 4
            : s < 34359738368
            ? 5
            : s < 4398046511104
            ? 6
            : s < 562949953421312
            ? 7
            : s < 72057594037927940
            ? 8
            : s < 0x7fffffffffffffff
            ? 9
            : 10;
        },
      };
      let src_varint_decode = (s, x = 0) => {
          let W = tp.decode(s, x);
          return [W, tp.decode.bytes];
        },
        encodeTo = (s, x, W = 0) => (tp.encode(s, x, W), x),
        encodingLength = (s) => tp.encodingLength(s),
        create = (s, x) => {
          let W = x.byteLength,
            X = encodingLength(s),
            ee = X + encodingLength(W),
            et = new Uint8Array(ee + W);
          return (
            encodeTo(s, et, 0),
            encodeTo(W, et, X),
            et.set(x, ee),
            new Digest(s, W, x, et)
          );
        },
        digest_decode = (s) => {
          let x = coerce(s),
            [W, X] = src_varint_decode(x),
            [ee, et] = src_varint_decode(x.subarray(X)),
            er = x.subarray(X + et);
          if (er.byteLength !== ee) throw Error("Incorrect length");
          return new Digest(W, ee, er, x);
        },
        digest_equals = (s, x) =>
          s === x ||
          (s.code === x.code && s.size === x.size && equals(s.bytes, x.bytes));
      let Digest = class Digest {
        constructor(s, x, W, X) {
          (this.code = s), (this.size = x), (this.digest = W), (this.bytes = X);
        }
      };
      let hasher_from = ({ name: s, code: x, encode: W }) =>
        new Hasher(s, x, W);
      let Hasher = class Hasher {
        constructor(s, x, W) {
          (this.name = s), (this.code = x), (this.encode = W);
        }
        digest(s) {
          if (s instanceof Uint8Array) {
            let x = this.encode(s);
            return x instanceof Uint8Array
              ? create(this.code, x)
              : x.then((s) => create(this.code, s));
          }
          throw Error("Unknown type, must be binary type");
        }
      };
      let sha = (s) => async (x) =>
          new Uint8Array(await crypto.subtle.digest(s, x)),
        tf = hasher_from({
          name: "sha2-256",
          code: 18,
          encode: sha("SHA-256"),
        }),
        tg = hasher_from({
          name: "sha2-512",
          code: 19,
          encode: sha("SHA-512"),
        }),
        tm = {
          code: 0,
          name: "identity",
          encode: coerce,
          digest: (s) => create(0, coerce(s)),
        },
        tw = "raw",
        tb = 85,
        raw_encode = (s) => coerce(s),
        raw_decode = (s) => coerce(s),
        tv = new TextEncoder(),
        ty = new TextDecoder(),
        t_ = "json",
        tC = 512,
        json_encode = (s) => tv.encode(JSON.stringify(s)),
        json_decode = (s) => JSON.parse(ty.decode(s));
      let CID = class CID {
        constructor(s, x, W, X) {
          (this.code = x),
            (this.version = s),
            (this.multihash = W),
            (this.bytes = X),
            (this.byteOffset = X.byteOffset),
            (this.byteLength = X.byteLength),
            (this.asCID = this),
            (this._baseCache = new Map()),
            Object.defineProperties(this, {
              byteOffset: tk,
              byteLength: tk,
              code: tS,
              version: tS,
              multihash: tS,
              bytes: tS,
              _baseCache: tk,
              asCID: tk,
            });
        }
        toV0() {
          if (0 === this.version) return this;
          {
            let { code: s, multihash: x } = this;
            if (s !== tx)
              throw Error("Cannot convert a non dag-pb CID to CIDv0");
            if (x.code !== tE)
              throw Error("Cannot convert non sha2-256 multihash CID to CIDv0");
            return CID.createV0(x);
          }
        }
        toV1() {
          switch (this.version) {
            case 0: {
              let { code: s, digest: x } = this.multihash,
                W = create(s, x);
              return CID.createV1(this.code, W);
            }
            case 1:
              return this;
            default:
              throw Error(
                `Can not convert CID version ${this.version} to version 0. This is a bug please report`
              );
          }
        }
        equals(s) {
          return (
            s &&
            this.code === s.code &&
            this.version === s.version &&
            digest_equals(this.multihash, s.multihash)
          );
        }
        toString(s) {
          let { bytes: x, version: W, _baseCache: X } = this;
          return 0 === W
            ? toStringV0(x, X, s || e7.encoder)
            : toStringV1(x, X, s || eJ.encoder);
        }
        toJSON() {
          return {
            code: this.code,
            version: this.version,
            hash: this.multihash.bytes,
          };
        }
        get [Symbol.toStringTag]() {
          return "CID";
        }
        [Symbol.for("nodejs.util.inspect.custom")]() {
          return "CID(" + this.toString() + ")";
        }
        static isCID(s) {
          return deprecate(/^0\.0/, tT), !!(s && (s[tA] || s.asCID === s));
        }
        get toBaseEncodedString() {
          throw Error("Deprecated, use .toString()");
        }
        get codec() {
          throw Error(
            '"codec" property is deprecated, use integer "code" property instead'
          );
        }
        get buffer() {
          throw Error(
            "Deprecated .buffer property, use .bytes to get Uint8Array instead"
          );
        }
        get multibaseName() {
          throw Error('"multibaseName" property is deprecated');
        }
        get prefix() {
          throw Error('"prefix" property is deprecated');
        }
        static asCID(s) {
          if (s instanceof CID) return s;
          if (null != s && s.asCID === s) {
            let { version: x, code: W, multihash: X, bytes: ee } = s;
            return new CID(x, W, X, ee || encodeCID(x, W, X.bytes));
          }
          if (null == s || !0 !== s[tA]) return null;
          {
            let { version: x, multihash: W, code: X } = s,
              ee = digest_decode(W);
            return CID.create(x, X, ee);
          }
        }
        static create(s, x, W) {
          if ("number" != typeof x)
            throw Error("String codecs are no longer supported");
          switch (s) {
            case 0:
              if (x === tx) return new CID(s, x, W, W.bytes);
              throw Error(
                `Version 0 CID must use dag-pb (code: ${tx}) block encoding`
              );
            case 1: {
              let X = encodeCID(s, x, W.bytes);
              return new CID(s, x, W, X);
            }
            default:
              throw Error("Invalid version");
          }
        }
        static createV0(s) {
          return CID.create(0, tx, s);
        }
        static createV1(s, x) {
          return CID.create(1, s, x);
        }
        static decode(s) {
          let [x, W] = CID.decodeFirst(s);
          if (W.length) throw Error("Incorrect length");
          return x;
        }
        static decodeFirst(s) {
          let x = CID.inspectBytes(s),
            W = x.size - x.multihashSize,
            X = coerce(s.subarray(W, W + x.multihashSize));
          if (X.byteLength !== x.multihashSize) throw Error("Incorrect length");
          let ee = X.subarray(x.multihashSize - x.digestSize),
            et = new Digest(x.multihashCode, x.digestSize, ee, X),
            er = 0 === x.version ? CID.createV0(et) : CID.createV1(x.codec, et);
          return [er, s.subarray(x.size)];
        }
        static inspectBytes(s) {
          let x = 0,
            next = () => {
              let [W, X] = src_varint_decode(s.subarray(x));
              return (x += X), W;
            },
            W = next(),
            X = tx;
          if (
            (18 === W ? ((W = 0), (x = 0)) : 1 === W && (X = next()),
            0 !== W && 1 !== W)
          )
            throw RangeError(`Invalid CID version ${W}`);
          let ee = x,
            et = next(),
            er = next(),
            ei = x + er;
          return {
            version: W,
            codec: X,
            multihashCode: et,
            digestSize: er,
            multihashSize: ei - ee,
            size: ei,
          };
        }
        static parse(s, x) {
          let [W, X] = parseCIDtoBytes(s, x),
            ee = CID.decode(X);
          return ee._baseCache.set(W, s), ee;
        }
      };
      let parseCIDtoBytes = (s, x) => {
          switch (s[0]) {
            case "Q":
              return [e7.prefix, (x || e7).decode(`${e7.prefix}${s}`)];
            case e7.prefix:
              return [e7.prefix, (x || e7).decode(s)];
            case eJ.prefix:
              return [eJ.prefix, (x || eJ).decode(s)];
            default:
              if (null == x)
                throw Error(
                  "To parse non base32 or base58btc encoded CID multibase decoder must be provided"
                );
              return [s[0], x.decode(s)];
          }
        },
        toStringV0 = (s, x, W) => {
          let { prefix: X } = W;
          if (X !== e7.prefix)
            throw Error(`Cannot string encode V0 in ${W.name} encoding`);
          let ee = x.get(X);
          if (null != ee) return ee;
          {
            let ee = W.encode(s).slice(1);
            return x.set(X, ee), ee;
          }
        },
        toStringV1 = (s, x, W) => {
          let { prefix: X } = W,
            ee = x.get(X);
          if (null != ee) return ee;
          {
            let ee = W.encode(s);
            return x.set(X, ee), ee;
          }
        },
        tx = 112,
        tE = 18,
        encodeCID = (s, x, W) => {
          let X = encodingLength(s),
            ee = X + encodingLength(x),
            et = new Uint8Array(ee + W.byteLength);
          return encodeTo(s, et, 0), encodeTo(x, et, X), et.set(W, ee), et;
        },
        tA = Symbol.for("@ipld/js-cid/CID"),
        tS = { writable: !1, configurable: !1, enumerable: !0 },
        tk = { writable: !1, enumerable: !1, configurable: !1 },
        deprecate = (s, x) => {
          if (s.test("0.0.0-dev")) console.warn(x);
          else throw Error(x);
        },
        tT = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`,
        tI = {
          ...ed,
          ...eh,
          ...ep,
          ...ef,
          ...eg,
          ...em,
          ...ew,
          ...eb,
          ...ev,
          ...ey,
        };
      function createCodec(s, x, W, X) {
        return {
          name: s,
          prefix: x,
          encoder: { name: s, prefix: x, encode: W },
          decoder: { decode: X },
        };
      }
      ({ ...e_, ...eC });
      let tP = createCodec(
          "utf8",
          "u",
          (s) => {
            let x = new TextDecoder("utf8");
            return "u" + x.decode(s);
          },
          (s) => {
            let x = new TextEncoder();
            return x.encode(s.substring(1));
          }
        ),
        tR = createCodec(
          "ascii",
          "a",
          (s) => {
            let x = "a";
            for (let W = 0; W < s.length; W++) x += String.fromCharCode(s[W]);
            return x;
          },
          (s) => {
            s = s.substring(1);
            let x = allocUnsafe(s.length);
            for (let W = 0; W < s.length; W++) x[W] = s.charCodeAt(W);
            return x;
          }
        ),
        tN = {
          utf8: tP,
          "utf-8": tP,
          hex: tI.base16,
          latin1: tR,
          ascii: tR,
          binary: tR,
          ...tI,
        };
      function to_string_toString(s, x = "utf8") {
        let W = tN[x];
        if (!W) throw Error(`Unsupported encoding "${x}"`);
        return ("utf8" === x || "utf-8" === x) &&
          null != globalThis.Buffer &&
          null != globalThis.Buffer.from
          ? globalThis.Buffer.from(
              s.buffer,
              s.byteOffset,
              s.byteLength
            ).toString("utf8")
          : W.encoder.encode(s).substring(1);
      }
      function from_string_fromString(s, x = "utf8") {
        let W = tN[x];
        if (!W) throw Error(`Unsupported encoding "${x}"`);
        return ("utf8" === x || "utf-8" === x) &&
          null != globalThis.Buffer &&
          null != globalThis.Buffer.from
          ? globalThis.Buffer.from(s, "utf8")
          : W.decoder.decode(`${W.prefix}${s}`);
      }
      function decodeJSON(s) {
        return (0, eD.D)(to_string_toString(from_string_fromString(s, eF), ez));
      }
      function encodeJSON(s) {
        return to_string_toString(from_string_fromString((0, eD.u)(s), ez), eF);
      }
      function encodeIss(s) {
        let x = from_string_fromString("K36", eV),
          W = "z" + to_string_toString(concat_concat([x, s]), eV);
        return ["did", "key", W].join(":");
      }
      function utils_decodeJWT(s) {
        let x = s.split("."),
          W = decodeJSON(x[0]),
          X = decodeJSON(x[1]),
          ee = from_string_fromString(x[2], eF),
          et = from_string_fromString(x.slice(0, 2).join("."), eH);
        return { header: W, payload: X, signature: ee, data: et };
      }
      function generateKeyPair(s = (0, e$.randomBytes)(32)) {
        return eU._w(s);
      }
      async function signJWT(
        s,
        x,
        W,
        X,
        ee = (0, ek.fromMiliseconds)(Date.now())
      ) {
        var et, er;
        let ei = { alg: "EdDSA", typ: "JWT" },
          eo = encodeIss(X.publicKey),
          ea = { iss: eo, sub: s, aud: x, iat: ee, exp: ee + W },
          es = from_string_fromString(
            [
              encodeJSON((et = { header: ei, payload: ea }).header),
              encodeJSON(et.payload),
            ].join("."),
            eH
          ),
          el = eU.Xx(X.secretKey, es);
        return [
          encodeJSON((er = { header: ei, payload: ea, signature: el }).header),
          encodeJSON(er.payload),
          to_string_toString(er.signature, eF),
        ].join(".");
      }
      W(43014);
      var tO = W(83454),
        __spreadArray = function (s, x, W) {
          if (W || 2 == arguments.length)
            for (var X, ee = 0, et = x.length; ee < et; ee++)
              (!X && ee in x) ||
                (X || (X = Array.prototype.slice.call(x, 0, ee)),
                (X[ee] = x[ee]));
          return s.concat(X || Array.prototype.slice.call(x));
        },
        BrowserInfo = function (s, x, W) {
          (this.name = s),
            (this.version = x),
            (this.os = W),
            (this.type = "browser");
        },
        NodeInfo = function (s) {
          (this.version = s),
            (this.type = "node"),
            (this.name = "node"),
            (this.os = tO.platform);
        },
        SearchBotDeviceInfo = function (s, x, W, X) {
          (this.name = s),
            (this.version = x),
            (this.os = W),
            (this.bot = X),
            (this.type = "bot-device");
        },
        BotInfo = function () {
          (this.type = "bot"),
            (this.bot = !0),
            (this.name = "bot"),
            (this.version = null),
            (this.os = null);
        },
        ReactNativeInfo = function () {
          (this.type = "react-native"),
            (this.name = "react-native"),
            (this.version = null),
            (this.os = null);
        },
        tM =
          /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,
        tD = [
          ["aol", /AOLShield\/([0-9\._]+)/],
          ["edge", /Edge\/([0-9\._]+)/],
          ["edge-ios", /EdgiOS\/([0-9\._]+)/],
          ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
          ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
          ["samsung", /SamsungBrowser\/([0-9\.]+)/],
          ["silk", /\bSilk\/([0-9._-]+)\b/],
          ["miui", /MiuiBrowser\/([0-9\.]+)$/],
          ["beaker", /BeakerBrowser\/([0-9\.]+)/],
          ["edge-chromium", /EdgA?\/([0-9\.]+)/],
          [
            "chromium-webview",
            /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/,
          ],
          ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
          ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
          ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
          ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
          ["fxios", /FxiOS\/([0-9\.]+)/],
          ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
          ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
          ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
          ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
          [
            "pie",
            /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/,
          ],
          ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
          ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
          ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
          ["ie", /MSIE\s(7\.0)/],
          ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
          ["android", /Android\s([0-9\.]+)/],
          ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
          ["safari", /Version\/([0-9\._]+).*Safari/],
          ["facebook", /FB[AS]V\/([0-9\.]+)/],
          ["instagram", /Instagram\s([0-9\.]+)/],
          ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
          ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
          ["curl", /^curl\/([0-9\.]+)$/],
          [
            "searchbot",
            /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/,
          ],
        ],
        tB = [
          ["iOS", /iP(hone|od|ad)/],
          ["Android OS", /Android/],
          ["BlackBerry OS", /BlackBerry|BB10/],
          ["Windows Mobile", /IEMobile/],
          ["Amazon OS", /Kindle/],
          ["Windows 3.11", /Win16/],
          ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
          ["Windows 98", /(Windows 98)|(Win98)/],
          ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
          ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
          ["Windows Server 2003", /(Windows NT 5.2)/],
          ["Windows Vista", /(Windows NT 6.0)/],
          ["Windows 7", /(Windows NT 6.1)/],
          ["Windows 8", /(Windows NT 6.2)/],
          ["Windows 8.1", /(Windows NT 6.3)/],
          ["Windows 10", /(Windows NT 10.0)/],
          ["Windows ME", /Windows ME/],
          ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
          ["Open BSD", /OpenBSD/],
          ["Sun OS", /SunOS/],
          ["Chrome OS", /CrOS/],
          ["Linux", /(Linux)|(X11)/],
          ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
          ["QNX", /QNX/],
          ["BeOS", /BeOS/],
          ["OS/2", /OS\/2/],
        ];
      function parseUserAgent(s) {
        var x =
          "" !== s &&
          tD.reduce(function (x, W) {
            var X = W[0],
              ee = W[1];
            if (x) return x;
            var et = ee.exec(s);
            return !!et && [X, et];
          }, !1);
        if (!x) return null;
        var W = x[0],
          X = x[1];
        if ("searchbot" === W) return new BotInfo();
        var ee = X[1] && X[1].split(".").join("_").split("_").slice(0, 3);
        ee
          ? ee.length < 3 &&
            (ee = __spreadArray(
              __spreadArray([], ee, !0),
              (function (s) {
                for (var x = [], W = 0; W < s; W++) x.push("0");
                return x;
              })(3 - ee.length),
              !0
            ))
          : (ee = []);
        var et = ee.join("."),
          er = (function (s) {
            for (var x = 0, W = tB.length; x < W; x++) {
              var X = tB[x],
                ee = X[0];
              if (X[1].exec(s)) return ee;
            }
            return null;
          })(s),
          ei = tM.exec(s);
        return ei && ei[1]
          ? new SearchBotDeviceInfo(W, et, er, ei[1])
          : new BrowserInfo(W, et, er);
      }
      var tL = W(62873),
        tj = W(65755);
      let tU = !1,
        t$ = !1,
        tF = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 },
        tz = 2,
        tH = null,
        tq = (function () {
          try {
            let s = [];
            if (
              (["NFD", "NFC", "NFKD", "NFKC"].forEach((x) => {
                try {
                  if ("test" !== "test".normalize(x))
                    throw Error("bad normalize");
                } catch (W) {
                  s.push(x);
                }
              }),
              s.length)
            )
              throw Error("missing " + s.join(", "));
            if (
              String.fromCharCode(233).normalize("NFD") !==
              String.fromCharCode(101, 769)
            )
              throw Error("broken implementation");
          } catch (s) {
            return s.message;
          }
          return null;
        })();
      ((ee = ea || (ea = {})).DEBUG = "DEBUG"),
        (ee.INFO = "INFO"),
        (ee.WARNING = "WARNING"),
        (ee.ERROR = "ERROR"),
        (ee.OFF = "OFF"),
        ((et = es || (es = {})).UNKNOWN_ERROR = "UNKNOWN_ERROR"),
        (et.NOT_IMPLEMENTED = "NOT_IMPLEMENTED"),
        (et.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION"),
        (et.NETWORK_ERROR = "NETWORK_ERROR"),
        (et.SERVER_ERROR = "SERVER_ERROR"),
        (et.TIMEOUT = "TIMEOUT"),
        (et.BUFFER_OVERRUN = "BUFFER_OVERRUN"),
        (et.NUMERIC_FAULT = "NUMERIC_FAULT"),
        (et.MISSING_NEW = "MISSING_NEW"),
        (et.INVALID_ARGUMENT = "INVALID_ARGUMENT"),
        (et.MISSING_ARGUMENT = "MISSING_ARGUMENT"),
        (et.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT"),
        (et.CALL_EXCEPTION = "CALL_EXCEPTION"),
        (et.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS"),
        (et.NONCE_EXPIRED = "NONCE_EXPIRED"),
        (et.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED"),
        (et.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT"),
        (et.TRANSACTION_REPLACED = "TRANSACTION_REPLACED"),
        (et.ACTION_REJECTED = "ACTION_REJECTED");
      let tV = "0123456789abcdef";
      let lib_esm_Logger = class lib_esm_Logger {
        constructor(s) {
          Object.defineProperty(this, "version", {
            enumerable: !0,
            value: s,
            writable: !1,
          });
        }
        _log(s, x) {
          let W = s.toLowerCase();
          null == tF[W] &&
            this.throwArgumentError("invalid log level name", "logLevel", s),
            tz > tF[W] || console.log.apply(console, x);
        }
        debug(...s) {
          this._log(lib_esm_Logger.levels.DEBUG, s);
        }
        info(...s) {
          this._log(lib_esm_Logger.levels.INFO, s);
        }
        warn(...s) {
          this._log(lib_esm_Logger.levels.WARNING, s);
        }
        makeError(s, x, W) {
          if (t$) return this.makeError("censored error", x, {});
          x || (x = lib_esm_Logger.errors.UNKNOWN_ERROR), W || (W = {});
          let X = [];
          Object.keys(W).forEach((s) => {
            let x = W[s];
            try {
              if (x instanceof Uint8Array) {
                let W = "";
                for (let s = 0; s < x.length; s++)
                  W += tV[x[s] >> 4] + tV[15 & x[s]];
                X.push(s + "=Uint8Array(0x" + W + ")");
              } else X.push(s + "=" + JSON.stringify(x));
            } catch (x) {
              X.push(s + "=" + JSON.stringify(W[s].toString()));
            }
          }),
            X.push(`code=${x}`),
            X.push(`version=${this.version}`);
          let ee = s,
            et = "";
          switch (x) {
            case es.NUMERIC_FAULT: {
              et = "NUMERIC_FAULT";
              let x = s;
              switch (x) {
                case "overflow":
                case "underflow":
                case "division-by-zero":
                  et += "-" + x;
                  break;
                case "negative-power":
                case "negative-width":
                  et += "-unsupported";
                  break;
                case "unbound-bitwise-result":
                  et += "-unbound-result";
              }
              break;
            }
            case es.CALL_EXCEPTION:
            case es.INSUFFICIENT_FUNDS:
            case es.MISSING_NEW:
            case es.NONCE_EXPIRED:
            case es.REPLACEMENT_UNDERPRICED:
            case es.TRANSACTION_REPLACED:
            case es.UNPREDICTABLE_GAS_LIMIT:
              et = x;
          }
          et &&
            (s += " [ See: https://links.ethers.org/v5-errors-" + et + " ]"),
            X.length && (s += " (" + X.join(", ") + ")");
          let er = Error(s);
          return (
            (er.reason = ee),
            (er.code = x),
            Object.keys(W).forEach(function (s) {
              er[s] = W[s];
            }),
            er
          );
        }
        throwError(s, x, W) {
          throw this.makeError(s, x, W);
        }
        throwArgumentError(s, x, W) {
          return this.throwError(s, lib_esm_Logger.errors.INVALID_ARGUMENT, {
            argument: x,
            value: W,
          });
        }
        assert(s, x, W, X) {
          s || this.throwError(x, W, X);
        }
        assertArgument(s, x, W, X) {
          s || this.throwArgumentError(x, W, X);
        }
        checkNormalize(s) {
          null == s && (s = "platform missing String.prototype.normalize"),
            tq &&
              this.throwError(
                "platform missing String.prototype.normalize",
                lib_esm_Logger.errors.UNSUPPORTED_OPERATION,
                { operation: "String.prototype.normalize", form: tq }
              );
        }
        checkSafeUint53(s, x) {
          "number" == typeof s &&
            (null == x && (x = "value not safe"),
            (s < 0 || s >= 9007199254740991) &&
              this.throwError(x, lib_esm_Logger.errors.NUMERIC_FAULT, {
                operation: "checkSafeInteger",
                fault: "out-of-safe-range",
                value: s,
              }),
            s % 1 &&
              this.throwError(x, lib_esm_Logger.errors.NUMERIC_FAULT, {
                operation: "checkSafeInteger",
                fault: "non-integer",
                value: s,
              }));
        }
        checkArgumentCount(s, x, W) {
          (W = W ? ": " + W : ""),
            s < x &&
              this.throwError(
                "missing argument" + W,
                lib_esm_Logger.errors.MISSING_ARGUMENT,
                { count: s, expectedCount: x }
              ),
            s > x &&
              this.throwError(
                "too many arguments" + W,
                lib_esm_Logger.errors.UNEXPECTED_ARGUMENT,
                { count: s, expectedCount: x }
              );
        }
        checkNew(s, x) {
          (s === Object || null == s) &&
            this.throwError("missing new", lib_esm_Logger.errors.MISSING_NEW, {
              name: x.name,
            });
        }
        checkAbstract(s, x) {
          s === x
            ? this.throwError(
                "cannot instantiate abstract class " +
                  JSON.stringify(x.name) +
                  " directly; use a sub-class",
                lib_esm_Logger.errors.UNSUPPORTED_OPERATION,
                { name: s.name, operation: "new" }
              )
            : (s === Object || null == s) &&
              this.throwError(
                "missing new",
                lib_esm_Logger.errors.MISSING_NEW,
                { name: x.name }
              );
        }
        static globalLogger() {
          return tH || (tH = new lib_esm_Logger("logger/5.7.0")), tH;
        }
        static setCensorship(s, x) {
          if (
            (!s &&
              x &&
              this.globalLogger().throwError(
                "cannot permanently disable censorship",
                lib_esm_Logger.errors.UNSUPPORTED_OPERATION,
                { operation: "setCensorship" }
              ),
            tU)
          ) {
            if (!s) return;
            this.globalLogger().throwError(
              "error censorship permanent",
              lib_esm_Logger.errors.UNSUPPORTED_OPERATION,
              { operation: "setCensorship" }
            );
          }
          (t$ = !!s), (tU = !!x);
        }
        static setLogLevel(s) {
          let x = tF[s.toLowerCase()];
          if (null == x) {
            lib_esm_Logger.globalLogger().warn("invalid log level - " + s);
            return;
          }
          tz = x;
        }
        static from(s) {
          return new lib_esm_Logger(s);
        }
      };
      (lib_esm_Logger.errors = es), (lib_esm_Logger.levels = ea);
      let tW = new lib_esm_Logger("bytes/5.7.0");
      function isHexable(s) {
        return !!s.toHexString;
      }
      function addSlice(s) {
        return (
          s.slice ||
            (s.slice = function () {
              let x = Array.prototype.slice.call(arguments);
              return addSlice(
                new Uint8Array(Array.prototype.slice.apply(s, x))
              );
            }),
          s
        );
      }
      function isInteger(s) {
        return "number" == typeof s && s == s && s % 1 == 0;
      }
      function lib_esm_isBytes(s) {
        if (null == s) return !1;
        if (s.constructor === Uint8Array) return !0;
        if ("string" == typeof s || !isInteger(s.length) || s.length < 0)
          return !1;
        for (let x = 0; x < s.length; x++) {
          let W = s[x];
          if (!isInteger(W) || W < 0 || W >= 256) return !1;
        }
        return !0;
      }
      function lib_esm_arrayify(s, x) {
        if ((x || (x = {}), "number" == typeof s)) {
          tW.checkSafeUint53(s, "invalid arrayify value");
          let x = [];
          for (; s; ) x.unshift(255 & s), (s = parseInt(String(s / 256)));
          return 0 === x.length && x.push(0), addSlice(new Uint8Array(x));
        }
        if (
          (x.allowMissingPrefix &&
            "string" == typeof s &&
            "0x" !== s.substring(0, 2) &&
            (s = "0x" + s),
          isHexable(s) && (s = s.toHexString()),
          lib_esm_isHexString(s))
        ) {
          let W = s.substring(2);
          W.length % 2 &&
            ("left" === x.hexPad
              ? (W = "0" + W)
              : "right" === x.hexPad
              ? (W += "0")
              : tW.throwArgumentError("hex data is odd-length", "value", s));
          let X = [];
          for (let s = 0; s < W.length; s += 2)
            X.push(parseInt(W.substring(s, s + 2), 16));
          return addSlice(new Uint8Array(X));
        }
        return lib_esm_isBytes(s)
          ? addSlice(new Uint8Array(s))
          : tW.throwArgumentError("invalid arrayify value", "value", s);
      }
      function lib_esm_isHexString(s, x) {
        return (
          "string" == typeof s &&
          !!s.match(/^0x[0-9A-Fa-f]*$/) &&
          (!x || s.length === 2 + 2 * x)
        );
      }
      let tK = "0123456789abcdef";
      function lib_esm_hexlify(s, x) {
        if ((x || (x = {}), "number" == typeof s)) {
          tW.checkSafeUint53(s, "invalid hexlify value");
          let x = "";
          for (; s; ) (x = tK[15 & s] + x), (s = Math.floor(s / 16));
          return x.length ? (x.length % 2 && (x = "0" + x), "0x" + x) : "0x00";
        }
        if ("bigint" == typeof s)
          return (s = s.toString(16)).length % 2 ? "0x0" + s : "0x" + s;
        if (
          (x.allowMissingPrefix &&
            "string" == typeof s &&
            "0x" !== s.substring(0, 2) &&
            (s = "0x" + s),
          isHexable(s))
        )
          return s.toHexString();
        if (lib_esm_isHexString(s))
          return (
            s.length % 2 &&
              ("left" === x.hexPad
                ? (s = "0x0" + s.substring(2))
                : "right" === x.hexPad
                ? (s += "0")
                : tW.throwArgumentError("hex data is odd-length", "value", s)),
            s.toLowerCase()
          );
        if (lib_esm_isBytes(s)) {
          let x = "0x";
          for (let W = 0; W < s.length; W++) {
            let X = s[W];
            x += tK[(240 & X) >> 4] + tK[15 & X];
          }
          return x;
        }
        return tW.throwArgumentError("invalid hexlify value", "value", s);
      }
      function lib_esm_hexDataSlice(s, x, W) {
        return ("string" != typeof s
          ? (s = lib_esm_hexlify(s))
          : (!lib_esm_isHexString(s) || s.length % 2) &&
            tW.throwArgumentError("invalid hexData", "value", s),
        (x = 2 + 2 * x),
        null != W)
          ? "0x" + s.substring(x, 2 + 2 * W)
          : "0x" + s.substring(x);
      }
      function lib_esm_hexZeroPad(s, x) {
        for (
          "string" != typeof s
            ? (s = lib_esm_hexlify(s))
            : lib_esm_isHexString(s) ||
              tW.throwArgumentError("invalid hex string", "value", s),
            s.length > 2 * x + 2 &&
              tW.throwArgumentError(
                "value out of range",
                "value",
                arguments[1]
              );
          s.length < 2 * x + 2;

        )
          s = "0x0" + s.substring(2);
        return s;
      }
      function lib_esm_splitSignature(s) {
        let x = {
          r: "0x",
          s: "0x",
          _vs: "0x",
          recoveryParam: 0,
          v: 0,
          yParityAndS: "0x",
          compact: "0x",
        };
        if ((lib_esm_isHexString(s) && !(s.length % 2)) || lib_esm_isBytes(s)) {
          let W = lib_esm_arrayify(s);
          64 === W.length
            ? ((x.v = 27 + (W[32] >> 7)),
              (W[32] &= 127),
              (x.r = lib_esm_hexlify(W.slice(0, 32))),
              (x.s = lib_esm_hexlify(W.slice(32, 64))))
            : 65 === W.length
            ? ((x.r = lib_esm_hexlify(W.slice(0, 32))),
              (x.s = lib_esm_hexlify(W.slice(32, 64))),
              (x.v = W[64]))
            : tW.throwArgumentError("invalid signature string", "signature", s),
            x.v < 27 &&
              (0 === x.v || 1 === x.v
                ? (x.v += 27)
                : tW.throwArgumentError(
                    "signature invalid v byte",
                    "signature",
                    s
                  )),
            (x.recoveryParam = 1 - (x.v % 2)),
            x.recoveryParam && (W[32] |= 128),
            (x._vs = lib_esm_hexlify(W.slice(32, 64)));
        } else {
          if (
            ((x.r = s.r),
            (x.s = s.s),
            (x.v = s.v),
            (x.recoveryParam = s.recoveryParam),
            (x._vs = s._vs),
            null != x._vs)
          ) {
            let W = (function (s, x) {
              (s = lib_esm_arrayify(s)).length > x &&
                tW.throwArgumentError(
                  "value out of range",
                  "value",
                  arguments[0]
                );
              let W = new Uint8Array(x);
              return W.set(s, x - s.length), addSlice(W);
            })(lib_esm_arrayify(x._vs), 32);
            x._vs = lib_esm_hexlify(W);
            let X = W[0] >= 128 ? 1 : 0;
            null == x.recoveryParam
              ? (x.recoveryParam = X)
              : x.recoveryParam !== X &&
                tW.throwArgumentError(
                  "signature recoveryParam mismatch _vs",
                  "signature",
                  s
                ),
              (W[0] &= 127);
            let ee = lib_esm_hexlify(W);
            null == x.s
              ? (x.s = ee)
              : x.s !== ee &&
                tW.throwArgumentError(
                  "signature v mismatch _vs",
                  "signature",
                  s
                );
          }
          if (null == x.recoveryParam)
            null == x.v
              ? tW.throwArgumentError(
                  "signature missing v and recoveryParam",
                  "signature",
                  s
                )
              : 0 === x.v || 1 === x.v
              ? (x.recoveryParam = x.v)
              : (x.recoveryParam = 1 - (x.v % 2));
          else if (null == x.v) x.v = 27 + x.recoveryParam;
          else {
            let W = 0 === x.v || 1 === x.v ? x.v : 1 - (x.v % 2);
            x.recoveryParam !== W &&
              tW.throwArgumentError(
                "signature recoveryParam mismatch v",
                "signature",
                s
              );
          }
          null != x.r && lib_esm_isHexString(x.r)
            ? (x.r = lib_esm_hexZeroPad(x.r, 32))
            : tW.throwArgumentError(
                "signature missing or invalid r",
                "signature",
                s
              ),
            null != x.s && lib_esm_isHexString(x.s)
              ? (x.s = lib_esm_hexZeroPad(x.s, 32))
              : tW.throwArgumentError(
                  "signature missing or invalid s",
                  "signature",
                  s
                );
          let W = lib_esm_arrayify(x.s);
          W[0] >= 128 &&
            tW.throwArgumentError("signature s out of range", "signature", s),
            x.recoveryParam && (W[0] |= 128);
          let X = lib_esm_hexlify(W);
          x._vs &&
            (lib_esm_isHexString(x._vs) ||
              tW.throwArgumentError("signature invalid _vs", "signature", s),
            (x._vs = lib_esm_hexZeroPad(x._vs, 32))),
            null == x._vs
              ? (x._vs = X)
              : x._vs !== X &&
                tW.throwArgumentError(
                  "signature _vs mismatch v and s",
                  "signature",
                  s
                );
        }
        return (
          (x.yParityAndS = x._vs),
          (x.compact = x.r + x.yParityAndS.substring(2)),
          x
        );
      }
      var tZ = W(91094),
        tG = W.n(tZ);
      function lib_esm_keccak256(s) {
        return "0x" + tG().keccak_256(lib_esm_arrayify(s));
      }
      let tY = new lib_esm_Logger("strings/5.7.0");
      function ignoreFunc(s, x, W, X, ee) {
        if (s === ec.BAD_PREFIX || s === ec.UNEXPECTED_CONTINUE) {
          let s = 0;
          for (let X = x + 1; X < W.length && W[X] >> 6 == 2; X++) s++;
          return s;
        }
        return s === ec.OVERRUN ? W.length - x - 1 : 0;
      }
      function toUtf8Bytes(s, x = el.current) {
        x != el.current && (tY.checkNormalize(), (s = s.normalize(x)));
        let W = [];
        for (let x = 0; x < s.length; x++) {
          let X = s.charCodeAt(x);
          if (X < 128) W.push(X);
          else if (X < 2048) W.push((X >> 6) | 192), W.push((63 & X) | 128);
          else if ((64512 & X) == 55296) {
            x++;
            let ee = s.charCodeAt(x);
            if (x >= s.length || (64512 & ee) != 56320)
              throw Error("invalid utf-8 string");
            let et = 65536 + ((1023 & X) << 10) + (1023 & ee);
            W.push((et >> 18) | 240),
              W.push(((et >> 12) & 63) | 128),
              W.push(((et >> 6) & 63) | 128),
              W.push((63 & et) | 128);
          } else
            W.push((X >> 12) | 224),
              W.push(((X >> 6) & 63) | 128),
              W.push((63 & X) | 128);
        }
        return lib_esm_arrayify(W);
      }
      function hashMessage(s) {
        return (
          "string" == typeof s && (s = toUtf8Bytes(s)),
          lib_esm_keccak256(
            (function (s) {
              let x = s.map((s) => lib_esm_arrayify(s)),
                W = x.reduce((s, x) => s + x.length, 0),
                X = new Uint8Array(W);
              return (
                x.reduce((s, x) => (X.set(x, s), s + x.length), 0), addSlice(X)
              );
            })([
              toUtf8Bytes("\x19Ethereum Signed Message:\n"),
              toUtf8Bytes(String(s.length)),
              s,
            ])
          )
        );
      }
      ((er = el || (el = {})).current = ""),
        (er.NFC = "NFC"),
        (er.NFD = "NFD"),
        (er.NFKC = "NFKC"),
        (er.NFKD = "NFKD"),
        ((ei = ec || (ec = {})).UNEXPECTED_CONTINUE =
          "unexpected continuation byte"),
        (ei.BAD_PREFIX = "bad codepoint prefix"),
        (ei.OVERRUN = "string overrun"),
        (ei.MISSING_CONTINUE = "missing continuation byte"),
        (ei.OUT_OF_RANGE = "out of UTF-8 range"),
        (ei.UTF16_SURROGATE = "UTF-16 surrogate"),
        (ei.OVERLONG = "overlong representation"),
        Object.freeze({
          error: function (s, x, W, X, ee) {
            return tY.throwArgumentError(
              `invalid codepoint at offset ${x}; ${s}`,
              "bytes",
              W
            );
          },
          ignore: ignoreFunc,
          replace: function (s, x, W, X, ee) {
            return s === ec.OVERLONG
              ? (X.push(ee), 0)
              : (X.push(65533), ignoreFunc(s, x, W, X, ee));
          },
        });
      var tQ = W(13550),
        tJ = W.n(tQ),
        tX = tJ().BN;
      new lib_esm_Logger("bignumber/5.7.0");
      let t0 = new lib_esm_Logger("address/5.7.0");
      function getChecksumAddress(s) {
        lib_esm_isHexString(s, 20) ||
          t0.throwArgumentError("invalid address", "address", s),
          (s = s.toLowerCase());
        let x = s.substring(2).split(""),
          W = new Uint8Array(40);
        for (let s = 0; s < 40; s++) W[s] = x[s].charCodeAt(0);
        let X = lib_esm_arrayify(lib_esm_keccak256(W));
        for (let s = 0; s < 40; s += 2)
          X[s >> 1] >> 4 >= 8 && (x[s] = x[s].toUpperCase()),
            (15 & X[s >> 1]) >= 8 && (x[s + 1] = x[s + 1].toUpperCase());
        return "0x" + x.join("");
      }
      let t1 = {};
      for (let s = 0; s < 10; s++) t1[String(s)] = String(s);
      for (let s = 0; s < 26; s++)
        t1[String.fromCharCode(65 + s)] = String(10 + s);
      let t2 = Math.floor(
        Math.log10
          ? Math.log10(9007199254740991)
          : Math.log(9007199254740991) / Math.LN10
      );
      var t3 = W(33715),
        t5 = W.n(t3);
      function createCommonjsModule(s, x, W) {
        return (
          s(
            (W = {
              path: x,
              exports: {},
              require: function (s, x) {
                return (function () {
                  throw Error(
                    "Dynamic requires are not currently supported by @rollup/plugin-commonjs"
                  );
                })(s, null == x ? W.path : x);
              },
            }),
            W.exports
          ),
          W.exports
        );
      }
      "undefined" != typeof globalThis
        ? globalThis
        : "undefined" != typeof window
        ? window
        : void 0 !== W.g
        ? W.g
        : "undefined" != typeof self && self;
      var t6 = assert;
      function assert(s, x) {
        if (!s) throw Error(x || "Assertion failed");
      }
      assert.equal = function (s, x, W) {
        if (s != x) throw Error(W || "Assertion failed: " + s + " != " + x);
      };
      var t4 = createCommonjsModule(function (s, x) {
          function zero2(s) {
            return 1 === s.length ? "0" + s : s;
          }
          function toHex(s) {
            for (var x = "", W = 0; W < s.length; W++)
              x += zero2(s[W].toString(16));
            return x;
          }
          (x.toArray = function (s, x) {
            if (Array.isArray(s)) return s.slice();
            if (!s) return [];
            var W = [];
            if ("string" != typeof s) {
              for (var X = 0; X < s.length; X++) W[X] = 0 | s[X];
              return W;
            }
            if ("hex" === x) {
              (s = s.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 &&
                (s = "0" + s);
              for (var X = 0; X < s.length; X += 2)
                W.push(parseInt(s[X] + s[X + 1], 16));
            } else
              for (var X = 0; X < s.length; X++) {
                var ee = s.charCodeAt(X),
                  et = ee >> 8,
                  er = 255 & ee;
                et ? W.push(et, er) : W.push(er);
              }
            return W;
          }),
            (x.zero2 = zero2),
            (x.toHex = toHex),
            (x.encode = function (s, x) {
              return "hex" === x ? toHex(s) : s;
            });
        }),
        t8 = createCommonjsModule(function (s, x) {
          (x.assert = t6),
            (x.toArray = t4.toArray),
            (x.zero2 = t4.zero2),
            (x.toHex = t4.toHex),
            (x.encode = t4.encode),
            (x.getNAF = function (s, x, W) {
              var X = Array(Math.max(s.bitLength(), W) + 1);
              X.fill(0);
              for (
                var ee = 1 << (x + 1), et = s.clone(), er = 0;
                er < X.length;
                er++
              ) {
                var ei,
                  eo = et.andln(ee - 1);
                et.isOdd()
                  ? ((ei = eo > (ee >> 1) - 1 ? (ee >> 1) - eo : eo),
                    et.isubn(ei))
                  : (ei = 0),
                  (X[er] = ei),
                  et.iushrn(1);
              }
              return X;
            }),
            (x.getJSF = function (s, x) {
              var W = [[], []];
              (s = s.clone()), (x = x.clone());
              for (var X = 0, ee = 0; s.cmpn(-X) > 0 || x.cmpn(-ee) > 0; ) {
                var et,
                  er,
                  ei,
                  eo = (s.andln(3) + X) & 3,
                  ea = (x.andln(3) + ee) & 3;
                3 === eo && (eo = -1),
                  3 === ea && (ea = -1),
                  (er =
                    (1 & eo) == 0
                      ? 0
                      : (3 == (et = (s.andln(7) + X) & 7) || 5 === et) &&
                        2 === ea
                      ? -eo
                      : eo),
                  W[0].push(er),
                  (ei =
                    (1 & ea) == 0
                      ? 0
                      : (3 == (et = (x.andln(7) + ee) & 7) || 5 === et) &&
                        2 === eo
                      ? -ea
                      : ea),
                  W[1].push(ei),
                  2 * X === er + 1 && (X = 1 - X),
                  2 * ee === ei + 1 && (ee = 1 - ee),
                  s.iushrn(1),
                  x.iushrn(1);
              }
              return W;
            }),
            (x.cachedProperty = function (s, x, W) {
              var X = "_" + x;
              s.prototype[x] = function () {
                return void 0 !== this[X] ? this[X] : (this[X] = W.call(this));
              };
            }),
            (x.parseBytes = function (s) {
              return "string" == typeof s ? x.toArray(s, "hex") : s;
            }),
            (x.intFromLE = function (s) {
              return new (tJ())(s, "hex", "le");
            });
        }),
        t9 = t8.getNAF,
        t7 = t8.getJSF,
        re = t8.assert;
      function BaseCurve(s, x) {
        (this.type = s),
          (this.p = new (tJ())(x.p, 16)),
          (this.red = x.prime ? tJ().red(x.prime) : tJ().mont(this.p)),
          (this.zero = new (tJ())(0).toRed(this.red)),
          (this.one = new (tJ())(1).toRed(this.red)),
          (this.two = new (tJ())(2).toRed(this.red)),
          (this.n = x.n && new (tJ())(x.n, 16)),
          (this.g = x.g && this.pointFromJSON(x.g, x.gRed)),
          (this._wnafT1 = [, , , ,]),
          (this._wnafT2 = [, , , ,]),
          (this._wnafT3 = [, , , ,]),
          (this._wnafT4 = [, , , ,]),
          (this._bitLength = this.n ? this.n.bitLength() : 0);
        var W = this.n && this.p.div(this.n);
        !W || W.cmpn(100) > 0
          ? (this.redN = null)
          : ((this._maxwellTrick = !0), (this.redN = this.n.toRed(this.red)));
      }
      function BasePoint(s, x) {
        (this.curve = s), (this.type = x), (this.precomputed = null);
      }
      (BaseCurve.prototype.point = function () {
        throw Error("Not implemented");
      }),
        (BaseCurve.prototype.validate = function () {
          throw Error("Not implemented");
        }),
        (BaseCurve.prototype._fixedNafMul = function (s, x) {
          re(s.precomputed);
          var W,
            X,
            ee = s._getDoubles(),
            et = t9(x, 1, this._bitLength),
            er = (1 << (ee.step + 1)) - (ee.step % 2 == 0 ? 2 : 1);
          er /= 3;
          var ei = [];
          for (W = 0; W < et.length; W += ee.step) {
            X = 0;
            for (var eo = W + ee.step - 1; eo >= W; eo--) X = (X << 1) + et[eo];
            ei.push(X);
          }
          for (
            var ea = this.jpoint(null, null, null),
              es = this.jpoint(null, null, null),
              el = er;
            el > 0;
            el--
          ) {
            for (W = 0; W < ei.length; W++)
              (X = ei[W]) === el
                ? (es = es.mixedAdd(ee.points[W]))
                : X === -el && (es = es.mixedAdd(ee.points[W].neg()));
            ea = ea.add(es);
          }
          return ea.toP();
        }),
        (BaseCurve.prototype._wnafMul = function (s, x) {
          var W = 4,
            X = s._getNAFPoints(W);
          W = X.wnd;
          for (
            var ee = X.points,
              et = t9(x, W, this._bitLength),
              er = this.jpoint(null, null, null),
              ei = et.length - 1;
            ei >= 0;
            ei--
          ) {
            for (var eo = 0; ei >= 0 && 0 === et[ei]; ei--) eo++;
            if ((ei >= 0 && eo++, (er = er.dblp(eo)), ei < 0)) break;
            var ea = et[ei];
            re(0 !== ea),
              (er =
                "affine" === s.type
                  ? ea > 0
                    ? er.mixedAdd(ee[(ea - 1) >> 1])
                    : er.mixedAdd(ee[(-ea - 1) >> 1].neg())
                  : ea > 0
                  ? er.add(ee[(ea - 1) >> 1])
                  : er.add(ee[(-ea - 1) >> 1].neg()));
          }
          return "affine" === s.type ? er.toP() : er;
        }),
        (BaseCurve.prototype._wnafMulAdd = function (s, x, W, X, ee) {
          var et,
            er,
            ei,
            eo = this._wnafT1,
            ea = this._wnafT2,
            es = this._wnafT3,
            el = 0;
          for (et = 0; et < X; et++) {
            var ec = (ei = x[et])._getNAFPoints(s);
            (eo[et] = ec.wnd), (ea[et] = ec.points);
          }
          for (et = X - 1; et >= 1; et -= 2) {
            var eu = et - 1,
              ed = et;
            if (1 !== eo[eu] || 1 !== eo[ed]) {
              (es[eu] = t9(W[eu], eo[eu], this._bitLength)),
                (es[ed] = t9(W[ed], eo[ed], this._bitLength)),
                (el = Math.max(es[eu].length, el)),
                (el = Math.max(es[ed].length, el));
              continue;
            }
            var eh = [x[eu], null, null, x[ed]];
            0 === x[eu].y.cmp(x[ed].y)
              ? ((eh[1] = x[eu].add(x[ed])),
                (eh[2] = x[eu].toJ().mixedAdd(x[ed].neg())))
              : 0 === x[eu].y.cmp(x[ed].y.redNeg())
              ? ((eh[1] = x[eu].toJ().mixedAdd(x[ed])),
                (eh[2] = x[eu].add(x[ed].neg())))
              : ((eh[1] = x[eu].toJ().mixedAdd(x[ed])),
                (eh[2] = x[eu].toJ().mixedAdd(x[ed].neg())));
            var ep = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
              ef = t7(W[eu], W[ed]);
            for (
              er = 0,
                el = Math.max(ef[0].length, el),
                es[eu] = Array(el),
                es[ed] = Array(el);
              er < el;
              er++
            ) {
              var eg = 0 | ef[0][er],
                em = 0 | ef[1][er];
              (es[eu][er] = ep[(eg + 1) * 3 + (em + 1)]),
                (es[ed][er] = 0),
                (ea[eu] = eh);
            }
          }
          var ew = this.jpoint(null, null, null),
            eb = this._wnafT4;
          for (et = el; et >= 0; et--) {
            for (var ev = 0; et >= 0; ) {
              var ey = !0;
              for (er = 0; er < X; er++)
                (eb[er] = 0 | es[er][et]), 0 !== eb[er] && (ey = !1);
              if (!ey) break;
              ev++, et--;
            }
            if ((et >= 0 && ev++, (ew = ew.dblp(ev)), et < 0)) break;
            for (er = 0; er < X; er++) {
              var e_ = eb[er];
              0 !== e_ &&
                (e_ > 0
                  ? (ei = ea[er][(e_ - 1) >> 1])
                  : e_ < 0 && (ei = ea[er][(-e_ - 1) >> 1].neg()),
                (ew = "affine" === ei.type ? ew.mixedAdd(ei) : ew.add(ei)));
            }
          }
          for (et = 0; et < X; et++) ea[et] = null;
          return ee ? ew : ew.toP();
        }),
        (BaseCurve.BasePoint = BasePoint),
        (BasePoint.prototype.eq = function () {
          throw Error("Not implemented");
        }),
        (BasePoint.prototype.validate = function () {
          return this.curve.validate(this);
        }),
        (BaseCurve.prototype.decodePoint = function (s, x) {
          s = t8.toArray(s, x);
          var W = this.p.byteLength();
          if ((4 === s[0] || 6 === s[0] || 7 === s[0]) && s.length - 1 == 2 * W)
            return (
              6 === s[0]
                ? re(s[s.length - 1] % 2 == 0)
                : 7 === s[0] && re(s[s.length - 1] % 2 == 1),
              this.point(s.slice(1, 1 + W), s.slice(1 + W, 1 + 2 * W))
            );
          if ((2 === s[0] || 3 === s[0]) && s.length - 1 === W)
            return this.pointFromX(s.slice(1, 1 + W), 3 === s[0]);
          throw Error("Unknown point format");
        }),
        (BasePoint.prototype.encodeCompressed = function (s) {
          return this.encode(s, !0);
        }),
        (BasePoint.prototype._encode = function (s) {
          var x = this.curve.p.byteLength(),
            W = this.getX().toArray("be", x);
          return s
            ? [this.getY().isEven() ? 2 : 3].concat(W)
            : [4].concat(W, this.getY().toArray("be", x));
        }),
        (BasePoint.prototype.encode = function (s, x) {
          return t8.encode(this._encode(x), s);
        }),
        (BasePoint.prototype.precompute = function (s) {
          if (this.precomputed) return this;
          var x = { doubles: null, naf: null, beta: null };
          return (
            (x.naf = this._getNAFPoints(8)),
            (x.doubles = this._getDoubles(4, s)),
            (x.beta = this._getBeta()),
            (this.precomputed = x),
            this
          );
        }),
        (BasePoint.prototype._hasDoubles = function (s) {
          if (!this.precomputed) return !1;
          var x = this.precomputed.doubles;
          return (
            !!x && x.points.length >= Math.ceil((s.bitLength() + 1) / x.step)
          );
        }),
        (BasePoint.prototype._getDoubles = function (s, x) {
          if (this.precomputed && this.precomputed.doubles)
            return this.precomputed.doubles;
          for (var W = [this], X = this, ee = 0; ee < x; ee += s) {
            for (var et = 0; et < s; et++) X = X.dbl();
            W.push(X);
          }
          return { step: s, points: W };
        }),
        (BasePoint.prototype._getNAFPoints = function (s) {
          if (this.precomputed && this.precomputed.naf)
            return this.precomputed.naf;
          for (
            var x = [this],
              W = (1 << s) - 1,
              X = 1 === W ? null : this.dbl(),
              ee = 1;
            ee < W;
            ee++
          )
            x[ee] = x[ee - 1].add(X);
          return { wnd: s, points: x };
        }),
        (BasePoint.prototype._getBeta = function () {
          return null;
        }),
        (BasePoint.prototype.dblp = function (s) {
          for (var x = this, W = 0; W < s; W++) x = x.dbl();
          return x;
        });
      var rt = createCommonjsModule(function (s) {
          "function" == typeof Object.create
            ? (s.exports = function (s, x) {
                x &&
                  ((s.super_ = x),
                  (s.prototype = Object.create(x.prototype, {
                    constructor: {
                      value: s,
                      enumerable: !1,
                      writable: !0,
                      configurable: !0,
                    },
                  })));
              })
            : (s.exports = function (s, x) {
                if (x) {
                  s.super_ = x;
                  var TempCtor = function () {};
                  (TempCtor.prototype = x.prototype),
                    (s.prototype = new TempCtor()),
                    (s.prototype.constructor = s);
                }
              });
        }),
        rn = t8.assert;
      function ShortCurve(s) {
        BaseCurve.call(this, "short", s),
          (this.a = new (tJ())(s.a, 16).toRed(this.red)),
          (this.b = new (tJ())(s.b, 16).toRed(this.red)),
          (this.tinv = this.two.redInvm()),
          (this.zeroA = 0 === this.a.fromRed().cmpn(0)),
          (this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3)),
          (this.endo = this._getEndomorphism(s)),
          (this._endoWnafT1 = [, , , ,]),
          (this._endoWnafT2 = [, , , ,]);
      }
      function Point(s, x, W, X) {
        BaseCurve.BasePoint.call(this, s, "affine"),
          null === x && null === W
            ? ((this.x = null), (this.y = null), (this.inf = !0))
            : ((this.x = new (tJ())(x, 16)),
              (this.y = new (tJ())(W, 16)),
              X &&
                (this.x.forceRed(this.curve.red),
                this.y.forceRed(this.curve.red)),
              this.x.red || (this.x = this.x.toRed(this.curve.red)),
              this.y.red || (this.y = this.y.toRed(this.curve.red)),
              (this.inf = !1));
      }
      function JPoint(s, x, W, X) {
        BaseCurve.BasePoint.call(this, s, "jacobian"),
          null === x && null === W && null === X
            ? ((this.x = this.curve.one),
              (this.y = this.curve.one),
              (this.z = new (tJ())(0)))
            : ((this.x = new (tJ())(x, 16)),
              (this.y = new (tJ())(W, 16)),
              (this.z = new (tJ())(X, 16))),
          this.x.red || (this.x = this.x.toRed(this.curve.red)),
          this.y.red || (this.y = this.y.toRed(this.curve.red)),
          this.z.red || (this.z = this.z.toRed(this.curve.red)),
          (this.zOne = this.z === this.curve.one);
      }
      rt(ShortCurve, BaseCurve),
        (ShortCurve.prototype._getEndomorphism = function (s) {
          if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
            if (s.beta) x = new (tJ())(s.beta, 16).toRed(this.red);
            else {
              var x,
                W,
                X,
                ee = this._getEndoRoots(this.p);
              x = (x = 0 > ee[0].cmp(ee[1]) ? ee[0] : ee[1]).toRed(this.red);
            }
            if (s.lambda) W = new (tJ())(s.lambda, 16);
            else {
              var et = this._getEndoRoots(this.n);
              0 === this.g.mul(et[0]).x.cmp(this.g.x.redMul(x))
                ? (W = et[0])
                : ((W = et[1]),
                  rn(0 === this.g.mul(W).x.cmp(this.g.x.redMul(x))));
            }
            return (
              (X = s.basis
                ? s.basis.map(function (s) {
                    return { a: new (tJ())(s.a, 16), b: new (tJ())(s.b, 16) };
                  })
                : this._getEndoBasis(W)),
              { beta: x, lambda: W, basis: X }
            );
          }
        }),
        (ShortCurve.prototype._getEndoRoots = function (s) {
          var x = s === this.p ? this.red : tJ().mont(s),
            W = new (tJ())(2).toRed(x).redInvm(),
            X = W.redNeg(),
            ee = new (tJ())(3).toRed(x).redNeg().redSqrt().redMul(W);
          return [X.redAdd(ee).fromRed(), X.redSub(ee).fromRed()];
        }),
        (ShortCurve.prototype._getEndoBasis = function (s) {
          for (
            var x,
              W,
              X,
              ee,
              et,
              er,
              ei,
              eo,
              ea,
              es = this.n.ushrn(Math.floor(this.n.bitLength() / 2)),
              el = s,
              ec = this.n.clone(),
              eu = new (tJ())(1),
              ed = new (tJ())(0),
              eh = new (tJ())(0),
              ep = new (tJ())(1),
              ef = 0;
            0 !== el.cmpn(0);

          ) {
            var eg = ec.div(el);
            (eo = ec.sub(eg.mul(el))), (ea = eh.sub(eg.mul(eu)));
            var em = ep.sub(eg.mul(ed));
            if (!X && 0 > eo.cmp(es))
              (x = ei.neg()), (W = eu), (X = eo.neg()), (ee = ea);
            else if (X && 2 == ++ef) break;
            (ei = eo),
              (ec = el),
              (el = eo),
              (eh = eu),
              (eu = ea),
              (ep = ed),
              (ed = em);
          }
          (et = eo.neg()), (er = ea);
          var ew = X.sqr().add(ee.sqr());
          return (
            et.sqr().add(er.sqr()).cmp(ew) >= 0 && ((et = x), (er = W)),
            X.negative && ((X = X.neg()), (ee = ee.neg())),
            et.negative && ((et = et.neg()), (er = er.neg())),
            [
              { a: X, b: ee },
              { a: et, b: er },
            ]
          );
        }),
        (ShortCurve.prototype._endoSplit = function (s) {
          var x = this.endo.basis,
            W = x[0],
            X = x[1],
            ee = X.b.mul(s).divRound(this.n),
            et = W.b.neg().mul(s).divRound(this.n),
            er = ee.mul(W.a),
            ei = et.mul(X.a),
            eo = ee.mul(W.b),
            ea = et.mul(X.b);
          return { k1: s.sub(er).sub(ei), k2: eo.add(ea).neg() };
        }),
        (ShortCurve.prototype.pointFromX = function (s, x) {
          (s = new (tJ())(s, 16)).red || (s = s.toRed(this.red));
          var W = s
              .redSqr()
              .redMul(s)
              .redIAdd(s.redMul(this.a))
              .redIAdd(this.b),
            X = W.redSqrt();
          if (0 !== X.redSqr().redSub(W).cmp(this.zero))
            throw Error("invalid point");
          var ee = X.fromRed().isOdd();
          return (
            ((x && !ee) || (!x && ee)) && (X = X.redNeg()), this.point(s, X)
          );
        }),
        (ShortCurve.prototype.validate = function (s) {
          if (s.inf) return !0;
          var x = s.x,
            W = s.y,
            X = this.a.redMul(x),
            ee = x.redSqr().redMul(x).redIAdd(X).redIAdd(this.b);
          return 0 === W.redSqr().redISub(ee).cmpn(0);
        }),
        (ShortCurve.prototype._endoWnafMulAdd = function (s, x, W) {
          for (
            var X = this._endoWnafT1, ee = this._endoWnafT2, et = 0;
            et < s.length;
            et++
          ) {
            var er = this._endoSplit(x[et]),
              ei = s[et],
              eo = ei._getBeta();
            er.k1.negative && (er.k1.ineg(), (ei = ei.neg(!0))),
              er.k2.negative && (er.k2.ineg(), (eo = eo.neg(!0))),
              (X[2 * et] = ei),
              (X[2 * et + 1] = eo),
              (ee[2 * et] = er.k1),
              (ee[2 * et + 1] = er.k2);
          }
          for (
            var ea = this._wnafMulAdd(1, X, ee, 2 * et, W), es = 0;
            es < 2 * et;
            es++
          )
            (X[es] = null), (ee[es] = null);
          return ea;
        }),
        rt(Point, BaseCurve.BasePoint),
        (ShortCurve.prototype.point = function (s, x, W) {
          return new Point(this, s, x, W);
        }),
        (ShortCurve.prototype.pointFromJSON = function (s, x) {
          return Point.fromJSON(this, s, x);
        }),
        (Point.prototype._getBeta = function () {
          if (this.curve.endo) {
            var s = this.precomputed;
            if (s && s.beta) return s.beta;
            var x = this.curve.point(
              this.x.redMul(this.curve.endo.beta),
              this.y
            );
            if (s) {
              var W = this.curve,
                endoMul = function (s) {
                  return W.point(s.x.redMul(W.endo.beta), s.y);
                };
              (s.beta = x),
                (x.precomputed = {
                  beta: null,
                  naf: s.naf && {
                    wnd: s.naf.wnd,
                    points: s.naf.points.map(endoMul),
                  },
                  doubles: s.doubles && {
                    step: s.doubles.step,
                    points: s.doubles.points.map(endoMul),
                  },
                });
            }
            return x;
          }
        }),
        (Point.prototype.toJSON = function () {
          return this.precomputed
            ? [
                this.x,
                this.y,
                this.precomputed && {
                  doubles: this.precomputed.doubles && {
                    step: this.precomputed.doubles.step,
                    points: this.precomputed.doubles.points.slice(1),
                  },
                  naf: this.precomputed.naf && {
                    wnd: this.precomputed.naf.wnd,
                    points: this.precomputed.naf.points.slice(1),
                  },
                },
              ]
            : [this.x, this.y];
        }),
        (Point.fromJSON = function (s, x, W) {
          "string" == typeof x && (x = JSON.parse(x));
          var X = s.point(x[0], x[1], W);
          if (!x[2]) return X;
          function obj2point(x) {
            return s.point(x[0], x[1], W);
          }
          var ee = x[2];
          return (
            (X.precomputed = {
              beta: null,
              doubles: ee.doubles && {
                step: ee.doubles.step,
                points: [X].concat(ee.doubles.points.map(obj2point)),
              },
              naf: ee.naf && {
                wnd: ee.naf.wnd,
                points: [X].concat(ee.naf.points.map(obj2point)),
              },
            }),
            X
          );
        }),
        (Point.prototype.inspect = function () {
          return this.isInfinity()
            ? "<EC Point Infinity>"
            : "<EC Point x: " +
                this.x.fromRed().toString(16, 2) +
                " y: " +
                this.y.fromRed().toString(16, 2) +
                ">";
        }),
        (Point.prototype.isInfinity = function () {
          return this.inf;
        }),
        (Point.prototype.add = function (s) {
          if (this.inf) return s;
          if (s.inf) return this;
          if (this.eq(s)) return this.dbl();
          if (this.neg().eq(s) || 0 === this.x.cmp(s.x))
            return this.curve.point(null, null);
          var x = this.y.redSub(s.y);
          0 !== x.cmpn(0) && (x = x.redMul(this.x.redSub(s.x).redInvm()));
          var W = x.redSqr().redISub(this.x).redISub(s.x),
            X = x.redMul(this.x.redSub(W)).redISub(this.y);
          return this.curve.point(W, X);
        }),
        (Point.prototype.dbl = function () {
          if (this.inf) return this;
          var s = this.y.redAdd(this.y);
          if (0 === s.cmpn(0)) return this.curve.point(null, null);
          var x = this.curve.a,
            W = this.x.redSqr(),
            X = s.redInvm(),
            ee = W.redAdd(W).redIAdd(W).redIAdd(x).redMul(X),
            et = ee.redSqr().redISub(this.x.redAdd(this.x)),
            er = ee.redMul(this.x.redSub(et)).redISub(this.y);
          return this.curve.point(et, er);
        }),
        (Point.prototype.getX = function () {
          return this.x.fromRed();
        }),
        (Point.prototype.getY = function () {
          return this.y.fromRed();
        }),
        (Point.prototype.mul = function (s) {
          return ((s = new (tJ())(s, 16)), this.isInfinity())
            ? this
            : this._hasDoubles(s)
            ? this.curve._fixedNafMul(this, s)
            : this.curve.endo
            ? this.curve._endoWnafMulAdd([this], [s])
            : this.curve._wnafMul(this, s);
        }),
        (Point.prototype.mulAdd = function (s, x, W) {
          var X = [this, x],
            ee = [s, W];
          return this.curve.endo
            ? this.curve._endoWnafMulAdd(X, ee)
            : this.curve._wnafMulAdd(1, X, ee, 2);
        }),
        (Point.prototype.jmulAdd = function (s, x, W) {
          var X = [this, x],
            ee = [s, W];
          return this.curve.endo
            ? this.curve._endoWnafMulAdd(X, ee, !0)
            : this.curve._wnafMulAdd(1, X, ee, 2, !0);
        }),
        (Point.prototype.eq = function (s) {
          return (
            this === s ||
            (this.inf === s.inf &&
              (this.inf || (0 === this.x.cmp(s.x) && 0 === this.y.cmp(s.y))))
          );
        }),
        (Point.prototype.neg = function (s) {
          if (this.inf) return this;
          var x = this.curve.point(this.x, this.y.redNeg());
          if (s && this.precomputed) {
            var W = this.precomputed,
              negate = function (s) {
                return s.neg();
              };
            x.precomputed = {
              naf: W.naf && {
                wnd: W.naf.wnd,
                points: W.naf.points.map(negate),
              },
              doubles: W.doubles && {
                step: W.doubles.step,
                points: W.doubles.points.map(negate),
              },
            };
          }
          return x;
        }),
        (Point.prototype.toJ = function () {
          return this.inf
            ? this.curve.jpoint(null, null, null)
            : this.curve.jpoint(this.x, this.y, this.curve.one);
        }),
        rt(JPoint, BaseCurve.BasePoint),
        (ShortCurve.prototype.jpoint = function (s, x, W) {
          return new JPoint(this, s, x, W);
        }),
        (JPoint.prototype.toP = function () {
          if (this.isInfinity()) return this.curve.point(null, null);
          var s = this.z.redInvm(),
            x = s.redSqr(),
            W = this.x.redMul(x),
            X = this.y.redMul(x).redMul(s);
          return this.curve.point(W, X);
        }),
        (JPoint.prototype.neg = function () {
          return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
        }),
        (JPoint.prototype.add = function (s) {
          if (this.isInfinity()) return s;
          if (s.isInfinity()) return this;
          var x = s.z.redSqr(),
            W = this.z.redSqr(),
            X = this.x.redMul(x),
            ee = s.x.redMul(W),
            et = this.y.redMul(x.redMul(s.z)),
            er = s.y.redMul(W.redMul(this.z)),
            ei = X.redSub(ee),
            eo = et.redSub(er);
          if (0 === ei.cmpn(0))
            return 0 !== eo.cmpn(0)
              ? this.curve.jpoint(null, null, null)
              : this.dbl();
          var ea = ei.redSqr(),
            es = ea.redMul(ei),
            el = X.redMul(ea),
            ec = eo.redSqr().redIAdd(es).redISub(el).redISub(el),
            eu = eo.redMul(el.redISub(ec)).redISub(et.redMul(es)),
            ed = this.z.redMul(s.z).redMul(ei);
          return this.curve.jpoint(ec, eu, ed);
        }),
        (JPoint.prototype.mixedAdd = function (s) {
          if (this.isInfinity()) return s.toJ();
          if (s.isInfinity()) return this;
          var x = this.z.redSqr(),
            W = this.x,
            X = s.x.redMul(x),
            ee = this.y,
            et = s.y.redMul(x).redMul(this.z),
            er = W.redSub(X),
            ei = ee.redSub(et);
          if (0 === er.cmpn(0))
            return 0 !== ei.cmpn(0)
              ? this.curve.jpoint(null, null, null)
              : this.dbl();
          var eo = er.redSqr(),
            ea = eo.redMul(er),
            es = W.redMul(eo),
            el = ei.redSqr().redIAdd(ea).redISub(es).redISub(es),
            ec = ei.redMul(es.redISub(el)).redISub(ee.redMul(ea)),
            eu = this.z.redMul(er);
          return this.curve.jpoint(el, ec, eu);
        }),
        (JPoint.prototype.dblp = function (s) {
          if (0 === s || this.isInfinity()) return this;
          if (!s) return this.dbl();
          if (this.curve.zeroA || this.curve.threeA) {
            var x,
              W = this;
            for (x = 0; x < s; x++) W = W.dbl();
            return W;
          }
          var X = this.curve.a,
            ee = this.curve.tinv,
            et = this.x,
            er = this.y,
            ei = this.z,
            eo = ei.redSqr().redSqr(),
            ea = er.redAdd(er);
          for (x = 0; x < s; x++) {
            var es = et.redSqr(),
              el = ea.redSqr(),
              ec = el.redSqr(),
              eu = es.redAdd(es).redIAdd(es).redIAdd(X.redMul(eo)),
              ed = et.redMul(el),
              eh = eu.redSqr().redISub(ed.redAdd(ed)),
              ep = ed.redISub(eh),
              ef = eu.redMul(ep);
            ef = ef.redIAdd(ef).redISub(ec);
            var eg = ea.redMul(ei);
            x + 1 < s && (eo = eo.redMul(ec)), (et = eh), (ei = eg), (ea = ef);
          }
          return this.curve.jpoint(et, ea.redMul(ee), ei);
        }),
        (JPoint.prototype.dbl = function () {
          return this.isInfinity()
            ? this
            : this.curve.zeroA
            ? this._zeroDbl()
            : this.curve.threeA
            ? this._threeDbl()
            : this._dbl();
        }),
        (JPoint.prototype._zeroDbl = function () {
          if (this.zOne) {
            var s,
              x,
              W,
              X = this.x.redSqr(),
              ee = this.y.redSqr(),
              et = ee.redSqr(),
              er = this.x.redAdd(ee).redSqr().redISub(X).redISub(et);
            er = er.redIAdd(er);
            var ei = X.redAdd(X).redIAdd(X),
              eo = ei.redSqr().redISub(er).redISub(er),
              ea = et.redIAdd(et);
            (ea = (ea = ea.redIAdd(ea)).redIAdd(ea)),
              (s = eo),
              (x = ei.redMul(er.redISub(eo)).redISub(ea)),
              (W = this.y.redAdd(this.y));
          } else {
            var es = this.x.redSqr(),
              el = this.y.redSqr(),
              ec = el.redSqr(),
              eu = this.x.redAdd(el).redSqr().redISub(es).redISub(ec);
            eu = eu.redIAdd(eu);
            var ed = es.redAdd(es).redIAdd(es),
              eh = ed.redSqr(),
              ep = ec.redIAdd(ec);
            (ep = (ep = ep.redIAdd(ep)).redIAdd(ep)),
              (s = eh.redISub(eu).redISub(eu)),
              (x = ed.redMul(eu.redISub(s)).redISub(ep)),
              (W = (W = this.y.redMul(this.z)).redIAdd(W));
          }
          return this.curve.jpoint(s, x, W);
        }),
        (JPoint.prototype._threeDbl = function () {
          if (this.zOne) {
            var s,
              x,
              W,
              X = this.x.redSqr(),
              ee = this.y.redSqr(),
              et = ee.redSqr(),
              er = this.x.redAdd(ee).redSqr().redISub(X).redISub(et);
            er = er.redIAdd(er);
            var ei = X.redAdd(X).redIAdd(X).redIAdd(this.curve.a),
              eo = ei.redSqr().redISub(er).redISub(er);
            s = eo;
            var ea = et.redIAdd(et);
            (ea = (ea = ea.redIAdd(ea)).redIAdd(ea)),
              (x = ei.redMul(er.redISub(eo)).redISub(ea)),
              (W = this.y.redAdd(this.y));
          } else {
            var es = this.z.redSqr(),
              el = this.y.redSqr(),
              ec = this.x.redMul(el),
              eu = this.x.redSub(es).redMul(this.x.redAdd(es));
            eu = eu.redAdd(eu).redIAdd(eu);
            var ed = ec.redIAdd(ec),
              eh = (ed = ed.redIAdd(ed)).redAdd(ed);
            (s = eu.redSqr().redISub(eh)),
              (W = this.y.redAdd(this.z).redSqr().redISub(el).redISub(es));
            var ep = el.redSqr();
            (ep = (ep = (ep = ep.redIAdd(ep)).redIAdd(ep)).redIAdd(ep)),
              (x = eu.redMul(ed.redISub(s)).redISub(ep));
          }
          return this.curve.jpoint(s, x, W);
        }),
        (JPoint.prototype._dbl = function () {
          var s = this.curve.a,
            x = this.x,
            W = this.y,
            X = this.z,
            ee = X.redSqr().redSqr(),
            et = x.redSqr(),
            er = W.redSqr(),
            ei = et.redAdd(et).redIAdd(et).redIAdd(s.redMul(ee)),
            eo = x.redAdd(x),
            ea = (eo = eo.redIAdd(eo)).redMul(er),
            es = ei.redSqr().redISub(ea.redAdd(ea)),
            el = ea.redISub(es),
            ec = er.redSqr();
          ec = (ec = (ec = ec.redIAdd(ec)).redIAdd(ec)).redIAdd(ec);
          var eu = ei.redMul(el).redISub(ec),
            ed = W.redAdd(W).redMul(X);
          return this.curve.jpoint(es, eu, ed);
        }),
        (JPoint.prototype.trpl = function () {
          if (!this.curve.zeroA) return this.dbl().add(this);
          var s = this.x.redSqr(),
            x = this.y.redSqr(),
            W = this.z.redSqr(),
            X = x.redSqr(),
            ee = s.redAdd(s).redIAdd(s),
            et = ee.redSqr(),
            er = this.x.redAdd(x).redSqr().redISub(s).redISub(X),
            ei = (er = (er = (er = er.redIAdd(er))
              .redAdd(er)
              .redIAdd(er)).redISub(et)).redSqr(),
            eo = X.redIAdd(X);
          eo = (eo = (eo = eo.redIAdd(eo)).redIAdd(eo)).redIAdd(eo);
          var ea = ee.redIAdd(er).redSqr().redISub(et).redISub(ei).redISub(eo),
            es = x.redMul(ea);
          es = (es = es.redIAdd(es)).redIAdd(es);
          var el = this.x.redMul(ei).redISub(es);
          el = (el = el.redIAdd(el)).redIAdd(el);
          var ec = this.y.redMul(
            ea.redMul(eo.redISub(ea)).redISub(er.redMul(ei))
          );
          ec = (ec = (ec = ec.redIAdd(ec)).redIAdd(ec)).redIAdd(ec);
          var eu = this.z.redAdd(er).redSqr().redISub(W).redISub(ei);
          return this.curve.jpoint(el, ec, eu);
        }),
        (JPoint.prototype.mul = function (s, x) {
          return (s = new (tJ())(s, x)), this.curve._wnafMul(this, s);
        }),
        (JPoint.prototype.eq = function (s) {
          if ("affine" === s.type) return this.eq(s.toJ());
          if (this === s) return !0;
          var x = this.z.redSqr(),
            W = s.z.redSqr();
          if (0 !== this.x.redMul(W).redISub(s.x.redMul(x)).cmpn(0)) return !1;
          var X = x.redMul(this.z),
            ee = W.redMul(s.z);
          return 0 === this.y.redMul(ee).redISub(s.y.redMul(X)).cmpn(0);
        }),
        (JPoint.prototype.eqXToP = function (s) {
          var x = this.z.redSqr(),
            W = s.toRed(this.curve.red).redMul(x);
          if (0 === this.x.cmp(W)) return !0;
          for (var X = s.clone(), ee = this.curve.redN.redMul(x); ; ) {
            if ((X.iadd(this.curve.n), X.cmp(this.curve.p) >= 0)) return !1;
            if ((W.redIAdd(ee), 0 === this.x.cmp(W))) return !0;
          }
        }),
        (JPoint.prototype.inspect = function () {
          return this.isInfinity()
            ? "<EC JPoint Infinity>"
            : "<EC JPoint x: " +
                this.x.toString(16, 2) +
                " y: " +
                this.y.toString(16, 2) +
                " z: " +
                this.z.toString(16, 2) +
                ">";
        }),
        (JPoint.prototype.isInfinity = function () {
          return 0 === this.z.cmpn(0);
        });
      var ro = createCommonjsModule(function (s, x) {
          (x.base = BaseCurve),
            (x.short = ShortCurve),
            (x.mont = null),
            (x.edwards = null);
        }),
        ra = createCommonjsModule(function (s, x) {
          var W,
            X = t8.assert;
          function PresetCurve(s) {
            "short" === s.type
              ? (this.curve = new ro.short(s))
              : "edwards" === s.type
              ? (this.curve = new ro.edwards(s))
              : (this.curve = new ro.mont(s)),
              (this.g = this.curve.g),
              (this.n = this.curve.n),
              (this.hash = s.hash),
              X(this.g.validate(), "Invalid curve"),
              X(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
          }
          function defineCurve(s, W) {
            Object.defineProperty(x, s, {
              configurable: !0,
              enumerable: !0,
              get: function () {
                var X = new PresetCurve(W);
                return (
                  Object.defineProperty(x, s, {
                    configurable: !0,
                    enumerable: !0,
                    value: X,
                  }),
                  X
                );
              },
            });
          }
          (x.PresetCurve = PresetCurve),
            defineCurve("p192", {
              type: "short",
              prime: "p192",
              p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
              a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
              b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
              n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
              hash: t5().sha256,
              gRed: !1,
              g: [
                "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
                "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811",
              ],
            }),
            defineCurve("p224", {
              type: "short",
              prime: "p224",
              p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
              a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
              b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
              n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
              hash: t5().sha256,
              gRed: !1,
              g: [
                "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
                "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34",
              ],
            }),
            defineCurve("p256", {
              type: "short",
              prime: null,
              p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
              a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
              b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
              n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
              hash: t5().sha256,
              gRed: !1,
              g: [
                "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
                "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5",
              ],
            }),
            defineCurve("p384", {
              type: "short",
              prime: null,
              p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
              a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
              b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
              n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
              hash: t5().sha384,
              gRed: !1,
              g: [
                "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
                "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f",
              ],
            }),
            defineCurve("p521", {
              type: "short",
              prime: null,
              p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
              a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
              b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
              n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
              hash: t5().sha512,
              gRed: !1,
              g: [
                "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
                "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650",
              ],
            }),
            defineCurve("curve25519", {
              type: "mont",
              prime: "p25519",
              p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
              a: "76d06",
              b: "1",
              n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
              hash: t5().sha256,
              gRed: !1,
              g: ["9"],
            }),
            defineCurve("ed25519", {
              type: "edwards",
              prime: "p25519",
              p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
              a: "-1",
              c: "1",
              d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
              n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
              hash: t5().sha256,
              gRed: !1,
              g: [
                "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
                "6666666666666666666666666666666666666666666666666666666666666658",
              ],
            });
          try {
            W = null.crash();
          } catch (s) {
            W = void 0;
          }
          defineCurve("secp256k1", {
            type: "short",
            prime: "k256",
            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
            a: "0",
            b: "7",
            n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
            h: "1",
            hash: t5().sha256,
            beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
            lambda:
              "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
            basis: [
              {
                a: "3086d221a7d46bcde86c90e49284eb15",
                b: "-e4437ed6010e88286f547fa90abfe4c3",
              },
              {
                a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                b: "3086d221a7d46bcde86c90e49284eb15",
              },
            ],
            gRed: !1,
            g: [
              "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
              "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
              W,
            ],
          });
        });
      function HmacDRBG(s) {
        if (!(this instanceof HmacDRBG)) return new HmacDRBG(s);
        (this.hash = s.hash),
          (this.predResist = !!s.predResist),
          (this.outLen = this.hash.outSize),
          (this.minEntropy = s.minEntropy || this.hash.hmacStrength),
          (this._reseed = null),
          (this.reseedInterval = null),
          (this.K = null),
          (this.V = null);
        var x = t4.toArray(s.entropy, s.entropyEnc || "hex"),
          W = t4.toArray(s.nonce, s.nonceEnc || "hex"),
          X = t4.toArray(s.pers, s.persEnc || "hex");
        t6(
          x.length >= this.minEntropy / 8,
          "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
        ),
          this._init(x, W, X);
      }
      (HmacDRBG.prototype._init = function (s, x, W) {
        var X = s.concat(x).concat(W);
        (this.K = Array(this.outLen / 8)), (this.V = Array(this.outLen / 8));
        for (var ee = 0; ee < this.V.length; ee++)
          (this.K[ee] = 0), (this.V[ee] = 1);
        this._update(X),
          (this._reseed = 1),
          (this.reseedInterval = 281474976710656);
      }),
        (HmacDRBG.prototype._hmac = function () {
          return new (t5().hmac)(this.hash, this.K);
        }),
        (HmacDRBG.prototype._update = function (s) {
          var x = this._hmac().update(this.V).update([0]);
          s && (x = x.update(s)),
            (this.K = x.digest()),
            (this.V = this._hmac().update(this.V).digest()),
            s &&
              ((this.K = this._hmac()
                .update(this.V)
                .update([1])
                .update(s)
                .digest()),
              (this.V = this._hmac().update(this.V).digest()));
        }),
        (HmacDRBG.prototype.reseed = function (s, x, W, X) {
          "string" != typeof x && ((X = W), (W = x), (x = null)),
            (s = t4.toArray(s, x)),
            (W = t4.toArray(W, X)),
            t6(
              s.length >= this.minEntropy / 8,
              "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
            ),
            this._update(s.concat(W || [])),
            (this._reseed = 1);
        }),
        (HmacDRBG.prototype.generate = function (s, x, W, X) {
          if (this._reseed > this.reseedInterval)
            throw Error("Reseed is required");
          "string" != typeof x && ((X = W), (W = x), (x = null)),
            W && ((W = t4.toArray(W, X || "hex")), this._update(W));
          for (var ee = []; ee.length < s; )
            (this.V = this._hmac().update(this.V).digest()),
              (ee = ee.concat(this.V));
          var et = ee.slice(0, s);
          return this._update(W), this._reseed++, t4.encode(et, x);
        });
      var rs = t8.assert;
      function KeyPair(s, x) {
        (this.ec = s),
          (this.priv = null),
          (this.pub = null),
          x.priv && this._importPrivate(x.priv, x.privEnc),
          x.pub && this._importPublic(x.pub, x.pubEnc);
      }
      (KeyPair.fromPublic = function (s, x, W) {
        return x instanceof KeyPair ? x : new KeyPair(s, { pub: x, pubEnc: W });
      }),
        (KeyPair.fromPrivate = function (s, x, W) {
          return x instanceof KeyPair
            ? x
            : new KeyPair(s, { priv: x, privEnc: W });
        }),
        (KeyPair.prototype.validate = function () {
          var s = this.getPublic();
          return s.isInfinity()
            ? { result: !1, reason: "Invalid public key" }
            : s.validate()
            ? s.mul(this.ec.curve.n).isInfinity()
              ? { result: !0, reason: null }
              : { result: !1, reason: "Public key * N != O" }
            : { result: !1, reason: "Public key is not a point" };
        }),
        (KeyPair.prototype.getPublic = function (s, x) {
          return ("string" == typeof s && ((x = s), (s = null)),
          this.pub || (this.pub = this.ec.g.mul(this.priv)),
          x)
            ? this.pub.encode(x, s)
            : this.pub;
        }),
        (KeyPair.prototype.getPrivate = function (s) {
          return "hex" === s ? this.priv.toString(16, 2) : this.priv;
        }),
        (KeyPair.prototype._importPrivate = function (s, x) {
          (this.priv = new (tJ())(s, x || 16)),
            (this.priv = this.priv.umod(this.ec.curve.n));
        }),
        (KeyPair.prototype._importPublic = function (s, x) {
          if (s.x || s.y) {
            "mont" === this.ec.curve.type
              ? rs(s.x, "Need x coordinate")
              : ("short" === this.ec.curve.type ||
                  "edwards" === this.ec.curve.type) &&
                rs(s.x && s.y, "Need both x and y coordinate"),
              (this.pub = this.ec.curve.point(s.x, s.y));
            return;
          }
          this.pub = this.ec.curve.decodePoint(s, x);
        }),
        (KeyPair.prototype.derive = function (s) {
          return (
            s.validate() || rs(s.validate(), "public point not validated"),
            s.mul(this.priv).getX()
          );
        }),
        (KeyPair.prototype.sign = function (s, x, W) {
          return this.ec.sign(s, this, x, W);
        }),
        (KeyPair.prototype.verify = function (s, x) {
          return this.ec.verify(s, x, this);
        }),
        (KeyPair.prototype.inspect = function () {
          return (
            "<Key priv: " +
            (this.priv && this.priv.toString(16, 2)) +
            " pub: " +
            (this.pub && this.pub.inspect()) +
            " >"
          );
        });
      var rl = t8.assert;
      function Signature(s, x) {
        if (s instanceof Signature) return s;
        this._importDER(s, x) ||
          (rl(s.r && s.s, "Signature without r or s"),
          (this.r = new (tJ())(s.r, 16)),
          (this.s = new (tJ())(s.s, 16)),
          void 0 === s.recoveryParam
            ? (this.recoveryParam = null)
            : (this.recoveryParam = s.recoveryParam));
      }
      function Position() {
        this.place = 0;
      }
      function getLength(s, x) {
        var W = s[x.place++];
        if (!(128 & W)) return W;
        var X = 15 & W;
        if (0 === X || X > 4) return !1;
        for (var ee = 0, et = 0, er = x.place; et < X; et++, er++)
          (ee <<= 8), (ee |= s[er]), (ee >>>= 0);
        return !(ee <= 127) && ((x.place = er), ee);
      }
      function rmPadding(s) {
        for (var x = 0, W = s.length - 1; !s[x] && !(128 & s[x + 1]) && x < W; )
          x++;
        return 0 === x ? s : s.slice(x);
      }
      function constructLength(s, x) {
        if (x < 128) {
          s.push(x);
          return;
        }
        var W = 1 + ((Math.log(x) / Math.LN2) >>> 3);
        for (s.push(128 | W); --W; ) s.push((x >>> (W << 3)) & 255);
        s.push(x);
      }
      (Signature.prototype._importDER = function (s, x) {
        s = t8.toArray(s, x);
        var W = new Position();
        if (48 !== s[W.place++]) return !1;
        var X = getLength(s, W);
        if (!1 === X || X + W.place !== s.length || 2 !== s[W.place++])
          return !1;
        var ee = getLength(s, W);
        if (!1 === ee) return !1;
        var et = s.slice(W.place, ee + W.place);
        if (((W.place += ee), 2 !== s[W.place++])) return !1;
        var er = getLength(s, W);
        if (!1 === er || s.length !== er + W.place) return !1;
        var ei = s.slice(W.place, er + W.place);
        if (0 === et[0]) {
          if (!(128 & et[1])) return !1;
          et = et.slice(1);
        }
        if (0 === ei[0]) {
          if (!(128 & ei[1])) return !1;
          ei = ei.slice(1);
        }
        return (
          (this.r = new (tJ())(et)),
          (this.s = new (tJ())(ei)),
          (this.recoveryParam = null),
          !0
        );
      }),
        (Signature.prototype.toDER = function (s) {
          var x = this.r.toArray(),
            W = this.s.toArray();
          for (
            128 & x[0] && (x = [0].concat(x)),
              128 & W[0] && (W = [0].concat(W)),
              x = rmPadding(x),
              W = rmPadding(W);
            !W[0] && !(128 & W[1]);

          )
            W = W.slice(1);
          var X = [2];
          constructLength(X, x.length),
            (X = X.concat(x)).push(2),
            constructLength(X, W.length);
          var ee = X.concat(W),
            et = [48];
          return (
            constructLength(et, ee.length),
            (et = et.concat(ee)),
            t8.encode(et, s)
          );
        });
      var rand = function () {
          throw Error("unsupported");
        },
        rc = t8.assert;
      function EC(s) {
        if (!(this instanceof EC)) return new EC(s);
        "string" == typeof s &&
          (rc(
            Object.prototype.hasOwnProperty.call(ra, s),
            "Unknown curve " + s
          ),
          (s = ra[s])),
          s instanceof ra.PresetCurve && (s = { curve: s }),
          (this.curve = s.curve.curve),
          (this.n = this.curve.n),
          (this.nh = this.n.ushrn(1)),
          (this.g = this.curve.g),
          (this.g = s.curve.g),
          this.g.precompute(s.curve.n.bitLength() + 1),
          (this.hash = s.hash || s.curve.hash);
      }
      (EC.prototype.keyPair = function (s) {
        return new KeyPair(this, s);
      }),
        (EC.prototype.keyFromPrivate = function (s, x) {
          return KeyPair.fromPrivate(this, s, x);
        }),
        (EC.prototype.keyFromPublic = function (s, x) {
          return KeyPair.fromPublic(this, s, x);
        }),
        (EC.prototype.genKeyPair = function (s) {
          s || (s = {});
          for (
            var x = new HmacDRBG({
                hash: this.hash,
                pers: s.pers,
                persEnc: s.persEnc || "utf8",
                entropy: s.entropy || rand(this.hash.hmacStrength),
                entropyEnc: (s.entropy && s.entropyEnc) || "utf8",
                nonce: this.n.toArray(),
              }),
              W = this.n.byteLength(),
              X = this.n.sub(new (tJ())(2));
            ;

          ) {
            var ee = new (tJ())(x.generate(W));
            if (!(ee.cmp(X) > 0)) return ee.iaddn(1), this.keyFromPrivate(ee);
          }
        }),
        (EC.prototype._truncateToN = function (s, x) {
          var W = 8 * s.byteLength() - this.n.bitLength();
          return (W > 0 && (s = s.ushrn(W)), !x && s.cmp(this.n) >= 0)
            ? s.sub(this.n)
            : s;
        }),
        (EC.prototype.sign = function (s, x, W, X) {
          "object" == typeof W && ((X = W), (W = null)),
            X || (X = {}),
            (x = this.keyFromPrivate(x, W)),
            (s = this._truncateToN(new (tJ())(s, 16)));
          for (
            var ee = this.n.byteLength(),
              et = x.getPrivate().toArray("be", ee),
              er = s.toArray("be", ee),
              ei = new HmacDRBG({
                hash: this.hash,
                entropy: et,
                nonce: er,
                pers: X.pers,
                persEnc: X.persEnc || "utf8",
              }),
              eo = this.n.sub(new (tJ())(1)),
              ea = 0;
            ;
            ea++
          ) {
            var es = X.k
              ? X.k(ea)
              : new (tJ())(ei.generate(this.n.byteLength()));
            if (
              !(
                0 >= (es = this._truncateToN(es, !0)).cmpn(1) || es.cmp(eo) >= 0
              )
            ) {
              var el = this.g.mul(es);
              if (!el.isInfinity()) {
                var ec = el.getX(),
                  eu = ec.umod(this.n);
                if (0 !== eu.cmpn(0)) {
                  var ed = es.invm(this.n).mul(eu.mul(x.getPrivate()).iadd(s));
                  if (0 !== (ed = ed.umod(this.n)).cmpn(0)) {
                    var eh =
                      (el.getY().isOdd() ? 1 : 0) | (0 !== ec.cmp(eu) ? 2 : 0);
                    return (
                      X.canonical &&
                        ed.cmp(this.nh) > 0 &&
                        ((ed = this.n.sub(ed)), (eh ^= 1)),
                      new Signature({ r: eu, s: ed, recoveryParam: eh })
                    );
                  }
                }
              }
            }
          }
        }),
        (EC.prototype.verify = function (s, x, W, X) {
          (s = this._truncateToN(new (tJ())(s, 16))),
            (W = this.keyFromPublic(W, X));
          var ee,
            et = (x = new Signature(x, "hex")).r,
            er = x.s;
          if (
            0 > et.cmpn(1) ||
            et.cmp(this.n) >= 0 ||
            0 > er.cmpn(1) ||
            er.cmp(this.n) >= 0
          )
            return !1;
          var ei = er.invm(this.n),
            eo = ei.mul(s).umod(this.n),
            ea = ei.mul(et).umod(this.n);
          return this.curve._maxwellTrick
            ? !(ee = this.g.jmulAdd(eo, W.getPublic(), ea)).isInfinity() &&
                ee.eqXToP(et)
            : !(ee = this.g.mulAdd(eo, W.getPublic(), ea)).isInfinity() &&
                0 === ee.getX().umod(this.n).cmp(et);
        }),
        (EC.prototype.recoverPubKey = function (s, x, W, X) {
          rc((3 & W) === W, "The recovery param is more than two bits"),
            (x = new Signature(x, X));
          var ee = this.n,
            et = new (tJ())(s),
            er = x.r,
            ei = x.s,
            eo = 1 & W,
            ea = W >> 1;
          if (er.cmp(this.curve.p.umod(this.curve.n)) >= 0 && ea)
            throw Error("Unable to find sencond key candinate");
          er = ea
            ? this.curve.pointFromX(er.add(this.curve.n), eo)
            : this.curve.pointFromX(er, eo);
          var es = x.r.invm(ee),
            el = ee.sub(et).mul(es).umod(ee),
            ec = ei.mul(es).umod(ee);
          return this.g.mulAdd(el, er, ec);
        }),
        (EC.prototype.getKeyRecoveryParam = function (s, x, W, X) {
          if (null !== (x = new Signature(x, X)).recoveryParam)
            return x.recoveryParam;
          for (var ee, et = 0; et < 4; et++) {
            try {
              ee = this.recoverPubKey(s, x, et);
            } catch (s) {
              continue;
            }
            if (ee.eq(W)) return et;
          }
          throw Error("Unable to find valid recovery factor");
        });
      var ru = createCommonjsModule(function (s, x) {
        (x.version = "6.5.4"),
          (x.utils = t8),
          (x.rand = function () {
            throw Error("unsupported");
          }),
          (x.curve = ro),
          (x.curves = ra),
          (x.ec = EC),
          (x.eddsa = null);
      }).ec;
      function defineReadOnly(s, x, W) {
        Object.defineProperty(s, x, { enumerable: !0, value: W, writable: !1 });
      }
      new lib_esm_Logger("properties/5.7.0");
      let rd = new lib_esm_Logger("signing-key/5.7.0"),
        rh = null;
      function getCurve() {
        return rh || (rh = new ru("secp256k1")), rh;
      }
      let SigningKey = class SigningKey {
        constructor(s) {
          defineReadOnly(this, "curve", "secp256k1"),
            defineReadOnly(this, "privateKey", lib_esm_hexlify(s)),
            32 !==
              (function (s) {
                if ("string" != typeof s) s = lib_esm_hexlify(s);
                else if (!lib_esm_isHexString(s) || s.length % 2) return null;
                return (s.length - 2) / 2;
              })(this.privateKey) &&
              rd.throwArgumentError(
                "invalid private key",
                "privateKey",
                "[[ REDACTED ]]"
              );
          let x = getCurve().keyFromPrivate(lib_esm_arrayify(this.privateKey));
          defineReadOnly(this, "publicKey", "0x" + x.getPublic(!1, "hex")),
            defineReadOnly(
              this,
              "compressedPublicKey",
              "0x" + x.getPublic(!0, "hex")
            ),
            defineReadOnly(this, "_isSigningKey", !0);
        }
        _addPoint(s) {
          let x = getCurve().keyFromPublic(lib_esm_arrayify(this.publicKey)),
            W = getCurve().keyFromPublic(lib_esm_arrayify(s));
          return "0x" + x.pub.add(W.pub).encodeCompressed("hex");
        }
        signDigest(s) {
          let x = getCurve().keyFromPrivate(lib_esm_arrayify(this.privateKey)),
            W = lib_esm_arrayify(s);
          32 !== W.length &&
            rd.throwArgumentError("bad digest length", "digest", s);
          let X = x.sign(W, { canonical: !0 });
          return lib_esm_splitSignature({
            recoveryParam: X.recoveryParam,
            r: lib_esm_hexZeroPad("0x" + X.r.toString(16), 32),
            s: lib_esm_hexZeroPad("0x" + X.s.toString(16), 32),
          });
        }
        computeSharedSecret(s) {
          let x = getCurve().keyFromPrivate(lib_esm_arrayify(this.privateKey)),
            W = getCurve().keyFromPublic(lib_esm_arrayify(computePublicKey(s)));
          return lib_esm_hexZeroPad(
            "0x" + x.derive(W.getPublic()).toString(16),
            32
          );
        }
        static isSigningKey(s) {
          return !!(s && s._isSigningKey);
        }
      };
      function computePublicKey(s, x) {
        let W = lib_esm_arrayify(s);
        if (32 === W.length) {
          let s = new SigningKey(W);
          return x
            ? "0x" + getCurve().keyFromPrivate(W).getPublic(!0, "hex")
            : s.publicKey;
        }
        return 33 === W.length
          ? x
            ? lib_esm_hexlify(W)
            : "0x" + getCurve().keyFromPublic(W).getPublic(!1, "hex")
          : 65 === W.length
          ? x
            ? "0x" + getCurve().keyFromPublic(W).getPublic(!0, "hex")
            : lib_esm_hexlify(W)
          : rd.throwArgumentError(
              "invalid public or private key",
              "key",
              "[REDACTED]"
            );
      }
      new lib_esm_Logger("transactions/5.7.0"),
        ((eo = eu || (eu = {}))[(eo.legacy = 0)] = "legacy"),
        (eo[(eo.eip2930 = 1)] = "eip2930"),
        (eo[(eo.eip1559 = 2)] = "eip1559");
      var rp = W(15501),
        rf = W(512),
        rg = W(73294),
        rm = W(57664),
        rw = W(86266);
      let rb = {
        waku: {
          publish: "waku_publish",
          batchPublish: "waku_batchPublish",
          subscribe: "waku_subscribe",
          batchSubscribe: "waku_batchSubscribe",
          subscription: "waku_subscription",
          unsubscribe: "waku_unsubscribe",
          batchUnsubscribe: "waku_batchUnsubscribe",
          batchFetchMessages: "waku_batchFetchMessages",
        },
        irn: {
          publish: "irn_publish",
          batchPublish: "irn_batchPublish",
          subscribe: "irn_subscribe",
          batchSubscribe: "irn_batchSubscribe",
          subscription: "irn_subscription",
          unsubscribe: "irn_unsubscribe",
          batchUnsubscribe: "irn_batchUnsubscribe",
          batchFetchMessages: "irn_batchFetchMessages",
        },
        iridium: {
          publish: "iridium_publish",
          batchPublish: "iridium_batchPublish",
          subscribe: "iridium_subscribe",
          batchSubscribe: "iridium_batchSubscribe",
          subscription: "iridium_subscription",
          unsubscribe: "iridium_unsubscribe",
          batchUnsubscribe: "iridium_batchUnsubscribe",
          batchFetchMessages: "iridium_batchFetchMessages",
        },
      };
      var rv = W(83454),
        ry = W(48764).Buffer;
      function te(s) {
        let [x, W] = s.split(":");
        return { namespace: x, reference: W };
      }
      function H(s, x) {
        return s.includes(":") ? [s] : x.chains || [];
      }
      let r_ = {
        reactNative: "react-native",
        node: "node",
        browser: "browser",
        unknown: "unknown",
      };
      function ie() {
        return (
          "u" > typeof rv &&
          "u" > typeof rv.versions &&
          "u" > typeof rv.versions.node
        );
      }
      function index_es_R() {
        return (
          !(0, tL.getDocument)() &&
          !!(0, tL.getNavigator)() &&
          "ReactNative" === navigator.product
        );
      }
      function V() {
        return !ie() && !!(0, tL.getNavigator)() && !!(0, tL.getDocument)();
      }
      function A() {
        return index_es_R()
          ? r_.reactNative
          : ie()
          ? r_.node
          : V()
          ? r_.browser
          : r_.unknown;
      }
      function yt() {
        var s;
        try {
          return index_es_R() &&
            "u" > typeof W.g &&
            "u" > typeof (null == W.g ? void 0 : W.g.Application)
            ? null == (s = W.g.Application)
              ? void 0
              : s.applicationId
            : void 0;
        } catch {
          return;
        }
      }
      function gt() {
        return (
          (0, tj.D)() || { name: "", description: "", url: "", icons: [""] }
        );
      }
      function He(s, x, X) {
        let ee = (function () {
            var s;
            if (
              A() === r_.reactNative &&
              "u" > typeof W.g &&
              "u" > typeof (null == W.g ? void 0 : W.g.Platform)
            ) {
              let { OS: s, Version: x } = W.g.Platform;
              return [s, x].join("-");
            }
            let x = s
              ? parseUserAgent(s)
              : "undefined" == typeof document &&
                "undefined" != typeof navigator &&
                "ReactNative" === navigator.product
              ? new ReactNativeInfo()
              : "undefined" != typeof navigator
              ? parseUserAgent(navigator.userAgent)
              : void 0 !== tO && tO.version
              ? new NodeInfo(tO.version.slice(1))
              : null;
            if (null === x) return "unknown";
            let X = x.os ? x.os.replace(" ", "").toLowerCase() : "unknown";
            return "browser" === x.type
              ? [X, x.name, x.version].join("-")
              : [X, x.version].join("-");
          })(),
          et = (function () {
            var s;
            let x = A();
            return x === r_.browser
              ? [
                  x,
                  (null == (s = (0, tL.getLocation)()) ? void 0 : s.host) ||
                    "unknown",
                ].join(":")
              : x;
          })();
        return [[s, x].join("-"), ["js", X].join("-"), ee, et].join("/");
      }
      function index_es_I(s, x) {
        return s.filter((s) => x.includes(s)).length === s.length;
      }
      function Ot(s) {
        return Object.fromEntries(s.entries());
      }
      function St(s) {
        return new Map(Object.entries(s));
      }
      function Tt(s = ek.FIVE_MINUTES, x) {
        let W, X, ee, et;
        let er = (0, ek.toMiliseconds)(s || ek.FIVE_MINUTES);
        return {
          resolve: (s) => {
            ee && W && (clearTimeout(ee), W(s), (et = Promise.resolve(s)));
          },
          reject: (s) => {
            ee && X && (clearTimeout(ee), X(s));
          },
          done: () =>
            new Promise((s, ei) => {
              if (et) return s(et);
              (ee = setTimeout(() => {
                let s = Error(x);
                (et = Promise.reject(s)), ei(s);
              }, er)),
                (W = s),
                (X = ei);
            }),
        };
      }
      function Pt(s, x, W) {
        return new Promise(async (X, ee) => {
          let et = setTimeout(() => ee(Error(W)), x);
          try {
            let x = await s;
            X(x);
          } catch (s) {
            ee(s);
          }
          clearTimeout(et);
        });
      }
      function ce(s, x) {
        if ("string" == typeof x && x.startsWith(`${s}:`)) return x;
        if ("topic" === s.toLowerCase()) {
          if ("string" != typeof x)
            throw Error(
              'Value must be "string" for expirer target type: topic'
            );
          return `topic:${x}`;
        }
        if ("id" === s.toLowerCase()) {
          if ("number" != typeof x)
            throw Error('Value must be "number" for expirer target type: id');
          return `id:${x}`;
        }
        throw Error(`Unknown expirer target type: ${s}`);
      }
      function index_es_Ct(s) {
        let [x, W] = s.split(":"),
          X = { id: void 0, topic: void 0 };
        if ("topic" === x && "string" == typeof W) X.topic = W;
        else if ("id" === x && Number.isInteger(Number(W))) X.id = Number(W);
        else
          throw Error(
            `Invalid target, expected id:number or topic:string, got ${x}:${W}`
          );
        return X;
      }
      function Ut(s, x) {
        return (0, ek.fromMiliseconds)(
          (x || Date.now()) + (0, ek.toMiliseconds)(s)
        );
      }
      function _t(s) {
        return Date.now() >= (0, ek.toMiliseconds)(s);
      }
      function kt(s, x) {
        return `${s}${x ? `:${x}` : ""}`;
      }
      function index_es_O(s = [], x = []) {
        return [...new Set([...s, ...x])];
      }
      async function Dt({ id: s, topic: x, wcDeepLink: X }) {
        var ee;
        try {
          if (!X) return;
          let et = "string" == typeof X ? JSON.parse(X) : X,
            er = et?.href;
          if ("string" != typeof er) return;
          let ei = (function (s, x, W) {
              let X = `requestId=${x}&sessionTopic=${W}`;
              s.endsWith("/") && (s = s.slice(0, -1));
              let ee = `${s}`;
              if (s.startsWith("https://t.me")) {
                let x = s.includes("?") ? "&startapp=" : "?startapp=";
                ee = `${ee}${x}${(function (s, x = !1) {
                  let W = ry.from(s).toString("base64");
                  return x ? W.replace(/[=]/g, "") : W;
                })(X, !0)}`;
              } else ee = `${ee}/wc?${X}`;
              return ee;
            })(er, s, x),
            eo = A();
          if (eo === r_.browser) {
            let s;
            if (!(null != (ee = (0, tL.getDocument)()) && ee.hasFocus())) {
              console.warn("Document does not have focus, skipping deeplink.");
              return;
            }
            (s = "_self"),
              (function () {
                try {
                  return window.self !== window.top;
                } catch {
                  return !1;
                }
              })()
                ? (s = "_top")
                : (("u" > typeof window &&
                    (!!window.TelegramWebviewProxy ||
                      !!window.Telegram ||
                      !!window.TelegramWebviewProxyProto)) ||
                    ei.startsWith("https://") ||
                    ei.startsWith("http://")) &&
                  (s = "_blank"),
              window.open(ei, s, "noreferrer noopener");
          } else
            eo === r_.reactNative &&
              "u" > typeof (null == W.g ? void 0 : W.g.Linking) &&
              (await W.g.Linking.openURL(ei));
        } catch (s) {
          console.error(s);
        }
      }
      async function xt(s, x) {
        let W = "";
        try {
          if (V() && (W = localStorage.getItem(x))) return W;
          W = await s.getItem(x);
        } catch (s) {
          console.error(s);
        }
        return W;
      }
      function Vt(s, x) {
        if (!s.includes(x)) return null;
        let W = s.split(/([&,?,=])/),
          X = W.indexOf(x);
        return W[X + 2];
      }
      function Mt() {
        return "u" > typeof crypto && null != crypto && crypto.randomUUID
          ? crypto.randomUUID()
          : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu, (s) => {
              let x = (16 * Math.random()) | 0;
              return ("x" === s ? x : (3 & x) | 8).toString(16);
            });
      }
      function Lt() {
        return "u" > typeof rv && "true" === rv.env.IS_VITEST;
      }
      function ue(s) {
        return ry.from(s, "base64").toString("utf-8");
      }
      async function en(s, x, W, X, ee, et) {
        switch (W.t) {
          case "eip191":
            var er, ei, eo;
            return (
              (er = s),
              (ei = x),
              (eo = W.s),
              (function (s) {
                let x = computePublicKey(s);
                return (function (s) {
                  let x = null;
                  if (
                    ("string" != typeof s &&
                      t0.throwArgumentError("invalid address", "address", s),
                    s.match(/^(0x)?[0-9a-fA-F]{40}$/))
                  )
                    "0x" !== s.substring(0, 2) && (s = "0x" + s),
                      (x = getChecksumAddress(s)),
                      s.match(/([A-F].*[a-f])|([a-f].*[A-F])/) &&
                        x !== s &&
                        t0.throwArgumentError(
                          "bad address checksum",
                          "address",
                          s
                        );
                  else if (s.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    var W;
                    for (
                      s.substring(2, 4) !==
                        (function (s) {
                          let x = (s =
                            (s = s.toUpperCase()).substring(4) +
                            s.substring(0, 2) +
                            "00")
                            .split("")
                            .map((s) => t1[s])
                            .join("");
                          for (; x.length >= t2; ) {
                            let s = x.substring(0, t2);
                            x = (parseInt(s, 10) % 97) + x.substring(s.length);
                          }
                          let W = String(98 - (parseInt(x, 10) % 97));
                          for (; W.length < 2; ) W = "0" + W;
                          return W;
                        })(s) &&
                        t0.throwArgumentError(
                          "bad icap checksum",
                          "address",
                          s
                        ),
                        W = s.substring(4),
                        x = new tX(W, 36).toString(16);
                      x.length < 40;

                    )
                      x = "0" + x;
                    x = getChecksumAddress("0x" + x);
                  } else t0.throwArgumentError("invalid address", "address", s);
                  return x;
                })(
                  lib_esm_hexDataSlice(
                    lib_esm_keccak256(lib_esm_hexDataSlice(x, 1)),
                    12
                  )
                );
              })(
                (function (s, x) {
                  let W = lib_esm_splitSignature(x),
                    X = { r: lib_esm_arrayify(W.r), s: lib_esm_arrayify(W.s) };
                  return (
                    "0x" +
                    getCurve()
                      .recoverPubKey(lib_esm_arrayify(s), X, W.recoveryParam)
                      .encode("hex", !1)
                  );
                })(lib_esm_arrayify(hashMessage(ei)), eo)
              ).toLowerCase() === er.toLowerCase()
            );
          case "eip1271":
            return await tn(s, x, W.s, X, ee, et);
          default:
            throw Error(
              `verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${W.t}`
            );
        }
      }
      async function tn(s, x, W, X, ee, et) {
        let er = te(X);
        if (!er.namespace || !er.reference)
          throw Error(
            `isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${X}`
          );
        try {
          let er = "0x1626ba7e",
            ei = W.substring(2),
            eo = hashMessage(x).substring(2),
            ea = await fetch(
              `${
                et || "https://rpc.walletconnect.org/v1"
              }/?chainId=${X}&projectId=${ee}`,
              {
                method: "POST",
                body: JSON.stringify({
                  id: Date.now() + Math.floor(1e3 * Math.random()),
                  jsonrpc: "2.0",
                  method: "eth_call",
                  params: [
                    {
                      to: s,
                      data:
                        er +
                        eo +
                        "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000041" +
                        ei,
                    },
                    "latest",
                  ],
                }),
              }
            ),
            { result: es } = await ea.json();
          return (
            !!es && es.slice(0, er.length).toLowerCase() === er.toLowerCase()
          );
        } catch (s) {
          return console.error("isValidEip1271Signature: ", s), !1;
        }
      }
      var rC = Object.defineProperty,
        rx = Object.defineProperties,
        rE = Object.getOwnPropertyDescriptors,
        rA = Object.getOwnPropertySymbols,
        rS = Object.prototype.hasOwnProperty,
        rk = Object.prototype.propertyIsEnumerable,
        on = (s, x, W) =>
          x in s
            ? rC(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        le = (s, x) => {
          for (var W in x || (x = {})) rS.call(x, W) && on(s, W, x[W]);
          if (rA) for (var W of rA(x)) rk.call(x, W) && on(s, W, x[W]);
          return s;
        },
        sn = (s, x) => rx(s, rE(x));
      let J = (s) => s?.split(":"),
        cn = (s) => {
          let x = s && J(s);
          if (x) return s.includes("did:pkh:") ? x[3] : x[1];
        },
        an = (s) => {
          let x = s && J(s);
          if (x) return x[2] + ":" + x[3];
        },
        de = (s) => {
          let x = s && J(s);
          if (x) return x.pop();
        };
      async function Yt(s) {
        let { cacao: x, projectId: W } = s,
          { s: X, p: ee } = x,
          et = un(ee, ee.iss),
          er = de(ee.iss);
        return await en(er, et, X, an(ee.iss), W);
      }
      let un = (s, x) => {
        let W = `${s.domain} wants you to sign in with your Ethereum account:`,
          X = de(x);
        if (!s.aud && !s.uri)
          throw Error(
            "Either `aud` or `uri` is required to construct the message"
          );
        let ee = s.statement || void 0,
          et = `URI: ${s.aud || s.uri}`,
          er = `Version: ${s.version}`,
          ei = `Chain ID: ${cn(x)}`,
          eo = `Nonce: ${s.nonce}`,
          ea = `Issued At: ${s.iat}`,
          es = s.exp ? `Expiration Time: ${s.exp}` : void 0,
          el = s.nbf ? `Not Before: ${s.nbf}` : void 0,
          ec = s.requestId ? `Request ID: ${s.requestId}` : void 0,
          eu = s.resources
            ? `Resources:${s.resources
                .map(
                  (s) => `
- ${s}`
                )
                .join("")}`
            : void 0,
          ed = index_es_G(s.resources);
        if (ed) {
          let s = $(ed);
          ee = (function (s = "", x) {
            index_es_N(x);
            let W =
              "I further authorize the stated URI to perform the following actions on my behalf: ";
            if (s.includes(W)) return s;
            let X = [],
              ee = 0;
            Object.keys(x.att).forEach((s) => {
              let W = Object.keys(x.att[s]).map((s) => ({
                ability: s.split("/")[0],
                action: s.split("/")[1],
              }));
              W.sort((s, x) => s.action.localeCompare(x.action));
              let et = {};
              W.forEach((s) => {
                et[s.ability] || (et[s.ability] = []),
                  et[s.ability].push(s.action);
              });
              let er = Object.keys(et).map(
                (x) => (
                  ee++, `(${ee}) '${x}': '${et[x].join("', '")}' for '${s}'.`
                )
              );
              X.push(er.join(", ").replace(".,", "."));
            });
            let et = X.join(" "),
              er = `${W}${et}`;
            return `${s ? s + " " : ""}${er}`;
          })(ee, s);
        }
        return [W, X, "", ee, "", et, er, ei, eo, ea, es, el, ec, eu].filter(
          (s) => null != s
        ).join(`
`);
      };
      function index_es_N(s) {
        if (!s) throw Error("No recap provided, value is undefined");
        if (!s.att) throw Error("No `att` property found");
        let x = Object.keys(s.att);
        if (!(null != x && x.length))
          throw Error("No resources found in `att` property");
        x.forEach((x) => {
          let W = s.att[x];
          if (Array.isArray(W) || "object" != typeof W)
            throw Error(`Resource must be an object: ${x}`);
          if (!Object.keys(W).length)
            throw Error(`Resource object is empty: ${x}`);
          Object.keys(W).forEach((s) => {
            let x = W[s];
            if (!Array.isArray(x))
              throw Error(
                `Ability limits ${s} must be an array of objects, found: ${x}`
              );
            if (!x.length)
              throw Error(
                `Value of ${s} is empty array, must be an array with objects`
              );
            x.forEach((x) => {
              if ("object" != typeof x)
                throw Error(
                  `Ability limits (${s}) must be an array of objects, found: ${x}`
                );
            });
          });
        });
      }
      function index_es_z(s) {
        return (
          index_es_N(s),
          `urn:recap:${ry
            .from(JSON.stringify(s))
            .toString("base64")
            .replace(/=/g, "")}`
        );
      }
      function $(s) {
        var x;
        let W =
          ((x = s.replace("urn:recap:", "")),
          JSON.parse(ry.from(x, "base64").toString("utf-8")));
        return index_es_N(W), W;
      }
      function rr(s) {
        var x;
        let W = $(s);
        index_es_N(W);
        let X = null == (x = W.att) ? void 0 : x.eip155;
        return X ? Object.keys(X).map((s) => s.split("/")[1]) : [];
      }
      function index_es_or(s) {
        let x = $(s);
        index_es_N(x);
        let W = [];
        return (
          Object.values(x.att).forEach((s) => {
            Object.values(s).forEach((s) => {
              var x;
              null != (x = s?.[0]) && x.chains && W.push(s[0].chains);
            });
          }),
          [...new Set(W.flat())]
        );
      }
      function index_es_G(s) {
        if (!s) return;
        let x = s?.[s.length - 1];
        return x && x.includes("urn:recap:") ? x : void 0;
      }
      let rT = "base10",
        rI = "base16",
        rP = "base64pad",
        rR = "base64url",
        rN = "utf8";
      function ar() {
        let s = (0, e$.randomBytes)(32);
        return to_string_toString(s, rI);
      }
      function lr(s) {
        let x = (0, rg.vp)(from_string_fromString(s, rI));
        return to_string_toString(x, rI);
      }
      function dr(s) {
        let x = (0, rg.vp)(from_string_fromString(s, rN));
        return to_string_toString(x, rI);
      }
      function utils_dist_index_es_C(s) {
        return Number(to_string_toString(s, rT));
      }
      function Ee(s) {
        let { encoding: x = rP } = s;
        if (2 === utils_dist_index_es_C(s.type))
          return to_string_toString(concat_concat([s.type, s.sealed]), x);
        if (1 === utils_dist_index_es_C(s.type)) {
          if (typeof s.senderPublicKey > "u")
            throw Error("Missing sender public key for type 1 envelope");
          return to_string_toString(
            concat_concat([s.type, s.senderPublicKey, s.iv, s.sealed]),
            x
          );
        }
        return to_string_toString(concat_concat([s.type, s.iv, s.sealed]), x);
      }
      function Y(s) {
        let { encoded: x, encoding: W = rP } = s,
          X = from_string_fromString(x, W),
          ee = X.slice(0, 1);
        if (1 === utils_dist_index_es_C(ee)) {
          let s = X.slice(1, 33),
            x = X.slice(33, 45),
            W = X.slice(45);
          return { type: ee, sealed: W, iv: x, senderPublicKey: s };
        }
        if (2 === utils_dist_index_es_C(ee)) {
          let s = X.slice(1),
            x = (0, e$.randomBytes)(12);
          return { type: ee, sealed: s, iv: x };
        }
        let et = X.slice(1, 13),
          er = X.slice(13);
        return { type: ee, sealed: er, iv: et };
      }
      function En(s) {
        let x = s?.type || 0;
        if (1 === x) {
          if (typeof s?.senderPublicKey > "u")
            throw Error("missing sender public key");
          if (typeof s?.receiverPublicKey > "u")
            throw Error("missing receiver public key");
        }
        return {
          type: x,
          senderPublicKey: s?.senderPublicKey,
          receiverPublicKey: s?.receiverPublicKey,
        };
      }
      function gr(s) {
        return (
          1 === s.type &&
          "string" == typeof s.senderPublicKey &&
          "string" == typeof s.receiverPublicKey
        );
      }
      function Nr(s) {
        return s?.relay || { protocol: "irn" };
      }
      function Or(s) {
        let x = rb[s];
        if (typeof x > "u") throw Error(`Relay Protocol not supported: ${s}`);
        return x;
      }
      function Sr(s) {
        var x;
        if (!s.includes("wc:")) {
          let x = ue(s);
          null != x && x.includes("wc:") && (s = x);
        }
        s = (s = s.includes("wc://") ? s.replace("wc://", "") : s).includes(
          "wc:"
        )
          ? s.replace("wc:", "")
          : s;
        let W = s.indexOf(":"),
          X = -1 !== s.indexOf("?") ? s.indexOf("?") : void 0,
          ee = s.substring(0, W),
          et = s.substring(W + 1, X).split("@"),
          er = "u" > typeof X ? s.substring(X) : "",
          ei = new URLSearchParams(er),
          eo = {};
        ei.forEach((s, x) => {
          eo[x] = s;
        });
        let ea = "string" == typeof eo.methods ? eo.methods.split(",") : void 0;
        return {
          protocol: ee,
          topic: (x = et[0]).startsWith("//") ? x.substring(2) : x,
          version: parseInt(et[1], 10),
          symKey: eo.symKey,
          relay: (function (s, x = "-") {
            let W = {},
              X = "relay" + x;
            return (
              Object.keys(s).forEach((x) => {
                if (x.startsWith(X)) {
                  let ee = x.replace(X, ""),
                    et = s[x];
                  W[ee] = et;
                }
              }),
              W
            );
          })(eo),
          methods: ea,
          expiryTimestamp: eo.expiryTimestamp
            ? parseInt(eo.expiryTimestamp, 10)
            : void 0,
        };
      }
      function Rr(s) {
        let x = new URLSearchParams(),
          W = (function (s, x = "-") {
            let W = {};
            return (
              Object.keys(s).forEach((X) => {
                s[X] && (W["relay" + x + X] = s[X]);
              }),
              W
            );
          })(s.relay);
        Object.keys(W)
          .sort()
          .forEach((s) => {
            x.set(s, W[s]);
          }),
          x.set("symKey", s.symKey),
          s.expiryTimestamp &&
            x.set("expiryTimestamp", s.expiryTimestamp.toString()),
          s.methods && x.set("methods", s.methods.join(","));
        let X = x.toString();
        return `${s.protocol}:${s.topic}@${s.version}?${X}`;
      }
      function Ir(s, x, W) {
        return `${s}?wc_ev=${W}&topic=${x}`;
      }
      function U(s) {
        let x = [];
        return (
          s.forEach((s) => {
            let [W, X] = s.split(":");
            x.push(`${W}:${X}`);
          }),
          x
        );
      }
      function we(s) {
        return s.includes(":");
      }
      function An(s) {
        return we(s) ? s.split(":")[0] : s;
      }
      function Dr(s, x) {
        x = x.map((s) => s.replace("did:pkh:", ""));
        let W = (function (s) {
          let x = {};
          return (
            s?.forEach((s) => {
              let [W, X] = s.split(":");
              x[W] || (x[W] = { accounts: [], chains: [], events: [] }),
                x[W].accounts.push(s),
                x[W].chains.push(`${W}:${X}`);
            }),
            x
          );
        })(x);
        for (let [x, X] of Object.entries(W))
          X.methods ? (X.methods = index_es_O(X.methods, s)) : (X.methods = s),
            (X.events = ["chainChanged", "accountsChanged"]);
        return W;
      }
      Object.prototype.hasOwnProperty, Object.prototype.propertyIsEnumerable;
      let rO = {
          INVALID_METHOD: { message: "Invalid method.", code: 1001 },
          INVALID_EVENT: { message: "Invalid event.", code: 1002 },
          INVALID_UPDATE_REQUEST: {
            message: "Invalid update request.",
            code: 1003,
          },
          INVALID_EXTEND_REQUEST: {
            message: "Invalid extend request.",
            code: 1004,
          },
          INVALID_SESSION_SETTLE_REQUEST: {
            message: "Invalid session settle request.",
            code: 1005,
          },
          UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 },
          UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 },
          UNAUTHORIZED_UPDATE_REQUEST: {
            message: "Unauthorized update request.",
            code: 3003,
          },
          UNAUTHORIZED_EXTEND_REQUEST: {
            message: "Unauthorized extend request.",
            code: 3004,
          },
          USER_REJECTED: { message: "User rejected.", code: 5e3 },
          USER_REJECTED_CHAINS: {
            message: "User rejected chains.",
            code: 5001,
          },
          USER_REJECTED_METHODS: {
            message: "User rejected methods.",
            code: 5002,
          },
          USER_REJECTED_EVENTS: {
            message: "User rejected events.",
            code: 5003,
          },
          UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 },
          UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 },
          UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 },
          UNSUPPORTED_ACCOUNTS: {
            message: "Unsupported accounts.",
            code: 5103,
          },
          UNSUPPORTED_NAMESPACE_KEY: {
            message: "Unsupported namespace key.",
            code: 5104,
          },
          USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 },
          SESSION_SETTLEMENT_FAILED: {
            message: "Session settlement failed.",
            code: 7e3,
          },
          WC_METHOD_UNSUPPORTED: {
            message: "Unsupported wc_ method.",
            code: 10001,
          },
        },
        rM = {
          NOT_INITIALIZED: { message: "Not initialized.", code: 1 },
          NO_MATCHING_KEY: { message: "No matching key.", code: 2 },
          RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 },
          RESUBSCRIBED: { message: "Resubscribed.", code: 4 },
          MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 },
          EXPIRED: { message: "Expired.", code: 6 },
          UNKNOWN_TYPE: { message: "Unknown type.", code: 7 },
          MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 },
          NON_CONFORMING_NAMESPACES: {
            message: "Non conforming namespaces.",
            code: 9,
          },
        };
      function dist_index_es_S(s, x) {
        let { message: W, code: X } = rM[s];
        return { message: x ? `${W} ${x}` : W, code: X };
      }
      function dist_index_es_(s, x) {
        let { message: W, code: X } = rO[s];
        return { message: x ? `${W} ${x}` : W, code: X };
      }
      function index_es_K(s, x) {
        return (
          !!Array.isArray(s) && (!("u" > typeof x) || !s.length || s.every(x))
        );
      }
      function Q(s) {
        return (
          Object.getPrototypeOf(s) === Object.prototype && Object.keys(s).length
        );
      }
      function T(s) {
        return typeof s > "u";
      }
      function dist_index_es_b(s, x) {
        return !!(x && T(s)) || ("string" == typeof s && !!s.trim().length);
      }
      function Z(s, x) {
        return !!(x && T(s)) || ("number" == typeof s && !isNaN(s));
      }
      function F(s) {
        return (
          !!(dist_index_es_b(s, !1) && s.includes(":")) &&
          2 === s.split(":").length
        );
      }
      function Oe(s) {
        let x = !0;
        return (
          index_es_K(s)
            ? s.length && (x = s.every((s) => dist_index_es_b(s, !1)))
            : (x = !1),
          x
        );
      }
      function Se(s, x) {
        let W = null;
        return (
          Object.values(s).forEach((s) => {
            var X;
            let ee;
            if (W) return;
            let et =
              ((X = `${x}, namespace`),
              (ee = null),
              Oe(s?.methods)
                ? Oe(s?.events) ||
                  (ee = dist_index_es_(
                    "UNSUPPORTED_EVENTS",
                    `${X}, events should be an array of strings or empty array for no events`
                  ))
                : (ee = dist_index_es_(
                    "UNSUPPORTED_METHODS",
                    `${X}, methods should be an array of strings or empty array for no methods`
                  )),
              ee);
            et && (W = et);
          }),
          W
        );
      }
      function Kn(s, x) {
        let W = null;
        if (s && Q(s)) {
          let X;
          let ee = Se(s, x);
          ee && (W = ee);
          let et =
            ((X = null),
            Object.values(s).forEach((s) => {
              var W, ee;
              let et;
              if (X) return;
              let er =
                ((W = s?.accounts),
                (ee = `${x} namespace`),
                (et = null),
                index_es_K(W)
                  ? W.forEach((s) => {
                      et ||
                        (function (s) {
                          if (dist_index_es_b(s, !1) && s.includes(":")) {
                            let x = s.split(":");
                            if (3 === x.length) {
                              let s = x[0] + ":" + x[1];
                              return !!x[2] && F(s);
                            }
                          }
                          return !1;
                        })(s) ||
                        (et = dist_index_es_(
                          "UNSUPPORTED_ACCOUNTS",
                          `${ee}, account ${s} should be a string and conform to "namespace:chainId:address" format`
                        ));
                    })
                  : (et = dist_index_es_(
                      "UNSUPPORTED_ACCOUNTS",
                      `${ee}, accounts should be an array of strings conforming to "namespace:chainId:address" format`
                    )),
                et);
              er && (X = er);
            }),
            X);
          et && (W = et);
        } else
          W = dist_index_es_S(
            "MISSING_OR_INVALID",
            `${x}, namespaces should be an object with data`
          );
        return W;
      }
      function Fn(s) {
        return dist_index_es_b(s.protocol, !0);
      }
      function Hr(s) {
        return "u" > typeof s;
      }
      function Yr(s, x) {
        return !(
          !F(x) ||
          !(function (s) {
            let x = [];
            return (
              Object.values(s).forEach((s) => {
                x.push(...U(s.accounts));
              }),
              x
            );
          })(s).includes(x)
        );
      }
      function qn(s, x, W) {
        let X = null,
          ee = (function (s) {
            let x = {};
            return (
              Object.keys(s).forEach((W) => {
                var X;
                W.includes(":")
                  ? (x[W] = s[W])
                  : null == (X = s[W].chains) ||
                    X.forEach((X) => {
                      x[X] = { methods: s[W].methods, events: s[W].events };
                    });
              }),
              x
            );
          })(s),
          et = (function (s) {
            let x = {};
            return (
              Object.keys(s).forEach((W) => {
                if (W.includes(":")) x[W] = s[W];
                else {
                  let X = U(s[W].accounts);
                  X?.forEach((X) => {
                    x[X] = {
                      accounts: s[W].accounts.filter((s) =>
                        s.includes(`${X}:`)
                      ),
                      methods: s[W].methods,
                      events: s[W].events,
                    };
                  });
                }
              }),
              x
            );
          })(x),
          er = Object.keys(ee),
          ei = Object.keys(et),
          eo = Bn(Object.keys(s)),
          ea = Bn(Object.keys(x)),
          es = eo.filter((s) => !ea.includes(s));
        return (
          es.length &&
            (X = dist_index_es_S(
              "NON_CONFORMING_NAMESPACES",
              `${W} namespaces keys don't satisfy requiredNamespaces.
      Required: ${es.toString()}
      Received: ${Object.keys(x).toString()}`
            )),
          index_es_I(er, ei) ||
            (X = dist_index_es_S(
              "NON_CONFORMING_NAMESPACES",
              `${W} namespaces chains don't satisfy required namespaces.
      Required: ${er.toString()}
      Approved: ${ei.toString()}`
            )),
          Object.keys(x).forEach((s) => {
            if (!s.includes(":") || X) return;
            let ee = U(x[s].accounts);
            ee.includes(s) ||
              (X = dist_index_es_S(
                "NON_CONFORMING_NAMESPACES",
                `${W} namespaces accounts don't satisfy namespace accounts for ${s}
        Required: ${s}
        Approved: ${ee.toString()}`
              ));
          }),
          er.forEach((s) => {
            X ||
              (index_es_I(ee[s].methods, et[s].methods)
                ? index_es_I(ee[s].events, et[s].events) ||
                  (X = dist_index_es_S(
                    "NON_CONFORMING_NAMESPACES",
                    `${W} namespaces events don't satisfy namespace events for ${s}`
                  ))
                : (X = dist_index_es_S(
                    "NON_CONFORMING_NAMESPACES",
                    `${W} namespaces methods don't satisfy namespace methods for ${s}`
                  )));
          }),
          X
        );
      }
      function Bn(s) {
        return [
          ...new Set(s.map((s) => (s.includes(":") ? s.split(":")[0] : s))),
        ];
      }
      function to() {
        let s = A();
        return new Promise((x) => {
          switch (s) {
            case r_.browser:
              x(V() && navigator?.onLine);
              break;
            case r_.reactNative:
              x(Wn());
              break;
            case r_.node:
            default:
              x(!0);
          }
        });
      }
      async function Wn() {
        if (index_es_R() && "u" > typeof W.g && null != W.g && W.g.NetInfo) {
          let s = await (null == W.g ? void 0 : W.g.NetInfo.fetch());
          return s?.isConnected;
        }
        return !0;
      }
      let rD = {};
      let oo = class oo {
        static get(s) {
          return rD[s];
        }
        static set(s, x) {
          rD[s] = x;
        }
        static delete(s) {
          delete rD[s];
        }
      };
      let rB = "INTERNAL_ERROR",
        rL = "SERVER_ERROR",
        rj = [-32700, -32600, -32601, -32602, -32603],
        rU = {
          PARSE_ERROR: { code: -32700, message: "Parse error" },
          INVALID_REQUEST: { code: -32600, message: "Invalid Request" },
          METHOD_NOT_FOUND: { code: -32601, message: "Method not found" },
          INVALID_PARAMS: { code: -32602, message: "Invalid params" },
          [rB]: { code: -32603, message: "Internal error" },
          [rL]: { code: -32e3, message: "Server error" },
        };
      function getError(s) {
        return Object.keys(rU).includes(s) ? rU[s] : rU[rL];
      }
      function parseConnectionError(s, x, W) {
        return s.message.includes("getaddrinfo ENOTFOUND") ||
          s.message.includes("connect ECONNREFUSED")
          ? Error(`Unavailable ${W} RPC url at ${x}`)
          : s;
      }
      var r$ = W(1468);
      function payloadId(s = 3) {
        let x = Date.now() * Math.pow(10, s);
        return x + Math.floor(Math.random() * Math.pow(10, s));
      }
      function getBigIntRpcId(s = 6) {
        return BigInt(payloadId(s));
      }
      function formatJsonRpcRequest(s, x, W) {
        return { id: W || payloadId(), jsonrpc: "2.0", method: s, params: x };
      }
      function formatJsonRpcResult(s, x) {
        return { id: s, jsonrpc: "2.0", result: x };
      }
      function formatJsonRpcError(s, x, W) {
        var X, ee;
        return {
          id: s,
          jsonrpc: "2.0",
          error:
            void 0 === (X = x)
              ? getError(rB)
              : ("string" == typeof X &&
                  (X = Object.assign(Object.assign({}, getError(rL)), {
                    message: X,
                  })),
                void 0 !== W && (X.data = W),
                (ee = X.code),
                rj.includes(ee) &&
                  (X = (function (s) {
                    let x = Object.values(rU).find((x) => x.code === s);
                    return x || rU[rL];
                  })(X.code)),
                X),
        };
      }
      let index_es_e = class index_es_e {};
      let jsonrpc_types_dist_index_es_n = class jsonrpc_types_dist_index_es_n extends index_es_e {
        constructor() {
          super();
        }
      };
      let index_es_r = class index_es_r extends jsonrpc_types_dist_index_es_n {
        constructor(s) {
          super();
        }
      };
      function matchRegexProtocol(s, x) {
        let W = (function (s) {
          let x = s.match(RegExp(/^\w+:/, "gi"));
          if (x && x.length) return x[0];
        })(s);
        return void 0 !== W && new RegExp(x).test(W);
      }
      function isHttpUrl(s) {
        return matchRegexProtocol(s, "^https?:");
      }
      function isWsUrl(s) {
        return matchRegexProtocol(s, "^wss?:");
      }
      function isJsonRpcPayload(s) {
        return (
          "object" == typeof s &&
          "id" in s &&
          "jsonrpc" in s &&
          "2.0" === s.jsonrpc
        );
      }
      function isJsonRpcRequest(s) {
        return isJsonRpcPayload(s) && "method" in s;
      }
      function isJsonRpcResponse(s) {
        return isJsonRpcPayload(s) && (isJsonRpcResult(s) || isJsonRpcError(s));
      }
      function isJsonRpcResult(s) {
        return "result" in s;
      }
      function isJsonRpcError(s) {
        return "error" in s;
      }
      let dist_index_es_o = class dist_index_es_o extends index_es_r {
        constructor(s) {
          super(s),
            (this.events = new eA.EventEmitter()),
            (this.hasRegisteredEventListeners = !1),
            (this.connection = this.setConnection(s)),
            this.connection.connected && this.registerEventListeners();
        }
        async connect(s = this.connection) {
          await this.open(s);
        }
        async disconnect() {
          await this.close();
        }
        on(s, x) {
          this.events.on(s, x);
        }
        once(s, x) {
          this.events.once(s, x);
        }
        off(s, x) {
          this.events.off(s, x);
        }
        removeListener(s, x) {
          this.events.removeListener(s, x);
        }
        async request(s, x) {
          return this.requestStrict(
            formatJsonRpcRequest(
              s.method,
              s.params || [],
              s.id || getBigIntRpcId().toString()
            ),
            x
          );
        }
        async requestStrict(s, x) {
          return new Promise(async (W, X) => {
            if (!this.connection.connected)
              try {
                await this.open();
              } catch (s) {
                X(s);
              }
            this.events.on(`${s.id}`, (s) => {
              isJsonRpcError(s) ? X(s.error) : W(s.result);
            });
            try {
              await this.connection.send(s, x);
            } catch (s) {
              X(s);
            }
          });
        }
        setConnection(s = this.connection) {
          return s;
        }
        onPayload(s) {
          this.events.emit("payload", s),
            isJsonRpcResponse(s)
              ? this.events.emit(`${s.id}`, s)
              : this.events.emit("message", { type: s.method, data: s.params });
        }
        onClose(s) {
          s &&
            3e3 === s.code &&
            this.events.emit(
              "error",
              Error(
                `WebSocket connection closed abnormally with code: ${s.code} ${
                  s.reason ? `(${s.reason})` : ""
                }`
              )
            ),
            this.events.emit("disconnect");
        }
        async open(s = this.connection) {
          (this.connection === s && this.connection.connected) ||
            (this.connection.connected && this.close(),
            "string" == typeof s &&
              (await this.connection.open(s), (s = this.connection)),
            (this.connection = this.setConnection(s)),
            await this.connection.open(),
            this.registerEventListeners(),
            this.events.emit("connect"));
        }
        async close() {
          await this.connection.close();
        }
        registerEventListeners() {
          this.hasRegisteredEventListeners ||
            (this.connection.on("payload", (s) => this.onPayload(s)),
            this.connection.on("close", (s) => this.onClose(s)),
            this.connection.on("error", (s) => this.events.emit("error", s)),
            this.connection.on("register_error", (s) => this.onClose()),
            (this.hasRegisteredEventListeners = !0));
        }
      };
      let dist_index_es_w = () =>
          "u" > typeof WebSocket ||
          ("u" > typeof W.g && "u" > typeof W.g.WebSocket) ||
          ("u" > typeof window && "u" > typeof window.WebSocket) ||
          ("u" > typeof self && "u" > typeof self.WebSocket),
        dist_index_es_d = (s) => s.split("?")[0],
        rF =
          "u" > typeof WebSocket
            ? WebSocket
            : "u" > typeof W.g && "u" > typeof W.g.WebSocket
            ? W.g.WebSocket
            : "u" > typeof window && "u" > typeof window.WebSocket
            ? window.WebSocket
            : "u" > typeof self && "u" > typeof self.WebSocket
            ? self.WebSocket
            : W(57026);
      let index_es_f = class index_es_f {
        constructor(s) {
          if (
            ((this.url = s),
            (this.events = new eA.EventEmitter()),
            (this.registering = !1),
            !isWsUrl(s))
          )
            throw Error(
              `Provided URL is not compatible with WebSocket connection: ${s}`
            );
          this.url = s;
        }
        get connected() {
          return "u" > typeof this.socket;
        }
        get connecting() {
          return this.registering;
        }
        on(s, x) {
          this.events.on(s, x);
        }
        once(s, x) {
          this.events.once(s, x);
        }
        off(s, x) {
          this.events.off(s, x);
        }
        removeListener(s, x) {
          this.events.removeListener(s, x);
        }
        async open(s = this.url) {
          await this.register(s);
        }
        async close() {
          return new Promise((s, x) => {
            if (typeof this.socket > "u") {
              x(Error("Connection already closed"));
              return;
            }
            (this.socket.onclose = (x) => {
              this.onClose(x), s();
            }),
              this.socket.close();
          });
        }
        async send(s) {
          typeof this.socket > "u" && (this.socket = await this.register());
          try {
            this.socket.send((0, eD.u)(s));
          } catch (x) {
            this.onError(s.id, x);
          }
        }
        register(s = this.url) {
          if (!isWsUrl(s))
            throw Error(
              `Provided URL is not compatible with WebSocket connection: ${s}`
            );
          if (this.registering) {
            let s = this.events.getMaxListeners();
            return (
              (this.events.listenerCount("register_error") >= s ||
                this.events.listenerCount("open") >= s) &&
                this.events.setMaxListeners(s + 1),
              new Promise((s, x) => {
                this.events.once("register_error", (s) => {
                  this.resetMaxListeners(), x(s);
                }),
                  this.events.once("open", () => {
                    if ((this.resetMaxListeners(), typeof this.socket > "u"))
                      return x(
                        Error("WebSocket connection is missing or invalid")
                      );
                    s(this.socket);
                  });
              })
            );
          }
          return (
            (this.url = s),
            (this.registering = !0),
            new Promise((x, W) => {
              let X = (0, r$.isReactNative)()
                  ? void 0
                  : {
                      rejectUnauthorized: !RegExp(
                        "wss?://localhost(:d{2,5})?"
                      ).test(s),
                    },
                ee = new rF(s, [], X);
              dist_index_es_w()
                ? (ee.onerror = (s) => {
                    W(this.emitError(s.error));
                  })
                : ee.on("error", (s) => {
                    W(this.emitError(s));
                  }),
                (ee.onopen = () => {
                  this.onOpen(ee), x(ee);
                });
            })
          );
        }
        onOpen(s) {
          (s.onmessage = (s) => this.onPayload(s)),
            (s.onclose = (s) => this.onClose(s)),
            (this.socket = s),
            (this.registering = !1),
            this.events.emit("open");
        }
        onClose(s) {
          (this.socket = void 0),
            (this.registering = !1),
            this.events.emit("close", s);
        }
        onPayload(s) {
          if (typeof s.data > "u") return;
          let x = "string" == typeof s.data ? (0, eD.D)(s.data) : s.data;
          this.events.emit("payload", x);
        }
        onError(s, x) {
          let W = this.parseError(x),
            X = W.message || W.toString(),
            ee = formatJsonRpcError(s, X);
          this.events.emit("payload", ee);
        }
        parseError(s, x = this.url) {
          return parseConnectionError(s, dist_index_es_d(x), "WS");
        }
        resetMaxListeners() {
          this.events.getMaxListeners() > 10 && this.events.setMaxListeners(10);
        }
        emitError(s) {
          let x = this.parseError(
            Error(
              s?.message ||
                `WebSocket connection failed for host: ${dist_index_es_d(
                  this.url
                )}`
            )
          );
          return this.events.emit("register_error", x), x;
        }
      };
      var rz = W(72307),
        rH = W.n(rz);
      let rq = "core",
        rV = `wc@2:${rq}:`,
        rW = { logger: "error" },
        rK = { database: ":memory:" },
        rZ = "client_ed25519_seed",
        rG = ek.ONE_DAY,
        rY = ek.SIX_HOURS,
        rQ = "wss://relay.walletconnect.org",
        rJ = {
          message: "relayer_message",
          message_ack: "relayer_message_ack",
          connect: "relayer_connect",
          disconnect: "relayer_disconnect",
          error: "relayer_error",
          connection_stalled: "relayer_connection_stalled",
          publish: "relayer_publish",
        },
        rX = {
          payload: "payload",
          connect: "connect",
          disconnect: "disconnect",
          error: "error",
        },
        r0 = "2.17.5",
        r1 = { link_mode: "link_mode", relay: "relay" },
        r2 = "WALLETCONNECT_LINK_MODE_APPS",
        r3 = {
          created: "subscription_created",
          deleted: "subscription_deleted",
          sync: "subscription_sync",
          resubscribed: "subscription_resubscribed",
        },
        r5 = 1e3 * ek.FIVE_SECONDS,
        r6 = {
          wc_pairingDelete: {
            req: { ttl: ek.ONE_DAY, prompt: !1, tag: 1e3 },
            res: { ttl: ek.ONE_DAY, prompt: !1, tag: 1001 },
          },
          wc_pairingPing: {
            req: { ttl: ek.THIRTY_SECONDS, prompt: !1, tag: 1002 },
            res: { ttl: ek.THIRTY_SECONDS, prompt: !1, tag: 1003 },
          },
          unregistered_method: {
            req: { ttl: ek.ONE_DAY, prompt: !1, tag: 0 },
            res: { ttl: ek.ONE_DAY, prompt: !1, tag: 0 },
          },
        },
        r4 = {
          create: "pairing_create",
          expire: "pairing_expire",
          delete: "pairing_delete",
          ping: "pairing_ping",
        },
        r8 = {
          created: "history_created",
          updated: "history_updated",
          deleted: "history_deleted",
          sync: "history_sync",
        },
        r9 = {
          created: "expirer_created",
          deleted: "expirer_deleted",
          expired: "expirer_expired",
          sync: "expirer_sync",
        },
        r7 = "https://verify.walletconnect.org",
        it = `${r7}/v3`,
        ir = ["https://verify.walletconnect.com", r7],
        io = {
          pairing_started: "pairing_started",
          pairing_uri_validation_success: "pairing_uri_validation_success",
          pairing_uri_not_expired: "pairing_uri_not_expired",
          store_new_pairing: "store_new_pairing",
          subscribing_pairing_topic: "subscribing_pairing_topic",
          subscribe_pairing_topic_success: "subscribe_pairing_topic_success",
          existing_pairing: "existing_pairing",
          pairing_not_expired: "pairing_not_expired",
          emit_inactive_pairing: "emit_inactive_pairing",
          emit_session_proposal: "emit_session_proposal",
        },
        ia = {
          no_internet_connection: "no_internet_connection",
          malformed_pairing_uri: "malformed_pairing_uri",
          active_pairing_already_exists: "active_pairing_already_exists",
          subscribe_pairing_topic_failure: "subscribe_pairing_topic_failure",
          pairing_expired: "pairing_expired",
          proposal_listener_not_found: "proposal_listener_not_found",
        },
        is = {
          session_approve_started: "session_approve_started",
          session_namespaces_validation_success:
            "session_namespaces_validation_success",
          subscribing_session_topic: "subscribing_session_topic",
          subscribe_session_topic_success: "subscribe_session_topic_success",
          publishing_session_approve: "publishing_session_approve",
          session_approve_publish_success: "session_approve_publish_success",
          store_session: "store_session",
          publishing_session_settle: "publishing_session_settle",
          session_settle_publish_success: "session_settle_publish_success",
        },
        il = {
          no_internet_connection: "no_internet_connection",
          proposal_expired: "proposal_expired",
          subscribe_session_topic_failure: "subscribe_session_topic_failure",
          session_approve_publish_failure: "session_approve_publish_failure",
          session_settle_publish_failure: "session_settle_publish_failure",
          session_approve_namespace_validation_failure:
            "session_approve_namespace_validation_failure",
          proposal_not_found: "proposal_not_found",
        },
        ic = {
          authenticated_session_approve_started:
            "authenticated_session_approve_started",
          create_authenticated_session_topic:
            "create_authenticated_session_topic",
          cacaos_verified: "cacaos_verified",
          store_authenticated_session: "store_authenticated_session",
          subscribing_authenticated_session_topic:
            "subscribing_authenticated_session_topic",
          subscribe_authenticated_session_topic_success:
            "subscribe_authenticated_session_topic_success",
          publishing_authenticated_session_approve:
            "publishing_authenticated_session_approve",
        },
        iu = {
          no_internet_connection: "no_internet_connection",
          invalid_cacao: "invalid_cacao",
          subscribe_authenticated_session_topic_failure:
            "subscribe_authenticated_session_topic_failure",
          authenticated_session_approve_publish_failure:
            "authenticated_session_approve_publish_failure",
          authenticated_session_pending_request_not_found:
            "authenticated_session_pending_request_not_found",
        };
      var $s = function (s, x) {
        if (s.length >= 255) throw TypeError("Alphabet too long");
        for (var W = new Uint8Array(256), X = 0; X < W.length; X++) W[X] = 255;
        for (var ee = 0; ee < s.length; ee++) {
          var et = s.charAt(ee),
            er = et.charCodeAt(0);
          if (255 !== W[er]) throw TypeError(et + " is ambiguous");
          W[er] = ee;
        }
        var ei = s.length,
          eo = s.charAt(0),
          ea = Math.log(ei) / Math.log(256),
          es = Math.log(256) / Math.log(ei);
        function y(s) {
          if ("string" != typeof s) throw TypeError("Expected String");
          if (0 === s.length) return new Uint8Array();
          var x = 0;
          if (" " !== s[0]) {
            for (var X = 0, ee = 0; s[x] === eo; ) X++, x++;
            for (
              var et = ((s.length - x) * ea + 1) >>> 0, er = new Uint8Array(et);
              s[x];

            ) {
              var es = W[s.charCodeAt(x)];
              if (255 === es) return;
              for (
                var el = 0, ec = et - 1;
                (0 !== es || el < ee) && -1 !== ec;
                ec--, el++
              )
                (es += (ei * er[ec]) >>> 0),
                  (er[ec] = es % 256 >>> 0),
                  (es = (es / 256) >>> 0);
              if (0 !== es) throw Error("Non-zero carry");
              (ee = el), x++;
            }
            if (" " !== s[x]) {
              for (var eu = et - ee; eu !== et && 0 === er[eu]; ) eu++;
              for (var ed = new Uint8Array(X + (et - eu)), eh = X; eu !== et; )
                ed[eh++] = er[eu++];
              return ed;
            }
          }
        }
        return {
          encode: function (x) {
            if (
              (x instanceof Uint8Array ||
                (ArrayBuffer.isView(x)
                  ? (x = new Uint8Array(x.buffer, x.byteOffset, x.byteLength))
                  : Array.isArray(x) && (x = Uint8Array.from(x))),
              !(x instanceof Uint8Array))
            )
              throw TypeError("Expected Uint8Array");
            if (0 === x.length) return "";
            for (
              var W = 0, X = 0, ee = 0, et = x.length;
              ee !== et && 0 === x[ee];

            )
              ee++, W++;
            for (
              var er = ((et - ee) * es + 1) >>> 0, ea = new Uint8Array(er);
              ee !== et;

            ) {
              for (
                var el = x[ee], ec = 0, eu = er - 1;
                (0 !== el || ec < X) && -1 !== eu;
                eu--, ec++
              )
                (el += (256 * ea[eu]) >>> 0),
                  (ea[eu] = el % ei >>> 0),
                  (el = (el / ei) >>> 0);
              if (0 !== el) throw Error("Non-zero carry");
              (X = ec), ee++;
            }
            for (var ed = er - X; ed !== er && 0 === ea[ed]; ) ed++;
            for (var eh = eo.repeat(W); ed < er; ++ed) eh += s.charAt(ea[ed]);
            return eh;
          },
          decodeUnsafe: y,
          decode: function (s) {
            var W = y(s);
            if (W) return W;
            throw Error(`Non-${x} character`);
          },
        };
      };
      let index_es_Ot = (s) => {
          if (s instanceof Uint8Array && "Uint8Array" === s.constructor.name)
            return s;
          if (s instanceof ArrayBuffer) return new Uint8Array(s);
          if (ArrayBuffer.isView(s))
            return new Uint8Array(s.buffer, s.byteOffset, s.byteLength);
          throw Error("Unknown type, must be binary type");
        },
        ks = (s) => new TextEncoder().encode(s),
        Us = (s) => new TextDecoder().decode(s);
      let Fs = class Fs {
        constructor(s, x, W) {
          (this.name = s), (this.prefix = x), (this.baseEncode = W);
        }
        encode(s) {
          if (s instanceof Uint8Array)
            return `${this.prefix}${this.baseEncode(s)}`;
          throw Error("Unknown type, must be binary type");
        }
      };
      let Ms = class Ms {
        constructor(s, x, W) {
          if (((this.name = s), (this.prefix = x), void 0 === x.codePointAt(0)))
            throw Error("Invalid prefix character");
          (this.prefixCodePoint = x.codePointAt(0)), (this.baseDecode = W);
        }
        decode(s) {
          if ("string" == typeof s) {
            if (s.codePointAt(0) !== this.prefixCodePoint)
              throw Error(
                `Unable to decode multibase string ${JSON.stringify(s)}, ${
                  this.name
                } decoder only supports inputs prefixed with ${this.prefix}`
              );
            return this.baseDecode(s.slice(this.prefix.length));
          }
          throw Error("Can only multibase decode strings");
        }
        or(s) {
          return index_es_At(this, s);
        }
      };
      let Ks = class Ks {
        constructor(s) {
          this.decoders = s;
        }
        or(s) {
          return index_es_At(this, s);
        }
        decode(s) {
          let x = s[0],
            W = this.decoders[x];
          if (W) return W.decode(s);
          throw RangeError(
            `Unable to decode multibase string ${JSON.stringify(
              s
            )}, only inputs prefixed with ${Object.keys(
              this.decoders
            )} are supported`
          );
        }
      };
      let index_es_At = (s, x) =>
        new Ks({
          ...(s.decoders || { [s.prefix]: s }),
          ...(x.decoders || { [x.prefix]: x }),
        });
      let Bs = class Bs {
        constructor(s, x, W, X) {
          (this.name = s),
            (this.prefix = x),
            (this.baseEncode = W),
            (this.baseDecode = X),
            (this.encoder = new Fs(s, x, W)),
            (this.decoder = new Ms(s, x, X));
        }
        encode(s) {
          return this.encoder.encode(s);
        }
        decode(s) {
          return this.decoder.decode(s);
        }
      };
      let ne = ({ name: s, prefix: x, encode: W, decode: X }) =>
          new Bs(s, x, W, X),
        index_es_W = ({ prefix: s, name: x, alphabet: W }) => {
          let { encode: X, decode: ee } = $s(W, x);
          return ne({
            prefix: s,
            name: x,
            encode: X,
            decode: (s) => index_es_Ot(ee(s)),
          });
        },
        Vs = (s, x, W, X) => {
          let ee = {};
          for (let s = 0; s < x.length; ++s) ee[x[s]] = s;
          let et = s.length;
          for (; "=" === s[et - 1]; ) --et;
          let er = new Uint8Array(((et * W) / 8) | 0),
            ei = 0,
            eo = 0,
            ea = 0;
          for (let x = 0; x < et; ++x) {
            let et = ee[s[x]];
            if (void 0 === et) throw SyntaxError(`Non-${X} character`);
            (eo = (eo << W) | et),
              (ei += W) >= 8 && ((ei -= 8), (er[ea++] = 255 & (eo >> ei)));
          }
          if (ei >= W || 255 & (eo << (8 - ei)))
            throw SyntaxError("Unexpected end of data");
          return er;
        },
        js = (s, x, W) => {
          let X = "=" === x[x.length - 1],
            ee = (1 << W) - 1,
            et = "",
            er = 0,
            ei = 0;
          for (let X = 0; X < s.length; ++X)
            for (ei = (ei << 8) | s[X], er += 8; er > W; )
              (er -= W), (et += x[ee & (ei >> er)]);
          if ((er && (et += x[ee & (ei << (W - er))]), X))
            for (; (et.length * W) & 7; ) et += "=";
          return et;
        },
        core_dist_index_es_ = ({
          name: s,
          prefix: x,
          bitsPerChar: W,
          alphabet: X,
        }) =>
          ne({
            prefix: x,
            name: s,
            encode: (s) => js(s, X, W),
            decode: (x) => Vs(x, X, W, s),
          }),
        id = ne({
          prefix: "\x00",
          name: "identity",
          encode: (s) => Us(s),
          decode: (s) => ks(s),
        });
      var ih = Object.freeze({ __proto__: null, identity: id });
      let ip = core_dist_index_es_({
        prefix: "0",
        name: "base2",
        alphabet: "01",
        bitsPerChar: 1,
      });
      var ig = Object.freeze({ __proto__: null, base2: ip });
      let im = core_dist_index_es_({
        prefix: "7",
        name: "base8",
        alphabet: "01234567",
        bitsPerChar: 3,
      });
      var iw = Object.freeze({ __proto__: null, base8: im });
      let ib = index_es_W({
        prefix: "9",
        name: "base10",
        alphabet: "0123456789",
      });
      var iv = Object.freeze({ __proto__: null, base10: ib });
      let iy = core_dist_index_es_({
          prefix: "f",
          name: "base16",
          alphabet: "0123456789abcdef",
          bitsPerChar: 4,
        }),
        i_ = core_dist_index_es_({
          prefix: "F",
          name: "base16upper",
          alphabet: "0123456789ABCDEF",
          bitsPerChar: 4,
        });
      var iC = Object.freeze({ __proto__: null, base16: iy, base16upper: i_ });
      let ix = core_dist_index_es_({
          prefix: "b",
          name: "base32",
          alphabet: "abcdefghijklmnopqrstuvwxyz234567",
          bitsPerChar: 5,
        }),
        iE = core_dist_index_es_({
          prefix: "B",
          name: "base32upper",
          alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
          bitsPerChar: 5,
        }),
        iA = core_dist_index_es_({
          prefix: "c",
          name: "base32pad",
          alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
          bitsPerChar: 5,
        }),
        iS = core_dist_index_es_({
          prefix: "C",
          name: "base32padupper",
          alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
          bitsPerChar: 5,
        }),
        ik = core_dist_index_es_({
          prefix: "v",
          name: "base32hex",
          alphabet: "0123456789abcdefghijklmnopqrstuv",
          bitsPerChar: 5,
        }),
        iT = core_dist_index_es_({
          prefix: "V",
          name: "base32hexupper",
          alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
          bitsPerChar: 5,
        }),
        iI = core_dist_index_es_({
          prefix: "t",
          name: "base32hexpad",
          alphabet: "0123456789abcdefghijklmnopqrstuv=",
          bitsPerChar: 5,
        }),
        iP = core_dist_index_es_({
          prefix: "T",
          name: "base32hexpadupper",
          alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
          bitsPerChar: 5,
        }),
        iR = core_dist_index_es_({
          prefix: "h",
          name: "base32z",
          alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
          bitsPerChar: 5,
        });
      var iN = Object.freeze({
        __proto__: null,
        base32: ix,
        base32upper: iE,
        base32pad: iA,
        base32padupper: iS,
        base32hex: ik,
        base32hexupper: iT,
        base32hexpad: iI,
        base32hexpadupper: iP,
        base32z: iR,
      });
      let iO = index_es_W({
          prefix: "k",
          name: "base36",
          alphabet: "0123456789abcdefghijklmnopqrstuvwxyz",
        }),
        iM = index_es_W({
          prefix: "K",
          name: "base36upper",
          alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
        });
      var iD = Object.freeze({ __proto__: null, base36: iO, base36upper: iM });
      let iB = index_es_W({
          name: "base58btc",
          prefix: "z",
          alphabet:
            "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
        }),
        iL = index_es_W({
          name: "base58flickr",
          prefix: "Z",
          alphabet:
            "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",
        });
      var ij = Object.freeze({
        __proto__: null,
        base58btc: iB,
        base58flickr: iL,
      });
      let iU = core_dist_index_es_({
          prefix: "m",
          name: "base64",
          alphabet:
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          bitsPerChar: 6,
        }),
        i$ = core_dist_index_es_({
          prefix: "M",
          name: "base64pad",
          alphabet:
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
          bitsPerChar: 6,
        }),
        iF = core_dist_index_es_({
          prefix: "u",
          name: "base64url",
          alphabet:
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
          bitsPerChar: 6,
        }),
        iz = core_dist_index_es_({
          prefix: "U",
          name: "base64urlpad",
          alphabet:
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
          bitsPerChar: 6,
        });
      var iH = Object.freeze({
        __proto__: null,
        base64: iU,
        base64pad: i$,
        base64url: iF,
        base64urlpad: iz,
      });
      let iq = Array.from(
          "\uD83D\uDE80\uD83E\uDE90☄\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09☀\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02❤\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09☺\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E✌✨\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D❣\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33✋\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13⭐✅\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6✔\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90☹\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20☝\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B⚽\uD83E\uDD19☕\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81⚡\uD83C\uDF1E\uD83C\uDF88❌✊\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C✈\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74▶➡❓\uD83D\uDC8E\uD83D\uDCB8⬇\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A⚠\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37☎\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51❄\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42"
        ),
        iV = iq.reduce((s, x, W) => ((s[W] = x), s), []),
        iW = iq.reduce((s, x, W) => ((s[x.codePointAt(0)] = W), s), []),
        iK = ne({
          prefix: "\uD83D\uDE80",
          name: "base256emoji",
          encode: function (s) {
            return s.reduce((s, x) => (s += iV[x]), "");
          },
          decode: function (s) {
            let x = [];
            for (let W of s) {
              let s = iW[W.codePointAt(0)];
              if (void 0 === s) throw Error(`Non-base256emoji character: ${W}`);
              x.push(s);
            }
            return new Uint8Array(x);
          },
        });
      var iZ = Object.freeze({ __proto__: null, base256emoji: iK });
      function index_es_Lt(s, x, W) {
        (x = x || []), (W = W || 0);
        for (var X = W; s >= 2147483648; )
          (x[W++] = (255 & s) | 128), (s /= 128);
        for (; -128 & s; ) (x[W++] = (255 & s) | 128), (s >>>= 7);
        return (x[W] = 0 | s), (index_es_Lt.bytes = W - X + 1), x;
      }
      function dist_index_es_e(s, x) {
        var W,
          X = 0,
          x = x || 0,
          ee = 0,
          et = x,
          er = s.length;
        do {
          if (et >= er)
            throw (
              ((dist_index_es_e.bytes = 0),
              RangeError("Could not decode varint"))
            );
          (W = s[et++]),
            (X += ee < 28 ? (127 & W) << ee : (127 & W) * Math.pow(2, ee)),
            (ee += 7);
        } while (W >= 128);
        return (dist_index_es_e.bytes = et - x), X;
      }
      var iG = {
        encode: index_es_Lt,
        decode: dist_index_es_e,
        encodingLength: function (s) {
          return s < 128
            ? 1
            : s < 16384
            ? 2
            : s < 2097152
            ? 3
            : s < 268435456
            ? 4
            : s < 34359738368
            ? 5
            : s < 4398046511104
            ? 6
            : s < 562949953421312
            ? 7
            : s < 72057594037927940
            ? 8
            : s < 0x7fffffffffffffff
            ? 9
            : 10;
        },
      };
      let index_es_Ut = (s, x, W = 0) => (iG.encode(s, x, W), x),
        index_es_Ft = (s) => iG.encodingLength(s),
        index_es_Ee = (s, x) => {
          let W = x.byteLength,
            X = index_es_Ft(s),
            ee = X + index_es_Ft(W),
            et = new Uint8Array(ee + W);
          return (
            index_es_Ut(s, et, 0),
            index_es_Ut(W, et, X),
            et.set(x, ee),
            new index_es_Gr(s, W, x, et)
          );
        };
      let index_es_Gr = class index_es_Gr {
        constructor(s, x, W, X) {
          (this.code = s), (this.size = x), (this.digest = W), (this.bytes = X);
        }
      };
      let index_es_Mt = ({ name: s, code: x, encode: W }) =>
        new index_es_Hr(s, x, W);
      let index_es_Hr = class index_es_Hr {
        constructor(s, x, W) {
          (this.name = s), (this.code = x), (this.encode = W);
        }
        digest(s) {
          if (s instanceof Uint8Array) {
            let x = this.encode(s);
            return x instanceof Uint8Array
              ? index_es_Ee(this.code, x)
              : x.then((s) => index_es_Ee(this.code, s));
          }
          throw Error("Unknown type, must be binary type");
        }
      };
      let index_es_Kt = (s) => async (x) =>
          new Uint8Array(await crypto.subtle.digest(s, x)),
        iY = index_es_Mt({
          name: "sha2-256",
          code: 18,
          encode: index_es_Kt("SHA-256"),
        }),
        iQ = index_es_Mt({
          name: "sha2-512",
          code: 19,
          encode: index_es_Kt("SHA-512"),
        });
      var iJ = Object.freeze({ __proto__: null, sha256: iY, sha512: iQ }),
        iX = Object.freeze({
          __proto__: null,
          identity: {
            code: 0,
            name: "identity",
            encode: index_es_Ot,
            digest: (s) => index_es_Ee(0, index_es_Ot(s)),
          },
        });
      new TextEncoder(), new TextDecoder();
      let i0 = {
        ...ih,
        ...ig,
        ...iw,
        ...iv,
        ...iC,
        ...iN,
        ...iD,
        ...ij,
        ...iH,
        ...iZ,
      };
      function index_es_qt(s, x, W, X) {
        return {
          name: s,
          prefix: x,
          encoder: { name: s, prefix: x, encode: W },
          decoder: { decode: X },
        };
      }
      ({ ...iJ, ...iX });
      let i1 = index_es_qt(
          "utf8",
          "u",
          (s) => "u" + new TextDecoder("utf8").decode(s),
          (s) => new TextEncoder().encode(s.substring(1))
        ),
        i2 = index_es_qt(
          "ascii",
          "a",
          (s) => {
            let x = "a";
            for (let W = 0; W < s.length; W++) x += String.fromCharCode(s[W]);
            return x;
          },
          (s) => {
            s = s.substring(1);
            let x = (function (s = 0) {
              return null != globalThis.Buffer &&
                null != globalThis.Buffer.allocUnsafe
                ? globalThis.Buffer.allocUnsafe(s)
                : new Uint8Array(s);
            })(s.length);
            for (let W = 0; W < s.length; W++) x[W] = s.charCodeAt(W);
            return x;
          }
        ),
        i3 = {
          utf8: i1,
          "utf-8": i1,
          hex: i0.base16,
          latin1: i2,
          ascii: i2,
          binary: i2,
          ...i0,
        };
      let index_es_Ht = class index_es_Ht {
        constructor(s, x) {
          (this.core = s),
            (this.logger = x),
            (this.keychain = new Map()),
            (this.name = "keychain"),
            (this.version = "0.3"),
            (this.initialized = !1),
            (this.storagePrefix = rV),
            (this.init = async () => {
              if (!this.initialized) {
                let s = await this.getKeyChain();
                "u" > typeof s && (this.keychain = s), (this.initialized = !0);
              }
            }),
            (this.has = (s) => (this.isInitialized(), this.keychain.has(s))),
            (this.set = async (s, x) => {
              this.isInitialized(),
                this.keychain.set(s, x),
                await this.persist();
            }),
            (this.get = (s) => {
              this.isInitialized();
              let x = this.keychain.get(s);
              if (typeof x > "u") {
                let { message: x } = dist_index_es_S(
                  "NO_MATCHING_KEY",
                  `${this.name}: ${s}`
                );
                throw Error(x);
              }
              return x;
            }),
            (this.del = async (s) => {
              this.isInitialized(),
                this.keychain.delete(s),
                await this.persist();
            }),
            (this.core = s),
            (this.logger = (0, ej.Ep)(x, this.name));
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        get storageKey() {
          return (
            this.storagePrefix +
            this.version +
            this.core.customStoragePrefix +
            "//" +
            this.name
          );
        }
        async setKeyChain(s) {
          await this.core.storage.setItem(this.storageKey, Ot(s));
        }
        async getKeyChain() {
          let s = await this.core.storage.getItem(this.storageKey);
          return "u" > typeof s ? St(s) : void 0;
        }
        async persist() {
          await this.setKeyChain(this.keychain);
        }
        isInitialized() {
          if (!this.initialized) {
            let { message: s } = dist_index_es_S("NOT_INITIALIZED", this.name);
            throw Error(s);
          }
        }
      };
      let index_es_Yt = class index_es_Yt {
        constructor(s, x, W) {
          (this.core = s),
            (this.logger = x),
            (this.name = "crypto"),
            (this.randomSessionIdentifier = ar()),
            (this.initialized = !1),
            (this.init = async () => {
              this.initialized ||
                (await this.keychain.init(), (this.initialized = !0));
            }),
            (this.hasKeys = (s) => (
              this.isInitialized(), this.keychain.has(s)
            )),
            (this.getClientId = async () => {
              this.isInitialized();
              let s = await this.getClientSeed(),
                x = generateKeyPair(s);
              return encodeIss(x.publicKey);
            }),
            (this.generateKeyPair = () => {
              this.isInitialized();
              let s = (function () {
                let s = rm.Au();
                return {
                  privateKey: to_string_toString(s.secretKey, rI),
                  publicKey: to_string_toString(s.publicKey, rI),
                };
              })();
              return this.setPrivateKey(s.publicKey, s.privateKey);
            }),
            (this.signJWT = async (s) => {
              this.isInitialized();
              let x = await this.getClientSeed(),
                W = generateKeyPair(x),
                X = this.randomSessionIdentifier;
              return await signJWT(X, s, rG, W);
            }),
            (this.generateSharedKey = (s, x, W) => {
              this.isInitialized();
              let X = this.getPrivateKey(s),
                ee = (function (s, x) {
                  let W = rm.gi(
                      from_string_fromString(s, rI),
                      from_string_fromString(x, rI),
                      !0
                    ),
                    X = new rf.t(rg.mE, W).expand(32);
                  return to_string_toString(X, rI);
                })(X, x);
              return this.setSymKey(ee, W);
            }),
            (this.setSymKey = async (s, x) => {
              this.isInitialized();
              let W = x || lr(s);
              return await this.keychain.set(W, s), W;
            }),
            (this.deleteKeyPair = async (s) => {
              this.isInitialized(), await this.keychain.del(s);
            }),
            (this.deleteSymKey = async (s) => {
              this.isInitialized(), await this.keychain.del(s);
            }),
            (this.encode = async (s, x, W) => {
              this.isInitialized();
              let X = En(W),
                ee = (0, eD.u)(x);
              if (2 === X.type)
                return (function (s, x) {
                  let W = from_string_fromString("2", rT),
                    X = (0, e$.randomBytes)(12),
                    ee = from_string_fromString(s, rN);
                  return Ee({ type: W, sealed: ee, iv: X, encoding: x });
                })(ee, W?.encoding);
              if (gr(X)) {
                let x = X.senderPublicKey,
                  W = X.receiverPublicKey;
                s = await this.generateSharedKey(x, W);
              }
              let et = this.getSymKey(s),
                { type: er, senderPublicKey: ei } = X;
              return (function (s) {
                var x;
                let W =
                  ((x = "u" > typeof s.type ? s.type : 0),
                  from_string_fromString(`${x}`, rT));
                if (
                  1 === utils_dist_index_es_C(W) &&
                  typeof s.senderPublicKey > "u"
                )
                  throw Error("Missing sender public key for type 1 envelope");
                let X =
                    "u" > typeof s.senderPublicKey
                      ? from_string_fromString(s.senderPublicKey, rI)
                      : void 0,
                  ee =
                    "u" > typeof s.iv
                      ? from_string_fromString(s.iv, rI)
                      : (0, e$.randomBytes)(12),
                  et = new rp.OK(from_string_fromString(s.symKey, rI)).seal(
                    ee,
                    from_string_fromString(s.message, rN)
                  );
                return Ee({
                  type: W,
                  sealed: et,
                  iv: ee,
                  senderPublicKey: X,
                  encoding: s.encoding,
                });
              })({
                type: er,
                symKey: et,
                message: ee,
                senderPublicKey: ei,
                encoding: W?.encoding,
              });
            }),
            (this.decode = async (s, x, W) => {
              this.isInitialized();
              let X = (function (s, x) {
                let W = Y({ encoded: s, encoding: x?.encoding });
                return En({
                  type: utils_dist_index_es_C(W.type),
                  senderPublicKey:
                    "u" > typeof W.senderPublicKey
                      ? to_string_toString(W.senderPublicKey, rI)
                      : void 0,
                  receiverPublicKey: x?.receiverPublicKey,
                });
              })(x, W);
              if (2 === X.type) {
                let s = (function (s, x) {
                  let { sealed: W } = Y({ encoded: s, encoding: x });
                  return to_string_toString(W, rN);
                })(x, W?.encoding);
                return (0, eD.D)(s);
              }
              if (gr(X)) {
                let x = X.receiverPublicKey,
                  W = X.senderPublicKey;
                s = await this.generateSharedKey(x, W);
              }
              try {
                let X = this.getSymKey(s),
                  ee = (function (s) {
                    let x = new rp.OK(from_string_fromString(s.symKey, rI)),
                      { sealed: W, iv: X } = Y({
                        encoded: s.encoded,
                        encoding: s?.encoding,
                      }),
                      ee = x.open(X, W);
                    if (null === ee) throw Error("Failed to decrypt");
                    return to_string_toString(ee, rN);
                  })({ symKey: X, encoded: x, encoding: W?.encoding });
                return (0, eD.D)(ee);
              } catch (x) {
                this.logger.error(
                  `Failed to decode message from topic: '${s}', clientId: '${await this.getClientId()}'`
                ),
                  this.logger.error(x);
              }
            }),
            (this.getPayloadType = (s, x = rP) => {
              let W = Y({ encoded: s, encoding: x });
              return utils_dist_index_es_C(W.type);
            }),
            (this.getPayloadSenderPublicKey = (s, x = rP) => {
              let W = Y({ encoded: s, encoding: x });
              return W.senderPublicKey
                ? to_string_toString(W.senderPublicKey, rI)
                : void 0;
            }),
            (this.core = s),
            (this.logger = (0, ej.Ep)(x, this.name)),
            (this.keychain = W || new index_es_Ht(this.core, this.logger));
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        async setPrivateKey(s, x) {
          return await this.keychain.set(s, x), s;
        }
        getPrivateKey(s) {
          return this.keychain.get(s);
        }
        async getClientSeed() {
          let s = "";
          try {
            s = this.keychain.get(rZ);
          } catch {
            (s = ar()), await this.keychain.set(rZ, s);
          }
          return (function (s, x = "utf8") {
            let W = i3[x];
            if (!W) throw Error(`Unsupported encoding "${x}"`);
            return ("utf8" === x || "utf-8" === x) &&
              null != globalThis.Buffer &&
              null != globalThis.Buffer.from
              ? globalThis.Buffer.from(s, "utf8")
              : W.decoder.decode(`${W.prefix}${s}`);
          })(s, "base16");
        }
        getSymKey(s) {
          return this.keychain.get(s);
        }
        isInitialized() {
          if (!this.initialized) {
            let { message: s } = dist_index_es_S("NOT_INITIALIZED", this.name);
            throw Error(s);
          }
        }
      };
      let index_es_Jt = class index_es_Jt extends a {
        constructor(s, x) {
          super(s, x),
            (this.logger = s),
            (this.core = x),
            (this.messages = new Map()),
            (this.name = "messages"),
            (this.version = "0.3"),
            (this.initialized = !1),
            (this.storagePrefix = rV),
            (this.init = async () => {
              if (!this.initialized) {
                this.logger.trace("Initialized");
                try {
                  let s = await this.getRelayerMessages();
                  "u" > typeof s && (this.messages = s),
                    this.logger.debug(
                      `Successfully Restored records for ${this.name}`
                    ),
                    this.logger.trace({
                      type: "method",
                      method: "restore",
                      size: this.messages.size,
                    });
                } catch (s) {
                  this.logger.debug(
                    `Failed to Restore records for ${this.name}`
                  ),
                    this.logger.error(s);
                } finally {
                  this.initialized = !0;
                }
              }
            }),
            (this.set = async (s, x) => {
              this.isInitialized();
              let W = dr(x),
                X = this.messages.get(s);
              return (
                typeof X > "u" && (X = {}),
                "u" > typeof X[W] ||
                  ((X[W] = x), this.messages.set(s, X), await this.persist()),
                W
              );
            }),
            (this.get = (s) => {
              this.isInitialized();
              let x = this.messages.get(s);
              return typeof x > "u" && (x = {}), x;
            }),
            (this.has = (s, x) => {
              this.isInitialized();
              let W = this.get(s),
                X = dr(x);
              return "u" > typeof W[X];
            }),
            (this.del = async (s) => {
              this.isInitialized(),
                this.messages.delete(s),
                await this.persist();
            }),
            (this.logger = (0, ej.Ep)(s, this.name)),
            (this.core = x);
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        get storageKey() {
          return (
            this.storagePrefix +
            this.version +
            this.core.customStoragePrefix +
            "//" +
            this.name
          );
        }
        async setRelayerMessages(s) {
          await this.core.storage.setItem(this.storageKey, Ot(s));
        }
        async getRelayerMessages() {
          let s = await this.core.storage.getItem(this.storageKey);
          return "u" > typeof s ? St(s) : void 0;
        }
        async persist() {
          await this.setRelayerMessages(this.messages);
        }
        isInitialized() {
          if (!this.initialized) {
            let { message: s } = dist_index_es_S("NOT_INITIALIZED", this.name);
            throw Error(s);
          }
        }
      };
      var i5 = Object.defineProperty,
        i6 = Object.defineProperties,
        i4 = Object.getOwnPropertyDescriptors,
        i8 = Object.getOwnPropertySymbols,
        i9 = Object.prototype.hasOwnProperty,
        i7 = Object.prototype.propertyIsEnumerable,
        index_es_Wt = (s, x, W) =>
          x in s
            ? i5(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        index_es_Zt = (s, x) => {
          for (var W in x || (x = {})) i9.call(x, W) && index_es_Wt(s, W, x[W]);
          if (i8) for (var W of i8(x)) i7.call(x, W) && index_es_Wt(s, W, x[W]);
          return s;
        },
        index_es_Qt = (s, x) => i6(s, i4(x));
      let index_es_ln = class index_es_ln extends g {
        constructor(s, x) {
          super(s, x),
            (this.relayer = s),
            (this.logger = x),
            (this.events = new eA.EventEmitter()),
            (this.name = "publisher"),
            (this.queue = new Map()),
            (this.publishTimeout = (0, ek.toMiliseconds)(ek.ONE_MINUTE)),
            (this.initialPublishTimeout = (0, ek.toMiliseconds)(
              15 * ek.ONE_SECOND
            )),
            (this.needsTransportRestart = !1),
            (this.publish = async (s, x, W) => {
              var X;
              this.logger.debug("Publishing Payload"),
                this.logger.trace({
                  type: "method",
                  method: "publish",
                  params: { topic: s, message: x, opts: W },
                });
              let ee = W?.ttl || rY,
                et = Nr(W),
                er = W?.prompt || !1,
                ei = W?.tag || 0,
                eo = W?.id || getBigIntRpcId().toString(),
                ea = {
                  topic: s,
                  message: x,
                  opts: {
                    ttl: ee,
                    relay: et,
                    prompt: er,
                    tag: ei,
                    id: eo,
                    attestation: W?.attestation,
                  },
                },
                es = `Failed to publish payload, please try again. id:${eo} tag:${ei}`;
              try {
                let X = new Promise(async (X) => {
                  let w = ({ id: s }) => {
                    ea.opts.id === s &&
                      (this.removeRequestFromQueue(s),
                      this.relayer.events.removeListener(rJ.publish, w),
                      X(ea));
                  };
                  this.relayer.events.on(rJ.publish, w);
                  let et = Pt(
                    new Promise((X, et) => {
                      this.rpcPublish({
                        topic: s,
                        message: x,
                        ttl: ee,
                        prompt: er,
                        tag: ei,
                        id: eo,
                        attestation: W?.attestation,
                      })
                        .then(X)
                        .catch((s) => {
                          this.logger.warn(s, s?.message), et(s);
                        });
                    }),
                    this.initialPublishTimeout,
                    `Failed initial publish, retrying.... id:${eo} tag:${ei}`
                  );
                  try {
                    await et, this.events.removeListener(rJ.publish, w);
                  } catch (s) {
                    this.queue.set(
                      eo,
                      index_es_Qt(index_es_Zt({}, ea), { attempt: 1 })
                    ),
                      this.logger.warn(s, s?.message);
                  }
                });
                this.logger.trace({
                  type: "method",
                  method: "publish",
                  params: { id: eo, topic: s, message: x, opts: W },
                }),
                  await Pt(X, this.publishTimeout, es);
              } catch (s) {
                if (
                  (this.logger.debug("Failed to Publish Payload"),
                  this.logger.error(s),
                  null != (X = W?.internal) && X.throwOnFailedPublish)
                )
                  throw s;
              } finally {
                this.queue.delete(eo);
              }
            }),
            (this.on = (s, x) => {
              this.events.on(s, x);
            }),
            (this.once = (s, x) => {
              this.events.once(s, x);
            }),
            (this.off = (s, x) => {
              this.events.off(s, x);
            }),
            (this.removeListener = (s, x) => {
              this.events.removeListener(s, x);
            }),
            (this.relayer = s),
            (this.logger = (0, ej.Ep)(x, this.name)),
            this.registerEventListeners();
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        async rpcPublish(s) {
          var x, W, X, ee;
          let {
              topic: et,
              message: er,
              ttl: ei = rY,
              prompt: eo,
              tag: ea,
              id: es,
              attestation: el,
            } = s,
            ec = {
              method: Or(Nr().protocol).publish,
              params: {
                topic: et,
                message: er,
                ttl: ei,
                prompt: eo,
                tag: ea,
                attestation: el,
              },
              id: es,
            };
          T(null == (x = ec.params) ? void 0 : x.prompt) &&
            (null == (W = ec.params) || delete W.prompt),
            T(null == (X = ec.params) ? void 0 : X.tag) &&
              (null == (ee = ec.params) || delete ee.tag),
            this.logger.debug("Outgoing Relay Payload"),
            this.logger.trace({
              type: "message",
              direction: "outgoing",
              request: ec,
            });
          let eu = await this.relayer.request(ec);
          return (
            this.relayer.events.emit(rJ.publish, s),
            this.logger.debug("Successfully Published Payload"),
            eu
          );
        }
        removeRequestFromQueue(s) {
          this.queue.delete(s);
        }
        checkQueue() {
          this.queue.forEach(async (s, x) => {
            let W = s.attempt + 1;
            this.queue.set(x, index_es_Qt(index_es_Zt({}, s), { attempt: W }));
            let { topic: X, message: ee, opts: et, attestation: er } = s;
            this.logger.warn(
              {},
              `Publisher: queue->publishing: ${s.opts.id}, tag: ${s.opts.tag}, attempt: ${W}`
            ),
              await this.rpcPublish({
                topic: X,
                message: ee,
                ttl: et.ttl,
                prompt: et.prompt,
                tag: et.tag,
                id: et.id,
                attestation: er,
              }),
              this.logger.warn({}, `Publisher: queue->published: ${s.opts.id}`);
          });
        }
        registerEventListeners() {
          this.relayer.core.heartbeat.on(eI.pulse, () => {
            if (this.needsTransportRestart) {
              (this.needsTransportRestart = !1),
                this.relayer.events.emit(rJ.connection_stalled);
              return;
            }
            this.checkQueue();
          }),
            this.relayer.on(rJ.message_ack, (s) => {
              this.removeRequestFromQueue(s.id.toString());
            });
        }
      };
      let index_es_un = class index_es_un {
        constructor() {
          (this.map = new Map()),
            (this.set = (s, x) => {
              let W = this.get(s);
              this.exists(s, x) || this.map.set(s, [...W, x]);
            }),
            (this.get = (s) => this.map.get(s) || []),
            (this.exists = (s, x) => this.get(s).includes(x)),
            (this.delete = (s, x) => {
              if (typeof x > "u") {
                this.map.delete(s);
                return;
              }
              if (!this.map.has(s)) return;
              let W = this.get(s);
              if (!this.exists(s, x)) return;
              let X = W.filter((s) => s !== x);
              if (!X.length) {
                this.map.delete(s);
                return;
              }
              this.map.set(s, X);
            }),
            (this.clear = () => {
              this.map.clear();
            });
        }
        get topics() {
          return Array.from(this.map.keys());
        }
      };
      var nt = Object.defineProperty,
        nr = Object.defineProperties,
        nn = Object.getOwnPropertyDescriptors,
        no = Object.getOwnPropertySymbols,
        na = Object.prototype.hasOwnProperty,
        ns = Object.prototype.propertyIsEnumerable,
        ti = (s, x, W) =>
          x in s
            ? nt(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        index_es_Z = (s, x) => {
          for (var W in x || (x = {})) na.call(x, W) && ti(s, W, x[W]);
          if (no) for (var W of no(x)) ns.call(x, W) && ti(s, W, x[W]);
          return s;
        },
        Ie = (s, x) => nr(s, nn(x));
      let ii = class ii extends d {
        constructor(s, x) {
          super(s, x),
            (this.relayer = s),
            (this.logger = x),
            (this.subscriptions = new Map()),
            (this.topicMap = new index_es_un()),
            (this.events = new eA.EventEmitter()),
            (this.name = "subscription"),
            (this.version = "0.3"),
            (this.pending = new Map()),
            (this.cached = []),
            (this.initialized = !1),
            (this.pendingSubscriptionWatchLabel = "pending_sub_watch_label"),
            (this.pollingInterval = 20),
            (this.storagePrefix = rV),
            (this.subscribeTimeout = (0, ek.toMiliseconds)(ek.ONE_MINUTE)),
            (this.initialSubscribeTimeout = (0, ek.toMiliseconds)(
              15 * ek.ONE_SECOND
            )),
            (this.batchSubscribeTopicsLimit = 500),
            (this.init = async () => {
              this.initialized ||
                (this.logger.trace("Initialized"),
                this.registerEventListeners(),
                (this.clientId = await this.relayer.core.crypto.getClientId()),
                await this.restore()),
                (this.initialized = !0);
            }),
            (this.subscribe = async (s, x) => {
              this.isInitialized(),
                this.logger.debug("Subscribing Topic"),
                this.logger.trace({
                  type: "method",
                  method: "subscribe",
                  params: { topic: s, opts: x },
                });
              try {
                let W = Nr(x),
                  X = { topic: s, relay: W, transportType: x?.transportType };
                this.pending.set(s, X);
                let ee = await this.rpcSubscribe(s, W, x);
                return (
                  "string" == typeof ee &&
                    (this.onSubscribe(ee, X),
                    this.logger.debug("Successfully Subscribed Topic"),
                    this.logger.trace({
                      type: "method",
                      method: "subscribe",
                      params: { topic: s, opts: x },
                    })),
                  ee
                );
              } catch (s) {
                throw (
                  (this.logger.debug("Failed to Subscribe Topic"),
                  this.logger.error(s),
                  s)
                );
              }
            }),
            (this.unsubscribe = async (s, x) => {
              await this.restartToComplete(),
                this.isInitialized(),
                "u" > typeof x?.id
                  ? await this.unsubscribeById(s, x.id, x)
                  : await this.unsubscribeByTopic(s, x);
            }),
            (this.isSubscribed = async (s) => {
              if (this.topics.includes(s)) return !0;
              let x = `${this.pendingSubscriptionWatchLabel}_${s}`;
              return await new Promise((W, X) => {
                let ee = new ek.Watch();
                ee.start(x);
                let et = setInterval(() => {
                  ((!this.pending.has(s) && this.topics.includes(s)) ||
                    this.cached.some((x) => x.topic === s)) &&
                    (clearInterval(et), ee.stop(x), W(!0)),
                    ee.elapsed(x) >= r5 &&
                      (clearInterval(et),
                      ee.stop(x),
                      X(Error("Subscription resolution timeout")));
                }, this.pollingInterval);
              }).catch(() => !1);
            }),
            (this.on = (s, x) => {
              this.events.on(s, x);
            }),
            (this.once = (s, x) => {
              this.events.once(s, x);
            }),
            (this.off = (s, x) => {
              this.events.off(s, x);
            }),
            (this.removeListener = (s, x) => {
              this.events.removeListener(s, x);
            }),
            (this.start = async () => {
              await this.onConnect();
            }),
            (this.stop = async () => {
              await this.onDisconnect();
            }),
            (this.restart = async () => {
              await this.restore(), await this.onRestart();
            }),
            (this.checkPending = async () => {
              if (
                0 === this.pending.size &&
                (!this.initialized || !this.relayer.connected)
              )
                return;
              let s = [];
              this.pending.forEach((x) => {
                s.push(x);
              }),
                await this.batchSubscribe(s);
            }),
            (this.registerEventListeners = () => {
              this.relayer.core.heartbeat.on(eI.pulse, async () => {
                await this.checkPending();
              }),
                this.events.on(r3.created, async (s) => {
                  let x = r3.created;
                  this.logger.info(`Emitting ${x}`),
                    this.logger.debug({ type: "event", event: x, data: s }),
                    await this.persist();
                }),
                this.events.on(r3.deleted, async (s) => {
                  let x = r3.deleted;
                  this.logger.info(`Emitting ${x}`),
                    this.logger.debug({ type: "event", event: x, data: s }),
                    await this.persist();
                });
            }),
            (this.relayer = s),
            (this.logger = (0, ej.Ep)(x, this.name)),
            (this.clientId = "");
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        get storageKey() {
          return (
            this.storagePrefix +
            this.version +
            this.relayer.core.customStoragePrefix +
            "//" +
            this.name
          );
        }
        get length() {
          return this.subscriptions.size;
        }
        get ids() {
          return Array.from(this.subscriptions.keys());
        }
        get values() {
          return Array.from(this.subscriptions.values());
        }
        get topics() {
          return this.topicMap.topics;
        }
        hasSubscription(s, x) {
          let W = !1;
          try {
            W = this.getSubscription(s).topic === x;
          } catch {}
          return W;
        }
        reset() {
          (this.cached = []), (this.initialized = !0);
        }
        onDisable() {
          (this.cached = this.values),
            this.subscriptions.clear(),
            this.topicMap.clear();
        }
        async unsubscribeByTopic(s, x) {
          let W = this.topicMap.get(s);
          await Promise.all(
            W.map(async (W) => await this.unsubscribeById(s, W, x))
          );
        }
        async unsubscribeById(s, x, W) {
          this.logger.debug("Unsubscribing Topic"),
            this.logger.trace({
              type: "method",
              method: "unsubscribe",
              params: { topic: s, id: x, opts: W },
            });
          try {
            let X = Nr(W);
            await this.rpcUnsubscribe(s, x, X);
            let ee = dist_index_es_("USER_DISCONNECTED", `${this.name}, ${s}`);
            await this.onUnsubscribe(s, x, ee),
              this.logger.debug("Successfully Unsubscribed Topic"),
              this.logger.trace({
                type: "method",
                method: "unsubscribe",
                params: { topic: s, id: x, opts: W },
              });
          } catch (s) {
            throw (
              (this.logger.debug("Failed to Unsubscribe Topic"),
              this.logger.error(s),
              s)
            );
          }
        }
        async rpcSubscribe(s, x, W) {
          var X;
          W?.transportType === r1.relay && (await this.restartToComplete());
          let ee = { method: Or(x.protocol).subscribe, params: { topic: s } };
          this.logger.debug("Outgoing Relay Payload"),
            this.logger.trace({
              type: "payload",
              direction: "outgoing",
              request: ee,
            });
          let et = null == (X = W?.internal) ? void 0 : X.throwOnFailedPublish;
          try {
            let x = this.getSubscriptionId(s);
            if (W?.transportType === r1.link_mode)
              return (
                setTimeout(() => {
                  (this.relayer.connected || this.relayer.connecting) &&
                    this.relayer.request(ee).catch((s) => this.logger.warn(s));
                }, (0, ek.toMiliseconds)(ek.ONE_SECOND)),
                x
              );
            let X = new Promise(async (x) => {
                let d = (W) => {
                  W.topic === s &&
                    (this.events.removeListener(r3.created, d), x(W.id));
                };
                this.events.on(r3.created, d);
                try {
                  let W = await Pt(
                    new Promise((s, x) => {
                      this.relayer
                        .request(ee)
                        .catch((s) => {
                          this.logger.warn(s, s?.message), x(s);
                        })
                        .then(s);
                    }),
                    this.initialSubscribeTimeout,
                    `Subscribing to ${s} failed, please try again`
                  );
                  this.events.removeListener(r3.created, d), x(W);
                } catch {}
              }),
              er = await Pt(
                X,
                this.subscribeTimeout,
                `Subscribing to ${s} failed, please try again`
              );
            if (!er && et)
              throw Error(`Subscribing to ${s} failed, please try again`);
            return er ? x : null;
          } catch (s) {
            if (
              (this.logger.debug("Outgoing Relay Subscribe Payload stalled"),
              this.relayer.events.emit(rJ.connection_stalled),
              et)
            )
              throw s;
          }
          return null;
        }
        async rpcBatchSubscribe(s) {
          if (!s.length) return;
          let x = s[0].relay,
            W = {
              method: Or(x.protocol).batchSubscribe,
              params: { topics: s.map((s) => s.topic) },
            };
          this.logger.debug("Outgoing Relay Payload"),
            this.logger.trace({
              type: "payload",
              direction: "outgoing",
              request: W,
            });
          try {
            await await Pt(
              new Promise((s) => {
                this.relayer
                  .request(W)
                  .catch((s) => this.logger.warn(s))
                  .then(s);
              }),
              this.subscribeTimeout,
              "rpcBatchSubscribe failed, please try again"
            );
          } catch {
            this.relayer.events.emit(rJ.connection_stalled);
          }
        }
        async rpcBatchFetchMessages(s) {
          let x;
          if (!s.length) return;
          let W = s[0].relay,
            X = {
              method: Or(W.protocol).batchFetchMessages,
              params: { topics: s.map((s) => s.topic) },
            };
          this.logger.debug("Outgoing Relay Payload"),
            this.logger.trace({
              type: "payload",
              direction: "outgoing",
              request: X,
            });
          try {
            x = await await Pt(
              new Promise((s, x) => {
                this.relayer
                  .request(X)
                  .catch((s) => {
                    this.logger.warn(s), x(s);
                  })
                  .then(s);
              }),
              this.subscribeTimeout,
              "rpcBatchFetchMessages failed, please try again"
            );
          } catch {
            this.relayer.events.emit(rJ.connection_stalled);
          }
          return x;
        }
        rpcUnsubscribe(s, x, W) {
          let X = {
            method: Or(W.protocol).unsubscribe,
            params: { topic: s, id: x },
          };
          return (
            this.logger.debug("Outgoing Relay Payload"),
            this.logger.trace({
              type: "payload",
              direction: "outgoing",
              request: X,
            }),
            this.relayer.request(X)
          );
        }
        onSubscribe(s, x) {
          this.setSubscription(s, Ie(index_es_Z({}, x), { id: s })),
            this.pending.delete(x.topic);
        }
        onBatchSubscribe(s) {
          s.length &&
            s.forEach((s) => {
              this.setSubscription(s.id, index_es_Z({}, s)),
                this.pending.delete(s.topic);
            });
        }
        async onUnsubscribe(s, x, W) {
          this.events.removeAllListeners(x),
            this.hasSubscription(x, s) && this.deleteSubscription(x, W),
            await this.relayer.messages.del(s);
        }
        async setRelayerSubscriptions(s) {
          await this.relayer.core.storage.setItem(this.storageKey, s);
        }
        async getRelayerSubscriptions() {
          return await this.relayer.core.storage.getItem(this.storageKey);
        }
        setSubscription(s, x) {
          this.logger.debug("Setting subscription"),
            this.logger.trace({
              type: "method",
              method: "setSubscription",
              id: s,
              subscription: x,
            }),
            this.addSubscription(s, x);
        }
        addSubscription(s, x) {
          this.subscriptions.set(s, index_es_Z({}, x)),
            this.topicMap.set(x.topic, s),
            this.events.emit(r3.created, x);
        }
        getSubscription(s) {
          this.logger.debug("Getting subscription"),
            this.logger.trace({
              type: "method",
              method: "getSubscription",
              id: s,
            });
          let x = this.subscriptions.get(s);
          if (!x) {
            let { message: x } = dist_index_es_S(
              "NO_MATCHING_KEY",
              `${this.name}: ${s}`
            );
            throw Error(x);
          }
          return x;
        }
        deleteSubscription(s, x) {
          this.logger.debug("Deleting subscription"),
            this.logger.trace({
              type: "method",
              method: "deleteSubscription",
              id: s,
              reason: x,
            });
          let W = this.getSubscription(s);
          this.subscriptions.delete(s),
            this.topicMap.delete(W.topic, s),
            this.events.emit(r3.deleted, Ie(index_es_Z({}, W), { reason: x }));
        }
        async persist() {
          await this.setRelayerSubscriptions(this.values),
            this.events.emit(r3.sync);
        }
        async onRestart() {
          if (this.cached.length) {
            let s = [...this.cached],
              x = Math.ceil(
                this.cached.length / this.batchSubscribeTopicsLimit
              );
            for (let W = 0; W < x; W++) {
              let x = s.splice(0, this.batchSubscribeTopicsLimit);
              await this.batchSubscribe(x);
            }
          }
          this.events.emit(r3.resubscribed);
        }
        async restore() {
          try {
            let s = await this.getRelayerSubscriptions();
            if (typeof s > "u" || !s.length) return;
            if (this.subscriptions.size) {
              let { message: s } = dist_index_es_S(
                "RESTORE_WILL_OVERRIDE",
                this.name
              );
              throw (
                (this.logger.error(s),
                this.logger.error(
                  `${this.name}: ${JSON.stringify(this.values)}`
                ),
                Error(s))
              );
            }
            (this.cached = s),
              this.logger.debug(
                `Successfully Restored subscriptions for ${this.name}`
              ),
              this.logger.trace({
                type: "method",
                method: "restore",
                subscriptions: this.values,
              });
          } catch (s) {
            this.logger.debug(
              `Failed to Restore subscriptions for ${this.name}`
            ),
              this.logger.error(s);
          }
        }
        async batchSubscribe(s) {
          s.length &&
            (await this.rpcBatchSubscribe(s),
            this.onBatchSubscribe(
              s.map((s) =>
                Ie(index_es_Z({}, s), { id: this.getSubscriptionId(s.topic) })
              )
            ));
        }
        async batchFetchMessages(s) {
          var x;
          if (!s.length) return;
          this.logger.trace(
            `Fetching batch messages for ${s.length} subscriptions`
          );
          let W = await this.rpcBatchFetchMessages(s);
          W &&
            W.messages &&
            (await ((x = (0, ek.toMiliseconds)(ek.ONE_SECOND)),
            new Promise((s) => setTimeout(s, x))),
            await this.relayer.handleBatchMessageEvents(W.messages));
        }
        async onConnect() {
          await this.restart(), this.reset();
        }
        onDisconnect() {
          this.onDisable();
        }
        isInitialized() {
          if (!this.initialized) {
            let { message: s } = dist_index_es_S("NOT_INITIALIZED", this.name);
            throw Error(s);
          }
        }
        async restartToComplete() {
          this.relayer.connected ||
            this.relayer.connecting ||
            (await this.relayer.transportOpen());
        }
        getSubscriptionId(s) {
          return dr(s + this.clientId);
        }
      };
      var nl = Object.defineProperty,
        nc = Object.getOwnPropertySymbols,
        nu = Object.prototype.hasOwnProperty,
        nd = Object.prototype.propertyIsEnumerable,
        ri = (s, x, W) =>
          x in s
            ? nl(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        ni = (s, x) => {
          for (var W in x || (x = {})) nu.call(x, W) && ri(s, W, x[W]);
          if (nc) for (var W of nc(x)) nd.call(x, W) && ri(s, W, x[W]);
          return s;
        };
      let oi = class oi extends u {
        constructor(s) {
          super(s),
            (this.protocol = "wc"),
            (this.version = 2),
            (this.events = new eA.EventEmitter()),
            (this.name = "relayer"),
            (this.transportExplicitlyClosed = !1),
            (this.initialized = !1),
            (this.connectionAttemptInProgress = !1),
            (this.hasExperiencedNetworkDisruption = !1),
            (this.heartBeatTimeout = (0, ek.toMiliseconds)(
              ek.THIRTY_SECONDS + ek.FIVE_SECONDS
            )),
            (this.requestsInFlight = []),
            (this.connectTimeout = (0, ek.toMiliseconds)(15 * ek.ONE_SECOND)),
            (this.request = async (s) => {
              var x, W;
              this.logger.debug("Publishing Request Payload");
              let X = s.id || getBigIntRpcId().toString();
              await this.toEstablishConnection();
              try {
                this.logger.trace(
                  {
                    id: X,
                    method: s.method,
                    topic: null == (x = s.params) ? void 0 : x.topic,
                  },
                  "relayer.request - publishing..."
                );
                let ee = `${X}:${
                  (null == (W = s.params) ? void 0 : W.tag) || ""
                }`;
                this.requestsInFlight.push(ee);
                let et = await this.provider.request(s);
                return (
                  (this.requestsInFlight = this.requestsInFlight.filter(
                    (s) => s !== ee
                  )),
                  et
                );
              } catch (s) {
                throw (this.logger.debug(`Failed to Publish Request: ${X}`), s);
              }
            }),
            (this.resetPingTimeout = () => {
              if (ie())
                try {
                  clearTimeout(this.pingTimeout),
                    (this.pingTimeout = setTimeout(() => {
                      var s, x, W;
                      this.logger.debug(
                        {},
                        "pingTimeout: Connection stalled, terminating..."
                      ),
                        null ==
                          (W =
                            null ==
                            (x =
                              null == (s = this.provider)
                                ? void 0
                                : s.connection)
                              ? void 0
                              : x.socket) || W.terminate();
                    }, this.heartBeatTimeout));
                } catch (s) {
                  this.logger.warn(s, s?.message);
                }
            }),
            (this.onPayloadHandler = (s) => {
              this.onProviderPayload(s), this.resetPingTimeout();
            }),
            (this.onConnectHandler = () => {
              this.logger.warn({}, "Relayer connected \uD83D\uDEDC"),
                this.startPingTimeout(),
                this.events.emit(rJ.connect);
            }),
            (this.onDisconnectHandler = () => {
              this.logger.warn({}, "Relayer disconnected \uD83D\uDED1"),
                (this.requestsInFlight = []),
                this.onProviderDisconnect();
            }),
            (this.onProviderErrorHandler = (s) => {
              this.logger.fatal(s, `Fatal socket error: ${s?.message}`),
                this.events.emit(rJ.error, s),
                this.logger.fatal(
                  "Fatal socket error received, closing transport"
                ),
                this.transportClose();
            }),
            (this.registerProviderListeners = () => {
              this.provider.on(rX.payload, this.onPayloadHandler),
                this.provider.on(rX.connect, this.onConnectHandler),
                this.provider.on(rX.disconnect, this.onDisconnectHandler),
                this.provider.on(rX.error, this.onProviderErrorHandler);
            }),
            (this.core = s.core),
            (this.logger =
              "u" > typeof s.logger && "string" != typeof s.logger
                ? (0, ej.Ep)(s.logger, this.name)
                : (0, ej.gw)((0, ej.jI)({ level: s.logger || "error" }))),
            (this.messages = new index_es_Jt(this.logger, s.core)),
            (this.subscriber = new ii(this, this.logger)),
            (this.publisher = new index_es_ln(this, this.logger)),
            (this.relayUrl = s?.relayUrl || rQ),
            (this.projectId = s.projectId),
            index_es_R() &&
            "u" > typeof W.g &&
            "u" > typeof (null == W.g ? void 0 : W.g.Platform) &&
            (null == W.g ? void 0 : W.g.Platform.OS) === "android"
              ? (this.packageName = yt())
              : index_es_R() &&
                "u" > typeof W.g &&
                "u" > typeof (null == W.g ? void 0 : W.g.Platform) &&
                (null == W.g ? void 0 : W.g.Platform.OS) === "ios" &&
                (this.bundleId = yt()),
            (this.provider = {});
        }
        async init() {
          if (
            (this.logger.trace("Initialized"),
            this.registerEventListeners(),
            await Promise.all([this.messages.init(), this.subscriber.init()]),
            (this.initialized = !0),
            this.subscriber.cached.length > 0)
          )
            try {
              await this.transportOpen();
            } catch (s) {
              this.logger.warn(s, s?.message);
            }
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        get connected() {
          var s, x, W;
          return (
            (null ==
            (W =
              null == (x = null == (s = this.provider) ? void 0 : s.connection)
                ? void 0
                : x.socket)
              ? void 0
              : W.readyState) === 1
          );
        }
        get connecting() {
          var s, x, W;
          return (
            (null ==
            (W =
              null == (x = null == (s = this.provider) ? void 0 : s.connection)
                ? void 0
                : x.socket)
              ? void 0
              : W.readyState) === 0
          );
        }
        async publish(s, x, W) {
          this.isInitialized(),
            await this.publisher.publish(s, x, W),
            await this.recordMessageEvent({
              topic: s,
              message: x,
              publishedAt: Date.now(),
              transportType: r1.relay,
            });
        }
        async subscribe(s, x) {
          var W, X, ee;
          this.isInitialized(),
            (null != x && x.transportType && x?.transportType !== "relay") ||
              (await this.toEstablishConnection());
          let et =
              typeof (null == (W = x?.internal)
                ? void 0
                : W.throwOnFailedPublish) > "u" ||
              (null == (X = x?.internal) ? void 0 : X.throwOnFailedPublish),
            er =
              (null == (ee = this.subscriber.topicMap.get(s))
                ? void 0
                : ee[0]) || "",
            ei,
            h = (x) => {
              x.topic === s && (this.subscriber.off(r3.created, h), ei());
            };
          return (
            await Promise.all([
              new Promise((s) => {
                (ei = s), this.subscriber.on(r3.created, h);
              }),
              new Promise(async (W, X) => {
                (er =
                  (await this.subscriber
                    .subscribe(
                      s,
                      ni({ internal: { throwOnFailedPublish: et } }, x)
                    )
                    .catch((s) => {
                      et && X(s);
                    })) || er),
                  W();
              }),
            ]),
            er
          );
        }
        async unsubscribe(s, x) {
          this.isInitialized(), await this.subscriber.unsubscribe(s, x);
        }
        on(s, x) {
          this.events.on(s, x);
        }
        once(s, x) {
          this.events.once(s, x);
        }
        off(s, x) {
          this.events.off(s, x);
        }
        removeListener(s, x) {
          this.events.removeListener(s, x);
        }
        async transportDisconnect() {
          this.provider.disconnect &&
          (this.hasExperiencedNetworkDisruption || this.connected)
            ? await Pt(
                this.provider.disconnect(),
                2e3,
                "provider.disconnect()"
              ).catch(() => this.onProviderDisconnect())
            : this.onProviderDisconnect();
        }
        async transportClose() {
          (this.transportExplicitlyClosed = !0),
            await this.transportDisconnect();
        }
        async transportOpen(s) {
          if (
            (this.connectPromise
              ? (this.logger.debug(
                  {},
                  "Waiting for existing connection attempt to resolve..."
                ),
                await this.connectPromise,
                this.logger.debug({}, "Existing connection attempt resolved"))
              : ((this.connectPromise = new Promise(async (x, W) => {
                  await this.connect(s)
                    .then(x)
                    .catch(W)
                    .finally(() => {
                      this.connectPromise = void 0;
                    });
                })),
                await this.connectPromise),
            !this.connected)
          )
            throw Error(
              `Couldn't establish socket connection to the relay server: ${this.relayUrl}`
            );
        }
        async restartTransport(s) {
          this.logger.debug({}, "Restarting transport..."),
            this.connectionAttemptInProgress ||
              ((this.relayUrl = s || this.relayUrl),
              await this.confirmOnlineStateOrThrow(),
              await this.transportClose(),
              await this.transportOpen());
        }
        async confirmOnlineStateOrThrow() {
          if (!(await to()))
            throw Error(
              "No internet connection detected. Please restart your network and try again."
            );
        }
        async handleBatchMessageEvents(s) {
          if (s?.length === 0) {
            this.logger.trace("Batch message events is empty. Ignoring...");
            return;
          }
          let x = s.sort((s, x) => s.publishedAt - x.publishedAt);
          for (let s of (this.logger.debug(
            `Batch of ${x.length} message events sorted`
          ),
          x))
            try {
              await this.onMessageEvent(s);
            } catch (s) {
              this.logger.warn(
                s,
                "Error while processing batch message event: " + s?.message
              );
            }
          this.logger.trace(`Batch of ${x.length} message events processed`);
        }
        async onLinkMessageEvent(s, x) {
          let { topic: W } = s;
          if (!x.sessionExists) {
            let s = Ut(ek.FIVE_MINUTES);
            await this.core.pairing.pairings.set(W, {
              topic: W,
              expiry: s,
              relay: { protocol: "irn" },
              active: !1,
            });
          }
          this.events.emit(rJ.message, s), await this.recordMessageEvent(s);
        }
        async connect(s) {
          await this.confirmOnlineStateOrThrow(),
            s &&
              s !== this.relayUrl &&
              ((this.relayUrl = s), await this.transportDisconnect()),
            (this.connectionAttemptInProgress = !0),
            (this.transportExplicitlyClosed = !1);
          let x = 1;
          for (; x < 6; ) {
            try {
              this.logger.debug(
                {},
                `Connecting to ${this.relayUrl}, attempt: ${x}...`
              ),
                await this.createProvider(),
                await new Promise(async (s, x) => {
                  let r = () => {
                    x(
                      Error("Connection interrupted while trying to subscribe")
                    );
                  };
                  this.provider.once(rX.disconnect, r),
                    await Pt(
                      new Promise((s, x) => {
                        this.provider.connect().then(s).catch(x);
                      }),
                      this.connectTimeout,
                      `Socket stalled when trying to connect to ${this.relayUrl}`
                    )
                      .catch((s) => {
                        x(s);
                      })
                      .finally(() => {
                        this.provider.off(rX.disconnect, r),
                          clearTimeout(this.reconnectTimeout),
                          (this.reconnectTimeout = void 0);
                      }),
                    await new Promise(async (s, x) => {
                      let c = () => {
                        x(
                          Error(
                            "Connection interrupted while trying to subscribe"
                          )
                        );
                      };
                      this.provider.once(rX.disconnect, c),
                        await this.subscriber
                          .start()
                          .then(s)
                          .catch(x)
                          .finally(() => {
                            this.provider.off(rX.disconnect, c);
                          });
                    }),
                    (this.hasExperiencedNetworkDisruption = !1),
                    s();
                });
            } catch (s) {
              await this.subscriber.stop(),
                this.logger.warn({}, s.message),
                (this.hasExperiencedNetworkDisruption = !0);
            } finally {
              this.connectionAttemptInProgress = !1;
            }
            if (this.connected) {
              this.logger.debug(
                {},
                `Connected to ${this.relayUrl} successfully on attempt: ${x}`
              );
              break;
            }
            await new Promise((s) =>
              setTimeout(s, (0, ek.toMiliseconds)(1 * x))
            ),
              x++;
          }
        }
        startPingTimeout() {
          var s, x, W, X, ee;
          if (ie())
            try {
              null !=
                (x = null == (s = this.provider) ? void 0 : s.connection) &&
                x.socket &&
                (null ==
                  (ee =
                    null ==
                    (X = null == (W = this.provider) ? void 0 : W.connection)
                      ? void 0
                      : X.socket) ||
                  ee.on("ping", () => {
                    this.resetPingTimeout();
                  })),
                this.resetPingTimeout();
            } catch (s) {
              this.logger.warn(s, s?.message);
            }
        }
        async createProvider() {
          this.provider.connection && this.unregisterProviderListeners();
          let s = await this.core.crypto.signJWT(this.relayUrl);
          (this.provider = new dist_index_es_o(
            new index_es_f(
              (function ({
                protocol: s,
                version: x,
                relayUrl: W,
                sdkVersion: X,
                auth: ee,
                projectId: et,
                useOnCloseEvent: er,
                bundleId: ei,
                packageName: eo,
              }) {
                let ea = W.split("?"),
                  es = He(s, x, X),
                  el = (function (s, x) {
                    let W = new URLSearchParams(s);
                    for (let s of Object.keys(x).sort())
                      if (x.hasOwnProperty(s)) {
                        let X = x[s];
                        void 0 !== X && W.set(s, X);
                      }
                    return W.toString();
                  })(ea[1] || "", {
                    auth: ee,
                    ua: es,
                    projectId: et,
                    useOnCloseEvent: er || void 0,
                    packageName: eo || void 0,
                    bundleId: ei || void 0,
                  });
                return ea[0] + "?" + el;
              })({
                sdkVersion: r0,
                protocol: this.protocol,
                version: this.version,
                relayUrl: this.relayUrl,
                projectId: this.projectId,
                auth: s,
                useOnCloseEvent: !0,
                bundleId: this.bundleId,
                packageName: this.packageName,
              })
            )
          )),
            this.registerProviderListeners();
        }
        async recordMessageEvent(s) {
          let { topic: x, message: W } = s;
          await this.messages.set(x, W);
        }
        async shouldIgnoreMessageEvent(s) {
          let { topic: x, message: W } = s;
          if (!W || 0 === W.length)
            return this.logger.warn(`Ignoring invalid/empty message: ${W}`), !0;
          if (!(await this.subscriber.isSubscribed(x)))
            return (
              this.logger.warn(
                `Ignoring message for non-subscribed topic ${x}`
              ),
              !0
            );
          let X = this.messages.has(x, W);
          return X && this.logger.warn(`Ignoring duplicate message: ${W}`), X;
        }
        async onProviderPayload(s) {
          if (
            (this.logger.debug("Incoming Relay Payload"),
            this.logger.trace({
              type: "payload",
              direction: "incoming",
              payload: s,
            }),
            isJsonRpcRequest(s))
          ) {
            if (!s.method.endsWith("_subscription")) return;
            let x = s.params,
              {
                topic: W,
                message: X,
                publishedAt: ee,
                attestation: et,
              } = x.data,
              er = {
                topic: W,
                message: X,
                publishedAt: ee,
                transportType: r1.relay,
                attestation: et,
              };
            this.logger.debug("Emitting Relayer Payload"),
              this.logger.trace(ni({ type: "event", event: x.id }, er)),
              this.events.emit(x.id, er),
              await this.acknowledgePayload(s),
              await this.onMessageEvent(er);
          } else isJsonRpcResponse(s) && this.events.emit(rJ.message_ack, s);
        }
        async onMessageEvent(s) {
          (await this.shouldIgnoreMessageEvent(s)) ||
            (this.events.emit(rJ.message, s), await this.recordMessageEvent(s));
        }
        async acknowledgePayload(s) {
          let x = formatJsonRpcResult(s.id, !0);
          await this.provider.connection.send(x);
        }
        unregisterProviderListeners() {
          this.provider.off(rX.payload, this.onPayloadHandler),
            this.provider.off(rX.connect, this.onConnectHandler),
            this.provider.off(rX.disconnect, this.onDisconnectHandler),
            this.provider.off(rX.error, this.onProviderErrorHandler),
            clearTimeout(this.pingTimeout);
        }
        async registerEventListeners() {
          let s = await to();
          !(function (s) {
            switch (A()) {
              case r_.browser:
                !index_es_R() &&
                  V() &&
                  (window.addEventListener("online", () => s(!0)),
                  window.addEventListener("offline", () => s(!1)));
                break;
              case r_.reactNative:
                index_es_R() &&
                  "u" > typeof W.g &&
                  null != W.g &&
                  W.g.NetInfo &&
                  W.g?.NetInfo.addEventListener((x) => s(x?.isConnected));
              case r_.node:
            }
          })(async (x) => {
            s !== x &&
              ((s = x),
              x
                ? await this.transportOpen().catch((s) =>
                    this.logger.error(s, s?.message)
                  )
                : ((this.hasExperiencedNetworkDisruption = !0),
                  await this.transportDisconnect(),
                  (this.transportExplicitlyClosed = !1)));
          });
        }
        async onProviderDisconnect() {
          await this.subscriber.stop(),
            clearTimeout(this.pingTimeout),
            this.events.emit(rJ.disconnect),
            (this.connectionAttemptInProgress = !1),
            !this.transportExplicitlyClosed &&
              (this.reconnectTimeout ||
                this.connectPromise ||
                (this.reconnectTimeout = setTimeout(async () => {
                  clearTimeout(this.reconnectTimeout),
                    await this.transportOpen().catch((s) =>
                      this.logger.error(s, s?.message)
                    );
                }, (0, ek.toMiliseconds)(0.1))));
        }
        isInitialized() {
          if (!this.initialized) {
            let { message: s } = dist_index_es_S("NOT_INITIALIZED", this.name);
            throw Error(s);
          }
        }
        async toEstablishConnection() {
          await this.confirmOnlineStateOrThrow(),
            this.connected || (await this.transportOpen());
        }
      };
      var nh = Object.defineProperty,
        np = Object.getOwnPropertySymbols,
        nf = Object.prototype.hasOwnProperty,
        ng = Object.prototype.propertyIsEnumerable,
        ci = (s, x, W) =>
          x in s
            ? nh(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        hi = (s, x) => {
          for (var W in x || (x = {})) nf.call(x, W) && ci(s, W, x[W]);
          if (np) for (var W of np(x)) ng.call(x, W) && ci(s, W, x[W]);
          return s;
        };
      let li = class li extends p {
        constructor(s, x, W, X = rV, ee) {
          super(s, x, W, X),
            (this.core = s),
            (this.logger = x),
            (this.name = W),
            (this.map = new Map()),
            (this.version = "0.3"),
            (this.cached = []),
            (this.initialized = !1),
            (this.storagePrefix = rV),
            (this.recentlyDeleted = []),
            (this.recentlyDeletedLimit = 200),
            (this.init = async () => {
              this.initialized ||
                (this.logger.trace("Initialized"),
                await this.restore(),
                this.cached.forEach((s) => {
                  var x;
                  this.getKey && null !== s && !T(s)
                    ? this.map.set(this.getKey(s), s)
                    : (null == (x = s?.proposer) ? void 0 : x.publicKey)
                    ? this.map.set(s.id, s)
                    : s?.topic && this.map.set(s.topic, s);
                }),
                (this.cached = []),
                (this.initialized = !0));
            }),
            (this.set = async (s, x) => {
              this.isInitialized(),
                this.map.has(s)
                  ? await this.update(s, x)
                  : (this.logger.debug("Setting value"),
                    this.logger.trace({
                      type: "method",
                      method: "set",
                      key: s,
                      value: x,
                    }),
                    this.map.set(s, x),
                    await this.persist());
            }),
            (this.get = (s) => (
              this.isInitialized(),
              this.logger.debug("Getting value"),
              this.logger.trace({ type: "method", method: "get", key: s }),
              this.getData(s)
            )),
            (this.getAll = (s) => (
              this.isInitialized(),
              s
                ? this.values.filter((x) =>
                    Object.keys(s).every((W) => rH()(x[W], s[W]))
                  )
                : this.values
            )),
            (this.update = async (s, x) => {
              this.isInitialized(),
                this.logger.debug("Updating value"),
                this.logger.trace({
                  type: "method",
                  method: "update",
                  key: s,
                  update: x,
                });
              let W = hi(hi({}, this.getData(s)), x);
              this.map.set(s, W), await this.persist();
            }),
            (this.delete = async (s, x) => {
              this.isInitialized(),
                this.map.has(s) &&
                  (this.logger.debug("Deleting value"),
                  this.logger.trace({
                    type: "method",
                    method: "delete",
                    key: s,
                    reason: x,
                  }),
                  this.map.delete(s),
                  this.addToRecentlyDeleted(s),
                  await this.persist());
            }),
            (this.logger = (0, ej.Ep)(x, this.name)),
            (this.storagePrefix = X),
            (this.getKey = ee);
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        get storageKey() {
          return (
            this.storagePrefix +
            this.version +
            this.core.customStoragePrefix +
            "//" +
            this.name
          );
        }
        get length() {
          return this.map.size;
        }
        get keys() {
          return Array.from(this.map.keys());
        }
        get values() {
          return Array.from(this.map.values());
        }
        addToRecentlyDeleted(s) {
          this.recentlyDeleted.push(s),
            this.recentlyDeleted.length >= this.recentlyDeletedLimit &&
              this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
        }
        async setDataStore(s) {
          await this.core.storage.setItem(this.storageKey, s);
        }
        async getDataStore() {
          return await this.core.storage.getItem(this.storageKey);
        }
        getData(s) {
          let x = this.map.get(s);
          if (!x) {
            if (this.recentlyDeleted.includes(s)) {
              let { message: x } = dist_index_es_S(
                "MISSING_OR_INVALID",
                `Record was recently deleted - ${this.name}: ${s}`
              );
              throw (this.logger.error(x), Error(x));
            }
            let { message: x } = dist_index_es_S(
              "NO_MATCHING_KEY",
              `${this.name}: ${s}`
            );
            throw (this.logger.error(x), Error(x));
          }
          return x;
        }
        async persist() {
          await this.setDataStore(this.values);
        }
        async restore() {
          try {
            let s = await this.getDataStore();
            if (typeof s > "u" || !s.length) return;
            if (this.map.size) {
              let { message: s } = dist_index_es_S(
                "RESTORE_WILL_OVERRIDE",
                this.name
              );
              throw (this.logger.error(s), Error(s));
            }
            (this.cached = s),
              this.logger.debug(`Successfully Restored value for ${this.name}`),
              this.logger.trace({
                type: "method",
                method: "restore",
                value: this.values,
              });
          } catch (s) {
            this.logger.debug(`Failed to Restore value for ${this.name}`),
              this.logger.error(s);
          }
        }
        isInitialized() {
          if (!this.initialized) {
            let { message: s } = dist_index_es_S("NOT_INITIALIZED", this.name);
            throw Error(s);
          }
        }
      };
      let ui = class ui {
        constructor(s, x) {
          (this.core = s),
            (this.logger = x),
            (this.name = "pairing"),
            (this.version = "0.3"),
            (this.events = new (eS())()),
            (this.initialized = !1),
            (this.storagePrefix = rV),
            (this.ignoredPayloadTypes = [1]),
            (this.registeredMethods = []),
            (this.init = async () => {
              this.initialized ||
                (await this.pairings.init(),
                await this.cleanup(),
                this.registerRelayerEvents(),
                this.registerExpirerEvents(),
                (this.initialized = !0),
                this.logger.trace("Initialized"));
            }),
            (this.register = ({ methods: s }) => {
              this.isInitialized(),
                (this.registeredMethods = [
                  ...new Set([...this.registeredMethods, ...s]),
                ]);
            }),
            (this.create = async (s) => {
              this.isInitialized();
              let x = ar(),
                W = await this.core.crypto.setSymKey(x),
                X = Ut(ek.FIVE_MINUTES),
                ee = { protocol: "irn" },
                et = {
                  topic: W,
                  expiry: X,
                  relay: ee,
                  active: !1,
                  methods: s?.methods,
                },
                er = Rr({
                  protocol: this.core.protocol,
                  version: this.core.version,
                  topic: W,
                  symKey: x,
                  relay: ee,
                  expiryTimestamp: X,
                  methods: s?.methods,
                });
              return (
                this.events.emit(r4.create, et),
                this.core.expirer.set(W, X),
                await this.pairings.set(W, et),
                await this.core.relayer.subscribe(W, {
                  transportType: s?.transportType,
                }),
                { topic: W, uri: er }
              );
            }),
            (this.pair = async (s) => {
              let x;
              this.isInitialized();
              let W = this.core.eventClient.createEvent({
                properties: { topic: s?.uri, trace: [io.pairing_started] },
              });
              this.isValidPair(s, W);
              let {
                topic: X,
                symKey: ee,
                relay: et,
                expiryTimestamp: er,
                methods: ei,
              } = Sr(s.uri);
              if (
                ((W.props.properties.topic = X),
                W.addTrace(io.pairing_uri_validation_success),
                W.addTrace(io.pairing_uri_not_expired),
                this.pairings.keys.includes(X))
              ) {
                if (
                  ((x = this.pairings.get(X)),
                  W.addTrace(io.existing_pairing),
                  x.active)
                )
                  throw (
                    (W.setError(ia.active_pairing_already_exists),
                    Error(
                      `Pairing already exists: ${X}. Please try again with a new connection URI.`
                    ))
                  );
                W.addTrace(io.pairing_not_expired);
              }
              let eo = er || Ut(ek.FIVE_MINUTES),
                ea = {
                  topic: X,
                  relay: et,
                  expiry: eo,
                  active: !1,
                  methods: ei,
                };
              this.core.expirer.set(X, eo),
                await this.pairings.set(X, ea),
                W.addTrace(io.store_new_pairing),
                s.activatePairing && (await this.activate({ topic: X })),
                this.events.emit(r4.create, ea),
                W.addTrace(io.emit_inactive_pairing),
                this.core.crypto.keychain.has(X) ||
                  (await this.core.crypto.setSymKey(ee, X)),
                W.addTrace(io.subscribing_pairing_topic);
              try {
                await this.core.relayer.confirmOnlineStateOrThrow();
              } catch {
                W.setError(ia.no_internet_connection);
              }
              try {
                await this.core.relayer.subscribe(X, { relay: et });
              } catch (s) {
                throw (W.setError(ia.subscribe_pairing_topic_failure), s);
              }
              return W.addTrace(io.subscribe_pairing_topic_success), ea;
            }),
            (this.activate = async ({ topic: s }) => {
              this.isInitialized();
              let x = Ut(ek.FIVE_MINUTES);
              this.core.expirer.set(s, x),
                await this.pairings.update(s, { active: !0, expiry: x });
            }),
            (this.ping = async (s) => {
              this.isInitialized(),
                await this.isValidPing(s),
                this.logger.warn(
                  "ping() is deprecated and will be removed in the next major release."
                );
              let { topic: x } = s;
              if (this.pairings.keys.includes(x)) {
                let s = await this.sendRequest(x, "wc_pairingPing", {}),
                  { done: W, resolve: X, reject: ee } = Tt();
                this.events.once(kt("pairing_ping", s), ({ error: s }) => {
                  s ? ee(s) : X();
                }),
                  await W();
              }
            }),
            (this.updateExpiry = async ({ topic: s, expiry: x }) => {
              this.isInitialized(),
                await this.pairings.update(s, { expiry: x });
            }),
            (this.updateMetadata = async ({ topic: s, metadata: x }) => {
              this.isInitialized(),
                await this.pairings.update(s, { peerMetadata: x });
            }),
            (this.getPairings = () => (
              this.isInitialized(), this.pairings.values
            )),
            (this.disconnect = async (s) => {
              this.isInitialized(), await this.isValidDisconnect(s);
              let { topic: x } = s;
              this.pairings.keys.includes(x) &&
                (await this.sendRequest(
                  x,
                  "wc_pairingDelete",
                  dist_index_es_("USER_DISCONNECTED")
                ),
                await this.deletePairing(x));
            }),
            (this.formatUriFromPairing = (s) => {
              this.isInitialized();
              let { topic: x, relay: W, expiry: X, methods: ee } = s,
                et = this.core.crypto.keychain.get(x);
              return Rr({
                protocol: this.core.protocol,
                version: this.core.version,
                topic: x,
                symKey: et,
                relay: W,
                expiryTimestamp: X,
                methods: ee,
              });
            }),
            (this.sendRequest = async (s, x, W) => {
              let X = formatJsonRpcRequest(x, W),
                ee = await this.core.crypto.encode(s, X),
                et = r6[x].req;
              return (
                this.core.history.set(s, X),
                this.core.relayer.publish(s, ee, et),
                X.id
              );
            }),
            (this.sendResult = async (s, x, W) => {
              let X = formatJsonRpcResult(s, W),
                ee = await this.core.crypto.encode(x, X),
                et = await this.core.history.get(x, s),
                er = r6[et.request.method].res;
              await this.core.relayer.publish(x, ee, er),
                await this.core.history.resolve(X);
            }),
            (this.sendError = async (s, x, W) => {
              let X = formatJsonRpcError(s, W),
                ee = await this.core.crypto.encode(x, X),
                et = await this.core.history.get(x, s),
                er = r6[et.request.method]
                  ? r6[et.request.method].res
                  : r6.unregistered_method.res;
              await this.core.relayer.publish(x, ee, er),
                await this.core.history.resolve(X);
            }),
            (this.deletePairing = async (s, x) => {
              await this.core.relayer.unsubscribe(s),
                await Promise.all([
                  this.pairings.delete(s, dist_index_es_("USER_DISCONNECTED")),
                  this.core.crypto.deleteSymKey(s),
                  x ? Promise.resolve() : this.core.expirer.del(s),
                ]);
            }),
            (this.cleanup = async () => {
              let s = this.pairings.getAll().filter((s) => _t(s.expiry));
              await Promise.all(s.map((s) => this.deletePairing(s.topic)));
            }),
            (this.onRelayEventRequest = (s) => {
              let { topic: x, payload: W } = s;
              switch (W.method) {
                case "wc_pairingPing":
                  return this.onPairingPingRequest(x, W);
                case "wc_pairingDelete":
                  return this.onPairingDeleteRequest(x, W);
                default:
                  return this.onUnknownRpcMethodRequest(x, W);
              }
            }),
            (this.onRelayEventResponse = async (s) => {
              let { topic: x, payload: W } = s,
                X = (await this.core.history.get(x, W.id)).request.method;
              return "wc_pairingPing" === X
                ? this.onPairingPingResponse(x, W)
                : this.onUnknownRpcMethodResponse(X);
            }),
            (this.onPairingPingRequest = async (s, x) => {
              let { id: W } = x;
              try {
                this.isValidPing({ topic: s }),
                  await this.sendResult(W, s, !0),
                  this.events.emit(r4.ping, { id: W, topic: s });
              } catch (x) {
                await this.sendError(W, s, x), this.logger.error(x);
              }
            }),
            (this.onPairingPingResponse = (s, x) => {
              let { id: W } = x;
              setTimeout(() => {
                isJsonRpcResult(x)
                  ? this.events.emit(kt("pairing_ping", W), {})
                  : isJsonRpcError(x) &&
                    this.events.emit(kt("pairing_ping", W), { error: x.error });
              }, 500);
            }),
            (this.onPairingDeleteRequest = async (s, x) => {
              let { id: W } = x;
              try {
                this.isValidDisconnect({ topic: s }),
                  await this.deletePairing(s),
                  this.events.emit(r4.delete, { id: W, topic: s });
              } catch (x) {
                await this.sendError(W, s, x), this.logger.error(x);
              }
            }),
            (this.onUnknownRpcMethodRequest = async (s, x) => {
              let { id: W, method: X } = x;
              try {
                if (this.registeredMethods.includes(X)) return;
                let x = dist_index_es_("WC_METHOD_UNSUPPORTED", X);
                await this.sendError(W, s, x), this.logger.error(x);
              } catch (x) {
                await this.sendError(W, s, x), this.logger.error(x);
              }
            }),
            (this.onUnknownRpcMethodResponse = (s) => {
              this.registeredMethods.includes(s) ||
                this.logger.error(dist_index_es_("WC_METHOD_UNSUPPORTED", s));
            }),
            (this.isValidPair = (s, x) => {
              var W;
              if (!Hr(s)) {
                let { message: W } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `pair() params: ${s}`
                );
                throw (x.setError(ia.malformed_pairing_uri), Error(W));
              }
              if (
                !(function (s) {
                  function n(s) {
                    try {
                      return "u" > typeof new URL(s);
                    } catch {
                      return !1;
                    }
                  }
                  try {
                    if (dist_index_es_b(s, !1)) {
                      if (n(s)) return !0;
                      let x = ue(s);
                      return n(x);
                    }
                  } catch {}
                  return !1;
                })(s.uri)
              ) {
                let { message: W } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `pair() uri: ${s.uri}`
                );
                throw (x.setError(ia.malformed_pairing_uri), Error(W));
              }
              let X = Sr(s?.uri);
              if (!(null != (W = X?.relay) && W.protocol)) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  "pair() uri#relay-protocol"
                );
                throw (x.setError(ia.malformed_pairing_uri), Error(s));
              }
              if (!(null != X && X.symKey)) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  "pair() uri#symKey"
                );
                throw (x.setError(ia.malformed_pairing_uri), Error(s));
              }
              if (
                null != X &&
                X.expiryTimestamp &&
                (0, ek.toMiliseconds)(X?.expiryTimestamp) < Date.now()
              ) {
                x.setError(ia.pairing_expired);
                let { message: s } = dist_index_es_S(
                  "EXPIRED",
                  "pair() URI has expired. Please try again with a new connection URI."
                );
                throw Error(s);
              }
            }),
            (this.isValidPing = async (s) => {
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `ping() params: ${s}`
                );
                throw Error(x);
              }
              let { topic: x } = s;
              await this.isValidPairingTopic(x);
            }),
            (this.isValidDisconnect = async (s) => {
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `disconnect() params: ${s}`
                );
                throw Error(x);
              }
              let { topic: x } = s;
              await this.isValidPairingTopic(x);
            }),
            (this.isValidPairingTopic = async (s) => {
              if (!dist_index_es_b(s, !1)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `pairing topic should be a string: ${s}`
                );
                throw Error(x);
              }
              if (!this.pairings.keys.includes(s)) {
                let { message: x } = dist_index_es_S(
                  "NO_MATCHING_KEY",
                  `pairing topic doesn't exist: ${s}`
                );
                throw Error(x);
              }
              if (_t(this.pairings.get(s).expiry)) {
                await this.deletePairing(s);
                let { message: x } = dist_index_es_S(
                  "EXPIRED",
                  `pairing topic: ${s}`
                );
                throw Error(x);
              }
            }),
            (this.core = s),
            (this.logger = (0, ej.Ep)(x, this.name)),
            (this.pairings = new li(
              this.core,
              this.logger,
              this.name,
              this.storagePrefix
            ));
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        isInitialized() {
          if (!this.initialized) {
            let { message: s } = dist_index_es_S("NOT_INITIALIZED", this.name);
            throw Error(s);
          }
        }
        registerRelayerEvents() {
          this.core.relayer.on(rJ.message, async (s) => {
            let { topic: x, message: W, transportType: X } = s;
            if (
              !this.pairings.keys.includes(x) ||
              X === r1.link_mode ||
              this.ignoredPayloadTypes.includes(
                this.core.crypto.getPayloadType(W)
              )
            )
              return;
            let ee = await this.core.crypto.decode(x, W);
            try {
              isJsonRpcRequest(ee)
                ? (this.core.history.set(x, ee),
                  this.onRelayEventRequest({ topic: x, payload: ee }))
                : isJsonRpcResponse(ee) &&
                  (await this.core.history.resolve(ee),
                  await this.onRelayEventResponse({ topic: x, payload: ee }),
                  this.core.history.delete(x, ee.id));
            } catch (s) {
              this.logger.error(s);
            }
          });
        }
        registerExpirerEvents() {
          this.core.expirer.on(r9.expired, async (s) => {
            let { topic: x } = index_es_Ct(s.target);
            x &&
              this.pairings.keys.includes(x) &&
              (await this.deletePairing(x, !0),
              this.events.emit(r4.expire, { topic: x }));
          });
        }
      };
      let di = class di extends index_es_h {
        constructor(s, x) {
          super(s, x),
            (this.core = s),
            (this.logger = x),
            (this.records = new Map()),
            (this.events = new eA.EventEmitter()),
            (this.name = "history"),
            (this.version = "0.3"),
            (this.cached = []),
            (this.initialized = !1),
            (this.storagePrefix = rV),
            (this.init = async () => {
              this.initialized ||
                (this.logger.trace("Initialized"),
                await this.restore(),
                this.cached.forEach((s) => this.records.set(s.id, s)),
                (this.cached = []),
                this.registerEventListeners(),
                (this.initialized = !0));
            }),
            (this.set = (s, x, W) => {
              if (
                (this.isInitialized(),
                this.logger.debug("Setting JSON-RPC request history record"),
                this.logger.trace({
                  type: "method",
                  method: "set",
                  topic: s,
                  request: x,
                  chainId: W,
                }),
                this.records.has(x.id))
              )
                return;
              let X = {
                id: x.id,
                topic: s,
                request: { method: x.method, params: x.params || null },
                chainId: W,
                expiry: Ut(ek.THIRTY_DAYS),
              };
              this.records.set(X.id, X),
                this.persist(),
                this.events.emit(r8.created, X);
            }),
            (this.resolve = async (s) => {
              if (
                (this.isInitialized(),
                this.logger.debug("Updating JSON-RPC response history record"),
                this.logger.trace({
                  type: "method",
                  method: "update",
                  response: s,
                }),
                !this.records.has(s.id))
              )
                return;
              let x = await this.getRecord(s.id);
              typeof x.response > "u" &&
                ((x.response = isJsonRpcError(s)
                  ? { error: s.error }
                  : { result: s.result }),
                this.records.set(x.id, x),
                this.persist(),
                this.events.emit(r8.updated, x));
            }),
            (this.get = async (s, x) => (
              this.isInitialized(),
              this.logger.debug("Getting record"),
              this.logger.trace({
                type: "method",
                method: "get",
                topic: s,
                id: x,
              }),
              await this.getRecord(x)
            )),
            (this.delete = (s, x) => {
              this.isInitialized(),
                this.logger.debug("Deleting record"),
                this.logger.trace({ type: "method", method: "delete", id: x }),
                this.values.forEach((W) => {
                  W.topic !== s ||
                    ("u" > typeof x && W.id !== x) ||
                    (this.records.delete(W.id),
                    this.events.emit(r8.deleted, W));
                }),
                this.persist();
            }),
            (this.exists = async (s, x) => (
              this.isInitialized(),
              !!this.records.has(x) && (await this.getRecord(x)).topic === s
            )),
            (this.on = (s, x) => {
              this.events.on(s, x);
            }),
            (this.once = (s, x) => {
              this.events.once(s, x);
            }),
            (this.off = (s, x) => {
              this.events.off(s, x);
            }),
            (this.removeListener = (s, x) => {
              this.events.removeListener(s, x);
            }),
            (this.logger = (0, ej.Ep)(x, this.name));
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        get storageKey() {
          return (
            this.storagePrefix +
            this.version +
            this.core.customStoragePrefix +
            "//" +
            this.name
          );
        }
        get size() {
          return this.records.size;
        }
        get keys() {
          return Array.from(this.records.keys());
        }
        get values() {
          return Array.from(this.records.values());
        }
        get pending() {
          let s = [];
          return (
            this.values.forEach((x) => {
              if ("u" > typeof x.response) return;
              let W = {
                topic: x.topic,
                request: formatJsonRpcRequest(
                  x.request.method,
                  x.request.params,
                  x.id
                ),
                chainId: x.chainId,
              };
              return s.push(W);
            }),
            s
          );
        }
        async setJsonRpcRecords(s) {
          await this.core.storage.setItem(this.storageKey, s);
        }
        async getJsonRpcRecords() {
          return await this.core.storage.getItem(this.storageKey);
        }
        getRecord(s) {
          this.isInitialized();
          let x = this.records.get(s);
          if (!x) {
            let { message: x } = dist_index_es_S(
              "NO_MATCHING_KEY",
              `${this.name}: ${s}`
            );
            throw Error(x);
          }
          return x;
        }
        async persist() {
          await this.setJsonRpcRecords(this.values), this.events.emit(r8.sync);
        }
        async restore() {
          try {
            let s = await this.getJsonRpcRecords();
            if (typeof s > "u" || !s.length) return;
            if (this.records.size) {
              let { message: s } = dist_index_es_S(
                "RESTORE_WILL_OVERRIDE",
                this.name
              );
              throw (this.logger.error(s), Error(s));
            }
            (this.cached = s),
              this.logger.debug(
                `Successfully Restored records for ${this.name}`
              ),
              this.logger.trace({
                type: "method",
                method: "restore",
                records: this.values,
              });
          } catch (s) {
            this.logger.debug(`Failed to Restore records for ${this.name}`),
              this.logger.error(s);
          }
        }
        registerEventListeners() {
          this.events.on(r8.created, (s) => {
            let x = r8.created;
            this.logger.info(`Emitting ${x}`),
              this.logger.debug({ type: "event", event: x, record: s });
          }),
            this.events.on(r8.updated, (s) => {
              let x = r8.updated;
              this.logger.info(`Emitting ${x}`),
                this.logger.debug({ type: "event", event: x, record: s });
            }),
            this.events.on(r8.deleted, (s) => {
              let x = r8.deleted;
              this.logger.info(`Emitting ${x}`),
                this.logger.debug({ type: "event", event: x, record: s });
            }),
            this.core.heartbeat.on(eI.pulse, () => {
              this.cleanup();
            });
        }
        cleanup() {
          try {
            this.isInitialized();
            let s = !1;
            this.records.forEach((x) => {
              (0, ek.toMiliseconds)(x.expiry || 0) - Date.now() <= 0 &&
                (this.logger.info(`Deleting expired history log: ${x.id}`),
                this.records.delete(x.id),
                this.events.emit(r8.deleted, x, !1),
                (s = !0));
            }),
              s && this.persist();
          } catch (s) {
            this.logger.warn(s);
          }
        }
        isInitialized() {
          if (!this.initialized) {
            let { message: s } = dist_index_es_S("NOT_INITIALIZED", this.name);
            throw Error(s);
          }
        }
      };
      let pi = class pi extends index_es_x {
        constructor(s, x) {
          super(s, x),
            (this.core = s),
            (this.logger = x),
            (this.expirations = new Map()),
            (this.events = new eA.EventEmitter()),
            (this.name = "expirer"),
            (this.version = "0.3"),
            (this.cached = []),
            (this.initialized = !1),
            (this.storagePrefix = rV),
            (this.init = async () => {
              this.initialized ||
                (this.logger.trace("Initialized"),
                await this.restore(),
                this.cached.forEach((s) => this.expirations.set(s.target, s)),
                (this.cached = []),
                this.registerEventListeners(),
                (this.initialized = !0));
            }),
            (this.has = (s) => {
              try {
                let x = this.formatTarget(s);
                return "u" > typeof this.getExpiration(x);
              } catch {
                return !1;
              }
            }),
            (this.set = (s, x) => {
              this.isInitialized();
              let W = this.formatTarget(s),
                X = { target: W, expiry: x };
              this.expirations.set(W, X),
                this.checkExpiry(W, X),
                this.events.emit(r9.created, { target: W, expiration: X });
            }),
            (this.get = (s) => {
              this.isInitialized();
              let x = this.formatTarget(s);
              return this.getExpiration(x);
            }),
            (this.del = (s) => {
              if ((this.isInitialized(), this.has(s))) {
                let x = this.formatTarget(s),
                  W = this.getExpiration(x);
                this.expirations.delete(x),
                  this.events.emit(r9.deleted, { target: x, expiration: W });
              }
            }),
            (this.on = (s, x) => {
              this.events.on(s, x);
            }),
            (this.once = (s, x) => {
              this.events.once(s, x);
            }),
            (this.off = (s, x) => {
              this.events.off(s, x);
            }),
            (this.removeListener = (s, x) => {
              this.events.removeListener(s, x);
            }),
            (this.logger = (0, ej.Ep)(x, this.name));
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        get storageKey() {
          return (
            this.storagePrefix +
            this.version +
            this.core.customStoragePrefix +
            "//" +
            this.name
          );
        }
        get length() {
          return this.expirations.size;
        }
        get keys() {
          return Array.from(this.expirations.keys());
        }
        get values() {
          return Array.from(this.expirations.values());
        }
        formatTarget(s) {
          if ("string" == typeof s) return ce("topic", s);
          if ("number" == typeof s) return ce("id", s);
          let { message: x } = dist_index_es_S(
            "UNKNOWN_TYPE",
            `Target type: ${typeof s}`
          );
          throw Error(x);
        }
        async setExpirations(s) {
          await this.core.storage.setItem(this.storageKey, s);
        }
        async getExpirations() {
          return await this.core.storage.getItem(this.storageKey);
        }
        async persist() {
          await this.setExpirations(this.values), this.events.emit(r9.sync);
        }
        async restore() {
          try {
            let s = await this.getExpirations();
            if (typeof s > "u" || !s.length) return;
            if (this.expirations.size) {
              let { message: s } = dist_index_es_S(
                "RESTORE_WILL_OVERRIDE",
                this.name
              );
              throw (this.logger.error(s), Error(s));
            }
            (this.cached = s),
              this.logger.debug(
                `Successfully Restored expirations for ${this.name}`
              ),
              this.logger.trace({
                type: "method",
                method: "restore",
                expirations: this.values,
              });
          } catch (s) {
            this.logger.debug(`Failed to Restore expirations for ${this.name}`),
              this.logger.error(s);
          }
        }
        getExpiration(s) {
          let x = this.expirations.get(s);
          if (!x) {
            let { message: x } = dist_index_es_S(
              "NO_MATCHING_KEY",
              `${this.name}: ${s}`
            );
            throw (this.logger.warn(x), Error(x));
          }
          return x;
        }
        checkExpiry(s, x) {
          let { expiry: W } = x;
          (0, ek.toMiliseconds)(W) - Date.now() <= 0 && this.expire(s, x);
        }
        expire(s, x) {
          this.expirations.delete(s),
            this.events.emit(r9.expired, { target: s, expiration: x });
        }
        checkExpirations() {
          this.core.relayer.connected &&
            this.expirations.forEach((s, x) => this.checkExpiry(x, s));
        }
        registerEventListeners() {
          this.core.heartbeat.on(eI.pulse, () => this.checkExpirations()),
            this.events.on(r9.created, (s) => {
              let x = r9.created;
              this.logger.info(`Emitting ${x}`),
                this.logger.debug({ type: "event", event: x, data: s }),
                this.persist();
            }),
            this.events.on(r9.expired, (s) => {
              let x = r9.expired;
              this.logger.info(`Emitting ${x}`),
                this.logger.debug({ type: "event", event: x, data: s }),
                this.persist();
            }),
            this.events.on(r9.deleted, (s) => {
              let x = r9.deleted;
              this.logger.info(`Emitting ${x}`),
                this.logger.debug({ type: "event", event: x, data: s }),
                this.persist();
            });
        }
        isInitialized() {
          if (!this.initialized) {
            let { message: s } = dist_index_es_S("NOT_INITIALIZED", this.name);
            throw Error(s);
          }
        }
      };
      let gi = class gi extends index_es_y {
        constructor(s, x, W) {
          super(s, x, W),
            (this.core = s),
            (this.logger = x),
            (this.store = W),
            (this.name = "verify-api"),
            (this.verifyUrlV3 = it),
            (this.storagePrefix = rV),
            (this.version = 2),
            (this.init = async () => {
              var s;
              this.isDevEnv ||
                ((this.publicKey = await this.store.getItem(this.storeKey)),
                this.publicKey &&
                  (0, ek.toMiliseconds)(
                    null == (s = this.publicKey) ? void 0 : s.expiresAt
                  ) < Date.now() &&
                  (this.logger.debug("verify v2 public key expired"),
                  await this.removePublicKey()));
            }),
            (this.register = async (s) => {
              if (!V() || this.isDevEnv) return;
              let x = window.location.origin,
                { id: W, decryptedId: X } = s,
                ee = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${x}&id=${W}&decryptedId=${X}`;
              try {
                let s = (0, tL.getDocument)(),
                  x = this.startAbortTimer(5 * ek.ONE_SECOND),
                  X = await new Promise((X, et) => {
                    let l = () => {
                      window.removeEventListener("message", w),
                        s.body.removeChild(er),
                        et("attestation aborted");
                    };
                    this.abortController.signal.addEventListener("abort", l);
                    let er = s.createElement("iframe");
                    (er.src = ee),
                      (er.style.display = "none"),
                      er.addEventListener("error", l, {
                        signal: this.abortController.signal,
                      });
                    let w = (ee) => {
                      if (ee.data && "string" == typeof ee.data)
                        try {
                          let et = JSON.parse(ee.data);
                          if ("verify_attestation" === et.type) {
                            if (
                              utils_decodeJWT(et.attestation).payload.id !== W
                            )
                              return;
                            clearInterval(x),
                              s.body.removeChild(er),
                              this.abortController.signal.removeEventListener(
                                "abort",
                                l
                              ),
                              window.removeEventListener("message", w),
                              X(null === et.attestation ? "" : et.attestation);
                          }
                        } catch (s) {
                          this.logger.warn(s);
                        }
                    };
                    s.body.appendChild(er),
                      window.addEventListener("message", w, {
                        signal: this.abortController.signal,
                      });
                  });
                return this.logger.debug("jwt attestation", X), X;
              } catch (s) {
                this.logger.warn(s);
              }
              return "";
            }),
            (this.resolve = async (s) => {
              if (this.isDevEnv) return "";
              let { attestationId: x, hash: W, encryptedId: X } = s;
              if ("" === x) {
                this.logger.debug("resolve: attestationId is empty, skipping");
                return;
              }
              if (x) {
                if (utils_decodeJWT(x).payload.id !== X) return;
                let s = await this.isValidJwtAttestation(x);
                if (s) {
                  if (!s.isVerified) {
                    this.logger.warn(
                      "resolve: jwt attestation: origin url not verified"
                    );
                    return;
                  }
                  return s;
                }
              }
              if (!W) return;
              let ee = this.getVerifyUrl(s?.verifyUrl);
              return this.fetchAttestation(W, ee);
            }),
            (this.fetchAttestation = async (s, x) => {
              this.logger.debug(`resolving attestation: ${s} from url: ${x}`);
              let W = this.startAbortTimer(5 * ek.ONE_SECOND),
                X = await fetch(`${x}/attestation/${s}?v2Supported=true`, {
                  signal: this.abortController.signal,
                });
              return (
                clearTimeout(W), 200 === X.status ? await X.json() : void 0
              );
            }),
            (this.getVerifyUrl = (s) => {
              let x = s || r7;
              return (
                ir.includes(x) ||
                  (this.logger.info(
                    `verify url: ${x}, not included in trusted list, assigning default: ${r7}`
                  ),
                  (x = r7)),
                x
              );
            }),
            (this.fetchPublicKey = async () => {
              try {
                this.logger.debug(
                  `fetching public key from: ${this.verifyUrlV3}`
                );
                let s = this.startAbortTimer(ek.FIVE_SECONDS),
                  x = await fetch(`${this.verifyUrlV3}/public-key`, {
                    signal: this.abortController.signal,
                  });
                return clearTimeout(s), await x.json();
              } catch (s) {
                this.logger.warn(s);
              }
            }),
            (this.persistPublicKey = async (s) => {
              this.logger.debug("persisting public key to local storage", s),
                await this.store.setItem(this.storeKey, s),
                (this.publicKey = s);
            }),
            (this.removePublicKey = async () => {
              this.logger.debug("removing verify v2 public key from storage"),
                await this.store.removeItem(this.storeKey),
                (this.publicKey = void 0);
            }),
            (this.isValidJwtAttestation = async (s) => {
              let x = await this.getPublicKey();
              try {
                if (x) return this.validateAttestation(s, x);
              } catch (s) {
                this.logger.error(s),
                  this.logger.warn("error validating attestation");
              }
              let W = await this.fetchAndPersistPublicKey();
              try {
                if (W) return this.validateAttestation(s, W);
              } catch (s) {
                this.logger.error(s),
                  this.logger.warn("error validating attestation");
              }
            }),
            (this.getPublicKey = async () =>
              this.publicKey
                ? this.publicKey
                : await this.fetchAndPersistPublicKey()),
            (this.fetchAndPersistPublicKey = async () => {
              if (this.fetchPromise)
                return await this.fetchPromise, this.publicKey;
              this.fetchPromise = new Promise(async (s) => {
                let x = await this.fetchPublicKey();
                x && (await this.persistPublicKey(x), s(x));
              });
              let s = await this.fetchPromise;
              return (this.fetchPromise = void 0), s;
            }),
            (this.validateAttestation = (s, x) => {
              let W = (function (s, x) {
                  let [W, X, ee] = s.split("."),
                    et = ry.from(
                      (function (s) {
                        let x = s.replace(/-/g, "+").replace(/_/g, "/"),
                          W = x.length % 4;
                        return W > 0 && (x += "=".repeat(4 - W)), x;
                      })(ee),
                      "base64"
                    );
                  if (64 !== et.length) throw Error("Invalid signature length");
                  let er = et.slice(0, 32).toString("hex"),
                    ei = et.slice(32, 64).toString("hex"),
                    eo = `${W}.${X}`,
                    ea = new rg.mE().update(ry.from(eo)).digest(),
                    es = new rw.ec("p256").keyFromPublic(
                      {
                        x: ry.from(x.x, "base64").toString("hex"),
                        y: ry.from(x.y, "base64").toString("hex"),
                      },
                      "hex"
                    ),
                    el = ry.from(ea).toString("hex");
                  if (!es.verify(el, { r: er, s: ei }))
                    throw Error("Invalid signature");
                  return utils_decodeJWT(s).payload;
                })(s, x.publicKey),
                X = {
                  hasExpired: (0, ek.toMiliseconds)(W.exp) < Date.now(),
                  payload: W,
                };
              if (X.hasExpired)
                throw (
                  (this.logger.warn("resolve: jwt attestation expired"),
                  Error("JWT attestation expired"))
                );
              return {
                origin: X.payload.origin,
                isScam: X.payload.isScam,
                isVerified: X.payload.isVerified,
              };
            }),
            (this.logger = (0, ej.Ep)(x, this.name)),
            (this.abortController = new AbortController()),
            (this.isDevEnv = Lt()),
            this.init();
        }
        get storeKey() {
          return (
            this.storagePrefix +
            this.version +
            this.core.customStoragePrefix +
            "//verify:public:key"
          );
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        startAbortTimer(s) {
          return (
            (this.abortController = new AbortController()),
            setTimeout(
              () => this.abortController.abort(),
              (0, ek.toMiliseconds)(s)
            )
          );
        }
      };
      let yi = class yi extends v {
        constructor(s, x) {
          super(s, x),
            (this.projectId = s),
            (this.logger = x),
            (this.context = "echo"),
            (this.registerDeviceToken = async (s) => {
              let {
                  clientId: x,
                  token: W,
                  notificationType: X,
                  enableEncrypted: ee = !1,
                } = s,
                et = `https://echo.walletconnect.com/${this.projectId}/clients`;
              await fetch(et, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                  client_id: x,
                  type: X,
                  token: W,
                  always_raw: ee,
                }),
              });
            }),
            (this.logger = (0, ej.Ep)(x, this.context));
        }
      };
      var nm = Object.defineProperty,
        nw = Object.getOwnPropertySymbols,
        nb = Object.prototype.hasOwnProperty,
        nv = Object.prototype.propertyIsEnumerable,
        mi = (s, x, W) =>
          x in s
            ? nm(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        index_es_Q = (s, x) => {
          for (var W in x || (x = {})) nb.call(x, W) && mi(s, W, x[W]);
          if (nw) for (var W of nw(x)) nv.call(x, W) && mi(s, W, x[W]);
          return s;
        };
      let bi = class bi extends index_es_C {
        constructor(s, x, W = !0) {
          super(s, x, W),
            (this.core = s),
            (this.logger = x),
            (this.context = "event-client"),
            (this.storagePrefix = rV),
            (this.storageVersion = 0.1),
            (this.events = new Map()),
            (this.shouldPersist = !1),
            (this.init = async () => {
              if (!Lt())
                try {
                  let s = {
                    eventId: Mt(),
                    timestamp: Date.now(),
                    domain: this.getAppDomain(),
                    props: {
                      event: "INIT",
                      type: "",
                      properties: {
                        client_id: await this.core.crypto.getClientId(),
                        user_agent: He(
                          this.core.relayer.protocol,
                          this.core.relayer.version,
                          r0
                        ),
                      },
                    },
                  };
                  await this.sendEvent([s]);
                } catch (s) {
                  this.logger.warn(s);
                }
            }),
            (this.createEvent = (s) => {
              let {
                  event: x = "ERROR",
                  type: W = "",
                  properties: { topic: X, trace: ee },
                } = s,
                et = Mt(),
                er = this.core.projectId || "",
                ei = Date.now(),
                eo = index_es_Q(
                  {
                    eventId: et,
                    timestamp: ei,
                    props: {
                      event: x,
                      type: W,
                      properties: { topic: X, trace: ee },
                    },
                    bundleId: er,
                    domain: this.getAppDomain(),
                  },
                  this.setMethods(et)
                );
              return (
                this.telemetryEnabled &&
                  (this.events.set(et, eo), (this.shouldPersist = !0)),
                eo
              );
            }),
            (this.getEvent = (s) => {
              let { eventId: x, topic: W } = s;
              if (x) return this.events.get(x);
              let X = Array.from(this.events.values()).find(
                (s) => s.props.properties.topic === W
              );
              if (X)
                return index_es_Q(
                  index_es_Q({}, X),
                  this.setMethods(X.eventId)
                );
            }),
            (this.deleteEvent = (s) => {
              let { eventId: x } = s;
              this.events.delete(x), (this.shouldPersist = !0);
            }),
            (this.setEventListeners = () => {
              this.core.heartbeat.on(eI.pulse, async () => {
                this.shouldPersist && (await this.persist()),
                  this.events.forEach((s) => {
                    (0, ek.fromMiliseconds)(Date.now()) -
                      (0, ek.fromMiliseconds)(s.timestamp) >
                      86400 &&
                      (this.events.delete(s.eventId),
                      (this.shouldPersist = !0));
                  });
              });
            }),
            (this.setMethods = (s) => ({
              addTrace: (x) => this.addTrace(s, x),
              setError: (x) => this.setError(s, x),
            })),
            (this.addTrace = (s, x) => {
              let W = this.events.get(s);
              W &&
                (W.props.properties.trace.push(x),
                this.events.set(s, W),
                (this.shouldPersist = !0));
            }),
            (this.setError = (s, x) => {
              let W = this.events.get(s);
              W &&
                ((W.props.type = x),
                (W.timestamp = Date.now()),
                this.events.set(s, W),
                (this.shouldPersist = !0));
            }),
            (this.persist = async () => {
              await this.core.storage.setItem(
                this.storageKey,
                Array.from(this.events.values())
              ),
                (this.shouldPersist = !1);
            }),
            (this.restore = async () => {
              try {
                let s =
                  (await this.core.storage.getItem(this.storageKey)) || [];
                if (!s.length) return;
                s.forEach((s) => {
                  this.events.set(
                    s.eventId,
                    index_es_Q(index_es_Q({}, s), this.setMethods(s.eventId))
                  );
                });
              } catch (s) {
                this.logger.warn(s);
              }
            }),
            (this.submit = async () => {
              if (!this.telemetryEnabled || 0 === this.events.size) return;
              let s = [];
              for (let [x, W] of this.events) W.props.type && s.push(W);
              if (0 !== s.length)
                try {
                  if ((await this.sendEvent(s)).ok)
                    for (let x of s)
                      this.events.delete(x.eventId), (this.shouldPersist = !0);
                } catch (s) {
                  this.logger.warn(s);
                }
            }),
            (this.sendEvent = async (s) => {
              let x = this.getAppDomain() ? "" : "&sp=desktop";
              return await fetch(
                `https://pulse.walletconnect.org/batch?projectId=${this.core.projectId}&st=events_sdk&sv=js-${r0}${x}`,
                { method: "POST", body: JSON.stringify(s) }
              );
            }),
            (this.getAppDomain = () => gt().url),
            (this.logger = (0, ej.Ep)(x, this.context)),
            (this.telemetryEnabled = W),
            W
              ? this.restore().then(async () => {
                  await this.submit(), this.setEventListeners();
                })
              : this.persist();
        }
        get storageKey() {
          return (
            this.storagePrefix +
            this.storageVersion +
            this.core.customStoragePrefix +
            "//" +
            this.context
          );
        }
      };
      var ny = Object.defineProperty,
        n_ = Object.getOwnPropertySymbols,
        nC = Object.prototype.hasOwnProperty,
        nx = Object.prototype.propertyIsEnumerable,
        vi = (s, x, W) =>
          x in s
            ? ny(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        _i = (s, x) => {
          for (var W in x || (x = {})) nC.call(x, W) && vi(s, W, x[W]);
          if (n_) for (var W of n_(x)) nx.call(x, W) && vi(s, W, x[W]);
          return s;
        };
      let index_es_oe = class index_es_oe extends index_es_n {
        constructor(s) {
          var x;
          super(s),
            (this.protocol = "wc"),
            (this.version = 2),
            (this.name = rq),
            (this.events = new eA.EventEmitter()),
            (this.initialized = !1),
            (this.on = (s, x) => this.events.on(s, x)),
            (this.once = (s, x) => this.events.once(s, x)),
            (this.off = (s, x) => this.events.off(s, x)),
            (this.removeListener = (s, x) => this.events.removeListener(s, x)),
            (this.dispatchEnvelope = ({
              topic: s,
              message: x,
              sessionExists: W,
            }) => {
              if (!s || !x) return;
              let X = {
                topic: s,
                message: x,
                publishedAt: Date.now(),
                transportType: r1.link_mode,
              };
              this.relayer.onLinkMessageEvent(X, { sessionExists: W });
            }),
            (this.projectId = s?.projectId),
            (this.relayUrl = s?.relayUrl || rQ),
            (this.customStoragePrefix =
              null != s && s.customStoragePrefix
                ? `:${s.customStoragePrefix}`
                : "");
          let W = (0, ej.jI)({
              level:
                "string" == typeof s?.logger && s.logger ? s.logger : rW.logger,
              name: rq,
            }),
            { logger: X, chunkLoggerController: ee } = (0, ej.Rt)({
              opts: W,
              maxSizeInBytes: s?.maxLogBlobSizeInBytes,
              loggerOverride: s?.logger,
            });
          (this.logChunkController = ee),
            null != (x = this.logChunkController) &&
              x.downloadLogsBlobInBrowser &&
              (window.downloadLogsBlobInBrowser = async () => {
                var s, x;
                null != (s = this.logChunkController) &&
                  s.downloadLogsBlobInBrowser &&
                  (null == (x = this.logChunkController) ||
                    x.downloadLogsBlobInBrowser({
                      clientId: await this.crypto.getClientId(),
                    }));
              }),
            (this.logger = (0, ej.Ep)(X, this.name)),
            (this.heartbeat = new index_es_i()),
            (this.crypto = new index_es_Yt(this, this.logger, s?.keychain)),
            (this.history = new di(this, this.logger)),
            (this.expirer = new pi(this, this.logger)),
            (this.storage =
              null != s && s.storage
                ? s.storage
                : new h(_i(_i({}, rK), s?.storageOptions))),
            (this.relayer = new oi({
              core: this,
              logger: this.logger,
              relayUrl: this.relayUrl,
              projectId: this.projectId,
            })),
            (this.pairing = new ui(this, this.logger)),
            (this.verify = new gi(this, this.logger, this.storage)),
            (this.echoClient = new yi(this.projectId || "", this.logger)),
            (this.linkModeSupportedApps = []),
            (this.eventClient = new bi(this, this.logger, s?.telemetryEnabled));
        }
        static async init(s) {
          let x = new index_es_oe(s);
          await x.initialize();
          let W = await x.crypto.getClientId();
          return await x.storage.setItem("WALLETCONNECT_CLIENT_ID", W), x;
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        async start() {
          this.initialized || (await this.initialize());
        }
        async getLogsBlob() {
          var s;
          return null == (s = this.logChunkController)
            ? void 0
            : s.logsToBlob({ clientId: await this.crypto.getClientId() });
        }
        async addLinkModeSupportedApp(s) {
          this.linkModeSupportedApps.includes(s) ||
            (this.linkModeSupportedApps.push(s),
            await this.storage.setItem(r2, this.linkModeSupportedApps));
        }
        async initialize() {
          this.logger.trace("Initialized");
          try {
            await this.crypto.init(),
              await this.history.init(),
              await this.expirer.init(),
              await this.relayer.init(),
              await this.heartbeat.init(),
              await this.pairing.init(),
              (this.linkModeSupportedApps =
                (await this.storage.getItem(r2)) || []),
              (this.initialized = !0),
              this.logger.info("Core Initialization Success");
          } catch (s) {
            throw (
              (this.logger.warn(
                `Core Initialization Failure at epoch ${Date.now()}`,
                s
              ),
              this.logger.error(s.message),
              s)
            );
          }
        }
      };
      let nE = "client",
        nA = `wc@2:${nE}:`,
        nS = { name: nE, logger: "error" },
        nk = "WALLETCONNECT_DEEPLINK_CHOICE",
        nT = "Proposal expired",
        nI = ek.SEVEN_DAYS,
        nP = {
          wc_sessionPropose: {
            req: { ttl: ek.FIVE_MINUTES, prompt: !0, tag: 1100 },
            res: { ttl: ek.FIVE_MINUTES, prompt: !1, tag: 1101 },
            reject: { ttl: ek.FIVE_MINUTES, prompt: !1, tag: 1120 },
            autoReject: { ttl: ek.FIVE_MINUTES, prompt: !1, tag: 1121 },
          },
          wc_sessionSettle: {
            req: { ttl: ek.FIVE_MINUTES, prompt: !1, tag: 1102 },
            res: { ttl: ek.FIVE_MINUTES, prompt: !1, tag: 1103 },
          },
          wc_sessionUpdate: {
            req: { ttl: ek.ONE_DAY, prompt: !1, tag: 1104 },
            res: { ttl: ek.ONE_DAY, prompt: !1, tag: 1105 },
          },
          wc_sessionExtend: {
            req: { ttl: ek.ONE_DAY, prompt: !1, tag: 1106 },
            res: { ttl: ek.ONE_DAY, prompt: !1, tag: 1107 },
          },
          wc_sessionRequest: {
            req: { ttl: ek.FIVE_MINUTES, prompt: !0, tag: 1108 },
            res: { ttl: ek.FIVE_MINUTES, prompt: !1, tag: 1109 },
          },
          wc_sessionEvent: {
            req: { ttl: ek.FIVE_MINUTES, prompt: !0, tag: 1110 },
            res: { ttl: ek.FIVE_MINUTES, prompt: !1, tag: 1111 },
          },
          wc_sessionDelete: {
            req: { ttl: ek.ONE_DAY, prompt: !1, tag: 1112 },
            res: { ttl: ek.ONE_DAY, prompt: !1, tag: 1113 },
          },
          wc_sessionPing: {
            req: { ttl: ek.ONE_DAY, prompt: !1, tag: 1114 },
            res: { ttl: ek.ONE_DAY, prompt: !1, tag: 1115 },
          },
          wc_sessionAuthenticate: {
            req: { ttl: ek.ONE_HOUR, prompt: !0, tag: 1116 },
            res: { ttl: ek.ONE_HOUR, prompt: !1, tag: 1117 },
            reject: { ttl: ek.FIVE_MINUTES, prompt: !1, tag: 1118 },
            autoReject: { ttl: ek.FIVE_MINUTES, prompt: !1, tag: 1119 },
          },
        },
        nR = { min: ek.FIVE_MINUTES, max: ek.SEVEN_DAYS },
        nN = { idle: "IDLE", active: "ACTIVE" },
        nO = [
          "wc_sessionPropose",
          "wc_sessionRequest",
          "wc_authRequest",
          "wc_sessionAuthenticate",
        ],
        nM = "wc@1.5:auth:",
        nD = `${nM}:PUB_KEY`;
      var nB = Object.defineProperty,
        nL = Object.defineProperties,
        nj = Object.getOwnPropertyDescriptors,
        nU = Object.getOwnPropertySymbols,
        n$ = Object.prototype.hasOwnProperty,
        nF = Object.prototype.propertyIsEnumerable,
        dist_index_es_yt = (s, x, W) =>
          x in s
            ? nB(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        dist_index_es_I = (s, x) => {
          for (var W in x || (x = {}))
            n$.call(x, W) && dist_index_es_yt(s, W, x[W]);
          if (nU)
            for (var W of nU(x)) nF.call(x, W) && dist_index_es_yt(s, W, x[W]);
          return s;
        },
        dist_index_es_D = (s, x) => nL(s, nj(x));
      let index_es_Rs = class index_es_Rs extends M {
        constructor(s) {
          super(s),
            (this.name = "engine"),
            (this.events = new (eS())()),
            (this.initialized = !1),
            (this.requestQueue = { state: nN.idle, queue: [] }),
            (this.sessionRequestQueue = { state: nN.idle, queue: [] }),
            (this.requestQueueDelay = ek.ONE_SECOND),
            (this.expectedPairingMethodMap = new Map()),
            (this.recentlyDeletedMap = new Map()),
            (this.recentlyDeletedLimit = 200),
            (this.relayMessageCache = []),
            (this.init = async () => {
              this.initialized ||
                (await this.cleanup(),
                this.registerRelayerEvents(),
                this.registerExpirerEvents(),
                this.registerPairingEvents(),
                await this.registerLinkModeListeners(),
                this.client.core.pairing.register({ methods: Object.keys(nP) }),
                (this.initialized = !0),
                setTimeout(() => {
                  (this.sessionRequestQueue.queue =
                    this.getPendingSessionRequests()),
                    this.processSessionRequestQueue();
                }, (0, ek.toMiliseconds)(this.requestQueueDelay)));
            }),
            (this.connect = async (s) => {
              this.isInitialized(), await this.confirmOnlineStateOrThrow();
              let x = dist_index_es_D(dist_index_es_I({}, s), {
                requiredNamespaces: s.requiredNamespaces || {},
                optionalNamespaces: s.optionalNamespaces || {},
              });
              await this.isValidConnect(x);
              let {
                  pairingTopic: W,
                  requiredNamespaces: X,
                  optionalNamespaces: ee,
                  sessionProperties: et,
                  relays: er,
                } = x,
                ei = W,
                eo,
                ea = !1;
              try {
                if (ei) {
                  let s = this.client.core.pairing.pairings.get(ei);
                  this.client.logger.warn(
                    "connect() with existing pairing topic is deprecated and will be removed in the next major release."
                  ),
                    (ea = s.active);
                }
              } catch (s) {
                throw (
                  (this.client.logger.error(
                    `connect() -> pairing.get(${ei}) failed`
                  ),
                  s)
                );
              }
              if (!ei || !ea) {
                let { topic: s, uri: x } =
                  await this.client.core.pairing.create();
                (ei = s), (eo = x);
              }
              if (!ei) {
                let { message: s } = dist_index_es_S(
                  "NO_MATCHING_KEY",
                  `connect() pairing topic: ${ei}`
                );
                throw Error(s);
              }
              let es = await this.client.core.crypto.generateKeyPair(),
                el = nP.wc_sessionPropose.req.ttl || ek.FIVE_MINUTES,
                ec = Ut(el),
                eu = dist_index_es_I(
                  {
                    requiredNamespaces: X,
                    optionalNamespaces: ee,
                    relays: er ?? [{ protocol: "irn" }],
                    proposer: { publicKey: es, metadata: this.client.metadata },
                    expiryTimestamp: ec,
                    pairingTopic: ei,
                  },
                  et && { sessionProperties: et }
                ),
                { reject: ed, resolve: eh, done: ep } = Tt(el, nT);
              this.events.once(
                kt("session_connect"),
                async ({ error: s, session: x }) => {
                  if (s) ed(s);
                  else if (x) {
                    x.self.publicKey = es;
                    let s = dist_index_es_D(dist_index_es_I({}, x), {
                      pairingTopic: eu.pairingTopic,
                      requiredNamespaces: eu.requiredNamespaces,
                      optionalNamespaces: eu.optionalNamespaces,
                      transportType: r1.relay,
                    });
                    await this.client.session.set(x.topic, s),
                      await this.setExpiry(x.topic, x.expiry),
                      ei &&
                        (await this.client.core.pairing.updateMetadata({
                          topic: ei,
                          metadata: x.peer.metadata,
                        })),
                      this.cleanupDuplicatePairings(s),
                      eh(s);
                  }
                }
              );
              let ef = await this.sendRequest({
                topic: ei,
                method: "wc_sessionPropose",
                params: eu,
                throwOnFailedPublish: !0,
              });
              return (
                await this.setProposal(ef, dist_index_es_I({ id: ef }, eu)),
                { uri: eo, approval: ep }
              );
            }),
            (this.pair = async (s) => {
              this.isInitialized(), await this.confirmOnlineStateOrThrow();
              try {
                return await this.client.core.pairing.pair(s);
              } catch (s) {
                throw (this.client.logger.error("pair() failed"), s);
              }
            }),
            (this.approve = async (s) => {
              var x, W, X;
              let ee = this.client.core.eventClient.createEvent({
                properties: {
                  topic: null == (x = s?.id) ? void 0 : x.toString(),
                  trace: [is.session_approve_started],
                },
              });
              try {
                this.isInitialized(), await this.confirmOnlineStateOrThrow();
              } catch (s) {
                throw (ee.setError(il.no_internet_connection), s);
              }
              try {
                await this.isValidProposalId(s?.id);
              } catch (x) {
                throw (
                  (this.client.logger.error(
                    `approve() -> proposal.get(${s?.id}) failed`
                  ),
                  ee.setError(il.proposal_not_found),
                  x)
                );
              }
              try {
                await this.isValidApprove(s);
              } catch (s) {
                throw (
                  (this.client.logger.error(
                    "approve() -> isValidApprove() failed"
                  ),
                  ee.setError(il.session_approve_namespace_validation_failure),
                  s)
                );
              }
              let {
                  id: et,
                  relayProtocol: er,
                  namespaces: ei,
                  sessionProperties: eo,
                  sessionConfig: ea,
                } = s,
                es = this.client.proposal.get(et);
              this.client.core.eventClient.deleteEvent({ eventId: ee.eventId });
              let {
                  pairingTopic: el,
                  proposer: ec,
                  requiredNamespaces: eu,
                  optionalNamespaces: ed,
                } = es,
                eh =
                  null == (W = this.client.core.eventClient)
                    ? void 0
                    : W.getEvent({ topic: el });
              eh ||
                (eh =
                  null == (X = this.client.core.eventClient)
                    ? void 0
                    : X.createEvent({
                        type: is.session_approve_started,
                        properties: {
                          topic: el,
                          trace: [
                            is.session_approve_started,
                            is.session_namespaces_validation_success,
                          ],
                        },
                      }));
              let ep = await this.client.core.crypto.generateKeyPair(),
                ef = ec.publicKey,
                eg = await this.client.core.crypto.generateSharedKey(ep, ef),
                em = dist_index_es_I(
                  dist_index_es_I(
                    {
                      relay: { protocol: er ?? "irn" },
                      namespaces: ei,
                      controller: {
                        publicKey: ep,
                        metadata: this.client.metadata,
                      },
                      expiry: Ut(nI),
                    },
                    eo && { sessionProperties: eo }
                  ),
                  ea && { sessionConfig: ea }
                ),
                ew = r1.relay;
              eh.addTrace(is.subscribing_session_topic);
              try {
                await this.client.core.relayer.subscribe(eg, {
                  transportType: ew,
                });
              } catch (s) {
                throw (eh.setError(il.subscribe_session_topic_failure), s);
              }
              eh.addTrace(is.subscribe_session_topic_success);
              let eb = dist_index_es_D(dist_index_es_I({}, em), {
                topic: eg,
                requiredNamespaces: eu,
                optionalNamespaces: ed,
                pairingTopic: el,
                acknowledged: !1,
                self: em.controller,
                peer: { publicKey: ec.publicKey, metadata: ec.metadata },
                controller: ep,
                transportType: r1.relay,
              });
              await this.client.session.set(eg, eb),
                eh.addTrace(is.store_session);
              try {
                eh.addTrace(is.publishing_session_settle),
                  await this.sendRequest({
                    topic: eg,
                    method: "wc_sessionSettle",
                    params: em,
                    throwOnFailedPublish: !0,
                  }).catch((s) => {
                    throw (eh?.setError(il.session_settle_publish_failure), s);
                  }),
                  eh.addTrace(is.session_settle_publish_success),
                  eh.addTrace(is.publishing_session_approve),
                  await this.sendResult({
                    id: et,
                    topic: el,
                    result: {
                      relay: { protocol: er ?? "irn" },
                      responderPublicKey: ep,
                    },
                    throwOnFailedPublish: !0,
                  }).catch((s) => {
                    throw (eh?.setError(il.session_approve_publish_failure), s);
                  }),
                  eh.addTrace(is.session_approve_publish_success);
              } catch (s) {
                throw (
                  (this.client.logger.error(s),
                  this.client.session.delete(
                    eg,
                    dist_index_es_("USER_DISCONNECTED")
                  ),
                  await this.client.core.relayer.unsubscribe(eg),
                  s)
                );
              }
              return (
                this.client.core.eventClient.deleteEvent({
                  eventId: eh.eventId,
                }),
                await this.client.core.pairing.updateMetadata({
                  topic: el,
                  metadata: ec.metadata,
                }),
                await this.client.proposal.delete(
                  et,
                  dist_index_es_("USER_DISCONNECTED")
                ),
                await this.client.core.pairing.activate({ topic: el }),
                await this.setExpiry(eg, Ut(nI)),
                {
                  topic: eg,
                  acknowledged: () =>
                    Promise.resolve(this.client.session.get(eg)),
                }
              );
            }),
            (this.reject = async (s) => {
              let x;
              this.isInitialized(), await this.confirmOnlineStateOrThrow();
              try {
                await this.isValidReject(s);
              } catch (s) {
                throw (
                  (this.client.logger.error(
                    "reject() -> isValidReject() failed"
                  ),
                  s)
                );
              }
              let { id: W, reason: X } = s;
              try {
                x = this.client.proposal.get(W).pairingTopic;
              } catch (s) {
                throw (
                  (this.client.logger.error(
                    `reject() -> proposal.get(${W}) failed`
                  ),
                  s)
                );
              }
              x &&
                (await this.sendError({
                  id: W,
                  topic: x,
                  error: X,
                  rpcOpts: nP.wc_sessionPropose.reject,
                }),
                await this.client.proposal.delete(
                  W,
                  dist_index_es_("USER_DISCONNECTED")
                ));
            }),
            (this.update = async (s) => {
              this.isInitialized(), await this.confirmOnlineStateOrThrow();
              try {
                await this.isValidUpdate(s);
              } catch (s) {
                throw (
                  (this.client.logger.error(
                    "update() -> isValidUpdate() failed"
                  ),
                  s)
                );
              }
              let { topic: x, namespaces: W } = s,
                { done: X, resolve: ee, reject: et } = Tt(),
                er = payloadId(),
                ei = getBigIntRpcId().toString(),
                eo = this.client.session.get(x).namespaces;
              return (
                this.events.once(kt("session_update", er), ({ error: s }) => {
                  s ? et(s) : ee();
                }),
                await this.client.session.update(x, { namespaces: W }),
                await this.sendRequest({
                  topic: x,
                  method: "wc_sessionUpdate",
                  params: { namespaces: W },
                  throwOnFailedPublish: !0,
                  clientRpcId: er,
                  relayRpcId: ei,
                }).catch((s) => {
                  this.client.logger.error(s),
                    this.client.session.update(x, { namespaces: eo }),
                    et(s);
                }),
                { acknowledged: X }
              );
            }),
            (this.extend = async (s) => {
              this.isInitialized(), await this.confirmOnlineStateOrThrow();
              try {
                await this.isValidExtend(s);
              } catch (s) {
                throw (
                  (this.client.logger.error(
                    "extend() -> isValidExtend() failed"
                  ),
                  s)
                );
              }
              let { topic: x } = s,
                W = payloadId(),
                { done: X, resolve: ee, reject: et } = Tt();
              return (
                this.events.once(kt("session_extend", W), ({ error: s }) => {
                  s ? et(s) : ee();
                }),
                await this.setExpiry(x, Ut(nI)),
                this.sendRequest({
                  topic: x,
                  method: "wc_sessionExtend",
                  params: {},
                  clientRpcId: W,
                  throwOnFailedPublish: !0,
                }).catch((s) => {
                  et(s);
                }),
                { acknowledged: X }
              );
            }),
            (this.request = async (s) => {
              this.isInitialized();
              try {
                await this.isValidRequest(s);
              } catch (s) {
                throw (
                  (this.client.logger.error(
                    "request() -> isValidRequest() failed"
                  ),
                  s)
                );
              }
              let {
                  chainId: x,
                  request: W,
                  topic: X,
                  expiry: ee = nP.wc_sessionRequest.req.ttl,
                } = s,
                et = this.client.session.get(X);
              et?.transportType === r1.relay &&
                (await this.confirmOnlineStateOrThrow());
              let er = payloadId(),
                ei = getBigIntRpcId().toString(),
                {
                  done: eo,
                  resolve: ea,
                  reject: es,
                } = Tt(ee, "Request expired. Please try again.");
              this.events.once(
                kt("session_request", er),
                ({ error: s, result: x }) => {
                  s ? es(s) : ea(x);
                }
              );
              let el = this.getAppLinkIfEnabled(
                et.peer.metadata,
                et.transportType
              );
              return el
                ? (await this.sendRequest({
                    clientRpcId: er,
                    relayRpcId: ei,
                    topic: X,
                    method: "wc_sessionRequest",
                    params: {
                      request: dist_index_es_D(dist_index_es_I({}, W), {
                        expiryTimestamp: Ut(ee),
                      }),
                      chainId: x,
                    },
                    expiry: ee,
                    throwOnFailedPublish: !0,
                    appLink: el,
                  }).catch((s) => es(s)),
                  this.client.events.emit("session_request_sent", {
                    topic: X,
                    request: W,
                    chainId: x,
                    id: er,
                  }),
                  await eo())
                : await Promise.all([
                    new Promise(async (s) => {
                      await this.sendRequest({
                        clientRpcId: er,
                        relayRpcId: ei,
                        topic: X,
                        method: "wc_sessionRequest",
                        params: {
                          request: dist_index_es_D(dist_index_es_I({}, W), {
                            expiryTimestamp: Ut(ee),
                          }),
                          chainId: x,
                        },
                        expiry: ee,
                        throwOnFailedPublish: !0,
                      }).catch((s) => es(s)),
                        this.client.events.emit("session_request_sent", {
                          topic: X,
                          request: W,
                          chainId: x,
                          id: er,
                        }),
                        s();
                    }),
                    new Promise(async (s) => {
                      var x;
                      if (
                        !(null != (x = et.sessionConfig) && x.disableDeepLink)
                      ) {
                        let s = await xt(this.client.core.storage, nk);
                        await Dt({ id: er, topic: X, wcDeepLink: s });
                      }
                      s();
                    }),
                    eo(),
                  ]).then((s) => s[2]);
            }),
            (this.respond = async (s) => {
              this.isInitialized(), await this.isValidRespond(s);
              let { topic: x, response: W } = s,
                { id: X } = W,
                ee = this.client.session.get(x);
              ee.transportType === r1.relay &&
                (await this.confirmOnlineStateOrThrow());
              let et = this.getAppLinkIfEnabled(
                ee.peer.metadata,
                ee.transportType
              );
              isJsonRpcResult(W)
                ? await this.sendResult({
                    id: X,
                    topic: x,
                    result: W.result,
                    throwOnFailedPublish: !0,
                    appLink: et,
                  })
                : isJsonRpcError(W) &&
                  (await this.sendError({
                    id: X,
                    topic: x,
                    error: W.error,
                    appLink: et,
                  })),
                this.cleanupAfterResponse(s);
            }),
            (this.ping = async (s) => {
              this.isInitialized(), await this.confirmOnlineStateOrThrow();
              try {
                await this.isValidPing(s);
              } catch (s) {
                throw (
                  (this.client.logger.error("ping() -> isValidPing() failed"),
                  s)
                );
              }
              let { topic: x } = s;
              if (this.client.session.keys.includes(x)) {
                let s = payloadId(),
                  W = getBigIntRpcId().toString(),
                  { done: X, resolve: ee, reject: et } = Tt();
                this.events.once(kt("session_ping", s), ({ error: s }) => {
                  s ? et(s) : ee();
                }),
                  await Promise.all([
                    this.sendRequest({
                      topic: x,
                      method: "wc_sessionPing",
                      params: {},
                      throwOnFailedPublish: !0,
                      clientRpcId: s,
                      relayRpcId: W,
                    }),
                    X(),
                  ]);
              } else
                this.client.core.pairing.pairings.keys.includes(x) &&
                  (this.client.logger.warn(
                    "ping() on pairing topic is deprecated and will be removed in the next major release."
                  ),
                  await this.client.core.pairing.ping({ topic: x }));
            }),
            (this.emit = async (s) => {
              this.isInitialized(),
                await this.confirmOnlineStateOrThrow(),
                await this.isValidEmit(s);
              let { topic: x, event: W, chainId: X } = s,
                ee = getBigIntRpcId().toString(),
                et = payloadId();
              await this.sendRequest({
                topic: x,
                method: "wc_sessionEvent",
                params: { event: W, chainId: X },
                throwOnFailedPublish: !0,
                relayRpcId: ee,
                clientRpcId: et,
              });
            }),
            (this.disconnect = async (s) => {
              this.isInitialized(),
                await this.confirmOnlineStateOrThrow(),
                await this.isValidDisconnect(s);
              let { topic: x } = s;
              if (this.client.session.keys.includes(x))
                await this.sendRequest({
                  topic: x,
                  method: "wc_sessionDelete",
                  params: dist_index_es_("USER_DISCONNECTED"),
                  throwOnFailedPublish: !0,
                }),
                  await this.deleteSession({ topic: x, emitEvent: !1 });
              else if (this.client.core.pairing.pairings.keys.includes(x))
                await this.client.core.pairing.disconnect({ topic: x });
              else {
                let { message: s } = dist_index_es_S(
                  "MISMATCHED_TOPIC",
                  `Session or pairing topic not found: ${x}`
                );
                throw Error(s);
              }
            }),
            (this.find = (s) => (
              this.isInitialized(),
              this.client.session.getAll().filter((x) =>
                (function (s, x) {
                  let { requiredNamespaces: W } = x,
                    X = Object.keys(s.namespaces),
                    ee = Object.keys(W),
                    et = !0;
                  return (
                    !!index_es_I(ee, X) &&
                    (X.forEach((x) => {
                      let {
                          accounts: X,
                          methods: ee,
                          events: er,
                        } = s.namespaces[x],
                        ei = U(X),
                        eo = W[x];
                      (index_es_I(H(x, eo), ei) &&
                        index_es_I(eo.methods, ee) &&
                        index_es_I(eo.events, er)) ||
                        (et = !1);
                    }),
                    et)
                  );
                })(x, s)
              )
            )),
            (this.getPendingSessionRequests = () =>
              this.client.pendingRequest.getAll()),
            (this.authenticate = async (s, x) => {
              var W;
              let X;
              this.isInitialized(), this.isValidAuthenticate(s);
              let ee =
                  x &&
                  this.client.core.linkModeSupportedApps.includes(x) &&
                  (null == (W = this.client.metadata.redirect)
                    ? void 0
                    : W.linkMode),
                et = ee ? r1.link_mode : r1.relay;
              et === r1.relay && (await this.confirmOnlineStateOrThrow());
              let {
                  chains: er,
                  statement: ei = "",
                  uri: eo,
                  domain: ea,
                  nonce: es,
                  type: el,
                  exp: ec,
                  nbf: eu,
                  methods: ed = [],
                  expiry: eh,
                } = s,
                ep = [...(s.resources || [])],
                { topic: ef, uri: eg } = await this.client.core.pairing.create({
                  methods: ["wc_sessionAuthenticate"],
                  transportType: et,
                });
              this.client.logger.info({
                message: "Generated new pairing",
                pairing: { topic: ef, uri: eg },
              });
              let em = await this.client.core.crypto.generateKeyPair(),
                ew = lr(em);
              if (
                (await Promise.all([
                  this.client.auth.authKeys.set(nD, {
                    responseTopic: ew,
                    publicKey: em,
                  }),
                  this.client.auth.pairingTopics.set(ew, {
                    topic: ew,
                    pairingTopic: ef,
                  }),
                ]),
                await this.client.core.relayer.subscribe(ew, {
                  transportType: et,
                }),
                this.client.logger.info(
                  `sending request to new pairing topic: ${ef}`
                ),
                ed.length > 0)
              ) {
                let { namespace: s } = te(er[0]),
                  x = (function (s, x, W) {
                    let X = (function (s, x, W, X = {}) {
                      return (
                        W?.sort((s, x) => s.localeCompare(x)),
                        {
                          att: {
                            [s]: (function (s, x, W = {}) {
                              x = x?.sort((s, x) => s.localeCompare(x));
                              let X = x.map((x) => ({ [`${s}/${x}`]: [W] }));
                              return Object.assign({}, ...X);
                            })(x, W, X),
                          },
                        }
                      );
                    })(s, x, W);
                    return index_es_z(X);
                  })(s, "request", ed);
                index_es_G(ep) &&
                  (x = (function (s, x) {
                    let W = $(s),
                      X = $(x),
                      ee = (function (s, x) {
                        index_es_N(s), index_es_N(x);
                        let W = Object.keys(s.att)
                            .concat(Object.keys(x.att))
                            .sort((s, x) => s.localeCompare(x)),
                          X = { att: {} };
                        return (
                          W.forEach((W) => {
                            var ee, et;
                            Object.keys(
                              (null == (ee = s.att) ? void 0 : ee[W]) || {}
                            )
                              .concat(
                                Object.keys(
                                  (null == (et = x.att) ? void 0 : et[W]) || {}
                                )
                              )
                              .sort((s, x) => s.localeCompare(x))
                              .forEach((ee) => {
                                var et, er;
                                X.att[W] = sn(le({}, X.att[W]), {
                                  [ee]:
                                    (null == (et = s.att[W])
                                      ? void 0
                                      : et[ee]) ||
                                    (null == (er = x.att[W]) ? void 0 : er[ee]),
                                });
                              });
                          }),
                          X
                        );
                      })(W, X);
                    return index_es_z(ee);
                  })(x, ep.pop())),
                  ep.push(x);
              }
              let eb =
                  eh && eh > nP.wc_sessionAuthenticate.req.ttl
                    ? eh
                    : nP.wc_sessionAuthenticate.req.ttl,
                ev = {
                  authPayload: {
                    type: el ?? "caip122",
                    chains: er,
                    statement: ei,
                    aud: eo,
                    domain: ea,
                    version: "1",
                    nonce: es,
                    iat: new Date().toISOString(),
                    exp: ec,
                    nbf: eu,
                    resources: ep,
                  },
                  requester: { publicKey: em, metadata: this.client.metadata },
                  expiryTimestamp: Ut(eb),
                },
                ey = {
                  eip155: {
                    chains: er,
                    methods: [...new Set(["personal_sign", ...ed])],
                    events: ["chainChanged", "accountsChanged"],
                  },
                },
                e_ = {
                  requiredNamespaces: {},
                  optionalNamespaces: ey,
                  relays: [{ protocol: "irn" }],
                  pairingTopic: ef,
                  proposer: { publicKey: em, metadata: this.client.metadata },
                  expiryTimestamp: Ut(nP.wc_sessionPropose.req.ttl),
                },
                {
                  done: eC,
                  resolve: ex,
                  reject: eE,
                } = Tt(eb, "Request expired"),
                ce = async ({ error: s, session: x }) => {
                  if ((this.events.off(kt("session_request", eA), Re), s))
                    eE(s);
                  else if (x) {
                    (x.self.publicKey = em),
                      await this.client.session.set(x.topic, x),
                      await this.setExpiry(x.topic, x.expiry),
                      ef &&
                        (await this.client.core.pairing.updateMetadata({
                          topic: ef,
                          metadata: x.peer.metadata,
                        }));
                    let s = this.client.session.get(x.topic);
                    await this.deleteProposal(eS), ex({ session: s });
                  }
                },
                Re = async (s) => {
                  var W, X, ee;
                  let er;
                  if (
                    (await this.deletePendingAuthRequest(eA, {
                      message: "fulfilled",
                      code: 0,
                    }),
                    s.error)
                  ) {
                    let x = dist_index_es_(
                      "WC_METHOD_UNSUPPORTED",
                      "wc_sessionAuthenticate"
                    );
                    return s.error.code === x.code
                      ? void 0
                      : (this.events.off(kt("session_connect"), ce),
                        eE(s.error.message));
                  }
                  await this.deleteProposal(eS),
                    this.events.off(kt("session_connect"), ce);
                  let { cacaos: ei, responder: eo } = s.result,
                    ea = [],
                    es = [];
                  for (let s of ei) {
                    (await Yt({
                      cacao: s,
                      projectId: this.client.core.projectId,
                    })) ||
                      (this.client.logger.error(
                        s,
                        "Signature verification failed"
                      ),
                      eE(
                        dist_index_es_(
                          "SESSION_SETTLEMENT_FAILED",
                          "Signature verification failed"
                        )
                      ));
                    let { p: x } = s,
                      W = index_es_G(x.resources),
                      X = [an(x.iss)],
                      ee = de(x.iss);
                    if (W) {
                      let s = rr(W),
                        x = index_es_or(W);
                      ea.push(...s), X.push(...x);
                    }
                    for (let s of X) es.push(`${s}:${ee}`);
                  }
                  let el = await this.client.core.crypto.generateSharedKey(
                    em,
                    eo.publicKey
                  );
                  ea.length > 0 &&
                    ((er = {
                      topic: el,
                      acknowledged: !0,
                      self: { publicKey: em, metadata: this.client.metadata },
                      peer: eo,
                      controller: eo.publicKey,
                      expiry: Ut(nI),
                      requiredNamespaces: {},
                      optionalNamespaces: {},
                      relay: { protocol: "irn" },
                      pairingTopic: ef,
                      namespaces: Dr([...new Set(ea)], [...new Set(es)]),
                      transportType: et,
                    }),
                    await this.client.core.relayer.subscribe(el, {
                      transportType: et,
                    }),
                    await this.client.session.set(el, er),
                    ef &&
                      (await this.client.core.pairing.updateMetadata({
                        topic: ef,
                        metadata: eo.metadata,
                      })),
                    (er = this.client.session.get(el))),
                    null != (W = this.client.metadata.redirect) &&
                      W.linkMode &&
                      null != (X = eo.metadata.redirect) &&
                      X.linkMode &&
                      null != (ee = eo.metadata.redirect) &&
                      ee.universal &&
                      x &&
                      (this.client.core.addLinkModeSupportedApp(
                        eo.metadata.redirect.universal
                      ),
                      this.client.session.update(el, {
                        transportType: r1.link_mode,
                      })),
                    ex({ auths: ei, session: er });
                },
                eA = payloadId(),
                eS = payloadId();
              this.events.once(kt("session_connect"), ce),
                this.events.once(kt("session_request", eA), Re);
              try {
                if (ee) {
                  let s = formatJsonRpcRequest(
                    "wc_sessionAuthenticate",
                    ev,
                    eA
                  );
                  this.client.core.history.set(ef, s);
                  let W = await this.client.core.crypto.encode("", s, {
                    type: 2,
                    encoding: rR,
                  });
                  X = Ir(x, ef, W);
                } else
                  await Promise.all([
                    this.sendRequest({
                      topic: ef,
                      method: "wc_sessionAuthenticate",
                      params: ev,
                      expiry: s.expiry,
                      throwOnFailedPublish: !0,
                      clientRpcId: eA,
                    }),
                    this.sendRequest({
                      topic: ef,
                      method: "wc_sessionPropose",
                      params: e_,
                      expiry: nP.wc_sessionPropose.req.ttl,
                      throwOnFailedPublish: !0,
                      clientRpcId: eS,
                    }),
                  ]);
              } catch (s) {
                throw (
                  (this.events.off(kt("session_connect"), ce),
                  this.events.off(kt("session_request", eA), Re),
                  s)
                );
              }
              return (
                await this.setProposal(eS, dist_index_es_I({ id: eS }, e_)),
                await this.setAuthRequest(eA, {
                  request: dist_index_es_D(dist_index_es_I({}, ev), {
                    verifyContext: {},
                  }),
                  pairingTopic: ef,
                  transportType: et,
                }),
                { uri: X ?? eg, response: eC }
              );
            }),
            (this.approveSessionAuthenticate = async (s) => {
              let x;
              let { id: W, auths: X } = s,
                ee = this.client.core.eventClient.createEvent({
                  properties: {
                    topic: W.toString(),
                    trace: [ic.authenticated_session_approve_started],
                  },
                });
              try {
                this.isInitialized();
              } catch (s) {
                throw (ee.setError(iu.no_internet_connection), s);
              }
              let et = this.getPendingAuthRequest(W);
              if (!et)
                throw (
                  (ee.setError(
                    iu.authenticated_session_pending_request_not_found
                  ),
                  Error(`Could not find pending auth request with id ${W}`))
                );
              let er = et.transportType || r1.relay;
              er === r1.relay && (await this.confirmOnlineStateOrThrow());
              let ei = et.requester.publicKey,
                eo = await this.client.core.crypto.generateKeyPair(),
                ea = lr(ei),
                es = { type: 1, receiverPublicKey: ei, senderPublicKey: eo },
                el = [],
                ec = [];
              for (let s of X) {
                if (
                  !(await Yt({
                    cacao: s,
                    projectId: this.client.core.projectId,
                  }))
                ) {
                  ee.setError(iu.invalid_cacao);
                  let s = dist_index_es_(
                    "SESSION_SETTLEMENT_FAILED",
                    "Signature verification failed"
                  );
                  throw (
                    (await this.sendError({
                      id: W,
                      topic: ea,
                      error: s,
                      encodeOpts: es,
                    }),
                    Error(s.message))
                  );
                }
                ee.addTrace(ic.cacaos_verified);
                let { p: x } = s,
                  X = index_es_G(x.resources),
                  et = [an(x.iss)],
                  er = de(x.iss);
                if (X) {
                  let s = rr(X),
                    x = index_es_or(X);
                  el.push(...s), et.push(...x);
                }
                for (let s of et) ec.push(`${s}:${er}`);
              }
              let eu = await this.client.core.crypto.generateSharedKey(eo, ei);
              if (
                (ee.addTrace(ic.create_authenticated_session_topic),
                el?.length > 0)
              ) {
                (x = {
                  topic: eu,
                  acknowledged: !0,
                  self: { publicKey: eo, metadata: this.client.metadata },
                  peer: { publicKey: ei, metadata: et.requester.metadata },
                  controller: ei,
                  expiry: Ut(nI),
                  authentication: X,
                  requiredNamespaces: {},
                  optionalNamespaces: {},
                  relay: { protocol: "irn" },
                  pairingTopic: et.pairingTopic,
                  namespaces: Dr([...new Set(el)], [...new Set(ec)]),
                  transportType: er,
                }),
                  ee.addTrace(ic.subscribing_authenticated_session_topic);
                try {
                  await this.client.core.relayer.subscribe(eu, {
                    transportType: er,
                  });
                } catch (s) {
                  throw (
                    (ee.setError(
                      iu.subscribe_authenticated_session_topic_failure
                    ),
                    s)
                  );
                }
                ee.addTrace(ic.subscribe_authenticated_session_topic_success),
                  await this.client.session.set(eu, x),
                  ee.addTrace(ic.store_authenticated_session),
                  await this.client.core.pairing.updateMetadata({
                    topic: et.pairingTopic,
                    metadata: et.requester.metadata,
                  });
              }
              ee.addTrace(ic.publishing_authenticated_session_approve);
              try {
                await this.sendResult({
                  topic: ea,
                  id: W,
                  result: {
                    cacaos: X,
                    responder: {
                      publicKey: eo,
                      metadata: this.client.metadata,
                    },
                  },
                  encodeOpts: es,
                  throwOnFailedPublish: !0,
                  appLink: this.getAppLinkIfEnabled(et.requester.metadata, er),
                });
              } catch (s) {
                throw (
                  (ee.setError(
                    iu.authenticated_session_approve_publish_failure
                  ),
                  s)
                );
              }
              return (
                await this.client.auth.requests.delete(W, {
                  message: "fulfilled",
                  code: 0,
                }),
                await this.client.core.pairing.activate({
                  topic: et.pairingTopic,
                }),
                this.client.core.eventClient.deleteEvent({
                  eventId: ee.eventId,
                }),
                { session: x }
              );
            }),
            (this.rejectSessionAuthenticate = async (s) => {
              this.isInitialized();
              let { id: x, reason: W } = s,
                X = this.getPendingAuthRequest(x);
              if (!X)
                throw Error(`Could not find pending auth request with id ${x}`);
              X.transportType === r1.relay &&
                (await this.confirmOnlineStateOrThrow());
              let ee = X.requester.publicKey,
                et = await this.client.core.crypto.generateKeyPair(),
                er = lr(ee);
              await this.sendError({
                id: x,
                topic: er,
                error: W,
                encodeOpts: {
                  type: 1,
                  receiverPublicKey: ee,
                  senderPublicKey: et,
                },
                rpcOpts: nP.wc_sessionAuthenticate.reject,
                appLink: this.getAppLinkIfEnabled(
                  X.requester.metadata,
                  X.transportType
                ),
              }),
                await this.client.auth.requests.delete(x, {
                  message: "rejected",
                  code: 0,
                }),
                await this.client.proposal.delete(
                  x,
                  dist_index_es_("USER_DISCONNECTED")
                );
            }),
            (this.formatAuthMessage = (s) => {
              this.isInitialized();
              let { request: x, iss: W } = s;
              return un(x, W);
            }),
            (this.processRelayMessageCache = () => {
              setTimeout(async () => {
                if (0 !== this.relayMessageCache.length)
                  for (; this.relayMessageCache.length > 0; )
                    try {
                      let s = this.relayMessageCache.shift();
                      s && (await this.onRelayMessage(s));
                    } catch (s) {
                      this.client.logger.error(s);
                    }
              }, 50);
            }),
            (this.cleanupDuplicatePairings = async (s) => {
              if (s.pairingTopic)
                try {
                  let x = this.client.core.pairing.pairings.get(s.pairingTopic),
                    W = this.client.core.pairing.pairings
                      .getAll()
                      .filter((W) => {
                        var X, ee;
                        return (
                          (null == (X = W.peerMetadata) ? void 0 : X.url) &&
                          (null == (ee = W.peerMetadata) ? void 0 : ee.url) ===
                            s.peer.metadata.url &&
                          W.topic &&
                          W.topic !== x.topic
                        );
                      });
                  if (0 === W.length) return;
                  this.client.logger.info(
                    `Cleaning up ${W.length} duplicate pairing(s)`
                  ),
                    await Promise.all(
                      W.map((s) =>
                        this.client.core.pairing.disconnect({ topic: s.topic })
                      )
                    ),
                    this.client.logger.info(
                      "Duplicate pairings clean up finished"
                    );
                } catch (s) {
                  this.client.logger.error(s);
                }
            }),
            (this.deleteSession = async (s) => {
              var x;
              let {
                  topic: W,
                  expirerHasDeleted: X = !1,
                  emitEvent: ee = !0,
                  id: et = 0,
                } = s,
                { self: er } = this.client.session.get(W);
              await this.client.core.relayer.unsubscribe(W),
                await this.client.session.delete(
                  W,
                  dist_index_es_("USER_DISCONNECTED")
                ),
                this.addToRecentlyDeleted(W, "session"),
                this.client.core.crypto.keychain.has(er.publicKey) &&
                  (await this.client.core.crypto.deleteKeyPair(er.publicKey)),
                this.client.core.crypto.keychain.has(W) &&
                  (await this.client.core.crypto.deleteSymKey(W)),
                X || this.client.core.expirer.del(W),
                this.client.core.storage
                  .removeItem(nk)
                  .catch((s) => this.client.logger.warn(s)),
                this.getPendingSessionRequests().forEach((s) => {
                  s.topic === W &&
                    this.deletePendingSessionRequest(
                      s.id,
                      dist_index_es_("USER_DISCONNECTED")
                    );
                }),
                W ===
                  (null == (x = this.sessionRequestQueue.queue[0])
                    ? void 0
                    : x.topic) && (this.sessionRequestQueue.state = nN.idle),
                ee &&
                  this.client.events.emit("session_delete", {
                    id: et,
                    topic: W,
                  });
            }),
            (this.deleteProposal = async (s, x) => {
              if (x)
                try {
                  let x = this.client.proposal.get(s),
                    W = this.client.core.eventClient.getEvent({
                      topic: x.pairingTopic,
                    });
                  W?.setError(il.proposal_expired);
                } catch {}
              await Promise.all([
                this.client.proposal.delete(
                  s,
                  dist_index_es_("USER_DISCONNECTED")
                ),
                x ? Promise.resolve() : this.client.core.expirer.del(s),
              ]),
                this.addToRecentlyDeleted(s, "proposal");
            }),
            (this.deletePendingSessionRequest = async (s, x, W = !1) => {
              await Promise.all([
                this.client.pendingRequest.delete(s, x),
                W ? Promise.resolve() : this.client.core.expirer.del(s),
              ]),
                this.addToRecentlyDeleted(s, "request"),
                (this.sessionRequestQueue.queue =
                  this.sessionRequestQueue.queue.filter((x) => x.id !== s)),
                W &&
                  ((this.sessionRequestQueue.state = nN.idle),
                  this.client.events.emit("session_request_expire", { id: s }));
            }),
            (this.deletePendingAuthRequest = async (s, x, W = !1) => {
              await Promise.all([
                this.client.auth.requests.delete(s, x),
                W ? Promise.resolve() : this.client.core.expirer.del(s),
              ]);
            }),
            (this.setExpiry = async (s, x) => {
              this.client.session.keys.includes(s) &&
                (this.client.core.expirer.set(s, x),
                await this.client.session.update(s, { expiry: x }));
            }),
            (this.setProposal = async (s, x) => {
              this.client.core.expirer.set(s, Ut(nP.wc_sessionPropose.req.ttl)),
                await this.client.proposal.set(s, x);
            }),
            (this.setAuthRequest = async (s, x) => {
              let {
                request: W,
                pairingTopic: X,
                transportType: ee = r1.relay,
              } = x;
              this.client.core.expirer.set(s, W.expiryTimestamp),
                await this.client.auth.requests.set(s, {
                  authPayload: W.authPayload,
                  requester: W.requester,
                  expiryTimestamp: W.expiryTimestamp,
                  id: s,
                  pairingTopic: X,
                  verifyContext: W.verifyContext,
                  transportType: ee,
                });
            }),
            (this.setPendingSessionRequest = async (s) => {
              let { id: x, topic: W, params: X, verifyContext: ee } = s,
                et =
                  X.request.expiryTimestamp || Ut(nP.wc_sessionRequest.req.ttl);
              this.client.core.expirer.set(x, et),
                await this.client.pendingRequest.set(x, {
                  id: x,
                  topic: W,
                  params: X,
                  verifyContext: ee,
                });
            }),
            (this.sendRequest = async (s) => {
              let x, X;
              let {
                  topic: ee,
                  method: et,
                  params: er,
                  expiry: ei,
                  relayRpcId: eo,
                  clientRpcId: ea,
                  throwOnFailedPublish: es,
                  appLink: el,
                } = s,
                ec = formatJsonRpcRequest(et, er, ea),
                eu = !!el;
              try {
                let s = eu ? rR : rP;
                x = await this.client.core.crypto.encode(ee, ec, {
                  encoding: s,
                });
              } catch (s) {
                throw (
                  (await this.cleanup(),
                  this.client.logger.error(
                    `sendRequest() -> core.crypto.encode() for topic ${ee} failed`
                  ),
                  s)
                );
              }
              if (nO.includes(et)) {
                let s = dr(JSON.stringify(ec)),
                  W = dr(x);
                X = await this.client.core.verify.register({
                  id: W,
                  decryptedId: s,
                });
              }
              let ed = nP[et].req;
              if (
                ((ed.attestation = X),
                ei && (ed.ttl = ei),
                eo && (ed.id = eo),
                this.client.core.history.set(ee, ec),
                eu)
              ) {
                let s = Ir(el, ee, x);
                await W.g.Linking.openURL(s, this.client.name);
              } else {
                let s = nP[et].req;
                ei && (s.ttl = ei),
                  eo && (s.id = eo),
                  es
                    ? ((s.internal = dist_index_es_D(
                        dist_index_es_I({}, s.internal),
                        { throwOnFailedPublish: !0 }
                      )),
                      await this.client.core.relayer.publish(ee, x, s))
                    : this.client.core.relayer
                        .publish(ee, x, s)
                        .catch((s) => this.client.logger.error(s));
              }
              return ec.id;
            }),
            (this.sendResult = async (s) => {
              let x, X;
              let {
                  id: ee,
                  topic: et,
                  result: er,
                  throwOnFailedPublish: ei,
                  encodeOpts: eo,
                  appLink: ea,
                } = s,
                es = formatJsonRpcResult(ee, er),
                el = ea && "u" > typeof (null == W.g ? void 0 : W.g.Linking);
              try {
                let s = el ? rR : rP;
                x = await this.client.core.crypto.encode(
                  et,
                  es,
                  dist_index_es_D(dist_index_es_I({}, eo || {}), {
                    encoding: s,
                  })
                );
              } catch (s) {
                throw (
                  (await this.cleanup(),
                  this.client.logger.error(
                    `sendResult() -> core.crypto.encode() for topic ${et} failed`
                  ),
                  s)
                );
              }
              try {
                X = await this.client.core.history.get(et, ee);
              } catch (s) {
                throw (
                  (this.client.logger.error(
                    `sendResult() -> history.get(${et}, ${ee}) failed`
                  ),
                  s)
                );
              }
              if (el) {
                let s = Ir(ea, et, x);
                await W.g.Linking.openURL(s, this.client.name);
              } else {
                let s = nP[X.request.method].res;
                ei
                  ? ((s.internal = dist_index_es_D(
                      dist_index_es_I({}, s.internal),
                      { throwOnFailedPublish: !0 }
                    )),
                    await this.client.core.relayer.publish(et, x, s))
                  : this.client.core.relayer
                      .publish(et, x, s)
                      .catch((s) => this.client.logger.error(s));
              }
              await this.client.core.history.resolve(es);
            }),
            (this.sendError = async (s) => {
              let x, X;
              let {
                  id: ee,
                  topic: et,
                  error: er,
                  encodeOpts: ei,
                  rpcOpts: eo,
                  appLink: ea,
                } = s,
                es = formatJsonRpcError(ee, er),
                el = ea && "u" > typeof (null == W.g ? void 0 : W.g.Linking);
              try {
                let s = el ? rR : rP;
                x = await this.client.core.crypto.encode(
                  et,
                  es,
                  dist_index_es_D(dist_index_es_I({}, ei || {}), {
                    encoding: s,
                  })
                );
              } catch (s) {
                throw (
                  (await this.cleanup(),
                  this.client.logger.error(
                    `sendError() -> core.crypto.encode() for topic ${et} failed`
                  ),
                  s)
                );
              }
              try {
                X = await this.client.core.history.get(et, ee);
              } catch (s) {
                throw (
                  (this.client.logger.error(
                    `sendError() -> history.get(${et}, ${ee}) failed`
                  ),
                  s)
                );
              }
              if (el) {
                let s = Ir(ea, et, x);
                await W.g.Linking.openURL(s, this.client.name);
              } else {
                let s = eo || nP[X.request.method].res;
                this.client.core.relayer.publish(et, x, s);
              }
              await this.client.core.history.resolve(es);
            }),
            (this.cleanup = async () => {
              let s = [],
                x = [];
              this.client.session.getAll().forEach((x) => {
                let W = !1;
                _t(x.expiry) && (W = !0),
                  this.client.core.crypto.keychain.has(x.topic) || (W = !0),
                  W && s.push(x.topic);
              }),
                this.client.proposal.getAll().forEach((s) => {
                  _t(s.expiryTimestamp) && x.push(s.id);
                }),
                await Promise.all([
                  ...s.map((s) => this.deleteSession({ topic: s })),
                  ...x.map((s) => this.deleteProposal(s)),
                ]);
            }),
            (this.onRelayEventRequest = async (s) => {
              this.requestQueue.queue.push(s),
                await this.processRequestsQueue();
            }),
            (this.processRequestsQueue = async () => {
              if (this.requestQueue.state === nN.active) {
                this.client.logger.info(
                  "Request queue already active, skipping..."
                );
                return;
              }
              for (
                this.client.logger.info(
                  `Request queue starting with ${this.requestQueue.queue.length} requests`
                );
                this.requestQueue.queue.length > 0;

              ) {
                this.requestQueue.state = nN.active;
                let s = this.requestQueue.queue.shift();
                if (s)
                  try {
                    await this.processRequest(s);
                  } catch (s) {
                    this.client.logger.warn(s);
                  }
              }
              this.requestQueue.state = nN.idle;
            }),
            (this.processRequest = async (s) => {
              let {
                  topic: x,
                  payload: W,
                  attestation: X,
                  transportType: ee,
                  encryptedId: et,
                } = s,
                er = W.method;
              if (
                !this.shouldIgnorePairingRequest({
                  topic: x,
                  requestMethod: er,
                })
              )
                switch (er) {
                  case "wc_sessionPropose":
                    return await this.onSessionProposeRequest({
                      topic: x,
                      payload: W,
                      attestation: X,
                      encryptedId: et,
                    });
                  case "wc_sessionSettle":
                    return await this.onSessionSettleRequest(x, W);
                  case "wc_sessionUpdate":
                    return await this.onSessionUpdateRequest(x, W);
                  case "wc_sessionExtend":
                    return await this.onSessionExtendRequest(x, W);
                  case "wc_sessionPing":
                    return await this.onSessionPingRequest(x, W);
                  case "wc_sessionDelete":
                    return await this.onSessionDeleteRequest(x, W);
                  case "wc_sessionRequest":
                    return await this.onSessionRequest({
                      topic: x,
                      payload: W,
                      attestation: X,
                      encryptedId: et,
                      transportType: ee,
                    });
                  case "wc_sessionEvent":
                    return await this.onSessionEventRequest(x, W);
                  case "wc_sessionAuthenticate":
                    return await this.onSessionAuthenticateRequest({
                      topic: x,
                      payload: W,
                      attestation: X,
                      encryptedId: et,
                      transportType: ee,
                    });
                  default:
                    return this.client.logger.info(
                      `Unsupported request method ${er}`
                    );
                }
            }),
            (this.onRelayEventResponse = async (s) => {
              let { topic: x, payload: W, transportType: X } = s,
                ee = (await this.client.core.history.get(x, W.id)).request
                  .method;
              switch (ee) {
                case "wc_sessionPropose":
                  return this.onSessionProposeResponse(x, W, X);
                case "wc_sessionSettle":
                  return this.onSessionSettleResponse(x, W);
                case "wc_sessionUpdate":
                  return this.onSessionUpdateResponse(x, W);
                case "wc_sessionExtend":
                  return this.onSessionExtendResponse(x, W);
                case "wc_sessionPing":
                  return this.onSessionPingResponse(x, W);
                case "wc_sessionRequest":
                  return this.onSessionRequestResponse(x, W);
                case "wc_sessionAuthenticate":
                  return this.onSessionAuthenticateResponse(x, W);
                default:
                  return this.client.logger.info(
                    `Unsupported response method ${ee}`
                  );
              }
            }),
            (this.onRelayEventUnknownPayload = (s) => {
              let { topic: x } = s,
                { message: W } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `Decoded payload on topic ${x} is not identifiable as a JSON-RPC request or a response.`
                );
              throw Error(W);
            }),
            (this.shouldIgnorePairingRequest = (s) => {
              let { topic: x, requestMethod: W } = s,
                X = this.expectedPairingMethodMap.get(x);
              return (
                !(!X || X.includes(W)) &&
                !!(
                  X.includes("wc_sessionAuthenticate") &&
                  this.client.events.listenerCount("session_authenticate") > 0
                )
              );
            }),
            (this.onSessionProposeRequest = async (s) => {
              let { topic: x, payload: W, attestation: X, encryptedId: ee } = s,
                { params: et, id: er } = W;
              try {
                let s = this.client.core.eventClient.getEvent({ topic: x });
                0 === this.client.events.listenerCount("session_proposal") &&
                  (console.warn("No listener for session_proposal event"),
                  s?.setError(ia.proposal_listener_not_found)),
                  this.isValidConnect(dist_index_es_I({}, W.params));
                let ei = et.expiryTimestamp || Ut(nP.wc_sessionPropose.req.ttl),
                  eo = dist_index_es_I(
                    { id: er, pairingTopic: x, expiryTimestamp: ei },
                    et
                  );
                await this.setProposal(er, eo);
                let ea = await this.getVerifyContext({
                  attestationId: X,
                  hash: dr(JSON.stringify(W)),
                  encryptedId: ee,
                  metadata: eo.proposer.metadata,
                });
                s?.addTrace(io.emit_session_proposal),
                  this.client.events.emit("session_proposal", {
                    id: er,
                    params: eo,
                    verifyContext: ea,
                  });
              } catch (s) {
                await this.sendError({
                  id: er,
                  topic: x,
                  error: s,
                  rpcOpts: nP.wc_sessionPropose.autoReject,
                }),
                  this.client.logger.error(s);
              }
            }),
            (this.onSessionProposeResponse = async (s, x, W) => {
              let { id: X } = x;
              if (isJsonRpcResult(x)) {
                let { result: ee } = x;
                this.client.logger.trace({
                  type: "method",
                  method: "onSessionProposeResponse",
                  result: ee,
                });
                let et = this.client.proposal.get(X);
                this.client.logger.trace({
                  type: "method",
                  method: "onSessionProposeResponse",
                  proposal: et,
                });
                let er = et.proposer.publicKey;
                this.client.logger.trace({
                  type: "method",
                  method: "onSessionProposeResponse",
                  selfPublicKey: er,
                });
                let ei = ee.responderPublicKey;
                this.client.logger.trace({
                  type: "method",
                  method: "onSessionProposeResponse",
                  peerPublicKey: ei,
                });
                let eo = await this.client.core.crypto.generateSharedKey(
                  er,
                  ei
                );
                this.client.logger.trace({
                  type: "method",
                  method: "onSessionProposeResponse",
                  sessionTopic: eo,
                });
                let ea = await this.client.core.relayer.subscribe(eo, {
                  transportType: W,
                });
                this.client.logger.trace({
                  type: "method",
                  method: "onSessionProposeResponse",
                  subscriptionId: ea,
                }),
                  await this.client.core.pairing.activate({ topic: s });
              } else if (isJsonRpcError(x)) {
                await this.client.proposal.delete(
                  X,
                  dist_index_es_("USER_DISCONNECTED")
                );
                let s = kt("session_connect");
                if (0 === this.events.listenerCount(s))
                  throw Error(`emitting ${s} without any listeners, 954`);
                this.events.emit(kt("session_connect"), { error: x.error });
              }
            }),
            (this.onSessionSettleRequest = async (s, x) => {
              let { id: W, params: X } = x;
              try {
                this.isValidSessionSettleRequest(X);
                let {
                    relay: W,
                    controller: ee,
                    expiry: et,
                    namespaces: er,
                    sessionProperties: ei,
                    sessionConfig: eo,
                  } = x.params,
                  ea = dist_index_es_D(
                    dist_index_es_I(
                      dist_index_es_I(
                        {
                          topic: s,
                          relay: W,
                          expiry: et,
                          namespaces: er,
                          acknowledged: !0,
                          pairingTopic: "",
                          requiredNamespaces: {},
                          optionalNamespaces: {},
                          controller: ee.publicKey,
                          self: {
                            publicKey: "",
                            metadata: this.client.metadata,
                          },
                          peer: {
                            publicKey: ee.publicKey,
                            metadata: ee.metadata,
                          },
                        },
                        ei && { sessionProperties: ei }
                      ),
                      eo && { sessionConfig: eo }
                    ),
                    { transportType: r1.relay }
                  ),
                  es = kt("session_connect");
                if (0 === this.events.listenerCount(es))
                  throw Error(`emitting ${es} without any listeners 997`);
                this.events.emit(kt("session_connect"), { session: ea }),
                  await this.sendResult({
                    id: x.id,
                    topic: s,
                    result: !0,
                    throwOnFailedPublish: !0,
                  });
              } catch (x) {
                await this.sendError({ id: W, topic: s, error: x }),
                  this.client.logger.error(x);
              }
            }),
            (this.onSessionSettleResponse = async (s, x) => {
              let { id: W } = x;
              isJsonRpcResult(x)
                ? (await this.client.session.update(s, { acknowledged: !0 }),
                  this.events.emit(kt("session_approve", W), {}))
                : isJsonRpcError(x) &&
                  (await this.client.session.delete(
                    s,
                    dist_index_es_("USER_DISCONNECTED")
                  ),
                  this.events.emit(kt("session_approve", W), {
                    error: x.error,
                  }));
            }),
            (this.onSessionUpdateRequest = async (s, x) => {
              let { params: W, id: X } = x;
              try {
                let x = `${s}_session_update`,
                  ee = oo.get(x);
                if (ee && this.isRequestOutOfSync(ee, X)) {
                  this.client.logger.warn(
                    `Discarding out of sync request - ${X}`
                  ),
                    this.sendError({
                      id: X,
                      topic: s,
                      error: dist_index_es_("INVALID_UPDATE_REQUEST"),
                    });
                  return;
                }
                this.isValidUpdate(dist_index_es_I({ topic: s }, W));
                try {
                  oo.set(x, X),
                    await this.client.session.update(s, {
                      namespaces: W.namespaces,
                    }),
                    await this.sendResult({
                      id: X,
                      topic: s,
                      result: !0,
                      throwOnFailedPublish: !0,
                    });
                } catch (s) {
                  throw (oo.delete(x), s);
                }
                this.client.events.emit("session_update", {
                  id: X,
                  topic: s,
                  params: W,
                });
              } catch (x) {
                await this.sendError({ id: X, topic: s, error: x }),
                  this.client.logger.error(x);
              }
            }),
            (this.isRequestOutOfSync = (s, x) =>
              x.toString().slice(0, -3) < s.toString().slice(0, -3)),
            (this.onSessionUpdateResponse = (s, x) => {
              let { id: W } = x,
                X = kt("session_update", W);
              if (0 === this.events.listenerCount(X))
                throw Error(`emitting ${X} without any listeners`);
              isJsonRpcResult(x)
                ? this.events.emit(kt("session_update", W), {})
                : isJsonRpcError(x) &&
                  this.events.emit(kt("session_update", W), { error: x.error });
            }),
            (this.onSessionExtendRequest = async (s, x) => {
              let { id: W } = x;
              try {
                this.isValidExtend({ topic: s }),
                  await this.setExpiry(s, Ut(nI)),
                  await this.sendResult({
                    id: W,
                    topic: s,
                    result: !0,
                    throwOnFailedPublish: !0,
                  }),
                  this.client.events.emit("session_extend", {
                    id: W,
                    topic: s,
                  });
              } catch (x) {
                await this.sendError({ id: W, topic: s, error: x }),
                  this.client.logger.error(x);
              }
            }),
            (this.onSessionExtendResponse = (s, x) => {
              let { id: W } = x,
                X = kt("session_extend", W);
              if (0 === this.events.listenerCount(X))
                throw Error(`emitting ${X} without any listeners`);
              isJsonRpcResult(x)
                ? this.events.emit(kt("session_extend", W), {})
                : isJsonRpcError(x) &&
                  this.events.emit(kt("session_extend", W), { error: x.error });
            }),
            (this.onSessionPingRequest = async (s, x) => {
              let { id: W } = x;
              try {
                this.isValidPing({ topic: s }),
                  await this.sendResult({
                    id: W,
                    topic: s,
                    result: !0,
                    throwOnFailedPublish: !0,
                  }),
                  this.client.events.emit("session_ping", { id: W, topic: s });
              } catch (x) {
                await this.sendError({ id: W, topic: s, error: x }),
                  this.client.logger.error(x);
              }
            }),
            (this.onSessionPingResponse = (s, x) => {
              let { id: W } = x,
                X = kt("session_ping", W);
              if (0 === this.events.listenerCount(X))
                throw Error(`emitting ${X} without any listeners`);
              setTimeout(() => {
                isJsonRpcResult(x)
                  ? this.events.emit(kt("session_ping", W), {})
                  : isJsonRpcError(x) &&
                    this.events.emit(kt("session_ping", W), { error: x.error });
              }, 500);
            }),
            (this.onSessionDeleteRequest = async (s, x) => {
              let { id: W } = x;
              try {
                this.isValidDisconnect({ topic: s, reason: x.params }),
                  Promise.all([
                    new Promise((x) => {
                      this.client.core.relayer.once(rJ.publish, async () => {
                        x(await this.deleteSession({ topic: s, id: W }));
                      });
                    }),
                    this.sendResult({
                      id: W,
                      topic: s,
                      result: !0,
                      throwOnFailedPublish: !0,
                    }),
                    this.cleanupPendingSentRequestsForTopic({
                      topic: s,
                      error: dist_index_es_("USER_DISCONNECTED"),
                    }),
                  ]).catch((s) => this.client.logger.error(s));
              } catch (s) {
                this.client.logger.error(s);
              }
            }),
            (this.onSessionRequest = async (s) => {
              var x, W, X;
              let {
                  topic: ee,
                  payload: et,
                  attestation: er,
                  encryptedId: ei,
                  transportType: eo,
                } = s,
                { id: ea, params: es } = et;
              try {
                await this.isValidRequest(dist_index_es_I({ topic: ee }, es));
                let s = this.client.session.get(ee),
                  et = await this.getVerifyContext({
                    attestationId: er,
                    hash: dr(
                      JSON.stringify(
                        formatJsonRpcRequest("wc_sessionRequest", es, ea)
                      )
                    ),
                    encryptedId: ei,
                    metadata: s.peer.metadata,
                    transportType: eo,
                  }),
                  el = { id: ea, topic: ee, params: es, verifyContext: et };
                await this.setPendingSessionRequest(el),
                  eo === r1.link_mode &&
                    null != (x = s.peer.metadata.redirect) &&
                    x.universal &&
                    this.client.core.addLinkModeSupportedApp(
                      null == (W = s.peer.metadata.redirect)
                        ? void 0
                        : W.universal
                    ),
                  null != (X = this.client.signConfig) && X.disableRequestQueue
                    ? this.emitSessionRequest(el)
                    : (this.addSessionRequestToSessionRequestQueue(el),
                      this.processSessionRequestQueue());
              } catch (s) {
                await this.sendError({ id: ea, topic: ee, error: s }),
                  this.client.logger.error(s);
              }
            }),
            (this.onSessionRequestResponse = (s, x) => {
              let { id: W } = x,
                X = kt("session_request", W);
              if (0 === this.events.listenerCount(X))
                throw Error(`emitting ${X} without any listeners`);
              isJsonRpcResult(x)
                ? this.events.emit(kt("session_request", W), {
                    result: x.result,
                  })
                : isJsonRpcError(x) &&
                  this.events.emit(kt("session_request", W), {
                    error: x.error,
                  });
            }),
            (this.onSessionEventRequest = async (s, x) => {
              let { id: W, params: X } = x;
              try {
                let x = `${s}_session_event_${X.event.name}`,
                  ee = oo.get(x);
                if (ee && this.isRequestOutOfSync(ee, W)) {
                  this.client.logger.info(
                    `Discarding out of sync request - ${W}`
                  );
                  return;
                }
                this.isValidEmit(dist_index_es_I({ topic: s }, X)),
                  this.client.events.emit("session_event", {
                    id: W,
                    topic: s,
                    params: X,
                  }),
                  oo.set(x, W);
              } catch (x) {
                await this.sendError({ id: W, topic: s, error: x }),
                  this.client.logger.error(x);
              }
            }),
            (this.onSessionAuthenticateResponse = (s, x) => {
              let { id: W } = x;
              this.client.logger.trace({
                type: "method",
                method: "onSessionAuthenticateResponse",
                topic: s,
                payload: x,
              }),
                isJsonRpcResult(x)
                  ? this.events.emit(kt("session_request", W), {
                      result: x.result,
                    })
                  : isJsonRpcError(x) &&
                    this.events.emit(kt("session_request", W), {
                      error: x.error,
                    });
            }),
            (this.onSessionAuthenticateRequest = async (s) => {
              var x;
              let {
                topic: W,
                payload: X,
                attestation: ee,
                encryptedId: et,
                transportType: er,
              } = s;
              try {
                let {
                    requester: s,
                    authPayload: ei,
                    expiryTimestamp: eo,
                  } = X.params,
                  ea = await this.getVerifyContext({
                    attestationId: ee,
                    hash: dr(JSON.stringify(X)),
                    encryptedId: et,
                    metadata: s.metadata,
                    transportType: er,
                  }),
                  es = {
                    requester: s,
                    pairingTopic: W,
                    id: X.id,
                    authPayload: ei,
                    verifyContext: ea,
                    expiryTimestamp: eo,
                  };
                await this.setAuthRequest(X.id, {
                  request: es,
                  pairingTopic: W,
                  transportType: er,
                }),
                  er === r1.link_mode &&
                    null != (x = s.metadata.redirect) &&
                    x.universal &&
                    this.client.core.addLinkModeSupportedApp(
                      s.metadata.redirect.universal
                    ),
                  this.client.events.emit("session_authenticate", {
                    topic: W,
                    params: X.params,
                    id: X.id,
                    verifyContext: ea,
                  });
              } catch (et) {
                this.client.logger.error(et);
                let s = X.params.requester.publicKey,
                  x = await this.client.core.crypto.generateKeyPair(),
                  ee = this.getAppLinkIfEnabled(
                    X.params.requester.metadata,
                    er
                  );
                await this.sendError({
                  id: X.id,
                  topic: W,
                  error: et,
                  encodeOpts: {
                    type: 1,
                    receiverPublicKey: s,
                    senderPublicKey: x,
                  },
                  rpcOpts: nP.wc_sessionAuthenticate.autoReject,
                  appLink: ee,
                });
              }
            }),
            (this.addSessionRequestToSessionRequestQueue = (s) => {
              this.sessionRequestQueue.queue.push(s);
            }),
            (this.cleanupAfterResponse = (s) => {
              this.deletePendingSessionRequest(s.response.id, {
                message: "fulfilled",
                code: 0,
              }),
                setTimeout(() => {
                  (this.sessionRequestQueue.state = nN.idle),
                    this.processSessionRequestQueue();
                }, (0, ek.toMiliseconds)(this.requestQueueDelay));
            }),
            (this.cleanupPendingSentRequestsForTopic = ({
              topic: s,
              error: x,
            }) => {
              let W = this.client.core.history.pending;
              W.length > 0 &&
                W.filter(
                  (x) =>
                    x.topic === s && "wc_sessionRequest" === x.request.method
                ).forEach((s) => {
                  let W = s.request.id,
                    X = kt("session_request", W);
                  if (0 === this.events.listenerCount(X))
                    throw Error(`emitting ${X} without any listeners`);
                  this.events.emit(kt("session_request", s.request.id), {
                    error: x,
                  });
                });
            }),
            (this.processSessionRequestQueue = () => {
              if (this.sessionRequestQueue.state === nN.active) {
                this.client.logger.info(
                  "session request queue is already active."
                );
                return;
              }
              let s = this.sessionRequestQueue.queue[0];
              if (!s) {
                this.client.logger.info("session request queue is empty.");
                return;
              }
              try {
                (this.sessionRequestQueue.state = nN.active),
                  this.emitSessionRequest(s);
              } catch (s) {
                this.client.logger.error(s);
              }
            }),
            (this.emitSessionRequest = (s) => {
              this.client.events.emit("session_request", s);
            }),
            (this.onPairingCreated = (s) => {
              if (
                (s.methods &&
                  this.expectedPairingMethodMap.set(s.topic, s.methods),
                s.active)
              )
                return;
              let x = this.client.proposal
                .getAll()
                .find((x) => x.pairingTopic === s.topic);
              x &&
                this.onSessionProposeRequest({
                  topic: s.topic,
                  payload: formatJsonRpcRequest(
                    "wc_sessionPropose",
                    {
                      requiredNamespaces: x.requiredNamespaces,
                      optionalNamespaces: x.optionalNamespaces,
                      relays: x.relays,
                      proposer: x.proposer,
                      sessionProperties: x.sessionProperties,
                    },
                    x.id
                  ),
                });
            }),
            (this.isValidConnect = async (s) => {
              let x;
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `connect() params: ${JSON.stringify(s)}`
                );
                throw Error(x);
              }
              let {
                pairingTopic: W,
                requiredNamespaces: X,
                optionalNamespaces: ee,
                sessionProperties: et,
                relays: er,
              } = s;
              if (
                (T(W) || (await this.isValidPairingTopic(W)),
                (x = !1),
                er
                  ? er &&
                    index_es_K(er) &&
                    er.length &&
                    er.forEach((s) => {
                      x = Fn(s);
                    })
                  : (x = !0),
                !x)
              ) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `connect() relays: ${er}`
                );
                throw Error(s);
              }
              T(X) ||
                0 === Q(X) ||
                this.validateNamespaces(X, "requiredNamespaces"),
                T(ee) ||
                  0 === Q(ee) ||
                  this.validateNamespaces(ee, "optionalNamespaces"),
                T(et) || this.validateSessionProps(et, "sessionProperties");
            }),
            (this.validateNamespaces = (s, x) => {
              let W = (function (s, x, W) {
                let X = null;
                if (s && Q(s)) {
                  let ee;
                  let et = Se(s, x);
                  et && (X = et);
                  let er =
                    ((ee = null),
                    Object.entries(s).forEach(([s, X]) => {
                      var et, er;
                      let ei;
                      if (ee) return;
                      let eo =
                        ((et = H(s, X)),
                        (er = `${x} ${W}`),
                        (ei = null),
                        index_es_K(et) && et.length
                          ? et.forEach((s) => {
                              ei ||
                                F(s) ||
                                (ei = dist_index_es_(
                                  "UNSUPPORTED_CHAINS",
                                  `${er}, chain ${s} should be a string and conform to "namespace:chainId" format`
                                ));
                            })
                          : F(s) ||
                            (ei = dist_index_es_(
                              "UNSUPPORTED_CHAINS",
                              `${er}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`
                            )),
                        ei);
                      eo && (ee = eo);
                    }),
                    ee);
                  er && (X = er);
                } else
                  X = dist_index_es_S(
                    "MISSING_OR_INVALID",
                    `${x}, ${W} should be an object with data`
                  );
                return X;
              })(s, "connect()", x);
              if (W) throw Error(W.message);
            }),
            (this.isValidApprove = async (s) => {
              if (!Hr(s))
                throw Error(
                  dist_index_es_S(
                    "MISSING_OR_INVALID",
                    `approve() params: ${s}`
                  ).message
                );
              let {
                id: x,
                namespaces: W,
                relayProtocol: X,
                sessionProperties: ee,
              } = s;
              this.checkRecentlyDeleted(x), await this.isValidProposalId(x);
              let et = this.client.proposal.get(x),
                er = Kn(W, "approve()");
              if (er) throw Error(er.message);
              let ei = qn(et.requiredNamespaces, W, "approve()");
              if (ei) throw Error(ei.message);
              if (!dist_index_es_b(X, !0)) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `approve() relayProtocol: ${X}`
                );
                throw Error(s);
              }
              T(ee) || this.validateSessionProps(ee, "sessionProperties");
            }),
            (this.isValidReject = async (s) => {
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `reject() params: ${s}`
                );
                throw Error(x);
              }
              let { id: x, reason: W } = s;
              if (
                (this.checkRecentlyDeleted(x),
                await this.isValidProposalId(x),
                !W ||
                  "object" != typeof W ||
                  !W.code ||
                  !Z(W.code, !1) ||
                  !W.message ||
                  !dist_index_es_b(W.message, !1))
              ) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `reject() reason: ${JSON.stringify(W)}`
                );
                throw Error(s);
              }
            }),
            (this.isValidSessionSettleRequest = (s) => {
              let x;
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `onSessionSettleRequest() params: ${s}`
                );
                throw Error(x);
              }
              let { relay: W, controller: X, namespaces: ee, expiry: et } = s;
              if (!Fn(W)) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  "onSessionSettleRequest() relay protocol should be a string"
                );
                throw Error(s);
              }
              let er =
                ((x = null),
                dist_index_es_b(X?.publicKey, !1) ||
                  (x = dist_index_es_S(
                    "MISSING_OR_INVALID",
                    "onSessionSettleRequest() controller public key should be a string"
                  )),
                x);
              if (er) throw Error(er.message);
              let ei = Kn(ee, "onSessionSettleRequest()");
              if (ei) throw Error(ei.message);
              if (_t(et)) {
                let { message: s } = dist_index_es_S(
                  "EXPIRED",
                  "onSessionSettleRequest()"
                );
                throw Error(s);
              }
            }),
            (this.isValidUpdate = async (s) => {
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `update() params: ${s}`
                );
                throw Error(x);
              }
              let { topic: x, namespaces: W } = s;
              this.checkRecentlyDeleted(x), await this.isValidSessionTopic(x);
              let X = this.client.session.get(x),
                ee = Kn(W, "update()");
              if (ee) throw Error(ee.message);
              let et = qn(X.requiredNamespaces, W, "update()");
              if (et) throw Error(et.message);
            }),
            (this.isValidExtend = async (s) => {
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `extend() params: ${s}`
                );
                throw Error(x);
              }
              let { topic: x } = s;
              this.checkRecentlyDeleted(x), await this.isValidSessionTopic(x);
            }),
            (this.isValidRequest = async (s) => {
              var x;
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `request() params: ${s}`
                );
                throw Error(x);
              }
              let { topic: W, request: X, chainId: ee, expiry: et } = s;
              this.checkRecentlyDeleted(W), await this.isValidSessionTopic(W);
              let { namespaces: er } = this.client.session.get(W);
              if (!Yr(er, ee)) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `request() chainId: ${ee}`
                );
                throw Error(s);
              }
              if (T(X) || !dist_index_es_b(X.method, !1)) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `request() ${JSON.stringify(X)}`
                );
                throw Error(s);
              }
              if (
                !(
                  dist_index_es_b((x = X.method), !1) &&
                  (function (s, x) {
                    let W = [];
                    return (
                      Object.values(s).forEach((s) => {
                        U(s.accounts).includes(x) && W.push(...s.methods);
                      }),
                      W
                    );
                  })(er, ee).includes(x)
                )
              ) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `request() method: ${X.method}`
                );
                throw Error(s);
              }
              if (et && (!Z(et, !1) || !(et <= nR.max) || !(et >= nR.min))) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `request() expiry: ${et}. Expiry must be a number (in seconds) between ${nR.min} and ${nR.max}`
                );
                throw Error(s);
              }
            }),
            (this.isValidRespond = async (s) => {
              var x;
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `respond() params: ${s}`
                );
                throw Error(x);
              }
              let { topic: W, response: X } = s;
              try {
                await this.isValidSessionTopic(W);
              } catch (W) {
                throw (
                  (null != (x = s?.response) &&
                    x.id &&
                    this.cleanupAfterResponse(s),
                  W)
                );
              }
              if (
                T(X) ||
                (T(X.result) && T(X.error)) ||
                !Z(X.id, !1) ||
                !dist_index_es_b(X.jsonrpc, !1)
              ) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `respond() response: ${JSON.stringify(X)}`
                );
                throw Error(s);
              }
            }),
            (this.isValidPing = async (s) => {
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `ping() params: ${s}`
                );
                throw Error(x);
              }
              let { topic: x } = s;
              await this.isValidSessionOrPairingTopic(x);
            }),
            (this.isValidEmit = async (s) => {
              var x;
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `emit() params: ${s}`
                );
                throw Error(x);
              }
              let { topic: W, event: X, chainId: ee } = s;
              await this.isValidSessionTopic(W);
              let { namespaces: et } = this.client.session.get(W);
              if (!Yr(et, ee)) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `emit() chainId: ${ee}`
                );
                throw Error(s);
              }
              if (T(X) || !dist_index_es_b(X.name, !1)) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `emit() event: ${JSON.stringify(X)}`
                );
                throw Error(s);
              }
              if (
                !(
                  dist_index_es_b((x = X.name), !1) &&
                  (function (s, x) {
                    let W = [];
                    return (
                      Object.values(s).forEach((s) => {
                        U(s.accounts).includes(x) && W.push(...s.events);
                      }),
                      W
                    );
                  })(et, ee).includes(x)
                )
              ) {
                let { message: s } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `emit() event: ${JSON.stringify(X)}`
                );
                throw Error(s);
              }
            }),
            (this.isValidDisconnect = async (s) => {
              if (!Hr(s)) {
                let { message: x } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `disconnect() params: ${s}`
                );
                throw Error(x);
              }
              let { topic: x } = s;
              await this.isValidSessionOrPairingTopic(x);
            }),
            (this.isValidAuthenticate = (s) => {
              let { chains: x, uri: W, domain: X, nonce: ee } = s;
              if (!Array.isArray(x) || 0 === x.length)
                throw Error("chains is required and must be a non-empty array");
              if (!dist_index_es_b(W, !1))
                throw Error("uri is required parameter");
              if (!dist_index_es_b(X, !1))
                throw Error("domain is required parameter");
              if (!dist_index_es_b(ee, !1))
                throw Error("nonce is required parameter");
              if ([...new Set(x.map((s) => te(s).namespace))].length > 1)
                throw Error(
                  "Multi-namespace requests are not supported. Please request single namespace only."
                );
              let { namespace: et } = te(x[0]);
              if ("eip155" !== et)
                throw Error(
                  "Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains."
                );
            }),
            (this.getVerifyContext = async (s) => {
              let {
                  attestationId: x,
                  hash: W,
                  encryptedId: X,
                  metadata: ee,
                  transportType: et,
                } = s,
                er = {
                  verified: {
                    verifyUrl: ee.verifyUrl || r7,
                    validation: "UNKNOWN",
                    origin: ee.url || "",
                  },
                };
              try {
                if (et === r1.link_mode) {
                  let s = this.getAppLinkIfEnabled(ee, et);
                  return (
                    (er.verified.validation =
                      s && new URL(s).origin === new URL(ee.url).origin
                        ? "VALID"
                        : "INVALID"),
                    er
                  );
                }
                let s = await this.client.core.verify.resolve({
                  attestationId: x,
                  hash: W,
                  encryptedId: X,
                  verifyUrl: ee.verifyUrl,
                });
                s &&
                  ((er.verified.origin = s.origin),
                  (er.verified.isScam = s.isScam),
                  (er.verified.validation =
                    s.origin === new URL(ee.url).origin ? "VALID" : "INVALID"));
              } catch (s) {
                this.client.logger.warn(s);
              }
              return (
                this.client.logger.debug(
                  `Verify context: ${JSON.stringify(er)}`
                ),
                er
              );
            }),
            (this.validateSessionProps = (s, x) => {
              Object.values(s).forEach((s) => {
                if (!dist_index_es_b(s, !1)) {
                  let { message: W } = dist_index_es_S(
                    "MISSING_OR_INVALID",
                    `${x} must be in Record<string, string> format. Received: ${JSON.stringify(
                      s
                    )}`
                  );
                  throw Error(W);
                }
              });
            }),
            (this.getPendingAuthRequest = (s) => {
              let x = this.client.auth.requests.get(s);
              return "object" == typeof x ? x : void 0;
            }),
            (this.addToRecentlyDeleted = (s, x) => {
              if (
                (this.recentlyDeletedMap.set(s, x),
                this.recentlyDeletedMap.size >= this.recentlyDeletedLimit)
              ) {
                let s = 0,
                  x = this.recentlyDeletedLimit / 2;
                for (let W of this.recentlyDeletedMap.keys()) {
                  if (s++ >= x) break;
                  this.recentlyDeletedMap.delete(W);
                }
              }
            }),
            (this.checkRecentlyDeleted = (s) => {
              let x = this.recentlyDeletedMap.get(s);
              if (x) {
                let { message: W } = dist_index_es_S(
                  "MISSING_OR_INVALID",
                  `Record was recently deleted - ${x}: ${s}`
                );
                throw Error(W);
              }
            }),
            (this.isLinkModeEnabled = (s, x) => {
              var X, ee, et, er, ei, eo, ea, es, el;
              return (
                !!s &&
                x === r1.link_mode &&
                (null ==
                (ee = null == (X = this.client.metadata) ? void 0 : X.redirect)
                  ? void 0
                  : ee.linkMode) === !0 &&
                (null ==
                (er =
                  null == (et = this.client.metadata) ? void 0 : et.redirect)
                  ? void 0
                  : er.universal) !== void 0 &&
                (null ==
                (eo =
                  null == (ei = this.client.metadata) ? void 0 : ei.redirect)
                  ? void 0
                  : eo.universal) !== "" &&
                (null == (ea = s?.redirect) ? void 0 : ea.universal) !==
                  void 0 &&
                (null == (es = s?.redirect) ? void 0 : es.universal) !== "" &&
                (null == (el = s?.redirect) ? void 0 : el.linkMode) === !0 &&
                this.client.core.linkModeSupportedApps.includes(
                  s.redirect.universal
                ) &&
                "u" > typeof (null == W.g ? void 0 : W.g.Linking)
              );
            }),
            (this.getAppLinkIfEnabled = (s, x) => {
              var W;
              return this.isLinkModeEnabled(s, x)
                ? null == (W = s?.redirect)
                  ? void 0
                  : W.universal
                : void 0;
            }),
            (this.handleLinkModeMessage = ({ url: s }) => {
              if (!s || !s.includes("wc_ev") || !s.includes("topic")) return;
              let x = Vt(s, "topic") || "",
                W = decodeURIComponent(Vt(s, "wc_ev") || ""),
                X = this.client.session.keys.includes(x);
              X &&
                this.client.session.update(x, { transportType: r1.link_mode }),
                this.client.core.dispatchEnvelope({
                  topic: x,
                  message: W,
                  sessionExists: X,
                });
            }),
            (this.registerLinkModeListeners = async () => {
              var s;
              if (
                Lt() ||
                (index_es_R() &&
                  null != (s = this.client.metadata.redirect) &&
                  s.linkMode)
              ) {
                let s = null == W.g ? void 0 : W.g.Linking;
                if ("u" > typeof s) {
                  s.addEventListener(
                    "url",
                    this.handleLinkModeMessage,
                    this.client.name
                  );
                  let x = await s.getInitialURL();
                  x &&
                    setTimeout(() => {
                      this.handleLinkModeMessage({ url: x });
                    }, 50);
                }
              }
            });
        }
        isInitialized() {
          if (!this.initialized) {
            let { message: s } = dist_index_es_S("NOT_INITIALIZED", this.name);
            throw Error(s);
          }
        }
        async confirmOnlineStateOrThrow() {
          await this.client.core.relayer.confirmOnlineStateOrThrow();
        }
        registerRelayerEvents() {
          this.client.core.relayer.on(rJ.message, (s) => {
            !this.initialized || this.relayMessageCache.length > 0
              ? this.relayMessageCache.push(s)
              : this.onRelayMessage(s);
          });
        }
        async onRelayMessage(s) {
          let { topic: x, message: W, attestation: X, transportType: ee } = s,
            { publicKey: et } = this.client.auth.authKeys.keys.includes(nD)
              ? this.client.auth.authKeys.get(nD)
              : { responseTopic: void 0, publicKey: void 0 },
            er = await this.client.core.crypto.decode(x, W, {
              receiverPublicKey: et,
              encoding: ee === r1.link_mode ? rR : rP,
            });
          try {
            isJsonRpcRequest(er)
              ? (this.client.core.history.set(x, er),
                this.onRelayEventRequest({
                  topic: x,
                  payload: er,
                  attestation: X,
                  transportType: ee,
                  encryptedId: dr(W),
                }))
              : isJsonRpcResponse(er)
              ? (await this.client.core.history.resolve(er),
                await this.onRelayEventResponse({
                  topic: x,
                  payload: er,
                  transportType: ee,
                }),
                this.client.core.history.delete(x, er.id))
              : this.onRelayEventUnknownPayload({
                  topic: x,
                  payload: er,
                  transportType: ee,
                });
          } catch (s) {
            this.client.logger.error(s);
          }
        }
        registerExpirerEvents() {
          this.client.core.expirer.on(r9.expired, async (s) => {
            let { topic: x, id: W } = index_es_Ct(s.target);
            return W && this.client.pendingRequest.keys.includes(W)
              ? await this.deletePendingSessionRequest(
                  W,
                  dist_index_es_S("EXPIRED"),
                  !0
                )
              : W && this.client.auth.requests.keys.includes(W)
              ? await this.deletePendingAuthRequest(
                  W,
                  dist_index_es_S("EXPIRED"),
                  !0
                )
              : void (x
                  ? this.client.session.keys.includes(x) &&
                    (await this.deleteSession({
                      topic: x,
                      expirerHasDeleted: !0,
                    }),
                    this.client.events.emit("session_expire", { topic: x }))
                  : W &&
                    (await this.deleteProposal(W, !0),
                    this.client.events.emit("proposal_expire", { id: W })));
          });
        }
        registerPairingEvents() {
          this.client.core.pairing.events.on(r4.create, (s) =>
            this.onPairingCreated(s)
          ),
            this.client.core.pairing.events.on(r4.delete, (s) => {
              this.addToRecentlyDeleted(s.topic, "pairing");
            });
        }
        isValidPairingTopic(s) {
          if (!dist_index_es_b(s, !1)) {
            let { message: x } = dist_index_es_S(
              "MISSING_OR_INVALID",
              `pairing topic should be a string: ${s}`
            );
            throw Error(x);
          }
          if (!this.client.core.pairing.pairings.keys.includes(s)) {
            let { message: x } = dist_index_es_S(
              "NO_MATCHING_KEY",
              `pairing topic doesn't exist: ${s}`
            );
            throw Error(x);
          }
          if (_t(this.client.core.pairing.pairings.get(s).expiry)) {
            let { message: x } = dist_index_es_S(
              "EXPIRED",
              `pairing topic: ${s}`
            );
            throw Error(x);
          }
        }
        async isValidSessionTopic(s) {
          if (!dist_index_es_b(s, !1)) {
            let { message: x } = dist_index_es_S(
              "MISSING_OR_INVALID",
              `session topic should be a string: ${s}`
            );
            throw Error(x);
          }
          if (
            (this.checkRecentlyDeleted(s),
            !this.client.session.keys.includes(s))
          ) {
            let { message: x } = dist_index_es_S(
              "NO_MATCHING_KEY",
              `session topic doesn't exist: ${s}`
            );
            throw Error(x);
          }
          if (_t(this.client.session.get(s).expiry)) {
            await this.deleteSession({ topic: s });
            let { message: x } = dist_index_es_S(
              "EXPIRED",
              `session topic: ${s}`
            );
            throw Error(x);
          }
          if (!this.client.core.crypto.keychain.has(s)) {
            let { message: x } = dist_index_es_S(
              "MISSING_OR_INVALID",
              `session topic does not exist in keychain: ${s}`
            );
            throw (await this.deleteSession({ topic: s }), Error(x));
          }
        }
        async isValidSessionOrPairingTopic(s) {
          if (
            (this.checkRecentlyDeleted(s), this.client.session.keys.includes(s))
          )
            await this.isValidSessionTopic(s);
          else if (this.client.core.pairing.pairings.keys.includes(s))
            this.isValidPairingTopic(s);
          else if (dist_index_es_b(s, !1)) {
            let { message: x } = dist_index_es_S(
              "NO_MATCHING_KEY",
              `session or pairing topic doesn't exist: ${s}`
            );
            throw Error(x);
          } else {
            let { message: x } = dist_index_es_S(
              "MISSING_OR_INVALID",
              `session or pairing topic should be a string: ${s}`
            );
            throw Error(x);
          }
        }
        async isValidProposalId(s) {
          if ("number" != typeof s) {
            let { message: x } = dist_index_es_S(
              "MISSING_OR_INVALID",
              `proposal id should be a number: ${s}`
            );
            throw Error(x);
          }
          if (!this.client.proposal.keys.includes(s)) {
            let { message: x } = dist_index_es_S(
              "NO_MATCHING_KEY",
              `proposal id doesn't exist: ${s}`
            );
            throw Error(x);
          }
          if (_t(this.client.proposal.get(s).expiryTimestamp)) {
            await this.deleteProposal(s);
            let { message: x } = dist_index_es_S(
              "EXPIRED",
              `proposal id: ${s}`
            );
            throw Error(x);
          }
        }
      };
      let index_es_Ss = class index_es_Ss extends li {
        constructor(s, x) {
          super(s, x, "proposal", nA), (this.core = s), (this.logger = x);
        }
      };
      let dist_index_es_wt = class dist_index_es_wt extends li {
        constructor(s, x) {
          super(s, x, "session", nA), (this.core = s), (this.logger = x);
        }
      };
      let index_es_Is = class index_es_Is extends li {
        constructor(s, x) {
          super(s, x, "request", nA, (s) => s.id),
            (this.core = s),
            (this.logger = x);
        }
      };
      let fs = class fs extends li {
        constructor(s, x) {
          super(s, x, "authKeys", nM, () => nD),
            (this.core = s),
            (this.logger = x);
        }
      };
      let vs = class vs extends li {
        constructor(s, x) {
          super(s, x, "pairingTopics", nM), (this.core = s), (this.logger = x);
        }
      };
      let index_es_qs = class index_es_qs extends li {
        constructor(s, x) {
          super(s, x, "requests", nM, (s) => s.id),
            (this.core = s),
            (this.logger = x);
        }
      };
      let index_es_Ts = class index_es_Ts {
        constructor(s, x) {
          (this.core = s),
            (this.logger = x),
            (this.authKeys = new fs(this.core, this.logger)),
            (this.pairingTopics = new vs(this.core, this.logger)),
            (this.requests = new index_es_qs(this.core, this.logger));
        }
        async init() {
          await this.authKeys.init(),
            await this.pairingTopics.init(),
            await this.requests.init();
        }
      };
      let sign_client_dist_index_es_e = class sign_client_dist_index_es_e extends S {
        constructor(s) {
          super(s),
            (this.protocol = "wc"),
            (this.version = 2),
            (this.name = nS.name),
            (this.events = new eA.EventEmitter()),
            (this.on = (s, x) => this.events.on(s, x)),
            (this.once = (s, x) => this.events.once(s, x)),
            (this.off = (s, x) => this.events.off(s, x)),
            (this.removeListener = (s, x) => this.events.removeListener(s, x)),
            (this.removeAllListeners = (s) =>
              this.events.removeAllListeners(s)),
            (this.connect = async (s) => {
              try {
                return await this.engine.connect(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.pair = async (s) => {
              try {
                return await this.engine.pair(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.approve = async (s) => {
              try {
                return await this.engine.approve(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.reject = async (s) => {
              try {
                return await this.engine.reject(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.update = async (s) => {
              try {
                return await this.engine.update(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.extend = async (s) => {
              try {
                return await this.engine.extend(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.request = async (s) => {
              try {
                return await this.engine.request(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.respond = async (s) => {
              try {
                return await this.engine.respond(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.ping = async (s) => {
              try {
                return await this.engine.ping(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.emit = async (s) => {
              try {
                return await this.engine.emit(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.disconnect = async (s) => {
              try {
                return await this.engine.disconnect(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.find = (s) => {
              try {
                return this.engine.find(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.getPendingSessionRequests = () => {
              try {
                return this.engine.getPendingSessionRequests();
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.authenticate = async (s, x) => {
              try {
                return await this.engine.authenticate(s, x);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.formatAuthMessage = (s) => {
              try {
                return this.engine.formatAuthMessage(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.approveSessionAuthenticate = async (s) => {
              try {
                return await this.engine.approveSessionAuthenticate(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.rejectSessionAuthenticate = async (s) => {
              try {
                return await this.engine.rejectSessionAuthenticate(s);
              } catch (s) {
                throw (this.logger.error(s.message), s);
              }
            }),
            (this.name = s?.name || nS.name),
            (this.metadata = s?.metadata || gt()),
            (this.signConfig = s?.signConfig);
          let x =
            "u" > typeof s?.logger && "string" != typeof s?.logger
              ? s.logger
              : (0, ej.gw)((0, ej.jI)({ level: s?.logger || nS.logger }));
          (this.core = s?.core || new index_es_oe(s)),
            (this.logger = (0, ej.Ep)(x, this.name)),
            (this.session = new dist_index_es_wt(this.core, this.logger)),
            (this.proposal = new index_es_Ss(this.core, this.logger)),
            (this.pendingRequest = new index_es_Is(this.core, this.logger)),
            (this.engine = new index_es_Rs(this)),
            (this.auth = new index_es_Ts(this.core, this.logger));
        }
        static async init(s) {
          let x = new sign_client_dist_index_es_e(s);
          return await x.initialize(), x;
        }
        get context() {
          return (0, ej.Fd)(this.logger);
        }
        get pairing() {
          return this.core.pairing.pairings;
        }
        async initialize() {
          this.logger.trace("Initialized");
          try {
            await this.core.start(),
              await this.session.init(),
              await this.proposal.init(),
              await this.pendingRequest.init(),
              await this.auth.init(),
              await this.engine.init(),
              this.logger.info("SignClient Initialization Success"),
              setTimeout(() => {
                this.engine.processRelayMessageCache();
              }, (0, ek.toMiliseconds)(ek.ONE_SECOND));
          } catch (s) {
            throw (
              (this.logger.info("SignClient Initialization Failure"),
              this.logger.error(s.message),
              s)
            );
          }
        }
      };
      var nz = W(96486),
        nH = W(80699),
        nq = W.n(nH),
        nV = Object.defineProperty,
        nW = Object.defineProperties,
        nK = Object.getOwnPropertyDescriptors,
        nZ = Object.getOwnPropertySymbols,
        nG = Object.prototype.hasOwnProperty,
        nY = Object.prototype.propertyIsEnumerable,
        jsonrpc_http_connection_dist_index_es_l = (s, x, W) =>
          x in s
            ? nV(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        dist_index_es_p = (s, x) => {
          for (var W in x || (x = {}))
            nG.call(x, W) &&
              jsonrpc_http_connection_dist_index_es_l(s, W, x[W]);
          if (nZ)
            for (var W of nZ(x))
              nY.call(x, W) &&
                jsonrpc_http_connection_dist_index_es_l(s, W, x[W]);
          return s;
        },
        jsonrpc_http_connection_dist_index_es_v = (s, x) => nW(s, nK(x));
      let nQ = {
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        method: "POST",
      };
      let dist_index_es_f = class dist_index_es_f {
        constructor(s, x = !1) {
          if (
            ((this.url = s),
            (this.disableProviderPing = x),
            (this.events = new eA.EventEmitter()),
            (this.isAvailable = !1),
            (this.registering = !1),
            !isHttpUrl(s))
          )
            throw Error(
              `Provided URL is not compatible with HTTP connection: ${s}`
            );
          (this.url = s), (this.disableProviderPing = x);
        }
        get connected() {
          return this.isAvailable;
        }
        get connecting() {
          return this.registering;
        }
        on(s, x) {
          this.events.on(s, x);
        }
        once(s, x) {
          this.events.once(s, x);
        }
        off(s, x) {
          this.events.off(s, x);
        }
        removeListener(s, x) {
          this.events.removeListener(s, x);
        }
        async open(s = this.url) {
          await this.register(s);
        }
        async close() {
          if (!this.isAvailable) throw Error("Connection already closed");
          this.onClose();
        }
        async send(s) {
          this.isAvailable || (await this.register());
          try {
            let x = (0, eD.u)(s),
              W = await (
                await nq()(
                  this.url,
                  jsonrpc_http_connection_dist_index_es_v(
                    dist_index_es_p({}, nQ),
                    { body: x }
                  )
                )
              ).json();
            this.onPayload({ data: W });
          } catch (x) {
            this.onError(s.id, x);
          }
        }
        async register(s = this.url) {
          if (!isHttpUrl(s))
            throw Error(
              `Provided URL is not compatible with HTTP connection: ${s}`
            );
          if (this.registering) {
            let s = this.events.getMaxListeners();
            return (
              (this.events.listenerCount("register_error") >= s ||
                this.events.listenerCount("open") >= s) &&
                this.events.setMaxListeners(s + 1),
              new Promise((s, x) => {
                this.events.once("register_error", (s) => {
                  this.resetMaxListeners(), x(s);
                }),
                  this.events.once("open", () => {
                    if (
                      (this.resetMaxListeners(), typeof this.isAvailable > "u")
                    )
                      return x(Error("HTTP connection is missing or invalid"));
                    s();
                  });
              })
            );
          }
          (this.url = s), (this.registering = !0);
          try {
            if (!this.disableProviderPing) {
              let x = (0, eD.u)({
                id: 1,
                jsonrpc: "2.0",
                method: "test",
                params: [],
              });
              await nq()(
                s,
                jsonrpc_http_connection_dist_index_es_v(
                  dist_index_es_p({}, nQ),
                  { body: x }
                )
              );
            }
            this.onOpen();
          } catch (x) {
            let s = this.parseError(x);
            throw (this.events.emit("register_error", s), this.onClose(), s);
          }
        }
        onOpen() {
          (this.isAvailable = !0),
            (this.registering = !1),
            this.events.emit("open");
        }
        onClose() {
          (this.isAvailable = !1),
            (this.registering = !1),
            this.events.emit("close");
        }
        onPayload(s) {
          if (typeof s.data > "u") return;
          let x = "string" == typeof s.data ? (0, eD.D)(s.data) : s.data;
          this.events.emit("payload", x);
        }
        onError(s, x) {
          let W = this.parseError(x),
            X = W.message || W.toString(),
            ee = formatJsonRpcError(s, X);
          this.events.emit("payload", ee);
        }
        parseError(s, x = this.url) {
          return parseConnectionError(s, x, "HTTP");
        }
        resetMaxListeners() {
          this.events.getMaxListeners() > 10 && this.events.setMaxListeners(10);
        }
      };
      let nJ = "error",
        nX = "wc@2:universal_provider:",
        n0 = "https://rpc.walletconnect.org/v1/",
        n1 = "generic",
        n2 = `${n0}bundler`,
        n3 = { DEFAULT_CHAIN_CHANGED: "default_chain_changed" };
      var n5 = Object.defineProperty,
        n6 = Object.defineProperties,
        n4 = Object.getOwnPropertyDescriptors,
        n8 = Object.getOwnPropertySymbols,
        n9 = Object.prototype.hasOwnProperty,
        n7 = Object.prototype.propertyIsEnumerable,
        universal_provider_dist_index_es_R = (s, x, W) =>
          x in s
            ? n5(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        universal_provider_dist_index_es_g = (s, x) => {
          for (var W in x || (x = {}))
            n9.call(x, W) && universal_provider_dist_index_es_R(s, W, x[W]);
          if (n8)
            for (var W of n8(x))
              n7.call(x, W) && universal_provider_dist_index_es_R(s, W, x[W]);
          return s;
        },
        universal_provider_dist_index_es_lt = (s, x) => n6(s, n4(x));
      function universal_provider_dist_index_es_h(s, x, W) {
        var X;
        let ee = te(s);
        return (
          (null == (X = x.rpcMap) ? void 0 : X[ee.reference]) ||
          `${n0}?chainId=${ee.namespace}:${ee.reference}&projectId=${W}`
        );
      }
      function universal_provider_dist_index_es_l(s) {
        return s.includes(":") ? s.split(":")[1] : s;
      }
      function index_es_U(s) {
        return s.map((s) => `${s.split(":")[0]}:${s.split(":")[1]}`);
      }
      function dist_index_es_$(s = {}, x = {}) {
        let W = universal_provider_dist_index_es_T(s),
          X = universal_provider_dist_index_es_T(x);
        return (0, nz.merge)(W, X);
      }
      function universal_provider_dist_index_es_T(s) {
        var x, W, X, ee;
        let et = {};
        if (!Q(s)) return et;
        for (let [er, ei] of Object.entries(s)) {
          let s = we(er) ? [er] : ei.chains,
            eo = ei.methods || [],
            ea = ei.events || [],
            es = ei.rpcMap || {},
            el = An(er);
          et[el] = universal_provider_dist_index_es_lt(
            universal_provider_dist_index_es_g(
              universal_provider_dist_index_es_g({}, et[el]),
              ei
            ),
            {
              chains: index_es_O(s, null == (x = et[el]) ? void 0 : x.chains),
              methods: index_es_O(
                eo,
                null == (W = et[el]) ? void 0 : W.methods
              ),
              events: index_es_O(ea, null == (X = et[el]) ? void 0 : X.events),
              rpcMap: universal_provider_dist_index_es_g(
                universal_provider_dist_index_es_g({}, es),
                null == (ee = et[el]) ? void 0 : ee.rpcMap
              ),
            }
          );
        }
        return et;
      }
      function dist_index_es_vt(s) {
        return s.includes(":") ? s.split(":")[2] : s;
      }
      function universal_provider_dist_index_es_k(s) {
        let x = {};
        for (let [W, X] of Object.entries(s)) {
          let s = X.methods || [],
            ee = X.events || [],
            et = X.accounts || [],
            er = we(W) ? [W] : X.chains ? X.chains : index_es_U(X.accounts);
          x[W] = { chains: er, methods: s, events: ee, accounts: et };
        }
        return x;
      }
      function universal_provider_dist_index_es_E(s) {
        return "number" == typeof s
          ? s
          : s.includes("0x")
          ? parseInt(s, 16)
          : isNaN(Number((s = s.includes(":") ? s.split(":")[1] : s)))
          ? s
          : Number(s);
      }
      let oe = {},
        universal_provider_dist_index_es_o = (s) => oe[s],
        universal_provider_dist_index_es_b = (s, x) => {
          oe[s] = x;
        };
      let dist_index_es_ft = class dist_index_es_ft {
        constructor(s) {
          (this.name = "polkadot"),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.chainId = this.getDefaultChain()),
            (this.httpProviders = this.createHttpProviders());
        }
        updateNamespace(s) {
          this.namespace = Object.assign(this.namespace, s);
        }
        requestAccounts() {
          return this.getAccounts();
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId;
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        request(s) {
          return this.namespace.methods.includes(s.request.method)
            ? this.client.request(s)
            : this.getHttpProvider().request(s.request);
        }
        setDefaultChain(s, x) {
          this.httpProviders[s] || this.setHttpProvider(s, x),
            (this.chainId = s),
            this.events.emit(n3.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return (
            (s &&
              s
                .filter((s) => s.split(":")[1] === this.chainId.toString())
                .map((s) => s.split(":")[2])) ||
            []
          );
        }
        createHttpProviders() {
          let s = {};
          return (
            this.namespace.chains.forEach((x) => {
              var W;
              let X = universal_provider_dist_index_es_l(x);
              s[X] = this.createHttpProvider(
                X,
                null == (W = this.namespace.rpcMap) ? void 0 : W[x]
              );
            }),
            s
          );
        }
        getHttpProvider() {
          let s = `${this.name}:${this.chainId}`,
            x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProvider(s, x) {
          let W =
            x ||
            universal_provider_dist_index_es_h(
              s,
              this.namespace,
              this.client.core.projectId
            );
          if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
          return new dist_index_es_o(
            new dist_index_es_f(
              W,
              universal_provider_dist_index_es_o("disableProviderPing")
            )
          );
        }
      };
      var ot = Object.defineProperty,
        oa = Object.defineProperties,
        os = Object.getOwnPropertyDescriptors,
        ol = Object.getOwnPropertySymbols,
        oc = Object.prototype.hasOwnProperty,
        ou = Object.prototype.propertyIsEnumerable,
        G = (s, x, W) =>
          x in s
            ? ot(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        universal_provider_dist_index_es_M = (s, x) => {
          for (var W in x || (x = {})) oc.call(x, W) && G(s, W, x[W]);
          if (ol) for (var W of ol(x)) ou.call(x, W) && G(s, W, x[W]);
          return s;
        },
        universal_provider_dist_index_es_x = (s, x) => oa(s, os(x));
      let dist_index_es_Ht = class dist_index_es_Ht {
        constructor(s) {
          (this.name = "eip155"),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.httpProviders = this.createHttpProviders()),
            (this.chainId = parseInt(this.getDefaultChain()));
        }
        async request(s) {
          switch (s.request.method) {
            case "eth_requestAccounts":
            case "eth_accounts":
              return this.getAccounts();
            case "wallet_switchEthereumChain":
              return await this.handleSwitchChain(s);
            case "eth_chainId":
              return parseInt(this.getDefaultChain());
            case "wallet_getCapabilities":
              return await this.getCapabilities(s);
            case "wallet_getCallsStatus":
              return await this.getCallStatus(s);
          }
          return this.namespace.methods.includes(s.request.method)
            ? await this.client.request(s)
            : this.getHttpProvider().request(s.request);
        }
        updateNamespace(s) {
          this.namespace = Object.assign(this.namespace, s);
        }
        setDefaultChain(s, x) {
          this.httpProviders[s] || this.setHttpProvider(parseInt(s), x),
            (this.chainId = parseInt(s)),
            this.events.emit(n3.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);
        }
        requestAccounts() {
          return this.getAccounts();
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId.toString();
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        createHttpProvider(s, x) {
          let W =
            x ||
            universal_provider_dist_index_es_h(
              `${this.name}:${s}`,
              this.namespace,
              this.client.core.projectId
            );
          if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
          return new dist_index_es_o(
            new dist_index_es_f(
              W,
              universal_provider_dist_index_es_o("disableProviderPing")
            )
          );
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProviders() {
          let s = {};
          return (
            this.namespace.chains.forEach((x) => {
              var W;
              let X = parseInt(universal_provider_dist_index_es_l(x));
              s[X] = this.createHttpProvider(
                X,
                null == (W = this.namespace.rpcMap) ? void 0 : W[x]
              );
            }),
            s
          );
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return s
            ? [
                ...new Set(
                  s
                    .filter((s) => s.split(":")[1] === this.chainId.toString())
                    .map((s) => s.split(":")[2])
                ),
              ]
            : [];
        }
        getHttpProvider() {
          let s = this.chainId,
            x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        async handleSwitchChain(s) {
          var x, W;
          let X = s.request.params
            ? null == (x = s.request.params[0])
              ? void 0
              : x.chainId
            : "0x0";
          X = X.startsWith("0x") ? X : `0x${X}`;
          let ee = parseInt(X, 16);
          if (this.isChainApproved(ee)) this.setDefaultChain(`${ee}`);
          else if (
            this.namespace.methods.includes("wallet_switchEthereumChain")
          )
            await this.client.request({
              topic: s.topic,
              request: { method: s.request.method, params: [{ chainId: X }] },
              chainId: null == (W = this.namespace.chains) ? void 0 : W[0],
            }),
              this.setDefaultChain(`${ee}`);
          else
            throw Error(
              `Failed to switch to chain 'eip155:${ee}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`
            );
          return null;
        }
        isChainApproved(s) {
          return this.namespace.chains.includes(`${this.name}:${s}`);
        }
        async getCapabilities(s) {
          var x, W, X;
          let ee =
            null == (W = null == (x = s.request) ? void 0 : x.params)
              ? void 0
              : W[0];
          if (!ee)
            throw Error(
              "Missing address parameter in `wallet_getCapabilities` request"
            );
          let et = this.client.session.get(s.topic),
            er =
              (null == (X = et?.sessionProperties) ? void 0 : X.capabilities) ||
              {};
          if (null != er && er[ee]) return er?.[ee];
          let ei = await this.client.request(s);
          try {
            await this.client.session.update(s.topic, {
              sessionProperties: universal_provider_dist_index_es_x(
                universal_provider_dist_index_es_M(
                  {},
                  et.sessionProperties || {}
                ),
                {
                  capabilities: universal_provider_dist_index_es_x(
                    universal_provider_dist_index_es_M({}, er || {}),
                    { [ee]: ei }
                  ),
                }
              ),
            });
          } catch (s) {
            console.warn("Failed to update session with capabilities", s);
          }
          return ei;
        }
        async getCallStatus(s) {
          var x, W;
          let X = this.client.session.get(s.topic),
            ee = null == (x = X.sessionProperties) ? void 0 : x.bundler_name;
          if (ee) {
            let x = this.getBundlerUrl(s.chainId, ee);
            try {
              return await this.getUserOperationReceipt(x, s);
            } catch (s) {
              console.warn("Failed to fetch call status from bundler", s, x);
            }
          }
          let et = null == (W = X.sessionProperties) ? void 0 : W.bundler_url;
          if (et)
            try {
              return await this.getUserOperationReceipt(et, s);
            } catch (s) {
              console.warn(
                "Failed to fetch call status from custom bundler",
                s,
                et
              );
            }
          if (this.namespace.methods.includes(s.request.method))
            return await this.client.request(s);
          throw Error("Fetching call status not approved by the wallet.");
        }
        async getUserOperationReceipt(s, x) {
          var W;
          let X = new URL(s),
            ee = await fetch(X, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(
                formatJsonRpcRequest("eth_getUserOperationReceipt", [
                  null == (W = x.request.params) ? void 0 : W[0],
                ])
              ),
            });
          if (!ee.ok)
            throw Error(
              `Failed to fetch user operation receipt - ${ee.status}`
            );
          return await ee.json();
        }
        getBundlerUrl(s, x) {
          return `${n2}?projectId=${this.client.core.projectId}&chainId=${s}&bundler=${x}`;
        }
      };
      let dist_index_es_$t = class dist_index_es_$t {
        constructor(s) {
          (this.name = "solana"),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.chainId = this.getDefaultChain()),
            (this.httpProviders = this.createHttpProviders());
        }
        updateNamespace(s) {
          this.namespace = Object.assign(this.namespace, s);
        }
        requestAccounts() {
          return this.getAccounts();
        }
        request(s) {
          return this.namespace.methods.includes(s.request.method)
            ? this.client.request(s)
            : this.getHttpProvider().request(s.request);
        }
        setDefaultChain(s, x) {
          this.httpProviders[s] || this.setHttpProvider(s, x),
            (this.chainId = s),
            this.events.emit(n3.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId;
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return s
            ? [
                ...new Set(
                  s
                    .filter((s) => s.split(":")[1] === this.chainId.toString())
                    .map((s) => s.split(":")[2])
                ),
              ]
            : [];
        }
        createHttpProviders() {
          let s = {};
          return (
            this.namespace.chains.forEach((x) => {
              var W;
              let X = universal_provider_dist_index_es_l(x);
              s[X] = this.createHttpProvider(
                X,
                null == (W = this.namespace.rpcMap) ? void 0 : W[x]
              );
            }),
            s
          );
        }
        getHttpProvider() {
          let s = `${this.name}:${this.chainId}`,
            x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProvider(s, x) {
          let W =
            x ||
            universal_provider_dist_index_es_h(
              s,
              this.namespace,
              this.client.core.projectId
            );
          if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
          return new dist_index_es_o(
            new dist_index_es_f(
              W,
              universal_provider_dist_index_es_o("disableProviderPing")
            )
          );
        }
      };
      let dist_index_es_Et = class dist_index_es_Et {
        constructor(s) {
          (this.name = "cosmos"),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.chainId = this.getDefaultChain()),
            (this.httpProviders = this.createHttpProviders());
        }
        updateNamespace(s) {
          this.namespace = Object.assign(this.namespace, s);
        }
        requestAccounts() {
          return this.getAccounts();
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId;
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        request(s) {
          return this.namespace.methods.includes(s.request.method)
            ? this.client.request(s)
            : this.getHttpProvider().request(s.request);
        }
        setDefaultChain(s, x) {
          this.httpProviders[s] || this.setHttpProvider(s, x),
            (this.chainId = s),
            this.events.emit(
              n3.DEFAULT_CHAIN_CHANGED,
              `${this.name}:${this.chainId}`
            );
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return s
            ? [
                ...new Set(
                  s
                    .filter((s) => s.split(":")[1] === this.chainId.toString())
                    .map((s) => s.split(":")[2])
                ),
              ]
            : [];
        }
        createHttpProviders() {
          let s = {};
          return (
            this.namespace.chains.forEach((x) => {
              var W;
              let X = universal_provider_dist_index_es_l(x);
              s[X] = this.createHttpProvider(
                X,
                null == (W = this.namespace.rpcMap) ? void 0 : W[x]
              );
            }),
            s
          );
        }
        getHttpProvider() {
          let s = `${this.name}:${this.chainId}`,
            x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProvider(s, x) {
          let W =
            x ||
            universal_provider_dist_index_es_h(
              s,
              this.namespace,
              this.client.core.projectId
            );
          if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
          return new dist_index_es_o(
            new dist_index_es_f(
              W,
              universal_provider_dist_index_es_o("disableProviderPing")
            )
          );
        }
      };
      let dist_index_es_bt = class dist_index_es_bt {
        constructor(s) {
          (this.name = "algorand"),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.chainId = this.getDefaultChain()),
            (this.httpProviders = this.createHttpProviders());
        }
        updateNamespace(s) {
          this.namespace = Object.assign(this.namespace, s);
        }
        requestAccounts() {
          return this.getAccounts();
        }
        request(s) {
          return this.namespace.methods.includes(s.request.method)
            ? this.client.request(s)
            : this.getHttpProvider().request(s.request);
        }
        setDefaultChain(s, x) {
          if (!this.httpProviders[s]) {
            let W =
              x ||
              universal_provider_dist_index_es_h(
                `${this.name}:${s}`,
                this.namespace,
                this.client.core.projectId
              );
            if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
            this.setHttpProvider(s, W);
          }
          (this.chainId = s),
            this.events.emit(
              n3.DEFAULT_CHAIN_CHANGED,
              `${this.name}:${this.chainId}`
            );
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId;
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return s
            ? [
                ...new Set(
                  s
                    .filter((s) => s.split(":")[1] === this.chainId.toString())
                    .map((s) => s.split(":")[2])
                ),
              ]
            : [];
        }
        createHttpProviders() {
          let s = {};
          return (
            this.namespace.chains.forEach((x) => {
              var W;
              s[x] = this.createHttpProvider(
                x,
                null == (W = this.namespace.rpcMap) ? void 0 : W[x]
              );
            }),
            s
          );
        }
        getHttpProvider() {
          let s = `${this.name}:${this.chainId}`,
            x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProvider(s, x) {
          let W =
            x ||
            universal_provider_dist_index_es_h(
              s,
              this.namespace,
              this.client.core.projectId
            );
          return typeof W > "u"
            ? void 0
            : new dist_index_es_o(
                new dist_index_es_f(
                  W,
                  universal_provider_dist_index_es_o("disableProviderPing")
                )
              );
        }
      };
      let dist_index_es_At = class dist_index_es_At {
        constructor(s) {
          (this.name = "cip34"),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.chainId = this.getDefaultChain()),
            (this.httpProviders = this.createHttpProviders());
        }
        updateNamespace(s) {
          this.namespace = Object.assign(this.namespace, s);
        }
        requestAccounts() {
          return this.getAccounts();
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId;
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        request(s) {
          return this.namespace.methods.includes(s.request.method)
            ? this.client.request(s)
            : this.getHttpProvider().request(s.request);
        }
        setDefaultChain(s, x) {
          this.httpProviders[s] || this.setHttpProvider(s, x),
            (this.chainId = s),
            this.events.emit(
              n3.DEFAULT_CHAIN_CHANGED,
              `${this.name}:${this.chainId}`
            );
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return s
            ? [
                ...new Set(
                  s
                    .filter((s) => s.split(":")[1] === this.chainId.toString())
                    .map((s) => s.split(":")[2])
                ),
              ]
            : [];
        }
        createHttpProviders() {
          let s = {};
          return (
            this.namespace.chains.forEach((x) => {
              let W = this.getCardanoRPCUrl(x),
                X = universal_provider_dist_index_es_l(x);
              s[X] = this.createHttpProvider(X, W);
            }),
            s
          );
        }
        getHttpProvider() {
          let s = `${this.name}:${this.chainId}`,
            x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        getCardanoRPCUrl(s) {
          let x = this.namespace.rpcMap;
          if (x) return x[s];
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProvider(s, x) {
          let W = x || this.getCardanoRPCUrl(s);
          if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
          return new dist_index_es_o(
            new dist_index_es_f(
              W,
              universal_provider_dist_index_es_o("disableProviderPing")
            )
          );
        }
      };
      let dist_index_es_Nt = class dist_index_es_Nt {
        constructor(s) {
          (this.name = "elrond"),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.chainId = this.getDefaultChain()),
            (this.httpProviders = this.createHttpProviders());
        }
        updateNamespace(s) {
          this.namespace = Object.assign(this.namespace, s);
        }
        requestAccounts() {
          return this.getAccounts();
        }
        request(s) {
          return this.namespace.methods.includes(s.request.method)
            ? this.client.request(s)
            : this.getHttpProvider().request(s.request);
        }
        setDefaultChain(s, x) {
          this.httpProviders[s] || this.setHttpProvider(s, x),
            (this.chainId = s),
            this.events.emit(n3.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId;
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return s
            ? [
                ...new Set(
                  s
                    .filter((s) => s.split(":")[1] === this.chainId.toString())
                    .map((s) => s.split(":")[2])
                ),
              ]
            : [];
        }
        createHttpProviders() {
          let s = {};
          return (
            this.namespace.chains.forEach((x) => {
              var W;
              let X = universal_provider_dist_index_es_l(x);
              s[X] = this.createHttpProvider(
                X,
                null == (W = this.namespace.rpcMap) ? void 0 : W[x]
              );
            }),
            s
          );
        }
        getHttpProvider() {
          let s = `${this.name}:${this.chainId}`,
            x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProvider(s, x) {
          let W =
            x ||
            universal_provider_dist_index_es_h(
              s,
              this.namespace,
              this.client.core.projectId
            );
          if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
          return new dist_index_es_o(
            new dist_index_es_f(
              W,
              universal_provider_dist_index_es_o("disableProviderPing")
            )
          );
        }
      };
      let universal_provider_dist_index_es_yt = class universal_provider_dist_index_es_yt {
        constructor(s) {
          (this.name = "multiversx"),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.chainId = this.getDefaultChain()),
            (this.httpProviders = this.createHttpProviders());
        }
        updateNamespace(s) {
          this.namespace = Object.assign(this.namespace, s);
        }
        requestAccounts() {
          return this.getAccounts();
        }
        request(s) {
          return this.namespace.methods.includes(s.request.method)
            ? this.client.request(s)
            : this.getHttpProvider().request(s.request);
        }
        setDefaultChain(s, x) {
          this.httpProviders[s] || this.setHttpProvider(s, x),
            (this.chainId = s),
            this.events.emit(n3.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId;
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return s
            ? [
                ...new Set(
                  s
                    .filter((s) => s.split(":")[1] === this.chainId.toString())
                    .map((s) => s.split(":")[2])
                ),
              ]
            : [];
        }
        createHttpProviders() {
          let s = {};
          return (
            this.namespace.chains.forEach((x) => {
              var W;
              let X = universal_provider_dist_index_es_l(x);
              s[X] = this.createHttpProvider(
                X,
                null == (W = this.namespace.rpcMap) ? void 0 : W[x]
              );
            }),
            s
          );
        }
        getHttpProvider() {
          let s = `${this.name}:${this.chainId}`,
            x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProvider(s, x) {
          let W =
            x ||
            universal_provider_dist_index_es_h(
              s,
              this.namespace,
              this.client.core.projectId
            );
          if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
          return new dist_index_es_o(
            new dist_index_es_f(
              W,
              universal_provider_dist_index_es_o("disableProviderPing")
            )
          );
        }
      };
      let dist_index_es_Ot = class dist_index_es_Ot {
        constructor(s) {
          (this.name = "near"),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.chainId = this.getDefaultChain()),
            (this.httpProviders = this.createHttpProviders());
        }
        updateNamespace(s) {
          this.namespace = Object.assign(this.namespace, s);
        }
        requestAccounts() {
          return this.getAccounts();
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId;
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        request(s) {
          return this.namespace.methods.includes(s.request.method)
            ? this.client.request(s)
            : this.getHttpProvider().request(s.request);
        }
        setDefaultChain(s, x) {
          if (((this.chainId = s), !this.httpProviders[s])) {
            let W =
              x ||
              universal_provider_dist_index_es_h(
                `${this.name}:${s}`,
                this.namespace
              );
            if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
            this.setHttpProvider(s, W);
          }
          this.events.emit(
            n3.DEFAULT_CHAIN_CHANGED,
            `${this.name}:${this.chainId}`
          );
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return (
            (s &&
              s
                .filter((s) => s.split(":")[1] === this.chainId.toString())
                .map((s) => s.split(":")[2])) ||
            []
          );
        }
        createHttpProviders() {
          let s = {};
          return (
            this.namespace.chains.forEach((x) => {
              var W;
              s[x] = this.createHttpProvider(
                x,
                null == (W = this.namespace.rpcMap) ? void 0 : W[x]
              );
            }),
            s
          );
        }
        getHttpProvider() {
          let s = `${this.name}:${this.chainId}`,
            x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProvider(s, x) {
          let W = x || universal_provider_dist_index_es_h(s, this.namespace);
          return typeof W > "u"
            ? void 0
            : new dist_index_es_o(
                new dist_index_es_f(
                  W,
                  universal_provider_dist_index_es_o("disableProviderPing")
                )
              );
        }
      };
      let dist_index_es_qt = class dist_index_es_qt {
        constructor(s) {
          (this.name = "tezos"),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.chainId = this.getDefaultChain()),
            (this.httpProviders = this.createHttpProviders());
        }
        updateNamespace(s) {
          this.namespace = Object.assign(this.namespace, s);
        }
        requestAccounts() {
          return this.getAccounts();
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId;
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        request(s) {
          return this.namespace.methods.includes(s.request.method)
            ? this.client.request(s)
            : this.getHttpProvider().request(s.request);
        }
        setDefaultChain(s, x) {
          if (((this.chainId = s), !this.httpProviders[s])) {
            let W =
              x ||
              universal_provider_dist_index_es_h(
                `${this.name}:${s}`,
                this.namespace
              );
            if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
            this.setHttpProvider(s, W);
          }
          this.events.emit(
            n3.DEFAULT_CHAIN_CHANGED,
            `${this.name}:${this.chainId}`
          );
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return (
            (s &&
              s
                .filter((s) => s.split(":")[1] === this.chainId.toString())
                .map((s) => s.split(":")[2])) ||
            []
          );
        }
        createHttpProviders() {
          let s = {};
          return (
            this.namespace.chains.forEach((x) => {
              s[x] = this.createHttpProvider(x);
            }),
            s
          );
        }
        getHttpProvider() {
          let s = `${this.name}:${this.chainId}`,
            x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProvider(s, x) {
          let W = x || universal_provider_dist_index_es_h(s, this.namespace);
          return typeof W > "u"
            ? void 0
            : new dist_index_es_o(new dist_index_es_f(W));
        }
      };
      let dist_index_es_Dt = class dist_index_es_Dt {
        constructor(s) {
          (this.name = n1),
            (this.namespace = s.namespace),
            (this.events = universal_provider_dist_index_es_o("events")),
            (this.client = universal_provider_dist_index_es_o("client")),
            (this.chainId = this.getDefaultChain()),
            (this.httpProviders = this.createHttpProviders());
        }
        updateNamespace(s) {
          (this.namespace.chains = [
            ...new Set((this.namespace.chains || []).concat(s.chains || [])),
          ]),
            (this.namespace.accounts = [
              ...new Set(
                (this.namespace.accounts || []).concat(s.accounts || [])
              ),
            ]),
            (this.namespace.methods = [
              ...new Set(
                (this.namespace.methods || []).concat(s.methods || [])
              ),
            ]),
            (this.namespace.events = [
              ...new Set((this.namespace.events || []).concat(s.events || [])),
            ]),
            (this.httpProviders = this.createHttpProviders());
        }
        requestAccounts() {
          return this.getAccounts();
        }
        request(s) {
          return this.namespace.methods.includes(s.request.method)
            ? this.client.request(s)
            : this.getHttpProvider(s.chainId).request(s.request);
        }
        setDefaultChain(s, x) {
          this.httpProviders[s] || this.setHttpProvider(s, x),
            (this.chainId = s),
            this.events.emit(n3.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);
        }
        getDefaultChain() {
          if (this.chainId) return this.chainId;
          if (this.namespace.defaultChain) return this.namespace.defaultChain;
          let s = this.namespace.chains[0];
          if (!s) throw Error("ChainId not found");
          return s.split(":")[1];
        }
        getAccounts() {
          let s = this.namespace.accounts;
          return s
            ? [
                ...new Set(
                  s
                    .filter((s) => s.split(":")[1] === this.chainId.toString())
                    .map((s) => s.split(":")[2])
                ),
              ]
            : [];
        }
        createHttpProviders() {
          var s, x;
          let W = {};
          return (
            null == (x = null == (s = this.namespace) ? void 0 : s.accounts) ||
              x.forEach((s) => {
                let x = te(s);
                W[`${x.namespace}:${x.reference}`] = this.createHttpProvider(s);
              }),
            W
          );
        }
        getHttpProvider(s) {
          let x = this.httpProviders[s];
          if (typeof x > "u")
            throw Error(`JSON-RPC provider for ${s} not found`);
          return x;
        }
        setHttpProvider(s, x) {
          let W = this.createHttpProvider(s, x);
          W && (this.httpProviders[s] = W);
        }
        createHttpProvider(s, x) {
          let W =
            x ||
            universal_provider_dist_index_es_h(
              s,
              this.namespace,
              this.client.core.projectId
            );
          if (!W) throw Error(`No RPC url provided for chainId: ${s}`);
          return new dist_index_es_o(
            new dist_index_es_f(
              W,
              universal_provider_dist_index_es_o("disableProviderPing")
            )
          );
        }
      };
      var od = Object.defineProperty,
        oh = Object.defineProperties,
        op = Object.getOwnPropertyDescriptors,
        of = Object.getOwnPropertySymbols,
        og = Object.prototype.hasOwnProperty,
        om = Object.prototype.propertyIsEnumerable,
        universal_provider_dist_index_es_z = (s, x, W) =>
          x in s
            ? od(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        universal_provider_dist_index_es_w = (s, x) => {
          for (var W in x || (x = {}))
            og.call(x, W) && universal_provider_dist_index_es_z(s, W, x[W]);
          if (of)
            for (var W of of(x))
              om.call(x, W) && universal_provider_dist_index_es_z(s, W, x[W]);
          return s;
        },
        dist_index_es_A = (s, x) => oh(s, op(x));
      let universal_provider_dist_index_es_C = class universal_provider_dist_index_es_C {
        constructor(s) {
          (this.events = new (eS())()),
            (this.rpcProviders = {}),
            (this.shouldAbortPairingAttempt = !1),
            (this.maxPairingAttempts = 10),
            (this.disableProviderPing = !1),
            (this.providerOpts = s),
            (this.logger =
              "u" > typeof s?.logger && "string" != typeof s?.logger
                ? s.logger
                : (0, ej.gw)((0, ej.jI)({ level: s?.logger || nJ }))),
            (this.disableProviderPing = s?.disableProviderPing || !1);
        }
        static async init(s) {
          let x = new universal_provider_dist_index_es_C(s);
          return await x.initialize(), x;
        }
        async request(s, x, W) {
          let [X, ee] = this.validateChain(x);
          if (!this.session)
            throw Error("Please call connect() before request()");
          return await this.getProvider(X).request({
            request: universal_provider_dist_index_es_w({}, s),
            chainId: `${X}:${ee}`,
            topic: this.session.topic,
            expiry: W,
          });
        }
        sendAsync(s, x, W, X) {
          let ee = new Date().getTime();
          this.request(s, W, X)
            .then((s) => x(null, formatJsonRpcResult(ee, s)))
            .catch((s) => x(s, void 0));
        }
        async enable() {
          if (!this.client) throw Error("Sign Client not initialized");
          return (
            this.session ||
              (await this.connect({
                namespaces: this.namespaces,
                optionalNamespaces: this.optionalNamespaces,
                sessionProperties: this.sessionProperties,
              })),
            await this.requestAccounts()
          );
        }
        async disconnect() {
          var s;
          if (!this.session)
            throw Error("Please call connect() before enable()");
          await this.client.disconnect({
            topic: null == (s = this.session) ? void 0 : s.topic,
            reason: dist_index_es_("USER_DISCONNECTED"),
          }),
            await this.cleanup();
        }
        async connect(s) {
          if (!this.client) throw Error("Sign Client not initialized");
          if (
            (this.setNamespaces(s),
            await this.cleanupPendingPairings(),
            !s.skipPairing)
          )
            return await this.pair(s.pairingTopic);
        }
        async authenticate(s, x) {
          if (!this.client) throw Error("Sign Client not initialized");
          this.setNamespaces(s), await this.cleanupPendingPairings();
          let { uri: W, response: X } = await this.client.authenticate(s, x);
          W && ((this.uri = W), this.events.emit("display_uri", W));
          let ee = await X();
          if (((this.session = ee.session), this.session)) {
            let s = universal_provider_dist_index_es_k(this.session.namespaces);
            (this.namespaces = dist_index_es_$(this.namespaces, s)),
              this.persist("namespaces", this.namespaces),
              this.onConnect();
          }
          return ee;
        }
        on(s, x) {
          this.events.on(s, x);
        }
        once(s, x) {
          this.events.once(s, x);
        }
        removeListener(s, x) {
          this.events.removeListener(s, x);
        }
        off(s, x) {
          this.events.off(s, x);
        }
        get isWalletConnect() {
          return !0;
        }
        async pair(s) {
          this.shouldAbortPairingAttempt = !1;
          let x = 0;
          do {
            if (this.shouldAbortPairingAttempt) throw Error("Pairing aborted");
            if (x >= this.maxPairingAttempts)
              throw Error("Max auto pairing attempts reached");
            let { uri: W, approval: X } = await this.client.connect({
              pairingTopic: s,
              requiredNamespaces: this.namespaces,
              optionalNamespaces: this.optionalNamespaces,
              sessionProperties: this.sessionProperties,
            });
            W && ((this.uri = W), this.events.emit("display_uri", W)),
              await X()
                .then((s) => {
                  this.session = s;
                  let x = universal_provider_dist_index_es_k(s.namespaces);
                  (this.namespaces = dist_index_es_$(this.namespaces, x)),
                    this.persist("namespaces", this.namespaces);
                })
                .catch((s) => {
                  if (s.message !== nT) throw s;
                  x++;
                });
          } while (!this.session);
          return this.onConnect(), this.session;
        }
        setDefaultChain(s, x) {
          try {
            if (!this.session) return;
            let [W, X] = this.validateChain(s),
              ee = this.getProvider(W);
            ee.name === n1
              ? ee.setDefaultChain(`${W}:${X}`, x)
              : ee.setDefaultChain(X, x);
          } catch (s) {
            if (!/Please call connect/.test(s.message)) throw s;
          }
        }
        async cleanupPendingPairings(s = {}) {
          this.logger.info("Cleaning up inactive pairings...");
          let x = this.client.pairing.getAll();
          if (index_es_K(x)) {
            for (let W of x)
              s.deletePairings
                ? this.client.core.expirer.set(W.topic, 0)
                : await this.client.core.relayer.subscriber.unsubscribe(
                    W.topic
                  );
            this.logger.info(`Inactive pairings cleared: ${x.length}`);
          }
        }
        abortPairingAttempt() {
          this.shouldAbortPairingAttempt = !0;
        }
        async checkStorage() {
          if (
            ((this.namespaces = await this.getFromStore("namespaces")),
            (this.optionalNamespaces =
              (await this.getFromStore("optionalNamespaces")) || {}),
            this.client.session.length)
          ) {
            let s = this.client.session.keys.length - 1;
            (this.session = this.client.session.get(
              this.client.session.keys[s]
            )),
              this.createProviders();
          }
        }
        async initialize() {
          this.logger.trace("Initialized"),
            await this.createClient(),
            await this.checkStorage(),
            this.registerEventListeners();
        }
        async createClient() {
          (this.client =
            this.providerOpts.client ||
            (await sign_client_dist_index_es_e.init({
              core: this.providerOpts.core,
              logger: this.providerOpts.logger || nJ,
              relayUrl:
                this.providerOpts.relayUrl || "wss://relay.walletconnect.org",
              projectId: this.providerOpts.projectId,
              metadata: this.providerOpts.metadata,
              storageOptions: this.providerOpts.storageOptions,
              storage: this.providerOpts.storage,
              name: this.providerOpts.name,
              customStoragePrefix: this.providerOpts.customStoragePrefix,
              telemetryEnabled: this.providerOpts.telemetryEnabled,
            }))),
            this.logger.trace("SignClient Initialized");
        }
        createProviders() {
          if (!this.client) throw Error("Sign Client not initialized");
          if (!this.session)
            throw Error(
              "Session not initialized. Please call connect() before enable()"
            );
          let s = [
            ...new Set(Object.keys(this.session.namespaces).map((s) => An(s))),
          ];
          universal_provider_dist_index_es_b("client", this.client),
            universal_provider_dist_index_es_b("events", this.events),
            universal_provider_dist_index_es_b(
              "disableProviderPing",
              this.disableProviderPing
            ),
            s.forEach((s) => {
              if (!this.session) return;
              let x = (function (s, x) {
                  let W = Object.keys(x.namespaces).filter((x) =>
                    x.includes(s)
                  );
                  if (!W.length) return [];
                  let X = [];
                  return (
                    W.forEach((s) => {
                      let W = x.namespaces[s].accounts;
                      X.push(...W);
                    }),
                    X
                  );
                })(s, this.session),
                W = index_es_U(x),
                X = dist_index_es_$(this.namespaces, this.optionalNamespaces),
                ee = dist_index_es_A(
                  universal_provider_dist_index_es_w({}, X[s]),
                  { accounts: x, chains: W }
                );
              switch (s) {
                case "eip155":
                  this.rpcProviders[s] = new dist_index_es_Ht({
                    namespace: ee,
                  });
                  break;
                case "algorand":
                  this.rpcProviders[s] = new dist_index_es_bt({
                    namespace: ee,
                  });
                  break;
                case "solana":
                  this.rpcProviders[s] = new dist_index_es_$t({
                    namespace: ee,
                  });
                  break;
                case "cosmos":
                  this.rpcProviders[s] = new dist_index_es_Et({
                    namespace: ee,
                  });
                  break;
                case "polkadot":
                  this.rpcProviders[s] = new dist_index_es_ft({
                    namespace: ee,
                  });
                  break;
                case "cip34":
                  this.rpcProviders[s] = new dist_index_es_At({
                    namespace: ee,
                  });
                  break;
                case "elrond":
                  this.rpcProviders[s] = new dist_index_es_Nt({
                    namespace: ee,
                  });
                  break;
                case "multiversx":
                  this.rpcProviders[s] =
                    new universal_provider_dist_index_es_yt({ namespace: ee });
                  break;
                case "near":
                  this.rpcProviders[s] = new dist_index_es_Ot({
                    namespace: ee,
                  });
                  break;
                case "tezos":
                  this.rpcProviders[s] = new dist_index_es_qt({
                    namespace: ee,
                  });
                  break;
                default:
                  this.rpcProviders[n1]
                    ? this.rpcProviders[n1].updateNamespace(ee)
                    : (this.rpcProviders[n1] = new dist_index_es_Dt({
                        namespace: ee,
                      }));
              }
            });
        }
        registerEventListeners() {
          if (typeof this.client > "u")
            throw Error("Sign Client is not initialized");
          this.client.on("session_ping", (s) => {
            this.events.emit("session_ping", s);
          }),
            this.client.on("session_event", (s) => {
              let { params: x } = s,
                { event: W } = x;
              if ("accountsChanged" === W.name) {
                let s = W.data;
                s &&
                  index_es_K(s) &&
                  this.events.emit("accountsChanged", s.map(dist_index_es_vt));
              } else if ("chainChanged" === W.name) {
                let s = x.chainId,
                  W = x.event.data,
                  X = An(s),
                  ee =
                    universal_provider_dist_index_es_E(s) !==
                    universal_provider_dist_index_es_E(W)
                      ? `${X}:${universal_provider_dist_index_es_E(W)}`
                      : s;
                this.onChainChanged(ee);
              } else this.events.emit(W.name, W.data);
              this.events.emit("session_event", s);
            }),
            this.client.on("session_update", ({ topic: s, params: x }) => {
              var W;
              let { namespaces: X } = x,
                ee = null == (W = this.client) ? void 0 : W.session.get(s);
              (this.session = dist_index_es_A(
                universal_provider_dist_index_es_w({}, ee),
                { namespaces: X }
              )),
                this.onSessionUpdate(),
                this.events.emit("session_update", { topic: s, params: x });
            }),
            this.client.on("session_delete", async (s) => {
              await this.cleanup(),
                this.events.emit("session_delete", s),
                this.events.emit(
                  "disconnect",
                  dist_index_es_A(
                    universal_provider_dist_index_es_w(
                      {},
                      dist_index_es_("USER_DISCONNECTED")
                    ),
                    { data: s.topic }
                  )
                );
            }),
            this.on(n3.DEFAULT_CHAIN_CHANGED, (s) => {
              this.onChainChanged(s, !0);
            });
        }
        getProvider(s) {
          return this.rpcProviders[s] || this.rpcProviders[n1];
        }
        onSessionUpdate() {
          Object.keys(this.rpcProviders).forEach((s) => {
            var x;
            this.getProvider(s).updateNamespace(
              null == (x = this.session) ? void 0 : x.namespaces[s]
            );
          });
        }
        setNamespaces(s) {
          let {
            namespaces: x,
            optionalNamespaces: W,
            sessionProperties: X,
          } = s;
          x && Object.keys(x).length && (this.namespaces = x),
            W && Object.keys(W).length && (this.optionalNamespaces = W),
            (this.sessionProperties = X),
            this.persist("namespaces", x),
            this.persist("optionalNamespaces", W);
        }
        validateChain(s) {
          let [x, W] = s?.split(":") || ["", ""];
          if (!this.namespaces || !Object.keys(this.namespaces).length)
            return [x, W];
          if (
            x &&
            !Object.keys(this.namespaces || {})
              .map((s) => An(s))
              .includes(x)
          )
            throw Error(
              `Namespace '${x}' is not configured. Please call connect() first with namespace config.`
            );
          if (x && W) return [x, W];
          let X = An(Object.keys(this.namespaces)[0]),
            ee = this.rpcProviders[X].getDefaultChain();
          return [X, ee];
        }
        async requestAccounts() {
          let [s] = this.validateChain();
          return await this.getProvider(s).requestAccounts();
        }
        onChainChanged(s, x = !1) {
          if (!this.namespaces) return;
          let [W, X] = this.validateChain(s);
          X &&
            (x || this.getProvider(W).setDefaultChain(X),
            this.namespaces[W]
              ? (this.namespaces[W].defaultChain = X)
              : this.namespaces[`${W}:${X}`]
              ? (this.namespaces[`${W}:${X}`].defaultChain = X)
              : (this.namespaces[`${W}:${X}`] = { defaultChain: X }),
            this.persist("namespaces", this.namespaces),
            this.events.emit("chainChanged", X));
        }
        onConnect() {
          this.createProviders(),
            this.events.emit("connect", { session: this.session });
        }
        async cleanup() {
          (this.session = void 0),
            (this.namespaces = void 0),
            (this.optionalNamespaces = void 0),
            (this.sessionProperties = void 0),
            this.persist("namespaces", void 0),
            this.persist("optionalNamespaces", void 0),
            this.persist("sessionProperties", void 0),
            await this.cleanupPendingPairings({ deletePairings: !0 });
        }
        persist(s, x) {
          this.client.core.storage.setItem(`${nX}/${s}`, x);
        }
        async getFromStore(s) {
          return await this.client.core.storage.getItem(`${nX}/${s}`);
        }
      };
    },
    62873: function (s, x) {
      "use strict";
      function getFromWindow(s) {
        let x;
        return (
          "undefined" != typeof window &&
            void 0 !== window[s] &&
            (x = window[s]),
          x
        );
      }
      function getFromWindowOrThrow(s) {
        let x = getFromWindow(s);
        if (!x) throw Error(`${s} is not defined in Window`);
        return x;
      }
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.getLocalStorage =
          x.getLocalStorageOrThrow =
          x.getCrypto =
          x.getCryptoOrThrow =
          x.getLocation =
          x.getLocationOrThrow =
          x.getNavigator =
          x.getNavigatorOrThrow =
          x.getDocument =
          x.getDocumentOrThrow =
          x.getFromWindowOrThrow =
          x.getFromWindow =
            void 0),
        (x.getFromWindow = getFromWindow),
        (x.getFromWindowOrThrow = getFromWindowOrThrow),
        (x.getDocumentOrThrow = function () {
          return getFromWindowOrThrow("document");
        }),
        (x.getDocument = function () {
          return getFromWindow("document");
        }),
        (x.getNavigatorOrThrow = function () {
          return getFromWindowOrThrow("navigator");
        }),
        (x.getNavigator = function () {
          return getFromWindow("navigator");
        }),
        (x.getLocationOrThrow = function () {
          return getFromWindowOrThrow("location");
        }),
        (x.getLocation = function () {
          return getFromWindow("location");
        }),
        (x.getCryptoOrThrow = function () {
          return getFromWindowOrThrow("crypto");
        }),
        (x.getCrypto = function () {
          return getFromWindow("crypto");
        }),
        (x.getLocalStorageOrThrow = function () {
          return getFromWindowOrThrow("localStorage");
        }),
        (x.getLocalStorage = function () {
          return getFromWindow("localStorage");
        });
    },
    65755: function (s, x, W) {
      "use strict";
      x.D = void 0;
      let X = W(62873);
      x.D = function () {
        let s, x, W;
        try {
          (s = X.getDocumentOrThrow()), (x = X.getLocationOrThrow());
        } catch (s) {
          return null;
        }
        function getWindowMetadataOfAny(...x) {
          let W = s.getElementsByTagName("meta");
          for (let s = 0; s < W.length; s++) {
            let X = W[s],
              ee = ["itemprop", "property", "name"]
                .map((s) => X.getAttribute(s))
                .filter((s) => !!s && x.includes(s));
            if (ee.length && ee) {
              let s = X.getAttribute("content");
              if (s) return s;
            }
          }
          return "";
        }
        let ee =
            ((W = getWindowMetadataOfAny(
              "name",
              "og:site_name",
              "og:title",
              "twitter:title"
            )) || (W = s.title),
            W),
          et = (function () {
            let s = getWindowMetadataOfAny(
              "description",
              "og:description",
              "twitter:description",
              "keywords"
            );
            return s;
          })(),
          er = x.origin,
          ei = (function () {
            let W = s.getElementsByTagName("link"),
              X = [];
            for (let s = 0; s < W.length; s++) {
              let ee = W[s],
                et = ee.getAttribute("rel");
              if (et && et.toLowerCase().indexOf("icon") > -1) {
                let s = ee.getAttribute("href");
                if (s) {
                  if (
                    -1 === s.toLowerCase().indexOf("https:") &&
                    -1 === s.toLowerCase().indexOf("http:") &&
                    0 !== s.indexOf("//")
                  ) {
                    let W = x.protocol + "//" + x.host;
                    if (0 === s.indexOf("/")) W += s;
                    else {
                      let X = x.pathname.split("/");
                      X.pop();
                      let ee = X.join("/");
                      W += ee + "/" + s;
                    }
                    X.push(W);
                  } else if (0 === s.indexOf("//")) {
                    let W = x.protocol + s;
                    X.push(W);
                  } else X.push(s);
                }
              }
            }
            return X;
          })();
        return { description: et, url: er, icons: ei, name: ee };
      };
    },
    79742: function (s, x) {
      "use strict";
      (x.byteLength = function (s) {
        var x = getLens(s),
          W = x[0],
          X = x[1];
        return ((W + X) * 3) / 4 - X;
      }),
        (x.toByteArray = function (s) {
          var x,
            W,
            et = getLens(s),
            er = et[0],
            ei = et[1],
            eo = new ee(((er + ei) * 3) / 4 - ei),
            ea = 0,
            es = ei > 0 ? er - 4 : er;
          for (W = 0; W < es; W += 4)
            (x =
              (X[s.charCodeAt(W)] << 18) |
              (X[s.charCodeAt(W + 1)] << 12) |
              (X[s.charCodeAt(W + 2)] << 6) |
              X[s.charCodeAt(W + 3)]),
              (eo[ea++] = (x >> 16) & 255),
              (eo[ea++] = (x >> 8) & 255),
              (eo[ea++] = 255 & x);
          return (
            2 === ei &&
              ((x = (X[s.charCodeAt(W)] << 2) | (X[s.charCodeAt(W + 1)] >> 4)),
              (eo[ea++] = 255 & x)),
            1 === ei &&
              ((x =
                (X[s.charCodeAt(W)] << 10) |
                (X[s.charCodeAt(W + 1)] << 4) |
                (X[s.charCodeAt(W + 2)] >> 2)),
              (eo[ea++] = (x >> 8) & 255),
              (eo[ea++] = 255 & x)),
            eo
          );
        }),
        (x.fromByteArray = function (s) {
          for (
            var x, X = s.length, ee = X % 3, et = [], er = 0, ei = X - ee;
            er < ei;
            er += 16383
          )
            et.push(
              (function (s, x, X) {
                for (var ee, et = [], er = x; er < X; er += 3)
                  et.push(
                    W[
                      ((ee =
                        ((s[er] << 16) & 16711680) +
                        ((s[er + 1] << 8) & 65280) +
                        (255 & s[er + 2])) >>
                        18) &
                        63
                    ] +
                      W[(ee >> 12) & 63] +
                      W[(ee >> 6) & 63] +
                      W[63 & ee]
                  );
                return et.join("");
              })(s, er, er + 16383 > ei ? ei : er + 16383)
            );
          return (
            1 === ee
              ? et.push(W[(x = s[X - 1]) >> 2] + W[(x << 4) & 63] + "==")
              : 2 === ee &&
                et.push(
                  W[(x = (s[X - 2] << 8) + s[X - 1]) >> 10] +
                    W[(x >> 4) & 63] +
                    W[(x << 2) & 63] +
                    "="
                ),
            et.join("")
          );
        });
      for (
        var W = [],
          X = [],
          ee = "undefined" != typeof Uint8Array ? Uint8Array : Array,
          et =
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          er = 0,
          ei = et.length;
        er < ei;
        ++er
      )
        (W[er] = et[er]), (X[et.charCodeAt(er)] = er);
      function getLens(s) {
        var x = s.length;
        if (x % 4 > 0)
          throw Error("Invalid string. Length must be a multiple of 4");
        var W = s.indexOf("=");
        -1 === W && (W = x);
        var X = W === x ? 0 : 4 - (W % 4);
        return [W, X];
      }
      (X["-".charCodeAt(0)] = 62), (X["_".charCodeAt(0)] = 63);
    },
    13550: function (s, x, W) {
      !(function (s, x) {
        "use strict";
        function assert(s, x) {
          if (!s) throw Error(x || "Assertion failed");
        }
        function inherits(s, x) {
          s.super_ = x;
          var TempCtor = function () {};
          (TempCtor.prototype = x.prototype),
            (s.prototype = new TempCtor()),
            (s.prototype.constructor = s);
        }
        function BN(s, x, W) {
          if (BN.isBN(s)) return s;
          (this.negative = 0),
            (this.words = null),
            (this.length = 0),
            (this.red = null),
            null !== s &&
              (("le" === x || "be" === x) && ((W = x), (x = 10)),
              this._init(s || 0, x || 10, W || "be"));
        }
        "object" == typeof s ? (s.exports = BN) : (x.BN = BN),
          (BN.BN = BN),
          (BN.wordSize = 26);
        try {
          X =
            "undefined" != typeof window && void 0 !== window.Buffer
              ? window.Buffer
              : W(46601).Buffer;
        } catch (s) {}
        function parseHex4Bits(s, x) {
          var W = s.charCodeAt(x);
          return W >= 48 && W <= 57
            ? W - 48
            : W >= 65 && W <= 70
            ? W - 55
            : W >= 97 && W <= 102
            ? W - 87
            : void assert(!1, "Invalid character in " + s);
        }
        function parseHexByte(s, x, W) {
          var X = parseHex4Bits(s, W);
          return W - 1 >= x && (X |= parseHex4Bits(s, W - 1) << 4), X;
        }
        function parseBase(s, x, W, X) {
          for (
            var ee = 0, et = 0, er = Math.min(s.length, W), ei = x;
            ei < er;
            ei++
          ) {
            var eo = s.charCodeAt(ei) - 48;
            (ee *= X),
              (et = eo >= 49 ? eo - 49 + 10 : eo >= 17 ? eo - 17 + 10 : eo),
              assert(eo >= 0 && et < X, "Invalid character"),
              (ee += et);
          }
          return ee;
        }
        function move(s, x) {
          (s.words = x.words),
            (s.length = x.length),
            (s.negative = x.negative),
            (s.red = x.red);
        }
        if (
          ((BN.isBN = function (s) {
            return (
              s instanceof BN ||
              (null !== s &&
                "object" == typeof s &&
                s.constructor.wordSize === BN.wordSize &&
                Array.isArray(s.words))
            );
          }),
          (BN.max = function (s, x) {
            return s.cmp(x) > 0 ? s : x;
          }),
          (BN.min = function (s, x) {
            return 0 > s.cmp(x) ? s : x;
          }),
          (BN.prototype._init = function (s, x, W) {
            if ("number" == typeof s) return this._initNumber(s, x, W);
            if ("object" == typeof s) return this._initArray(s, x, W);
            "hex" === x && (x = 16), assert(x === (0 | x) && x >= 2 && x <= 36);
            var X = 0;
            "-" === (s = s.toString().replace(/\s+/g, ""))[0] &&
              (X++, (this.negative = 1)),
              X < s.length &&
                (16 === x
                  ? this._parseHex(s, X, W)
                  : (this._parseBase(s, x, X),
                    "le" === W && this._initArray(this.toArray(), x, W)));
          }),
          (BN.prototype._initNumber = function (s, x, W) {
            s < 0 && ((this.negative = 1), (s = -s)),
              s < 67108864
                ? ((this.words = [67108863 & s]), (this.length = 1))
                : s < 4503599627370496
                ? ((this.words = [67108863 & s, (s / 67108864) & 67108863]),
                  (this.length = 2))
                : (assert(s < 9007199254740992),
                  (this.words = [67108863 & s, (s / 67108864) & 67108863, 1]),
                  (this.length = 3)),
              "le" === W && this._initArray(this.toArray(), x, W);
          }),
          (BN.prototype._initArray = function (s, x, W) {
            if ((assert("number" == typeof s.length), s.length <= 0))
              return (this.words = [0]), (this.length = 1), this;
            (this.length = Math.ceil(s.length / 3)),
              (this.words = Array(this.length));
            for (var X, ee, et = 0; et < this.length; et++) this.words[et] = 0;
            var er = 0;
            if ("be" === W)
              for (et = s.length - 1, X = 0; et >= 0; et -= 3)
                (ee = s[et] | (s[et - 1] << 8) | (s[et - 2] << 16)),
                  (this.words[X] |= (ee << er) & 67108863),
                  (this.words[X + 1] = (ee >>> (26 - er)) & 67108863),
                  (er += 24) >= 26 && ((er -= 26), X++);
            else if ("le" === W)
              for (et = 0, X = 0; et < s.length; et += 3)
                (ee = s[et] | (s[et + 1] << 8) | (s[et + 2] << 16)),
                  (this.words[X] |= (ee << er) & 67108863),
                  (this.words[X + 1] = (ee >>> (26 - er)) & 67108863),
                  (er += 24) >= 26 && ((er -= 26), X++);
            return this._strip();
          }),
          (BN.prototype._parseHex = function (s, x, W) {
            (this.length = Math.ceil((s.length - x) / 6)),
              (this.words = Array(this.length));
            for (var X, ee = 0; ee < this.length; ee++) this.words[ee] = 0;
            var et = 0,
              er = 0;
            if ("be" === W)
              for (ee = s.length - 1; ee >= x; ee -= 2)
                (X = parseHexByte(s, x, ee) << et),
                  (this.words[er] |= 67108863 & X),
                  et >= 18
                    ? ((et -= 18), (er += 1), (this.words[er] |= X >>> 26))
                    : (et += 8);
            else
              for (
                ee = (s.length - x) % 2 == 0 ? x + 1 : x;
                ee < s.length;
                ee += 2
              )
                (X = parseHexByte(s, x, ee) << et),
                  (this.words[er] |= 67108863 & X),
                  et >= 18
                    ? ((et -= 18), (er += 1), (this.words[er] |= X >>> 26))
                    : (et += 8);
            this._strip();
          }),
          (BN.prototype._parseBase = function (s, x, W) {
            (this.words = [0]), (this.length = 1);
            for (var X = 0, ee = 1; ee <= 67108863; ee *= x) X++;
            X--, (ee = (ee / x) | 0);
            for (
              var et = s.length - W,
                er = et % X,
                ei = Math.min(et, et - er) + W,
                eo = 0,
                ea = W;
              ea < ei;
              ea += X
            )
              (eo = parseBase(s, ea, ea + X, x)),
                this.imuln(ee),
                this.words[0] + eo < 67108864
                  ? (this.words[0] += eo)
                  : this._iaddn(eo);
            if (0 !== er) {
              var es = 1;
              for (eo = parseBase(s, ea, s.length, x), ea = 0; ea < er; ea++)
                es *= x;
              this.imuln(es),
                this.words[0] + eo < 67108864
                  ? (this.words[0] += eo)
                  : this._iaddn(eo);
            }
            this._strip();
          }),
          (BN.prototype.copy = function (s) {
            s.words = Array(this.length);
            for (var x = 0; x < this.length; x++) s.words[x] = this.words[x];
            (s.length = this.length),
              (s.negative = this.negative),
              (s.red = this.red);
          }),
          (BN.prototype._move = function (s) {
            move(s, this);
          }),
          (BN.prototype.clone = function () {
            var s = new BN(null);
            return this.copy(s), s;
          }),
          (BN.prototype._expand = function (s) {
            for (; this.length < s; ) this.words[this.length++] = 0;
            return this;
          }),
          (BN.prototype._strip = function () {
            for (; this.length > 1 && 0 === this.words[this.length - 1]; )
              this.length--;
            return this._normSign();
          }),
          (BN.prototype._normSign = function () {
            return (
              1 === this.length && 0 === this.words[0] && (this.negative = 0),
              this
            );
          }),
          "undefined" != typeof Symbol && "function" == typeof Symbol.for)
        )
          try {
            BN.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect;
          } catch (s) {
            BN.prototype.inspect = inspect;
          }
        else BN.prototype.inspect = inspect;
        function inspect() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        }
        var X,
          ee = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000",
          ],
          et = [
            0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6,
            5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
          ],
          er = [
            0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607,
            16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536,
            11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101,
            5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368,
            20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875,
            60466176,
          ];
        function smallMulTo(s, x, W) {
          W.negative = x.negative ^ s.negative;
          var X = (s.length + x.length) | 0;
          (W.length = X), (X = (X - 1) | 0);
          var ee = 0 | s.words[0],
            et = 0 | x.words[0],
            er = ee * et,
            ei = 67108863 & er,
            eo = (er / 67108864) | 0;
          W.words[0] = ei;
          for (var ea = 1; ea < X; ea++) {
            for (
              var es = eo >>> 26,
                el = 67108863 & eo,
                ec = Math.min(ea, x.length - 1),
                eu = Math.max(0, ea - s.length + 1);
              eu <= ec;
              eu++
            ) {
              var ed = (ea - eu) | 0;
              (es +=
                ((er = (ee = 0 | s.words[ed]) * (et = 0 | x.words[eu]) + el) /
                  67108864) |
                0),
                (el = 67108863 & er);
            }
            (W.words[ea] = 0 | el), (eo = 0 | es);
          }
          return 0 !== eo ? (W.words[ea] = 0 | eo) : W.length--, W._strip();
        }
        (BN.prototype.toString = function (s, x) {
          if (((x = 0 | x || 1), 16 === (s = s || 10) || "hex" === s)) {
            W = "";
            for (var W, X = 0, ei = 0, eo = 0; eo < this.length; eo++) {
              var ea = this.words[eo],
                es = (((ea << X) | ei) & 16777215).toString(16);
              (ei = (ea >>> (24 - X)) & 16777215),
                (X += 2) >= 26 && ((X -= 26), eo--),
                (W =
                  0 !== ei || eo !== this.length - 1
                    ? ee[6 - es.length] + es + W
                    : es + W);
            }
            for (0 !== ei && (W = ei.toString(16) + W); W.length % x != 0; )
              W = "0" + W;
            return 0 !== this.negative && (W = "-" + W), W;
          }
          if (s === (0 | s) && s >= 2 && s <= 36) {
            var el = et[s],
              ec = er[s];
            W = "";
            var eu = this.clone();
            for (eu.negative = 0; !eu.isZero(); ) {
              var ed = eu.modrn(ec).toString(s);
              W = (eu = eu.idivn(ec)).isZero()
                ? ed + W
                : ee[el - ed.length] + ed + W;
            }
            for (this.isZero() && (W = "0" + W); W.length % x != 0; )
              W = "0" + W;
            return 0 !== this.negative && (W = "-" + W), W;
          }
          assert(!1, "Base should be between 2 and 36");
        }),
          (BN.prototype.toNumber = function () {
            var s = this.words[0];
            return (
              2 === this.length
                ? (s += 67108864 * this.words[1])
                : 3 === this.length && 1 === this.words[2]
                ? (s += 4503599627370496 + 67108864 * this.words[1])
                : this.length > 2 &&
                  assert(!1, "Number can only safely store up to 53 bits"),
              0 !== this.negative ? -s : s
            );
          }),
          (BN.prototype.toJSON = function () {
            return this.toString(16, 2);
          }),
          X &&
            (BN.prototype.toBuffer = function (s, x) {
              return this.toArrayLike(X, s, x);
            }),
          (BN.prototype.toArray = function (s, x) {
            return this.toArrayLike(Array, s, x);
          }),
          (BN.prototype.toArrayLike = function (s, x, W) {
            this._strip();
            var X = this.byteLength(),
              ee = W || Math.max(1, X);
            assert(X <= ee, "byte array longer than desired length"),
              assert(ee > 0, "Requested array length <= 0");
            var et = s.allocUnsafe ? s.allocUnsafe(ee) : new s(ee);
            return this["_toArrayLike" + ("le" === x ? "LE" : "BE")](et, X), et;
          }),
          (BN.prototype._toArrayLikeLE = function (s, x) {
            for (var W = 0, X = 0, ee = 0, et = 0; ee < this.length; ee++) {
              var er = (this.words[ee] << et) | X;
              (s[W++] = 255 & er),
                W < s.length && (s[W++] = (er >> 8) & 255),
                W < s.length && (s[W++] = (er >> 16) & 255),
                6 === et
                  ? (W < s.length && (s[W++] = (er >> 24) & 255),
                    (X = 0),
                    (et = 0))
                  : ((X = er >>> 24), (et += 2));
            }
            if (W < s.length) for (s[W++] = X; W < s.length; ) s[W++] = 0;
          }),
          (BN.prototype._toArrayLikeBE = function (s, x) {
            for (
              var W = s.length - 1, X = 0, ee = 0, et = 0;
              ee < this.length;
              ee++
            ) {
              var er = (this.words[ee] << et) | X;
              (s[W--] = 255 & er),
                W >= 0 && (s[W--] = (er >> 8) & 255),
                W >= 0 && (s[W--] = (er >> 16) & 255),
                6 === et
                  ? (W >= 0 && (s[W--] = (er >> 24) & 255), (X = 0), (et = 0))
                  : ((X = er >>> 24), (et += 2));
            }
            if (W >= 0) for (s[W--] = X; W >= 0; ) s[W--] = 0;
          }),
          Math.clz32
            ? (BN.prototype._countBits = function (s) {
                return 32 - Math.clz32(s);
              })
            : (BN.prototype._countBits = function (s) {
                var x = s,
                  W = 0;
                return (
                  x >= 4096 && ((W += 13), (x >>>= 13)),
                  x >= 64 && ((W += 7), (x >>>= 7)),
                  x >= 8 && ((W += 4), (x >>>= 4)),
                  x >= 2 && ((W += 2), (x >>>= 2)),
                  W + x
                );
              }),
          (BN.prototype._zeroBits = function (s) {
            if (0 === s) return 26;
            var x = s,
              W = 0;
            return (
              (8191 & x) == 0 && ((W += 13), (x >>>= 13)),
              (127 & x) == 0 && ((W += 7), (x >>>= 7)),
              (15 & x) == 0 && ((W += 4), (x >>>= 4)),
              (3 & x) == 0 && ((W += 2), (x >>>= 2)),
              (1 & x) == 0 && W++,
              W
            );
          }),
          (BN.prototype.bitLength = function () {
            var s = this.words[this.length - 1],
              x = this._countBits(s);
            return (this.length - 1) * 26 + x;
          }),
          (BN.prototype.zeroBits = function () {
            if (this.isZero()) return 0;
            for (var s = 0, x = 0; x < this.length; x++) {
              var W = this._zeroBits(this.words[x]);
              if (((s += W), 26 !== W)) break;
            }
            return s;
          }),
          (BN.prototype.byteLength = function () {
            return Math.ceil(this.bitLength() / 8);
          }),
          (BN.prototype.toTwos = function (s) {
            return 0 !== this.negative
              ? this.abs().inotn(s).iaddn(1)
              : this.clone();
          }),
          (BN.prototype.fromTwos = function (s) {
            return this.testn(s - 1)
              ? this.notn(s).iaddn(1).ineg()
              : this.clone();
          }),
          (BN.prototype.isNeg = function () {
            return 0 !== this.negative;
          }),
          (BN.prototype.neg = function () {
            return this.clone().ineg();
          }),
          (BN.prototype.ineg = function () {
            return this.isZero() || (this.negative ^= 1), this;
          }),
          (BN.prototype.iuor = function (s) {
            for (; this.length < s.length; ) this.words[this.length++] = 0;
            for (var x = 0; x < s.length; x++)
              this.words[x] = this.words[x] | s.words[x];
            return this._strip();
          }),
          (BN.prototype.ior = function (s) {
            return assert((this.negative | s.negative) == 0), this.iuor(s);
          }),
          (BN.prototype.or = function (s) {
            return this.length > s.length
              ? this.clone().ior(s)
              : s.clone().ior(this);
          }),
          (BN.prototype.uor = function (s) {
            return this.length > s.length
              ? this.clone().iuor(s)
              : s.clone().iuor(this);
          }),
          (BN.prototype.iuand = function (s) {
            var x;
            x = this.length > s.length ? s : this;
            for (var W = 0; W < x.length; W++)
              this.words[W] = this.words[W] & s.words[W];
            return (this.length = x.length), this._strip();
          }),
          (BN.prototype.iand = function (s) {
            return assert((this.negative | s.negative) == 0), this.iuand(s);
          }),
          (BN.prototype.and = function (s) {
            return this.length > s.length
              ? this.clone().iand(s)
              : s.clone().iand(this);
          }),
          (BN.prototype.uand = function (s) {
            return this.length > s.length
              ? this.clone().iuand(s)
              : s.clone().iuand(this);
          }),
          (BN.prototype.iuxor = function (s) {
            this.length > s.length
              ? ((x = this), (W = s))
              : ((x = s), (W = this));
            for (var x, W, X = 0; X < W.length; X++)
              this.words[X] = x.words[X] ^ W.words[X];
            if (this !== x)
              for (; X < x.length; X++) this.words[X] = x.words[X];
            return (this.length = x.length), this._strip();
          }),
          (BN.prototype.ixor = function (s) {
            return assert((this.negative | s.negative) == 0), this.iuxor(s);
          }),
          (BN.prototype.xor = function (s) {
            return this.length > s.length
              ? this.clone().ixor(s)
              : s.clone().ixor(this);
          }),
          (BN.prototype.uxor = function (s) {
            return this.length > s.length
              ? this.clone().iuxor(s)
              : s.clone().iuxor(this);
          }),
          (BN.prototype.inotn = function (s) {
            assert("number" == typeof s && s >= 0);
            var x = 0 | Math.ceil(s / 26),
              W = s % 26;
            this._expand(x), W > 0 && x--;
            for (var X = 0; X < x; X++)
              this.words[X] = 67108863 & ~this.words[X];
            return (
              W > 0 &&
                (this.words[X] = ~this.words[X] & (67108863 >> (26 - W))),
              this._strip()
            );
          }),
          (BN.prototype.notn = function (s) {
            return this.clone().inotn(s);
          }),
          (BN.prototype.setn = function (s, x) {
            assert("number" == typeof s && s >= 0);
            var W = (s / 26) | 0,
              X = s % 26;
            return (
              this._expand(W + 1),
              x
                ? (this.words[W] = this.words[W] | (1 << X))
                : (this.words[W] = this.words[W] & ~(1 << X)),
              this._strip()
            );
          }),
          (BN.prototype.iadd = function (s) {
            if (0 !== this.negative && 0 === s.negative)
              return (
                (this.negative = 0),
                (x = this.isub(s)),
                (this.negative ^= 1),
                this._normSign()
              );
            if (0 === this.negative && 0 !== s.negative)
              return (
                (s.negative = 0),
                (x = this.isub(s)),
                (s.negative = 1),
                x._normSign()
              );
            this.length > s.length
              ? ((W = this), (X = s))
              : ((W = s), (X = this));
            for (var x, W, X, ee = 0, et = 0; et < X.length; et++)
              (x = (0 | W.words[et]) + (0 | X.words[et]) + ee),
                (this.words[et] = 67108863 & x),
                (ee = x >>> 26);
            for (; 0 !== ee && et < W.length; et++)
              (x = (0 | W.words[et]) + ee),
                (this.words[et] = 67108863 & x),
                (ee = x >>> 26);
            if (((this.length = W.length), 0 !== ee))
              (this.words[this.length] = ee), this.length++;
            else if (W !== this)
              for (; et < W.length; et++) this.words[et] = W.words[et];
            return this;
          }),
          (BN.prototype.add = function (s) {
            var x;
            return 0 !== s.negative && 0 === this.negative
              ? ((s.negative = 0), (x = this.sub(s)), (s.negative ^= 1), x)
              : 0 === s.negative && 0 !== this.negative
              ? ((this.negative = 0), (x = s.sub(this)), (this.negative = 1), x)
              : this.length > s.length
              ? this.clone().iadd(s)
              : s.clone().iadd(this);
          }),
          (BN.prototype.isub = function (s) {
            if (0 !== s.negative) {
              s.negative = 0;
              var x,
                W,
                X = this.iadd(s);
              return (s.negative = 1), X._normSign();
            }
            if (0 !== this.negative)
              return (
                (this.negative = 0),
                this.iadd(s),
                (this.negative = 1),
                this._normSign()
              );
            var ee = this.cmp(s);
            if (0 === ee)
              return (
                (this.negative = 0),
                (this.length = 1),
                (this.words[0] = 0),
                this
              );
            ee > 0 ? ((x = this), (W = s)) : ((x = s), (W = this));
            for (var et = 0, er = 0; er < W.length; er++)
              (et = (X = (0 | x.words[er]) - (0 | W.words[er]) + et) >> 26),
                (this.words[er] = 67108863 & X);
            for (; 0 !== et && er < x.length; er++)
              (et = (X = (0 | x.words[er]) + et) >> 26),
                (this.words[er] = 67108863 & X);
            if (0 === et && er < x.length && x !== this)
              for (; er < x.length; er++) this.words[er] = x.words[er];
            return (
              (this.length = Math.max(this.length, er)),
              x !== this && (this.negative = 1),
              this._strip()
            );
          }),
          (BN.prototype.sub = function (s) {
            return this.clone().isub(s);
          });
        var comb10MulTo = function (s, x, W) {
          var X,
            ee,
            et,
            er = s.words,
            ei = x.words,
            eo = W.words,
            ea = 0,
            es = 0 | er[0],
            el = 8191 & es,
            ec = es >>> 13,
            eu = 0 | er[1],
            ed = 8191 & eu,
            eh = eu >>> 13,
            ep = 0 | er[2],
            ef = 8191 & ep,
            eg = ep >>> 13,
            em = 0 | er[3],
            ew = 8191 & em,
            eb = em >>> 13,
            ev = 0 | er[4],
            ey = 8191 & ev,
            e_ = ev >>> 13,
            eC = 0 | er[5],
            ex = 8191 & eC,
            eE = eC >>> 13,
            eA = 0 | er[6],
            eS = 8191 & eA,
            ek = eA >>> 13,
            eT = 0 | er[7],
            eI = 8191 & eT,
            eP = eT >>> 13,
            eR = 0 | er[8],
            eN = 8191 & eR,
            eO = eR >>> 13,
            eM = 0 | er[9],
            eD = 8191 & eM,
            eB = eM >>> 13,
            eL = 0 | ei[0],
            ej = 8191 & eL,
            eU = eL >>> 13,
            e$ = 0 | ei[1],
            eF = 8191 & e$,
            ez = e$ >>> 13,
            eH = 0 | ei[2],
            eV = 8191 & eH,
            eW = eH >>> 13,
            eK = 0 | ei[3],
            eZ = 8191 & eK,
            eG = eK >>> 13,
            eY = 0 | ei[4],
            eQ = 8191 & eY,
            eJ = eY >>> 13,
            eX = 0 | ei[5],
            e0 = 8191 & eX,
            e1 = eX >>> 13,
            e2 = 0 | ei[6],
            e3 = 8191 & e2,
            e5 = e2 >>> 13,
            e6 = 0 | ei[7],
            e4 = 8191 & e6,
            e8 = e6 >>> 13,
            e9 = 0 | ei[8],
            e7 = 8191 & e9,
            tt = e9 >>> 13,
            tr = 0 | ei[9],
            ta = 8191 & tr,
            ts = tr >>> 13;
          (W.negative = s.negative ^ x.negative), (W.length = 19);
          var tl =
            (((ea + (X = Math.imul(el, ej))) | 0) +
              ((8191 &
                (ee = ((ee = Math.imul(el, eU)) + Math.imul(ec, ej)) | 0)) <<
                13)) |
            0;
          (ea =
            ((((et = Math.imul(ec, eU)) + (ee >>> 13)) | 0) + (tl >>> 26)) | 0),
            (tl &= 67108863),
            (X = Math.imul(ed, ej)),
            (ee = ((ee = Math.imul(ed, eU)) + Math.imul(eh, ej)) | 0),
            (et = Math.imul(eh, eU));
          var tc =
            (((ea + (X = (X + Math.imul(el, eF)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, ez)) | 0) + Math.imul(ec, eF)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, ez)) | 0) + (ee >>> 13)) | 0) +
              (tc >>> 26)) |
            0),
            (tc &= 67108863),
            (X = Math.imul(ef, ej)),
            (ee = ((ee = Math.imul(ef, eU)) + Math.imul(eg, ej)) | 0),
            (et = Math.imul(eg, eU)),
            (X = (X + Math.imul(ed, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, ez)) | 0) + Math.imul(eh, eF)) | 0),
            (et = (et + Math.imul(eh, ez)) | 0);
          var tu =
            (((ea + (X = (X + Math.imul(el, eV)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, eW)) | 0) + Math.imul(ec, eV)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, eW)) | 0) + (ee >>> 13)) | 0) +
              (tu >>> 26)) |
            0),
            (tu &= 67108863),
            (X = Math.imul(ew, ej)),
            (ee = ((ee = Math.imul(ew, eU)) + Math.imul(eb, ej)) | 0),
            (et = Math.imul(eb, eU)),
            (X = (X + Math.imul(ef, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, ez)) | 0) + Math.imul(eg, eF)) | 0),
            (et = (et + Math.imul(eg, ez)) | 0),
            (X = (X + Math.imul(ed, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, eW)) | 0) + Math.imul(eh, eV)) | 0),
            (et = (et + Math.imul(eh, eW)) | 0);
          var td =
            (((ea + (X = (X + Math.imul(el, eZ)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, eG)) | 0) + Math.imul(ec, eZ)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, eG)) | 0) + (ee >>> 13)) | 0) +
              (td >>> 26)) |
            0),
            (td &= 67108863),
            (X = Math.imul(ey, ej)),
            (ee = ((ee = Math.imul(ey, eU)) + Math.imul(e_, ej)) | 0),
            (et = Math.imul(e_, eU)),
            (X = (X + Math.imul(ew, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, ez)) | 0) + Math.imul(eb, eF)) | 0),
            (et = (et + Math.imul(eb, ez)) | 0),
            (X = (X + Math.imul(ef, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, eW)) | 0) + Math.imul(eg, eV)) | 0),
            (et = (et + Math.imul(eg, eW)) | 0),
            (X = (X + Math.imul(ed, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, eG)) | 0) + Math.imul(eh, eZ)) | 0),
            (et = (et + Math.imul(eh, eG)) | 0);
          var th =
            (((ea + (X = (X + Math.imul(el, eQ)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, eJ)) | 0) + Math.imul(ec, eQ)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, eJ)) | 0) + (ee >>> 13)) | 0) +
              (th >>> 26)) |
            0),
            (th &= 67108863),
            (X = Math.imul(ex, ej)),
            (ee = ((ee = Math.imul(ex, eU)) + Math.imul(eE, ej)) | 0),
            (et = Math.imul(eE, eU)),
            (X = (X + Math.imul(ey, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, ez)) | 0) + Math.imul(e_, eF)) | 0),
            (et = (et + Math.imul(e_, ez)) | 0),
            (X = (X + Math.imul(ew, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, eW)) | 0) + Math.imul(eb, eV)) | 0),
            (et = (et + Math.imul(eb, eW)) | 0),
            (X = (X + Math.imul(ef, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, eG)) | 0) + Math.imul(eg, eZ)) | 0),
            (et = (et + Math.imul(eg, eG)) | 0),
            (X = (X + Math.imul(ed, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, eJ)) | 0) + Math.imul(eh, eQ)) | 0),
            (et = (et + Math.imul(eh, eJ)) | 0);
          var tp =
            (((ea + (X = (X + Math.imul(el, e0)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, e1)) | 0) + Math.imul(ec, e0)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, e1)) | 0) + (ee >>> 13)) | 0) +
              (tp >>> 26)) |
            0),
            (tp &= 67108863),
            (X = Math.imul(eS, ej)),
            (ee = ((ee = Math.imul(eS, eU)) + Math.imul(ek, ej)) | 0),
            (et = Math.imul(ek, eU)),
            (X = (X + Math.imul(ex, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, ez)) | 0) + Math.imul(eE, eF)) | 0),
            (et = (et + Math.imul(eE, ez)) | 0),
            (X = (X + Math.imul(ey, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, eW)) | 0) + Math.imul(e_, eV)) | 0),
            (et = (et + Math.imul(e_, eW)) | 0),
            (X = (X + Math.imul(ew, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, eG)) | 0) + Math.imul(eb, eZ)) | 0),
            (et = (et + Math.imul(eb, eG)) | 0),
            (X = (X + Math.imul(ef, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, eJ)) | 0) + Math.imul(eg, eQ)) | 0),
            (et = (et + Math.imul(eg, eJ)) | 0),
            (X = (X + Math.imul(ed, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, e1)) | 0) + Math.imul(eh, e0)) | 0),
            (et = (et + Math.imul(eh, e1)) | 0);
          var tf =
            (((ea + (X = (X + Math.imul(el, e3)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, e5)) | 0) + Math.imul(ec, e3)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, e5)) | 0) + (ee >>> 13)) | 0) +
              (tf >>> 26)) |
            0),
            (tf &= 67108863),
            (X = Math.imul(eI, ej)),
            (ee = ((ee = Math.imul(eI, eU)) + Math.imul(eP, ej)) | 0),
            (et = Math.imul(eP, eU)),
            (X = (X + Math.imul(eS, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, ez)) | 0) + Math.imul(ek, eF)) | 0),
            (et = (et + Math.imul(ek, ez)) | 0),
            (X = (X + Math.imul(ex, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, eW)) | 0) + Math.imul(eE, eV)) | 0),
            (et = (et + Math.imul(eE, eW)) | 0),
            (X = (X + Math.imul(ey, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, eG)) | 0) + Math.imul(e_, eZ)) | 0),
            (et = (et + Math.imul(e_, eG)) | 0),
            (X = (X + Math.imul(ew, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, eJ)) | 0) + Math.imul(eb, eQ)) | 0),
            (et = (et + Math.imul(eb, eJ)) | 0),
            (X = (X + Math.imul(ef, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, e1)) | 0) + Math.imul(eg, e0)) | 0),
            (et = (et + Math.imul(eg, e1)) | 0),
            (X = (X + Math.imul(ed, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, e5)) | 0) + Math.imul(eh, e3)) | 0),
            (et = (et + Math.imul(eh, e5)) | 0);
          var tg =
            (((ea + (X = (X + Math.imul(el, e4)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, e8)) | 0) + Math.imul(ec, e4)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, e8)) | 0) + (ee >>> 13)) | 0) +
              (tg >>> 26)) |
            0),
            (tg &= 67108863),
            (X = Math.imul(eN, ej)),
            (ee = ((ee = Math.imul(eN, eU)) + Math.imul(eO, ej)) | 0),
            (et = Math.imul(eO, eU)),
            (X = (X + Math.imul(eI, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, ez)) | 0) + Math.imul(eP, eF)) | 0),
            (et = (et + Math.imul(eP, ez)) | 0),
            (X = (X + Math.imul(eS, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, eW)) | 0) + Math.imul(ek, eV)) | 0),
            (et = (et + Math.imul(ek, eW)) | 0),
            (X = (X + Math.imul(ex, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, eG)) | 0) + Math.imul(eE, eZ)) | 0),
            (et = (et + Math.imul(eE, eG)) | 0),
            (X = (X + Math.imul(ey, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, eJ)) | 0) + Math.imul(e_, eQ)) | 0),
            (et = (et + Math.imul(e_, eJ)) | 0),
            (X = (X + Math.imul(ew, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, e1)) | 0) + Math.imul(eb, e0)) | 0),
            (et = (et + Math.imul(eb, e1)) | 0),
            (X = (X + Math.imul(ef, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, e5)) | 0) + Math.imul(eg, e3)) | 0),
            (et = (et + Math.imul(eg, e5)) | 0),
            (X = (X + Math.imul(ed, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, e8)) | 0) + Math.imul(eh, e4)) | 0),
            (et = (et + Math.imul(eh, e8)) | 0);
          var tm =
            (((ea + (X = (X + Math.imul(el, e7)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, tt)) | 0) + Math.imul(ec, e7)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, tt)) | 0) + (ee >>> 13)) | 0) +
              (tm >>> 26)) |
            0),
            (tm &= 67108863),
            (X = Math.imul(eD, ej)),
            (ee = ((ee = Math.imul(eD, eU)) + Math.imul(eB, ej)) | 0),
            (et = Math.imul(eB, eU)),
            (X = (X + Math.imul(eN, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, ez)) | 0) + Math.imul(eO, eF)) | 0),
            (et = (et + Math.imul(eO, ez)) | 0),
            (X = (X + Math.imul(eI, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, eW)) | 0) + Math.imul(eP, eV)) | 0),
            (et = (et + Math.imul(eP, eW)) | 0),
            (X = (X + Math.imul(eS, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, eG)) | 0) + Math.imul(ek, eZ)) | 0),
            (et = (et + Math.imul(ek, eG)) | 0),
            (X = (X + Math.imul(ex, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, eJ)) | 0) + Math.imul(eE, eQ)) | 0),
            (et = (et + Math.imul(eE, eJ)) | 0),
            (X = (X + Math.imul(ey, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, e1)) | 0) + Math.imul(e_, e0)) | 0),
            (et = (et + Math.imul(e_, e1)) | 0),
            (X = (X + Math.imul(ew, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, e5)) | 0) + Math.imul(eb, e3)) | 0),
            (et = (et + Math.imul(eb, e5)) | 0),
            (X = (X + Math.imul(ef, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, e8)) | 0) + Math.imul(eg, e4)) | 0),
            (et = (et + Math.imul(eg, e8)) | 0),
            (X = (X + Math.imul(ed, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, tt)) | 0) + Math.imul(eh, e7)) | 0),
            (et = (et + Math.imul(eh, tt)) | 0);
          var tw =
            (((ea + (X = (X + Math.imul(el, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, ts)) | 0) + Math.imul(ec, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, ts)) | 0) + (ee >>> 13)) | 0) +
              (tw >>> 26)) |
            0),
            (tw &= 67108863),
            (X = Math.imul(eD, eF)),
            (ee = ((ee = Math.imul(eD, ez)) + Math.imul(eB, eF)) | 0),
            (et = Math.imul(eB, ez)),
            (X = (X + Math.imul(eN, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, eW)) | 0) + Math.imul(eO, eV)) | 0),
            (et = (et + Math.imul(eO, eW)) | 0),
            (X = (X + Math.imul(eI, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, eG)) | 0) + Math.imul(eP, eZ)) | 0),
            (et = (et + Math.imul(eP, eG)) | 0),
            (X = (X + Math.imul(eS, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, eJ)) | 0) + Math.imul(ek, eQ)) | 0),
            (et = (et + Math.imul(ek, eJ)) | 0),
            (X = (X + Math.imul(ex, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, e1)) | 0) + Math.imul(eE, e0)) | 0),
            (et = (et + Math.imul(eE, e1)) | 0),
            (X = (X + Math.imul(ey, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, e5)) | 0) + Math.imul(e_, e3)) | 0),
            (et = (et + Math.imul(e_, e5)) | 0),
            (X = (X + Math.imul(ew, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, e8)) | 0) + Math.imul(eb, e4)) | 0),
            (et = (et + Math.imul(eb, e8)) | 0),
            (X = (X + Math.imul(ef, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, tt)) | 0) + Math.imul(eg, e7)) | 0),
            (et = (et + Math.imul(eg, tt)) | 0);
          var tb =
            (((ea + (X = (X + Math.imul(ed, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(ed, ts)) | 0) + Math.imul(eh, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eh, ts)) | 0) + (ee >>> 13)) | 0) +
              (tb >>> 26)) |
            0),
            (tb &= 67108863),
            (X = Math.imul(eD, eV)),
            (ee = ((ee = Math.imul(eD, eW)) + Math.imul(eB, eV)) | 0),
            (et = Math.imul(eB, eW)),
            (X = (X + Math.imul(eN, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, eG)) | 0) + Math.imul(eO, eZ)) | 0),
            (et = (et + Math.imul(eO, eG)) | 0),
            (X = (X + Math.imul(eI, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, eJ)) | 0) + Math.imul(eP, eQ)) | 0),
            (et = (et + Math.imul(eP, eJ)) | 0),
            (X = (X + Math.imul(eS, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, e1)) | 0) + Math.imul(ek, e0)) | 0),
            (et = (et + Math.imul(ek, e1)) | 0),
            (X = (X + Math.imul(ex, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, e5)) | 0) + Math.imul(eE, e3)) | 0),
            (et = (et + Math.imul(eE, e5)) | 0),
            (X = (X + Math.imul(ey, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, e8)) | 0) + Math.imul(e_, e4)) | 0),
            (et = (et + Math.imul(e_, e8)) | 0),
            (X = (X + Math.imul(ew, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, tt)) | 0) + Math.imul(eb, e7)) | 0),
            (et = (et + Math.imul(eb, tt)) | 0);
          var tv =
            (((ea + (X = (X + Math.imul(ef, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(ef, ts)) | 0) + Math.imul(eg, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eg, ts)) | 0) + (ee >>> 13)) | 0) +
              (tv >>> 26)) |
            0),
            (tv &= 67108863),
            (X = Math.imul(eD, eZ)),
            (ee = ((ee = Math.imul(eD, eG)) + Math.imul(eB, eZ)) | 0),
            (et = Math.imul(eB, eG)),
            (X = (X + Math.imul(eN, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, eJ)) | 0) + Math.imul(eO, eQ)) | 0),
            (et = (et + Math.imul(eO, eJ)) | 0),
            (X = (X + Math.imul(eI, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, e1)) | 0) + Math.imul(eP, e0)) | 0),
            (et = (et + Math.imul(eP, e1)) | 0),
            (X = (X + Math.imul(eS, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, e5)) | 0) + Math.imul(ek, e3)) | 0),
            (et = (et + Math.imul(ek, e5)) | 0),
            (X = (X + Math.imul(ex, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, e8)) | 0) + Math.imul(eE, e4)) | 0),
            (et = (et + Math.imul(eE, e8)) | 0),
            (X = (X + Math.imul(ey, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, tt)) | 0) + Math.imul(e_, e7)) | 0),
            (et = (et + Math.imul(e_, tt)) | 0);
          var ty =
            (((ea + (X = (X + Math.imul(ew, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(ew, ts)) | 0) + Math.imul(eb, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eb, ts)) | 0) + (ee >>> 13)) | 0) +
              (ty >>> 26)) |
            0),
            (ty &= 67108863),
            (X = Math.imul(eD, eQ)),
            (ee = ((ee = Math.imul(eD, eJ)) + Math.imul(eB, eQ)) | 0),
            (et = Math.imul(eB, eJ)),
            (X = (X + Math.imul(eN, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, e1)) | 0) + Math.imul(eO, e0)) | 0),
            (et = (et + Math.imul(eO, e1)) | 0),
            (X = (X + Math.imul(eI, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, e5)) | 0) + Math.imul(eP, e3)) | 0),
            (et = (et + Math.imul(eP, e5)) | 0),
            (X = (X + Math.imul(eS, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, e8)) | 0) + Math.imul(ek, e4)) | 0),
            (et = (et + Math.imul(ek, e8)) | 0),
            (X = (X + Math.imul(ex, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, tt)) | 0) + Math.imul(eE, e7)) | 0),
            (et = (et + Math.imul(eE, tt)) | 0);
          var t_ =
            (((ea + (X = (X + Math.imul(ey, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(ey, ts)) | 0) + Math.imul(e_, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(e_, ts)) | 0) + (ee >>> 13)) | 0) +
              (t_ >>> 26)) |
            0),
            (t_ &= 67108863),
            (X = Math.imul(eD, e0)),
            (ee = ((ee = Math.imul(eD, e1)) + Math.imul(eB, e0)) | 0),
            (et = Math.imul(eB, e1)),
            (X = (X + Math.imul(eN, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, e5)) | 0) + Math.imul(eO, e3)) | 0),
            (et = (et + Math.imul(eO, e5)) | 0),
            (X = (X + Math.imul(eI, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, e8)) | 0) + Math.imul(eP, e4)) | 0),
            (et = (et + Math.imul(eP, e8)) | 0),
            (X = (X + Math.imul(eS, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, tt)) | 0) + Math.imul(ek, e7)) | 0),
            (et = (et + Math.imul(ek, tt)) | 0);
          var tC =
            (((ea + (X = (X + Math.imul(ex, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(ex, ts)) | 0) + Math.imul(eE, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eE, ts)) | 0) + (ee >>> 13)) | 0) +
              (tC >>> 26)) |
            0),
            (tC &= 67108863),
            (X = Math.imul(eD, e3)),
            (ee = ((ee = Math.imul(eD, e5)) + Math.imul(eB, e3)) | 0),
            (et = Math.imul(eB, e5)),
            (X = (X + Math.imul(eN, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, e8)) | 0) + Math.imul(eO, e4)) | 0),
            (et = (et + Math.imul(eO, e8)) | 0),
            (X = (X + Math.imul(eI, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, tt)) | 0) + Math.imul(eP, e7)) | 0),
            (et = (et + Math.imul(eP, tt)) | 0);
          var tx =
            (((ea + (X = (X + Math.imul(eS, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(eS, ts)) | 0) + Math.imul(ek, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ek, ts)) | 0) + (ee >>> 13)) | 0) +
              (tx >>> 26)) |
            0),
            (tx &= 67108863),
            (X = Math.imul(eD, e4)),
            (ee = ((ee = Math.imul(eD, e8)) + Math.imul(eB, e4)) | 0),
            (et = Math.imul(eB, e8)),
            (X = (X + Math.imul(eN, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, tt)) | 0) + Math.imul(eO, e7)) | 0),
            (et = (et + Math.imul(eO, tt)) | 0);
          var tE =
            (((ea + (X = (X + Math.imul(eI, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(eI, ts)) | 0) + Math.imul(eP, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eP, ts)) | 0) + (ee >>> 13)) | 0) +
              (tE >>> 26)) |
            0),
            (tE &= 67108863),
            (X = Math.imul(eD, e7)),
            (ee = ((ee = Math.imul(eD, tt)) + Math.imul(eB, e7)) | 0),
            (et = Math.imul(eB, tt));
          var tA =
            (((ea + (X = (X + Math.imul(eN, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(eN, ts)) | 0) + Math.imul(eO, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eO, ts)) | 0) + (ee >>> 13)) | 0) +
              (tA >>> 26)) |
            0),
            (tA &= 67108863);
          var tS =
            (((ea + (X = Math.imul(eD, ta))) | 0) +
              ((8191 &
                (ee = ((ee = Math.imul(eD, ts)) + Math.imul(eB, ta)) | 0)) <<
                13)) |
            0;
          return (
            (ea =
              ((((et = Math.imul(eB, ts)) + (ee >>> 13)) | 0) + (tS >>> 26)) |
              0),
            (tS &= 67108863),
            (eo[0] = tl),
            (eo[1] = tc),
            (eo[2] = tu),
            (eo[3] = td),
            (eo[4] = th),
            (eo[5] = tp),
            (eo[6] = tf),
            (eo[7] = tg),
            (eo[8] = tm),
            (eo[9] = tw),
            (eo[10] = tb),
            (eo[11] = tv),
            (eo[12] = ty),
            (eo[13] = t_),
            (eo[14] = tC),
            (eo[15] = tx),
            (eo[16] = tE),
            (eo[17] = tA),
            (eo[18] = tS),
            0 !== ea && ((eo[19] = ea), W.length++),
            W
          );
        };
        function bigMulTo(s, x, W) {
          (W.negative = x.negative ^ s.negative),
            (W.length = s.length + x.length);
          for (var X = 0, ee = 0, et = 0; et < W.length - 1; et++) {
            var er = ee;
            ee = 0;
            for (
              var ei = 67108863 & X,
                eo = Math.min(et, x.length - 1),
                ea = Math.max(0, et - s.length + 1);
              ea <= eo;
              ea++
            ) {
              var es = et - ea,
                el = (0 | s.words[es]) * (0 | x.words[ea]),
                ec = 67108863 & el;
              (er = (er + ((el / 67108864) | 0)) | 0),
                (ei = 67108863 & (ec = (ec + ei) | 0)),
                (ee += (er = (er + (ec >>> 26)) | 0) >>> 26),
                (er &= 67108863);
            }
            (W.words[et] = ei), (X = er), (er = ee);
          }
          return 0 !== X ? (W.words[et] = X) : W.length--, W._strip();
        }
        function FFTM(s, x) {
          (this.x = s), (this.y = x);
        }
        Math.imul || (comb10MulTo = smallMulTo),
          (BN.prototype.mulTo = function (s, x) {
            var W,
              X = this.length + s.length;
            return 10 === this.length && 10 === s.length
              ? comb10MulTo(this, s, x)
              : X < 63
              ? smallMulTo(this, s, x)
              : bigMulTo(this, s, x);
          }),
          (FFTM.prototype.makeRBT = function (s) {
            for (
              var x = Array(s), W = BN.prototype._countBits(s) - 1, X = 0;
              X < s;
              X++
            )
              x[X] = this.revBin(X, W, s);
            return x;
          }),
          (FFTM.prototype.revBin = function (s, x, W) {
            if (0 === s || s === W - 1) return s;
            for (var X = 0, ee = 0; ee < x; ee++)
              (X |= (1 & s) << (x - ee - 1)), (s >>= 1);
            return X;
          }),
          (FFTM.prototype.permute = function (s, x, W, X, ee, et) {
            for (var er = 0; er < et; er++)
              (X[er] = x[s[er]]), (ee[er] = W[s[er]]);
          }),
          (FFTM.prototype.transform = function (s, x, W, X, ee, et) {
            this.permute(et, s, x, W, X, ee);
            for (var er = 1; er < ee; er <<= 1)
              for (
                var ei = er << 1,
                  eo = Math.cos((2 * Math.PI) / ei),
                  ea = Math.sin((2 * Math.PI) / ei),
                  es = 0;
                es < ee;
                es += ei
              )
                for (var el = eo, ec = ea, eu = 0; eu < er; eu++) {
                  var ed = W[es + eu],
                    eh = X[es + eu],
                    ep = W[es + eu + er],
                    ef = X[es + eu + er],
                    eg = el * ep - ec * ef;
                  (ef = el * ef + ec * ep),
                    (ep = eg),
                    (W[es + eu] = ed + ep),
                    (X[es + eu] = eh + ef),
                    (W[es + eu + er] = ed - ep),
                    (X[es + eu + er] = eh - ef),
                    eu !== ei &&
                      ((eg = eo * el - ea * ec),
                      (ec = eo * ec + ea * el),
                      (el = eg));
                }
          }),
          (FFTM.prototype.guessLen13b = function (s, x) {
            var W = 1 | Math.max(x, s),
              X = 1 & W,
              ee = 0;
            for (W = (W / 2) | 0; W; W >>>= 1) ee++;
            return 1 << (ee + 1 + X);
          }),
          (FFTM.prototype.conjugate = function (s, x, W) {
            if (!(W <= 1))
              for (var X = 0; X < W / 2; X++) {
                var ee = s[X];
                (s[X] = s[W - X - 1]),
                  (s[W - X - 1] = ee),
                  (ee = x[X]),
                  (x[X] = -x[W - X - 1]),
                  (x[W - X - 1] = -ee);
              }
          }),
          (FFTM.prototype.normalize13b = function (s, x) {
            for (var W = 0, X = 0; X < x / 2; X++) {
              var ee =
                8192 * Math.round(s[2 * X + 1] / x) +
                Math.round(s[2 * X] / x) +
                W;
              (s[X] = 67108863 & ee),
                (W = ee < 67108864 ? 0 : (ee / 67108864) | 0);
            }
            return s;
          }),
          (FFTM.prototype.convert13b = function (s, x, W, X) {
            for (var ee = 0, et = 0; et < x; et++)
              (ee += 0 | s[et]),
                (W[2 * et] = 8191 & ee),
                (ee >>>= 13),
                (W[2 * et + 1] = 8191 & ee),
                (ee >>>= 13);
            for (et = 2 * x; et < X; ++et) W[et] = 0;
            assert(0 === ee), assert((-8192 & ee) == 0);
          }),
          (FFTM.prototype.stub = function (s) {
            for (var x = Array(s), W = 0; W < s; W++) x[W] = 0;
            return x;
          }),
          (FFTM.prototype.mulp = function (s, x, W) {
            var X = 2 * this.guessLen13b(s.length, x.length),
              ee = this.makeRBT(X),
              et = this.stub(X),
              er = Array(X),
              ei = Array(X),
              eo = Array(X),
              ea = Array(X),
              es = Array(X),
              el = Array(X),
              ec = W.words;
            (ec.length = X),
              this.convert13b(s.words, s.length, er, X),
              this.convert13b(x.words, x.length, ea, X),
              this.transform(er, et, ei, eo, X, ee),
              this.transform(ea, et, es, el, X, ee);
            for (var eu = 0; eu < X; eu++) {
              var ed = ei[eu] * es[eu] - eo[eu] * el[eu];
              (eo[eu] = ei[eu] * el[eu] + eo[eu] * es[eu]), (ei[eu] = ed);
            }
            return (
              this.conjugate(ei, eo, X),
              this.transform(ei, eo, ec, et, X, ee),
              this.conjugate(ec, et, X),
              this.normalize13b(ec, X),
              (W.negative = s.negative ^ x.negative),
              (W.length = s.length + x.length),
              W._strip()
            );
          }),
          (BN.prototype.mul = function (s) {
            var x = new BN(null);
            return (x.words = Array(this.length + s.length)), this.mulTo(s, x);
          }),
          (BN.prototype.mulf = function (s) {
            var x = new BN(null);
            return (
              (x.words = Array(this.length + s.length)), bigMulTo(this, s, x)
            );
          }),
          (BN.prototype.imul = function (s) {
            return this.clone().mulTo(s, this);
          }),
          (BN.prototype.imuln = function (s) {
            var x = s < 0;
            x && (s = -s), assert("number" == typeof s), assert(s < 67108864);
            for (var W = 0, X = 0; X < this.length; X++) {
              var ee = (0 | this.words[X]) * s,
                et = (67108863 & ee) + (67108863 & W);
              (W >>= 26),
                (W += ((ee / 67108864) | 0) + (et >>> 26)),
                (this.words[X] = 67108863 & et);
            }
            return (
              0 !== W && ((this.words[X] = W), this.length++),
              x ? this.ineg() : this
            );
          }),
          (BN.prototype.muln = function (s) {
            return this.clone().imuln(s);
          }),
          (BN.prototype.sqr = function () {
            return this.mul(this);
          }),
          (BN.prototype.isqr = function () {
            return this.imul(this.clone());
          }),
          (BN.prototype.pow = function (s) {
            var x = (function (s) {
              for (var x = Array(s.bitLength()), W = 0; W < x.length; W++) {
                var X = (W / 26) | 0,
                  ee = W % 26;
                x[W] = (s.words[X] >>> ee) & 1;
              }
              return x;
            })(s);
            if (0 === x.length) return new BN(1);
            for (
              var W = this, X = 0;
              X < x.length && 0 === x[X];
              X++, W = W.sqr()
            );
            if (++X < x.length)
              for (var ee = W.sqr(); X < x.length; X++, ee = ee.sqr())
                0 !== x[X] && (W = W.mul(ee));
            return W;
          }),
          (BN.prototype.iushln = function (s) {
            assert("number" == typeof s && s >= 0);
            var x,
              W = s % 26,
              X = (s - W) / 26,
              ee = (67108863 >>> (26 - W)) << (26 - W);
            if (0 !== W) {
              var et = 0;
              for (x = 0; x < this.length; x++) {
                var er = this.words[x] & ee,
                  ei = ((0 | this.words[x]) - er) << W;
                (this.words[x] = ei | et), (et = er >>> (26 - W));
              }
              et && ((this.words[x] = et), this.length++);
            }
            if (0 !== X) {
              for (x = this.length - 1; x >= 0; x--)
                this.words[x + X] = this.words[x];
              for (x = 0; x < X; x++) this.words[x] = 0;
              this.length += X;
            }
            return this._strip();
          }),
          (BN.prototype.ishln = function (s) {
            return assert(0 === this.negative), this.iushln(s);
          }),
          (BN.prototype.iushrn = function (s, x, W) {
            assert("number" == typeof s && s >= 0),
              (X = x ? (x - (x % 26)) / 26 : 0);
            var X,
              ee = s % 26,
              et = Math.min((s - ee) / 26, this.length),
              er = 67108863 ^ ((67108863 >>> ee) << ee);
            if (((X -= et), (X = Math.max(0, X)), W)) {
              for (var ei = 0; ei < et; ei++) W.words[ei] = this.words[ei];
              W.length = et;
            }
            if (0 === et);
            else if (this.length > et)
              for (this.length -= et, ei = 0; ei < this.length; ei++)
                this.words[ei] = this.words[ei + et];
            else (this.words[0] = 0), (this.length = 1);
            var eo = 0;
            for (ei = this.length - 1; ei >= 0 && (0 !== eo || ei >= X); ei--) {
              var ea = 0 | this.words[ei];
              (this.words[ei] = (eo << (26 - ee)) | (ea >>> ee)),
                (eo = ea & er);
            }
            return (
              W && 0 !== eo && (W.words[W.length++] = eo),
              0 === this.length && ((this.words[0] = 0), (this.length = 1)),
              this._strip()
            );
          }),
          (BN.prototype.ishrn = function (s, x, W) {
            return assert(0 === this.negative), this.iushrn(s, x, W);
          }),
          (BN.prototype.shln = function (s) {
            return this.clone().ishln(s);
          }),
          (BN.prototype.ushln = function (s) {
            return this.clone().iushln(s);
          }),
          (BN.prototype.shrn = function (s) {
            return this.clone().ishrn(s);
          }),
          (BN.prototype.ushrn = function (s) {
            return this.clone().iushrn(s);
          }),
          (BN.prototype.testn = function (s) {
            assert("number" == typeof s && s >= 0);
            var x = s % 26,
              W = (s - x) / 26;
            return !(this.length <= W) && !!(this.words[W] & (1 << x));
          }),
          (BN.prototype.imaskn = function (s) {
            assert("number" == typeof s && s >= 0);
            var x = s % 26,
              W = (s - x) / 26;
            return (assert(
              0 === this.negative,
              "imaskn works only with positive numbers"
            ),
            this.length <= W)
              ? this
              : (0 !== x && W++,
                (this.length = Math.min(W, this.length)),
                0 !== x &&
                  (this.words[this.length - 1] &=
                    67108863 ^ ((67108863 >>> x) << x)),
                this._strip());
          }),
          (BN.prototype.maskn = function (s) {
            return this.clone().imaskn(s);
          }),
          (BN.prototype.iaddn = function (s) {
            return (assert("number" == typeof s), assert(s < 67108864), s < 0)
              ? this.isubn(-s)
              : 0 !== this.negative
              ? (1 === this.length && (0 | this.words[0]) <= s
                  ? ((this.words[0] = s - (0 | this.words[0])),
                    (this.negative = 0))
                  : ((this.negative = 0), this.isubn(s), (this.negative = 1)),
                this)
              : this._iaddn(s);
          }),
          (BN.prototype._iaddn = function (s) {
            this.words[0] += s;
            for (var x = 0; x < this.length && this.words[x] >= 67108864; x++)
              (this.words[x] -= 67108864),
                x === this.length - 1
                  ? (this.words[x + 1] = 1)
                  : this.words[x + 1]++;
            return (this.length = Math.max(this.length, x + 1)), this;
          }),
          (BN.prototype.isubn = function (s) {
            if ((assert("number" == typeof s), assert(s < 67108864), s < 0))
              return this.iaddn(-s);
            if (0 !== this.negative)
              return (
                (this.negative = 0), this.iaddn(s), (this.negative = 1), this
              );
            if (((this.words[0] -= s), 1 === this.length && this.words[0] < 0))
              (this.words[0] = -this.words[0]), (this.negative = 1);
            else
              for (var x = 0; x < this.length && this.words[x] < 0; x++)
                (this.words[x] += 67108864), (this.words[x + 1] -= 1);
            return this._strip();
          }),
          (BN.prototype.addn = function (s) {
            return this.clone().iaddn(s);
          }),
          (BN.prototype.subn = function (s) {
            return this.clone().isubn(s);
          }),
          (BN.prototype.iabs = function () {
            return (this.negative = 0), this;
          }),
          (BN.prototype.abs = function () {
            return this.clone().iabs();
          }),
          (BN.prototype._ishlnsubmul = function (s, x, W) {
            var X,
              ee,
              et = s.length + W;
            this._expand(et);
            var er = 0;
            for (X = 0; X < s.length; X++) {
              ee = (0 | this.words[X + W]) + er;
              var ei = (0 | s.words[X]) * x;
              (ee -= 67108863 & ei),
                (er = (ee >> 26) - ((ei / 67108864) | 0)),
                (this.words[X + W] = 67108863 & ee);
            }
            for (; X < this.length - W; X++)
              (er = (ee = (0 | this.words[X + W]) + er) >> 26),
                (this.words[X + W] = 67108863 & ee);
            if (0 === er) return this._strip();
            for (assert(-1 === er), er = 0, X = 0; X < this.length; X++)
              (er = (ee = -(0 | this.words[X]) + er) >> 26),
                (this.words[X] = 67108863 & ee);
            return (this.negative = 1), this._strip();
          }),
          (BN.prototype._wordDiv = function (s, x) {
            var W,
              X = this.length - s.length,
              ee = this.clone(),
              et = s,
              er = 0 | et.words[et.length - 1];
            0 != (X = 26 - this._countBits(er)) &&
              ((et = et.ushln(X)),
              ee.iushln(X),
              (er = 0 | et.words[et.length - 1]));
            var ei = ee.length - et.length;
            if ("mod" !== x) {
              ((W = new BN(null)).length = ei + 1), (W.words = Array(W.length));
              for (var eo = 0; eo < W.length; eo++) W.words[eo] = 0;
            }
            var ea = ee.clone()._ishlnsubmul(et, 1, ei);
            0 === ea.negative && ((ee = ea), W && (W.words[ei] = 1));
            for (var es = ei - 1; es >= 0; es--) {
              var el =
                (0 | ee.words[et.length + es]) * 67108864 +
                (0 | ee.words[et.length + es - 1]);
              for (
                el = Math.min((el / er) | 0, 67108863),
                  ee._ishlnsubmul(et, el, es);
                0 !== ee.negative;

              )
                el--,
                  (ee.negative = 0),
                  ee._ishlnsubmul(et, 1, es),
                  ee.isZero() || (ee.negative ^= 1);
              W && (W.words[es] = el);
            }
            return (
              W && W._strip(),
              ee._strip(),
              "div" !== x && 0 !== X && ee.iushrn(X),
              { div: W || null, mod: ee }
            );
          }),
          (BN.prototype.divmod = function (s, x, W) {
            var X, ee, et;
            return (assert(!s.isZero()), this.isZero())
              ? { div: new BN(0), mod: new BN(0) }
              : 0 !== this.negative && 0 === s.negative
              ? ((et = this.neg().divmod(s, x)),
                "mod" !== x && (X = et.div.neg()),
                "div" !== x &&
                  ((ee = et.mod.neg()), W && 0 !== ee.negative && ee.iadd(s)),
                { div: X, mod: ee })
              : 0 === this.negative && 0 !== s.negative
              ? ((et = this.divmod(s.neg(), x)),
                "mod" !== x && (X = et.div.neg()),
                { div: X, mod: et.mod })
              : (this.negative & s.negative) != 0
              ? ((et = this.neg().divmod(s.neg(), x)),
                "div" !== x &&
                  ((ee = et.mod.neg()), W && 0 !== ee.negative && ee.isub(s)),
                { div: et.div, mod: ee })
              : s.length > this.length || 0 > this.cmp(s)
              ? { div: new BN(0), mod: this }
              : 1 === s.length
              ? "div" === x
                ? { div: this.divn(s.words[0]), mod: null }
                : "mod" === x
                ? { div: null, mod: new BN(this.modrn(s.words[0])) }
                : {
                    div: this.divn(s.words[0]),
                    mod: new BN(this.modrn(s.words[0])),
                  }
              : this._wordDiv(s, x);
          }),
          (BN.prototype.div = function (s) {
            return this.divmod(s, "div", !1).div;
          }),
          (BN.prototype.mod = function (s) {
            return this.divmod(s, "mod", !1).mod;
          }),
          (BN.prototype.umod = function (s) {
            return this.divmod(s, "mod", !0).mod;
          }),
          (BN.prototype.divRound = function (s) {
            var x = this.divmod(s);
            if (x.mod.isZero()) return x.div;
            var W = 0 !== x.div.negative ? x.mod.isub(s) : x.mod,
              X = s.ushrn(1),
              ee = s.andln(1),
              et = W.cmp(X);
            return et < 0 || (1 === ee && 0 === et)
              ? x.div
              : 0 !== x.div.negative
              ? x.div.isubn(1)
              : x.div.iaddn(1);
          }),
          (BN.prototype.modrn = function (s) {
            var x = s < 0;
            x && (s = -s), assert(s <= 67108863);
            for (
              var W = 67108864 % s, X = 0, ee = this.length - 1;
              ee >= 0;
              ee--
            )
              X = (W * X + (0 | this.words[ee])) % s;
            return x ? -X : X;
          }),
          (BN.prototype.modn = function (s) {
            return this.modrn(s);
          }),
          (BN.prototype.idivn = function (s) {
            var x = s < 0;
            x && (s = -s), assert(s <= 67108863);
            for (var W = 0, X = this.length - 1; X >= 0; X--) {
              var ee = (0 | this.words[X]) + 67108864 * W;
              (this.words[X] = (ee / s) | 0), (W = ee % s);
            }
            return this._strip(), x ? this.ineg() : this;
          }),
          (BN.prototype.divn = function (s) {
            return this.clone().idivn(s);
          }),
          (BN.prototype.egcd = function (s) {
            assert(0 === s.negative), assert(!s.isZero());
            var x = this,
              W = s.clone();
            x = 0 !== x.negative ? x.umod(s) : x.clone();
            for (
              var X = new BN(1),
                ee = new BN(0),
                et = new BN(0),
                er = new BN(1),
                ei = 0;
              x.isEven() && W.isEven();

            )
              x.iushrn(1), W.iushrn(1), ++ei;
            for (var eo = W.clone(), ea = x.clone(); !x.isZero(); ) {
              for (
                var es = 0, el = 1;
                (x.words[0] & el) == 0 && es < 26;
                ++es, el <<= 1
              );
              if (es > 0)
                for (x.iushrn(es); es-- > 0; )
                  (X.isOdd() || ee.isOdd()) && (X.iadd(eo), ee.isub(ea)),
                    X.iushrn(1),
                    ee.iushrn(1);
              for (
                var ec = 0, eu = 1;
                (W.words[0] & eu) == 0 && ec < 26;
                ++ec, eu <<= 1
              );
              if (ec > 0)
                for (W.iushrn(ec); ec-- > 0; )
                  (et.isOdd() || er.isOdd()) && (et.iadd(eo), er.isub(ea)),
                    et.iushrn(1),
                    er.iushrn(1);
              x.cmp(W) >= 0
                ? (x.isub(W), X.isub(et), ee.isub(er))
                : (W.isub(x), et.isub(X), er.isub(ee));
            }
            return { a: et, b: er, gcd: W.iushln(ei) };
          }),
          (BN.prototype._invmp = function (s) {
            assert(0 === s.negative), assert(!s.isZero());
            var x,
              W = this,
              X = s.clone();
            W = 0 !== W.negative ? W.umod(s) : W.clone();
            for (
              var ee = new BN(1), et = new BN(0), er = X.clone();
              W.cmpn(1) > 0 && X.cmpn(1) > 0;

            ) {
              for (
                var ei = 0, eo = 1;
                (W.words[0] & eo) == 0 && ei < 26;
                ++ei, eo <<= 1
              );
              if (ei > 0)
                for (W.iushrn(ei); ei-- > 0; )
                  ee.isOdd() && ee.iadd(er), ee.iushrn(1);
              for (
                var ea = 0, es = 1;
                (X.words[0] & es) == 0 && ea < 26;
                ++ea, es <<= 1
              );
              if (ea > 0)
                for (X.iushrn(ea); ea-- > 0; )
                  et.isOdd() && et.iadd(er), et.iushrn(1);
              W.cmp(X) >= 0
                ? (W.isub(X), ee.isub(et))
                : (X.isub(W), et.isub(ee));
            }
            return 0 > (x = 0 === W.cmpn(1) ? ee : et).cmpn(0) && x.iadd(s), x;
          }),
          (BN.prototype.gcd = function (s) {
            if (this.isZero()) return s.abs();
            if (s.isZero()) return this.abs();
            var x = this.clone(),
              W = s.clone();
            (x.negative = 0), (W.negative = 0);
            for (var X = 0; x.isEven() && W.isEven(); X++)
              x.iushrn(1), W.iushrn(1);
            for (;;) {
              for (; x.isEven(); ) x.iushrn(1);
              for (; W.isEven(); ) W.iushrn(1);
              var ee = x.cmp(W);
              if (ee < 0) {
                var et = x;
                (x = W), (W = et);
              } else if (0 === ee || 0 === W.cmpn(1)) break;
              x.isub(W);
            }
            return W.iushln(X);
          }),
          (BN.prototype.invm = function (s) {
            return this.egcd(s).a.umod(s);
          }),
          (BN.prototype.isEven = function () {
            return (1 & this.words[0]) == 0;
          }),
          (BN.prototype.isOdd = function () {
            return (1 & this.words[0]) == 1;
          }),
          (BN.prototype.andln = function (s) {
            return this.words[0] & s;
          }),
          (BN.prototype.bincn = function (s) {
            assert("number" == typeof s);
            var x = s % 26,
              W = (s - x) / 26,
              X = 1 << x;
            if (this.length <= W)
              return this._expand(W + 1), (this.words[W] |= X), this;
            for (var ee = X, et = W; 0 !== ee && et < this.length; et++) {
              var er = 0 | this.words[et];
              (er += ee),
                (ee = er >>> 26),
                (er &= 67108863),
                (this.words[et] = er);
            }
            return 0 !== ee && ((this.words[et] = ee), this.length++), this;
          }),
          (BN.prototype.isZero = function () {
            return 1 === this.length && 0 === this.words[0];
          }),
          (BN.prototype.cmpn = function (s) {
            var x,
              W = s < 0;
            if (0 !== this.negative && !W) return -1;
            if (0 === this.negative && W) return 1;
            if ((this._strip(), this.length > 1)) x = 1;
            else {
              W && (s = -s), assert(s <= 67108863, "Number is too big");
              var X = 0 | this.words[0];
              x = X === s ? 0 : X < s ? -1 : 1;
            }
            return 0 !== this.negative ? 0 | -x : x;
          }),
          (BN.prototype.cmp = function (s) {
            if (0 !== this.negative && 0 === s.negative) return -1;
            if (0 === this.negative && 0 !== s.negative) return 1;
            var x = this.ucmp(s);
            return 0 !== this.negative ? 0 | -x : x;
          }),
          (BN.prototype.ucmp = function (s) {
            if (this.length > s.length) return 1;
            if (this.length < s.length) return -1;
            for (var x = 0, W = this.length - 1; W >= 0; W--) {
              var X = 0 | this.words[W],
                ee = 0 | s.words[W];
              if (X !== ee) {
                X < ee ? (x = -1) : X > ee && (x = 1);
                break;
              }
            }
            return x;
          }),
          (BN.prototype.gtn = function (s) {
            return 1 === this.cmpn(s);
          }),
          (BN.prototype.gt = function (s) {
            return 1 === this.cmp(s);
          }),
          (BN.prototype.gten = function (s) {
            return this.cmpn(s) >= 0;
          }),
          (BN.prototype.gte = function (s) {
            return this.cmp(s) >= 0;
          }),
          (BN.prototype.ltn = function (s) {
            return -1 === this.cmpn(s);
          }),
          (BN.prototype.lt = function (s) {
            return -1 === this.cmp(s);
          }),
          (BN.prototype.lten = function (s) {
            return 0 >= this.cmpn(s);
          }),
          (BN.prototype.lte = function (s) {
            return 0 >= this.cmp(s);
          }),
          (BN.prototype.eqn = function (s) {
            return 0 === this.cmpn(s);
          }),
          (BN.prototype.eq = function (s) {
            return 0 === this.cmp(s);
          }),
          (BN.red = function (s) {
            return new Red(s);
          }),
          (BN.prototype.toRed = function (s) {
            return (
              assert(!this.red, "Already a number in reduction context"),
              assert(0 === this.negative, "red works only with positives"),
              s.convertTo(this)._forceRed(s)
            );
          }),
          (BN.prototype.fromRed = function () {
            return (
              assert(
                this.red,
                "fromRed works only with numbers in reduction context"
              ),
              this.red.convertFrom(this)
            );
          }),
          (BN.prototype._forceRed = function (s) {
            return (this.red = s), this;
          }),
          (BN.prototype.forceRed = function (s) {
            return (
              assert(!this.red, "Already a number in reduction context"),
              this._forceRed(s)
            );
          }),
          (BN.prototype.redAdd = function (s) {
            return (
              assert(this.red, "redAdd works only with red numbers"),
              this.red.add(this, s)
            );
          }),
          (BN.prototype.redIAdd = function (s) {
            return (
              assert(this.red, "redIAdd works only with red numbers"),
              this.red.iadd(this, s)
            );
          }),
          (BN.prototype.redSub = function (s) {
            return (
              assert(this.red, "redSub works only with red numbers"),
              this.red.sub(this, s)
            );
          }),
          (BN.prototype.redISub = function (s) {
            return (
              assert(this.red, "redISub works only with red numbers"),
              this.red.isub(this, s)
            );
          }),
          (BN.prototype.redShl = function (s) {
            return (
              assert(this.red, "redShl works only with red numbers"),
              this.red.shl(this, s)
            );
          }),
          (BN.prototype.redMul = function (s) {
            return (
              assert(this.red, "redMul works only with red numbers"),
              this.red._verify2(this, s),
              this.red.mul(this, s)
            );
          }),
          (BN.prototype.redIMul = function (s) {
            return (
              assert(this.red, "redMul works only with red numbers"),
              this.red._verify2(this, s),
              this.red.imul(this, s)
            );
          }),
          (BN.prototype.redSqr = function () {
            return (
              assert(this.red, "redSqr works only with red numbers"),
              this.red._verify1(this),
              this.red.sqr(this)
            );
          }),
          (BN.prototype.redISqr = function () {
            return (
              assert(this.red, "redISqr works only with red numbers"),
              this.red._verify1(this),
              this.red.isqr(this)
            );
          }),
          (BN.prototype.redSqrt = function () {
            return (
              assert(this.red, "redSqrt works only with red numbers"),
              this.red._verify1(this),
              this.red.sqrt(this)
            );
          }),
          (BN.prototype.redInvm = function () {
            return (
              assert(this.red, "redInvm works only with red numbers"),
              this.red._verify1(this),
              this.red.invm(this)
            );
          }),
          (BN.prototype.redNeg = function () {
            return (
              assert(this.red, "redNeg works only with red numbers"),
              this.red._verify1(this),
              this.red.neg(this)
            );
          }),
          (BN.prototype.redPow = function (s) {
            return (
              assert(this.red && !s.red, "redPow(normalNum)"),
              this.red._verify1(this),
              this.red.pow(this, s)
            );
          });
        var ei = { k256: null, p224: null, p192: null, p25519: null };
        function MPrime(s, x) {
          (this.name = s),
            (this.p = new BN(x, 16)),
            (this.n = this.p.bitLength()),
            (this.k = new BN(1).iushln(this.n).isub(this.p)),
            (this.tmp = this._tmp());
        }
        function K256() {
          MPrime.call(
            this,
            "k256",
            "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
          );
        }
        function P224() {
          MPrime.call(
            this,
            "p224",
            "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
          );
        }
        function P192() {
          MPrime.call(
            this,
            "p192",
            "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
          );
        }
        function P25519() {
          MPrime.call(
            this,
            "25519",
            "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
          );
        }
        function Red(s) {
          if ("string" == typeof s) {
            var x = BN._prime(s);
            (this.m = x.p), (this.prime = x);
          } else
            assert(s.gtn(1), "modulus must be greater than 1"),
              (this.m = s),
              (this.prime = null);
        }
        function Mont(s) {
          Red.call(this, s),
            (this.shift = this.m.bitLength()),
            this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
            (this.r = new BN(1).iushln(this.shift)),
            (this.r2 = this.imod(this.r.sqr())),
            (this.rinv = this.r._invmp(this.m)),
            (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
            (this.minv = this.minv.umod(this.r)),
            (this.minv = this.r.sub(this.minv));
        }
        (MPrime.prototype._tmp = function () {
          var s = new BN(null);
          return (s.words = Array(Math.ceil(this.n / 13))), s;
        }),
          (MPrime.prototype.ireduce = function (s) {
            var x,
              W = s;
            do
              this.split(W, this.tmp),
                (x = (W = (W = this.imulK(W)).iadd(this.tmp)).bitLength());
            while (x > this.n);
            var X = x < this.n ? -1 : W.ucmp(this.p);
            return (
              0 === X
                ? ((W.words[0] = 0), (W.length = 1))
                : X > 0
                ? W.isub(this.p)
                : void 0 !== W.strip
                ? W.strip()
                : W._strip(),
              W
            );
          }),
          (MPrime.prototype.split = function (s, x) {
            s.iushrn(this.n, 0, x);
          }),
          (MPrime.prototype.imulK = function (s) {
            return s.imul(this.k);
          }),
          inherits(K256, MPrime),
          (K256.prototype.split = function (s, x) {
            for (var W = Math.min(s.length, 9), X = 0; X < W; X++)
              x.words[X] = s.words[X];
            if (((x.length = W), s.length <= 9)) {
              (s.words[0] = 0), (s.length = 1);
              return;
            }
            var ee = s.words[9];
            for (
              X = 10, x.words[x.length++] = 4194303 & ee;
              X < s.length;
              X++
            ) {
              var et = 0 | s.words[X];
              (s.words[X - 10] = ((4194303 & et) << 4) | (ee >>> 22)),
                (ee = et);
            }
            (ee >>>= 22),
              (s.words[X - 10] = ee),
              0 === ee && s.length > 10 ? (s.length -= 10) : (s.length -= 9);
          }),
          (K256.prototype.imulK = function (s) {
            (s.words[s.length] = 0),
              (s.words[s.length + 1] = 0),
              (s.length += 2);
            for (var x = 0, W = 0; W < s.length; W++) {
              var X = 0 | s.words[W];
              (x += 977 * X),
                (s.words[W] = 67108863 & x),
                (x = 64 * X + ((x / 67108864) | 0));
            }
            return (
              0 === s.words[s.length - 1] &&
                (s.length--, 0 === s.words[s.length - 1] && s.length--),
              s
            );
          }),
          inherits(P224, MPrime),
          inherits(P192, MPrime),
          inherits(P25519, MPrime),
          (P25519.prototype.imulK = function (s) {
            for (var x = 0, W = 0; W < s.length; W++) {
              var X = (0 | s.words[W]) * 19 + x,
                ee = 67108863 & X;
              (X >>>= 26), (s.words[W] = ee), (x = X);
            }
            return 0 !== x && (s.words[s.length++] = x), s;
          }),
          (BN._prime = function (s) {
            var x;
            if (ei[s]) return ei[s];
            if ("k256" === s) x = new K256();
            else if ("p224" === s) x = new P224();
            else if ("p192" === s) x = new P192();
            else if ("p25519" === s) x = new P25519();
            else throw Error("Unknown prime " + s);
            return (ei[s] = x), x;
          }),
          (Red.prototype._verify1 = function (s) {
            assert(0 === s.negative, "red works only with positives"),
              assert(s.red, "red works only with red numbers");
          }),
          (Red.prototype._verify2 = function (s, x) {
            assert(
              (s.negative | x.negative) == 0,
              "red works only with positives"
            ),
              assert(
                s.red && s.red === x.red,
                "red works only with red numbers"
              );
          }),
          (Red.prototype.imod = function (s) {
            return this.prime
              ? this.prime.ireduce(s)._forceRed(this)
              : (move(s, s.umod(this.m)._forceRed(this)), s);
          }),
          (Red.prototype.neg = function (s) {
            return s.isZero() ? s.clone() : this.m.sub(s)._forceRed(this);
          }),
          (Red.prototype.add = function (s, x) {
            this._verify2(s, x);
            var W = s.add(x);
            return W.cmp(this.m) >= 0 && W.isub(this.m), W._forceRed(this);
          }),
          (Red.prototype.iadd = function (s, x) {
            this._verify2(s, x);
            var W = s.iadd(x);
            return W.cmp(this.m) >= 0 && W.isub(this.m), W;
          }),
          (Red.prototype.sub = function (s, x) {
            this._verify2(s, x);
            var W = s.sub(x);
            return 0 > W.cmpn(0) && W.iadd(this.m), W._forceRed(this);
          }),
          (Red.prototype.isub = function (s, x) {
            this._verify2(s, x);
            var W = s.isub(x);
            return 0 > W.cmpn(0) && W.iadd(this.m), W;
          }),
          (Red.prototype.shl = function (s, x) {
            return this._verify1(s), this.imod(s.ushln(x));
          }),
          (Red.prototype.imul = function (s, x) {
            return this._verify2(s, x), this.imod(s.imul(x));
          }),
          (Red.prototype.mul = function (s, x) {
            return this._verify2(s, x), this.imod(s.mul(x));
          }),
          (Red.prototype.isqr = function (s) {
            return this.imul(s, s.clone());
          }),
          (Red.prototype.sqr = function (s) {
            return this.mul(s, s);
          }),
          (Red.prototype.sqrt = function (s) {
            if (s.isZero()) return s.clone();
            var x = this.m.andln(3);
            if ((assert(x % 2 == 1), 3 === x)) {
              var W = this.m.add(new BN(1)).iushrn(2);
              return this.pow(s, W);
            }
            for (
              var X = this.m.subn(1), ee = 0;
              !X.isZero() && 0 === X.andln(1);

            )
              ee++, X.iushrn(1);
            assert(!X.isZero());
            var et = new BN(1).toRed(this),
              er = et.redNeg(),
              ei = this.m.subn(1).iushrn(1),
              eo = this.m.bitLength();
            for (
              eo = new BN(2 * eo * eo).toRed(this);
              0 !== this.pow(eo, ei).cmp(er);

            )
              eo.redIAdd(er);
            for (
              var ea = this.pow(eo, X),
                es = this.pow(s, X.addn(1).iushrn(1)),
                el = this.pow(s, X),
                ec = ee;
              0 !== el.cmp(et);

            ) {
              for (var eu = el, ed = 0; 0 !== eu.cmp(et); ed++)
                eu = eu.redSqr();
              assert(ed < ec);
              var eh = this.pow(ea, new BN(1).iushln(ec - ed - 1));
              (es = es.redMul(eh)),
                (ea = eh.redSqr()),
                (el = el.redMul(ea)),
                (ec = ed);
            }
            return es;
          }),
          (Red.prototype.invm = function (s) {
            var x = s._invmp(this.m);
            return 0 !== x.negative
              ? ((x.negative = 0), this.imod(x).redNeg())
              : this.imod(x);
          }),
          (Red.prototype.pow = function (s, x) {
            if (x.isZero()) return new BN(1).toRed(this);
            if (0 === x.cmpn(1)) return s.clone();
            var W = Array(16);
            (W[0] = new BN(1).toRed(this)), (W[1] = s);
            for (var X = 2; X < W.length; X++) W[X] = this.mul(W[X - 1], s);
            var ee = W[0],
              et = 0,
              er = 0,
              ei = x.bitLength() % 26;
            for (0 === ei && (ei = 26), X = x.length - 1; X >= 0; X--) {
              for (var eo = x.words[X], ea = ei - 1; ea >= 0; ea--) {
                var es = (eo >> ea) & 1;
                if (
                  (ee !== W[0] && (ee = this.sqr(ee)), 0 === es && 0 === et)
                ) {
                  er = 0;
                  continue;
                }
                (et <<= 1),
                  (et |= es),
                  (4 == ++er || (0 === X && 0 === ea)) &&
                    ((ee = this.mul(ee, W[et])), (er = 0), (et = 0));
              }
              ei = 26;
            }
            return ee;
          }),
          (Red.prototype.convertTo = function (s) {
            var x = s.umod(this.m);
            return x === s ? x.clone() : x;
          }),
          (Red.prototype.convertFrom = function (s) {
            var x = s.clone();
            return (x.red = null), x;
          }),
          (BN.mont = function (s) {
            return new Mont(s);
          }),
          inherits(Mont, Red),
          (Mont.prototype.convertTo = function (s) {
            return this.imod(s.ushln(this.shift));
          }),
          (Mont.prototype.convertFrom = function (s) {
            var x = this.imod(s.mul(this.rinv));
            return (x.red = null), x;
          }),
          (Mont.prototype.imul = function (s, x) {
            if (s.isZero() || x.isZero())
              return (s.words[0] = 0), (s.length = 1), s;
            var W = s.imul(x),
              X = W.maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m),
              ee = W.isub(X).iushrn(this.shift),
              et = ee;
            return (
              ee.cmp(this.m) >= 0
                ? (et = ee.isub(this.m))
                : 0 > ee.cmpn(0) && (et = ee.iadd(this.m)),
              et._forceRed(this)
            );
          }),
          (Mont.prototype.mul = function (s, x) {
            if (s.isZero() || x.isZero()) return new BN(0)._forceRed(this);
            var W = s.mul(x),
              X = W.maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m),
              ee = W.isub(X).iushrn(this.shift),
              et = ee;
            return (
              ee.cmp(this.m) >= 0
                ? (et = ee.isub(this.m))
                : 0 > ee.cmpn(0) && (et = ee.iadd(this.m)),
              et._forceRed(this)
            );
          }),
          (Mont.prototype.invm = function (s) {
            return this.imod(s._invmp(this.m).mul(this.r2))._forceRed(this);
          });
      })((s = W.nmd(s)), this);
    },
    29931: function (s, x, W) {
      var X;
      function Rand(s) {
        this.rand = s;
      }
      if (
        ((s.exports = function (s) {
          return X || (X = new Rand(null)), X.generate(s);
        }),
        (s.exports.Rand = Rand),
        (Rand.prototype.generate = function (s) {
          return this._rand(s);
        }),
        (Rand.prototype._rand = function (s) {
          if (this.rand.getBytes) return this.rand.getBytes(s);
          for (var x = new Uint8Array(s), W = 0; W < x.length; W++)
            x[W] = this.rand.getByte();
          return x;
        }),
        "object" == typeof self)
      )
        self.crypto && self.crypto.getRandomValues
          ? (Rand.prototype._rand = function (s) {
              var x = new Uint8Array(s);
              return self.crypto.getRandomValues(x), x;
            })
          : self.msCrypto && self.msCrypto.getRandomValues
          ? (Rand.prototype._rand = function (s) {
              var x = new Uint8Array(s);
              return self.msCrypto.getRandomValues(x), x;
            })
          : "object" == typeof window &&
            (Rand.prototype._rand = function () {
              throw Error("Not implemented yet");
            });
      else
        try {
          var ee = W(89214);
          if ("function" != typeof ee.randomBytes) throw Error("Not supported");
          Rand.prototype._rand = function (s) {
            return ee.randomBytes(s);
          };
        } catch (s) {}
    },
    48764: function (s, x, W) {
      "use strict";
      /*!
       * The buffer module from node.js, for the browser.
       *
       * @author   Feross Aboukhadijeh <https://feross.org>
       * @license  MIT
       */ let X = W(79742),
        ee = W(80645),
        et =
          "function" == typeof Symbol && "function" == typeof Symbol.for
            ? Symbol.for("nodejs.util.inspect.custom")
            : null;
      function createBuffer(s) {
        if (s > 2147483647)
          throw RangeError(
            'The value "' + s + '" is invalid for option "size"'
          );
        let x = new Uint8Array(s);
        return Object.setPrototypeOf(x, Buffer.prototype), x;
      }
      function Buffer(s, x, W) {
        if ("number" == typeof s) {
          if ("string" == typeof x)
            throw TypeError(
              'The "string" argument must be of type string. Received type number'
            );
          return allocUnsafe(s);
        }
        return from(s, x, W);
      }
      function from(s, x, W) {
        if ("string" == typeof s)
          return (function (s, x) {
            if (
              (("string" != typeof x || "" === x) && (x = "utf8"),
              !Buffer.isEncoding(x))
            )
              throw TypeError("Unknown encoding: " + x);
            let W = 0 | byteLength(s, x),
              X = createBuffer(W),
              ee = X.write(s, x);
            return ee !== W && (X = X.slice(0, ee)), X;
          })(s, x);
        if (ArrayBuffer.isView(s))
          return (function (s) {
            if (isInstance(s, Uint8Array)) {
              let x = new Uint8Array(s);
              return fromArrayBuffer(x.buffer, x.byteOffset, x.byteLength);
            }
            return fromArrayLike(s);
          })(s);
        if (null == s)
          throw TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
              typeof s
          );
        if (
          isInstance(s, ArrayBuffer) ||
          (s && isInstance(s.buffer, ArrayBuffer)) ||
          ("undefined" != typeof SharedArrayBuffer &&
            (isInstance(s, SharedArrayBuffer) ||
              (s && isInstance(s.buffer, SharedArrayBuffer))))
        )
          return fromArrayBuffer(s, x, W);
        if ("number" == typeof s)
          throw TypeError(
            'The "value" argument must not be of type number. Received type number'
          );
        let X = s.valueOf && s.valueOf();
        if (null != X && X !== s) return Buffer.from(X, x, W);
        let ee = (function (s) {
          var x;
          if (Buffer.isBuffer(s)) {
            let x = 0 | checked(s.length),
              W = createBuffer(x);
            return 0 === W.length || s.copy(W, 0, 0, x), W;
          }
          return void 0 !== s.length
            ? "number" != typeof s.length || (x = s.length) != x
              ? createBuffer(0)
              : fromArrayLike(s)
            : "Buffer" === s.type && Array.isArray(s.data)
            ? fromArrayLike(s.data)
            : void 0;
        })(s);
        if (ee) return ee;
        if (
          "undefined" != typeof Symbol &&
          null != Symbol.toPrimitive &&
          "function" == typeof s[Symbol.toPrimitive]
        )
          return Buffer.from(s[Symbol.toPrimitive]("string"), x, W);
        throw TypeError(
          "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
            typeof s
        );
      }
      function assertSize(s) {
        if ("number" != typeof s)
          throw TypeError('"size" argument must be of type number');
        if (s < 0)
          throw RangeError(
            'The value "' + s + '" is invalid for option "size"'
          );
      }
      function allocUnsafe(s) {
        return assertSize(s), createBuffer(s < 0 ? 0 : 0 | checked(s));
      }
      function fromArrayLike(s) {
        let x = s.length < 0 ? 0 : 0 | checked(s.length),
          W = createBuffer(x);
        for (let X = 0; X < x; X += 1) W[X] = 255 & s[X];
        return W;
      }
      function fromArrayBuffer(s, x, W) {
        let X;
        if (x < 0 || s.byteLength < x)
          throw RangeError('"offset" is outside of buffer bounds');
        if (s.byteLength < x + (W || 0))
          throw RangeError('"length" is outside of buffer bounds');
        return (
          Object.setPrototypeOf(
            (X =
              void 0 === x && void 0 === W
                ? new Uint8Array(s)
                : void 0 === W
                ? new Uint8Array(s, x)
                : new Uint8Array(s, x, W)),
            Buffer.prototype
          ),
          X
        );
      }
      function checked(s) {
        if (s >= 2147483647)
          throw RangeError(
            "Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes"
          );
        return 0 | s;
      }
      function byteLength(s, x) {
        if (Buffer.isBuffer(s)) return s.length;
        if (ArrayBuffer.isView(s) || isInstance(s, ArrayBuffer))
          return s.byteLength;
        if ("string" != typeof s)
          throw TypeError(
            'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
              typeof s
          );
        let W = s.length,
          X = arguments.length > 2 && !0 === arguments[2];
        if (!X && 0 === W) return 0;
        let ee = !1;
        for (;;)
          switch (x) {
            case "ascii":
            case "latin1":
            case "binary":
              return W;
            case "utf8":
            case "utf-8":
              return utf8ToBytes(s).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * W;
            case "hex":
              return W >>> 1;
            case "base64":
              return base64ToBytes(s).length;
            default:
              if (ee) return X ? -1 : utf8ToBytes(s).length;
              (x = ("" + x).toLowerCase()), (ee = !0);
          }
      }
      function slowToString(s, x, W) {
        let ee = !1;
        if (
          ((void 0 === x || x < 0) && (x = 0),
          x > this.length ||
            ((void 0 === W || W > this.length) && (W = this.length),
            W <= 0 || (W >>>= 0) <= (x >>>= 0)))
        )
          return "";
        for (s || (s = "utf8"); ; )
          switch (s) {
            case "hex":
              return (function (s, x, W) {
                let X = s.length;
                (!x || x < 0) && (x = 0), (!W || W < 0 || W > X) && (W = X);
                let ee = "";
                for (let X = x; X < W; ++X) ee += eo[s[X]];
                return ee;
              })(this, x, W);
            case "utf8":
            case "utf-8":
              return utf8Slice(this, x, W);
            case "ascii":
              return (function (s, x, W) {
                let X = "";
                W = Math.min(s.length, W);
                for (let ee = x; ee < W; ++ee)
                  X += String.fromCharCode(127 & s[ee]);
                return X;
              })(this, x, W);
            case "latin1":
            case "binary":
              return (function (s, x, W) {
                let X = "";
                W = Math.min(s.length, W);
                for (let ee = x; ee < W; ++ee) X += String.fromCharCode(s[ee]);
                return X;
              })(this, x, W);
            case "base64":
              var et, er;
              return (
                (et = x),
                (er = W),
                0 === et && er === this.length
                  ? X.fromByteArray(this)
                  : X.fromByteArray(this.slice(et, er))
              );
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return (function (s, x, W) {
                let X = s.slice(x, W),
                  ee = "";
                for (let s = 0; s < X.length - 1; s += 2)
                  ee += String.fromCharCode(X[s] + 256 * X[s + 1]);
                return ee;
              })(this, x, W);
            default:
              if (ee) throw TypeError("Unknown encoding: " + s);
              (s = (s + "").toLowerCase()), (ee = !0);
          }
      }
      function swap(s, x, W) {
        let X = s[x];
        (s[x] = s[W]), (s[W] = X);
      }
      function bidirectionalIndexOf(s, x, W, X, ee) {
        var et;
        if (0 === s.length) return -1;
        if (
          ("string" == typeof W
            ? ((X = W), (W = 0))
            : W > 2147483647
            ? (W = 2147483647)
            : W < -2147483648 && (W = -2147483648),
          (et = W = +W) != et && (W = ee ? 0 : s.length - 1),
          W < 0 && (W = s.length + W),
          W >= s.length)
        ) {
          if (ee) return -1;
          W = s.length - 1;
        } else if (W < 0) {
          if (!ee) return -1;
          W = 0;
        }
        if (
          ("string" == typeof x && (x = Buffer.from(x, X)), Buffer.isBuffer(x))
        )
          return 0 === x.length ? -1 : arrayIndexOf(s, x, W, X, ee);
        if ("number" == typeof x)
          return ((x &= 255), "function" == typeof Uint8Array.prototype.indexOf)
            ? ee
              ? Uint8Array.prototype.indexOf.call(s, x, W)
              : Uint8Array.prototype.lastIndexOf.call(s, x, W)
            : arrayIndexOf(s, [x], W, X, ee);
        throw TypeError("val must be string, number or Buffer");
      }
      function arrayIndexOf(s, x, W, X, ee) {
        let et,
          er = 1,
          ei = s.length,
          eo = x.length;
        if (
          void 0 !== X &&
          ("ucs2" === (X = String(X).toLowerCase()) ||
            "ucs-2" === X ||
            "utf16le" === X ||
            "utf-16le" === X)
        ) {
          if (s.length < 2 || x.length < 2) return -1;
          (er = 2), (ei /= 2), (eo /= 2), (W /= 2);
        }
        function read(s, x) {
          return 1 === er ? s[x] : s.readUInt16BE(x * er);
        }
        if (ee) {
          let X = -1;
          for (et = W; et < ei; et++)
            if (read(s, et) === read(x, -1 === X ? 0 : et - X)) {
              if ((-1 === X && (X = et), et - X + 1 === eo)) return X * er;
            } else -1 !== X && (et -= et - X), (X = -1);
        } else
          for (W + eo > ei && (W = ei - eo), et = W; et >= 0; et--) {
            let W = !0;
            for (let X = 0; X < eo; X++)
              if (read(s, et + X) !== read(x, X)) {
                W = !1;
                break;
              }
            if (W) return et;
          }
        return -1;
      }
      function utf8Slice(s, x, W) {
        W = Math.min(s.length, W);
        let X = [],
          ee = x;
        for (; ee < W; ) {
          let x = s[ee],
            et = null,
            er = x > 239 ? 4 : x > 223 ? 3 : x > 191 ? 2 : 1;
          if (ee + er <= W) {
            let W, X, ei, eo;
            switch (er) {
              case 1:
                x < 128 && (et = x);
                break;
              case 2:
                (192 & (W = s[ee + 1])) == 128 &&
                  (eo = ((31 & x) << 6) | (63 & W)) > 127 &&
                  (et = eo);
                break;
              case 3:
                (W = s[ee + 1]),
                  (X = s[ee + 2]),
                  (192 & W) == 128 &&
                    (192 & X) == 128 &&
                    (eo = ((15 & x) << 12) | ((63 & W) << 6) | (63 & X)) >
                      2047 &&
                    (eo < 55296 || eo > 57343) &&
                    (et = eo);
                break;
              case 4:
                (W = s[ee + 1]),
                  (X = s[ee + 2]),
                  (ei = s[ee + 3]),
                  (192 & W) == 128 &&
                    (192 & X) == 128 &&
                    (192 & ei) == 128 &&
                    (eo =
                      ((15 & x) << 18) |
                      ((63 & W) << 12) |
                      ((63 & X) << 6) |
                      (63 & ei)) > 65535 &&
                    eo < 1114112 &&
                    (et = eo);
            }
          }
          null === et
            ? ((et = 65533), (er = 1))
            : et > 65535 &&
              ((et -= 65536),
              X.push(((et >>> 10) & 1023) | 55296),
              (et = 56320 | (1023 & et))),
            X.push(et),
            (ee += er);
        }
        return (function (s) {
          let x = s.length;
          if (x <= 4096) return String.fromCharCode.apply(String, s);
          let W = "",
            X = 0;
          for (; X < x; )
            W += String.fromCharCode.apply(String, s.slice(X, (X += 4096)));
          return W;
        })(X);
      }
      function checkOffset(s, x, W) {
        if (s % 1 != 0 || s < 0) throw RangeError("offset is not uint");
        if (s + x > W)
          throw RangeError("Trying to access beyond buffer length");
      }
      function checkInt(s, x, W, X, ee, et) {
        if (!Buffer.isBuffer(s))
          throw TypeError('"buffer" argument must be a Buffer instance');
        if (x > ee || x < et)
          throw RangeError('"value" argument is out of bounds');
        if (W + X > s.length) throw RangeError("Index out of range");
      }
      function wrtBigUInt64LE(s, x, W, X, ee) {
        checkIntBI(x, X, ee, s, W, 7);
        let et = Number(x & BigInt(4294967295));
        (s[W++] = et),
          (et >>= 8),
          (s[W++] = et),
          (et >>= 8),
          (s[W++] = et),
          (et >>= 8),
          (s[W++] = et);
        let er = Number((x >> BigInt(32)) & BigInt(4294967295));
        return (
          (s[W++] = er),
          (er >>= 8),
          (s[W++] = er),
          (er >>= 8),
          (s[W++] = er),
          (er >>= 8),
          (s[W++] = er),
          W
        );
      }
      function wrtBigUInt64BE(s, x, W, X, ee) {
        checkIntBI(x, X, ee, s, W, 7);
        let et = Number(x & BigInt(4294967295));
        (s[W + 7] = et),
          (et >>= 8),
          (s[W + 6] = et),
          (et >>= 8),
          (s[W + 5] = et),
          (et >>= 8),
          (s[W + 4] = et);
        let er = Number((x >> BigInt(32)) & BigInt(4294967295));
        return (
          (s[W + 3] = er),
          (er >>= 8),
          (s[W + 2] = er),
          (er >>= 8),
          (s[W + 1] = er),
          (er >>= 8),
          (s[W] = er),
          W + 8
        );
      }
      function checkIEEE754(s, x, W, X, ee, et) {
        if (W + X > s.length || W < 0) throw RangeError("Index out of range");
      }
      function writeFloat(s, x, W, X, et) {
        return (
          (x = +x),
          (W >>>= 0),
          et ||
            checkIEEE754(
              s,
              x,
              W,
              4,
              34028234663852886e22,
              -34028234663852886e22
            ),
          ee.write(s, x, W, X, 23, 4),
          W + 4
        );
      }
      function writeDouble(s, x, W, X, et) {
        return (
          (x = +x),
          (W >>>= 0),
          et ||
            checkIEEE754(
              s,
              x,
              W,
              8,
              17976931348623157e292,
              -17976931348623157e292
            ),
          ee.write(s, x, W, X, 52, 8),
          W + 8
        );
      }
      (x.Buffer = Buffer),
        (x.SlowBuffer = function (s) {
          return +s != s && (s = 0), Buffer.alloc(+s);
        }),
        (x.INSPECT_MAX_BYTES = 50),
        (x.kMaxLength = 2147483647),
        (Buffer.TYPED_ARRAY_SUPPORT = (function () {
          try {
            let s = new Uint8Array(1),
              x = {
                foo: function () {
                  return 42;
                },
              };
            return (
              Object.setPrototypeOf(x, Uint8Array.prototype),
              Object.setPrototypeOf(s, x),
              42 === s.foo()
            );
          } catch (s) {
            return !1;
          }
        })()),
        Buffer.TYPED_ARRAY_SUPPORT ||
          "undefined" == typeof console ||
          "function" != typeof console.error ||
          console.error(
            "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
          ),
        Object.defineProperty(Buffer.prototype, "parent", {
          enumerable: !0,
          get: function () {
            if (Buffer.isBuffer(this)) return this.buffer;
          },
        }),
        Object.defineProperty(Buffer.prototype, "offset", {
          enumerable: !0,
          get: function () {
            if (Buffer.isBuffer(this)) return this.byteOffset;
          },
        }),
        (Buffer.poolSize = 8192),
        (Buffer.from = function (s, x, W) {
          return from(s, x, W);
        }),
        Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype),
        Object.setPrototypeOf(Buffer, Uint8Array),
        (Buffer.alloc = function (s, x, W) {
          return (assertSize(s), s <= 0)
            ? createBuffer(s)
            : void 0 !== x
            ? "string" == typeof W
              ? createBuffer(s).fill(x, W)
              : createBuffer(s).fill(x)
            : createBuffer(s);
        }),
        (Buffer.allocUnsafe = function (s) {
          return allocUnsafe(s);
        }),
        (Buffer.allocUnsafeSlow = function (s) {
          return allocUnsafe(s);
        }),
        (Buffer.isBuffer = function (s) {
          return null != s && !0 === s._isBuffer && s !== Buffer.prototype;
        }),
        (Buffer.compare = function (s, x) {
          if (
            (isInstance(s, Uint8Array) &&
              (s = Buffer.from(s, s.offset, s.byteLength)),
            isInstance(x, Uint8Array) &&
              (x = Buffer.from(x, x.offset, x.byteLength)),
            !Buffer.isBuffer(s) || !Buffer.isBuffer(x))
          )
            throw TypeError(
              'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
            );
          if (s === x) return 0;
          let W = s.length,
            X = x.length;
          for (let ee = 0, et = Math.min(W, X); ee < et; ++ee)
            if (s[ee] !== x[ee]) {
              (W = s[ee]), (X = x[ee]);
              break;
            }
          return W < X ? -1 : X < W ? 1 : 0;
        }),
        (Buffer.isEncoding = function (s) {
          switch (String(s).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return !0;
            default:
              return !1;
          }
        }),
        (Buffer.concat = function (s, x) {
          let W;
          if (!Array.isArray(s))
            throw TypeError('"list" argument must be an Array of Buffers');
          if (0 === s.length) return Buffer.alloc(0);
          if (void 0 === x)
            for (W = 0, x = 0; W < s.length; ++W) x += s[W].length;
          let X = Buffer.allocUnsafe(x),
            ee = 0;
          for (W = 0; W < s.length; ++W) {
            let x = s[W];
            if (isInstance(x, Uint8Array))
              ee + x.length > X.length
                ? (Buffer.isBuffer(x) || (x = Buffer.from(x)), x.copy(X, ee))
                : Uint8Array.prototype.set.call(X, x, ee);
            else if (Buffer.isBuffer(x)) x.copy(X, ee);
            else throw TypeError('"list" argument must be an Array of Buffers');
            ee += x.length;
          }
          return X;
        }),
        (Buffer.byteLength = byteLength),
        (Buffer.prototype._isBuffer = !0),
        (Buffer.prototype.swap16 = function () {
          let s = this.length;
          if (s % 2 != 0)
            throw RangeError("Buffer size must be a multiple of 16-bits");
          for (let x = 0; x < s; x += 2) swap(this, x, x + 1);
          return this;
        }),
        (Buffer.prototype.swap32 = function () {
          let s = this.length;
          if (s % 4 != 0)
            throw RangeError("Buffer size must be a multiple of 32-bits");
          for (let x = 0; x < s; x += 4)
            swap(this, x, x + 3), swap(this, x + 1, x + 2);
          return this;
        }),
        (Buffer.prototype.swap64 = function () {
          let s = this.length;
          if (s % 8 != 0)
            throw RangeError("Buffer size must be a multiple of 64-bits");
          for (let x = 0; x < s; x += 8)
            swap(this, x, x + 7),
              swap(this, x + 1, x + 6),
              swap(this, x + 2, x + 5),
              swap(this, x + 3, x + 4);
          return this;
        }),
        (Buffer.prototype.toString = function () {
          let s = this.length;
          return 0 === s
            ? ""
            : 0 == arguments.length
            ? utf8Slice(this, 0, s)
            : slowToString.apply(this, arguments);
        }),
        (Buffer.prototype.toLocaleString = Buffer.prototype.toString),
        (Buffer.prototype.equals = function (s) {
          if (!Buffer.isBuffer(s)) throw TypeError("Argument must be a Buffer");
          return this === s || 0 === Buffer.compare(this, s);
        }),
        (Buffer.prototype.inspect = function () {
          let s = "",
            W = x.INSPECT_MAX_BYTES;
          return (
            (s = this.toString("hex", 0, W)
              .replace(/(.{2})/g, "$1 ")
              .trim()),
            this.length > W && (s += " ... "),
            "<Buffer " + s + ">"
          );
        }),
        et && (Buffer.prototype[et] = Buffer.prototype.inspect),
        (Buffer.prototype.compare = function (s, x, W, X, ee) {
          if (
            (isInstance(s, Uint8Array) &&
              (s = Buffer.from(s, s.offset, s.byteLength)),
            !Buffer.isBuffer(s))
          )
            throw TypeError(
              'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                typeof s
            );
          if (
            (void 0 === x && (x = 0),
            void 0 === W && (W = s ? s.length : 0),
            void 0 === X && (X = 0),
            void 0 === ee && (ee = this.length),
            x < 0 || W > s.length || X < 0 || ee > this.length)
          )
            throw RangeError("out of range index");
          if (X >= ee && x >= W) return 0;
          if (X >= ee) return -1;
          if (x >= W) return 1;
          if (((x >>>= 0), (W >>>= 0), (X >>>= 0), (ee >>>= 0), this === s))
            return 0;
          let et = ee - X,
            er = W - x,
            ei = Math.min(et, er),
            eo = this.slice(X, ee),
            ea = s.slice(x, W);
          for (let s = 0; s < ei; ++s)
            if (eo[s] !== ea[s]) {
              (et = eo[s]), (er = ea[s]);
              break;
            }
          return et < er ? -1 : er < et ? 1 : 0;
        }),
        (Buffer.prototype.includes = function (s, x, W) {
          return -1 !== this.indexOf(s, x, W);
        }),
        (Buffer.prototype.indexOf = function (s, x, W) {
          return bidirectionalIndexOf(this, s, x, W, !0);
        }),
        (Buffer.prototype.lastIndexOf = function (s, x, W) {
          return bidirectionalIndexOf(this, s, x, W, !1);
        }),
        (Buffer.prototype.write = function (s, x, W, X) {
          var ee, et, er, ei, eo, ea, es, el;
          if (void 0 === x) (X = "utf8"), (W = this.length), (x = 0);
          else if (void 0 === W && "string" == typeof x)
            (X = x), (W = this.length), (x = 0);
          else if (isFinite(x))
            (x >>>= 0),
              isFinite(W)
                ? ((W >>>= 0), void 0 === X && (X = "utf8"))
                : ((X = W), (W = void 0));
          else
            throw Error(
              "Buffer.write(string, encoding, offset[, length]) is no longer supported"
            );
          let ec = this.length - x;
          if (
            ((void 0 === W || W > ec) && (W = ec),
            (s.length > 0 && (W < 0 || x < 0)) || x > this.length)
          )
            throw RangeError("Attempt to write outside buffer bounds");
          X || (X = "utf8");
          let eu = !1;
          for (;;)
            switch (X) {
              case "hex":
                return (function (s, x, W, X) {
                  let ee;
                  W = Number(W) || 0;
                  let et = s.length - W;
                  X ? (X = Number(X)) > et && (X = et) : (X = et);
                  let er = x.length;
                  for (X > er / 2 && (X = er / 2), ee = 0; ee < X; ++ee) {
                    let X = parseInt(x.substr(2 * ee, 2), 16);
                    if (X != X) break;
                    s[W + ee] = X;
                  }
                  return ee;
                })(this, s, x, W);
              case "utf8":
              case "utf-8":
                return (
                  (ee = x),
                  (et = W),
                  blitBuffer(utf8ToBytes(s, this.length - ee), this, ee, et)
                );
              case "ascii":
              case "latin1":
              case "binary":
                return (
                  (er = x),
                  (ei = W),
                  blitBuffer(
                    (function (s) {
                      let x = [];
                      for (let W = 0; W < s.length; ++W)
                        x.push(255 & s.charCodeAt(W));
                      return x;
                    })(s),
                    this,
                    er,
                    ei
                  )
                );
              case "base64":
                return (
                  (eo = x), (ea = W), blitBuffer(base64ToBytes(s), this, eo, ea)
                );
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return (
                  (es = x),
                  (el = W),
                  blitBuffer(
                    (function (s, x) {
                      let W, X;
                      let ee = [];
                      for (let et = 0; et < s.length && !((x -= 2) < 0); ++et)
                        (X = (W = s.charCodeAt(et)) >> 8),
                          ee.push(W % 256),
                          ee.push(X);
                      return ee;
                    })(s, this.length - es),
                    this,
                    es,
                    el
                  )
                );
              default:
                if (eu) throw TypeError("Unknown encoding: " + X);
                (X = ("" + X).toLowerCase()), (eu = !0);
            }
        }),
        (Buffer.prototype.toJSON = function () {
          return {
            type: "Buffer",
            data: Array.prototype.slice.call(this._arr || this, 0),
          };
        }),
        (Buffer.prototype.slice = function (s, x) {
          let W = this.length;
          (s = ~~s),
            (x = void 0 === x ? W : ~~x),
            s < 0 ? (s += W) < 0 && (s = 0) : s > W && (s = W),
            x < 0 ? (x += W) < 0 && (x = 0) : x > W && (x = W),
            x < s && (x = s);
          let X = this.subarray(s, x);
          return Object.setPrototypeOf(X, Buffer.prototype), X;
        }),
        (Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE =
          function (s, x, W) {
            (s >>>= 0), (x >>>= 0), W || checkOffset(s, x, this.length);
            let X = this[s],
              ee = 1,
              et = 0;
            for (; ++et < x && (ee *= 256); ) X += this[s + et] * ee;
            return X;
          }),
        (Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE =
          function (s, x, W) {
            (s >>>= 0), (x >>>= 0), W || checkOffset(s, x, this.length);
            let X = this[s + --x],
              ee = 1;
            for (; x > 0 && (ee *= 256); ) X += this[s + --x] * ee;
            return X;
          }),
        (Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 =
          function (s, x) {
            return (s >>>= 0), x || checkOffset(s, 1, this.length), this[s];
          }),
        (Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE =
          function (s, x) {
            return (
              (s >>>= 0),
              x || checkOffset(s, 2, this.length),
              this[s] | (this[s + 1] << 8)
            );
          }),
        (Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE =
          function (s, x) {
            return (
              (s >>>= 0),
              x || checkOffset(s, 2, this.length),
              (this[s] << 8) | this[s + 1]
            );
          }),
        (Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE =
          function (s, x) {
            return (
              (s >>>= 0),
              x || checkOffset(s, 4, this.length),
              (this[s] | (this[s + 1] << 8) | (this[s + 2] << 16)) +
                16777216 * this[s + 3]
            );
          }),
        (Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE =
          function (s, x) {
            return (
              (s >>>= 0),
              x || checkOffset(s, 4, this.length),
              16777216 * this[s] +
                ((this[s + 1] << 16) | (this[s + 2] << 8) | this[s + 3])
            );
          }),
        (Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function (s) {
          validateNumber((s >>>= 0), "offset");
          let x = this[s],
            W = this[s + 7];
          (void 0 === x || void 0 === W) && boundsError(s, this.length - 8);
          let X =
              x + 256 * this[++s] + 65536 * this[++s] + 16777216 * this[++s],
            ee = this[++s] + 256 * this[++s] + 65536 * this[++s] + 16777216 * W;
          return BigInt(X) + (BigInt(ee) << BigInt(32));
        })),
        (Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function (s) {
          validateNumber((s >>>= 0), "offset");
          let x = this[s],
            W = this[s + 7];
          (void 0 === x || void 0 === W) && boundsError(s, this.length - 8);
          let X =
              16777216 * x + 65536 * this[++s] + 256 * this[++s] + this[++s],
            ee = 16777216 * this[++s] + 65536 * this[++s] + 256 * this[++s] + W;
          return (BigInt(X) << BigInt(32)) + BigInt(ee);
        })),
        (Buffer.prototype.readIntLE = function (s, x, W) {
          (s >>>= 0), (x >>>= 0), W || checkOffset(s, x, this.length);
          let X = this[s],
            ee = 1,
            et = 0;
          for (; ++et < x && (ee *= 256); ) X += this[s + et] * ee;
          return X >= (ee *= 128) && (X -= Math.pow(2, 8 * x)), X;
        }),
        (Buffer.prototype.readIntBE = function (s, x, W) {
          (s >>>= 0), (x >>>= 0), W || checkOffset(s, x, this.length);
          let X = x,
            ee = 1,
            et = this[s + --X];
          for (; X > 0 && (ee *= 256); ) et += this[s + --X] * ee;
          return et >= (ee *= 128) && (et -= Math.pow(2, 8 * x)), et;
        }),
        (Buffer.prototype.readInt8 = function (s, x) {
          return ((s >>>= 0),
          x || checkOffset(s, 1, this.length),
          128 & this[s])
            ? -((255 - this[s] + 1) * 1)
            : this[s];
        }),
        (Buffer.prototype.readInt16LE = function (s, x) {
          (s >>>= 0), x || checkOffset(s, 2, this.length);
          let W = this[s] | (this[s + 1] << 8);
          return 32768 & W ? 4294901760 | W : W;
        }),
        (Buffer.prototype.readInt16BE = function (s, x) {
          (s >>>= 0), x || checkOffset(s, 2, this.length);
          let W = this[s + 1] | (this[s] << 8);
          return 32768 & W ? 4294901760 | W : W;
        }),
        (Buffer.prototype.readInt32LE = function (s, x) {
          return (
            (s >>>= 0),
            x || checkOffset(s, 4, this.length),
            this[s] |
              (this[s + 1] << 8) |
              (this[s + 2] << 16) |
              (this[s + 3] << 24)
          );
        }),
        (Buffer.prototype.readInt32BE = function (s, x) {
          return (
            (s >>>= 0),
            x || checkOffset(s, 4, this.length),
            (this[s] << 24) |
              (this[s + 1] << 16) |
              (this[s + 2] << 8) |
              this[s + 3]
          );
        }),
        (Buffer.prototype.readBigInt64LE = defineBigIntMethod(function (s) {
          validateNumber((s >>>= 0), "offset");
          let x = this[s],
            W = this[s + 7];
          (void 0 === x || void 0 === W) && boundsError(s, this.length - 8);
          let X =
            this[s + 4] + 256 * this[s + 5] + 65536 * this[s + 6] + (W << 24);
          return (
            (BigInt(X) << BigInt(32)) +
            BigInt(
              x + 256 * this[++s] + 65536 * this[++s] + 16777216 * this[++s]
            )
          );
        })),
        (Buffer.prototype.readBigInt64BE = defineBigIntMethod(function (s) {
          validateNumber((s >>>= 0), "offset");
          let x = this[s],
            W = this[s + 7];
          (void 0 === x || void 0 === W) && boundsError(s, this.length - 8);
          let X = (x << 24) + 65536 * this[++s] + 256 * this[++s] + this[++s];
          return (
            (BigInt(X) << BigInt(32)) +
            BigInt(
              16777216 * this[++s] + 65536 * this[++s] + 256 * this[++s] + W
            )
          );
        })),
        (Buffer.prototype.readFloatLE = function (s, x) {
          return (
            (s >>>= 0),
            x || checkOffset(s, 4, this.length),
            ee.read(this, s, !0, 23, 4)
          );
        }),
        (Buffer.prototype.readFloatBE = function (s, x) {
          return (
            (s >>>= 0),
            x || checkOffset(s, 4, this.length),
            ee.read(this, s, !1, 23, 4)
          );
        }),
        (Buffer.prototype.readDoubleLE = function (s, x) {
          return (
            (s >>>= 0),
            x || checkOffset(s, 8, this.length),
            ee.read(this, s, !0, 52, 8)
          );
        }),
        (Buffer.prototype.readDoubleBE = function (s, x) {
          return (
            (s >>>= 0),
            x || checkOffset(s, 8, this.length),
            ee.read(this, s, !1, 52, 8)
          );
        }),
        (Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE =
          function (s, x, W, X) {
            if (((s = +s), (x >>>= 0), (W >>>= 0), !X)) {
              let X = Math.pow(2, 8 * W) - 1;
              checkInt(this, s, x, W, X, 0);
            }
            let ee = 1,
              et = 0;
            for (this[x] = 255 & s; ++et < W && (ee *= 256); )
              this[x + et] = (s / ee) & 255;
            return x + W;
          }),
        (Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE =
          function (s, x, W, X) {
            if (((s = +s), (x >>>= 0), (W >>>= 0), !X)) {
              let X = Math.pow(2, 8 * W) - 1;
              checkInt(this, s, x, W, X, 0);
            }
            let ee = W - 1,
              et = 1;
            for (this[x + ee] = 255 & s; --ee >= 0 && (et *= 256); )
              this[x + ee] = (s / et) & 255;
            return x + W;
          }),
        (Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 =
          function (s, x, W) {
            return (
              (s = +s),
              (x >>>= 0),
              W || checkInt(this, s, x, 1, 255, 0),
              (this[x] = 255 & s),
              x + 1
            );
          }),
        (Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE =
          function (s, x, W) {
            return (
              (s = +s),
              (x >>>= 0),
              W || checkInt(this, s, x, 2, 65535, 0),
              (this[x] = 255 & s),
              (this[x + 1] = s >>> 8),
              x + 2
            );
          }),
        (Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE =
          function (s, x, W) {
            return (
              (s = +s),
              (x >>>= 0),
              W || checkInt(this, s, x, 2, 65535, 0),
              (this[x] = s >>> 8),
              (this[x + 1] = 255 & s),
              x + 2
            );
          }),
        (Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE =
          function (s, x, W) {
            return (
              (s = +s),
              (x >>>= 0),
              W || checkInt(this, s, x, 4, 4294967295, 0),
              (this[x + 3] = s >>> 24),
              (this[x + 2] = s >>> 16),
              (this[x + 1] = s >>> 8),
              (this[x] = 255 & s),
              x + 4
            );
          }),
        (Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE =
          function (s, x, W) {
            return (
              (s = +s),
              (x >>>= 0),
              W || checkInt(this, s, x, 4, 4294967295, 0),
              (this[x] = s >>> 24),
              (this[x + 1] = s >>> 16),
              (this[x + 2] = s >>> 8),
              (this[x + 3] = 255 & s),
              x + 4
            );
          }),
        (Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function (
          s,
          x = 0
        ) {
          return wrtBigUInt64LE(
            this,
            s,
            x,
            BigInt(0),
            BigInt("0xffffffffffffffff")
          );
        })),
        (Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function (
          s,
          x = 0
        ) {
          return wrtBigUInt64BE(
            this,
            s,
            x,
            BigInt(0),
            BigInt("0xffffffffffffffff")
          );
        })),
        (Buffer.prototype.writeIntLE = function (s, x, W, X) {
          if (((s = +s), (x >>>= 0), !X)) {
            let X = Math.pow(2, 8 * W - 1);
            checkInt(this, s, x, W, X - 1, -X);
          }
          let ee = 0,
            et = 1,
            er = 0;
          for (this[x] = 255 & s; ++ee < W && (et *= 256); )
            s < 0 && 0 === er && 0 !== this[x + ee - 1] && (er = 1),
              (this[x + ee] = (((s / et) >> 0) - er) & 255);
          return x + W;
        }),
        (Buffer.prototype.writeIntBE = function (s, x, W, X) {
          if (((s = +s), (x >>>= 0), !X)) {
            let X = Math.pow(2, 8 * W - 1);
            checkInt(this, s, x, W, X - 1, -X);
          }
          let ee = W - 1,
            et = 1,
            er = 0;
          for (this[x + ee] = 255 & s; --ee >= 0 && (et *= 256); )
            s < 0 && 0 === er && 0 !== this[x + ee + 1] && (er = 1),
              (this[x + ee] = (((s / et) >> 0) - er) & 255);
          return x + W;
        }),
        (Buffer.prototype.writeInt8 = function (s, x, W) {
          return (
            (s = +s),
            (x >>>= 0),
            W || checkInt(this, s, x, 1, 127, -128),
            s < 0 && (s = 255 + s + 1),
            (this[x] = 255 & s),
            x + 1
          );
        }),
        (Buffer.prototype.writeInt16LE = function (s, x, W) {
          return (
            (s = +s),
            (x >>>= 0),
            W || checkInt(this, s, x, 2, 32767, -32768),
            (this[x] = 255 & s),
            (this[x + 1] = s >>> 8),
            x + 2
          );
        }),
        (Buffer.prototype.writeInt16BE = function (s, x, W) {
          return (
            (s = +s),
            (x >>>= 0),
            W || checkInt(this, s, x, 2, 32767, -32768),
            (this[x] = s >>> 8),
            (this[x + 1] = 255 & s),
            x + 2
          );
        }),
        (Buffer.prototype.writeInt32LE = function (s, x, W) {
          return (
            (s = +s),
            (x >>>= 0),
            W || checkInt(this, s, x, 4, 2147483647, -2147483648),
            (this[x] = 255 & s),
            (this[x + 1] = s >>> 8),
            (this[x + 2] = s >>> 16),
            (this[x + 3] = s >>> 24),
            x + 4
          );
        }),
        (Buffer.prototype.writeInt32BE = function (s, x, W) {
          return (
            (s = +s),
            (x >>>= 0),
            W || checkInt(this, s, x, 4, 2147483647, -2147483648),
            s < 0 && (s = 4294967295 + s + 1),
            (this[x] = s >>> 24),
            (this[x + 1] = s >>> 16),
            (this[x + 2] = s >>> 8),
            (this[x + 3] = 255 & s),
            x + 4
          );
        }),
        (Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function (
          s,
          x = 0
        ) {
          return wrtBigUInt64LE(
            this,
            s,
            x,
            -BigInt("0x8000000000000000"),
            BigInt("0x7fffffffffffffff")
          );
        })),
        (Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function (
          s,
          x = 0
        ) {
          return wrtBigUInt64BE(
            this,
            s,
            x,
            -BigInt("0x8000000000000000"),
            BigInt("0x7fffffffffffffff")
          );
        })),
        (Buffer.prototype.writeFloatLE = function (s, x, W) {
          return writeFloat(this, s, x, !0, W);
        }),
        (Buffer.prototype.writeFloatBE = function (s, x, W) {
          return writeFloat(this, s, x, !1, W);
        }),
        (Buffer.prototype.writeDoubleLE = function (s, x, W) {
          return writeDouble(this, s, x, !0, W);
        }),
        (Buffer.prototype.writeDoubleBE = function (s, x, W) {
          return writeDouble(this, s, x, !1, W);
        }),
        (Buffer.prototype.copy = function (s, x, W, X) {
          if (!Buffer.isBuffer(s))
            throw TypeError("argument should be a Buffer");
          if (
            (W || (W = 0),
            X || 0 === X || (X = this.length),
            x >= s.length && (x = s.length),
            x || (x = 0),
            X > 0 && X < W && (X = W),
            X === W || 0 === s.length || 0 === this.length)
          )
            return 0;
          if (x < 0) throw RangeError("targetStart out of bounds");
          if (W < 0 || W >= this.length) throw RangeError("Index out of range");
          if (X < 0) throw RangeError("sourceEnd out of bounds");
          X > this.length && (X = this.length),
            s.length - x < X - W && (X = s.length - x + W);
          let ee = X - W;
          return (
            this === s && "function" == typeof Uint8Array.prototype.copyWithin
              ? this.copyWithin(x, W, X)
              : Uint8Array.prototype.set.call(s, this.subarray(W, X), x),
            ee
          );
        }),
        (Buffer.prototype.fill = function (s, x, W, X) {
          let ee;
          if ("string" == typeof s) {
            if (
              ("string" == typeof x
                ? ((X = x), (x = 0), (W = this.length))
                : "string" == typeof W && ((X = W), (W = this.length)),
              void 0 !== X && "string" != typeof X)
            )
              throw TypeError("encoding must be a string");
            if ("string" == typeof X && !Buffer.isEncoding(X))
              throw TypeError("Unknown encoding: " + X);
            if (1 === s.length) {
              let x = s.charCodeAt(0);
              (("utf8" === X && x < 128) || "latin1" === X) && (s = x);
            }
          } else
            "number" == typeof s
              ? (s &= 255)
              : "boolean" == typeof s && (s = Number(s));
          if (x < 0 || this.length < x || this.length < W)
            throw RangeError("Out of range index");
          if (W <= x) return this;
          if (
            ((x >>>= 0),
            (W = void 0 === W ? this.length : W >>> 0),
            s || (s = 0),
            "number" == typeof s)
          )
            for (ee = x; ee < W; ++ee) this[ee] = s;
          else {
            let et = Buffer.isBuffer(s) ? s : Buffer.from(s, X),
              er = et.length;
            if (0 === er)
              throw TypeError(
                'The value "' + s + '" is invalid for argument "value"'
              );
            for (ee = 0; ee < W - x; ++ee) this[ee + x] = et[ee % er];
          }
          return this;
        });
      let er = {};
      function E(s, x, W) {
        er[s] = class extends W {
          constructor() {
            super(),
              Object.defineProperty(this, "message", {
                value: x.apply(this, arguments),
                writable: !0,
                configurable: !0,
              }),
              (this.name = `${this.name} [${s}]`),
              this.stack,
              delete this.name;
          }
          get code() {
            return s;
          }
          set code(s) {
            Object.defineProperty(this, "code", {
              configurable: !0,
              enumerable: !0,
              value: s,
              writable: !0,
            });
          }
          toString() {
            return `${this.name} [${s}]: ${this.message}`;
          }
        };
      }
      function addNumericalSeparator(s) {
        let x = "",
          W = s.length,
          X = "-" === s[0] ? 1 : 0;
        for (; W >= X + 4; W -= 3) x = `_${s.slice(W - 3, W)}${x}`;
        return `${s.slice(0, W)}${x}`;
      }
      function checkIntBI(s, x, W, X, ee, et) {
        if (s > W || s < x) {
          let X;
          let ee = "bigint" == typeof x ? "n" : "";
          throw (
            ((X =
              et > 3
                ? 0 === x || x === BigInt(0)
                  ? `>= 0${ee} and < 2${ee} ** ${(et + 1) * 8}${ee}`
                  : `>= -(2${ee} ** ${(et + 1) * 8 - 1}${ee}) and < 2 ** ${
                      (et + 1) * 8 - 1
                    }${ee}`
                : `>= ${x}${ee} and <= ${W}${ee}`),
            new er.ERR_OUT_OF_RANGE("value", X, s))
          );
        }
        validateNumber(ee, "offset"),
          (void 0 === X[ee] || void 0 === X[ee + et]) &&
            boundsError(ee, X.length - (et + 1));
      }
      function validateNumber(s, x) {
        if ("number" != typeof s)
          throw new er.ERR_INVALID_ARG_TYPE(x, "number", s);
      }
      function boundsError(s, x, W) {
        if (Math.floor(s) !== s)
          throw (
            (validateNumber(s, W),
            new er.ERR_OUT_OF_RANGE(W || "offset", "an integer", s))
          );
        if (x < 0) throw new er.ERR_BUFFER_OUT_OF_BOUNDS();
        throw new er.ERR_OUT_OF_RANGE(
          W || "offset",
          `>= ${W ? 1 : 0} and <= ${x}`,
          s
        );
      }
      E(
        "ERR_BUFFER_OUT_OF_BOUNDS",
        function (s) {
          return s
            ? `${s} is outside of buffer bounds`
            : "Attempt to access memory outside buffer bounds";
        },
        RangeError
      ),
        E(
          "ERR_INVALID_ARG_TYPE",
          function (s, x) {
            return `The "${s}" argument must be of type number. Received type ${typeof x}`;
          },
          TypeError
        ),
        E(
          "ERR_OUT_OF_RANGE",
          function (s, x, W) {
            let X = `The value of "${s}" is out of range.`,
              ee = W;
            return (
              Number.isInteger(W) && Math.abs(W) > 4294967296
                ? (ee = addNumericalSeparator(String(W)))
                : "bigint" == typeof W &&
                  ((ee = String(W)),
                  (W > BigInt(2) ** BigInt(32) ||
                    W < -(BigInt(2) ** BigInt(32))) &&
                    (ee = addNumericalSeparator(ee)),
                  (ee += "n")),
              (X += ` It must be ${x}. Received ${ee}`)
            );
          },
          RangeError
        );
      let ei = /[^+/0-9A-Za-z-_]/g;
      function utf8ToBytes(s, x) {
        let W;
        x = x || 1 / 0;
        let X = s.length,
          ee = null,
          et = [];
        for (let er = 0; er < X; ++er) {
          if ((W = s.charCodeAt(er)) > 55295 && W < 57344) {
            if (!ee) {
              if (W > 56319 || er + 1 === X) {
                (x -= 3) > -1 && et.push(239, 191, 189);
                continue;
              }
              ee = W;
              continue;
            }
            if (W < 56320) {
              (x -= 3) > -1 && et.push(239, 191, 189), (ee = W);
              continue;
            }
            W = (((ee - 55296) << 10) | (W - 56320)) + 65536;
          } else ee && (x -= 3) > -1 && et.push(239, 191, 189);
          if (((ee = null), W < 128)) {
            if ((x -= 1) < 0) break;
            et.push(W);
          } else if (W < 2048) {
            if ((x -= 2) < 0) break;
            et.push((W >> 6) | 192, (63 & W) | 128);
          } else if (W < 65536) {
            if ((x -= 3) < 0) break;
            et.push((W >> 12) | 224, ((W >> 6) & 63) | 128, (63 & W) | 128);
          } else if (W < 1114112) {
            if ((x -= 4) < 0) break;
            et.push(
              (W >> 18) | 240,
              ((W >> 12) & 63) | 128,
              ((W >> 6) & 63) | 128,
              (63 & W) | 128
            );
          } else throw Error("Invalid code point");
        }
        return et;
      }
      function base64ToBytes(s) {
        return X.toByteArray(
          (function (s) {
            if ((s = (s = s.split("=")[0]).trim().replace(ei, "")).length < 2)
              return "";
            for (; s.length % 4 != 0; ) s += "=";
            return s;
          })(s)
        );
      }
      function blitBuffer(s, x, W, X) {
        let ee;
        for (ee = 0; ee < X && !(ee + W >= x.length) && !(ee >= s.length); ++ee)
          x[ee + W] = s[ee];
        return ee;
      }
      function isInstance(s, x) {
        return (
          s instanceof x ||
          (null != s &&
            null != s.constructor &&
            null != s.constructor.name &&
            s.constructor.name === x.name)
        );
      }
      let eo = (function () {
        let s = "0123456789abcdef",
          x = Array(256);
        for (let W = 0; W < 16; ++W) {
          let X = 16 * W;
          for (let ee = 0; ee < 16; ++ee) x[X + ee] = s[W] + s[ee];
        }
        return x;
      })();
      function defineBigIntMethod(s) {
        return "undefined" == typeof BigInt ? BufferBigIntNotDefined : s;
      }
      function BufferBigIntNotDefined() {
        throw Error("BigInt not supported");
      }
    },
    86010: function (s, x, W) {
      "use strict";
      function clsx() {
        for (var s, x, W = 0, X = ""; W < arguments.length; )
          (s = arguments[W++]) &&
            (x = (function r(s) {
              var x,
                W,
                X = "";
              if ("string" == typeof s || "number" == typeof s) X += s;
              else if ("object" == typeof s) {
                if (Array.isArray(s))
                  for (x = 0; x < s.length; x++)
                    s[x] && (W = r(s[x])) && (X && (X += " "), (X += W));
                else for (x in s) s[x] && (X && (X += " "), (X += x));
              }
              return X;
            })(s)) &&
            (X && (X += " "), (X += x));
        return X;
      }
      W.r(x),
        W.d(x, {
          clsx: function () {
            return clsx;
          },
        }),
        (x.default = clsx);
    },
    54098: function (s, x, W) {
      var X =
          ("undefined" != typeof globalThis && globalThis) ||
          ("undefined" != typeof self && self) ||
          (void 0 !== W.g && W.g),
        ee = (function () {
          function F() {
            (this.fetch = !1), (this.DOMException = X.DOMException);
          }
          return (F.prototype = X), new F();
        })();
      (function (s) {
        var x =
            (void 0 !== ee && ee) ||
            ("undefined" != typeof self && self) ||
            (void 0 !== x && x),
          W = {
            searchParams: "URLSearchParams" in x,
            iterable: "Symbol" in x && "iterator" in Symbol,
            blob:
              "FileReader" in x &&
              "Blob" in x &&
              (function () {
                try {
                  return new Blob(), !0;
                } catch (s) {
                  return !1;
                }
              })(),
            formData: "FormData" in x,
            arrayBuffer: "ArrayBuffer" in x,
          };
        if (W.arrayBuffer)
          var X = [
              "[object Int8Array]",
              "[object Uint8Array]",
              "[object Uint8ClampedArray]",
              "[object Int16Array]",
              "[object Uint16Array]",
              "[object Int32Array]",
              "[object Uint32Array]",
              "[object Float32Array]",
              "[object Float64Array]",
            ],
            et =
              ArrayBuffer.isView ||
              function (s) {
                return s && X.indexOf(Object.prototype.toString.call(s)) > -1;
              };
        function normalizeName(s) {
          if (
            ("string" != typeof s && (s = String(s)),
            /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(s) || "" === s)
          )
            throw TypeError(
              'Invalid character in header field name: "' + s + '"'
            );
          return s.toLowerCase();
        }
        function normalizeValue(s) {
          return "string" != typeof s && (s = String(s)), s;
        }
        function iteratorFor(s) {
          var x = {
            next: function () {
              var x = s.shift();
              return { done: void 0 === x, value: x };
            },
          };
          return (
            W.iterable &&
              (x[Symbol.iterator] = function () {
                return x;
              }),
            x
          );
        }
        function Headers(s) {
          (this.map = {}),
            s instanceof Headers
              ? s.forEach(function (s, x) {
                  this.append(x, s);
                }, this)
              : Array.isArray(s)
              ? s.forEach(function (s) {
                  this.append(s[0], s[1]);
                }, this)
              : s &&
                Object.getOwnPropertyNames(s).forEach(function (x) {
                  this.append(x, s[x]);
                }, this);
        }
        function consumed(s) {
          if (s.bodyUsed) return Promise.reject(TypeError("Already read"));
          s.bodyUsed = !0;
        }
        function fileReaderReady(s) {
          return new Promise(function (x, W) {
            (s.onload = function () {
              x(s.result);
            }),
              (s.onerror = function () {
                W(s.error);
              });
          });
        }
        function readBlobAsArrayBuffer(s) {
          var x = new FileReader(),
            W = fileReaderReady(x);
          return x.readAsArrayBuffer(s), W;
        }
        function bufferClone(s) {
          if (s.slice) return s.slice(0);
          var x = new Uint8Array(s.byteLength);
          return x.set(new Uint8Array(s)), x.buffer;
        }
        function Body() {
          return (
            (this.bodyUsed = !1),
            (this._initBody = function (s) {
              if (((this.bodyUsed = this.bodyUsed), (this._bodyInit = s), s)) {
                if ("string" == typeof s) this._bodyText = s;
                else if (W.blob && Blob.prototype.isPrototypeOf(s))
                  this._bodyBlob = s;
                else if (W.formData && FormData.prototype.isPrototypeOf(s))
                  this._bodyFormData = s;
                else if (
                  W.searchParams &&
                  URLSearchParams.prototype.isPrototypeOf(s)
                )
                  this._bodyText = s.toString();
                else {
                  var x;
                  W.arrayBuffer &&
                  W.blob &&
                  (x = s) &&
                  DataView.prototype.isPrototypeOf(x)
                    ? ((this._bodyArrayBuffer = bufferClone(s.buffer)),
                      (this._bodyInit = new Blob([this._bodyArrayBuffer])))
                    : W.arrayBuffer &&
                      (ArrayBuffer.prototype.isPrototypeOf(s) || et(s))
                    ? (this._bodyArrayBuffer = bufferClone(s))
                    : (this._bodyText = s = Object.prototype.toString.call(s));
                }
              } else this._bodyText = "";
              !this.headers.get("content-type") &&
                ("string" == typeof s
                  ? this.headers.set("content-type", "text/plain;charset=UTF-8")
                  : this._bodyBlob && this._bodyBlob.type
                  ? this.headers.set("content-type", this._bodyBlob.type)
                  : W.searchParams &&
                    URLSearchParams.prototype.isPrototypeOf(s) &&
                    this.headers.set(
                      "content-type",
                      "application/x-www-form-urlencoded;charset=UTF-8"
                    ));
            }),
            W.blob &&
              ((this.blob = function () {
                var s = consumed(this);
                if (s) return s;
                if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                if (this._bodyArrayBuffer)
                  return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                if (!this._bodyFormData)
                  return Promise.resolve(new Blob([this._bodyText]));
                throw Error("could not read FormData body as blob");
              }),
              (this.arrayBuffer = function () {
                return this._bodyArrayBuffer
                  ? consumed(this) ||
                      (ArrayBuffer.isView(this._bodyArrayBuffer)
                        ? Promise.resolve(
                            this._bodyArrayBuffer.buffer.slice(
                              this._bodyArrayBuffer.byteOffset,
                              this._bodyArrayBuffer.byteOffset +
                                this._bodyArrayBuffer.byteLength
                            )
                          )
                        : Promise.resolve(this._bodyArrayBuffer))
                  : this.blob().then(readBlobAsArrayBuffer);
              })),
            (this.text = function () {
              var s,
                x,
                W,
                X = consumed(this);
              if (X) return X;
              if (this._bodyBlob)
                return (
                  (s = this._bodyBlob),
                  (W = fileReaderReady((x = new FileReader()))),
                  x.readAsText(s),
                  W
                );
              if (this._bodyArrayBuffer)
                return Promise.resolve(
                  (function (s) {
                    for (
                      var x = new Uint8Array(s), W = Array(x.length), X = 0;
                      X < x.length;
                      X++
                    )
                      W[X] = String.fromCharCode(x[X]);
                    return W.join("");
                  })(this._bodyArrayBuffer)
                );
              if (!this._bodyFormData) return Promise.resolve(this._bodyText);
              throw Error("could not read FormData body as text");
            }),
            W.formData &&
              (this.formData = function () {
                return this.text().then(decode);
              }),
            (this.json = function () {
              return this.text().then(JSON.parse);
            }),
            this
          );
        }
        (Headers.prototype.append = function (s, x) {
          (s = normalizeName(s)), (x = normalizeValue(x));
          var W = this.map[s];
          this.map[s] = W ? W + ", " + x : x;
        }),
          (Headers.prototype.delete = function (s) {
            delete this.map[normalizeName(s)];
          }),
          (Headers.prototype.get = function (s) {
            return (s = normalizeName(s)), this.has(s) ? this.map[s] : null;
          }),
          (Headers.prototype.has = function (s) {
            return this.map.hasOwnProperty(normalizeName(s));
          }),
          (Headers.prototype.set = function (s, x) {
            this.map[normalizeName(s)] = normalizeValue(x);
          }),
          (Headers.prototype.forEach = function (s, x) {
            for (var W in this.map)
              this.map.hasOwnProperty(W) && s.call(x, this.map[W], W, this);
          }),
          (Headers.prototype.keys = function () {
            var s = [];
            return (
              this.forEach(function (x, W) {
                s.push(W);
              }),
              iteratorFor(s)
            );
          }),
          (Headers.prototype.values = function () {
            var s = [];
            return (
              this.forEach(function (x) {
                s.push(x);
              }),
              iteratorFor(s)
            );
          }),
          (Headers.prototype.entries = function () {
            var s = [];
            return (
              this.forEach(function (x, W) {
                s.push([W, x]);
              }),
              iteratorFor(s)
            );
          }),
          W.iterable &&
            (Headers.prototype[Symbol.iterator] = Headers.prototype.entries);
        var er = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
        function Request(s, x) {
          if (!(this instanceof Request))
            throw TypeError(
              'Please use the "new" operator, this DOM object constructor cannot be called as a function.'
            );
          var W,
            X,
            ee = (x = x || {}).body;
          if (s instanceof Request) {
            if (s.bodyUsed) throw TypeError("Already read");
            (this.url = s.url),
              (this.credentials = s.credentials),
              x.headers || (this.headers = new Headers(s.headers)),
              (this.method = s.method),
              (this.mode = s.mode),
              (this.signal = s.signal),
              ee ||
                null == s._bodyInit ||
                ((ee = s._bodyInit), (s.bodyUsed = !0));
          } else this.url = String(s);
          if (
            ((this.credentials =
              x.credentials || this.credentials || "same-origin"),
            (x.headers || !this.headers) &&
              (this.headers = new Headers(x.headers)),
            (this.method =
              ((X = (W = x.method || this.method || "GET").toUpperCase()),
              er.indexOf(X) > -1 ? X : W)),
            (this.mode = x.mode || this.mode || null),
            (this.signal = x.signal || this.signal),
            (this.referrer = null),
            ("GET" === this.method || "HEAD" === this.method) && ee)
          )
            throw TypeError("Body not allowed for GET or HEAD requests");
          if (
            (this._initBody(ee),
            ("GET" === this.method || "HEAD" === this.method) &&
              ("no-store" === x.cache || "no-cache" === x.cache))
          ) {
            var et = /([?&])_=[^&]*/;
            et.test(this.url)
              ? (this.url = this.url.replace(et, "$1_=" + new Date().getTime()))
              : (this.url +=
                  (/\?/.test(this.url) ? "&" : "?") +
                  "_=" +
                  new Date().getTime());
          }
        }
        function decode(s) {
          var x = new FormData();
          return (
            s
              .trim()
              .split("&")
              .forEach(function (s) {
                if (s) {
                  var W = s.split("="),
                    X = W.shift().replace(/\+/g, " "),
                    ee = W.join("=").replace(/\+/g, " ");
                  x.append(decodeURIComponent(X), decodeURIComponent(ee));
                }
              }),
            x
          );
        }
        function Response(s, x) {
          if (!(this instanceof Response))
            throw TypeError(
              'Please use the "new" operator, this DOM object constructor cannot be called as a function.'
            );
          x || (x = {}),
            (this.type = "default"),
            (this.status = void 0 === x.status ? 200 : x.status),
            (this.ok = this.status >= 200 && this.status < 300),
            (this.statusText =
              void 0 === x.statusText ? "" : "" + x.statusText),
            (this.headers = new Headers(x.headers)),
            (this.url = x.url || ""),
            this._initBody(s);
        }
        (Request.prototype.clone = function () {
          return new Request(this, { body: this._bodyInit });
        }),
          Body.call(Request.prototype),
          Body.call(Response.prototype),
          (Response.prototype.clone = function () {
            return new Response(this._bodyInit, {
              status: this.status,
              statusText: this.statusText,
              headers: new Headers(this.headers),
              url: this.url,
            });
          }),
          (Response.error = function () {
            var s = new Response(null, { status: 0, statusText: "" });
            return (s.type = "error"), s;
          });
        var ei = [301, 302, 303, 307, 308];
        (Response.redirect = function (s, x) {
          if (-1 === ei.indexOf(x)) throw RangeError("Invalid status code");
          return new Response(null, { status: x, headers: { location: s } });
        }),
          (s.DOMException = x.DOMException);
        try {
          new s.DOMException();
        } catch (x) {
          (s.DOMException = function (s, x) {
            (this.message = s), (this.name = x);
            var W = Error(s);
            this.stack = W.stack;
          }),
            (s.DOMException.prototype = Object.create(Error.prototype)),
            (s.DOMException.prototype.constructor = s.DOMException);
        }
        function fetch(X, ee) {
          return new Promise(function (et, er) {
            var ei = new Request(X, ee);
            if (ei.signal && ei.signal.aborted)
              return er(new s.DOMException("Aborted", "AbortError"));
            var eo = new XMLHttpRequest();
            function abortXhr() {
              eo.abort();
            }
            (eo.onload = function () {
              var s,
                x,
                W = {
                  status: eo.status,
                  statusText: eo.statusText,
                  headers:
                    ((s = eo.getAllResponseHeaders() || ""),
                    (x = new Headers()),
                    s
                      .replace(/\r?\n[\t ]+/g, " ")
                      .split("\r")
                      .map(function (s) {
                        return 0 === s.indexOf("\n")
                          ? s.substr(1, s.length)
                          : s;
                      })
                      .forEach(function (s) {
                        var W = s.split(":"),
                          X = W.shift().trim();
                        if (X) {
                          var ee = W.join(":").trim();
                          x.append(X, ee);
                        }
                      }),
                    x),
                };
              W.url =
                "responseURL" in eo
                  ? eo.responseURL
                  : W.headers.get("X-Request-URL");
              var X = "response" in eo ? eo.response : eo.responseText;
              setTimeout(function () {
                et(new Response(X, W));
              }, 0);
            }),
              (eo.onerror = function () {
                setTimeout(function () {
                  er(TypeError("Network request failed"));
                }, 0);
              }),
              (eo.ontimeout = function () {
                setTimeout(function () {
                  er(TypeError("Network request failed"));
                }, 0);
              }),
              (eo.onabort = function () {
                setTimeout(function () {
                  er(new s.DOMException("Aborted", "AbortError"));
                }, 0);
              }),
              eo.open(
                ei.method,
                (function (s) {
                  try {
                    return "" === s && x.location.href ? x.location.href : s;
                  } catch (x) {
                    return s;
                  }
                })(ei.url),
                !0
              ),
              "include" === ei.credentials
                ? (eo.withCredentials = !0)
                : "omit" === ei.credentials && (eo.withCredentials = !1),
              "responseType" in eo &&
                (W.blob
                  ? (eo.responseType = "blob")
                  : W.arrayBuffer &&
                    ei.headers.get("Content-Type") &&
                    -1 !==
                      ei.headers
                        .get("Content-Type")
                        .indexOf("application/octet-stream") &&
                    (eo.responseType = "arraybuffer")),
              !ee ||
              "object" != typeof ee.headers ||
              ee.headers instanceof Headers
                ? ei.headers.forEach(function (s, x) {
                    eo.setRequestHeader(x, s);
                  })
                : Object.getOwnPropertyNames(ee.headers).forEach(function (s) {
                    eo.setRequestHeader(s, normalizeValue(ee.headers[s]));
                  }),
              ei.signal &&
                (ei.signal.addEventListener("abort", abortXhr),
                (eo.onreadystatechange = function () {
                  4 === eo.readyState &&
                    ei.signal.removeEventListener("abort", abortXhr);
                })),
              eo.send(void 0 === ei._bodyInit ? null : ei._bodyInit);
          });
        }
        (fetch.polyfill = !0),
          x.fetch ||
            ((x.fetch = fetch),
            (x.Headers = Headers),
            (x.Request = Request),
            (x.Response = Response)),
          (s.Headers = Headers),
          (s.Request = Request),
          (s.Response = Response),
          (s.fetch = fetch);
      })({}),
        (ee.fetch.ponyfill = !0),
        delete ee.fetch.polyfill;
      var et = X.fetch ? X : ee;
      ((x = et.fetch).default = et.fetch),
        (x.fetch = et.fetch),
        (x.Headers = et.Headers),
        (x.Request = et.Request),
        (x.Response = et.Response),
        (s.exports = x);
    },
    27484: function (s) {
      var x,
        W,
        X,
        ee,
        et,
        er,
        ei,
        eo,
        ea,
        es,
        el,
        ec,
        eu,
        ed,
        eh,
        ep,
        ef,
        eg,
        em,
        ew,
        eb,
        ev;
      s.exports =
        ((x = "millisecond"),
        (W = "second"),
        (X = "minute"),
        (ee = "hour"),
        (et = "week"),
        (er = "month"),
        (ei = "quarter"),
        (eo = "year"),
        (ea = "date"),
        (es = "Invalid Date"),
        (el =
          /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/),
        (ec =
          /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g),
        (eu = function (s, x, W) {
          var X = String(s);
          return !X || X.length >= x
            ? s
            : "" + Array(x + 1 - X.length).join(W) + s;
        }),
        ((eh = {})[(ed = "en")] = {
          name: "en",
          weekdays:
            "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
              "_"
            ),
          months:
            "January_February_March_April_May_June_July_August_September_October_November_December".split(
              "_"
            ),
          ordinal: function (s) {
            var x = ["th", "st", "nd", "rd"],
              W = s % 100;
            return "[" + s + (x[(W - 20) % 10] || x[W] || "th") + "]";
          },
        }),
        (ep = "$isDayjsObject"),
        (ef = function (s) {
          return s instanceof eb || !(!s || !s[ep]);
        }),
        (eg = function t(s, x, W) {
          var X;
          if (!s) return ed;
          if ("string" == typeof s) {
            var ee = s.toLowerCase();
            eh[ee] && (X = ee), x && ((eh[ee] = x), (X = ee));
            var et = s.split("-");
            if (!X && et.length > 1) return t(et[0]);
          } else {
            var er = s.name;
            (eh[er] = s), (X = er);
          }
          return !W && X && (ed = X), X || (!W && ed);
        }),
        (em = function (s, x) {
          if (ef(s)) return s.clone();
          var W = "object" == typeof x ? x : {};
          return (W.date = s), (W.args = arguments), new eb(W);
        }),
        ((ew = {
          s: eu,
          z: function (s) {
            var x = -s.utcOffset(),
              W = Math.abs(x);
            return (
              (x <= 0 ? "+" : "-") +
              eu(Math.floor(W / 60), 2, "0") +
              ":" +
              eu(W % 60, 2, "0")
            );
          },
          m: function t(s, x) {
            if (s.date() < x.date()) return -t(x, s);
            var W = 12 * (x.year() - s.year()) + (x.month() - s.month()),
              X = s.clone().add(W, er),
              ee = x - X < 0,
              et = s.clone().add(W + (ee ? -1 : 1), er);
            return +(-(W + (x - X) / (ee ? X - et : et - X)) || 0);
          },
          a: function (s) {
            return s < 0 ? Math.ceil(s) || 0 : Math.floor(s);
          },
          p: function (s) {
            return (
              {
                M: er,
                y: eo,
                w: et,
                d: "day",
                D: ea,
                h: ee,
                m: X,
                s: W,
                ms: x,
                Q: ei,
              }[s] ||
              String(s || "")
                .toLowerCase()
                .replace(/s$/, "")
            );
          },
          u: function (s) {
            return void 0 === s;
          },
        }).l = eg),
        (ew.i = ef),
        (ew.w = function (s, x) {
          return em(s, {
            locale: x.$L,
            utc: x.$u,
            x: x.$x,
            $offset: x.$offset,
          });
        }),
        (ev = (eb = (function () {
          function M(s) {
            (this.$L = eg(s.locale, null, !0)),
              this.parse(s),
              (this.$x = this.$x || s.x || {}),
              (this[ep] = !0);
          }
          var s = M.prototype;
          return (
            (s.parse = function (s) {
              (this.$d = (function (s) {
                var x = s.date,
                  W = s.utc;
                if (null === x) return new Date(NaN);
                if (ew.u(x)) return new Date();
                if (x instanceof Date) return new Date(x);
                if ("string" == typeof x && !/Z$/i.test(x)) {
                  var X = x.match(el);
                  if (X) {
                    var ee = X[2] - 1 || 0,
                      et = (X[7] || "0").substring(0, 3);
                    return W
                      ? new Date(
                          Date.UTC(
                            X[1],
                            ee,
                            X[3] || 1,
                            X[4] || 0,
                            X[5] || 0,
                            X[6] || 0,
                            et
                          )
                        )
                      : new Date(
                          X[1],
                          ee,
                          X[3] || 1,
                          X[4] || 0,
                          X[5] || 0,
                          X[6] || 0,
                          et
                        );
                  }
                }
                return new Date(x);
              })(s)),
                this.init();
            }),
            (s.init = function () {
              var s = this.$d;
              (this.$y = s.getFullYear()),
                (this.$M = s.getMonth()),
                (this.$D = s.getDate()),
                (this.$W = s.getDay()),
                (this.$H = s.getHours()),
                (this.$m = s.getMinutes()),
                (this.$s = s.getSeconds()),
                (this.$ms = s.getMilliseconds());
            }),
            (s.$utils = function () {
              return ew;
            }),
            (s.isValid = function () {
              return this.$d.toString() !== es;
            }),
            (s.isSame = function (s, x) {
              var W = em(s);
              return this.startOf(x) <= W && W <= this.endOf(x);
            }),
            (s.isAfter = function (s, x) {
              return em(s) < this.startOf(x);
            }),
            (s.isBefore = function (s, x) {
              return this.endOf(x) < em(s);
            }),
            (s.$g = function (s, x, W) {
              return ew.u(s) ? this[x] : this.set(W, s);
            }),
            (s.unix = function () {
              return Math.floor(this.valueOf() / 1e3);
            }),
            (s.valueOf = function () {
              return this.$d.getTime();
            }),
            (s.startOf = function (s, x) {
              var ei = this,
                es = !!ew.u(x) || x,
                el = ew.p(s),
                l = function (s, x) {
                  var W = ew.w(
                    ei.$u ? Date.UTC(ei.$y, x, s) : new Date(ei.$y, x, s),
                    ei
                  );
                  return es ? W : W.endOf("day");
                },
                $ = function (s, x) {
                  return ew.w(
                    ei
                      .toDate()
                      [s].apply(
                        ei.toDate("s"),
                        (es ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(x)
                      ),
                    ei
                  );
                },
                ec = this.$W,
                eu = this.$M,
                ed = this.$D,
                eh = "set" + (this.$u ? "UTC" : "");
              switch (el) {
                case eo:
                  return es ? l(1, 0) : l(31, 11);
                case er:
                  return es ? l(1, eu) : l(0, eu + 1);
                case et:
                  var ep = this.$locale().weekStart || 0,
                    ef = (ec < ep ? ec + 7 : ec) - ep;
                  return l(es ? ed - ef : ed + (6 - ef), eu);
                case "day":
                case ea:
                  return $(eh + "Hours", 0);
                case ee:
                  return $(eh + "Minutes", 1);
                case X:
                  return $(eh + "Seconds", 2);
                case W:
                  return $(eh + "Milliseconds", 3);
                default:
                  return this.clone();
              }
            }),
            (s.endOf = function (s) {
              return this.startOf(s, !1);
            }),
            (s.$set = function (s, et) {
              var ei,
                es = ew.p(s),
                el = "set" + (this.$u ? "UTC" : ""),
                ec = (((ei = {}).day = el + "Date"),
                (ei[ea] = el + "Date"),
                (ei[er] = el + "Month"),
                (ei[eo] = el + "FullYear"),
                (ei[ee] = el + "Hours"),
                (ei[X] = el + "Minutes"),
                (ei[W] = el + "Seconds"),
                (ei[x] = el + "Milliseconds"),
                ei)[es],
                eu = "day" === es ? this.$D + (et - this.$W) : et;
              if (es === er || es === eo) {
                var ed = this.clone().set(ea, 1);
                ed.$d[ec](eu),
                  ed.init(),
                  (this.$d = ed.set(
                    ea,
                    Math.min(this.$D, ed.daysInMonth())
                  ).$d);
              } else ec && this.$d[ec](eu);
              return this.init(), this;
            }),
            (s.set = function (s, x) {
              return this.clone().$set(s, x);
            }),
            (s.get = function (s) {
              return this[ew.p(s)]();
            }),
            (s.add = function (s, x) {
              var ei,
                ea = this;
              s = Number(s);
              var es = ew.p(x),
                y = function (x) {
                  var W = em(ea);
                  return ew.w(W.date(W.date() + Math.round(x * s)), ea);
                };
              if (es === er) return this.set(er, this.$M + s);
              if (es === eo) return this.set(eo, this.$y + s);
              if ("day" === es) return y(1);
              if (es === et) return y(7);
              var el =
                  (((ei = {})[X] = 6e4), (ei[ee] = 36e5), (ei[W] = 1e3), ei)[
                    es
                  ] || 1,
                ec = this.$d.getTime() + s * el;
              return ew.w(ec, this);
            }),
            (s.subtract = function (s, x) {
              return this.add(-1 * s, x);
            }),
            (s.format = function (s) {
              var x = this,
                W = this.$locale();
              if (!this.isValid()) return W.invalidDate || es;
              var X = s || "YYYY-MM-DDTHH:mm:ssZ",
                ee = ew.z(this),
                et = this.$H,
                er = this.$m,
                ei = this.$M,
                eo = W.weekdays,
                ea = W.months,
                el = W.meridiem,
                h = function (s, W, ee, et) {
                  return (s && (s[W] || s(x, X))) || ee[W].slice(0, et);
                },
                d = function (s) {
                  return ew.s(et % 12 || 12, s, "0");
                },
                eu =
                  el ||
                  function (s, x, W) {
                    var X = s < 12 ? "AM" : "PM";
                    return W ? X.toLowerCase() : X;
                  };
              return X.replace(ec, function (s, X) {
                return (
                  X ||
                  (function (s) {
                    switch (s) {
                      case "YY":
                        return String(x.$y).slice(-2);
                      case "YYYY":
                        return ew.s(x.$y, 4, "0");
                      case "M":
                        return ei + 1;
                      case "MM":
                        return ew.s(ei + 1, 2, "0");
                      case "MMM":
                        return h(W.monthsShort, ei, ea, 3);
                      case "MMMM":
                        return h(ea, ei);
                      case "D":
                        return x.$D;
                      case "DD":
                        return ew.s(x.$D, 2, "0");
                      case "d":
                        return String(x.$W);
                      case "dd":
                        return h(W.weekdaysMin, x.$W, eo, 2);
                      case "ddd":
                        return h(W.weekdaysShort, x.$W, eo, 3);
                      case "dddd":
                        return eo[x.$W];
                      case "H":
                        return String(et);
                      case "HH":
                        return ew.s(et, 2, "0");
                      case "h":
                        return d(1);
                      case "hh":
                        return d(2);
                      case "a":
                        return eu(et, er, !0);
                      case "A":
                        return eu(et, er, !1);
                      case "m":
                        return String(er);
                      case "mm":
                        return ew.s(er, 2, "0");
                      case "s":
                        return String(x.$s);
                      case "ss":
                        return ew.s(x.$s, 2, "0");
                      case "SSS":
                        return ew.s(x.$ms, 3, "0");
                      case "Z":
                        return ee;
                    }
                    return null;
                  })(s) ||
                  ee.replace(":", "")
                );
              });
            }),
            (s.utcOffset = function () {
              return -(15 * Math.round(this.$d.getTimezoneOffset() / 15));
            }),
            (s.diff = function (s, x, ea) {
              var es,
                el = this,
                ec = ew.p(x),
                eu = em(s),
                ed = (eu.utcOffset() - this.utcOffset()) * 6e4,
                eh = this - eu,
                D = function () {
                  return ew.m(el, eu);
                };
              switch (ec) {
                case eo:
                  es = D() / 12;
                  break;
                case er:
                  es = D();
                  break;
                case ei:
                  es = D() / 3;
                  break;
                case et:
                  es = (eh - ed) / 6048e5;
                  break;
                case "day":
                  es = (eh - ed) / 864e5;
                  break;
                case ee:
                  es = eh / 36e5;
                  break;
                case X:
                  es = eh / 6e4;
                  break;
                case W:
                  es = eh / 1e3;
                  break;
                default:
                  es = eh;
              }
              return ea ? es : ew.a(es);
            }),
            (s.daysInMonth = function () {
              return this.endOf(er).$D;
            }),
            (s.$locale = function () {
              return eh[this.$L];
            }),
            (s.locale = function (s, x) {
              if (!s) return this.$L;
              var W = this.clone(),
                X = eg(s, x, !0);
              return X && (W.$L = X), W;
            }),
            (s.clone = function () {
              return ew.w(this.$d, this);
            }),
            (s.toDate = function () {
              return new Date(this.valueOf());
            }),
            (s.toJSON = function () {
              return this.isValid() ? this.toISOString() : null;
            }),
            (s.toISOString = function () {
              return this.$d.toISOString();
            }),
            (s.toString = function () {
              return this.$d.toUTCString();
            }),
            M
          );
        })()).prototype),
        (em.prototype = ev),
        [
          ["$ms", x],
          ["$s", W],
          ["$m", X],
          ["$H", ee],
          ["$W", "day"],
          ["$M", er],
          ["$y", eo],
          ["$D", ea],
        ].forEach(function (s) {
          ev[s[1]] = function (x) {
            return this.$g(x, s[0], s[1]);
          };
        }),
        (em.extend = function (s, x) {
          return s.$i || (s(x, eb, em), (s.$i = !0)), em;
        }),
        (em.locale = eg),
        (em.isDayjs = ef),
        (em.unix = function (s) {
          return em(1e3 * s);
        }),
        (em.en = eh[ed]),
        (em.Ls = eh),
        (em.p = {}),
        em);
    },
    25054: function (s) {
      s.exports = {
        name: "en",
        weekdays:
          "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        months:
          "January_February_March_April_May_June_July_August_September_October_November_December".split(
            "_"
          ),
        ordinal: function (s) {
          var x = ["th", "st", "nd", "rd"],
            W = s % 100;
          return "[" + s + (x[(W - 20) % 10] || x[W] || "th") + "]";
        },
      };
    },
    84110: function (s) {
      s.exports = function (s, x, W) {
        s = s || {};
        var X = x.prototype,
          ee = {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years",
          };
        function i(s, x, W, ee) {
          return X.fromToBase(s, x, W, ee);
        }
        (W.en.relativeTime = ee),
          (X.fromToBase = function (x, X, et, er, ei) {
            for (
              var eo,
                ea,
                es,
                el = et.$locale().relativeTime || ee,
                ec = s.thresholds || [
                  { l: "s", r: 44, d: "second" },
                  { l: "m", r: 89 },
                  { l: "mm", r: 44, d: "minute" },
                  { l: "h", r: 89 },
                  { l: "hh", r: 21, d: "hour" },
                  { l: "d", r: 35 },
                  { l: "dd", r: 25, d: "day" },
                  { l: "M", r: 45 },
                  { l: "MM", r: 10, d: "month" },
                  { l: "y", r: 17 },
                  { l: "yy", d: "year" },
                ],
                eu = ec.length,
                ed = 0;
              ed < eu;
              ed += 1
            ) {
              var eh = ec[ed];
              eh.d &&
                (eo = er ? W(x).diff(et, eh.d, !0) : et.diff(x, eh.d, !0));
              var ep = (s.rounding || Math.round)(Math.abs(eo));
              if (((es = eo > 0), ep <= eh.r || !eh.r)) {
                ep <= 1 && ed > 0 && (eh = ec[ed - 1]);
                var ef = el[eh.l];
                ei && (ep = ei("" + ep)),
                  (ea =
                    "string" == typeof ef
                      ? ef.replace("%d", ep)
                      : ef(ep, X, eh.l, es));
                break;
              }
            }
            if (X) return ea;
            var eg = es ? el.future : el.past;
            return "function" == typeof eg ? eg(ea) : eg.replace("%s", ea);
          }),
          (X.to = function (s, x) {
            return i(s, x, this, !0);
          }),
          (X.from = function (s, x) {
            return i(s, x, this);
          });
        var d = function (s) {
          return s.$u ? W.utc() : W();
        };
        (X.toNow = function (s) {
          return this.to(d(this), s);
        }),
          (X.fromNow = function (s) {
            return this.from(d(this), s);
          });
      };
    },
    70660: function (s) {
      s.exports = function (s, x, W) {
        W.updateLocale = function (s, x) {
          var X = W.Ls[s];
          if (X)
            return (
              (x ? Object.keys(x) : []).forEach(function (s) {
                X[s] = x[s];
              }),
              X
            );
        };
      };
    },
    65987: function (s) {
      "use strict";
      var x = {
        single_source_shortest_paths: function (s, W, X) {
          var ee,
            et,
            er,
            ei,
            eo,
            ea,
            es,
            el = {},
            ec = {};
          ec[W] = 0;
          var eu = x.PriorityQueue.make();
          for (eu.push(W, 0); !eu.empty(); )
            for (er in ((et = (ee = eu.pop()).value),
            (ei = ee.cost),
            (eo = s[et] || {})))
              eo.hasOwnProperty(er) &&
                ((ea = ei + eo[er]),
                (es = ec[er]),
                (void 0 === ec[er] || es > ea) &&
                  ((ec[er] = ea), eu.push(er, ea), (el[er] = et)));
          if (void 0 !== X && void 0 === ec[X])
            throw Error(
              ["Could not find a path from ", W, " to ", X, "."].join("")
            );
          return el;
        },
        extract_shortest_path_from_predecessor_list: function (s, x) {
          for (var W = [], X = x; X; ) W.push(X), s[X], (X = s[X]);
          return W.reverse(), W;
        },
        find_path: function (s, W, X) {
          var ee = x.single_source_shortest_paths(s, W, X);
          return x.extract_shortest_path_from_predecessor_list(ee, X);
        },
        PriorityQueue: {
          make: function (s) {
            var W,
              X = x.PriorityQueue,
              ee = {};
            for (W in ((s = s || {}), X)) X.hasOwnProperty(W) && (ee[W] = X[W]);
            return (
              (ee.queue = []), (ee.sorter = s.sorter || X.default_sorter), ee
            );
          },
          default_sorter: function (s, x) {
            return s.cost - x.cost;
          },
          push: function (s, x) {
            this.queue.push({ value: s, cost: x }),
              this.queue.sort(this.sorter);
          },
          pop: function () {
            return this.queue.shift();
          },
          empty: function () {
            return 0 === this.queue.length;
          },
        },
      };
      s.exports = x;
    },
    86266: function (s, x, W) {
      "use strict";
      (x.version = W(18597).i8),
        (x.utils = W(80953)),
        (x.rand = W(29931)),
        (x.curve = W(88254)),
        (x.curves = W(45427)),
        (x.ec = W(57954)),
        (x.eddsa = W(65980));
    },
    4918: function (s, x, W) {
      "use strict";
      var X = W(73785),
        ee = W(80953),
        et = ee.getNAF,
        er = ee.getJSF,
        ei = ee.assert;
      function BaseCurve(s, x) {
        (this.type = s),
          (this.p = new X(x.p, 16)),
          (this.red = x.prime ? X.red(x.prime) : X.mont(this.p)),
          (this.zero = new X(0).toRed(this.red)),
          (this.one = new X(1).toRed(this.red)),
          (this.two = new X(2).toRed(this.red)),
          (this.n = x.n && new X(x.n, 16)),
          (this.g = x.g && this.pointFromJSON(x.g, x.gRed)),
          (this._wnafT1 = [, , , ,]),
          (this._wnafT2 = [, , , ,]),
          (this._wnafT3 = [, , , ,]),
          (this._wnafT4 = [, , , ,]),
          (this._bitLength = this.n ? this.n.bitLength() : 0);
        var W = this.n && this.p.div(this.n);
        !W || W.cmpn(100) > 0
          ? (this.redN = null)
          : ((this._maxwellTrick = !0), (this.redN = this.n.toRed(this.red)));
      }
      function BasePoint(s, x) {
        (this.curve = s), (this.type = x), (this.precomputed = null);
      }
      (s.exports = BaseCurve),
        (BaseCurve.prototype.point = function () {
          throw Error("Not implemented");
        }),
        (BaseCurve.prototype.validate = function () {
          throw Error("Not implemented");
        }),
        (BaseCurve.prototype._fixedNafMul = function (s, x) {
          ei(s.precomputed);
          var W,
            X,
            ee = s._getDoubles(),
            er = et(x, 1, this._bitLength),
            eo = (1 << (ee.step + 1)) - (ee.step % 2 == 0 ? 2 : 1);
          eo /= 3;
          var ea = [];
          for (W = 0; W < er.length; W += ee.step) {
            X = 0;
            for (var es = W + ee.step - 1; es >= W; es--) X = (X << 1) + er[es];
            ea.push(X);
          }
          for (
            var el = this.jpoint(null, null, null),
              ec = this.jpoint(null, null, null),
              eu = eo;
            eu > 0;
            eu--
          ) {
            for (W = 0; W < ea.length; W++)
              (X = ea[W]) === eu
                ? (ec = ec.mixedAdd(ee.points[W]))
                : X === -eu && (ec = ec.mixedAdd(ee.points[W].neg()));
            el = el.add(ec);
          }
          return el.toP();
        }),
        (BaseCurve.prototype._wnafMul = function (s, x) {
          var W = 4,
            X = s._getNAFPoints(W);
          W = X.wnd;
          for (
            var ee = X.points,
              er = et(x, W, this._bitLength),
              eo = this.jpoint(null, null, null),
              ea = er.length - 1;
            ea >= 0;
            ea--
          ) {
            for (var es = 0; ea >= 0 && 0 === er[ea]; ea--) es++;
            if ((ea >= 0 && es++, (eo = eo.dblp(es)), ea < 0)) break;
            var el = er[ea];
            ei(0 !== el),
              (eo =
                "affine" === s.type
                  ? el > 0
                    ? eo.mixedAdd(ee[(el - 1) >> 1])
                    : eo.mixedAdd(ee[(-el - 1) >> 1].neg())
                  : el > 0
                  ? eo.add(ee[(el - 1) >> 1])
                  : eo.add(ee[(-el - 1) >> 1].neg()));
          }
          return "affine" === s.type ? eo.toP() : eo;
        }),
        (BaseCurve.prototype._wnafMulAdd = function (s, x, W, X, ee) {
          var ei,
            eo,
            ea,
            es = this._wnafT1,
            el = this._wnafT2,
            ec = this._wnafT3,
            eu = 0;
          for (ei = 0; ei < X; ei++) {
            var ed = (ea = x[ei])._getNAFPoints(s);
            (es[ei] = ed.wnd), (el[ei] = ed.points);
          }
          for (ei = X - 1; ei >= 1; ei -= 2) {
            var eh = ei - 1,
              ep = ei;
            if (1 !== es[eh] || 1 !== es[ep]) {
              (ec[eh] = et(W[eh], es[eh], this._bitLength)),
                (ec[ep] = et(W[ep], es[ep], this._bitLength)),
                (eu = Math.max(ec[eh].length, eu)),
                (eu = Math.max(ec[ep].length, eu));
              continue;
            }
            var ef = [x[eh], null, null, x[ep]];
            0 === x[eh].y.cmp(x[ep].y)
              ? ((ef[1] = x[eh].add(x[ep])),
                (ef[2] = x[eh].toJ().mixedAdd(x[ep].neg())))
              : 0 === x[eh].y.cmp(x[ep].y.redNeg())
              ? ((ef[1] = x[eh].toJ().mixedAdd(x[ep])),
                (ef[2] = x[eh].add(x[ep].neg())))
              : ((ef[1] = x[eh].toJ().mixedAdd(x[ep])),
                (ef[2] = x[eh].toJ().mixedAdd(x[ep].neg())));
            var eg = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
              em = er(W[eh], W[ep]);
            for (
              eo = 0,
                eu = Math.max(em[0].length, eu),
                ec[eh] = Array(eu),
                ec[ep] = Array(eu);
              eo < eu;
              eo++
            ) {
              var ew = 0 | em[0][eo],
                eb = 0 | em[1][eo];
              (ec[eh][eo] = eg[(ew + 1) * 3 + (eb + 1)]),
                (ec[ep][eo] = 0),
                (el[eh] = ef);
            }
          }
          var ev = this.jpoint(null, null, null),
            ey = this._wnafT4;
          for (ei = eu; ei >= 0; ei--) {
            for (var e_ = 0; ei >= 0; ) {
              var eC = !0;
              for (eo = 0; eo < X; eo++)
                (ey[eo] = 0 | ec[eo][ei]), 0 !== ey[eo] && (eC = !1);
              if (!eC) break;
              e_++, ei--;
            }
            if ((ei >= 0 && e_++, (ev = ev.dblp(e_)), ei < 0)) break;
            for (eo = 0; eo < X; eo++) {
              var ex = ey[eo];
              0 !== ex &&
                (ex > 0
                  ? (ea = el[eo][(ex - 1) >> 1])
                  : ex < 0 && (ea = el[eo][(-ex - 1) >> 1].neg()),
                (ev = "affine" === ea.type ? ev.mixedAdd(ea) : ev.add(ea)));
            }
          }
          for (ei = 0; ei < X; ei++) el[ei] = null;
          return ee ? ev : ev.toP();
        }),
        (BaseCurve.BasePoint = BasePoint),
        (BasePoint.prototype.eq = function () {
          throw Error("Not implemented");
        }),
        (BasePoint.prototype.validate = function () {
          return this.curve.validate(this);
        }),
        (BaseCurve.prototype.decodePoint = function (s, x) {
          s = ee.toArray(s, x);
          var W = this.p.byteLength();
          if ((4 === s[0] || 6 === s[0] || 7 === s[0]) && s.length - 1 == 2 * W)
            return (
              6 === s[0]
                ? ei(s[s.length - 1] % 2 == 0)
                : 7 === s[0] && ei(s[s.length - 1] % 2 == 1),
              this.point(s.slice(1, 1 + W), s.slice(1 + W, 1 + 2 * W))
            );
          if ((2 === s[0] || 3 === s[0]) && s.length - 1 === W)
            return this.pointFromX(s.slice(1, 1 + W), 3 === s[0]);
          throw Error("Unknown point format");
        }),
        (BasePoint.prototype.encodeCompressed = function (s) {
          return this.encode(s, !0);
        }),
        (BasePoint.prototype._encode = function (s) {
          var x = this.curve.p.byteLength(),
            W = this.getX().toArray("be", x);
          return s
            ? [this.getY().isEven() ? 2 : 3].concat(W)
            : [4].concat(W, this.getY().toArray("be", x));
        }),
        (BasePoint.prototype.encode = function (s, x) {
          return ee.encode(this._encode(x), s);
        }),
        (BasePoint.prototype.precompute = function (s) {
          if (this.precomputed) return this;
          var x = { doubles: null, naf: null, beta: null };
          return (
            (x.naf = this._getNAFPoints(8)),
            (x.doubles = this._getDoubles(4, s)),
            (x.beta = this._getBeta()),
            (this.precomputed = x),
            this
          );
        }),
        (BasePoint.prototype._hasDoubles = function (s) {
          if (!this.precomputed) return !1;
          var x = this.precomputed.doubles;
          return (
            !!x && x.points.length >= Math.ceil((s.bitLength() + 1) / x.step)
          );
        }),
        (BasePoint.prototype._getDoubles = function (s, x) {
          if (this.precomputed && this.precomputed.doubles)
            return this.precomputed.doubles;
          for (var W = [this], X = this, ee = 0; ee < x; ee += s) {
            for (var et = 0; et < s; et++) X = X.dbl();
            W.push(X);
          }
          return { step: s, points: W };
        }),
        (BasePoint.prototype._getNAFPoints = function (s) {
          if (this.precomputed && this.precomputed.naf)
            return this.precomputed.naf;
          for (
            var x = [this],
              W = (1 << s) - 1,
              X = 1 === W ? null : this.dbl(),
              ee = 1;
            ee < W;
            ee++
          )
            x[ee] = x[ee - 1].add(X);
          return { wnd: s, points: x };
        }),
        (BasePoint.prototype._getBeta = function () {
          return null;
        }),
        (BasePoint.prototype.dblp = function (s) {
          for (var x = this, W = 0; W < s; W++) x = x.dbl();
          return x;
        });
    },
    31138: function (s, x, W) {
      "use strict";
      var X = W(80953),
        ee = W(73785),
        et = W(35717),
        er = W(4918),
        ei = X.assert;
      function EdwardsCurve(s) {
        (this.twisted = (0 | s.a) != 1),
          (this.mOneA = this.twisted && (0 | s.a) == -1),
          (this.extended = this.mOneA),
          er.call(this, "edwards", s),
          (this.a = new ee(s.a, 16).umod(this.red.m)),
          (this.a = this.a.toRed(this.red)),
          (this.c = new ee(s.c, 16).toRed(this.red)),
          (this.c2 = this.c.redSqr()),
          (this.d = new ee(s.d, 16).toRed(this.red)),
          (this.dd = this.d.redAdd(this.d)),
          ei(!this.twisted || 0 === this.c.fromRed().cmpn(1)),
          (this.oneC = (0 | s.c) == 1);
      }
      function Point(s, x, W, X, et) {
        er.BasePoint.call(this, s, "projective"),
          null === x && null === W && null === X
            ? ((this.x = this.curve.zero),
              (this.y = this.curve.one),
              (this.z = this.curve.one),
              (this.t = this.curve.zero),
              (this.zOne = !0))
            : ((this.x = new ee(x, 16)),
              (this.y = new ee(W, 16)),
              (this.z = X ? new ee(X, 16) : this.curve.one),
              (this.t = et && new ee(et, 16)),
              this.x.red || (this.x = this.x.toRed(this.curve.red)),
              this.y.red || (this.y = this.y.toRed(this.curve.red)),
              this.z.red || (this.z = this.z.toRed(this.curve.red)),
              this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)),
              (this.zOne = this.z === this.curve.one),
              !this.curve.extended ||
                this.t ||
                ((this.t = this.x.redMul(this.y)),
                this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
      }
      et(EdwardsCurve, er),
        (s.exports = EdwardsCurve),
        (EdwardsCurve.prototype._mulA = function (s) {
          return this.mOneA ? s.redNeg() : this.a.redMul(s);
        }),
        (EdwardsCurve.prototype._mulC = function (s) {
          return this.oneC ? s : this.c.redMul(s);
        }),
        (EdwardsCurve.prototype.jpoint = function (s, x, W, X) {
          return this.point(s, x, W, X);
        }),
        (EdwardsCurve.prototype.pointFromX = function (s, x) {
          (s = new ee(s, 16)).red || (s = s.toRed(this.red));
          var W = s.redSqr(),
            X = this.c2.redSub(this.a.redMul(W)),
            et = this.one.redSub(this.c2.redMul(this.d).redMul(W)),
            er = X.redMul(et.redInvm()),
            ei = er.redSqrt();
          if (0 !== ei.redSqr().redSub(er).cmp(this.zero))
            throw Error("invalid point");
          var eo = ei.fromRed().isOdd();
          return (
            ((x && !eo) || (!x && eo)) && (ei = ei.redNeg()), this.point(s, ei)
          );
        }),
        (EdwardsCurve.prototype.pointFromY = function (s, x) {
          (s = new ee(s, 16)).red || (s = s.toRed(this.red));
          var W = s.redSqr(),
            X = W.redSub(this.c2),
            et = W.redMul(this.d).redMul(this.c2).redSub(this.a),
            er = X.redMul(et.redInvm());
          if (0 === er.cmp(this.zero)) {
            if (!x) return this.point(this.zero, s);
            throw Error("invalid point");
          }
          var ei = er.redSqrt();
          if (0 !== ei.redSqr().redSub(er).cmp(this.zero))
            throw Error("invalid point");
          return (
            ei.fromRed().isOdd() !== x && (ei = ei.redNeg()), this.point(ei, s)
          );
        }),
        (EdwardsCurve.prototype.validate = function (s) {
          if (s.isInfinity()) return !0;
          s.normalize();
          var x = s.x.redSqr(),
            W = s.y.redSqr(),
            X = x.redMul(this.a).redAdd(W),
            ee = this.c2.redMul(this.one.redAdd(this.d.redMul(x).redMul(W)));
          return 0 === X.cmp(ee);
        }),
        et(Point, er.BasePoint),
        (EdwardsCurve.prototype.pointFromJSON = function (s) {
          return Point.fromJSON(this, s);
        }),
        (EdwardsCurve.prototype.point = function (s, x, W, X) {
          return new Point(this, s, x, W, X);
        }),
        (Point.fromJSON = function (s, x) {
          return new Point(s, x[0], x[1], x[2]);
        }),
        (Point.prototype.inspect = function () {
          return this.isInfinity()
            ? "<EC Point Infinity>"
            : "<EC Point x: " +
                this.x.fromRed().toString(16, 2) +
                " y: " +
                this.y.fromRed().toString(16, 2) +
                " z: " +
                this.z.fromRed().toString(16, 2) +
                ">";
        }),
        (Point.prototype.isInfinity = function () {
          return (
            0 === this.x.cmpn(0) &&
            (0 === this.y.cmp(this.z) ||
              (this.zOne && 0 === this.y.cmp(this.curve.c)))
          );
        }),
        (Point.prototype._extDbl = function () {
          var s = this.x.redSqr(),
            x = this.y.redSqr(),
            W = this.z.redSqr();
          W = W.redIAdd(W);
          var X = this.curve._mulA(s),
            ee = this.x.redAdd(this.y).redSqr().redISub(s).redISub(x),
            et = X.redAdd(x),
            er = et.redSub(W),
            ei = X.redSub(x),
            eo = ee.redMul(er),
            ea = et.redMul(ei),
            es = ee.redMul(ei),
            el = er.redMul(et);
          return this.curve.point(eo, ea, el, es);
        }),
        (Point.prototype._projDbl = function () {
          var s,
            x,
            W,
            X,
            ee,
            et,
            er = this.x.redAdd(this.y).redSqr(),
            ei = this.x.redSqr(),
            eo = this.y.redSqr();
          if (this.curve.twisted) {
            var ea = (X = this.curve._mulA(ei)).redAdd(eo);
            this.zOne
              ? ((s = er
                  .redSub(ei)
                  .redSub(eo)
                  .redMul(ea.redSub(this.curve.two))),
                (x = ea.redMul(X.redSub(eo))),
                (W = ea.redSqr().redSub(ea).redSub(ea)))
              : ((ee = this.z.redSqr()),
                (et = ea.redSub(ee).redISub(ee)),
                (s = er.redSub(ei).redISub(eo).redMul(et)),
                (x = ea.redMul(X.redSub(eo))),
                (W = ea.redMul(et)));
          } else
            (X = ei.redAdd(eo)),
              (ee = this.curve._mulC(this.z).redSqr()),
              (et = X.redSub(ee).redSub(ee)),
              (s = this.curve._mulC(er.redISub(X)).redMul(et)),
              (x = this.curve._mulC(X).redMul(ei.redISub(eo))),
              (W = X.redMul(et));
          return this.curve.point(s, x, W);
        }),
        (Point.prototype.dbl = function () {
          return this.isInfinity()
            ? this
            : this.curve.extended
            ? this._extDbl()
            : this._projDbl();
        }),
        (Point.prototype._extAdd = function (s) {
          var x = this.y.redSub(this.x).redMul(s.y.redSub(s.x)),
            W = this.y.redAdd(this.x).redMul(s.y.redAdd(s.x)),
            X = this.t.redMul(this.curve.dd).redMul(s.t),
            ee = this.z.redMul(s.z.redAdd(s.z)),
            et = W.redSub(x),
            er = ee.redSub(X),
            ei = ee.redAdd(X),
            eo = W.redAdd(x),
            ea = et.redMul(er),
            es = ei.redMul(eo),
            el = et.redMul(eo),
            ec = er.redMul(ei);
          return this.curve.point(ea, es, ec, el);
        }),
        (Point.prototype._projAdd = function (s) {
          var x,
            W,
            X = this.z.redMul(s.z),
            ee = X.redSqr(),
            et = this.x.redMul(s.x),
            er = this.y.redMul(s.y),
            ei = this.curve.d.redMul(et).redMul(er),
            eo = ee.redSub(ei),
            ea = ee.redAdd(ei),
            es = this.x
              .redAdd(this.y)
              .redMul(s.x.redAdd(s.y))
              .redISub(et)
              .redISub(er),
            el = X.redMul(eo).redMul(es);
          return (
            this.curve.twisted
              ? ((x = X.redMul(ea).redMul(er.redSub(this.curve._mulA(et)))),
                (W = eo.redMul(ea)))
              : ((x = X.redMul(ea).redMul(er.redSub(et))),
                (W = this.curve._mulC(eo).redMul(ea))),
            this.curve.point(el, x, W)
          );
        }),
        (Point.prototype.add = function (s) {
          return this.isInfinity()
            ? s
            : s.isInfinity()
            ? this
            : this.curve.extended
            ? this._extAdd(s)
            : this._projAdd(s);
        }),
        (Point.prototype.mul = function (s) {
          return this._hasDoubles(s)
            ? this.curve._fixedNafMul(this, s)
            : this.curve._wnafMul(this, s);
        }),
        (Point.prototype.mulAdd = function (s, x, W) {
          return this.curve._wnafMulAdd(1, [this, x], [s, W], 2, !1);
        }),
        (Point.prototype.jmulAdd = function (s, x, W) {
          return this.curve._wnafMulAdd(1, [this, x], [s, W], 2, !0);
        }),
        (Point.prototype.normalize = function () {
          if (this.zOne) return this;
          var s = this.z.redInvm();
          return (
            (this.x = this.x.redMul(s)),
            (this.y = this.y.redMul(s)),
            this.t && (this.t = this.t.redMul(s)),
            (this.z = this.curve.one),
            (this.zOne = !0),
            this
          );
        }),
        (Point.prototype.neg = function () {
          return this.curve.point(
            this.x.redNeg(),
            this.y,
            this.z,
            this.t && this.t.redNeg()
          );
        }),
        (Point.prototype.getX = function () {
          return this.normalize(), this.x.fromRed();
        }),
        (Point.prototype.getY = function () {
          return this.normalize(), this.y.fromRed();
        }),
        (Point.prototype.eq = function (s) {
          return (
            this === s ||
            (0 === this.getX().cmp(s.getX()) && 0 === this.getY().cmp(s.getY()))
          );
        }),
        (Point.prototype.eqXToP = function (s) {
          var x = s.toRed(this.curve.red).redMul(this.z);
          if (0 === this.x.cmp(x)) return !0;
          for (var W = s.clone(), X = this.curve.redN.redMul(this.z); ; ) {
            if ((W.iadd(this.curve.n), W.cmp(this.curve.p) >= 0)) return !1;
            if ((x.redIAdd(X), 0 === this.x.cmp(x))) return !0;
          }
        }),
        (Point.prototype.toP = Point.prototype.normalize),
        (Point.prototype.mixedAdd = Point.prototype.add);
    },
    88254: function (s, x, W) {
      "use strict";
      (x.base = W(4918)),
        (x.short = W(6673)),
        (x.mont = W(22881)),
        (x.edwards = W(31138));
    },
    22881: function (s, x, W) {
      "use strict";
      var X = W(73785),
        ee = W(35717),
        et = W(4918),
        er = W(80953);
      function MontCurve(s) {
        et.call(this, "mont", s),
          (this.a = new X(s.a, 16).toRed(this.red)),
          (this.b = new X(s.b, 16).toRed(this.red)),
          (this.i4 = new X(4).toRed(this.red).redInvm()),
          (this.two = new X(2).toRed(this.red)),
          (this.a24 = this.i4.redMul(this.a.redAdd(this.two)));
      }
      function Point(s, x, W) {
        et.BasePoint.call(this, s, "projective"),
          null === x && null === W
            ? ((this.x = this.curve.one), (this.z = this.curve.zero))
            : ((this.x = new X(x, 16)),
              (this.z = new X(W, 16)),
              this.x.red || (this.x = this.x.toRed(this.curve.red)),
              this.z.red || (this.z = this.z.toRed(this.curve.red)));
      }
      ee(MontCurve, et),
        (s.exports = MontCurve),
        (MontCurve.prototype.validate = function (s) {
          var x = s.normalize().x,
            W = x.redSqr(),
            X = W.redMul(x).redAdd(W.redMul(this.a)).redAdd(x);
          return 0 === X.redSqrt().redSqr().cmp(X);
        }),
        ee(Point, et.BasePoint),
        (MontCurve.prototype.decodePoint = function (s, x) {
          return this.point(er.toArray(s, x), 1);
        }),
        (MontCurve.prototype.point = function (s, x) {
          return new Point(this, s, x);
        }),
        (MontCurve.prototype.pointFromJSON = function (s) {
          return Point.fromJSON(this, s);
        }),
        (Point.prototype.precompute = function () {}),
        (Point.prototype._encode = function () {
          return this.getX().toArray("be", this.curve.p.byteLength());
        }),
        (Point.fromJSON = function (s, x) {
          return new Point(s, x[0], x[1] || s.one);
        }),
        (Point.prototype.inspect = function () {
          return this.isInfinity()
            ? "<EC Point Infinity>"
            : "<EC Point x: " +
                this.x.fromRed().toString(16, 2) +
                " z: " +
                this.z.fromRed().toString(16, 2) +
                ">";
        }),
        (Point.prototype.isInfinity = function () {
          return 0 === this.z.cmpn(0);
        }),
        (Point.prototype.dbl = function () {
          var s = this.x.redAdd(this.z).redSqr(),
            x = this.x.redSub(this.z).redSqr(),
            W = s.redSub(x),
            X = s.redMul(x),
            ee = W.redMul(x.redAdd(this.curve.a24.redMul(W)));
          return this.curve.point(X, ee);
        }),
        (Point.prototype.add = function () {
          throw Error("Not supported on Montgomery curve");
        }),
        (Point.prototype.diffAdd = function (s, x) {
          var W = this.x.redAdd(this.z),
            X = this.x.redSub(this.z),
            ee = s.x.redAdd(s.z),
            et = s.x.redSub(s.z).redMul(W),
            er = ee.redMul(X),
            ei = x.z.redMul(et.redAdd(er).redSqr()),
            eo = x.x.redMul(et.redISub(er).redSqr());
          return this.curve.point(ei, eo);
        }),
        (Point.prototype.mul = function (s) {
          for (
            var x = s.clone(),
              W = this,
              X = this.curve.point(null, null),
              ee = [];
            0 !== x.cmpn(0);
            x.iushrn(1)
          )
            ee.push(x.andln(1));
          for (var et = ee.length - 1; et >= 0; et--)
            0 === ee[et]
              ? ((W = W.diffAdd(X, this)), (X = X.dbl()))
              : ((X = W.diffAdd(X, this)), (W = W.dbl()));
          return X;
        }),
        (Point.prototype.mulAdd = function () {
          throw Error("Not supported on Montgomery curve");
        }),
        (Point.prototype.jumlAdd = function () {
          throw Error("Not supported on Montgomery curve");
        }),
        (Point.prototype.eq = function (s) {
          return 0 === this.getX().cmp(s.getX());
        }),
        (Point.prototype.normalize = function () {
          return (
            (this.x = this.x.redMul(this.z.redInvm())),
            (this.z = this.curve.one),
            this
          );
        }),
        (Point.prototype.getX = function () {
          return this.normalize(), this.x.fromRed();
        });
    },
    6673: function (s, x, W) {
      "use strict";
      var X = W(80953),
        ee = W(73785),
        et = W(35717),
        er = W(4918),
        ei = X.assert;
      function ShortCurve(s) {
        er.call(this, "short", s),
          (this.a = new ee(s.a, 16).toRed(this.red)),
          (this.b = new ee(s.b, 16).toRed(this.red)),
          (this.tinv = this.two.redInvm()),
          (this.zeroA = 0 === this.a.fromRed().cmpn(0)),
          (this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3)),
          (this.endo = this._getEndomorphism(s)),
          (this._endoWnafT1 = [, , , ,]),
          (this._endoWnafT2 = [, , , ,]);
      }
      function Point(s, x, W, X) {
        er.BasePoint.call(this, s, "affine"),
          null === x && null === W
            ? ((this.x = null), (this.y = null), (this.inf = !0))
            : ((this.x = new ee(x, 16)),
              (this.y = new ee(W, 16)),
              X &&
                (this.x.forceRed(this.curve.red),
                this.y.forceRed(this.curve.red)),
              this.x.red || (this.x = this.x.toRed(this.curve.red)),
              this.y.red || (this.y = this.y.toRed(this.curve.red)),
              (this.inf = !1));
      }
      function JPoint(s, x, W, X) {
        er.BasePoint.call(this, s, "jacobian"),
          null === x && null === W && null === X
            ? ((this.x = this.curve.one),
              (this.y = this.curve.one),
              (this.z = new ee(0)))
            : ((this.x = new ee(x, 16)),
              (this.y = new ee(W, 16)),
              (this.z = new ee(X, 16))),
          this.x.red || (this.x = this.x.toRed(this.curve.red)),
          this.y.red || (this.y = this.y.toRed(this.curve.red)),
          this.z.red || (this.z = this.z.toRed(this.curve.red)),
          (this.zOne = this.z === this.curve.one);
      }
      et(ShortCurve, er),
        (s.exports = ShortCurve),
        (ShortCurve.prototype._getEndomorphism = function (s) {
          if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
            if (s.beta) x = new ee(s.beta, 16).toRed(this.red);
            else {
              var x,
                W,
                X,
                et = this._getEndoRoots(this.p);
              x = (x = 0 > et[0].cmp(et[1]) ? et[0] : et[1]).toRed(this.red);
            }
            if (s.lambda) W = new ee(s.lambda, 16);
            else {
              var er = this._getEndoRoots(this.n);
              0 === this.g.mul(er[0]).x.cmp(this.g.x.redMul(x))
                ? (W = er[0])
                : ((W = er[1]),
                  ei(0 === this.g.mul(W).x.cmp(this.g.x.redMul(x))));
            }
            return (
              (X = s.basis
                ? s.basis.map(function (s) {
                    return { a: new ee(s.a, 16), b: new ee(s.b, 16) };
                  })
                : this._getEndoBasis(W)),
              { beta: x, lambda: W, basis: X }
            );
          }
        }),
        (ShortCurve.prototype._getEndoRoots = function (s) {
          var x = s === this.p ? this.red : ee.mont(s),
            W = new ee(2).toRed(x).redInvm(),
            X = W.redNeg(),
            et = new ee(3).toRed(x).redNeg().redSqrt().redMul(W);
          return [X.redAdd(et).fromRed(), X.redSub(et).fromRed()];
        }),
        (ShortCurve.prototype._getEndoBasis = function (s) {
          for (
            var x,
              W,
              X,
              et,
              er,
              ei,
              eo,
              ea,
              es,
              el = this.n.ushrn(Math.floor(this.n.bitLength() / 2)),
              ec = s,
              eu = this.n.clone(),
              ed = new ee(1),
              eh = new ee(0),
              ep = new ee(0),
              ef = new ee(1),
              eg = 0;
            0 !== ec.cmpn(0);

          ) {
            var em = eu.div(ec);
            (ea = eu.sub(em.mul(ec))), (es = ep.sub(em.mul(ed)));
            var ew = ef.sub(em.mul(eh));
            if (!X && 0 > ea.cmp(el))
              (x = eo.neg()), (W = ed), (X = ea.neg()), (et = es);
            else if (X && 2 == ++eg) break;
            (eo = ea),
              (eu = ec),
              (ec = ea),
              (ep = ed),
              (ed = es),
              (ef = eh),
              (eh = ew);
          }
          (er = ea.neg()), (ei = es);
          var eb = X.sqr().add(et.sqr());
          return (
            er.sqr().add(ei.sqr()).cmp(eb) >= 0 && ((er = x), (ei = W)),
            X.negative && ((X = X.neg()), (et = et.neg())),
            er.negative && ((er = er.neg()), (ei = ei.neg())),
            [
              { a: X, b: et },
              { a: er, b: ei },
            ]
          );
        }),
        (ShortCurve.prototype._endoSplit = function (s) {
          var x = this.endo.basis,
            W = x[0],
            X = x[1],
            ee = X.b.mul(s).divRound(this.n),
            et = W.b.neg().mul(s).divRound(this.n),
            er = ee.mul(W.a),
            ei = et.mul(X.a),
            eo = ee.mul(W.b),
            ea = et.mul(X.b);
          return { k1: s.sub(er).sub(ei), k2: eo.add(ea).neg() };
        }),
        (ShortCurve.prototype.pointFromX = function (s, x) {
          (s = new ee(s, 16)).red || (s = s.toRed(this.red));
          var W = s
              .redSqr()
              .redMul(s)
              .redIAdd(s.redMul(this.a))
              .redIAdd(this.b),
            X = W.redSqrt();
          if (0 !== X.redSqr().redSub(W).cmp(this.zero))
            throw Error("invalid point");
          var et = X.fromRed().isOdd();
          return (
            ((x && !et) || (!x && et)) && (X = X.redNeg()), this.point(s, X)
          );
        }),
        (ShortCurve.prototype.validate = function (s) {
          if (s.inf) return !0;
          var x = s.x,
            W = s.y,
            X = this.a.redMul(x),
            ee = x.redSqr().redMul(x).redIAdd(X).redIAdd(this.b);
          return 0 === W.redSqr().redISub(ee).cmpn(0);
        }),
        (ShortCurve.prototype._endoWnafMulAdd = function (s, x, W) {
          for (
            var X = this._endoWnafT1, ee = this._endoWnafT2, et = 0;
            et < s.length;
            et++
          ) {
            var er = this._endoSplit(x[et]),
              ei = s[et],
              eo = ei._getBeta();
            er.k1.negative && (er.k1.ineg(), (ei = ei.neg(!0))),
              er.k2.negative && (er.k2.ineg(), (eo = eo.neg(!0))),
              (X[2 * et] = ei),
              (X[2 * et + 1] = eo),
              (ee[2 * et] = er.k1),
              (ee[2 * et + 1] = er.k2);
          }
          for (
            var ea = this._wnafMulAdd(1, X, ee, 2 * et, W), es = 0;
            es < 2 * et;
            es++
          )
            (X[es] = null), (ee[es] = null);
          return ea;
        }),
        et(Point, er.BasePoint),
        (ShortCurve.prototype.point = function (s, x, W) {
          return new Point(this, s, x, W);
        }),
        (ShortCurve.prototype.pointFromJSON = function (s, x) {
          return Point.fromJSON(this, s, x);
        }),
        (Point.prototype._getBeta = function () {
          if (this.curve.endo) {
            var s = this.precomputed;
            if (s && s.beta) return s.beta;
            var x = this.curve.point(
              this.x.redMul(this.curve.endo.beta),
              this.y
            );
            if (s) {
              var W = this.curve,
                endoMul = function (s) {
                  return W.point(s.x.redMul(W.endo.beta), s.y);
                };
              (s.beta = x),
                (x.precomputed = {
                  beta: null,
                  naf: s.naf && {
                    wnd: s.naf.wnd,
                    points: s.naf.points.map(endoMul),
                  },
                  doubles: s.doubles && {
                    step: s.doubles.step,
                    points: s.doubles.points.map(endoMul),
                  },
                });
            }
            return x;
          }
        }),
        (Point.prototype.toJSON = function () {
          return this.precomputed
            ? [
                this.x,
                this.y,
                this.precomputed && {
                  doubles: this.precomputed.doubles && {
                    step: this.precomputed.doubles.step,
                    points: this.precomputed.doubles.points.slice(1),
                  },
                  naf: this.precomputed.naf && {
                    wnd: this.precomputed.naf.wnd,
                    points: this.precomputed.naf.points.slice(1),
                  },
                },
              ]
            : [this.x, this.y];
        }),
        (Point.fromJSON = function (s, x, W) {
          "string" == typeof x && (x = JSON.parse(x));
          var X = s.point(x[0], x[1], W);
          if (!x[2]) return X;
          function obj2point(x) {
            return s.point(x[0], x[1], W);
          }
          var ee = x[2];
          return (
            (X.precomputed = {
              beta: null,
              doubles: ee.doubles && {
                step: ee.doubles.step,
                points: [X].concat(ee.doubles.points.map(obj2point)),
              },
              naf: ee.naf && {
                wnd: ee.naf.wnd,
                points: [X].concat(ee.naf.points.map(obj2point)),
              },
            }),
            X
          );
        }),
        (Point.prototype.inspect = function () {
          return this.isInfinity()
            ? "<EC Point Infinity>"
            : "<EC Point x: " +
                this.x.fromRed().toString(16, 2) +
                " y: " +
                this.y.fromRed().toString(16, 2) +
                ">";
        }),
        (Point.prototype.isInfinity = function () {
          return this.inf;
        }),
        (Point.prototype.add = function (s) {
          if (this.inf) return s;
          if (s.inf) return this;
          if (this.eq(s)) return this.dbl();
          if (this.neg().eq(s) || 0 === this.x.cmp(s.x))
            return this.curve.point(null, null);
          var x = this.y.redSub(s.y);
          0 !== x.cmpn(0) && (x = x.redMul(this.x.redSub(s.x).redInvm()));
          var W = x.redSqr().redISub(this.x).redISub(s.x),
            X = x.redMul(this.x.redSub(W)).redISub(this.y);
          return this.curve.point(W, X);
        }),
        (Point.prototype.dbl = function () {
          if (this.inf) return this;
          var s = this.y.redAdd(this.y);
          if (0 === s.cmpn(0)) return this.curve.point(null, null);
          var x = this.curve.a,
            W = this.x.redSqr(),
            X = s.redInvm(),
            ee = W.redAdd(W).redIAdd(W).redIAdd(x).redMul(X),
            et = ee.redSqr().redISub(this.x.redAdd(this.x)),
            er = ee.redMul(this.x.redSub(et)).redISub(this.y);
          return this.curve.point(et, er);
        }),
        (Point.prototype.getX = function () {
          return this.x.fromRed();
        }),
        (Point.prototype.getY = function () {
          return this.y.fromRed();
        }),
        (Point.prototype.mul = function (s) {
          return ((s = new ee(s, 16)), this.isInfinity())
            ? this
            : this._hasDoubles(s)
            ? this.curve._fixedNafMul(this, s)
            : this.curve.endo
            ? this.curve._endoWnafMulAdd([this], [s])
            : this.curve._wnafMul(this, s);
        }),
        (Point.prototype.mulAdd = function (s, x, W) {
          var X = [this, x],
            ee = [s, W];
          return this.curve.endo
            ? this.curve._endoWnafMulAdd(X, ee)
            : this.curve._wnafMulAdd(1, X, ee, 2);
        }),
        (Point.prototype.jmulAdd = function (s, x, W) {
          var X = [this, x],
            ee = [s, W];
          return this.curve.endo
            ? this.curve._endoWnafMulAdd(X, ee, !0)
            : this.curve._wnafMulAdd(1, X, ee, 2, !0);
        }),
        (Point.prototype.eq = function (s) {
          return (
            this === s ||
            (this.inf === s.inf &&
              (this.inf || (0 === this.x.cmp(s.x) && 0 === this.y.cmp(s.y))))
          );
        }),
        (Point.prototype.neg = function (s) {
          if (this.inf) return this;
          var x = this.curve.point(this.x, this.y.redNeg());
          if (s && this.precomputed) {
            var W = this.precomputed,
              negate = function (s) {
                return s.neg();
              };
            x.precomputed = {
              naf: W.naf && {
                wnd: W.naf.wnd,
                points: W.naf.points.map(negate),
              },
              doubles: W.doubles && {
                step: W.doubles.step,
                points: W.doubles.points.map(negate),
              },
            };
          }
          return x;
        }),
        (Point.prototype.toJ = function () {
          return this.inf
            ? this.curve.jpoint(null, null, null)
            : this.curve.jpoint(this.x, this.y, this.curve.one);
        }),
        et(JPoint, er.BasePoint),
        (ShortCurve.prototype.jpoint = function (s, x, W) {
          return new JPoint(this, s, x, W);
        }),
        (JPoint.prototype.toP = function () {
          if (this.isInfinity()) return this.curve.point(null, null);
          var s = this.z.redInvm(),
            x = s.redSqr(),
            W = this.x.redMul(x),
            X = this.y.redMul(x).redMul(s);
          return this.curve.point(W, X);
        }),
        (JPoint.prototype.neg = function () {
          return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
        }),
        (JPoint.prototype.add = function (s) {
          if (this.isInfinity()) return s;
          if (s.isInfinity()) return this;
          var x = s.z.redSqr(),
            W = this.z.redSqr(),
            X = this.x.redMul(x),
            ee = s.x.redMul(W),
            et = this.y.redMul(x.redMul(s.z)),
            er = s.y.redMul(W.redMul(this.z)),
            ei = X.redSub(ee),
            eo = et.redSub(er);
          if (0 === ei.cmpn(0))
            return 0 !== eo.cmpn(0)
              ? this.curve.jpoint(null, null, null)
              : this.dbl();
          var ea = ei.redSqr(),
            es = ea.redMul(ei),
            el = X.redMul(ea),
            ec = eo.redSqr().redIAdd(es).redISub(el).redISub(el),
            eu = eo.redMul(el.redISub(ec)).redISub(et.redMul(es)),
            ed = this.z.redMul(s.z).redMul(ei);
          return this.curve.jpoint(ec, eu, ed);
        }),
        (JPoint.prototype.mixedAdd = function (s) {
          if (this.isInfinity()) return s.toJ();
          if (s.isInfinity()) return this;
          var x = this.z.redSqr(),
            W = this.x,
            X = s.x.redMul(x),
            ee = this.y,
            et = s.y.redMul(x).redMul(this.z),
            er = W.redSub(X),
            ei = ee.redSub(et);
          if (0 === er.cmpn(0))
            return 0 !== ei.cmpn(0)
              ? this.curve.jpoint(null, null, null)
              : this.dbl();
          var eo = er.redSqr(),
            ea = eo.redMul(er),
            es = W.redMul(eo),
            el = ei.redSqr().redIAdd(ea).redISub(es).redISub(es),
            ec = ei.redMul(es.redISub(el)).redISub(ee.redMul(ea)),
            eu = this.z.redMul(er);
          return this.curve.jpoint(el, ec, eu);
        }),
        (JPoint.prototype.dblp = function (s) {
          if (0 === s || this.isInfinity()) return this;
          if (!s) return this.dbl();
          if (this.curve.zeroA || this.curve.threeA) {
            var x,
              W = this;
            for (x = 0; x < s; x++) W = W.dbl();
            return W;
          }
          var X = this.curve.a,
            ee = this.curve.tinv,
            et = this.x,
            er = this.y,
            ei = this.z,
            eo = ei.redSqr().redSqr(),
            ea = er.redAdd(er);
          for (x = 0; x < s; x++) {
            var es = et.redSqr(),
              el = ea.redSqr(),
              ec = el.redSqr(),
              eu = es.redAdd(es).redIAdd(es).redIAdd(X.redMul(eo)),
              ed = et.redMul(el),
              eh = eu.redSqr().redISub(ed.redAdd(ed)),
              ep = ed.redISub(eh),
              ef = eu.redMul(ep);
            ef = ef.redIAdd(ef).redISub(ec);
            var eg = ea.redMul(ei);
            x + 1 < s && (eo = eo.redMul(ec)), (et = eh), (ei = eg), (ea = ef);
          }
          return this.curve.jpoint(et, ea.redMul(ee), ei);
        }),
        (JPoint.prototype.dbl = function () {
          return this.isInfinity()
            ? this
            : this.curve.zeroA
            ? this._zeroDbl()
            : this.curve.threeA
            ? this._threeDbl()
            : this._dbl();
        }),
        (JPoint.prototype._zeroDbl = function () {
          if (this.zOne) {
            var s,
              x,
              W,
              X = this.x.redSqr(),
              ee = this.y.redSqr(),
              et = ee.redSqr(),
              er = this.x.redAdd(ee).redSqr().redISub(X).redISub(et);
            er = er.redIAdd(er);
            var ei = X.redAdd(X).redIAdd(X),
              eo = ei.redSqr().redISub(er).redISub(er),
              ea = et.redIAdd(et);
            (ea = (ea = ea.redIAdd(ea)).redIAdd(ea)),
              (s = eo),
              (x = ei.redMul(er.redISub(eo)).redISub(ea)),
              (W = this.y.redAdd(this.y));
          } else {
            var es = this.x.redSqr(),
              el = this.y.redSqr(),
              ec = el.redSqr(),
              eu = this.x.redAdd(el).redSqr().redISub(es).redISub(ec);
            eu = eu.redIAdd(eu);
            var ed = es.redAdd(es).redIAdd(es),
              eh = ed.redSqr(),
              ep = ec.redIAdd(ec);
            (ep = (ep = ep.redIAdd(ep)).redIAdd(ep)),
              (s = eh.redISub(eu).redISub(eu)),
              (x = ed.redMul(eu.redISub(s)).redISub(ep)),
              (W = (W = this.y.redMul(this.z)).redIAdd(W));
          }
          return this.curve.jpoint(s, x, W);
        }),
        (JPoint.prototype._threeDbl = function () {
          if (this.zOne) {
            var s,
              x,
              W,
              X = this.x.redSqr(),
              ee = this.y.redSqr(),
              et = ee.redSqr(),
              er = this.x.redAdd(ee).redSqr().redISub(X).redISub(et);
            er = er.redIAdd(er);
            var ei = X.redAdd(X).redIAdd(X).redIAdd(this.curve.a),
              eo = ei.redSqr().redISub(er).redISub(er);
            s = eo;
            var ea = et.redIAdd(et);
            (ea = (ea = ea.redIAdd(ea)).redIAdd(ea)),
              (x = ei.redMul(er.redISub(eo)).redISub(ea)),
              (W = this.y.redAdd(this.y));
          } else {
            var es = this.z.redSqr(),
              el = this.y.redSqr(),
              ec = this.x.redMul(el),
              eu = this.x.redSub(es).redMul(this.x.redAdd(es));
            eu = eu.redAdd(eu).redIAdd(eu);
            var ed = ec.redIAdd(ec),
              eh = (ed = ed.redIAdd(ed)).redAdd(ed);
            (s = eu.redSqr().redISub(eh)),
              (W = this.y.redAdd(this.z).redSqr().redISub(el).redISub(es));
            var ep = el.redSqr();
            (ep = (ep = (ep = ep.redIAdd(ep)).redIAdd(ep)).redIAdd(ep)),
              (x = eu.redMul(ed.redISub(s)).redISub(ep));
          }
          return this.curve.jpoint(s, x, W);
        }),
        (JPoint.prototype._dbl = function () {
          var s = this.curve.a,
            x = this.x,
            W = this.y,
            X = this.z,
            ee = X.redSqr().redSqr(),
            et = x.redSqr(),
            er = W.redSqr(),
            ei = et.redAdd(et).redIAdd(et).redIAdd(s.redMul(ee)),
            eo = x.redAdd(x),
            ea = (eo = eo.redIAdd(eo)).redMul(er),
            es = ei.redSqr().redISub(ea.redAdd(ea)),
            el = ea.redISub(es),
            ec = er.redSqr();
          ec = (ec = (ec = ec.redIAdd(ec)).redIAdd(ec)).redIAdd(ec);
          var eu = ei.redMul(el).redISub(ec),
            ed = W.redAdd(W).redMul(X);
          return this.curve.jpoint(es, eu, ed);
        }),
        (JPoint.prototype.trpl = function () {
          if (!this.curve.zeroA) return this.dbl().add(this);
          var s = this.x.redSqr(),
            x = this.y.redSqr(),
            W = this.z.redSqr(),
            X = x.redSqr(),
            ee = s.redAdd(s).redIAdd(s),
            et = ee.redSqr(),
            er = this.x.redAdd(x).redSqr().redISub(s).redISub(X),
            ei = (er = (er = (er = er.redIAdd(er))
              .redAdd(er)
              .redIAdd(er)).redISub(et)).redSqr(),
            eo = X.redIAdd(X);
          eo = (eo = (eo = eo.redIAdd(eo)).redIAdd(eo)).redIAdd(eo);
          var ea = ee.redIAdd(er).redSqr().redISub(et).redISub(ei).redISub(eo),
            es = x.redMul(ea);
          es = (es = es.redIAdd(es)).redIAdd(es);
          var el = this.x.redMul(ei).redISub(es);
          el = (el = el.redIAdd(el)).redIAdd(el);
          var ec = this.y.redMul(
            ea.redMul(eo.redISub(ea)).redISub(er.redMul(ei))
          );
          ec = (ec = (ec = ec.redIAdd(ec)).redIAdd(ec)).redIAdd(ec);
          var eu = this.z.redAdd(er).redSqr().redISub(W).redISub(ei);
          return this.curve.jpoint(el, ec, eu);
        }),
        (JPoint.prototype.mul = function (s, x) {
          return (s = new ee(s, x)), this.curve._wnafMul(this, s);
        }),
        (JPoint.prototype.eq = function (s) {
          if ("affine" === s.type) return this.eq(s.toJ());
          if (this === s) return !0;
          var x = this.z.redSqr(),
            W = s.z.redSqr();
          if (0 !== this.x.redMul(W).redISub(s.x.redMul(x)).cmpn(0)) return !1;
          var X = x.redMul(this.z),
            ee = W.redMul(s.z);
          return 0 === this.y.redMul(ee).redISub(s.y.redMul(X)).cmpn(0);
        }),
        (JPoint.prototype.eqXToP = function (s) {
          var x = this.z.redSqr(),
            W = s.toRed(this.curve.red).redMul(x);
          if (0 === this.x.cmp(W)) return !0;
          for (var X = s.clone(), ee = this.curve.redN.redMul(x); ; ) {
            if ((X.iadd(this.curve.n), X.cmp(this.curve.p) >= 0)) return !1;
            if ((W.redIAdd(ee), 0 === this.x.cmp(W))) return !0;
          }
        }),
        (JPoint.prototype.inspect = function () {
          return this.isInfinity()
            ? "<EC JPoint Infinity>"
            : "<EC JPoint x: " +
                this.x.toString(16, 2) +
                " y: " +
                this.y.toString(16, 2) +
                " z: " +
                this.z.toString(16, 2) +
                ">";
        }),
        (JPoint.prototype.isInfinity = function () {
          return 0 === this.z.cmpn(0);
        });
    },
    45427: function (s, x, W) {
      "use strict";
      var X,
        ee = W(33715),
        et = W(88254),
        er = W(80953).assert;
      function PresetCurve(s) {
        "short" === s.type
          ? (this.curve = new et.short(s))
          : "edwards" === s.type
          ? (this.curve = new et.edwards(s))
          : (this.curve = new et.mont(s)),
          (this.g = this.curve.g),
          (this.n = this.curve.n),
          (this.hash = s.hash),
          er(this.g.validate(), "Invalid curve"),
          er(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
      }
      function defineCurve(s, W) {
        Object.defineProperty(x, s, {
          configurable: !0,
          enumerable: !0,
          get: function () {
            var X = new PresetCurve(W);
            return (
              Object.defineProperty(x, s, {
                configurable: !0,
                enumerable: !0,
                value: X,
              }),
              X
            );
          },
        });
      }
      (x.PresetCurve = PresetCurve),
        defineCurve("p192", {
          type: "short",
          prime: "p192",
          p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
          a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
          b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
          n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
          hash: ee.sha256,
          gRed: !1,
          g: [
            "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
            "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811",
          ],
        }),
        defineCurve("p224", {
          type: "short",
          prime: "p224",
          p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
          a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
          b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
          n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
          hash: ee.sha256,
          gRed: !1,
          g: [
            "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
            "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34",
          ],
        }),
        defineCurve("p256", {
          type: "short",
          prime: null,
          p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
          a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
          b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
          n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
          hash: ee.sha256,
          gRed: !1,
          g: [
            "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
            "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5",
          ],
        }),
        defineCurve("p384", {
          type: "short",
          prime: null,
          p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
          a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
          b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
          n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
          hash: ee.sha384,
          gRed: !1,
          g: [
            "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
            "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f",
          ],
        }),
        defineCurve("p521", {
          type: "short",
          prime: null,
          p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
          a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
          b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
          n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
          hash: ee.sha512,
          gRed: !1,
          g: [
            "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
            "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650",
          ],
        }),
        defineCurve("curve25519", {
          type: "mont",
          prime: "p25519",
          p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
          a: "76d06",
          b: "1",
          n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
          hash: ee.sha256,
          gRed: !1,
          g: ["9"],
        }),
        defineCurve("ed25519", {
          type: "edwards",
          prime: "p25519",
          p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
          a: "-1",
          c: "1",
          d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
          n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
          hash: ee.sha256,
          gRed: !1,
          g: [
            "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
            "6666666666666666666666666666666666666666666666666666666666666658",
          ],
        });
      try {
        X = W(91037);
      } catch (s) {
        X = void 0;
      }
      defineCurve("secp256k1", {
        type: "short",
        prime: "k256",
        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
        a: "0",
        b: "7",
        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
        h: "1",
        hash: ee.sha256,
        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
        lambda:
          "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
        basis: [
          {
            a: "3086d221a7d46bcde86c90e49284eb15",
            b: "-e4437ed6010e88286f547fa90abfe4c3",
          },
          {
            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
            b: "3086d221a7d46bcde86c90e49284eb15",
          },
        ],
        gRed: !1,
        g: [
          "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
          "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
          X,
        ],
      });
    },
    57954: function (s, x, W) {
      "use strict";
      var X = W(73785),
        ee = W(2156),
        et = W(80953),
        er = W(45427),
        ei = W(29931),
        eo = et.assert,
        ea = W(31251),
        es = W(90611);
      function EC(s) {
        if (!(this instanceof EC)) return new EC(s);
        "string" == typeof s &&
          (eo(
            Object.prototype.hasOwnProperty.call(er, s),
            "Unknown curve " + s
          ),
          (s = er[s])),
          s instanceof er.PresetCurve && (s = { curve: s }),
          (this.curve = s.curve.curve),
          (this.n = this.curve.n),
          (this.nh = this.n.ushrn(1)),
          (this.g = this.curve.g),
          (this.g = s.curve.g),
          this.g.precompute(s.curve.n.bitLength() + 1),
          (this.hash = s.hash || s.curve.hash);
      }
      (s.exports = EC),
        (EC.prototype.keyPair = function (s) {
          return new ea(this, s);
        }),
        (EC.prototype.keyFromPrivate = function (s, x) {
          return ea.fromPrivate(this, s, x);
        }),
        (EC.prototype.keyFromPublic = function (s, x) {
          return ea.fromPublic(this, s, x);
        }),
        (EC.prototype.genKeyPair = function (s) {
          s || (s = {});
          for (
            var x = new ee({
                hash: this.hash,
                pers: s.pers,
                persEnc: s.persEnc || "utf8",
                entropy: s.entropy || ei(this.hash.hmacStrength),
                entropyEnc: (s.entropy && s.entropyEnc) || "utf8",
                nonce: this.n.toArray(),
              }),
              W = this.n.byteLength(),
              et = this.n.sub(new X(2));
            ;

          ) {
            var er = new X(x.generate(W));
            if (!(er.cmp(et) > 0)) return er.iaddn(1), this.keyFromPrivate(er);
          }
        }),
        (EC.prototype._truncateToN = function (s, x, W) {
          if (X.isBN(s) || "number" == typeof s)
            ee = (s = new X(s, 16)).byteLength();
          else if ("object" == typeof s) (ee = s.length), (s = new X(s, 16));
          else {
            var ee,
              et = s.toString();
            (ee = (et.length + 1) >>> 1), (s = new X(et, 16));
          }
          "number" != typeof W && (W = 8 * ee);
          var er = W - this.n.bitLength();
          return (er > 0 && (s = s.ushrn(er)), !x && s.cmp(this.n) >= 0)
            ? s.sub(this.n)
            : s;
        }),
        (EC.prototype.sign = function (s, x, W, et) {
          if (
            ("object" == typeof W && ((et = W), (W = null)),
            et || (et = {}),
            "string" != typeof s && "number" != typeof s && !X.isBN(s))
          ) {
            eo(
              "object" == typeof s && s && "number" == typeof s.length,
              "Expected message to be an array-like, a hex string, or a BN instance"
            ),
              eo(s.length >>> 0 === s.length);
            for (var er = 0; er < s.length; er++) eo((255 & s[er]) === s[er]);
          }
          (x = this.keyFromPrivate(x, W)),
            eo(
              !(s = this._truncateToN(s, !1, et.msgBitLength)).isNeg(),
              "Can not sign a negative message"
            );
          var ei = this.n.byteLength(),
            ea = x.getPrivate().toArray("be", ei),
            el = s.toArray("be", ei);
          eo(new X(el).eq(s), "Can not sign message");
          for (
            var ec = new ee({
                hash: this.hash,
                entropy: ea,
                nonce: el,
                pers: et.pers,
                persEnc: et.persEnc || "utf8",
              }),
              eu = this.n.sub(new X(1)),
              ed = 0;
            ;
            ed++
          ) {
            var eh = et.k ? et.k(ed) : new X(ec.generate(this.n.byteLength()));
            if (
              !(
                0 >= (eh = this._truncateToN(eh, !0)).cmpn(1) || eh.cmp(eu) >= 0
              )
            ) {
              var ep = this.g.mul(eh);
              if (!ep.isInfinity()) {
                var ef = ep.getX(),
                  eg = ef.umod(this.n);
                if (0 !== eg.cmpn(0)) {
                  var em = eh.invm(this.n).mul(eg.mul(x.getPrivate()).iadd(s));
                  if (0 !== (em = em.umod(this.n)).cmpn(0)) {
                    var ew =
                      (ep.getY().isOdd() ? 1 : 0) | (0 !== ef.cmp(eg) ? 2 : 0);
                    return (
                      et.canonical &&
                        em.cmp(this.nh) > 0 &&
                        ((em = this.n.sub(em)), (ew ^= 1)),
                      new es({ r: eg, s: em, recoveryParam: ew })
                    );
                  }
                }
              }
            }
          }
        }),
        (EC.prototype.verify = function (s, x, W, X, ee) {
          ee || (ee = {}),
            (s = this._truncateToN(s, !1, ee.msgBitLength)),
            (W = this.keyFromPublic(W, X));
          var et,
            er = (x = new es(x, "hex")).r,
            ei = x.s;
          if (
            0 > er.cmpn(1) ||
            er.cmp(this.n) >= 0 ||
            0 > ei.cmpn(1) ||
            ei.cmp(this.n) >= 0
          )
            return !1;
          var eo = ei.invm(this.n),
            ea = eo.mul(s).umod(this.n),
            el = eo.mul(er).umod(this.n);
          return this.curve._maxwellTrick
            ? !(et = this.g.jmulAdd(ea, W.getPublic(), el)).isInfinity() &&
                et.eqXToP(er)
            : !(et = this.g.mulAdd(ea, W.getPublic(), el)).isInfinity() &&
                0 === et.getX().umod(this.n).cmp(er);
        }),
        (EC.prototype.recoverPubKey = function (s, x, W, ee) {
          eo((3 & W) === W, "The recovery param is more than two bits"),
            (x = new es(x, ee));
          var et = this.n,
            er = new X(s),
            ei = x.r,
            ea = x.s,
            el = 1 & W,
            ec = W >> 1;
          if (ei.cmp(this.curve.p.umod(this.curve.n)) >= 0 && ec)
            throw Error("Unable to find sencond key candinate");
          ei = ec
            ? this.curve.pointFromX(ei.add(this.curve.n), el)
            : this.curve.pointFromX(ei, el);
          var eu = x.r.invm(et),
            ed = et.sub(er).mul(eu).umod(et),
            eh = ea.mul(eu).umod(et);
          return this.g.mulAdd(ed, ei, eh);
        }),
        (EC.prototype.getKeyRecoveryParam = function (s, x, W, X) {
          if (null !== (x = new es(x, X)).recoveryParam) return x.recoveryParam;
          for (var ee, et = 0; et < 4; et++) {
            try {
              ee = this.recoverPubKey(s, x, et);
            } catch (s) {
              continue;
            }
            if (ee.eq(W)) return et;
          }
          throw Error("Unable to find valid recovery factor");
        });
    },
    31251: function (s, x, W) {
      "use strict";
      var X = W(73785),
        ee = W(80953).assert;
      function KeyPair(s, x) {
        (this.ec = s),
          (this.priv = null),
          (this.pub = null),
          x.priv && this._importPrivate(x.priv, x.privEnc),
          x.pub && this._importPublic(x.pub, x.pubEnc);
      }
      (s.exports = KeyPair),
        (KeyPair.fromPublic = function (s, x, W) {
          return x instanceof KeyPair
            ? x
            : new KeyPair(s, { pub: x, pubEnc: W });
        }),
        (KeyPair.fromPrivate = function (s, x, W) {
          return x instanceof KeyPair
            ? x
            : new KeyPair(s, { priv: x, privEnc: W });
        }),
        (KeyPair.prototype.validate = function () {
          var s = this.getPublic();
          return s.isInfinity()
            ? { result: !1, reason: "Invalid public key" }
            : s.validate()
            ? s.mul(this.ec.curve.n).isInfinity()
              ? { result: !0, reason: null }
              : { result: !1, reason: "Public key * N != O" }
            : { result: !1, reason: "Public key is not a point" };
        }),
        (KeyPair.prototype.getPublic = function (s, x) {
          return ("string" == typeof s && ((x = s), (s = null)),
          this.pub || (this.pub = this.ec.g.mul(this.priv)),
          x)
            ? this.pub.encode(x, s)
            : this.pub;
        }),
        (KeyPair.prototype.getPrivate = function (s) {
          return "hex" === s ? this.priv.toString(16, 2) : this.priv;
        }),
        (KeyPair.prototype._importPrivate = function (s, x) {
          (this.priv = new X(s, x || 16)),
            (this.priv = this.priv.umod(this.ec.curve.n));
        }),
        (KeyPair.prototype._importPublic = function (s, x) {
          if (s.x || s.y) {
            "mont" === this.ec.curve.type
              ? ee(s.x, "Need x coordinate")
              : ("short" === this.ec.curve.type ||
                  "edwards" === this.ec.curve.type) &&
                ee(s.x && s.y, "Need both x and y coordinate"),
              (this.pub = this.ec.curve.point(s.x, s.y));
            return;
          }
          this.pub = this.ec.curve.decodePoint(s, x);
        }),
        (KeyPair.prototype.derive = function (s) {
          return (
            s.validate() || ee(s.validate(), "public point not validated"),
            s.mul(this.priv).getX()
          );
        }),
        (KeyPair.prototype.sign = function (s, x, W) {
          return this.ec.sign(s, this, x, W);
        }),
        (KeyPair.prototype.verify = function (s, x, W) {
          return this.ec.verify(s, x, this, void 0, W);
        }),
        (KeyPair.prototype.inspect = function () {
          return (
            "<Key priv: " +
            (this.priv && this.priv.toString(16, 2)) +
            " pub: " +
            (this.pub && this.pub.inspect()) +
            " >"
          );
        });
    },
    90611: function (s, x, W) {
      "use strict";
      var X = W(73785),
        ee = W(80953),
        et = ee.assert;
      function Signature(s, x) {
        if (s instanceof Signature) return s;
        this._importDER(s, x) ||
          (et(s.r && s.s, "Signature without r or s"),
          (this.r = new X(s.r, 16)),
          (this.s = new X(s.s, 16)),
          void 0 === s.recoveryParam
            ? (this.recoveryParam = null)
            : (this.recoveryParam = s.recoveryParam));
      }
      function Position() {
        this.place = 0;
      }
      function getLength(s, x) {
        var W = s[x.place++];
        if (!(128 & W)) return W;
        var X = 15 & W;
        if (0 === X || X > 4 || 0 === s[x.place]) return !1;
        for (var ee = 0, et = 0, er = x.place; et < X; et++, er++)
          (ee <<= 8), (ee |= s[er]), (ee >>>= 0);
        return !(ee <= 127) && ((x.place = er), ee);
      }
      function rmPadding(s) {
        for (var x = 0, W = s.length - 1; !s[x] && !(128 & s[x + 1]) && x < W; )
          x++;
        return 0 === x ? s : s.slice(x);
      }
      function constructLength(s, x) {
        if (x < 128) {
          s.push(x);
          return;
        }
        var W = 1 + ((Math.log(x) / Math.LN2) >>> 3);
        for (s.push(128 | W); --W; ) s.push((x >>> (W << 3)) & 255);
        s.push(x);
      }
      (s.exports = Signature),
        (Signature.prototype._importDER = function (s, x) {
          s = ee.toArray(s, x);
          var W = new Position();
          if (48 !== s[W.place++]) return !1;
          var et = getLength(s, W);
          if (!1 === et || et + W.place !== s.length || 2 !== s[W.place++])
            return !1;
          var er = getLength(s, W);
          if (!1 === er || (128 & s[W.place]) != 0) return !1;
          var ei = s.slice(W.place, er + W.place);
          if (((W.place += er), 2 !== s[W.place++])) return !1;
          var eo = getLength(s, W);
          if (!1 === eo || s.length !== eo + W.place || (128 & s[W.place]) != 0)
            return !1;
          var ea = s.slice(W.place, eo + W.place);
          if (0 === ei[0]) {
            if (!(128 & ei[1])) return !1;
            ei = ei.slice(1);
          }
          if (0 === ea[0]) {
            if (!(128 & ea[1])) return !1;
            ea = ea.slice(1);
          }
          return (
            (this.r = new X(ei)),
            (this.s = new X(ea)),
            (this.recoveryParam = null),
            !0
          );
        }),
        (Signature.prototype.toDER = function (s) {
          var x = this.r.toArray(),
            W = this.s.toArray();
          for (
            128 & x[0] && (x = [0].concat(x)),
              128 & W[0] && (W = [0].concat(W)),
              x = rmPadding(x),
              W = rmPadding(W);
            !W[0] && !(128 & W[1]);

          )
            W = W.slice(1);
          var X = [2];
          constructLength(X, x.length),
            (X = X.concat(x)).push(2),
            constructLength(X, W.length);
          var et = X.concat(W),
            er = [48];
          return (
            constructLength(er, et.length),
            (er = er.concat(et)),
            ee.encode(er, s)
          );
        });
    },
    65980: function (s, x, W) {
      "use strict";
      var X = W(33715),
        ee = W(45427),
        et = W(80953),
        er = et.assert,
        ei = et.parseBytes,
        eo = W(79087),
        ea = W(23622);
      function EDDSA(s) {
        if (
          (er("ed25519" === s, "only tested with ed25519 so far"),
          !(this instanceof EDDSA))
        )
          return new EDDSA(s);
        (s = ee[s].curve),
          (this.curve = s),
          (this.g = s.g),
          this.g.precompute(s.n.bitLength() + 1),
          (this.pointClass = s.point().constructor),
          (this.encodingLength = Math.ceil(s.n.bitLength() / 8)),
          (this.hash = X.sha512);
      }
      (s.exports = EDDSA),
        (EDDSA.prototype.sign = function (s, x) {
          s = ei(s);
          var W = this.keyFromSecret(x),
            X = this.hashInt(W.messagePrefix(), s),
            ee = this.g.mul(X),
            et = this.encodePoint(ee),
            er = this.hashInt(et, W.pubBytes(), s).mul(W.priv()),
            eo = X.add(er).umod(this.curve.n);
          return this.makeSignature({ R: ee, S: eo, Rencoded: et });
        }),
        (EDDSA.prototype.verify = function (s, x, W) {
          if (
            ((s = ei(s)),
            (x = this.makeSignature(x)).S().gte(x.eddsa.curve.n) ||
              x.S().isNeg())
          )
            return !1;
          var X = this.keyFromPublic(W),
            ee = this.hashInt(x.Rencoded(), X.pubBytes(), s),
            et = this.g.mul(x.S());
          return x.R().add(X.pub().mul(ee)).eq(et);
        }),
        (EDDSA.prototype.hashInt = function () {
          for (var s = this.hash(), x = 0; x < arguments.length; x++)
            s.update(arguments[x]);
          return et.intFromLE(s.digest()).umod(this.curve.n);
        }),
        (EDDSA.prototype.keyFromPublic = function (s) {
          return eo.fromPublic(this, s);
        }),
        (EDDSA.prototype.keyFromSecret = function (s) {
          return eo.fromSecret(this, s);
        }),
        (EDDSA.prototype.makeSignature = function (s) {
          return s instanceof ea ? s : new ea(this, s);
        }),
        (EDDSA.prototype.encodePoint = function (s) {
          var x = s.getY().toArray("le", this.encodingLength);
          return (x[this.encodingLength - 1] |= s.getX().isOdd() ? 128 : 0), x;
        }),
        (EDDSA.prototype.decodePoint = function (s) {
          var x = (s = et.parseBytes(s)).length - 1,
            W = s.slice(0, x).concat(-129 & s[x]),
            X = (128 & s[x]) != 0,
            ee = et.intFromLE(W);
          return this.curve.pointFromY(ee, X);
        }),
        (EDDSA.prototype.encodeInt = function (s) {
          return s.toArray("le", this.encodingLength);
        }),
        (EDDSA.prototype.decodeInt = function (s) {
          return et.intFromLE(s);
        }),
        (EDDSA.prototype.isPoint = function (s) {
          return s instanceof this.pointClass;
        });
    },
    79087: function (s, x, W) {
      "use strict";
      var X = W(80953),
        ee = X.assert,
        et = X.parseBytes,
        er = X.cachedProperty;
      function KeyPair(s, x) {
        (this.eddsa = s),
          (this._secret = et(x.secret)),
          s.isPoint(x.pub) ? (this._pub = x.pub) : (this._pubBytes = et(x.pub));
      }
      (KeyPair.fromPublic = function (s, x) {
        return x instanceof KeyPair ? x : new KeyPair(s, { pub: x });
      }),
        (KeyPair.fromSecret = function (s, x) {
          return x instanceof KeyPair ? x : new KeyPair(s, { secret: x });
        }),
        (KeyPair.prototype.secret = function () {
          return this._secret;
        }),
        er(KeyPair, "pubBytes", function () {
          return this.eddsa.encodePoint(this.pub());
        }),
        er(KeyPair, "pub", function () {
          return this._pubBytes
            ? this.eddsa.decodePoint(this._pubBytes)
            : this.eddsa.g.mul(this.priv());
        }),
        er(KeyPair, "privBytes", function () {
          var s = this.eddsa,
            x = this.hash(),
            W = s.encodingLength - 1,
            X = x.slice(0, s.encodingLength);
          return (X[0] &= 248), (X[W] &= 127), (X[W] |= 64), X;
        }),
        er(KeyPair, "priv", function () {
          return this.eddsa.decodeInt(this.privBytes());
        }),
        er(KeyPair, "hash", function () {
          return this.eddsa.hash().update(this.secret()).digest();
        }),
        er(KeyPair, "messagePrefix", function () {
          return this.hash().slice(this.eddsa.encodingLength);
        }),
        (KeyPair.prototype.sign = function (s) {
          return (
            ee(this._secret, "KeyPair can only verify"),
            this.eddsa.sign(s, this)
          );
        }),
        (KeyPair.prototype.verify = function (s, x) {
          return this.eddsa.verify(s, x, this);
        }),
        (KeyPair.prototype.getSecret = function (s) {
          return (
            ee(this._secret, "KeyPair is public only"),
            X.encode(this.secret(), s)
          );
        }),
        (KeyPair.prototype.getPublic = function (s) {
          return X.encode(this.pubBytes(), s);
        }),
        (s.exports = KeyPair);
    },
    23622: function (s, x, W) {
      "use strict";
      var X = W(73785),
        ee = W(80953),
        et = ee.assert,
        er = ee.cachedProperty,
        ei = ee.parseBytes;
      function Signature(s, x) {
        (this.eddsa = s),
          "object" != typeof x && (x = ei(x)),
          Array.isArray(x) &&
            (et(
              x.length === 2 * s.encodingLength,
              "Signature has invalid size"
            ),
            (x = {
              R: x.slice(0, s.encodingLength),
              S: x.slice(s.encodingLength),
            })),
          et(x.R && x.S, "Signature without R or S"),
          s.isPoint(x.R) && (this._R = x.R),
          x.S instanceof X && (this._S = x.S),
          (this._Rencoded = Array.isArray(x.R) ? x.R : x.Rencoded),
          (this._Sencoded = Array.isArray(x.S) ? x.S : x.Sencoded);
      }
      er(Signature, "S", function () {
        return this.eddsa.decodeInt(this.Sencoded());
      }),
        er(Signature, "R", function () {
          return this.eddsa.decodePoint(this.Rencoded());
        }),
        er(Signature, "Rencoded", function () {
          return this.eddsa.encodePoint(this.R());
        }),
        er(Signature, "Sencoded", function () {
          return this.eddsa.encodeInt(this.S());
        }),
        (Signature.prototype.toBytes = function () {
          return this.Rencoded().concat(this.Sencoded());
        }),
        (Signature.prototype.toHex = function () {
          return ee.encode(this.toBytes(), "hex").toUpperCase();
        }),
        (s.exports = Signature);
    },
    91037: function (s) {
      s.exports = {
        doubles: {
          step: 4,
          points: [
            [
              "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
              "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821",
            ],
            [
              "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
              "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf",
            ],
            [
              "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
              "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695",
            ],
            [
              "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
              "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9",
            ],
            [
              "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
              "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36",
            ],
            [
              "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
              "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f",
            ],
            [
              "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
              "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999",
            ],
            [
              "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
              "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09",
            ],
            [
              "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
              "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d",
            ],
            [
              "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
              "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088",
            ],
            [
              "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
              "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d",
            ],
            [
              "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
              "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8",
            ],
            [
              "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
              "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a",
            ],
            [
              "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
              "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453",
            ],
            [
              "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
              "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160",
            ],
            [
              "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
              "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0",
            ],
            [
              "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
              "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6",
            ],
            [
              "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
              "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589",
            ],
            [
              "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
              "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17",
            ],
            [
              "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
              "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda",
            ],
            [
              "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
              "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd",
            ],
            [
              "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
              "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2",
            ],
            [
              "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
              "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6",
            ],
            [
              "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
              "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f",
            ],
            [
              "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
              "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01",
            ],
            [
              "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
              "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3",
            ],
            [
              "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
              "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f",
            ],
            [
              "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
              "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7",
            ],
            [
              "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
              "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78",
            ],
            [
              "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
              "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1",
            ],
            [
              "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
              "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150",
            ],
            [
              "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
              "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82",
            ],
            [
              "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
              "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc",
            ],
            [
              "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
              "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b",
            ],
            [
              "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
              "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51",
            ],
            [
              "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
              "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45",
            ],
            [
              "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
              "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120",
            ],
            [
              "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
              "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84",
            ],
            [
              "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
              "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d",
            ],
            [
              "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
              "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d",
            ],
            [
              "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
              "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8",
            ],
            [
              "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
              "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8",
            ],
            [
              "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
              "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac",
            ],
            [
              "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
              "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f",
            ],
            [
              "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
              "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962",
            ],
            [
              "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
              "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907",
            ],
            [
              "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
              "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec",
            ],
            [
              "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
              "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d",
            ],
            [
              "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
              "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414",
            ],
            [
              "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
              "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd",
            ],
            [
              "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
              "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0",
            ],
            [
              "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
              "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811",
            ],
            [
              "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
              "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1",
            ],
            [
              "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
              "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c",
            ],
            [
              "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
              "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73",
            ],
            [
              "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
              "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd",
            ],
            [
              "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
              "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405",
            ],
            [
              "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
              "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589",
            ],
            [
              "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
              "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e",
            ],
            [
              "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
              "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27",
            ],
            [
              "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
              "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1",
            ],
            [
              "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
              "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482",
            ],
            [
              "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
              "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945",
            ],
            [
              "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
              "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573",
            ],
            [
              "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
              "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82",
            ],
          ],
        },
        naf: {
          wnd: 7,
          points: [
            [
              "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
              "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672",
            ],
            [
              "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
              "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6",
            ],
            [
              "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
              "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da",
            ],
            [
              "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
              "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37",
            ],
            [
              "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
              "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b",
            ],
            [
              "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
              "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81",
            ],
            [
              "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
              "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58",
            ],
            [
              "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
              "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77",
            ],
            [
              "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
              "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a",
            ],
            [
              "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
              "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c",
            ],
            [
              "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
              "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67",
            ],
            [
              "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
              "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402",
            ],
            [
              "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
              "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55",
            ],
            [
              "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
              "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482",
            ],
            [
              "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
              "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82",
            ],
            [
              "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
              "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396",
            ],
            [
              "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
              "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49",
            ],
            [
              "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
              "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf",
            ],
            [
              "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
              "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a",
            ],
            [
              "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
              "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7",
            ],
            [
              "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
              "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933",
            ],
            [
              "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
              "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a",
            ],
            [
              "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
              "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6",
            ],
            [
              "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
              "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37",
            ],
            [
              "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
              "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e",
            ],
            [
              "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
              "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6",
            ],
            [
              "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
              "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476",
            ],
            [
              "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
              "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40",
            ],
            [
              "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
              "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61",
            ],
            [
              "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
              "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683",
            ],
            [
              "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
              "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5",
            ],
            [
              "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
              "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b",
            ],
            [
              "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
              "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417",
            ],
            [
              "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
              "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868",
            ],
            [
              "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
              "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a",
            ],
            [
              "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
              "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6",
            ],
            [
              "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
              "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996",
            ],
            [
              "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
              "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e",
            ],
            [
              "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
              "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d",
            ],
            [
              "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
              "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2",
            ],
            [
              "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
              "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e",
            ],
            [
              "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
              "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437",
            ],
            [
              "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
              "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311",
            ],
            [
              "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
              "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4",
            ],
            [
              "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
              "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575",
            ],
            [
              "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
              "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d",
            ],
            [
              "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
              "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d",
            ],
            [
              "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
              "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629",
            ],
            [
              "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
              "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06",
            ],
            [
              "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
              "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374",
            ],
            [
              "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
              "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee",
            ],
            [
              "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
              "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1",
            ],
            [
              "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
              "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b",
            ],
            [
              "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
              "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661",
            ],
            [
              "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
              "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6",
            ],
            [
              "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
              "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e",
            ],
            [
              "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
              "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d",
            ],
            [
              "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
              "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc",
            ],
            [
              "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
              "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4",
            ],
            [
              "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
              "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c",
            ],
            [
              "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
              "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b",
            ],
            [
              "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
              "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913",
            ],
            [
              "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
              "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154",
            ],
            [
              "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
              "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865",
            ],
            [
              "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
              "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc",
            ],
            [
              "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
              "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224",
            ],
            [
              "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
              "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e",
            ],
            [
              "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
              "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6",
            ],
            [
              "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
              "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511",
            ],
            [
              "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
              "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b",
            ],
            [
              "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
              "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2",
            ],
            [
              "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
              "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c",
            ],
            [
              "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
              "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3",
            ],
            [
              "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
              "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d",
            ],
            [
              "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
              "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700",
            ],
            [
              "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
              "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4",
            ],
            [
              "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
              "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196",
            ],
            [
              "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
              "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4",
            ],
            [
              "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
              "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257",
            ],
            [
              "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
              "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13",
            ],
            [
              "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
              "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096",
            ],
            [
              "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
              "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38",
            ],
            [
              "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
              "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f",
            ],
            [
              "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
              "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448",
            ],
            [
              "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
              "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a",
            ],
            [
              "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
              "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4",
            ],
            [
              "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
              "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437",
            ],
            [
              "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
              "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7",
            ],
            [
              "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
              "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d",
            ],
            [
              "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
              "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a",
            ],
            [
              "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
              "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54",
            ],
            [
              "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
              "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77",
            ],
            [
              "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
              "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517",
            ],
            [
              "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
              "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10",
            ],
            [
              "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
              "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125",
            ],
            [
              "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
              "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e",
            ],
            [
              "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
              "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1",
            ],
            [
              "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
              "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2",
            ],
            [
              "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
              "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423",
            ],
            [
              "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
              "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8",
            ],
            [
              "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
              "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758",
            ],
            [
              "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
              "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375",
            ],
            [
              "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
              "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d",
            ],
            [
              "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
              "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec",
            ],
            [
              "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
              "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0",
            ],
            [
              "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
              "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c",
            ],
            [
              "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
              "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4",
            ],
            [
              "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
              "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f",
            ],
            [
              "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
              "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649",
            ],
            [
              "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
              "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826",
            ],
            [
              "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
              "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5",
            ],
            [
              "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
              "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87",
            ],
            [
              "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
              "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b",
            ],
            [
              "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
              "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc",
            ],
            [
              "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
              "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c",
            ],
            [
              "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
              "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f",
            ],
            [
              "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
              "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a",
            ],
            [
              "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
              "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46",
            ],
            [
              "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
              "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f",
            ],
            [
              "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
              "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03",
            ],
            [
              "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
              "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08",
            ],
            [
              "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
              "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8",
            ],
            [
              "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
              "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373",
            ],
            [
              "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
              "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3",
            ],
            [
              "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
              "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8",
            ],
            [
              "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
              "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1",
            ],
            [
              "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
              "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9",
            ],
          ],
        },
      };
    },
    80953: function (s, x, W) {
      "use strict";
      var X = W(73785),
        ee = W(79746),
        et = W(34504);
      (x.assert = ee),
        (x.toArray = et.toArray),
        (x.zero2 = et.zero2),
        (x.toHex = et.toHex),
        (x.encode = et.encode),
        (x.getNAF = function (s, x, W) {
          var X = Array(Math.max(s.bitLength(), W) + 1);
          for (er = 0; er < X.length; er += 1) X[er] = 0;
          var ee = 1 << (x + 1),
            et = s.clone();
          for (er = 0; er < X.length; er++) {
            var er,
              ei,
              eo = et.andln(ee - 1);
            et.isOdd()
              ? ((ei = eo > (ee >> 1) - 1 ? (ee >> 1) - eo : eo), et.isubn(ei))
              : (ei = 0),
              (X[er] = ei),
              et.iushrn(1);
          }
          return X;
        }),
        (x.getJSF = function (s, x) {
          var W = [[], []];
          (s = s.clone()), (x = x.clone());
          for (var X = 0, ee = 0; s.cmpn(-X) > 0 || x.cmpn(-ee) > 0; ) {
            var et,
              er,
              ei,
              eo = (s.andln(3) + X) & 3,
              ea = (x.andln(3) + ee) & 3;
            3 === eo && (eo = -1),
              3 === ea && (ea = -1),
              (er =
                (1 & eo) == 0
                  ? 0
                  : (3 == (et = (s.andln(7) + X) & 7) || 5 === et) && 2 === ea
                  ? -eo
                  : eo),
              W[0].push(er),
              (ei =
                (1 & ea) == 0
                  ? 0
                  : (3 == (et = (x.andln(7) + ee) & 7) || 5 === et) && 2 === eo
                  ? -ea
                  : ea),
              W[1].push(ei),
              2 * X === er + 1 && (X = 1 - X),
              2 * ee === ei + 1 && (ee = 1 - ee),
              s.iushrn(1),
              x.iushrn(1);
          }
          return W;
        }),
        (x.cachedProperty = function (s, x, W) {
          var X = "_" + x;
          s.prototype[x] = function () {
            return void 0 !== this[X] ? this[X] : (this[X] = W.call(this));
          };
        }),
        (x.parseBytes = function (s) {
          return "string" == typeof s ? x.toArray(s, "hex") : s;
        }),
        (x.intFromLE = function (s) {
          return new X(s, "hex", "le");
        });
    },
    73785: function (s, x, W) {
      !(function (s, x) {
        "use strict";
        function assert(s, x) {
          if (!s) throw Error(x || "Assertion failed");
        }
        function inherits(s, x) {
          s.super_ = x;
          var TempCtor = function () {};
          (TempCtor.prototype = x.prototype),
            (s.prototype = new TempCtor()),
            (s.prototype.constructor = s);
        }
        function BN(s, x, W) {
          if (BN.isBN(s)) return s;
          (this.negative = 0),
            (this.words = null),
            (this.length = 0),
            (this.red = null),
            null !== s &&
              (("le" === x || "be" === x) && ((W = x), (x = 10)),
              this._init(s || 0, x || 10, W || "be"));
        }
        "object" == typeof s ? (s.exports = BN) : (x.BN = BN),
          (BN.BN = BN),
          (BN.wordSize = 26);
        try {
          X =
            "undefined" != typeof window && void 0 !== window.Buffer
              ? window.Buffer
              : W(85568).Buffer;
        } catch (s) {}
        function parseHex4Bits(s, x) {
          var W = s.charCodeAt(x);
          return W >= 65 && W <= 70
            ? W - 55
            : W >= 97 && W <= 102
            ? W - 87
            : (W - 48) & 15;
        }
        function parseHexByte(s, x, W) {
          var X = parseHex4Bits(s, W);
          return W - 1 >= x && (X |= parseHex4Bits(s, W - 1) << 4), X;
        }
        function parseBase(s, x, W, X) {
          for (var ee = 0, et = Math.min(s.length, W), er = x; er < et; er++) {
            var ei = s.charCodeAt(er) - 48;
            (ee *= X),
              ei >= 49
                ? (ee += ei - 49 + 10)
                : ei >= 17
                ? (ee += ei - 17 + 10)
                : (ee += ei);
          }
          return ee;
        }
        (BN.isBN = function (s) {
          return (
            s instanceof BN ||
            (null !== s &&
              "object" == typeof s &&
              s.constructor.wordSize === BN.wordSize &&
              Array.isArray(s.words))
          );
        }),
          (BN.max = function (s, x) {
            return s.cmp(x) > 0 ? s : x;
          }),
          (BN.min = function (s, x) {
            return 0 > s.cmp(x) ? s : x;
          }),
          (BN.prototype._init = function (s, x, W) {
            if ("number" == typeof s) return this._initNumber(s, x, W);
            if ("object" == typeof s) return this._initArray(s, x, W);
            "hex" === x && (x = 16), assert(x === (0 | x) && x >= 2 && x <= 36);
            var X = 0;
            "-" === (s = s.toString().replace(/\s+/g, ""))[0] &&
              (X++, (this.negative = 1)),
              X < s.length &&
                (16 === x
                  ? this._parseHex(s, X, W)
                  : (this._parseBase(s, x, X),
                    "le" === W && this._initArray(this.toArray(), x, W)));
          }),
          (BN.prototype._initNumber = function (s, x, W) {
            s < 0 && ((this.negative = 1), (s = -s)),
              s < 67108864
                ? ((this.words = [67108863 & s]), (this.length = 1))
                : s < 4503599627370496
                ? ((this.words = [67108863 & s, (s / 67108864) & 67108863]),
                  (this.length = 2))
                : (assert(s < 9007199254740992),
                  (this.words = [67108863 & s, (s / 67108864) & 67108863, 1]),
                  (this.length = 3)),
              "le" === W && this._initArray(this.toArray(), x, W);
          }),
          (BN.prototype._initArray = function (s, x, W) {
            if ((assert("number" == typeof s.length), s.length <= 0))
              return (this.words = [0]), (this.length = 1), this;
            (this.length = Math.ceil(s.length / 3)),
              (this.words = Array(this.length));
            for (var X, ee, et = 0; et < this.length; et++) this.words[et] = 0;
            var er = 0;
            if ("be" === W)
              for (et = s.length - 1, X = 0; et >= 0; et -= 3)
                (ee = s[et] | (s[et - 1] << 8) | (s[et - 2] << 16)),
                  (this.words[X] |= (ee << er) & 67108863),
                  (this.words[X + 1] = (ee >>> (26 - er)) & 67108863),
                  (er += 24) >= 26 && ((er -= 26), X++);
            else if ("le" === W)
              for (et = 0, X = 0; et < s.length; et += 3)
                (ee = s[et] | (s[et + 1] << 8) | (s[et + 2] << 16)),
                  (this.words[X] |= (ee << er) & 67108863),
                  (this.words[X + 1] = (ee >>> (26 - er)) & 67108863),
                  (er += 24) >= 26 && ((er -= 26), X++);
            return this.strip();
          }),
          (BN.prototype._parseHex = function (s, x, W) {
            (this.length = Math.ceil((s.length - x) / 6)),
              (this.words = Array(this.length));
            for (var X, ee = 0; ee < this.length; ee++) this.words[ee] = 0;
            var et = 0,
              er = 0;
            if ("be" === W)
              for (ee = s.length - 1; ee >= x; ee -= 2)
                (X = parseHexByte(s, x, ee) << et),
                  (this.words[er] |= 67108863 & X),
                  et >= 18
                    ? ((et -= 18), (er += 1), (this.words[er] |= X >>> 26))
                    : (et += 8);
            else
              for (
                ee = (s.length - x) % 2 == 0 ? x + 1 : x;
                ee < s.length;
                ee += 2
              )
                (X = parseHexByte(s, x, ee) << et),
                  (this.words[er] |= 67108863 & X),
                  et >= 18
                    ? ((et -= 18), (er += 1), (this.words[er] |= X >>> 26))
                    : (et += 8);
            this.strip();
          }),
          (BN.prototype._parseBase = function (s, x, W) {
            (this.words = [0]), (this.length = 1);
            for (var X = 0, ee = 1; ee <= 67108863; ee *= x) X++;
            X--, (ee = (ee / x) | 0);
            for (
              var et = s.length - W,
                er = et % X,
                ei = Math.min(et, et - er) + W,
                eo = 0,
                ea = W;
              ea < ei;
              ea += X
            )
              (eo = parseBase(s, ea, ea + X, x)),
                this.imuln(ee),
                this.words[0] + eo < 67108864
                  ? (this.words[0] += eo)
                  : this._iaddn(eo);
            if (0 !== er) {
              var es = 1;
              for (eo = parseBase(s, ea, s.length, x), ea = 0; ea < er; ea++)
                es *= x;
              this.imuln(es),
                this.words[0] + eo < 67108864
                  ? (this.words[0] += eo)
                  : this._iaddn(eo);
            }
            this.strip();
          }),
          (BN.prototype.copy = function (s) {
            s.words = Array(this.length);
            for (var x = 0; x < this.length; x++) s.words[x] = this.words[x];
            (s.length = this.length),
              (s.negative = this.negative),
              (s.red = this.red);
          }),
          (BN.prototype.clone = function () {
            var s = new BN(null);
            return this.copy(s), s;
          }),
          (BN.prototype._expand = function (s) {
            for (; this.length < s; ) this.words[this.length++] = 0;
            return this;
          }),
          (BN.prototype.strip = function () {
            for (; this.length > 1 && 0 === this.words[this.length - 1]; )
              this.length--;
            return this._normSign();
          }),
          (BN.prototype._normSign = function () {
            return (
              1 === this.length && 0 === this.words[0] && (this.negative = 0),
              this
            );
          }),
          (BN.prototype.inspect = function () {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          });
        var X,
          ee = [
            "",
            "0",
            "00",
            "000",
            "0000",
            "00000",
            "000000",
            "0000000",
            "00000000",
            "000000000",
            "0000000000",
            "00000000000",
            "000000000000",
            "0000000000000",
            "00000000000000",
            "000000000000000",
            "0000000000000000",
            "00000000000000000",
            "000000000000000000",
            "0000000000000000000",
            "00000000000000000000",
            "000000000000000000000",
            "0000000000000000000000",
            "00000000000000000000000",
            "000000000000000000000000",
            "0000000000000000000000000",
          ],
          et = [
            0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6,
            5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
          ],
          er = [
            0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607,
            16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536,
            11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101,
            5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368,
            20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875,
            60466176,
          ];
        function smallMulTo(s, x, W) {
          W.negative = x.negative ^ s.negative;
          var X = (s.length + x.length) | 0;
          (W.length = X), (X = (X - 1) | 0);
          var ee = 0 | s.words[0],
            et = 0 | x.words[0],
            er = ee * et,
            ei = 67108863 & er,
            eo = (er / 67108864) | 0;
          W.words[0] = ei;
          for (var ea = 1; ea < X; ea++) {
            for (
              var es = eo >>> 26,
                el = 67108863 & eo,
                ec = Math.min(ea, x.length - 1),
                eu = Math.max(0, ea - s.length + 1);
              eu <= ec;
              eu++
            ) {
              var ed = (ea - eu) | 0;
              (es +=
                ((er = (ee = 0 | s.words[ed]) * (et = 0 | x.words[eu]) + el) /
                  67108864) |
                0),
                (el = 67108863 & er);
            }
            (W.words[ea] = 0 | el), (eo = 0 | es);
          }
          return 0 !== eo ? (W.words[ea] = 0 | eo) : W.length--, W.strip();
        }
        (BN.prototype.toString = function (s, x) {
          if (((x = 0 | x || 1), 16 === (s = s || 10) || "hex" === s)) {
            W = "";
            for (var W, X = 0, ei = 0, eo = 0; eo < this.length; eo++) {
              var ea = this.words[eo],
                es = (((ea << X) | ei) & 16777215).toString(16);
              (ei = (ea >>> (24 - X)) & 16777215),
                (X += 2) >= 26 && ((X -= 26), eo--),
                (W =
                  0 !== ei || eo !== this.length - 1
                    ? ee[6 - es.length] + es + W
                    : es + W);
            }
            for (0 !== ei && (W = ei.toString(16) + W); W.length % x != 0; )
              W = "0" + W;
            return 0 !== this.negative && (W = "-" + W), W;
          }
          if (s === (0 | s) && s >= 2 && s <= 36) {
            var el = et[s],
              ec = er[s];
            W = "";
            var eu = this.clone();
            for (eu.negative = 0; !eu.isZero(); ) {
              var ed = eu.modn(ec).toString(s);
              W = (eu = eu.idivn(ec)).isZero()
                ? ed + W
                : ee[el - ed.length] + ed + W;
            }
            for (this.isZero() && (W = "0" + W); W.length % x != 0; )
              W = "0" + W;
            return 0 !== this.negative && (W = "-" + W), W;
          }
          assert(!1, "Base should be between 2 and 36");
        }),
          (BN.prototype.toNumber = function () {
            var s = this.words[0];
            return (
              2 === this.length
                ? (s += 67108864 * this.words[1])
                : 3 === this.length && 1 === this.words[2]
                ? (s += 4503599627370496 + 67108864 * this.words[1])
                : this.length > 2 &&
                  assert(!1, "Number can only safely store up to 53 bits"),
              0 !== this.negative ? -s : s
            );
          }),
          (BN.prototype.toJSON = function () {
            return this.toString(16);
          }),
          (BN.prototype.toBuffer = function (s, x) {
            return assert(void 0 !== X), this.toArrayLike(X, s, x);
          }),
          (BN.prototype.toArray = function (s, x) {
            return this.toArrayLike(Array, s, x);
          }),
          (BN.prototype.toArrayLike = function (s, x, W) {
            var X,
              ee,
              et = this.byteLength(),
              er = W || Math.max(1, et);
            assert(et <= er, "byte array longer than desired length"),
              assert(er > 0, "Requested array length <= 0"),
              this.strip();
            var ei = new s(er),
              eo = this.clone();
            if ("le" === x) {
              for (ee = 0; !eo.isZero(); ee++)
                (X = eo.andln(255)), eo.iushrn(8), (ei[ee] = X);
              for (; ee < er; ee++) ei[ee] = 0;
            } else {
              for (ee = 0; ee < er - et; ee++) ei[ee] = 0;
              for (ee = 0; !eo.isZero(); ee++)
                (X = eo.andln(255)), eo.iushrn(8), (ei[er - ee - 1] = X);
            }
            return ei;
          }),
          Math.clz32
            ? (BN.prototype._countBits = function (s) {
                return 32 - Math.clz32(s);
              })
            : (BN.prototype._countBits = function (s) {
                var x = s,
                  W = 0;
                return (
                  x >= 4096 && ((W += 13), (x >>>= 13)),
                  x >= 64 && ((W += 7), (x >>>= 7)),
                  x >= 8 && ((W += 4), (x >>>= 4)),
                  x >= 2 && ((W += 2), (x >>>= 2)),
                  W + x
                );
              }),
          (BN.prototype._zeroBits = function (s) {
            if (0 === s) return 26;
            var x = s,
              W = 0;
            return (
              (8191 & x) == 0 && ((W += 13), (x >>>= 13)),
              (127 & x) == 0 && ((W += 7), (x >>>= 7)),
              (15 & x) == 0 && ((W += 4), (x >>>= 4)),
              (3 & x) == 0 && ((W += 2), (x >>>= 2)),
              (1 & x) == 0 && W++,
              W
            );
          }),
          (BN.prototype.bitLength = function () {
            var s = this.words[this.length - 1],
              x = this._countBits(s);
            return (this.length - 1) * 26 + x;
          }),
          (BN.prototype.zeroBits = function () {
            if (this.isZero()) return 0;
            for (var s = 0, x = 0; x < this.length; x++) {
              var W = this._zeroBits(this.words[x]);
              if (((s += W), 26 !== W)) break;
            }
            return s;
          }),
          (BN.prototype.byteLength = function () {
            return Math.ceil(this.bitLength() / 8);
          }),
          (BN.prototype.toTwos = function (s) {
            return 0 !== this.negative
              ? this.abs().inotn(s).iaddn(1)
              : this.clone();
          }),
          (BN.prototype.fromTwos = function (s) {
            return this.testn(s - 1)
              ? this.notn(s).iaddn(1).ineg()
              : this.clone();
          }),
          (BN.prototype.isNeg = function () {
            return 0 !== this.negative;
          }),
          (BN.prototype.neg = function () {
            return this.clone().ineg();
          }),
          (BN.prototype.ineg = function () {
            return this.isZero() || (this.negative ^= 1), this;
          }),
          (BN.prototype.iuor = function (s) {
            for (; this.length < s.length; ) this.words[this.length++] = 0;
            for (var x = 0; x < s.length; x++)
              this.words[x] = this.words[x] | s.words[x];
            return this.strip();
          }),
          (BN.prototype.ior = function (s) {
            return assert((this.negative | s.negative) == 0), this.iuor(s);
          }),
          (BN.prototype.or = function (s) {
            return this.length > s.length
              ? this.clone().ior(s)
              : s.clone().ior(this);
          }),
          (BN.prototype.uor = function (s) {
            return this.length > s.length
              ? this.clone().iuor(s)
              : s.clone().iuor(this);
          }),
          (BN.prototype.iuand = function (s) {
            var x;
            x = this.length > s.length ? s : this;
            for (var W = 0; W < x.length; W++)
              this.words[W] = this.words[W] & s.words[W];
            return (this.length = x.length), this.strip();
          }),
          (BN.prototype.iand = function (s) {
            return assert((this.negative | s.negative) == 0), this.iuand(s);
          }),
          (BN.prototype.and = function (s) {
            return this.length > s.length
              ? this.clone().iand(s)
              : s.clone().iand(this);
          }),
          (BN.prototype.uand = function (s) {
            return this.length > s.length
              ? this.clone().iuand(s)
              : s.clone().iuand(this);
          }),
          (BN.prototype.iuxor = function (s) {
            this.length > s.length
              ? ((x = this), (W = s))
              : ((x = s), (W = this));
            for (var x, W, X = 0; X < W.length; X++)
              this.words[X] = x.words[X] ^ W.words[X];
            if (this !== x)
              for (; X < x.length; X++) this.words[X] = x.words[X];
            return (this.length = x.length), this.strip();
          }),
          (BN.prototype.ixor = function (s) {
            return assert((this.negative | s.negative) == 0), this.iuxor(s);
          }),
          (BN.prototype.xor = function (s) {
            return this.length > s.length
              ? this.clone().ixor(s)
              : s.clone().ixor(this);
          }),
          (BN.prototype.uxor = function (s) {
            return this.length > s.length
              ? this.clone().iuxor(s)
              : s.clone().iuxor(this);
          }),
          (BN.prototype.inotn = function (s) {
            assert("number" == typeof s && s >= 0);
            var x = 0 | Math.ceil(s / 26),
              W = s % 26;
            this._expand(x), W > 0 && x--;
            for (var X = 0; X < x; X++)
              this.words[X] = 67108863 & ~this.words[X];
            return (
              W > 0 &&
                (this.words[X] = ~this.words[X] & (67108863 >> (26 - W))),
              this.strip()
            );
          }),
          (BN.prototype.notn = function (s) {
            return this.clone().inotn(s);
          }),
          (BN.prototype.setn = function (s, x) {
            assert("number" == typeof s && s >= 0);
            var W = (s / 26) | 0,
              X = s % 26;
            return (
              this._expand(W + 1),
              x
                ? (this.words[W] = this.words[W] | (1 << X))
                : (this.words[W] = this.words[W] & ~(1 << X)),
              this.strip()
            );
          }),
          (BN.prototype.iadd = function (s) {
            if (0 !== this.negative && 0 === s.negative)
              return (
                (this.negative = 0),
                (x = this.isub(s)),
                (this.negative ^= 1),
                this._normSign()
              );
            if (0 === this.negative && 0 !== s.negative)
              return (
                (s.negative = 0),
                (x = this.isub(s)),
                (s.negative = 1),
                x._normSign()
              );
            this.length > s.length
              ? ((W = this), (X = s))
              : ((W = s), (X = this));
            for (var x, W, X, ee = 0, et = 0; et < X.length; et++)
              (x = (0 | W.words[et]) + (0 | X.words[et]) + ee),
                (this.words[et] = 67108863 & x),
                (ee = x >>> 26);
            for (; 0 !== ee && et < W.length; et++)
              (x = (0 | W.words[et]) + ee),
                (this.words[et] = 67108863 & x),
                (ee = x >>> 26);
            if (((this.length = W.length), 0 !== ee))
              (this.words[this.length] = ee), this.length++;
            else if (W !== this)
              for (; et < W.length; et++) this.words[et] = W.words[et];
            return this;
          }),
          (BN.prototype.add = function (s) {
            var x;
            return 0 !== s.negative && 0 === this.negative
              ? ((s.negative = 0), (x = this.sub(s)), (s.negative ^= 1), x)
              : 0 === s.negative && 0 !== this.negative
              ? ((this.negative = 0), (x = s.sub(this)), (this.negative = 1), x)
              : this.length > s.length
              ? this.clone().iadd(s)
              : s.clone().iadd(this);
          }),
          (BN.prototype.isub = function (s) {
            if (0 !== s.negative) {
              s.negative = 0;
              var x,
                W,
                X = this.iadd(s);
              return (s.negative = 1), X._normSign();
            }
            if (0 !== this.negative)
              return (
                (this.negative = 0),
                this.iadd(s),
                (this.negative = 1),
                this._normSign()
              );
            var ee = this.cmp(s);
            if (0 === ee)
              return (
                (this.negative = 0),
                (this.length = 1),
                (this.words[0] = 0),
                this
              );
            ee > 0 ? ((x = this), (W = s)) : ((x = s), (W = this));
            for (var et = 0, er = 0; er < W.length; er++)
              (et = (X = (0 | x.words[er]) - (0 | W.words[er]) + et) >> 26),
                (this.words[er] = 67108863 & X);
            for (; 0 !== et && er < x.length; er++)
              (et = (X = (0 | x.words[er]) + et) >> 26),
                (this.words[er] = 67108863 & X);
            if (0 === et && er < x.length && x !== this)
              for (; er < x.length; er++) this.words[er] = x.words[er];
            return (
              (this.length = Math.max(this.length, er)),
              x !== this && (this.negative = 1),
              this.strip()
            );
          }),
          (BN.prototype.sub = function (s) {
            return this.clone().isub(s);
          });
        var comb10MulTo = function (s, x, W) {
          var X,
            ee,
            et,
            er = s.words,
            ei = x.words,
            eo = W.words,
            ea = 0,
            es = 0 | er[0],
            el = 8191 & es,
            ec = es >>> 13,
            eu = 0 | er[1],
            ed = 8191 & eu,
            eh = eu >>> 13,
            ep = 0 | er[2],
            ef = 8191 & ep,
            eg = ep >>> 13,
            em = 0 | er[3],
            ew = 8191 & em,
            eb = em >>> 13,
            ev = 0 | er[4],
            ey = 8191 & ev,
            e_ = ev >>> 13,
            eC = 0 | er[5],
            ex = 8191 & eC,
            eE = eC >>> 13,
            eA = 0 | er[6],
            eS = 8191 & eA,
            ek = eA >>> 13,
            eT = 0 | er[7],
            eI = 8191 & eT,
            eP = eT >>> 13,
            eR = 0 | er[8],
            eN = 8191 & eR,
            eO = eR >>> 13,
            eM = 0 | er[9],
            eD = 8191 & eM,
            eB = eM >>> 13,
            eL = 0 | ei[0],
            ej = 8191 & eL,
            eU = eL >>> 13,
            e$ = 0 | ei[1],
            eF = 8191 & e$,
            ez = e$ >>> 13,
            eH = 0 | ei[2],
            eV = 8191 & eH,
            eW = eH >>> 13,
            eK = 0 | ei[3],
            eZ = 8191 & eK,
            eG = eK >>> 13,
            eY = 0 | ei[4],
            eQ = 8191 & eY,
            eJ = eY >>> 13,
            eX = 0 | ei[5],
            e0 = 8191 & eX,
            e1 = eX >>> 13,
            e2 = 0 | ei[6],
            e3 = 8191 & e2,
            e5 = e2 >>> 13,
            e6 = 0 | ei[7],
            e4 = 8191 & e6,
            e8 = e6 >>> 13,
            e9 = 0 | ei[8],
            e7 = 8191 & e9,
            tt = e9 >>> 13,
            tr = 0 | ei[9],
            ta = 8191 & tr,
            ts = tr >>> 13;
          (W.negative = s.negative ^ x.negative), (W.length = 19);
          var tl =
            (((ea + (X = Math.imul(el, ej))) | 0) +
              ((8191 &
                (ee = ((ee = Math.imul(el, eU)) + Math.imul(ec, ej)) | 0)) <<
                13)) |
            0;
          (ea =
            ((((et = Math.imul(ec, eU)) + (ee >>> 13)) | 0) + (tl >>> 26)) | 0),
            (tl &= 67108863),
            (X = Math.imul(ed, ej)),
            (ee = ((ee = Math.imul(ed, eU)) + Math.imul(eh, ej)) | 0),
            (et = Math.imul(eh, eU));
          var tc =
            (((ea + (X = (X + Math.imul(el, eF)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, ez)) | 0) + Math.imul(ec, eF)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, ez)) | 0) + (ee >>> 13)) | 0) +
              (tc >>> 26)) |
            0),
            (tc &= 67108863),
            (X = Math.imul(ef, ej)),
            (ee = ((ee = Math.imul(ef, eU)) + Math.imul(eg, ej)) | 0),
            (et = Math.imul(eg, eU)),
            (X = (X + Math.imul(ed, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, ez)) | 0) + Math.imul(eh, eF)) | 0),
            (et = (et + Math.imul(eh, ez)) | 0);
          var tu =
            (((ea + (X = (X + Math.imul(el, eV)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, eW)) | 0) + Math.imul(ec, eV)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, eW)) | 0) + (ee >>> 13)) | 0) +
              (tu >>> 26)) |
            0),
            (tu &= 67108863),
            (X = Math.imul(ew, ej)),
            (ee = ((ee = Math.imul(ew, eU)) + Math.imul(eb, ej)) | 0),
            (et = Math.imul(eb, eU)),
            (X = (X + Math.imul(ef, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, ez)) | 0) + Math.imul(eg, eF)) | 0),
            (et = (et + Math.imul(eg, ez)) | 0),
            (X = (X + Math.imul(ed, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, eW)) | 0) + Math.imul(eh, eV)) | 0),
            (et = (et + Math.imul(eh, eW)) | 0);
          var td =
            (((ea + (X = (X + Math.imul(el, eZ)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, eG)) | 0) + Math.imul(ec, eZ)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, eG)) | 0) + (ee >>> 13)) | 0) +
              (td >>> 26)) |
            0),
            (td &= 67108863),
            (X = Math.imul(ey, ej)),
            (ee = ((ee = Math.imul(ey, eU)) + Math.imul(e_, ej)) | 0),
            (et = Math.imul(e_, eU)),
            (X = (X + Math.imul(ew, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, ez)) | 0) + Math.imul(eb, eF)) | 0),
            (et = (et + Math.imul(eb, ez)) | 0),
            (X = (X + Math.imul(ef, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, eW)) | 0) + Math.imul(eg, eV)) | 0),
            (et = (et + Math.imul(eg, eW)) | 0),
            (X = (X + Math.imul(ed, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, eG)) | 0) + Math.imul(eh, eZ)) | 0),
            (et = (et + Math.imul(eh, eG)) | 0);
          var th =
            (((ea + (X = (X + Math.imul(el, eQ)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, eJ)) | 0) + Math.imul(ec, eQ)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, eJ)) | 0) + (ee >>> 13)) | 0) +
              (th >>> 26)) |
            0),
            (th &= 67108863),
            (X = Math.imul(ex, ej)),
            (ee = ((ee = Math.imul(ex, eU)) + Math.imul(eE, ej)) | 0),
            (et = Math.imul(eE, eU)),
            (X = (X + Math.imul(ey, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, ez)) | 0) + Math.imul(e_, eF)) | 0),
            (et = (et + Math.imul(e_, ez)) | 0),
            (X = (X + Math.imul(ew, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, eW)) | 0) + Math.imul(eb, eV)) | 0),
            (et = (et + Math.imul(eb, eW)) | 0),
            (X = (X + Math.imul(ef, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, eG)) | 0) + Math.imul(eg, eZ)) | 0),
            (et = (et + Math.imul(eg, eG)) | 0),
            (X = (X + Math.imul(ed, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, eJ)) | 0) + Math.imul(eh, eQ)) | 0),
            (et = (et + Math.imul(eh, eJ)) | 0);
          var tp =
            (((ea + (X = (X + Math.imul(el, e0)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, e1)) | 0) + Math.imul(ec, e0)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, e1)) | 0) + (ee >>> 13)) | 0) +
              (tp >>> 26)) |
            0),
            (tp &= 67108863),
            (X = Math.imul(eS, ej)),
            (ee = ((ee = Math.imul(eS, eU)) + Math.imul(ek, ej)) | 0),
            (et = Math.imul(ek, eU)),
            (X = (X + Math.imul(ex, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, ez)) | 0) + Math.imul(eE, eF)) | 0),
            (et = (et + Math.imul(eE, ez)) | 0),
            (X = (X + Math.imul(ey, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, eW)) | 0) + Math.imul(e_, eV)) | 0),
            (et = (et + Math.imul(e_, eW)) | 0),
            (X = (X + Math.imul(ew, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, eG)) | 0) + Math.imul(eb, eZ)) | 0),
            (et = (et + Math.imul(eb, eG)) | 0),
            (X = (X + Math.imul(ef, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, eJ)) | 0) + Math.imul(eg, eQ)) | 0),
            (et = (et + Math.imul(eg, eJ)) | 0),
            (X = (X + Math.imul(ed, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, e1)) | 0) + Math.imul(eh, e0)) | 0),
            (et = (et + Math.imul(eh, e1)) | 0);
          var tf =
            (((ea + (X = (X + Math.imul(el, e3)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, e5)) | 0) + Math.imul(ec, e3)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, e5)) | 0) + (ee >>> 13)) | 0) +
              (tf >>> 26)) |
            0),
            (tf &= 67108863),
            (X = Math.imul(eI, ej)),
            (ee = ((ee = Math.imul(eI, eU)) + Math.imul(eP, ej)) | 0),
            (et = Math.imul(eP, eU)),
            (X = (X + Math.imul(eS, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, ez)) | 0) + Math.imul(ek, eF)) | 0),
            (et = (et + Math.imul(ek, ez)) | 0),
            (X = (X + Math.imul(ex, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, eW)) | 0) + Math.imul(eE, eV)) | 0),
            (et = (et + Math.imul(eE, eW)) | 0),
            (X = (X + Math.imul(ey, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, eG)) | 0) + Math.imul(e_, eZ)) | 0),
            (et = (et + Math.imul(e_, eG)) | 0),
            (X = (X + Math.imul(ew, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, eJ)) | 0) + Math.imul(eb, eQ)) | 0),
            (et = (et + Math.imul(eb, eJ)) | 0),
            (X = (X + Math.imul(ef, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, e1)) | 0) + Math.imul(eg, e0)) | 0),
            (et = (et + Math.imul(eg, e1)) | 0),
            (X = (X + Math.imul(ed, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, e5)) | 0) + Math.imul(eh, e3)) | 0),
            (et = (et + Math.imul(eh, e5)) | 0);
          var tg =
            (((ea + (X = (X + Math.imul(el, e4)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, e8)) | 0) + Math.imul(ec, e4)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, e8)) | 0) + (ee >>> 13)) | 0) +
              (tg >>> 26)) |
            0),
            (tg &= 67108863),
            (X = Math.imul(eN, ej)),
            (ee = ((ee = Math.imul(eN, eU)) + Math.imul(eO, ej)) | 0),
            (et = Math.imul(eO, eU)),
            (X = (X + Math.imul(eI, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, ez)) | 0) + Math.imul(eP, eF)) | 0),
            (et = (et + Math.imul(eP, ez)) | 0),
            (X = (X + Math.imul(eS, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, eW)) | 0) + Math.imul(ek, eV)) | 0),
            (et = (et + Math.imul(ek, eW)) | 0),
            (X = (X + Math.imul(ex, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, eG)) | 0) + Math.imul(eE, eZ)) | 0),
            (et = (et + Math.imul(eE, eG)) | 0),
            (X = (X + Math.imul(ey, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, eJ)) | 0) + Math.imul(e_, eQ)) | 0),
            (et = (et + Math.imul(e_, eJ)) | 0),
            (X = (X + Math.imul(ew, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, e1)) | 0) + Math.imul(eb, e0)) | 0),
            (et = (et + Math.imul(eb, e1)) | 0),
            (X = (X + Math.imul(ef, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, e5)) | 0) + Math.imul(eg, e3)) | 0),
            (et = (et + Math.imul(eg, e5)) | 0),
            (X = (X + Math.imul(ed, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, e8)) | 0) + Math.imul(eh, e4)) | 0),
            (et = (et + Math.imul(eh, e8)) | 0);
          var tm =
            (((ea + (X = (X + Math.imul(el, e7)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, tt)) | 0) + Math.imul(ec, e7)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, tt)) | 0) + (ee >>> 13)) | 0) +
              (tm >>> 26)) |
            0),
            (tm &= 67108863),
            (X = Math.imul(eD, ej)),
            (ee = ((ee = Math.imul(eD, eU)) + Math.imul(eB, ej)) | 0),
            (et = Math.imul(eB, eU)),
            (X = (X + Math.imul(eN, eF)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, ez)) | 0) + Math.imul(eO, eF)) | 0),
            (et = (et + Math.imul(eO, ez)) | 0),
            (X = (X + Math.imul(eI, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, eW)) | 0) + Math.imul(eP, eV)) | 0),
            (et = (et + Math.imul(eP, eW)) | 0),
            (X = (X + Math.imul(eS, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, eG)) | 0) + Math.imul(ek, eZ)) | 0),
            (et = (et + Math.imul(ek, eG)) | 0),
            (X = (X + Math.imul(ex, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, eJ)) | 0) + Math.imul(eE, eQ)) | 0),
            (et = (et + Math.imul(eE, eJ)) | 0),
            (X = (X + Math.imul(ey, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, e1)) | 0) + Math.imul(e_, e0)) | 0),
            (et = (et + Math.imul(e_, e1)) | 0),
            (X = (X + Math.imul(ew, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, e5)) | 0) + Math.imul(eb, e3)) | 0),
            (et = (et + Math.imul(eb, e5)) | 0),
            (X = (X + Math.imul(ef, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, e8)) | 0) + Math.imul(eg, e4)) | 0),
            (et = (et + Math.imul(eg, e8)) | 0),
            (X = (X + Math.imul(ed, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ed, tt)) | 0) + Math.imul(eh, e7)) | 0),
            (et = (et + Math.imul(eh, tt)) | 0);
          var tw =
            (((ea + (X = (X + Math.imul(el, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(el, ts)) | 0) + Math.imul(ec, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ec, ts)) | 0) + (ee >>> 13)) | 0) +
              (tw >>> 26)) |
            0),
            (tw &= 67108863),
            (X = Math.imul(eD, eF)),
            (ee = ((ee = Math.imul(eD, ez)) + Math.imul(eB, eF)) | 0),
            (et = Math.imul(eB, ez)),
            (X = (X + Math.imul(eN, eV)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, eW)) | 0) + Math.imul(eO, eV)) | 0),
            (et = (et + Math.imul(eO, eW)) | 0),
            (X = (X + Math.imul(eI, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, eG)) | 0) + Math.imul(eP, eZ)) | 0),
            (et = (et + Math.imul(eP, eG)) | 0),
            (X = (X + Math.imul(eS, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, eJ)) | 0) + Math.imul(ek, eQ)) | 0),
            (et = (et + Math.imul(ek, eJ)) | 0),
            (X = (X + Math.imul(ex, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, e1)) | 0) + Math.imul(eE, e0)) | 0),
            (et = (et + Math.imul(eE, e1)) | 0),
            (X = (X + Math.imul(ey, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, e5)) | 0) + Math.imul(e_, e3)) | 0),
            (et = (et + Math.imul(e_, e5)) | 0),
            (X = (X + Math.imul(ew, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, e8)) | 0) + Math.imul(eb, e4)) | 0),
            (et = (et + Math.imul(eb, e8)) | 0),
            (X = (X + Math.imul(ef, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ef, tt)) | 0) + Math.imul(eg, e7)) | 0),
            (et = (et + Math.imul(eg, tt)) | 0);
          var tb =
            (((ea + (X = (X + Math.imul(ed, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(ed, ts)) | 0) + Math.imul(eh, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eh, ts)) | 0) + (ee >>> 13)) | 0) +
              (tb >>> 26)) |
            0),
            (tb &= 67108863),
            (X = Math.imul(eD, eV)),
            (ee = ((ee = Math.imul(eD, eW)) + Math.imul(eB, eV)) | 0),
            (et = Math.imul(eB, eW)),
            (X = (X + Math.imul(eN, eZ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, eG)) | 0) + Math.imul(eO, eZ)) | 0),
            (et = (et + Math.imul(eO, eG)) | 0),
            (X = (X + Math.imul(eI, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, eJ)) | 0) + Math.imul(eP, eQ)) | 0),
            (et = (et + Math.imul(eP, eJ)) | 0),
            (X = (X + Math.imul(eS, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, e1)) | 0) + Math.imul(ek, e0)) | 0),
            (et = (et + Math.imul(ek, e1)) | 0),
            (X = (X + Math.imul(ex, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, e5)) | 0) + Math.imul(eE, e3)) | 0),
            (et = (et + Math.imul(eE, e5)) | 0),
            (X = (X + Math.imul(ey, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, e8)) | 0) + Math.imul(e_, e4)) | 0),
            (et = (et + Math.imul(e_, e8)) | 0),
            (X = (X + Math.imul(ew, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ew, tt)) | 0) + Math.imul(eb, e7)) | 0),
            (et = (et + Math.imul(eb, tt)) | 0);
          var tv =
            (((ea + (X = (X + Math.imul(ef, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(ef, ts)) | 0) + Math.imul(eg, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eg, ts)) | 0) + (ee >>> 13)) | 0) +
              (tv >>> 26)) |
            0),
            (tv &= 67108863),
            (X = Math.imul(eD, eZ)),
            (ee = ((ee = Math.imul(eD, eG)) + Math.imul(eB, eZ)) | 0),
            (et = Math.imul(eB, eG)),
            (X = (X + Math.imul(eN, eQ)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, eJ)) | 0) + Math.imul(eO, eQ)) | 0),
            (et = (et + Math.imul(eO, eJ)) | 0),
            (X = (X + Math.imul(eI, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, e1)) | 0) + Math.imul(eP, e0)) | 0),
            (et = (et + Math.imul(eP, e1)) | 0),
            (X = (X + Math.imul(eS, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, e5)) | 0) + Math.imul(ek, e3)) | 0),
            (et = (et + Math.imul(ek, e5)) | 0),
            (X = (X + Math.imul(ex, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, e8)) | 0) + Math.imul(eE, e4)) | 0),
            (et = (et + Math.imul(eE, e8)) | 0),
            (X = (X + Math.imul(ey, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ey, tt)) | 0) + Math.imul(e_, e7)) | 0),
            (et = (et + Math.imul(e_, tt)) | 0);
          var ty =
            (((ea + (X = (X + Math.imul(ew, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(ew, ts)) | 0) + Math.imul(eb, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eb, ts)) | 0) + (ee >>> 13)) | 0) +
              (ty >>> 26)) |
            0),
            (ty &= 67108863),
            (X = Math.imul(eD, eQ)),
            (ee = ((ee = Math.imul(eD, eJ)) + Math.imul(eB, eQ)) | 0),
            (et = Math.imul(eB, eJ)),
            (X = (X + Math.imul(eN, e0)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, e1)) | 0) + Math.imul(eO, e0)) | 0),
            (et = (et + Math.imul(eO, e1)) | 0),
            (X = (X + Math.imul(eI, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, e5)) | 0) + Math.imul(eP, e3)) | 0),
            (et = (et + Math.imul(eP, e5)) | 0),
            (X = (X + Math.imul(eS, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, e8)) | 0) + Math.imul(ek, e4)) | 0),
            (et = (et + Math.imul(ek, e8)) | 0),
            (X = (X + Math.imul(ex, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(ex, tt)) | 0) + Math.imul(eE, e7)) | 0),
            (et = (et + Math.imul(eE, tt)) | 0);
          var t_ =
            (((ea + (X = (X + Math.imul(ey, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(ey, ts)) | 0) + Math.imul(e_, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(e_, ts)) | 0) + (ee >>> 13)) | 0) +
              (t_ >>> 26)) |
            0),
            (t_ &= 67108863),
            (X = Math.imul(eD, e0)),
            (ee = ((ee = Math.imul(eD, e1)) + Math.imul(eB, e0)) | 0),
            (et = Math.imul(eB, e1)),
            (X = (X + Math.imul(eN, e3)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, e5)) | 0) + Math.imul(eO, e3)) | 0),
            (et = (et + Math.imul(eO, e5)) | 0),
            (X = (X + Math.imul(eI, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, e8)) | 0) + Math.imul(eP, e4)) | 0),
            (et = (et + Math.imul(eP, e8)) | 0),
            (X = (X + Math.imul(eS, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eS, tt)) | 0) + Math.imul(ek, e7)) | 0),
            (et = (et + Math.imul(ek, tt)) | 0);
          var tC =
            (((ea + (X = (X + Math.imul(ex, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(ex, ts)) | 0) + Math.imul(eE, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eE, ts)) | 0) + (ee >>> 13)) | 0) +
              (tC >>> 26)) |
            0),
            (tC &= 67108863),
            (X = Math.imul(eD, e3)),
            (ee = ((ee = Math.imul(eD, e5)) + Math.imul(eB, e3)) | 0),
            (et = Math.imul(eB, e5)),
            (X = (X + Math.imul(eN, e4)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, e8)) | 0) + Math.imul(eO, e4)) | 0),
            (et = (et + Math.imul(eO, e8)) | 0),
            (X = (X + Math.imul(eI, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eI, tt)) | 0) + Math.imul(eP, e7)) | 0),
            (et = (et + Math.imul(eP, tt)) | 0);
          var tx =
            (((ea + (X = (X + Math.imul(eS, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(eS, ts)) | 0) + Math.imul(ek, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(ek, ts)) | 0) + (ee >>> 13)) | 0) +
              (tx >>> 26)) |
            0),
            (tx &= 67108863),
            (X = Math.imul(eD, e4)),
            (ee = ((ee = Math.imul(eD, e8)) + Math.imul(eB, e4)) | 0),
            (et = Math.imul(eB, e8)),
            (X = (X + Math.imul(eN, e7)) | 0),
            (ee =
              ((ee = (ee + Math.imul(eN, tt)) | 0) + Math.imul(eO, e7)) | 0),
            (et = (et + Math.imul(eO, tt)) | 0);
          var tE =
            (((ea + (X = (X + Math.imul(eI, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(eI, ts)) | 0) + Math.imul(eP, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eP, ts)) | 0) + (ee >>> 13)) | 0) +
              (tE >>> 26)) |
            0),
            (tE &= 67108863),
            (X = Math.imul(eD, e7)),
            (ee = ((ee = Math.imul(eD, tt)) + Math.imul(eB, e7)) | 0),
            (et = Math.imul(eB, tt));
          var tA =
            (((ea + (X = (X + Math.imul(eN, ta)) | 0)) | 0) +
              ((8191 &
                (ee =
                  ((ee = (ee + Math.imul(eN, ts)) | 0) + Math.imul(eO, ta)) |
                  0)) <<
                13)) |
            0;
          (ea =
            ((((et = (et + Math.imul(eO, ts)) | 0) + (ee >>> 13)) | 0) +
              (tA >>> 26)) |
            0),
            (tA &= 67108863);
          var tS =
            (((ea + (X = Math.imul(eD, ta))) | 0) +
              ((8191 &
                (ee = ((ee = Math.imul(eD, ts)) + Math.imul(eB, ta)) | 0)) <<
                13)) |
            0;
          return (
            (ea =
              ((((et = Math.imul(eB, ts)) + (ee >>> 13)) | 0) + (tS >>> 26)) |
              0),
            (tS &= 67108863),
            (eo[0] = tl),
            (eo[1] = tc),
            (eo[2] = tu),
            (eo[3] = td),
            (eo[4] = th),
            (eo[5] = tp),
            (eo[6] = tf),
            (eo[7] = tg),
            (eo[8] = tm),
            (eo[9] = tw),
            (eo[10] = tb),
            (eo[11] = tv),
            (eo[12] = ty),
            (eo[13] = t_),
            (eo[14] = tC),
            (eo[15] = tx),
            (eo[16] = tE),
            (eo[17] = tA),
            (eo[18] = tS),
            0 !== ea && ((eo[19] = ea), W.length++),
            W
          );
        };
        function jumboMulTo(s, x, W) {
          return new FFTM().mulp(s, x, W);
        }
        function FFTM(s, x) {
          (this.x = s), (this.y = x);
        }
        Math.imul || (comb10MulTo = smallMulTo),
          (BN.prototype.mulTo = function (s, x) {
            var W = this.length + s.length;
            return 10 === this.length && 10 === s.length
              ? comb10MulTo(this, s, x)
              : W < 63
              ? smallMulTo(this, s, x)
              : W < 1024
              ? (function (s, x, W) {
                  (W.negative = x.negative ^ s.negative),
                    (W.length = s.length + x.length);
                  for (var X = 0, ee = 0, et = 0; et < W.length - 1; et++) {
                    var er = ee;
                    ee = 0;
                    for (
                      var ei = 67108863 & X,
                        eo = Math.min(et, x.length - 1),
                        ea = Math.max(0, et - s.length + 1);
                      ea <= eo;
                      ea++
                    ) {
                      var es = et - ea,
                        el = (0 | s.words[es]) * (0 | x.words[ea]),
                        ec = 67108863 & el;
                      (er = (er + ((el / 67108864) | 0)) | 0),
                        (ei = 67108863 & (ec = (ec + ei) | 0)),
                        (ee += (er = (er + (ec >>> 26)) | 0) >>> 26),
                        (er &= 67108863);
                    }
                    (W.words[et] = ei), (X = er), (er = ee);
                  }
                  return 0 !== X ? (W.words[et] = X) : W.length--, W.strip();
                })(this, s, x)
              : jumboMulTo(this, s, x);
          }),
          (FFTM.prototype.makeRBT = function (s) {
            for (
              var x = Array(s), W = BN.prototype._countBits(s) - 1, X = 0;
              X < s;
              X++
            )
              x[X] = this.revBin(X, W, s);
            return x;
          }),
          (FFTM.prototype.revBin = function (s, x, W) {
            if (0 === s || s === W - 1) return s;
            for (var X = 0, ee = 0; ee < x; ee++)
              (X |= (1 & s) << (x - ee - 1)), (s >>= 1);
            return X;
          }),
          (FFTM.prototype.permute = function (s, x, W, X, ee, et) {
            for (var er = 0; er < et; er++)
              (X[er] = x[s[er]]), (ee[er] = W[s[er]]);
          }),
          (FFTM.prototype.transform = function (s, x, W, X, ee, et) {
            this.permute(et, s, x, W, X, ee);
            for (var er = 1; er < ee; er <<= 1)
              for (
                var ei = er << 1,
                  eo = Math.cos((2 * Math.PI) / ei),
                  ea = Math.sin((2 * Math.PI) / ei),
                  es = 0;
                es < ee;
                es += ei
              )
                for (var el = eo, ec = ea, eu = 0; eu < er; eu++) {
                  var ed = W[es + eu],
                    eh = X[es + eu],
                    ep = W[es + eu + er],
                    ef = X[es + eu + er],
                    eg = el * ep - ec * ef;
                  (ef = el * ef + ec * ep),
                    (ep = eg),
                    (W[es + eu] = ed + ep),
                    (X[es + eu] = eh + ef),
                    (W[es + eu + er] = ed - ep),
                    (X[es + eu + er] = eh - ef),
                    eu !== ei &&
                      ((eg = eo * el - ea * ec),
                      (ec = eo * ec + ea * el),
                      (el = eg));
                }
          }),
          (FFTM.prototype.guessLen13b = function (s, x) {
            var W = 1 | Math.max(x, s),
              X = 1 & W,
              ee = 0;
            for (W = (W / 2) | 0; W; W >>>= 1) ee++;
            return 1 << (ee + 1 + X);
          }),
          (FFTM.prototype.conjugate = function (s, x, W) {
            if (!(W <= 1))
              for (var X = 0; X < W / 2; X++) {
                var ee = s[X];
                (s[X] = s[W - X - 1]),
                  (s[W - X - 1] = ee),
                  (ee = x[X]),
                  (x[X] = -x[W - X - 1]),
                  (x[W - X - 1] = -ee);
              }
          }),
          (FFTM.prototype.normalize13b = function (s, x) {
            for (var W = 0, X = 0; X < x / 2; X++) {
              var ee =
                8192 * Math.round(s[2 * X + 1] / x) +
                Math.round(s[2 * X] / x) +
                W;
              (s[X] = 67108863 & ee),
                (W = ee < 67108864 ? 0 : (ee / 67108864) | 0);
            }
            return s;
          }),
          (FFTM.prototype.convert13b = function (s, x, W, X) {
            for (var ee = 0, et = 0; et < x; et++)
              (ee += 0 | s[et]),
                (W[2 * et] = 8191 & ee),
                (ee >>>= 13),
                (W[2 * et + 1] = 8191 & ee),
                (ee >>>= 13);
            for (et = 2 * x; et < X; ++et) W[et] = 0;
            assert(0 === ee), assert((-8192 & ee) == 0);
          }),
          (FFTM.prototype.stub = function (s) {
            for (var x = Array(s), W = 0; W < s; W++) x[W] = 0;
            return x;
          }),
          (FFTM.prototype.mulp = function (s, x, W) {
            var X = 2 * this.guessLen13b(s.length, x.length),
              ee = this.makeRBT(X),
              et = this.stub(X),
              er = Array(X),
              ei = Array(X),
              eo = Array(X),
              ea = Array(X),
              es = Array(X),
              el = Array(X),
              ec = W.words;
            (ec.length = X),
              this.convert13b(s.words, s.length, er, X),
              this.convert13b(x.words, x.length, ea, X),
              this.transform(er, et, ei, eo, X, ee),
              this.transform(ea, et, es, el, X, ee);
            for (var eu = 0; eu < X; eu++) {
              var ed = ei[eu] * es[eu] - eo[eu] * el[eu];
              (eo[eu] = ei[eu] * el[eu] + eo[eu] * es[eu]), (ei[eu] = ed);
            }
            return (
              this.conjugate(ei, eo, X),
              this.transform(ei, eo, ec, et, X, ee),
              this.conjugate(ec, et, X),
              this.normalize13b(ec, X),
              (W.negative = s.negative ^ x.negative),
              (W.length = s.length + x.length),
              W.strip()
            );
          }),
          (BN.prototype.mul = function (s) {
            var x = new BN(null);
            return (x.words = Array(this.length + s.length)), this.mulTo(s, x);
          }),
          (BN.prototype.mulf = function (s) {
            var x = new BN(null);
            return (
              (x.words = Array(this.length + s.length)), jumboMulTo(this, s, x)
            );
          }),
          (BN.prototype.imul = function (s) {
            return this.clone().mulTo(s, this);
          }),
          (BN.prototype.imuln = function (s) {
            assert("number" == typeof s), assert(s < 67108864);
            for (var x = 0, W = 0; W < this.length; W++) {
              var X = (0 | this.words[W]) * s,
                ee = (67108863 & X) + (67108863 & x);
              (x >>= 26),
                (x += ((X / 67108864) | 0) + (ee >>> 26)),
                (this.words[W] = 67108863 & ee);
            }
            return 0 !== x && ((this.words[W] = x), this.length++), this;
          }),
          (BN.prototype.muln = function (s) {
            return this.clone().imuln(s);
          }),
          (BN.prototype.sqr = function () {
            return this.mul(this);
          }),
          (BN.prototype.isqr = function () {
            return this.imul(this.clone());
          }),
          (BN.prototype.pow = function (s) {
            var x = (function (s) {
              for (var x = Array(s.bitLength()), W = 0; W < x.length; W++) {
                var X = (W / 26) | 0,
                  ee = W % 26;
                x[W] = (s.words[X] & (1 << ee)) >>> ee;
              }
              return x;
            })(s);
            if (0 === x.length) return new BN(1);
            for (
              var W = this, X = 0;
              X < x.length && 0 === x[X];
              X++, W = W.sqr()
            );
            if (++X < x.length)
              for (var ee = W.sqr(); X < x.length; X++, ee = ee.sqr())
                0 !== x[X] && (W = W.mul(ee));
            return W;
          }),
          (BN.prototype.iushln = function (s) {
            assert("number" == typeof s && s >= 0);
            var x,
              W = s % 26,
              X = (s - W) / 26,
              ee = (67108863 >>> (26 - W)) << (26 - W);
            if (0 !== W) {
              var et = 0;
              for (x = 0; x < this.length; x++) {
                var er = this.words[x] & ee,
                  ei = ((0 | this.words[x]) - er) << W;
                (this.words[x] = ei | et), (et = er >>> (26 - W));
              }
              et && ((this.words[x] = et), this.length++);
            }
            if (0 !== X) {
              for (x = this.length - 1; x >= 0; x--)
                this.words[x + X] = this.words[x];
              for (x = 0; x < X; x++) this.words[x] = 0;
              this.length += X;
            }
            return this.strip();
          }),
          (BN.prototype.ishln = function (s) {
            return assert(0 === this.negative), this.iushln(s);
          }),
          (BN.prototype.iushrn = function (s, x, W) {
            assert("number" == typeof s && s >= 0),
              (X = x ? (x - (x % 26)) / 26 : 0);
            var X,
              ee = s % 26,
              et = Math.min((s - ee) / 26, this.length),
              er = 67108863 ^ ((67108863 >>> ee) << ee);
            if (((X -= et), (X = Math.max(0, X)), W)) {
              for (var ei = 0; ei < et; ei++) W.words[ei] = this.words[ei];
              W.length = et;
            }
            if (0 === et);
            else if (this.length > et)
              for (this.length -= et, ei = 0; ei < this.length; ei++)
                this.words[ei] = this.words[ei + et];
            else (this.words[0] = 0), (this.length = 1);
            var eo = 0;
            for (ei = this.length - 1; ei >= 0 && (0 !== eo || ei >= X); ei--) {
              var ea = 0 | this.words[ei];
              (this.words[ei] = (eo << (26 - ee)) | (ea >>> ee)),
                (eo = ea & er);
            }
            return (
              W && 0 !== eo && (W.words[W.length++] = eo),
              0 === this.length && ((this.words[0] = 0), (this.length = 1)),
              this.strip()
            );
          }),
          (BN.prototype.ishrn = function (s, x, W) {
            return assert(0 === this.negative), this.iushrn(s, x, W);
          }),
          (BN.prototype.shln = function (s) {
            return this.clone().ishln(s);
          }),
          (BN.prototype.ushln = function (s) {
            return this.clone().iushln(s);
          }),
          (BN.prototype.shrn = function (s) {
            return this.clone().ishrn(s);
          }),
          (BN.prototype.ushrn = function (s) {
            return this.clone().iushrn(s);
          }),
          (BN.prototype.testn = function (s) {
            assert("number" == typeof s && s >= 0);
            var x = s % 26,
              W = (s - x) / 26;
            return !(this.length <= W) && !!(this.words[W] & (1 << x));
          }),
          (BN.prototype.imaskn = function (s) {
            assert("number" == typeof s && s >= 0);
            var x = s % 26,
              W = (s - x) / 26;
            return (assert(
              0 === this.negative,
              "imaskn works only with positive numbers"
            ),
            this.length <= W)
              ? this
              : (0 !== x && W++,
                (this.length = Math.min(W, this.length)),
                0 !== x &&
                  (this.words[this.length - 1] &=
                    67108863 ^ ((67108863 >>> x) << x)),
                this.strip());
          }),
          (BN.prototype.maskn = function (s) {
            return this.clone().imaskn(s);
          }),
          (BN.prototype.iaddn = function (s) {
            return (assert("number" == typeof s), assert(s < 67108864), s < 0)
              ? this.isubn(-s)
              : 0 !== this.negative
              ? (1 === this.length && (0 | this.words[0]) < s
                  ? ((this.words[0] = s - (0 | this.words[0])),
                    (this.negative = 0))
                  : ((this.negative = 0), this.isubn(s), (this.negative = 1)),
                this)
              : this._iaddn(s);
          }),
          (BN.prototype._iaddn = function (s) {
            this.words[0] += s;
            for (var x = 0; x < this.length && this.words[x] >= 67108864; x++)
              (this.words[x] -= 67108864),
                x === this.length - 1
                  ? (this.words[x + 1] = 1)
                  : this.words[x + 1]++;
            return (this.length = Math.max(this.length, x + 1)), this;
          }),
          (BN.prototype.isubn = function (s) {
            if ((assert("number" == typeof s), assert(s < 67108864), s < 0))
              return this.iaddn(-s);
            if (0 !== this.negative)
              return (
                (this.negative = 0), this.iaddn(s), (this.negative = 1), this
              );
            if (((this.words[0] -= s), 1 === this.length && this.words[0] < 0))
              (this.words[0] = -this.words[0]), (this.negative = 1);
            else
              for (var x = 0; x < this.length && this.words[x] < 0; x++)
                (this.words[x] += 67108864), (this.words[x + 1] -= 1);
            return this.strip();
          }),
          (BN.prototype.addn = function (s) {
            return this.clone().iaddn(s);
          }),
          (BN.prototype.subn = function (s) {
            return this.clone().isubn(s);
          }),
          (BN.prototype.iabs = function () {
            return (this.negative = 0), this;
          }),
          (BN.prototype.abs = function () {
            return this.clone().iabs();
          }),
          (BN.prototype._ishlnsubmul = function (s, x, W) {
            var X,
              ee,
              et = s.length + W;
            this._expand(et);
            var er = 0;
            for (X = 0; X < s.length; X++) {
              ee = (0 | this.words[X + W]) + er;
              var ei = (0 | s.words[X]) * x;
              (ee -= 67108863 & ei),
                (er = (ee >> 26) - ((ei / 67108864) | 0)),
                (this.words[X + W] = 67108863 & ee);
            }
            for (; X < this.length - W; X++)
              (er = (ee = (0 | this.words[X + W]) + er) >> 26),
                (this.words[X + W] = 67108863 & ee);
            if (0 === er) return this.strip();
            for (assert(-1 === er), er = 0, X = 0; X < this.length; X++)
              (er = (ee = -(0 | this.words[X]) + er) >> 26),
                (this.words[X] = 67108863 & ee);
            return (this.negative = 1), this.strip();
          }),
          (BN.prototype._wordDiv = function (s, x) {
            var W,
              X = this.length - s.length,
              ee = this.clone(),
              et = s,
              er = 0 | et.words[et.length - 1];
            0 != (X = 26 - this._countBits(er)) &&
              ((et = et.ushln(X)),
              ee.iushln(X),
              (er = 0 | et.words[et.length - 1]));
            var ei = ee.length - et.length;
            if ("mod" !== x) {
              ((W = new BN(null)).length = ei + 1), (W.words = Array(W.length));
              for (var eo = 0; eo < W.length; eo++) W.words[eo] = 0;
            }
            var ea = ee.clone()._ishlnsubmul(et, 1, ei);
            0 === ea.negative && ((ee = ea), W && (W.words[ei] = 1));
            for (var es = ei - 1; es >= 0; es--) {
              var el =
                (0 | ee.words[et.length + es]) * 67108864 +
                (0 | ee.words[et.length + es - 1]);
              for (
                el = Math.min((el / er) | 0, 67108863),
                  ee._ishlnsubmul(et, el, es);
                0 !== ee.negative;

              )
                el--,
                  (ee.negative = 0),
                  ee._ishlnsubmul(et, 1, es),
                  ee.isZero() || (ee.negative ^= 1);
              W && (W.words[es] = el);
            }
            return (
              W && W.strip(),
              ee.strip(),
              "div" !== x && 0 !== X && ee.iushrn(X),
              { div: W || null, mod: ee }
            );
          }),
          (BN.prototype.divmod = function (s, x, W) {
            var X, ee, et;
            return (assert(!s.isZero()), this.isZero())
              ? { div: new BN(0), mod: new BN(0) }
              : 0 !== this.negative && 0 === s.negative
              ? ((et = this.neg().divmod(s, x)),
                "mod" !== x && (X = et.div.neg()),
                "div" !== x &&
                  ((ee = et.mod.neg()), W && 0 !== ee.negative && ee.iadd(s)),
                { div: X, mod: ee })
              : 0 === this.negative && 0 !== s.negative
              ? ((et = this.divmod(s.neg(), x)),
                "mod" !== x && (X = et.div.neg()),
                { div: X, mod: et.mod })
              : (this.negative & s.negative) != 0
              ? ((et = this.neg().divmod(s.neg(), x)),
                "div" !== x &&
                  ((ee = et.mod.neg()), W && 0 !== ee.negative && ee.isub(s)),
                { div: et.div, mod: ee })
              : s.length > this.length || 0 > this.cmp(s)
              ? { div: new BN(0), mod: this }
              : 1 === s.length
              ? "div" === x
                ? { div: this.divn(s.words[0]), mod: null }
                : "mod" === x
                ? { div: null, mod: new BN(this.modn(s.words[0])) }
                : {
                    div: this.divn(s.words[0]),
                    mod: new BN(this.modn(s.words[0])),
                  }
              : this._wordDiv(s, x);
          }),
          (BN.prototype.div = function (s) {
            return this.divmod(s, "div", !1).div;
          }),
          (BN.prototype.mod = function (s) {
            return this.divmod(s, "mod", !1).mod;
          }),
          (BN.prototype.umod = function (s) {
            return this.divmod(s, "mod", !0).mod;
          }),
          (BN.prototype.divRound = function (s) {
            var x = this.divmod(s);
            if (x.mod.isZero()) return x.div;
            var W = 0 !== x.div.negative ? x.mod.isub(s) : x.mod,
              X = s.ushrn(1),
              ee = s.andln(1),
              et = W.cmp(X);
            return et < 0 || (1 === ee && 0 === et)
              ? x.div
              : 0 !== x.div.negative
              ? x.div.isubn(1)
              : x.div.iaddn(1);
          }),
          (BN.prototype.modn = function (s) {
            assert(s <= 67108863);
            for (var x = 67108864 % s, W = 0, X = this.length - 1; X >= 0; X--)
              W = (x * W + (0 | this.words[X])) % s;
            return W;
          }),
          (BN.prototype.idivn = function (s) {
            assert(s <= 67108863);
            for (var x = 0, W = this.length - 1; W >= 0; W--) {
              var X = (0 | this.words[W]) + 67108864 * x;
              (this.words[W] = (X / s) | 0), (x = X % s);
            }
            return this.strip();
          }),
          (BN.prototype.divn = function (s) {
            return this.clone().idivn(s);
          }),
          (BN.prototype.egcd = function (s) {
            assert(0 === s.negative), assert(!s.isZero());
            var x = this,
              W = s.clone();
            x = 0 !== x.negative ? x.umod(s) : x.clone();
            for (
              var X = new BN(1),
                ee = new BN(0),
                et = new BN(0),
                er = new BN(1),
                ei = 0;
              x.isEven() && W.isEven();

            )
              x.iushrn(1), W.iushrn(1), ++ei;
            for (var eo = W.clone(), ea = x.clone(); !x.isZero(); ) {
              for (
                var es = 0, el = 1;
                (x.words[0] & el) == 0 && es < 26;
                ++es, el <<= 1
              );
              if (es > 0)
                for (x.iushrn(es); es-- > 0; )
                  (X.isOdd() || ee.isOdd()) && (X.iadd(eo), ee.isub(ea)),
                    X.iushrn(1),
                    ee.iushrn(1);
              for (
                var ec = 0, eu = 1;
                (W.words[0] & eu) == 0 && ec < 26;
                ++ec, eu <<= 1
              );
              if (ec > 0)
                for (W.iushrn(ec); ec-- > 0; )
                  (et.isOdd() || er.isOdd()) && (et.iadd(eo), er.isub(ea)),
                    et.iushrn(1),
                    er.iushrn(1);
              x.cmp(W) >= 0
                ? (x.isub(W), X.isub(et), ee.isub(er))
                : (W.isub(x), et.isub(X), er.isub(ee));
            }
            return { a: et, b: er, gcd: W.iushln(ei) };
          }),
          (BN.prototype._invmp = function (s) {
            assert(0 === s.negative), assert(!s.isZero());
            var x,
              W = this,
              X = s.clone();
            W = 0 !== W.negative ? W.umod(s) : W.clone();
            for (
              var ee = new BN(1), et = new BN(0), er = X.clone();
              W.cmpn(1) > 0 && X.cmpn(1) > 0;

            ) {
              for (
                var ei = 0, eo = 1;
                (W.words[0] & eo) == 0 && ei < 26;
                ++ei, eo <<= 1
              );
              if (ei > 0)
                for (W.iushrn(ei); ei-- > 0; )
                  ee.isOdd() && ee.iadd(er), ee.iushrn(1);
              for (
                var ea = 0, es = 1;
                (X.words[0] & es) == 0 && ea < 26;
                ++ea, es <<= 1
              );
              if (ea > 0)
                for (X.iushrn(ea); ea-- > 0; )
                  et.isOdd() && et.iadd(er), et.iushrn(1);
              W.cmp(X) >= 0
                ? (W.isub(X), ee.isub(et))
                : (X.isub(W), et.isub(ee));
            }
            return 0 > (x = 0 === W.cmpn(1) ? ee : et).cmpn(0) && x.iadd(s), x;
          }),
          (BN.prototype.gcd = function (s) {
            if (this.isZero()) return s.abs();
            if (s.isZero()) return this.abs();
            var x = this.clone(),
              W = s.clone();
            (x.negative = 0), (W.negative = 0);
            for (var X = 0; x.isEven() && W.isEven(); X++)
              x.iushrn(1), W.iushrn(1);
            for (;;) {
              for (; x.isEven(); ) x.iushrn(1);
              for (; W.isEven(); ) W.iushrn(1);
              var ee = x.cmp(W);
              if (ee < 0) {
                var et = x;
                (x = W), (W = et);
              } else if (0 === ee || 0 === W.cmpn(1)) break;
              x.isub(W);
            }
            return W.iushln(X);
          }),
          (BN.prototype.invm = function (s) {
            return this.egcd(s).a.umod(s);
          }),
          (BN.prototype.isEven = function () {
            return (1 & this.words[0]) == 0;
          }),
          (BN.prototype.isOdd = function () {
            return (1 & this.words[0]) == 1;
          }),
          (BN.prototype.andln = function (s) {
            return this.words[0] & s;
          }),
          (BN.prototype.bincn = function (s) {
            assert("number" == typeof s);
            var x = s % 26,
              W = (s - x) / 26,
              X = 1 << x;
            if (this.length <= W)
              return this._expand(W + 1), (this.words[W] |= X), this;
            for (var ee = X, et = W; 0 !== ee && et < this.length; et++) {
              var er = 0 | this.words[et];
              (er += ee),
                (ee = er >>> 26),
                (er &= 67108863),
                (this.words[et] = er);
            }
            return 0 !== ee && ((this.words[et] = ee), this.length++), this;
          }),
          (BN.prototype.isZero = function () {
            return 1 === this.length && 0 === this.words[0];
          }),
          (BN.prototype.cmpn = function (s) {
            var x,
              W = s < 0;
            if (0 !== this.negative && !W) return -1;
            if (0 === this.negative && W) return 1;
            if ((this.strip(), this.length > 1)) x = 1;
            else {
              W && (s = -s), assert(s <= 67108863, "Number is too big");
              var X = 0 | this.words[0];
              x = X === s ? 0 : X < s ? -1 : 1;
            }
            return 0 !== this.negative ? 0 | -x : x;
          }),
          (BN.prototype.cmp = function (s) {
            if (0 !== this.negative && 0 === s.negative) return -1;
            if (0 === this.negative && 0 !== s.negative) return 1;
            var x = this.ucmp(s);
            return 0 !== this.negative ? 0 | -x : x;
          }),
          (BN.prototype.ucmp = function (s) {
            if (this.length > s.length) return 1;
            if (this.length < s.length) return -1;
            for (var x = 0, W = this.length - 1; W >= 0; W--) {
              var X = 0 | this.words[W],
                ee = 0 | s.words[W];
              if (X !== ee) {
                X < ee ? (x = -1) : X > ee && (x = 1);
                break;
              }
            }
            return x;
          }),
          (BN.prototype.gtn = function (s) {
            return 1 === this.cmpn(s);
          }),
          (BN.prototype.gt = function (s) {
            return 1 === this.cmp(s);
          }),
          (BN.prototype.gten = function (s) {
            return this.cmpn(s) >= 0;
          }),
          (BN.prototype.gte = function (s) {
            return this.cmp(s) >= 0;
          }),
          (BN.prototype.ltn = function (s) {
            return -1 === this.cmpn(s);
          }),
          (BN.prototype.lt = function (s) {
            return -1 === this.cmp(s);
          }),
          (BN.prototype.lten = function (s) {
            return 0 >= this.cmpn(s);
          }),
          (BN.prototype.lte = function (s) {
            return 0 >= this.cmp(s);
          }),
          (BN.prototype.eqn = function (s) {
            return 0 === this.cmpn(s);
          }),
          (BN.prototype.eq = function (s) {
            return 0 === this.cmp(s);
          }),
          (BN.red = function (s) {
            return new Red(s);
          }),
          (BN.prototype.toRed = function (s) {
            return (
              assert(!this.red, "Already a number in reduction context"),
              assert(0 === this.negative, "red works only with positives"),
              s.convertTo(this)._forceRed(s)
            );
          }),
          (BN.prototype.fromRed = function () {
            return (
              assert(
                this.red,
                "fromRed works only with numbers in reduction context"
              ),
              this.red.convertFrom(this)
            );
          }),
          (BN.prototype._forceRed = function (s) {
            return (this.red = s), this;
          }),
          (BN.prototype.forceRed = function (s) {
            return (
              assert(!this.red, "Already a number in reduction context"),
              this._forceRed(s)
            );
          }),
          (BN.prototype.redAdd = function (s) {
            return (
              assert(this.red, "redAdd works only with red numbers"),
              this.red.add(this, s)
            );
          }),
          (BN.prototype.redIAdd = function (s) {
            return (
              assert(this.red, "redIAdd works only with red numbers"),
              this.red.iadd(this, s)
            );
          }),
          (BN.prototype.redSub = function (s) {
            return (
              assert(this.red, "redSub works only with red numbers"),
              this.red.sub(this, s)
            );
          }),
          (BN.prototype.redISub = function (s) {
            return (
              assert(this.red, "redISub works only with red numbers"),
              this.red.isub(this, s)
            );
          }),
          (BN.prototype.redShl = function (s) {
            return (
              assert(this.red, "redShl works only with red numbers"),
              this.red.shl(this, s)
            );
          }),
          (BN.prototype.redMul = function (s) {
            return (
              assert(this.red, "redMul works only with red numbers"),
              this.red._verify2(this, s),
              this.red.mul(this, s)
            );
          }),
          (BN.prototype.redIMul = function (s) {
            return (
              assert(this.red, "redMul works only with red numbers"),
              this.red._verify2(this, s),
              this.red.imul(this, s)
            );
          }),
          (BN.prototype.redSqr = function () {
            return (
              assert(this.red, "redSqr works only with red numbers"),
              this.red._verify1(this),
              this.red.sqr(this)
            );
          }),
          (BN.prototype.redISqr = function () {
            return (
              assert(this.red, "redISqr works only with red numbers"),
              this.red._verify1(this),
              this.red.isqr(this)
            );
          }),
          (BN.prototype.redSqrt = function () {
            return (
              assert(this.red, "redSqrt works only with red numbers"),
              this.red._verify1(this),
              this.red.sqrt(this)
            );
          }),
          (BN.prototype.redInvm = function () {
            return (
              assert(this.red, "redInvm works only with red numbers"),
              this.red._verify1(this),
              this.red.invm(this)
            );
          }),
          (BN.prototype.redNeg = function () {
            return (
              assert(this.red, "redNeg works only with red numbers"),
              this.red._verify1(this),
              this.red.neg(this)
            );
          }),
          (BN.prototype.redPow = function (s) {
            return (
              assert(this.red && !s.red, "redPow(normalNum)"),
              this.red._verify1(this),
              this.red.pow(this, s)
            );
          });
        var ei = { k256: null, p224: null, p192: null, p25519: null };
        function MPrime(s, x) {
          (this.name = s),
            (this.p = new BN(x, 16)),
            (this.n = this.p.bitLength()),
            (this.k = new BN(1).iushln(this.n).isub(this.p)),
            (this.tmp = this._tmp());
        }
        function K256() {
          MPrime.call(
            this,
            "k256",
            "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
          );
        }
        function P224() {
          MPrime.call(
            this,
            "p224",
            "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
          );
        }
        function P192() {
          MPrime.call(
            this,
            "p192",
            "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
          );
        }
        function P25519() {
          MPrime.call(
            this,
            "25519",
            "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
          );
        }
        function Red(s) {
          if ("string" == typeof s) {
            var x = BN._prime(s);
            (this.m = x.p), (this.prime = x);
          } else
            assert(s.gtn(1), "modulus must be greater than 1"),
              (this.m = s),
              (this.prime = null);
        }
        function Mont(s) {
          Red.call(this, s),
            (this.shift = this.m.bitLength()),
            this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
            (this.r = new BN(1).iushln(this.shift)),
            (this.r2 = this.imod(this.r.sqr())),
            (this.rinv = this.r._invmp(this.m)),
            (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
            (this.minv = this.minv.umod(this.r)),
            (this.minv = this.r.sub(this.minv));
        }
        (MPrime.prototype._tmp = function () {
          var s = new BN(null);
          return (s.words = Array(Math.ceil(this.n / 13))), s;
        }),
          (MPrime.prototype.ireduce = function (s) {
            var x,
              W = s;
            do
              this.split(W, this.tmp),
                (x = (W = (W = this.imulK(W)).iadd(this.tmp)).bitLength());
            while (x > this.n);
            var X = x < this.n ? -1 : W.ucmp(this.p);
            return (
              0 === X
                ? ((W.words[0] = 0), (W.length = 1))
                : X > 0
                ? W.isub(this.p)
                : void 0 !== W.strip
                ? W.strip()
                : W._strip(),
              W
            );
          }),
          (MPrime.prototype.split = function (s, x) {
            s.iushrn(this.n, 0, x);
          }),
          (MPrime.prototype.imulK = function (s) {
            return s.imul(this.k);
          }),
          inherits(K256, MPrime),
          (K256.prototype.split = function (s, x) {
            for (var W = Math.min(s.length, 9), X = 0; X < W; X++)
              x.words[X] = s.words[X];
            if (((x.length = W), s.length <= 9)) {
              (s.words[0] = 0), (s.length = 1);
              return;
            }
            var ee = s.words[9];
            for (
              X = 10, x.words[x.length++] = 4194303 & ee;
              X < s.length;
              X++
            ) {
              var et = 0 | s.words[X];
              (s.words[X - 10] = ((4194303 & et) << 4) | (ee >>> 22)),
                (ee = et);
            }
            (ee >>>= 22),
              (s.words[X - 10] = ee),
              0 === ee && s.length > 10 ? (s.length -= 10) : (s.length -= 9);
          }),
          (K256.prototype.imulK = function (s) {
            (s.words[s.length] = 0),
              (s.words[s.length + 1] = 0),
              (s.length += 2);
            for (var x = 0, W = 0; W < s.length; W++) {
              var X = 0 | s.words[W];
              (x += 977 * X),
                (s.words[W] = 67108863 & x),
                (x = 64 * X + ((x / 67108864) | 0));
            }
            return (
              0 === s.words[s.length - 1] &&
                (s.length--, 0 === s.words[s.length - 1] && s.length--),
              s
            );
          }),
          inherits(P224, MPrime),
          inherits(P192, MPrime),
          inherits(P25519, MPrime),
          (P25519.prototype.imulK = function (s) {
            for (var x = 0, W = 0; W < s.length; W++) {
              var X = (0 | s.words[W]) * 19 + x,
                ee = 67108863 & X;
              (X >>>= 26), (s.words[W] = ee), (x = X);
            }
            return 0 !== x && (s.words[s.length++] = x), s;
          }),
          (BN._prime = function (s) {
            var x;
            if (ei[s]) return ei[s];
            if ("k256" === s) x = new K256();
            else if ("p224" === s) x = new P224();
            else if ("p192" === s) x = new P192();
            else if ("p25519" === s) x = new P25519();
            else throw Error("Unknown prime " + s);
            return (ei[s] = x), x;
          }),
          (Red.prototype._verify1 = function (s) {
            assert(0 === s.negative, "red works only with positives"),
              assert(s.red, "red works only with red numbers");
          }),
          (Red.prototype._verify2 = function (s, x) {
            assert(
              (s.negative | x.negative) == 0,
              "red works only with positives"
            ),
              assert(
                s.red && s.red === x.red,
                "red works only with red numbers"
              );
          }),
          (Red.prototype.imod = function (s) {
            return this.prime
              ? this.prime.ireduce(s)._forceRed(this)
              : s.umod(this.m)._forceRed(this);
          }),
          (Red.prototype.neg = function (s) {
            return s.isZero() ? s.clone() : this.m.sub(s)._forceRed(this);
          }),
          (Red.prototype.add = function (s, x) {
            this._verify2(s, x);
            var W = s.add(x);
            return W.cmp(this.m) >= 0 && W.isub(this.m), W._forceRed(this);
          }),
          (Red.prototype.iadd = function (s, x) {
            this._verify2(s, x);
            var W = s.iadd(x);
            return W.cmp(this.m) >= 0 && W.isub(this.m), W;
          }),
          (Red.prototype.sub = function (s, x) {
            this._verify2(s, x);
            var W = s.sub(x);
            return 0 > W.cmpn(0) && W.iadd(this.m), W._forceRed(this);
          }),
          (Red.prototype.isub = function (s, x) {
            this._verify2(s, x);
            var W = s.isub(x);
            return 0 > W.cmpn(0) && W.iadd(this.m), W;
          }),
          (Red.prototype.shl = function (s, x) {
            return this._verify1(s), this.imod(s.ushln(x));
          }),
          (Red.prototype.imul = function (s, x) {
            return this._verify2(s, x), this.imod(s.imul(x));
          }),
          (Red.prototype.mul = function (s, x) {
            return this._verify2(s, x), this.imod(s.mul(x));
          }),
          (Red.prototype.isqr = function (s) {
            return this.imul(s, s.clone());
          }),
          (Red.prototype.sqr = function (s) {
            return this.mul(s, s);
          }),
          (Red.prototype.sqrt = function (s) {
            if (s.isZero()) return s.clone();
            var x = this.m.andln(3);
            if ((assert(x % 2 == 1), 3 === x)) {
              var W = this.m.add(new BN(1)).iushrn(2);
              return this.pow(s, W);
            }
            for (
              var X = this.m.subn(1), ee = 0;
              !X.isZero() && 0 === X.andln(1);

            )
              ee++, X.iushrn(1);
            assert(!X.isZero());
            var et = new BN(1).toRed(this),
              er = et.redNeg(),
              ei = this.m.subn(1).iushrn(1),
              eo = this.m.bitLength();
            for (
              eo = new BN(2 * eo * eo).toRed(this);
              0 !== this.pow(eo, ei).cmp(er);

            )
              eo.redIAdd(er);
            for (
              var ea = this.pow(eo, X),
                es = this.pow(s, X.addn(1).iushrn(1)),
                el = this.pow(s, X),
                ec = ee;
              0 !== el.cmp(et);

            ) {
              for (var eu = el, ed = 0; 0 !== eu.cmp(et); ed++)
                eu = eu.redSqr();
              assert(ed < ec);
              var eh = this.pow(ea, new BN(1).iushln(ec - ed - 1));
              (es = es.redMul(eh)),
                (ea = eh.redSqr()),
                (el = el.redMul(ea)),
                (ec = ed);
            }
            return es;
          }),
          (Red.prototype.invm = function (s) {
            var x = s._invmp(this.m);
            return 0 !== x.negative
              ? ((x.negative = 0), this.imod(x).redNeg())
              : this.imod(x);
          }),
          (Red.prototype.pow = function (s, x) {
            if (x.isZero()) return new BN(1).toRed(this);
            if (0 === x.cmpn(1)) return s.clone();
            var W = Array(16);
            (W[0] = new BN(1).toRed(this)), (W[1] = s);
            for (var X = 2; X < W.length; X++) W[X] = this.mul(W[X - 1], s);
            var ee = W[0],
              et = 0,
              er = 0,
              ei = x.bitLength() % 26;
            for (0 === ei && (ei = 26), X = x.length - 1; X >= 0; X--) {
              for (var eo = x.words[X], ea = ei - 1; ea >= 0; ea--) {
                var es = (eo >> ea) & 1;
                if (
                  (ee !== W[0] && (ee = this.sqr(ee)), 0 === es && 0 === et)
                ) {
                  er = 0;
                  continue;
                }
                (et <<= 1),
                  (et |= es),
                  (4 == ++er || (0 === X && 0 === ea)) &&
                    ((ee = this.mul(ee, W[et])), (er = 0), (et = 0));
              }
              ei = 26;
            }
            return ee;
          }),
          (Red.prototype.convertTo = function (s) {
            var x = s.umod(this.m);
            return x === s ? x.clone() : x;
          }),
          (Red.prototype.convertFrom = function (s) {
            var x = s.clone();
            return (x.red = null), x;
          }),
          (BN.mont = function (s) {
            return new Mont(s);
          }),
          inherits(Mont, Red),
          (Mont.prototype.convertTo = function (s) {
            return this.imod(s.ushln(this.shift));
          }),
          (Mont.prototype.convertFrom = function (s) {
            var x = this.imod(s.mul(this.rinv));
            return (x.red = null), x;
          }),
          (Mont.prototype.imul = function (s, x) {
            if (s.isZero() || x.isZero())
              return (s.words[0] = 0), (s.length = 1), s;
            var W = s.imul(x),
              X = W.maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m),
              ee = W.isub(X).iushrn(this.shift),
              et = ee;
            return (
              ee.cmp(this.m) >= 0
                ? (et = ee.isub(this.m))
                : 0 > ee.cmpn(0) && (et = ee.iadd(this.m)),
              et._forceRed(this)
            );
          }),
          (Mont.prototype.mul = function (s, x) {
            if (s.isZero() || x.isZero()) return new BN(0)._forceRed(this);
            var W = s.mul(x),
              X = W.maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m),
              ee = W.isub(X).iushrn(this.shift),
              et = ee;
            return (
              ee.cmp(this.m) >= 0
                ? (et = ee.isub(this.m))
                : 0 > ee.cmpn(0) && (et = ee.iadd(this.m)),
              et._forceRed(this)
            );
          }),
          (Mont.prototype.invm = function (s) {
            return this.imod(s._invmp(this.m).mul(this.r2))._forceRed(this);
          });
      })((s = W.nmd(s)), this);
    },
    62378: function (s) {
      "use strict";
      s.exports = function (s) {
        for (var x = [], W = s.length, X = 0; X < W; X++) {
          var ee = s.charCodeAt(X);
          if (ee >= 55296 && ee <= 56319 && W > X + 1) {
            var et = s.charCodeAt(X + 1);
            et >= 56320 &&
              et <= 57343 &&
              ((ee = (ee - 55296) * 1024 + et - 56320 + 65536), (X += 1));
          }
          if (ee < 128) {
            x.push(ee);
            continue;
          }
          if (ee < 2048) {
            x.push((ee >> 6) | 192), x.push((63 & ee) | 128);
            continue;
          }
          if (ee < 55296 || (ee >= 57344 && ee < 65536)) {
            x.push((ee >> 12) | 224),
              x.push(((ee >> 6) & 63) | 128),
              x.push((63 & ee) | 128);
            continue;
          }
          if (ee >= 65536 && ee <= 1114111) {
            x.push((ee >> 18) | 240),
              x.push(((ee >> 12) & 63) | 128),
              x.push(((ee >> 6) & 63) | 128),
              x.push((63 & ee) | 128);
            continue;
          }
          x.push(239, 191, 189);
        }
        return new Uint8Array(x).buffer;
      };
    },
    26729: function (s) {
      "use strict";
      var x = Object.prototype.hasOwnProperty,
        W = "~";
      function Events() {}
      function EE(s, x, W) {
        (this.fn = s), (this.context = x), (this.once = W || !1);
      }
      function addListener(s, x, X, ee, et) {
        if ("function" != typeof X)
          throw TypeError("The listener must be a function");
        var er = new EE(X, ee || s, et),
          ei = W ? W + x : x;
        return (
          s._events[ei]
            ? s._events[ei].fn
              ? (s._events[ei] = [s._events[ei], er])
              : s._events[ei].push(er)
            : ((s._events[ei] = er), s._eventsCount++),
          s
        );
      }
      function clearEvent(s, x) {
        0 == --s._eventsCount
          ? (s._events = new Events())
          : delete s._events[x];
      }
      function EventEmitter() {
        (this._events = new Events()), (this._eventsCount = 0);
      }
      Object.create &&
        ((Events.prototype = Object.create(null)),
        new Events().__proto__ || (W = !1)),
        (EventEmitter.prototype.eventNames = function () {
          var s,
            X,
            ee = [];
          if (0 === this._eventsCount) return ee;
          for (X in (s = this._events))
            x.call(s, X) && ee.push(W ? X.slice(1) : X);
          return Object.getOwnPropertySymbols
            ? ee.concat(Object.getOwnPropertySymbols(s))
            : ee;
        }),
        (EventEmitter.prototype.listeners = function (s) {
          var x = W ? W + s : s,
            X = this._events[x];
          if (!X) return [];
          if (X.fn) return [X.fn];
          for (var ee = 0, et = X.length, er = Array(et); ee < et; ee++)
            er[ee] = X[ee].fn;
          return er;
        }),
        (EventEmitter.prototype.listenerCount = function (s) {
          var x = W ? W + s : s,
            X = this._events[x];
          return X ? (X.fn ? 1 : X.length) : 0;
        }),
        (EventEmitter.prototype.emit = function (s, x, X, ee, et, er) {
          var ei = W ? W + s : s;
          if (!this._events[ei]) return !1;
          var eo,
            ea,
            es = this._events[ei],
            el = arguments.length;
          if (es.fn) {
            switch (
              (es.once && this.removeListener(s, es.fn, void 0, !0), el)
            ) {
              case 1:
                return es.fn.call(es.context), !0;
              case 2:
                return es.fn.call(es.context, x), !0;
              case 3:
                return es.fn.call(es.context, x, X), !0;
              case 4:
                return es.fn.call(es.context, x, X, ee), !0;
              case 5:
                return es.fn.call(es.context, x, X, ee, et), !0;
              case 6:
                return es.fn.call(es.context, x, X, ee, et, er), !0;
            }
            for (ea = 1, eo = Array(el - 1); ea < el; ea++)
              eo[ea - 1] = arguments[ea];
            es.fn.apply(es.context, eo);
          } else {
            var ec,
              eu = es.length;
            for (ea = 0; ea < eu; ea++)
              switch (
                (es[ea].once && this.removeListener(s, es[ea].fn, void 0, !0),
                el)
              ) {
                case 1:
                  es[ea].fn.call(es[ea].context);
                  break;
                case 2:
                  es[ea].fn.call(es[ea].context, x);
                  break;
                case 3:
                  es[ea].fn.call(es[ea].context, x, X);
                  break;
                case 4:
                  es[ea].fn.call(es[ea].context, x, X, ee);
                  break;
                default:
                  if (!eo)
                    for (ec = 1, eo = Array(el - 1); ec < el; ec++)
                      eo[ec - 1] = arguments[ec];
                  es[ea].fn.apply(es[ea].context, eo);
              }
          }
          return !0;
        }),
        (EventEmitter.prototype.on = function (s, x, W) {
          return addListener(this, s, x, W, !1);
        }),
        (EventEmitter.prototype.once = function (s, x, W) {
          return addListener(this, s, x, W, !0);
        }),
        (EventEmitter.prototype.removeListener = function (s, x, X, ee) {
          var et = W ? W + s : s;
          if (!this._events[et]) return this;
          if (!x) return clearEvent(this, et), this;
          var er = this._events[et];
          if (er.fn)
            er.fn !== x ||
              (ee && !er.once) ||
              (X && er.context !== X) ||
              clearEvent(this, et);
          else {
            for (var ei = 0, eo = [], ea = er.length; ei < ea; ei++)
              (er[ei].fn !== x ||
                (ee && !er[ei].once) ||
                (X && er[ei].context !== X)) &&
                eo.push(er[ei]);
            eo.length
              ? (this._events[et] = 1 === eo.length ? eo[0] : eo)
              : clearEvent(this, et);
          }
          return this;
        }),
        (EventEmitter.prototype.removeAllListeners = function (s) {
          var x;
          return (
            s
              ? ((x = W ? W + s : s), this._events[x] && clearEvent(this, x))
              : ((this._events = new Events()), (this._eventsCount = 0)),
            this
          );
        }),
        (EventEmitter.prototype.off = EventEmitter.prototype.removeListener),
        (EventEmitter.prototype.addListener = EventEmitter.prototype.on),
        (EventEmitter.prefixed = W),
        (EventEmitter.EventEmitter = EventEmitter),
        (s.exports = EventEmitter);
    },
    17187: function (s) {
      "use strict";
      var x,
        W = "object" == typeof Reflect ? Reflect : null,
        X =
          W && "function" == typeof W.apply
            ? W.apply
            : function (s, x, W) {
                return Function.prototype.apply.call(s, x, W);
              };
      x =
        W && "function" == typeof W.ownKeys
          ? W.ownKeys
          : Object.getOwnPropertySymbols
          ? function (s) {
              return Object.getOwnPropertyNames(s).concat(
                Object.getOwnPropertySymbols(s)
              );
            }
          : function (s) {
              return Object.getOwnPropertyNames(s);
            };
      var ee =
        Number.isNaN ||
        function (s) {
          return s != s;
        };
      function EventEmitter() {
        EventEmitter.init.call(this);
      }
      (s.exports = EventEmitter),
        (s.exports.once = function (s, x) {
          return new Promise(function (W, X) {
            function errorListener(W) {
              s.removeListener(x, resolver), X(W);
            }
            function resolver() {
              "function" == typeof s.removeListener &&
                s.removeListener("error", errorListener),
                W([].slice.call(arguments));
            }
            eventTargetAgnosticAddListener(s, x, resolver, { once: !0 }),
              "error" !== x &&
                "function" == typeof s.on &&
                eventTargetAgnosticAddListener(s, "error", errorListener, {
                  once: !0,
                });
          });
        }),
        (EventEmitter.EventEmitter = EventEmitter),
        (EventEmitter.prototype._events = void 0),
        (EventEmitter.prototype._eventsCount = 0),
        (EventEmitter.prototype._maxListeners = void 0);
      var et = 10;
      function checkListener(s) {
        if ("function" != typeof s)
          throw TypeError(
            'The "listener" argument must be of type Function. Received type ' +
              typeof s
          );
      }
      function _getMaxListeners(s) {
        return void 0 === s._maxListeners
          ? EventEmitter.defaultMaxListeners
          : s._maxListeners;
      }
      function _addListener(s, x, W, X) {
        if (
          (checkListener(W),
          void 0 === (et = s._events)
            ? ((et = s._events = Object.create(null)), (s._eventsCount = 0))
            : (void 0 !== et.newListener &&
                (s.emit("newListener", x, W.listener ? W.listener : W),
                (et = s._events)),
              (er = et[x])),
          void 0 === er)
        )
          (er = et[x] = W), ++s._eventsCount;
        else if (
          ("function" == typeof er
            ? (er = et[x] = X ? [W, er] : [er, W])
            : X
            ? er.unshift(W)
            : er.push(W),
          (ee = _getMaxListeners(s)) > 0 && er.length > ee && !er.warned)
        ) {
          er.warned = !0;
          var ee,
            et,
            er,
            ei = Error(
              "Possible EventEmitter memory leak detected. " +
                er.length +
                " " +
                String(x) +
                " listeners added. Use emitter.setMaxListeners() to increase limit"
            );
          (ei.name = "MaxListenersExceededWarning"),
            (ei.emitter = s),
            (ei.type = x),
            (ei.count = er.length),
            console && console.warn && console.warn(ei);
        }
        return s;
      }
      function onceWrapper() {
        if (!this.fired)
          return (this.target.removeListener(this.type, this.wrapFn),
          (this.fired = !0),
          0 == arguments.length)
            ? this.listener.call(this.target)
            : this.listener.apply(this.target, arguments);
      }
      function _onceWrap(s, x, W) {
        var X = { fired: !1, wrapFn: void 0, target: s, type: x, listener: W },
          ee = onceWrapper.bind(X);
        return (ee.listener = W), (X.wrapFn = ee), ee;
      }
      function _listeners(s, x, W) {
        var X = s._events;
        if (void 0 === X) return [];
        var ee = X[x];
        return void 0 === ee
          ? []
          : "function" == typeof ee
          ? W
            ? [ee.listener || ee]
            : [ee]
          : W
          ? (function (s) {
              for (var x = Array(s.length), W = 0; W < x.length; ++W)
                x[W] = s[W].listener || s[W];
              return x;
            })(ee)
          : arrayClone(ee, ee.length);
      }
      function listenerCount(s) {
        var x = this._events;
        if (void 0 !== x) {
          var W = x[s];
          if ("function" == typeof W) return 1;
          if (void 0 !== W) return W.length;
        }
        return 0;
      }
      function arrayClone(s, x) {
        for (var W = Array(x), X = 0; X < x; ++X) W[X] = s[X];
        return W;
      }
      function eventTargetAgnosticAddListener(s, x, W, X) {
        if ("function" == typeof s.on) X.once ? s.once(x, W) : s.on(x, W);
        else if ("function" == typeof s.addEventListener)
          s.addEventListener(x, function wrapListener(ee) {
            X.once && s.removeEventListener(x, wrapListener), W(ee);
          });
        else
          throw TypeError(
            'The "emitter" argument must be of type EventEmitter. Received type ' +
              typeof s
          );
      }
      Object.defineProperty(EventEmitter, "defaultMaxListeners", {
        enumerable: !0,
        get: function () {
          return et;
        },
        set: function (s) {
          if ("number" != typeof s || s < 0 || ee(s))
            throw RangeError(
              'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
                s +
                "."
            );
          et = s;
        },
      }),
        (EventEmitter.init = function () {
          (void 0 === this._events ||
            this._events === Object.getPrototypeOf(this)._events) &&
            ((this._events = Object.create(null)), (this._eventsCount = 0)),
            (this._maxListeners = this._maxListeners || void 0);
        }),
        (EventEmitter.prototype.setMaxListeners = function (s) {
          if ("number" != typeof s || s < 0 || ee(s))
            throw RangeError(
              'The value of "n" is out of range. It must be a non-negative number. Received ' +
                s +
                "."
            );
          return (this._maxListeners = s), this;
        }),
        (EventEmitter.prototype.getMaxListeners = function () {
          return _getMaxListeners(this);
        }),
        (EventEmitter.prototype.emit = function (s) {
          for (var x = [], W = 1; W < arguments.length; W++)
            x.push(arguments[W]);
          var ee = "error" === s,
            et = this._events;
          if (void 0 !== et) ee = ee && void 0 === et.error;
          else if (!ee) return !1;
          if (ee) {
            if ((x.length > 0 && (er = x[0]), er instanceof Error)) throw er;
            var er,
              ei = Error(
                "Unhandled error." + (er ? " (" + er.message + ")" : "")
              );
            throw ((ei.context = er), ei);
          }
          var eo = et[s];
          if (void 0 === eo) return !1;
          if ("function" == typeof eo) X(eo, this, x);
          else
            for (
              var ea = eo.length, es = arrayClone(eo, ea), W = 0;
              W < ea;
              ++W
            )
              X(es[W], this, x);
          return !0;
        }),
        (EventEmitter.prototype.addListener = function (s, x) {
          return _addListener(this, s, x, !1);
        }),
        (EventEmitter.prototype.on = EventEmitter.prototype.addListener),
        (EventEmitter.prototype.prependListener = function (s, x) {
          return _addListener(this, s, x, !0);
        }),
        (EventEmitter.prototype.once = function (s, x) {
          return checkListener(x), this.on(s, _onceWrap(this, s, x)), this;
        }),
        (EventEmitter.prototype.prependOnceListener = function (s, x) {
          return (
            checkListener(x),
            this.prependListener(s, _onceWrap(this, s, x)),
            this
          );
        }),
        (EventEmitter.prototype.removeListener = function (s, x) {
          var W, X, ee, et, er;
          if (
            (checkListener(x),
            void 0 === (X = this._events) || void 0 === (W = X[s]))
          )
            return this;
          if (W === x || W.listener === x)
            0 == --this._eventsCount
              ? (this._events = Object.create(null))
              : (delete X[s],
                X.removeListener &&
                  this.emit("removeListener", s, W.listener || x));
          else if ("function" != typeof W) {
            for (ee = -1, et = W.length - 1; et >= 0; et--)
              if (W[et] === x || W[et].listener === x) {
                (er = W[et].listener), (ee = et);
                break;
              }
            if (ee < 0) return this;
            0 === ee
              ? W.shift()
              : (function (s, x) {
                  for (; x + 1 < s.length; x++) s[x] = s[x + 1];
                  s.pop();
                })(W, ee),
              1 === W.length && (X[s] = W[0]),
              void 0 !== X.removeListener &&
                this.emit("removeListener", s, er || x);
          }
          return this;
        }),
        (EventEmitter.prototype.off = EventEmitter.prototype.removeListener),
        (EventEmitter.prototype.removeAllListeners = function (s) {
          var x, W, X;
          if (void 0 === (W = this._events)) return this;
          if (void 0 === W.removeListener)
            return (
              0 == arguments.length
                ? ((this._events = Object.create(null)),
                  (this._eventsCount = 0))
                : void 0 !== W[s] &&
                  (0 == --this._eventsCount
                    ? (this._events = Object.create(null))
                    : delete W[s]),
              this
            );
          if (0 == arguments.length) {
            var ee,
              et = Object.keys(W);
            for (X = 0; X < et.length; ++X)
              "removeListener" !== (ee = et[X]) && this.removeAllListeners(ee);
            return (
              this.removeAllListeners("removeListener"),
              (this._events = Object.create(null)),
              (this._eventsCount = 0),
              this
            );
          }
          if ("function" == typeof (x = W[s])) this.removeListener(s, x);
          else if (void 0 !== x)
            for (X = x.length - 1; X >= 0; X--) this.removeListener(s, x[X]);
          return this;
        }),
        (EventEmitter.prototype.listeners = function (s) {
          return _listeners(this, s, !0);
        }),
        (EventEmitter.prototype.rawListeners = function (s) {
          return _listeners(this, s, !1);
        }),
        (EventEmitter.listenerCount = function (s, x) {
          return "function" == typeof s.listenerCount
            ? s.listenerCount(x)
            : listenerCount.call(s, x);
        }),
        (EventEmitter.prototype.listenerCount = listenerCount),
        (EventEmitter.prototype.eventNames = function () {
          return this._eventsCount > 0 ? x(this._events) : [];
        });
    },
    33715: function (s, x, W) {
      (x.utils = W(26436)),
        (x.common = W(95772)),
        (x.sha = W(89041)),
        (x.ripemd = W(12949)),
        (x.hmac = W(52344)),
        (x.sha1 = x.sha.sha1),
        (x.sha256 = x.sha.sha256),
        (x.sha224 = x.sha.sha224),
        (x.sha384 = x.sha.sha384),
        (x.sha512 = x.sha.sha512),
        (x.ripemd160 = x.ripemd.ripemd160);
    },
    95772: function (s, x, W) {
      "use strict";
      var X = W(26436),
        ee = W(79746);
      function BlockHash() {
        (this.pending = null),
          (this.pendingTotal = 0),
          (this.blockSize = this.constructor.blockSize),
          (this.outSize = this.constructor.outSize),
          (this.hmacStrength = this.constructor.hmacStrength),
          (this.padLength = this.constructor.padLength / 8),
          (this.endian = "big"),
          (this._delta8 = this.blockSize / 8),
          (this._delta32 = this.blockSize / 32);
      }
      (x.BlockHash = BlockHash),
        (BlockHash.prototype.update = function (s, x) {
          if (
            ((s = X.toArray(s, x)),
            this.pending
              ? (this.pending = this.pending.concat(s))
              : (this.pending = s),
            (this.pendingTotal += s.length),
            this.pending.length >= this._delta8)
          ) {
            var W = (s = this.pending).length % this._delta8;
            (this.pending = s.slice(s.length - W, s.length)),
              0 === this.pending.length && (this.pending = null),
              (s = X.join32(s, 0, s.length - W, this.endian));
            for (var ee = 0; ee < s.length; ee += this._delta32)
              this._update(s, ee, ee + this._delta32);
          }
          return this;
        }),
        (BlockHash.prototype.digest = function (s) {
          return (
            this.update(this._pad()), ee(null === this.pending), this._digest(s)
          );
        }),
        (BlockHash.prototype._pad = function () {
          var s = this.pendingTotal,
            x = this._delta8,
            W = x - ((s + this.padLength) % x),
            X = Array(W + this.padLength);
          X[0] = 128;
          for (var ee = 1; ee < W; ee++) X[ee] = 0;
          if (((s <<= 3), "big" === this.endian)) {
            for (var et = 8; et < this.padLength; et++) X[ee++] = 0;
            (X[ee++] = 0),
              (X[ee++] = 0),
              (X[ee++] = 0),
              (X[ee++] = 0),
              (X[ee++] = (s >>> 24) & 255),
              (X[ee++] = (s >>> 16) & 255),
              (X[ee++] = (s >>> 8) & 255),
              (X[ee++] = 255 & s);
          } else
            for (
              et = 8,
                X[ee++] = 255 & s,
                X[ee++] = (s >>> 8) & 255,
                X[ee++] = (s >>> 16) & 255,
                X[ee++] = (s >>> 24) & 255,
                X[ee++] = 0,
                X[ee++] = 0,
                X[ee++] = 0,
                X[ee++] = 0;
              et < this.padLength;
              et++
            )
              X[ee++] = 0;
          return X;
        });
    },
    52344: function (s, x, W) {
      "use strict";
      var X = W(26436),
        ee = W(79746);
      function Hmac(s, x, W) {
        if (!(this instanceof Hmac)) return new Hmac(s, x, W);
        (this.Hash = s),
          (this.blockSize = s.blockSize / 8),
          (this.outSize = s.outSize / 8),
          (this.inner = null),
          (this.outer = null),
          this._init(X.toArray(x, W));
      }
      (s.exports = Hmac),
        (Hmac.prototype._init = function (s) {
          s.length > this.blockSize && (s = new this.Hash().update(s).digest()),
            ee(s.length <= this.blockSize);
          for (var x = s.length; x < this.blockSize; x++) s.push(0);
          for (x = 0; x < s.length; x++) s[x] ^= 54;
          for (x = 0, this.inner = new this.Hash().update(s); x < s.length; x++)
            s[x] ^= 106;
          this.outer = new this.Hash().update(s);
        }),
        (Hmac.prototype.update = function (s, x) {
          return this.inner.update(s, x), this;
        }),
        (Hmac.prototype.digest = function (s) {
          return this.outer.update(this.inner.digest()), this.outer.digest(s);
        });
    },
    12949: function (s, x, W) {
      "use strict";
      var X = W(26436),
        ee = W(95772),
        et = X.rotl32,
        er = X.sum32,
        ei = X.sum32_3,
        eo = X.sum32_4,
        ea = ee.BlockHash;
      function RIPEMD160() {
        if (!(this instanceof RIPEMD160)) return new RIPEMD160();
        ea.call(this),
          (this.h = [
            1732584193, 4023233417, 2562383102, 271733878, 3285377520,
          ]),
          (this.endian = "little");
      }
      function f(s, x, W, X) {
        return s <= 15
          ? x ^ W ^ X
          : s <= 31
          ? (x & W) | (~x & X)
          : s <= 47
          ? (x | ~W) ^ X
          : s <= 63
          ? (x & X) | (W & ~X)
          : x ^ (W | ~X);
      }
      X.inherits(RIPEMD160, ea),
        (x.ripemd160 = RIPEMD160),
        (RIPEMD160.blockSize = 512),
        (RIPEMD160.outSize = 160),
        (RIPEMD160.hmacStrength = 192),
        (RIPEMD160.padLength = 64),
        (RIPEMD160.prototype._update = function (s, x) {
          for (
            var W = this.h[0],
              X = this.h[1],
              ee = this.h[2],
              ea = this.h[3],
              ed = this.h[4],
              eh = W,
              ep = X,
              ef = ee,
              eg = ea,
              em = ed,
              ew = 0;
            ew < 80;
            ew++
          ) {
            var eb,
              ev,
              ey = er(
                et(
                  eo(
                    W,
                    f(ew, X, ee, ea),
                    s[es[ew] + x],
                    (eb = ew) <= 15
                      ? 0
                      : eb <= 31
                      ? 1518500249
                      : eb <= 47
                      ? 1859775393
                      : eb <= 63
                      ? 2400959708
                      : 2840853838
                  ),
                  ec[ew]
                ),
                ed
              );
            (W = ed),
              (ed = ea),
              (ea = et(ee, 10)),
              (ee = X),
              (X = ey),
              (ey = er(
                et(
                  eo(
                    eh,
                    f(79 - ew, ep, ef, eg),
                    s[el[ew] + x],
                    (ev = ew) <= 15
                      ? 1352829926
                      : ev <= 31
                      ? 1548603684
                      : ev <= 47
                      ? 1836072691
                      : ev <= 63
                      ? 2053994217
                      : 0
                  ),
                  eu[ew]
                ),
                em
              )),
              (eh = em),
              (em = eg),
              (eg = et(ef, 10)),
              (ef = ep),
              (ep = ey);
          }
          (ey = ei(this.h[1], ee, eg)),
            (this.h[1] = ei(this.h[2], ea, em)),
            (this.h[2] = ei(this.h[3], ed, eh)),
            (this.h[3] = ei(this.h[4], W, ep)),
            (this.h[4] = ei(this.h[0], X, ef)),
            (this.h[0] = ey);
        }),
        (RIPEMD160.prototype._digest = function (s) {
          return "hex" === s
            ? X.toHex32(this.h, "little")
            : X.split32(this.h, "little");
        });
      var es = [
          0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10,
          6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7,
          0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5,
          6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13,
        ],
        el = [
          5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0,
          13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8,
          12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10,
          14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11,
        ],
        ec = [
          11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13,
          11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13,
          15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5,
          6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5,
          6,
        ],
        eu = [
          8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7,
          12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14,
          12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9,
          12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,
        ];
    },
    89041: function (s, x, W) {
      "use strict";
      (x.sha1 = W(84761)),
        (x.sha224 = W(10799)),
        (x.sha256 = W(89344)),
        (x.sha384 = W(80772)),
        (x.sha512 = W(45900));
    },
    84761: function (s, x, W) {
      "use strict";
      var X = W(26436),
        ee = W(95772),
        et = W(37038),
        er = X.rotl32,
        ei = X.sum32,
        eo = X.sum32_5,
        ea = et.ft_1,
        es = ee.BlockHash,
        el = [1518500249, 1859775393, 2400959708, 3395469782];
      function SHA1() {
        if (!(this instanceof SHA1)) return new SHA1();
        es.call(this),
          (this.h = [
            1732584193, 4023233417, 2562383102, 271733878, 3285377520,
          ]),
          (this.W = Array(80));
      }
      X.inherits(SHA1, es),
        (s.exports = SHA1),
        (SHA1.blockSize = 512),
        (SHA1.outSize = 160),
        (SHA1.hmacStrength = 80),
        (SHA1.padLength = 64),
        (SHA1.prototype._update = function (s, x) {
          for (var W = this.W, X = 0; X < 16; X++) W[X] = s[x + X];
          for (; X < W.length; X++)
            W[X] = er(W[X - 3] ^ W[X - 8] ^ W[X - 14] ^ W[X - 16], 1);
          var ee = this.h[0],
            et = this.h[1],
            es = this.h[2],
            ec = this.h[3],
            eu = this.h[4];
          for (X = 0; X < W.length; X++) {
            var ed = ~~(X / 20),
              eh = eo(er(ee, 5), ea(ed, et, es, ec), eu, W[X], el[ed]);
            (eu = ec), (ec = es), (es = er(et, 30)), (et = ee), (ee = eh);
          }
          (this.h[0] = ei(this.h[0], ee)),
            (this.h[1] = ei(this.h[1], et)),
            (this.h[2] = ei(this.h[2], es)),
            (this.h[3] = ei(this.h[3], ec)),
            (this.h[4] = ei(this.h[4], eu));
        }),
        (SHA1.prototype._digest = function (s) {
          return "hex" === s
            ? X.toHex32(this.h, "big")
            : X.split32(this.h, "big");
        });
    },
    10799: function (s, x, W) {
      "use strict";
      var X = W(26436),
        ee = W(89344);
      function SHA224() {
        if (!(this instanceof SHA224)) return new SHA224();
        ee.call(this),
          (this.h = [
            3238371032, 914150663, 812702999, 4144912697, 4290775857,
            1750603025, 1694076839, 3204075428,
          ]);
      }
      X.inherits(SHA224, ee),
        (s.exports = SHA224),
        (SHA224.blockSize = 512),
        (SHA224.outSize = 224),
        (SHA224.hmacStrength = 192),
        (SHA224.padLength = 64),
        (SHA224.prototype._digest = function (s) {
          return "hex" === s
            ? X.toHex32(this.h.slice(0, 7), "big")
            : X.split32(this.h.slice(0, 7), "big");
        });
    },
    89344: function (s, x, W) {
      "use strict";
      var X = W(26436),
        ee = W(95772),
        et = W(37038),
        er = W(79746),
        ei = X.sum32,
        eo = X.sum32_4,
        ea = X.sum32_5,
        es = et.ch32,
        el = et.maj32,
        ec = et.s0_256,
        eu = et.s1_256,
        ed = et.g0_256,
        eh = et.g1_256,
        ep = ee.BlockHash,
        ef = [
          1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,
          2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,
          1925078388, 2162078206, 2614888103, 3248222580, 3835390401,
          4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692,
          1996064986, 2554220882, 2821834349, 2952996808, 3210313671,
          3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912,
          1294757372, 1396182291, 1695183700, 1986661051, 2177026350,
          2456956037, 2730485921, 2820302411, 3259730800, 3345764771,
          3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616,
          659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779,
          1955562222, 2024104815, 2227730452, 2361852424, 2428436474,
          2756734187, 3204031479, 3329325298,
        ];
      function SHA256() {
        if (!(this instanceof SHA256)) return new SHA256();
        ep.call(this),
          (this.h = [
            1779033703, 3144134277, 1013904242, 2773480762, 1359893119,
            2600822924, 528734635, 1541459225,
          ]),
          (this.k = ef),
          (this.W = Array(64));
      }
      X.inherits(SHA256, ep),
        (s.exports = SHA256),
        (SHA256.blockSize = 512),
        (SHA256.outSize = 256),
        (SHA256.hmacStrength = 192),
        (SHA256.padLength = 64),
        (SHA256.prototype._update = function (s, x) {
          for (var W = this.W, X = 0; X < 16; X++) W[X] = s[x + X];
          for (; X < W.length; X++)
            W[X] = eo(eh(W[X - 2]), W[X - 7], ed(W[X - 15]), W[X - 16]);
          var ee = this.h[0],
            et = this.h[1],
            ep = this.h[2],
            ef = this.h[3],
            eg = this.h[4],
            em = this.h[5],
            ew = this.h[6],
            eb = this.h[7];
          for (er(this.k.length === W.length), X = 0; X < W.length; X++) {
            var ev = ea(eb, eu(eg), es(eg, em, ew), this.k[X], W[X]),
              ey = ei(ec(ee), el(ee, et, ep));
            (eb = ew),
              (ew = em),
              (em = eg),
              (eg = ei(ef, ev)),
              (ef = ep),
              (ep = et),
              (et = ee),
              (ee = ei(ev, ey));
          }
          (this.h[0] = ei(this.h[0], ee)),
            (this.h[1] = ei(this.h[1], et)),
            (this.h[2] = ei(this.h[2], ep)),
            (this.h[3] = ei(this.h[3], ef)),
            (this.h[4] = ei(this.h[4], eg)),
            (this.h[5] = ei(this.h[5], em)),
            (this.h[6] = ei(this.h[6], ew)),
            (this.h[7] = ei(this.h[7], eb));
        }),
        (SHA256.prototype._digest = function (s) {
          return "hex" === s
            ? X.toHex32(this.h, "big")
            : X.split32(this.h, "big");
        });
    },
    80772: function (s, x, W) {
      "use strict";
      var X = W(26436),
        ee = W(45900);
      function SHA384() {
        if (!(this instanceof SHA384)) return new SHA384();
        ee.call(this),
          (this.h = [
            3418070365, 3238371032, 1654270250, 914150663, 2438529370,
            812702999, 355462360, 4144912697, 1731405415, 4290775857,
            2394180231, 1750603025, 3675008525, 1694076839, 1203062813,
            3204075428,
          ]);
      }
      X.inherits(SHA384, ee),
        (s.exports = SHA384),
        (SHA384.blockSize = 1024),
        (SHA384.outSize = 384),
        (SHA384.hmacStrength = 192),
        (SHA384.padLength = 128),
        (SHA384.prototype._digest = function (s) {
          return "hex" === s
            ? X.toHex32(this.h.slice(0, 12), "big")
            : X.split32(this.h.slice(0, 12), "big");
        });
    },
    45900: function (s, x, W) {
      "use strict";
      var X = W(26436),
        ee = W(95772),
        et = W(79746),
        er = X.rotr64_hi,
        ei = X.rotr64_lo,
        eo = X.shr64_hi,
        ea = X.shr64_lo,
        es = X.sum64,
        el = X.sum64_hi,
        ec = X.sum64_lo,
        eu = X.sum64_4_hi,
        ed = X.sum64_4_lo,
        eh = X.sum64_5_hi,
        ep = X.sum64_5_lo,
        ef = ee.BlockHash,
        eg = [
          1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399,
          3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265,
          2453635748, 2937671579, 2870763221, 3664609560, 3624381080,
          2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987,
          3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103,
          633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774,
          944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983,
          1495990901, 1249150122, 1856431235, 1555081692, 3175218132,
          1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016,
          2952996808, 2566594879, 3210313671, 3203337956, 3336571891,
          1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895,
          168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372,
          1522805485, 1396182291, 2643833823, 1695183700, 2343527390,
          1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627,
          2730485921, 1290863460, 2820302411, 3158454273, 3259730800,
          3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804,
          1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734,
          3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877,
          3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063,
          2003034995, 1747873779, 3602036899, 1955562222, 1575990012,
          2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044,
          2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573,
          3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711,
          3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554,
          174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315,
          685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100,
          1126000580, 2618297676, 1288033470, 3409855158, 1501505948,
          4234509866, 1607167915, 987167468, 1816402316, 1246189591,
        ];
      function SHA512() {
        if (!(this instanceof SHA512)) return new SHA512();
        ef.call(this),
          (this.h = [
            1779033703, 4089235720, 3144134277, 2227873595, 1013904242,
            4271175723, 2773480762, 1595750129, 1359893119, 2917565137,
            2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209,
          ]),
          (this.k = eg),
          (this.W = Array(160));
      }
      X.inherits(SHA512, ef),
        (s.exports = SHA512),
        (SHA512.blockSize = 1024),
        (SHA512.outSize = 512),
        (SHA512.hmacStrength = 192),
        (SHA512.padLength = 128),
        (SHA512.prototype._prepareBlock = function (s, x) {
          for (var W = this.W, X = 0; X < 32; X++) W[X] = s[x + X];
          for (; X < W.length; X += 2) {
            var ee = (function (s, x) {
                var W = er(s, x, 19) ^ er(x, s, 29) ^ eo(s, x, 6);
                return W < 0 && (W += 4294967296), W;
              })(W[X - 4], W[X - 3]),
              et = (function (s, x) {
                var W = ei(s, x, 19) ^ ei(x, s, 29) ^ ea(s, x, 6);
                return W < 0 && (W += 4294967296), W;
              })(W[X - 4], W[X - 3]),
              es = W[X - 14],
              el = W[X - 13],
              ec = (function (s, x) {
                var W = er(s, x, 1) ^ er(s, x, 8) ^ eo(s, x, 7);
                return W < 0 && (W += 4294967296), W;
              })(W[X - 30], W[X - 29]),
              eh = (function (s, x) {
                var W = ei(s, x, 1) ^ ei(s, x, 8) ^ ea(s, x, 7);
                return W < 0 && (W += 4294967296), W;
              })(W[X - 30], W[X - 29]),
              ep = W[X - 32],
              ef = W[X - 31];
            (W[X] = eu(ee, et, es, el, ec, eh, ep, ef)),
              (W[X + 1] = ed(ee, et, es, el, ec, eh, ep, ef));
          }
        }),
        (SHA512.prototype._update = function (s, x) {
          this._prepareBlock(s, x);
          var W = this.W,
            X = this.h[0],
            ee = this.h[1],
            eo = this.h[2],
            ea = this.h[3],
            eu = this.h[4],
            ed = this.h[5],
            ef = this.h[6],
            eg = this.h[7],
            em = this.h[8],
            ew = this.h[9],
            eb = this.h[10],
            ev = this.h[11],
            ey = this.h[12],
            e_ = this.h[13],
            eC = this.h[14],
            ex = this.h[15];
          et(this.k.length === W.length);
          for (var eE = 0; eE < W.length; eE += 2) {
            var eA = eC,
              eS = ex,
              ek = (function (s, x) {
                var W = er(s, x, 14) ^ er(s, x, 18) ^ er(x, s, 9);
                return W < 0 && (W += 4294967296), W;
              })(em, ew),
              eT = (function (s, x) {
                var W = ei(s, x, 14) ^ ei(s, x, 18) ^ ei(x, s, 9);
                return W < 0 && (W += 4294967296), W;
              })(em, ew),
              eI = (function (s, x, W, X, ee) {
                var et = (s & W) ^ (~s & ee);
                return et < 0 && (et += 4294967296), et;
              })(em, 0, eb, 0, ey, e_),
              eP = (function (s, x, W, X, ee, et) {
                var er = (x & X) ^ (~x & et);
                return er < 0 && (er += 4294967296), er;
              })(0, ew, 0, ev, 0, e_),
              eR = this.k[eE],
              eN = this.k[eE + 1],
              eO = W[eE],
              eM = W[eE + 1],
              eD = eh(eA, eS, ek, eT, eI, eP, eR, eN, eO, eM),
              eB = ep(eA, eS, ek, eT, eI, eP, eR, eN, eO, eM);
            eA = (function (s, x) {
              var W = er(s, x, 28) ^ er(x, s, 2) ^ er(x, s, 7);
              return W < 0 && (W += 4294967296), W;
            })(X, ee);
            var eL = el(
                eA,
                (eS = (function (s, x) {
                  var W = ei(s, x, 28) ^ ei(x, s, 2) ^ ei(x, s, 7);
                  return W < 0 && (W += 4294967296), W;
                })(X, ee)),
                (ek = (function (s, x, W, X, ee) {
                  var et = (s & W) ^ (s & ee) ^ (W & ee);
                  return et < 0 && (et += 4294967296), et;
                })(X, 0, eo, 0, eu, ed)),
                (eT = (function (s, x, W, X, ee, et) {
                  var er = (x & X) ^ (x & et) ^ (X & et);
                  return er < 0 && (er += 4294967296), er;
                })(0, ee, 0, ea, 0, ed))
              ),
              ej = ec(eA, eS, ek, eT);
            (eC = ey),
              (ex = e_),
              (ey = eb),
              (e_ = ev),
              (eb = em),
              (ev = ew),
              (em = el(ef, eg, eD, eB)),
              (ew = ec(eg, eg, eD, eB)),
              (ef = eu),
              (eg = ed),
              (eu = eo),
              (ed = ea),
              (eo = X),
              (ea = ee),
              (X = el(eD, eB, eL, ej)),
              (ee = ec(eD, eB, eL, ej));
          }
          es(this.h, 0, X, ee),
            es(this.h, 2, eo, ea),
            es(this.h, 4, eu, ed),
            es(this.h, 6, ef, eg),
            es(this.h, 8, em, ew),
            es(this.h, 10, eb, ev),
            es(this.h, 12, ey, e_),
            es(this.h, 14, eC, ex);
        }),
        (SHA512.prototype._digest = function (s) {
          return "hex" === s
            ? X.toHex32(this.h, "big")
            : X.split32(this.h, "big");
        });
    },
    37038: function (s, x, W) {
      "use strict";
      var X = W(26436).rotr32;
      function maj32(s, x, W) {
        return (s & x) ^ (s & W) ^ (x & W);
      }
      (x.ft_1 = function (s, x, W, X) {
        return 0 === s
          ? (x & W) ^ (~x & X)
          : 1 === s || 3 === s
          ? x ^ W ^ X
          : 2 === s
          ? maj32(x, W, X)
          : void 0;
      }),
        (x.ch32 = function (s, x, W) {
          return (s & x) ^ (~s & W);
        }),
        (x.maj32 = maj32),
        (x.p32 = function (s, x, W) {
          return s ^ x ^ W;
        }),
        (x.s0_256 = function (s) {
          return X(s, 2) ^ X(s, 13) ^ X(s, 22);
        }),
        (x.s1_256 = function (s) {
          return X(s, 6) ^ X(s, 11) ^ X(s, 25);
        }),
        (x.g0_256 = function (s) {
          return X(s, 7) ^ X(s, 18) ^ (s >>> 3);
        }),
        (x.g1_256 = function (s) {
          return X(s, 17) ^ X(s, 19) ^ (s >>> 10);
        });
    },
    26436: function (s, x, W) {
      "use strict";
      var X = W(79746),
        ee = W(35717);
      function htonl(s) {
        return (
          ((s >>> 24) |
            ((s >>> 8) & 65280) |
            ((s << 8) & 16711680) |
            ((255 & s) << 24)) >>>
          0
        );
      }
      function zero2(s) {
        return 1 === s.length ? "0" + s : s;
      }
      function zero8(s) {
        if (7 === s.length) return "0" + s;
        if (6 === s.length) return "00" + s;
        if (5 === s.length) return "000" + s;
        if (4 === s.length) return "0000" + s;
        if (3 === s.length) return "00000" + s;
        if (2 === s.length) return "000000" + s;
        if (1 === s.length) return "0000000" + s;
        else return s;
      }
      (x.inherits = ee),
        (x.toArray = function (s, x) {
          if (Array.isArray(s)) return s.slice();
          if (!s) return [];
          var W = [];
          if ("string" == typeof s) {
            if (x) {
              if ("hex" === x)
                for (
                  (s = s.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 &&
                    (s = "0" + s),
                    ee = 0;
                  ee < s.length;
                  ee += 2
                )
                  W.push(parseInt(s[ee] + s[ee + 1], 16));
            } else
              for (var X = 0, ee = 0; ee < s.length; ee++) {
                var et,
                  er,
                  ei = s.charCodeAt(ee);
                ei < 128
                  ? (W[X++] = ei)
                  : (ei < 2048
                      ? (W[X++] = (ei >> 6) | 192)
                      : (((et = s),
                        (er = ee),
                        (64512 & et.charCodeAt(er)) != 55296 ||
                        er < 0 ||
                        er + 1 >= et.length
                          ? 1
                          : (64512 & et.charCodeAt(er + 1)) != 56320)
                          ? (W[X++] = (ei >> 12) | 224)
                          : ((ei =
                              65536 +
                              ((1023 & ei) << 10) +
                              (1023 & s.charCodeAt(++ee))),
                            (W[X++] = (ei >> 18) | 240),
                            (W[X++] = ((ei >> 12) & 63) | 128)),
                        (W[X++] = ((ei >> 6) & 63) | 128)),
                    (W[X++] = (63 & ei) | 128));
              }
          } else for (ee = 0; ee < s.length; ee++) W[ee] = 0 | s[ee];
          return W;
        }),
        (x.toHex = function (s) {
          for (var x = "", W = 0; W < s.length; W++)
            x += zero2(s[W].toString(16));
          return x;
        }),
        (x.htonl = htonl),
        (x.toHex32 = function (s, x) {
          for (var W = "", X = 0; X < s.length; X++) {
            var ee = s[X];
            "little" === x && (ee = htonl(ee)), (W += zero8(ee.toString(16)));
          }
          return W;
        }),
        (x.zero2 = zero2),
        (x.zero8 = zero8),
        (x.join32 = function (s, x, W, ee) {
          var et,
            er = W - x;
          X(er % 4 == 0);
          for (
            var ei = Array(er / 4), eo = 0, ea = x;
            eo < ei.length;
            eo++, ea += 4
          )
            (et =
              "big" === ee
                ? (s[ea] << 24) |
                  (s[ea + 1] << 16) |
                  (s[ea + 2] << 8) |
                  s[ea + 3]
                : (s[ea + 3] << 24) |
                  (s[ea + 2] << 16) |
                  (s[ea + 1] << 8) |
                  s[ea]),
              (ei[eo] = et >>> 0);
          return ei;
        }),
        (x.split32 = function (s, x) {
          for (
            var W = Array(4 * s.length), X = 0, ee = 0;
            X < s.length;
            X++, ee += 4
          ) {
            var et = s[X];
            "big" === x
              ? ((W[ee] = et >>> 24),
                (W[ee + 1] = (et >>> 16) & 255),
                (W[ee + 2] = (et >>> 8) & 255),
                (W[ee + 3] = 255 & et))
              : ((W[ee + 3] = et >>> 24),
                (W[ee + 2] = (et >>> 16) & 255),
                (W[ee + 1] = (et >>> 8) & 255),
                (W[ee] = 255 & et));
          }
          return W;
        }),
        (x.rotr32 = function (s, x) {
          return (s >>> x) | (s << (32 - x));
        }),
        (x.rotl32 = function (s, x) {
          return (s << x) | (s >>> (32 - x));
        }),
        (x.sum32 = function (s, x) {
          return (s + x) >>> 0;
        }),
        (x.sum32_3 = function (s, x, W) {
          return (s + x + W) >>> 0;
        }),
        (x.sum32_4 = function (s, x, W, X) {
          return (s + x + W + X) >>> 0;
        }),
        (x.sum32_5 = function (s, x, W, X, ee) {
          return (s + x + W + X + ee) >>> 0;
        }),
        (x.sum64 = function (s, x, W, X) {
          var ee = s[x],
            et = (X + s[x + 1]) >>> 0;
          (s[x] = ((et < X ? 1 : 0) + W + ee) >>> 0), (s[x + 1] = et);
        }),
        (x.sum64_hi = function (s, x, W, X) {
          return (((x + X) >>> 0 < x ? 1 : 0) + s + W) >>> 0;
        }),
        (x.sum64_lo = function (s, x, W, X) {
          return (x + X) >>> 0;
        }),
        (x.sum64_4_hi = function (s, x, W, X, ee, et, er, ei) {
          var eo,
            ea = x;
          return (
            (s +
              W +
              ee +
              er +
              (0 +
                ((ea = (ea + X) >>> 0) < x ? 1 : 0) +
                ((ea = (ea + et) >>> 0) < et ? 1 : 0) +
                ((ea = (ea + ei) >>> 0) < ei ? 1 : 0))) >>>
            0
          );
        }),
        (x.sum64_4_lo = function (s, x, W, X, ee, et, er, ei) {
          return (x + X + et + ei) >>> 0;
        }),
        (x.sum64_5_hi = function (s, x, W, X, ee, et, er, ei, eo, ea) {
          var es,
            el = x;
          return (
            (s +
              W +
              ee +
              er +
              eo +
              (0 +
                ((el = (el + X) >>> 0) < x ? 1 : 0) +
                ((el = (el + et) >>> 0) < et ? 1 : 0) +
                ((el = (el + ei) >>> 0) < ei ? 1 : 0) +
                ((el = (el + ea) >>> 0) < ea ? 1 : 0))) >>>
            0
          );
        }),
        (x.sum64_5_lo = function (s, x, W, X, ee, et, er, ei, eo, ea) {
          return (x + X + et + ei + ea) >>> 0;
        }),
        (x.rotr64_hi = function (s, x, W) {
          return ((x << (32 - W)) | (s >>> W)) >>> 0;
        }),
        (x.rotr64_lo = function (s, x, W) {
          return ((s << (32 - W)) | (x >>> W)) >>> 0;
        }),
        (x.shr64_hi = function (s, x, W) {
          return s >>> W;
        }),
        (x.shr64_lo = function (s, x, W) {
          return ((s << (32 - W)) | (x >>> W)) >>> 0;
        });
    },
    2156: function (s, x, W) {
      "use strict";
      var X = W(33715),
        ee = W(34504),
        et = W(79746);
      function HmacDRBG(s) {
        if (!(this instanceof HmacDRBG)) return new HmacDRBG(s);
        (this.hash = s.hash),
          (this.predResist = !!s.predResist),
          (this.outLen = this.hash.outSize),
          (this.minEntropy = s.minEntropy || this.hash.hmacStrength),
          (this._reseed = null),
          (this.reseedInterval = null),
          (this.K = null),
          (this.V = null);
        var x = ee.toArray(s.entropy, s.entropyEnc || "hex"),
          W = ee.toArray(s.nonce, s.nonceEnc || "hex"),
          X = ee.toArray(s.pers, s.persEnc || "hex");
        et(
          x.length >= this.minEntropy / 8,
          "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
        ),
          this._init(x, W, X);
      }
      (s.exports = HmacDRBG),
        (HmacDRBG.prototype._init = function (s, x, W) {
          var X = s.concat(x).concat(W);
          (this.K = Array(this.outLen / 8)), (this.V = Array(this.outLen / 8));
          for (var ee = 0; ee < this.V.length; ee++)
            (this.K[ee] = 0), (this.V[ee] = 1);
          this._update(X),
            (this._reseed = 1),
            (this.reseedInterval = 281474976710656);
        }),
        (HmacDRBG.prototype._hmac = function () {
          return new X.hmac(this.hash, this.K);
        }),
        (HmacDRBG.prototype._update = function (s) {
          var x = this._hmac().update(this.V).update([0]);
          s && (x = x.update(s)),
            (this.K = x.digest()),
            (this.V = this._hmac().update(this.V).digest()),
            s &&
              ((this.K = this._hmac()
                .update(this.V)
                .update([1])
                .update(s)
                .digest()),
              (this.V = this._hmac().update(this.V).digest()));
        }),
        (HmacDRBG.prototype.reseed = function (s, x, W, X) {
          "string" != typeof x && ((X = W), (W = x), (x = null)),
            (s = ee.toArray(s, x)),
            (W = ee.toArray(W, X)),
            et(
              s.length >= this.minEntropy / 8,
              "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
            ),
            this._update(s.concat(W || [])),
            (this._reseed = 1);
        }),
        (HmacDRBG.prototype.generate = function (s, x, W, X) {
          if (this._reseed > this.reseedInterval)
            throw Error("Reseed is required");
          "string" != typeof x && ((X = W), (W = x), (x = null)),
            W && ((W = ee.toArray(W, X || "hex")), this._update(W));
          for (var et = []; et.length < s; )
            (this.V = this._hmac().update(this.V).digest()),
              (et = et.concat(this.V));
          var er = et.slice(0, s);
          return this._update(W), this._reseed++, ee.encode(er, x);
        });
    },
    8679: function (s, x, W) {
      "use strict";
      var X = W(59864),
        ee = {
          childContextTypes: !0,
          contextType: !0,
          contextTypes: !0,
          defaultProps: !0,
          displayName: !0,
          getDefaultProps: !0,
          getDerivedStateFromError: !0,
          getDerivedStateFromProps: !0,
          mixins: !0,
          propTypes: !0,
          type: !0,
        },
        et = {
          name: !0,
          length: !0,
          prototype: !0,
          caller: !0,
          callee: !0,
          arguments: !0,
          arity: !0,
        },
        er = {
          $$typeof: !0,
          compare: !0,
          defaultProps: !0,
          displayName: !0,
          propTypes: !0,
          type: !0,
        },
        ei = {};
      function getStatics(s) {
        return X.isMemo(s) ? er : ei[s.$$typeof] || ee;
      }
      (ei[X.ForwardRef] = {
        $$typeof: !0,
        render: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0,
      }),
        (ei[X.Memo] = er);
      var eo = Object.defineProperty,
        ea = Object.getOwnPropertyNames,
        es = Object.getOwnPropertySymbols,
        el = Object.getOwnPropertyDescriptor,
        ec = Object.getPrototypeOf,
        eu = Object.prototype;
      s.exports = function hoistNonReactStatics(s, x, W) {
        if ("string" != typeof x) {
          if (eu) {
            var X = ec(x);
            X && X !== eu && hoistNonReactStatics(s, X, W);
          }
          var ee = ea(x);
          es && (ee = ee.concat(es(x)));
          for (
            var er = getStatics(s), ei = getStatics(x), ed = 0;
            ed < ee.length;
            ++ed
          ) {
            var eh = ee[ed];
            if (
              !et[eh] &&
              !(W && W[eh]) &&
              !(ei && ei[eh]) &&
              !(er && er[eh])
            ) {
              var ep = el(x, eh);
              try {
                eo(s, eh, ep);
              } catch (s) {}
            }
          }
        }
        return s;
      };
    },
    80645: function (s, x) {
      /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ (x.read =
        function (s, x, W, X, ee) {
          var et,
            er,
            ei = 8 * ee - X - 1,
            eo = (1 << ei) - 1,
            ea = eo >> 1,
            es = -7,
            el = W ? ee - 1 : 0,
            ec = W ? -1 : 1,
            eu = s[x + el];
          for (
            el += ec, et = eu & ((1 << -es) - 1), eu >>= -es, es += ei;
            es > 0;
            et = 256 * et + s[x + el], el += ec, es -= 8
          );
          for (
            er = et & ((1 << -es) - 1), et >>= -es, es += X;
            es > 0;
            er = 256 * er + s[x + el], el += ec, es -= 8
          );
          if (0 === et) et = 1 - ea;
          else {
            if (et === eo) return er ? NaN : (eu ? -1 : 1) * (1 / 0);
            (er += Math.pow(2, X)), (et -= ea);
          }
          return (eu ? -1 : 1) * er * Math.pow(2, et - X);
        }),
        (x.write = function (s, x, W, X, ee, et) {
          var er,
            ei,
            eo,
            ea = 8 * et - ee - 1,
            es = (1 << ea) - 1,
            el = es >> 1,
            ec = 23 === ee ? 5960464477539062e-23 : 0,
            eu = X ? 0 : et - 1,
            ed = X ? 1 : -1,
            eh = x < 0 || (0 === x && 1 / x < 0) ? 1 : 0;
          for (
            isNaN((x = Math.abs(x))) || x === 1 / 0
              ? ((ei = isNaN(x) ? 1 : 0), (er = es))
              : ((er = Math.floor(Math.log(x) / Math.LN2)),
                x * (eo = Math.pow(2, -er)) < 1 && (er--, (eo *= 2)),
                er + el >= 1 ? (x += ec / eo) : (x += ec * Math.pow(2, 1 - el)),
                x * eo >= 2 && (er++, (eo /= 2)),
                er + el >= es
                  ? ((ei = 0), (er = es))
                  : er + el >= 1
                  ? ((ei = (x * eo - 1) * Math.pow(2, ee)), (er += el))
                  : ((ei = x * Math.pow(2, el - 1) * Math.pow(2, ee)),
                    (er = 0)));
            ee >= 8;
            s[W + eu] = 255 & ei, eu += ed, ei /= 256, ee -= 8
          );
          for (
            er = (er << ee) | ei, ea += ee;
            ea > 0;
            s[W + eu] = 255 & er, eu += ed, er /= 256, ea -= 8
          );
          s[W + eu - ed] |= 128 * eh;
        });
    },
    35717: function (s) {
      "function" == typeof Object.create
        ? (s.exports = function (s, x) {
            x &&
              ((s.super_ = x),
              (s.prototype = Object.create(x.prototype, {
                constructor: {
                  value: s,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })));
          })
        : (s.exports = function (s, x) {
            if (x) {
              s.super_ = x;
              var TempCtor = function () {};
              (TempCtor.prototype = x.prototype),
                (s.prototype = new TempCtor()),
                (s.prototype.constructor = s);
            }
          });
    },
    91094: function (s, x, W) {
      var X,
        ee = W(83454);
      !(function () {
        "use strict";
        var et = "input is invalid type",
          er = "object" == typeof window,
          ei = er ? window : {};
        ei.JS_SHA3_NO_WINDOW && (er = !1);
        var eo = !er && "object" == typeof self;
        !ei.JS_SHA3_NO_NODE_JS &&
        "object" == typeof ee &&
        ee.versions &&
        ee.versions.node
          ? (ei = W.g)
          : eo && (ei = self);
        var ea = !ei.JS_SHA3_NO_COMMON_JS && s.exports,
          es = W.amdO,
          el = !ei.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,
          ec = "0123456789abcdef".split(""),
          eu = [4, 1024, 262144, 67108864],
          ed = [0, 8, 16, 24],
          eh = [
            1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0,
            2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0,
            136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139,
            2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648,
            128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545,
            2147483648, 32896, 2147483648, 2147483649, 0, 2147516424,
            2147483648,
          ],
          ep = [224, 256, 384, 512],
          ef = [128, 256],
          eg = ["hex", "buffer", "arrayBuffer", "array", "digest"],
          em = { 128: 168, 256: 136 };
        (ei.JS_SHA3_NO_NODE_JS || !Array.isArray) &&
          (Array.isArray = function (s) {
            return "[object Array]" === Object.prototype.toString.call(s);
          }),
          el &&
            (ei.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) &&
            (ArrayBuffer.isView = function (s) {
              return (
                "object" == typeof s &&
                s.buffer &&
                s.buffer.constructor === ArrayBuffer
              );
            });
        for (
          var createOutputMethod = function (s, x, W) {
              return function (X) {
                return new Keccak(s, x, s).update(X)[W]();
              };
            },
            createShakeOutputMethod = function (s, x, W) {
              return function (X, ee) {
                return new Keccak(s, x, ee).update(X)[W]();
              };
            },
            createCshakeOutputMethod = function (s, x, W) {
              return function (x, X, ee, et) {
                return eb["cshake" + s].update(x, X, ee, et)[W]();
              };
            },
            createKmacOutputMethod = function (s, x, W) {
              return function (x, X, ee, et) {
                return eb["kmac" + s].update(x, X, ee, et)[W]();
              };
            },
            createOutputMethods = function (s, x, W, X) {
              for (var ee = 0; ee < eg.length; ++ee) {
                var et = eg[ee];
                s[et] = x(W, X, et);
              }
              return s;
            },
            createMethod = function (s, x) {
              var W = createOutputMethod(s, x, "hex");
              return (
                (W.create = function () {
                  return new Keccak(s, x, s);
                }),
                (W.update = function (s) {
                  return W.create().update(s);
                }),
                createOutputMethods(W, createOutputMethod, s, x)
              );
            },
            ew = [
              {
                name: "keccak",
                padding: [1, 256, 65536, 16777216],
                bits: ep,
                createMethod: createMethod,
              },
              {
                name: "sha3",
                padding: [6, 1536, 393216, 100663296],
                bits: ep,
                createMethod: createMethod,
              },
              {
                name: "shake",
                padding: [31, 7936, 2031616, 520093696],
                bits: ef,
                createMethod: function (s, x) {
                  var W = createShakeOutputMethod(s, x, "hex");
                  return (
                    (W.create = function (W) {
                      return new Keccak(s, x, W);
                    }),
                    (W.update = function (s, x) {
                      return W.create(x).update(s);
                    }),
                    createOutputMethods(W, createShakeOutputMethod, s, x)
                  );
                },
              },
              {
                name: "cshake",
                padding: eu,
                bits: ef,
                createMethod: function (s, x) {
                  var W = em[s],
                    X = createCshakeOutputMethod(s, x, "hex");
                  return (
                    (X.create = function (X, ee, et) {
                      return ee || et
                        ? new Keccak(s, x, X).bytepad([ee, et], W)
                        : eb["shake" + s].create(X);
                    }),
                    (X.update = function (s, x, W, ee) {
                      return X.create(x, W, ee).update(s);
                    }),
                    createOutputMethods(X, createCshakeOutputMethod, s, x)
                  );
                },
              },
              {
                name: "kmac",
                padding: eu,
                bits: ef,
                createMethod: function (s, x) {
                  var W = em[s],
                    X = createKmacOutputMethod(s, x, "hex");
                  return (
                    (X.create = function (X, ee, et) {
                      return new Kmac(s, x, ee)
                        .bytepad(["KMAC", et], W)
                        .bytepad([X], W);
                    }),
                    (X.update = function (s, x, W, ee) {
                      return X.create(s, W, ee).update(x);
                    }),
                    createOutputMethods(X, createKmacOutputMethod, s, x)
                  );
                },
              },
            ],
            eb = {},
            ev = [],
            ey = 0;
          ey < ew.length;
          ++ey
        )
          for (var e_ = ew[ey], eC = e_.bits, ex = 0; ex < eC.length; ++ex) {
            var eE = e_.name + "_" + eC[ex];
            if (
              (ev.push(eE),
              (eb[eE] = e_.createMethod(eC[ex], e_.padding)),
              "sha3" !== e_.name)
            ) {
              var eA = e_.name + eC[ex];
              ev.push(eA), (eb[eA] = eb[eE]);
            }
          }
        function Keccak(s, x, W) {
          (this.blocks = []),
            (this.s = []),
            (this.padding = x),
            (this.outputBits = W),
            (this.reset = !0),
            (this.finalized = !1),
            (this.block = 0),
            (this.start = 0),
            (this.blockCount = (1600 - (s << 1)) >> 5),
            (this.byteCount = this.blockCount << 2),
            (this.outputBlocks = W >> 5),
            (this.extraBytes = (31 & W) >> 3);
          for (var X = 0; X < 50; ++X) this.s[X] = 0;
        }
        function Kmac(s, x, W) {
          Keccak.call(this, s, x, W);
        }
        (Keccak.prototype.update = function (s) {
          if (this.finalized) throw Error("finalize already called");
          var x,
            W = typeof s;
          if ("string" !== W) {
            if ("object" === W) {
              if (null === s) throw Error(et);
              if (el && s.constructor === ArrayBuffer) s = new Uint8Array(s);
              else if (!Array.isArray(s) && (!el || !ArrayBuffer.isView(s)))
                throw Error(et);
            } else throw Error(et);
            x = !0;
          }
          for (
            var X,
              ee,
              er = this.blocks,
              ei = this.byteCount,
              eo = s.length,
              ea = this.blockCount,
              es = 0,
              ec = this.s;
            es < eo;

          ) {
            if (this.reset)
              for (X = 1, this.reset = !1, er[0] = this.block; X < ea + 1; ++X)
                er[X] = 0;
            if (x)
              for (X = this.start; es < eo && X < ei; ++es)
                er[X >> 2] |= s[es] << ed[3 & X++];
            else
              for (X = this.start; es < eo && X < ei; ++es)
                (ee = s.charCodeAt(es)) < 128
                  ? (er[X >> 2] |= ee << ed[3 & X++])
                  : (ee < 2048
                      ? (er[X >> 2] |= (192 | (ee >> 6)) << ed[3 & X++])
                      : (ee < 55296 || ee >= 57344
                          ? (er[X >> 2] |= (224 | (ee >> 12)) << ed[3 & X++])
                          : ((ee =
                              65536 +
                              (((1023 & ee) << 10) |
                                (1023 & s.charCodeAt(++es)))),
                            (er[X >> 2] |= (240 | (ee >> 18)) << ed[3 & X++]),
                            (er[X >> 2] |=
                              (128 | ((ee >> 12) & 63)) << ed[3 & X++])),
                        (er[X >> 2] |=
                          (128 | ((ee >> 6) & 63)) << ed[3 & X++])),
                    (er[X >> 2] |= (128 | (63 & ee)) << ed[3 & X++]));
            if (((this.lastByteIndex = X), X >= ei)) {
              for (this.start = X - ei, this.block = er[ea], X = 0; X < ea; ++X)
                ec[X] ^= er[X];
              f(ec), (this.reset = !0);
            } else this.start = X;
          }
          return this;
        }),
          (Keccak.prototype.encode = function (s, x) {
            var W = 255 & s,
              X = 1,
              ee = [W];
            for (s >>= 8, W = 255 & s; W > 0; )
              ee.unshift(W), (s >>= 8), (W = 255 & s), ++X;
            return x ? ee.push(X) : ee.unshift(X), this.update(ee), ee.length;
          }),
          (Keccak.prototype.encodeString = function (s) {
            var x,
              W = typeof s;
            if ("string" !== W) {
              if ("object" === W) {
                if (null === s) throw Error(et);
                if (el && s.constructor === ArrayBuffer) s = new Uint8Array(s);
                else if (!Array.isArray(s) && (!el || !ArrayBuffer.isView(s)))
                  throw Error(et);
              } else throw Error(et);
              x = !0;
            }
            var X = 0,
              ee = s.length;
            if (x) X = ee;
            else
              for (var er = 0; er < s.length; ++er) {
                var ei = s.charCodeAt(er);
                ei < 128
                  ? (X += 1)
                  : ei < 2048
                  ? (X += 2)
                  : ei < 55296 || ei >= 57344
                  ? (X += 3)
                  : ((ei =
                      65536 +
                      (((1023 & ei) << 10) | (1023 & s.charCodeAt(++er)))),
                    (X += 4));
              }
            return (X += this.encode(8 * X)), this.update(s), X;
          }),
          (Keccak.prototype.bytepad = function (s, x) {
            for (var W = this.encode(x), X = 0; X < s.length; ++X)
              W += this.encodeString(s[X]);
            var ee = x - (W % x),
              et = [];
            return (et.length = ee), this.update(et), this;
          }),
          (Keccak.prototype.finalize = function () {
            if (!this.finalized) {
              this.finalized = !0;
              var s = this.blocks,
                x = this.lastByteIndex,
                W = this.blockCount,
                X = this.s;
              if (
                ((s[x >> 2] |= this.padding[3 & x]),
                this.lastByteIndex === this.byteCount)
              )
                for (x = 1, s[0] = s[W]; x < W + 1; ++x) s[x] = 0;
              for (s[W - 1] |= 2147483648, x = 0; x < W; ++x) X[x] ^= s[x];
              f(X);
            }
          }),
          (Keccak.prototype.toString = Keccak.prototype.hex =
            function () {
              this.finalize();
              for (
                var s,
                  x = this.blockCount,
                  W = this.s,
                  X = this.outputBlocks,
                  ee = this.extraBytes,
                  et = 0,
                  er = 0,
                  ei = "";
                er < X;

              ) {
                for (et = 0; et < x && er < X; ++et, ++er)
                  ei +=
                    ec[((s = W[et]) >> 4) & 15] +
                    ec[15 & s] +
                    ec[(s >> 12) & 15] +
                    ec[(s >> 8) & 15] +
                    ec[(s >> 20) & 15] +
                    ec[(s >> 16) & 15] +
                    ec[(s >> 28) & 15] +
                    ec[(s >> 24) & 15];
                er % x == 0 && (f(W), (et = 0));
              }
              return (
                ee &&
                  ((ei += ec[((s = W[et]) >> 4) & 15] + ec[15 & s]),
                  ee > 1 && (ei += ec[(s >> 12) & 15] + ec[(s >> 8) & 15]),
                  ee > 2 && (ei += ec[(s >> 20) & 15] + ec[(s >> 16) & 15])),
                ei
              );
            }),
          (Keccak.prototype.arrayBuffer = function () {
            this.finalize();
            var s,
              x = this.blockCount,
              W = this.s,
              X = this.outputBlocks,
              ee = this.extraBytes,
              et = 0,
              er = 0,
              ei = this.outputBits >> 3;
            s = new ArrayBuffer(ee ? (X + 1) << 2 : ei);
            for (var eo = new Uint32Array(s); er < X; ) {
              for (et = 0; et < x && er < X; ++et, ++er) eo[er] = W[et];
              er % x == 0 && f(W);
            }
            return ee && ((eo[et] = W[et]), (s = s.slice(0, ei))), s;
          }),
          (Keccak.prototype.buffer = Keccak.prototype.arrayBuffer),
          (Keccak.prototype.digest = Keccak.prototype.array =
            function () {
              this.finalize();
              for (
                var s,
                  x,
                  W = this.blockCount,
                  X = this.s,
                  ee = this.outputBlocks,
                  et = this.extraBytes,
                  er = 0,
                  ei = 0,
                  eo = [];
                ei < ee;

              ) {
                for (er = 0; er < W && ei < ee; ++er, ++ei)
                  (s = ei << 2),
                    (x = X[er]),
                    (eo[s] = 255 & x),
                    (eo[s + 1] = (x >> 8) & 255),
                    (eo[s + 2] = (x >> 16) & 255),
                    (eo[s + 3] = (x >> 24) & 255);
                ei % W == 0 && f(X);
              }
              return (
                et &&
                  ((s = ei << 2),
                  (x = X[er]),
                  (eo[s] = 255 & x),
                  et > 1 && (eo[s + 1] = (x >> 8) & 255),
                  et > 2 && (eo[s + 2] = (x >> 16) & 255)),
                eo
              );
            }),
          (Kmac.prototype = new Keccak()),
          (Kmac.prototype.finalize = function () {
            return (
              this.encode(this.outputBits, !0),
              Keccak.prototype.finalize.call(this)
            );
          });
        var f = function (s) {
          var x,
            W,
            X,
            ee,
            et,
            er,
            ei,
            eo,
            ea,
            es,
            el,
            ec,
            eu,
            ed,
            ep,
            ef,
            eg,
            em,
            ew,
            eb,
            ev,
            ey,
            e_,
            eC,
            ex,
            eE,
            eA,
            eS,
            ek,
            eT,
            eI,
            eP,
            eR,
            eN,
            eO,
            eM,
            eD,
            eB,
            eL,
            ej,
            eU,
            e$,
            eF,
            ez,
            eH,
            eV,
            eW,
            eK,
            eZ,
            eG,
            eY,
            eQ,
            eJ,
            eX,
            e0,
            e1,
            e2,
            e3,
            e5,
            e6,
            e4,
            e8,
            e9;
          for (X = 0; X < 48; X += 2)
            (ee = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]),
              (et = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]),
              (er = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]),
              (ei = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]),
              (eo = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]),
              (ea = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]),
              (es = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]),
              (el = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]),
              (ec = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]),
              (eu = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]),
              (x = ec ^ ((er << 1) | (ei >>> 31))),
              (W = eu ^ ((ei << 1) | (er >>> 31))),
              (s[0] ^= x),
              (s[1] ^= W),
              (s[10] ^= x),
              (s[11] ^= W),
              (s[20] ^= x),
              (s[21] ^= W),
              (s[30] ^= x),
              (s[31] ^= W),
              (s[40] ^= x),
              (s[41] ^= W),
              (x = ee ^ ((eo << 1) | (ea >>> 31))),
              (W = et ^ ((ea << 1) | (eo >>> 31))),
              (s[2] ^= x),
              (s[3] ^= W),
              (s[12] ^= x),
              (s[13] ^= W),
              (s[22] ^= x),
              (s[23] ^= W),
              (s[32] ^= x),
              (s[33] ^= W),
              (s[42] ^= x),
              (s[43] ^= W),
              (x = er ^ ((es << 1) | (el >>> 31))),
              (W = ei ^ ((el << 1) | (es >>> 31))),
              (s[4] ^= x),
              (s[5] ^= W),
              (s[14] ^= x),
              (s[15] ^= W),
              (s[24] ^= x),
              (s[25] ^= W),
              (s[34] ^= x),
              (s[35] ^= W),
              (s[44] ^= x),
              (s[45] ^= W),
              (x = eo ^ ((ec << 1) | (eu >>> 31))),
              (W = ea ^ ((eu << 1) | (ec >>> 31))),
              (s[6] ^= x),
              (s[7] ^= W),
              (s[16] ^= x),
              (s[17] ^= W),
              (s[26] ^= x),
              (s[27] ^= W),
              (s[36] ^= x),
              (s[37] ^= W),
              (s[46] ^= x),
              (s[47] ^= W),
              (x = es ^ ((ee << 1) | (et >>> 31))),
              (W = el ^ ((et << 1) | (ee >>> 31))),
              (s[8] ^= x),
              (s[9] ^= W),
              (s[18] ^= x),
              (s[19] ^= W),
              (s[28] ^= x),
              (s[29] ^= W),
              (s[38] ^= x),
              (s[39] ^= W),
              (s[48] ^= x),
              (s[49] ^= W),
              (ed = s[0]),
              (ep = s[1]),
              (eV = (s[11] << 4) | (s[10] >>> 28)),
              (eW = (s[10] << 4) | (s[11] >>> 28)),
              (eS = (s[20] << 3) | (s[21] >>> 29)),
              (ek = (s[21] << 3) | (s[20] >>> 29)),
              (e6 = (s[31] << 9) | (s[30] >>> 23)),
              (e4 = (s[30] << 9) | (s[31] >>> 23)),
              (e$ = (s[40] << 18) | (s[41] >>> 14)),
              (eF = (s[41] << 18) | (s[40] >>> 14)),
              (eN = (s[2] << 1) | (s[3] >>> 31)),
              (eO = (s[3] << 1) | (s[2] >>> 31)),
              (ef = (s[13] << 12) | (s[12] >>> 20)),
              (eg = (s[12] << 12) | (s[13] >>> 20)),
              (eK = (s[22] << 10) | (s[23] >>> 22)),
              (eZ = (s[23] << 10) | (s[22] >>> 22)),
              (eT = (s[33] << 13) | (s[32] >>> 19)),
              (eI = (s[32] << 13) | (s[33] >>> 19)),
              (e8 = (s[42] << 2) | (s[43] >>> 30)),
              (e9 = (s[43] << 2) | (s[42] >>> 30)),
              (eX = (s[5] << 30) | (s[4] >>> 2)),
              (e0 = (s[4] << 30) | (s[5] >>> 2)),
              (eM = (s[14] << 6) | (s[15] >>> 26)),
              (eD = (s[15] << 6) | (s[14] >>> 26)),
              (em = (s[25] << 11) | (s[24] >>> 21)),
              (ew = (s[24] << 11) | (s[25] >>> 21)),
              (eG = (s[34] << 15) | (s[35] >>> 17)),
              (eY = (s[35] << 15) | (s[34] >>> 17)),
              (eP = (s[45] << 29) | (s[44] >>> 3)),
              (eR = (s[44] << 29) | (s[45] >>> 3)),
              (eC = (s[6] << 28) | (s[7] >>> 4)),
              (ex = (s[7] << 28) | (s[6] >>> 4)),
              (e1 = (s[17] << 23) | (s[16] >>> 9)),
              (e2 = (s[16] << 23) | (s[17] >>> 9)),
              (eB = (s[26] << 25) | (s[27] >>> 7)),
              (eL = (s[27] << 25) | (s[26] >>> 7)),
              (eb = (s[36] << 21) | (s[37] >>> 11)),
              (ev = (s[37] << 21) | (s[36] >>> 11)),
              (eQ = (s[47] << 24) | (s[46] >>> 8)),
              (eJ = (s[46] << 24) | (s[47] >>> 8)),
              (ez = (s[8] << 27) | (s[9] >>> 5)),
              (eH = (s[9] << 27) | (s[8] >>> 5)),
              (eE = (s[18] << 20) | (s[19] >>> 12)),
              (eA = (s[19] << 20) | (s[18] >>> 12)),
              (e3 = (s[29] << 7) | (s[28] >>> 25)),
              (e5 = (s[28] << 7) | (s[29] >>> 25)),
              (ej = (s[38] << 8) | (s[39] >>> 24)),
              (eU = (s[39] << 8) | (s[38] >>> 24)),
              (ey = (s[48] << 14) | (s[49] >>> 18)),
              (e_ = (s[49] << 14) | (s[48] >>> 18)),
              (s[0] = ed ^ (~ef & em)),
              (s[1] = ep ^ (~eg & ew)),
              (s[10] = eC ^ (~eE & eS)),
              (s[11] = ex ^ (~eA & ek)),
              (s[20] = eN ^ (~eM & eB)),
              (s[21] = eO ^ (~eD & eL)),
              (s[30] = ez ^ (~eV & eK)),
              (s[31] = eH ^ (~eW & eZ)),
              (s[40] = eX ^ (~e1 & e3)),
              (s[41] = e0 ^ (~e2 & e5)),
              (s[2] = ef ^ (~em & eb)),
              (s[3] = eg ^ (~ew & ev)),
              (s[12] = eE ^ (~eS & eT)),
              (s[13] = eA ^ (~ek & eI)),
              (s[22] = eM ^ (~eB & ej)),
              (s[23] = eD ^ (~eL & eU)),
              (s[32] = eV ^ (~eK & eG)),
              (s[33] = eW ^ (~eZ & eY)),
              (s[42] = e1 ^ (~e3 & e6)),
              (s[43] = e2 ^ (~e5 & e4)),
              (s[4] = em ^ (~eb & ey)),
              (s[5] = ew ^ (~ev & e_)),
              (s[14] = eS ^ (~eT & eP)),
              (s[15] = ek ^ (~eI & eR)),
              (s[24] = eB ^ (~ej & e$)),
              (s[25] = eL ^ (~eU & eF)),
              (s[34] = eK ^ (~eG & eQ)),
              (s[35] = eZ ^ (~eY & eJ)),
              (s[44] = e3 ^ (~e6 & e8)),
              (s[45] = e5 ^ (~e4 & e9)),
              (s[6] = eb ^ (~ey & ed)),
              (s[7] = ev ^ (~e_ & ep)),
              (s[16] = eT ^ (~eP & eC)),
              (s[17] = eI ^ (~eR & ex)),
              (s[26] = ej ^ (~e$ & eN)),
              (s[27] = eU ^ (~eF & eO)),
              (s[36] = eG ^ (~eQ & ez)),
              (s[37] = eY ^ (~eJ & eH)),
              (s[46] = e6 ^ (~e8 & eX)),
              (s[47] = e4 ^ (~e9 & e0)),
              (s[8] = ey ^ (~ed & ef)),
              (s[9] = e_ ^ (~ep & eg)),
              (s[18] = eP ^ (~eC & eE)),
              (s[19] = eR ^ (~ex & eA)),
              (s[28] = e$ ^ (~eN & eM)),
              (s[29] = eF ^ (~eO & eD)),
              (s[38] = eQ ^ (~ez & eV)),
              (s[39] = eJ ^ (~eH & eW)),
              (s[48] = e8 ^ (~eX & e1)),
              (s[49] = e9 ^ (~e0 & e2)),
              (s[0] ^= eh[X]),
              (s[1] ^= eh[X + 1]);
        };
        if (ea) s.exports = eb;
        else {
          for (ey = 0; ey < ev.length; ++ey) ei[ev[ey]] = eb[ev[ey]];
          es &&
            void 0 !==
              (X = function () {
                return eb;
              }.call(x, W, x, s)) &&
            (s.exports = X);
        }
      })();
    },
    72307: function (s, x, W) {
      s = W.nmd(s);
      var X,
        ee,
        et,
        er = "__lodash_hash_undefined__",
        ei = "[object Arguments]",
        eo = "[object Array]",
        ea = "[object Boolean]",
        es = "[object Date]",
        el = "[object Error]",
        ec = "[object Function]",
        eu = "[object Map]",
        ed = "[object Number]",
        eh = "[object Object]",
        ep = "[object Promise]",
        ef = "[object RegExp]",
        eg = "[object Set]",
        em = "[object String]",
        ew = "[object WeakMap]",
        eb = "[object ArrayBuffer]",
        ev = "[object DataView]",
        ey = /^\[object .+?Constructor\]$/,
        e_ = /^(?:0|[1-9]\d*)$/,
        eC = {};
      (eC["[object Float32Array]"] =
        eC["[object Float64Array]"] =
        eC["[object Int8Array]"] =
        eC["[object Int16Array]"] =
        eC["[object Int32Array]"] =
        eC["[object Uint8Array]"] =
        eC["[object Uint8ClampedArray]"] =
        eC["[object Uint16Array]"] =
        eC["[object Uint32Array]"] =
          !0),
        (eC[ei] =
          eC[eo] =
          eC[eb] =
          eC[ea] =
          eC[ev] =
          eC[es] =
          eC[el] =
          eC[ec] =
          eC[eu] =
          eC[ed] =
          eC[eh] =
          eC[ef] =
          eC[eg] =
          eC[em] =
          eC[ew] =
            !1);
      var ex = "object" == typeof W.g && W.g && W.g.Object === Object && W.g,
        eE = "object" == typeof self && self && self.Object === Object && self,
        eA = ex || eE || Function("return this")(),
        eS = x && !x.nodeType && x,
        ek = eS && s && !s.nodeType && s,
        eT = ek && ek.exports === eS,
        eI = eT && ex.process,
        eP = (function () {
          try {
            return eI && eI.binding && eI.binding("util");
          } catch (s) {}
        })(),
        eR = eP && eP.isTypedArray;
      function mapToArray(s) {
        var x = -1,
          W = Array(s.size);
        return (
          s.forEach(function (s, X) {
            W[++x] = [X, s];
          }),
          W
        );
      }
      function setToArray(s) {
        var x = -1,
          W = Array(s.size);
        return (
          s.forEach(function (s) {
            W[++x] = s;
          }),
          W
        );
      }
      var eN = Array.prototype,
        eO = Function.prototype,
        eM = Object.prototype,
        eD = eA["__core-js_shared__"],
        eB = eO.toString,
        eL = eM.hasOwnProperty,
        ej = (X = /[^.]+$/.exec((eD && eD.keys && eD.keys.IE_PROTO) || ""))
          ? "Symbol(src)_1." + X
          : "",
        eU = eM.toString,
        e$ = RegExp(
          "^" +
            eB
              .call(eL)
              .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
              .replace(
                /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                "$1.*?"
              ) +
            "$"
        ),
        eF = eT ? eA.Buffer : void 0,
        ez = eA.Symbol,
        eH = eA.Uint8Array,
        eV = eM.propertyIsEnumerable,
        eW = eN.splice,
        eK = ez ? ez.toStringTag : void 0,
        eZ = Object.getOwnPropertySymbols,
        eG = eF ? eF.isBuffer : void 0,
        eY =
          ((ee = Object.keys),
          (et = Object),
          function (s) {
            return ee(et(s));
          }),
        eQ = getNative(eA, "DataView"),
        eJ = getNative(eA, "Map"),
        eX = getNative(eA, "Promise"),
        e0 = getNative(eA, "Set"),
        e1 = getNative(eA, "WeakMap"),
        e2 = getNative(Object, "create"),
        e3 = toSource(eQ),
        e5 = toSource(eJ),
        e6 = toSource(eX),
        e4 = toSource(e0),
        e8 = toSource(e1),
        e9 = ez ? ez.prototype : void 0,
        e7 = e9 ? e9.valueOf : void 0;
      function Hash(s) {
        var x = -1,
          W = null == s ? 0 : s.length;
        for (this.clear(); ++x < W; ) {
          var X = s[x];
          this.set(X[0], X[1]);
        }
      }
      function ListCache(s) {
        var x = -1,
          W = null == s ? 0 : s.length;
        for (this.clear(); ++x < W; ) {
          var X = s[x];
          this.set(X[0], X[1]);
        }
      }
      function MapCache(s) {
        var x = -1,
          W = null == s ? 0 : s.length;
        for (this.clear(); ++x < W; ) {
          var X = s[x];
          this.set(X[0], X[1]);
        }
      }
      function SetCache(s) {
        var x = -1,
          W = null == s ? 0 : s.length;
        for (this.__data__ = new MapCache(); ++x < W; ) this.add(s[x]);
      }
      function Stack(s) {
        var x = (this.__data__ = new ListCache(s));
        this.size = x.size;
      }
      function assocIndexOf(s, x) {
        for (var W = s.length; W--; ) if (eq(s[W][0], x)) return W;
        return -1;
      }
      function baseGetTag(s) {
        return null == s
          ? void 0 === s
            ? "[object Undefined]"
            : "[object Null]"
          : eK && eK in Object(s)
          ? (function (s) {
              var x = eL.call(s, eK),
                W = s[eK];
              try {
                s[eK] = void 0;
                var X = !0;
              } catch (s) {}
              var ee = eU.call(s);
              return X && (x ? (s[eK] = W) : delete s[eK]), ee;
            })(s)
          : eU.call(s);
      }
      function baseIsArguments(s) {
        return isObjectLike(s) && baseGetTag(s) == ei;
      }
      function equalArrays(s, x, W, X, ee, et) {
        var er = 1 & W,
          ei = s.length,
          eo = x.length;
        if (ei != eo && !(er && eo > ei)) return !1;
        var ea = et.get(s);
        if (ea && et.get(x)) return ea == x;
        var es = -1,
          el = !0,
          ec = 2 & W ? new SetCache() : void 0;
        for (et.set(s, x), et.set(x, s); ++es < ei; ) {
          var eu = s[es],
            ed = x[es];
          if (X)
            var eh = er ? X(ed, eu, es, x, s, et) : X(eu, ed, es, s, x, et);
          if (void 0 !== eh) {
            if (eh) continue;
            el = !1;
            break;
          }
          if (ec) {
            if (
              !(function (s, x) {
                for (var W = -1, X = null == s ? 0 : s.length; ++W < X; )
                  if (x(s[W], W, s)) return !0;
                return !1;
              })(x, function (s, x) {
                if (!ec.has(x) && (eu === s || ee(eu, s, W, X, et)))
                  return ec.push(x);
              })
            ) {
              el = !1;
              break;
            }
          } else if (!(eu === ed || ee(eu, ed, W, X, et))) {
            el = !1;
            break;
          }
        }
        return et.delete(s), et.delete(x), el;
      }
      function getAllKeys(s) {
        var x;
        return (
          (x = (function (s) {
            return null != s && isLength(s.length) && !isFunction(s)
              ? (function (s, x) {
                  var W,
                    X = ts(s),
                    ee = !X && ta(s),
                    et = !X && !ee && tl(s),
                    er = !X && !ee && !et && tc(s),
                    ei = X || ee || et || er,
                    eo = ei
                      ? (function (s, x) {
                          for (var W = -1, X = Array(s); ++W < s; ) X[W] = x(W);
                          return X;
                        })(s.length, String)
                      : [],
                    ea = eo.length;
                  for (var es in s)
                    eL.call(s, es) &&
                      !(
                        ei &&
                        ("length" == es ||
                          (et && ("offset" == es || "parent" == es)) ||
                          (er &&
                            ("buffer" == es ||
                              "byteLength" == es ||
                              "byteOffset" == es)) ||
                          ((W = null == (W = ea) ? 9007199254740991 : W) &&
                            ("number" == typeof es || e_.test(es)) &&
                            es > -1 &&
                            es % 1 == 0 &&
                            es < W))
                      ) &&
                      eo.push(es);
                  return eo;
                })(s)
              : (function (s) {
                  if (
                    ((x = s && s.constructor),
                    s !== (("function" == typeof x && x.prototype) || eM))
                  )
                    return eY(s);
                  var x,
                    W = [];
                  for (var X in Object(s))
                    eL.call(s, X) && "constructor" != X && W.push(X);
                  return W;
                })(s);
          })(s)),
          ts(s)
            ? x
            : (function (s, x) {
                for (var W = -1, X = x.length, ee = s.length; ++W < X; )
                  s[ee + W] = x[W];
                return s;
              })(x, tt(s))
        );
      }
      function getMapData(s, x) {
        var W,
          X = s.__data__;
        return (
          "string" == (W = typeof x) ||
          "number" == W ||
          "symbol" == W ||
          "boolean" == W
            ? "__proto__" !== x
            : null === x
        )
          ? X["string" == typeof x ? "string" : "hash"]
          : X.map;
      }
      function getNative(s, x) {
        var W = null == s ? void 0 : s[x];
        return !(!isObject(W) || (ej && ej in W)) &&
          (isFunction(W) ? e$ : ey).test(toSource(W))
          ? W
          : void 0;
      }
      (Hash.prototype.clear = function () {
        (this.__data__ = e2 ? e2(null) : {}), (this.size = 0);
      }),
        (Hash.prototype.delete = function (s) {
          var x = this.has(s) && delete this.__data__[s];
          return (this.size -= x ? 1 : 0), x;
        }),
        (Hash.prototype.get = function (s) {
          var x = this.__data__;
          if (e2) {
            var W = x[s];
            return W === er ? void 0 : W;
          }
          return eL.call(x, s) ? x[s] : void 0;
        }),
        (Hash.prototype.has = function (s) {
          var x = this.__data__;
          return e2 ? void 0 !== x[s] : eL.call(x, s);
        }),
        (Hash.prototype.set = function (s, x) {
          var W = this.__data__;
          return (
            (this.size += this.has(s) ? 0 : 1),
            (W[s] = e2 && void 0 === x ? er : x),
            this
          );
        }),
        (ListCache.prototype.clear = function () {
          (this.__data__ = []), (this.size = 0);
        }),
        (ListCache.prototype.delete = function (s) {
          var x = this.__data__,
            W = assocIndexOf(x, s);
          return (
            !(W < 0) &&
            (W == x.length - 1 ? x.pop() : eW.call(x, W, 1), --this.size, !0)
          );
        }),
        (ListCache.prototype.get = function (s) {
          var x = this.__data__,
            W = assocIndexOf(x, s);
          return W < 0 ? void 0 : x[W][1];
        }),
        (ListCache.prototype.has = function (s) {
          return assocIndexOf(this.__data__, s) > -1;
        }),
        (ListCache.prototype.set = function (s, x) {
          var W = this.__data__,
            X = assocIndexOf(W, s);
          return X < 0 ? (++this.size, W.push([s, x])) : (W[X][1] = x), this;
        }),
        (MapCache.prototype.clear = function () {
          (this.size = 0),
            (this.__data__ = {
              hash: new Hash(),
              map: new (eJ || ListCache)(),
              string: new Hash(),
            });
        }),
        (MapCache.prototype.delete = function (s) {
          var x = getMapData(this, s).delete(s);
          return (this.size -= x ? 1 : 0), x;
        }),
        (MapCache.prototype.get = function (s) {
          return getMapData(this, s).get(s);
        }),
        (MapCache.prototype.has = function (s) {
          return getMapData(this, s).has(s);
        }),
        (MapCache.prototype.set = function (s, x) {
          var W = getMapData(this, s),
            X = W.size;
          return W.set(s, x), (this.size += W.size == X ? 0 : 1), this;
        }),
        (SetCache.prototype.add = SetCache.prototype.push =
          function (s) {
            return this.__data__.set(s, er), this;
          }),
        (SetCache.prototype.has = function (s) {
          return this.__data__.has(s);
        }),
        (Stack.prototype.clear = function () {
          (this.__data__ = new ListCache()), (this.size = 0);
        }),
        (Stack.prototype.delete = function (s) {
          var x = this.__data__,
            W = x.delete(s);
          return (this.size = x.size), W;
        }),
        (Stack.prototype.get = function (s) {
          return this.__data__.get(s);
        }),
        (Stack.prototype.has = function (s) {
          return this.__data__.has(s);
        }),
        (Stack.prototype.set = function (s, x) {
          var W = this.__data__;
          if (W instanceof ListCache) {
            var X = W.__data__;
            if (!eJ || X.length < 199)
              return X.push([s, x]), (this.size = ++W.size), this;
            W = this.__data__ = new MapCache(X);
          }
          return W.set(s, x), (this.size = W.size), this;
        });
      var tt = eZ
          ? function (s) {
              return null == s
                ? []
                : (function (s, x) {
                    for (
                      var W = -1, X = null == s ? 0 : s.length, ee = 0, et = [];
                      ++W < X;

                    ) {
                      var er = s[W];
                      x(er, W, s) && (et[ee++] = er);
                    }
                    return et;
                  })(eZ((s = Object(s))), function (x) {
                    return eV.call(s, x);
                  });
            }
          : function () {
              return [];
            },
        tr = baseGetTag;
      function toSource(s) {
        if (null != s) {
          try {
            return eB.call(s);
          } catch (s) {}
          try {
            return s + "";
          } catch (s) {}
        }
        return "";
      }
      function eq(s, x) {
        return s === x || (s != s && x != x);
      }
      ((eQ && tr(new eQ(new ArrayBuffer(1))) != ev) ||
        (eJ && tr(new eJ()) != eu) ||
        (eX && tr(eX.resolve()) != ep) ||
        (e0 && tr(new e0()) != eg) ||
        (e1 && tr(new e1()) != ew)) &&
        (tr = function (s) {
          var x = baseGetTag(s),
            W = x == eh ? s.constructor : void 0,
            X = W ? toSource(W) : "";
          if (X)
            switch (X) {
              case e3:
                return ev;
              case e5:
                return eu;
              case e6:
                return ep;
              case e4:
                return eg;
              case e8:
                return ew;
            }
          return x;
        });
      var ta = baseIsArguments(
          (function () {
            return arguments;
          })()
        )
          ? baseIsArguments
          : function (s) {
              return (
                isObjectLike(s) && eL.call(s, "callee") && !eV.call(s, "callee")
              );
            },
        ts = Array.isArray,
        tl =
          eG ||
          function () {
            return !1;
          };
      function isFunction(s) {
        if (!isObject(s)) return !1;
        var x = baseGetTag(s);
        return (
          x == ec ||
          "[object GeneratorFunction]" == x ||
          "[object AsyncFunction]" == x ||
          "[object Proxy]" == x
        );
      }
      function isLength(s) {
        return (
          "number" == typeof s && s > -1 && s % 1 == 0 && s <= 9007199254740991
        );
      }
      function isObject(s) {
        var x = typeof s;
        return null != s && ("object" == x || "function" == x);
      }
      function isObjectLike(s) {
        return null != s && "object" == typeof s;
      }
      var tc = eR
        ? function (s) {
            return eR(s);
          }
        : function (s) {
            return isObjectLike(s) && isLength(s.length) && !!eC[baseGetTag(s)];
          };
      s.exports = function (s, x) {
        return (function baseIsEqual(s, x, W, X, ee) {
          return (
            s === x ||
            (null != s && null != x && (isObjectLike(s) || isObjectLike(x))
              ? (function (s, x, W, X, ee, et) {
                  var er = ts(s),
                    ec = ts(x),
                    ep = er ? eo : tr(s),
                    ew = ec ? eo : tr(x);
                  (ep = ep == ei ? eh : ep), (ew = ew == ei ? eh : ew);
                  var ey = ep == eh,
                    e_ = ew == eh,
                    eC = ep == ew;
                  if (eC && tl(s)) {
                    if (!tl(x)) return !1;
                    (er = !0), (ey = !1);
                  }
                  if (eC && !ey)
                    return (
                      et || (et = new Stack()),
                      er || tc(s)
                        ? equalArrays(s, x, W, X, ee, et)
                        : (function (s, x, W, X, ee, et, er) {
                            switch (W) {
                              case ev:
                                if (
                                  s.byteLength != x.byteLength ||
                                  s.byteOffset != x.byteOffset
                                )
                                  break;
                                (s = s.buffer), (x = x.buffer);
                              case eb:
                                if (
                                  s.byteLength != x.byteLength ||
                                  !et(new eH(s), new eH(x))
                                )
                                  break;
                                return !0;
                              case ea:
                              case es:
                              case ed:
                                return eq(+s, +x);
                              case el:
                                return (
                                  s.name == x.name && s.message == x.message
                                );
                              case ef:
                              case em:
                                return s == x + "";
                              case eu:
                                var ei = mapToArray;
                              case eg:
                                var eo = 1 & X;
                                if (
                                  (ei || (ei = setToArray),
                                  s.size != x.size && !eo)
                                )
                                  break;
                                var ec = er.get(s);
                                if (ec) return ec == x;
                                (X |= 2), er.set(s, x);
                                var eh = equalArrays(
                                  ei(s),
                                  ei(x),
                                  X,
                                  ee,
                                  et,
                                  er
                                );
                                return er.delete(s), eh;
                              case "[object Symbol]":
                                if (e7) return e7.call(s) == e7.call(x);
                            }
                            return !1;
                          })(s, x, ep, W, X, ee, et)
                    );
                  if (!(1 & W)) {
                    var ex = ey && eL.call(s, "__wrapped__"),
                      eE = e_ && eL.call(x, "__wrapped__");
                    if (ex || eE) {
                      var eA = ex ? s.value() : s,
                        eS = eE ? x.value() : x;
                      return et || (et = new Stack()), ee(eA, eS, W, X, et);
                    }
                  }
                  return (
                    !!eC &&
                    (et || (et = new Stack()),
                    (function (s, x, W, X, ee, et) {
                      var er = 1 & W,
                        ei = getAllKeys(s),
                        eo = ei.length;
                      if (eo != getAllKeys(x).length && !er) return !1;
                      for (var ea = eo; ea--; ) {
                        var es = ei[ea];
                        if (!(er ? es in x : eL.call(x, es))) return !1;
                      }
                      var el = et.get(s);
                      if (el && et.get(x)) return el == x;
                      var ec = !0;
                      et.set(s, x), et.set(x, s);
                      for (var eu = er; ++ea < eo; ) {
                        var ed = s[(es = ei[ea])],
                          eh = x[es];
                        if (X)
                          var ep = er
                            ? X(eh, ed, es, x, s, et)
                            : X(ed, eh, es, s, x, et);
                        if (
                          !(void 0 === ep
                            ? ed === eh || ee(ed, eh, W, X, et)
                            : ep)
                        ) {
                          ec = !1;
                          break;
                        }
                        eu || (eu = "constructor" == es);
                      }
                      if (ec && !eu) {
                        var ef = s.constructor,
                          eg = x.constructor;
                        ef != eg &&
                          "constructor" in s &&
                          "constructor" in x &&
                          !(
                            "function" == typeof ef &&
                            ef instanceof ef &&
                            "function" == typeof eg &&
                            eg instanceof eg
                          ) &&
                          (ec = !1);
                      }
                      return et.delete(s), et.delete(x), ec;
                    })(s, x, W, X, ee, et))
                  );
                })(s, x, W, X, baseIsEqual, ee)
              : s != s && x != x)
          );
        })(s, x);
      };
    },
    93096: function (s, x, W) {
      var X = "Expected a function",
        ee = 0 / 0,
        et = /^\s+|\s+$/g,
        er = /^[-+]0x[0-9a-f]+$/i,
        ei = /^0b[01]+$/i,
        eo = /^0o[0-7]+$/i,
        ea = parseInt,
        es = "object" == typeof W.g && W.g && W.g.Object === Object && W.g,
        el = "object" == typeof self && self && self.Object === Object && self,
        ec = es || el || Function("return this")(),
        eu = Object.prototype.toString,
        ed = Math.max,
        eh = Math.min,
        now = function () {
          return ec.Date.now();
        };
      function isObject(s) {
        var x = typeof s;
        return !!s && ("object" == x || "function" == x);
      }
      function toNumber(s) {
        if ("number" == typeof s) return s;
        if (
          "symbol" == typeof (x = s) ||
          (x && "object" == typeof x && "[object Symbol]" == eu.call(x))
        )
          return ee;
        if (isObject(s)) {
          var x,
            W = "function" == typeof s.valueOf ? s.valueOf() : s;
          s = isObject(W) ? W + "" : W;
        }
        if ("string" != typeof s) return 0 === s ? s : +s;
        s = s.replace(et, "");
        var X = ei.test(s);
        return X || eo.test(s)
          ? ea(s.slice(2), X ? 2 : 8)
          : er.test(s)
          ? ee
          : +s;
      }
      s.exports = function (s, x, W) {
        var ee = !0,
          et = !0;
        if ("function" != typeof s) throw TypeError(X);
        return (
          isObject(W) &&
            ((ee = "leading" in W ? !!W.leading : ee),
            (et = "trailing" in W ? !!W.trailing : et)),
          (function (s, x, W) {
            var ee,
              et,
              er,
              ei,
              eo,
              ea,
              es = 0,
              el = !1,
              ec = !1,
              eu = !0;
            if ("function" != typeof s) throw TypeError(X);
            function invokeFunc(x) {
              var W = ee,
                X = et;
              return (ee = et = void 0), (es = x), (ei = s.apply(X, W));
            }
            function shouldInvoke(s) {
              var W = s - ea,
                X = s - es;
              return void 0 === ea || W >= x || W < 0 || (ec && X >= er);
            }
            function timerExpired() {
              var s,
                W,
                X,
                ee = now();
              if (shouldInvoke(ee)) return trailingEdge(ee);
              eo = setTimeout(
                timerExpired,
                ((s = ee - ea),
                (W = ee - es),
                (X = x - s),
                ec ? eh(X, er - W) : X)
              );
            }
            function trailingEdge(s) {
              return ((eo = void 0), eu && ee)
                ? invokeFunc(s)
                : ((ee = et = void 0), ei);
            }
            function debounced() {
              var s,
                W = now(),
                X = shouldInvoke(W);
              if (((ee = arguments), (et = this), (ea = W), X)) {
                if (void 0 === eo)
                  return (
                    (es = s = ea),
                    (eo = setTimeout(timerExpired, x)),
                    el ? invokeFunc(s) : ei
                  );
                if (ec)
                  return (eo = setTimeout(timerExpired, x)), invokeFunc(ea);
              }
              return void 0 === eo && (eo = setTimeout(timerExpired, x)), ei;
            }
            return (
              (x = toNumber(x) || 0),
              isObject(W) &&
                ((el = !!W.leading),
                (er = (ec = "maxWait" in W)
                  ? ed(toNumber(W.maxWait) || 0, x)
                  : er),
                (eu = "trailing" in W ? !!W.trailing : eu)),
              (debounced.cancel = function () {
                void 0 !== eo && clearTimeout(eo),
                  (es = 0),
                  (ee = ea = et = eo = void 0);
              }),
              (debounced.flush = function () {
                return void 0 === eo ? ei : trailingEdge(now());
              }),
              debounced
            );
          })(s, x, { leading: ee, maxWait: x, trailing: et })
        );
      };
    },
    96486: function (s, x, W) {
      var X;
      (s = W.nmd(s)),
        function () {
          var ee,
            et = "Expected a function",
            er = "__lodash_hash_undefined__",
            ei = "__lodash_placeholder__",
            eo = 1 / 0,
            ea = 0 / 0,
            es = [
              ["ary", 128],
              ["bind", 1],
              ["bindKey", 2],
              ["curry", 8],
              ["curryRight", 16],
              ["flip", 512],
              ["partial", 32],
              ["partialRight", 64],
              ["rearg", 256],
            ],
            el = "[object Arguments]",
            ec = "[object Array]",
            eu = "[object Boolean]",
            ed = "[object Date]",
            eh = "[object Error]",
            ep = "[object Function]",
            ef = "[object GeneratorFunction]",
            eg = "[object Map]",
            em = "[object Number]",
            ew = "[object Object]",
            eb = "[object Promise]",
            ev = "[object RegExp]",
            ey = "[object Set]",
            e_ = "[object String]",
            eC = "[object Symbol]",
            ex = "[object WeakMap]",
            eE = "[object ArrayBuffer]",
            eA = "[object DataView]",
            eS = "[object Float32Array]",
            ek = "[object Float64Array]",
            eT = "[object Int8Array]",
            eI = "[object Int16Array]",
            eP = "[object Int32Array]",
            eR = "[object Uint8Array]",
            eN = "[object Uint8ClampedArray]",
            eO = "[object Uint16Array]",
            eM = "[object Uint32Array]",
            eD = /\b__p \+= '';/g,
            eB = /\b(__p \+=) '' \+/g,
            eL = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
            ej = /&(?:amp|lt|gt|quot|#39);/g,
            eU = /[&<>"']/g,
            e$ = RegExp(ej.source),
            eF = RegExp(eU.source),
            ez = /<%-([\s\S]+?)%>/g,
            eH = /<%([\s\S]+?)%>/g,
            eV = /<%=([\s\S]+?)%>/g,
            eW = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
            eK = /^\w*$/,
            eZ =
              /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
            eG = /[\\^$.*+?()[\]{}|]/g,
            eY = RegExp(eG.source),
            eQ = /^\s+/,
            eJ = /\s/,
            eX = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
            e0 = /\{\n\/\* \[wrapped with (.+)\] \*/,
            e1 = /,? & /,
            e2 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
            e3 = /[()=,{}\[\]\/\s]/,
            e5 = /\\(\\)?/g,
            e6 = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
            e4 = /\w*$/,
            e8 = /^[-+]0x[0-9a-f]+$/i,
            e9 = /^0b[01]+$/i,
            e7 = /^\[object .+?Constructor\]$/,
            tt = /^0o[0-7]+$/i,
            tr = /^(?:0|[1-9]\d*)$/,
            ta = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
            ts = /($^)/,
            tl = /['\n\r\u2028\u2029\\]/g,
            tc = "\ud800-\udfff",
            tu = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
            td = "\\u2700-\\u27bf",
            th = "a-z\\xdf-\\xf6\\xf8-\\xff",
            tp = "A-Z\\xc0-\\xd6\\xd8-\\xde",
            tf = "\\ufe0e\\ufe0f",
            tg =
              "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
            tm = "['’]",
            tw = "[" + tg + "]",
            tb = "[" + tu + "]",
            tv = "[" + th + "]",
            ty = "[^" + tc + tg + "\\d+" + td + th + tp + "]",
            t_ = "\ud83c[\udffb-\udfff]",
            tC = "[^" + tc + "]",
            tx = "(?:\ud83c[\udde6-\uddff]){2}",
            tE = "[\ud800-\udbff][\udc00-\udfff]",
            tA = "[" + tp + "]",
            tS = "\\u200d",
            tk = "(?:" + tv + "|" + ty + ")",
            tT = "(?:" + tm + "(?:d|ll|m|re|s|t|ve))?",
            tI = "(?:" + tm + "(?:D|LL|M|RE|S|T|VE))?",
            tP = "(?:" + tb + "|" + t_ + ")?",
            tR = "[" + tf + "]?",
            tN =
              "(?:" +
              tS +
              "(?:" +
              [tC, tx, tE].join("|") +
              ")" +
              tR +
              tP +
              ")*",
            tO = tR + tP + tN,
            tM = "(?:" + ["[" + td + "]", tx, tE].join("|") + ")" + tO,
            tD =
              "(?:" +
              [tC + tb + "?", tb, tx, tE, "[" + tc + "]"].join("|") +
              ")",
            tB = RegExp(tm, "g"),
            tL = RegExp(tb, "g"),
            tj = RegExp(t_ + "(?=" + t_ + ")|" + tD + tO, "g"),
            tU = RegExp(
              [
                tA +
                  "?" +
                  tv +
                  "+" +
                  tT +
                  "(?=" +
                  [tw, tA, "$"].join("|") +
                  ")",
                "(?:" +
                  tA +
                  "|" +
                  ty +
                  ")+" +
                  tI +
                  "(?=" +
                  [tw, tA + tk, "$"].join("|") +
                  ")",
                tA + "?" + tk + "+" + tT,
                tA + "+" + tI,
                "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",
                "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",
                "\\d+",
                tM,
              ].join("|"),
              "g"
            ),
            t$ = RegExp("[" + tS + tc + tu + tf + "]"),
            tF =
              /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
            tz = [
              "Array",
              "Buffer",
              "DataView",
              "Date",
              "Error",
              "Float32Array",
              "Float64Array",
              "Function",
              "Int8Array",
              "Int16Array",
              "Int32Array",
              "Map",
              "Math",
              "Object",
              "Promise",
              "RegExp",
              "Set",
              "String",
              "Symbol",
              "TypeError",
              "Uint8Array",
              "Uint8ClampedArray",
              "Uint16Array",
              "Uint32Array",
              "WeakMap",
              "_",
              "clearTimeout",
              "isFinite",
              "parseInt",
              "setTimeout",
            ],
            tH = -1,
            tq = {};
          (tq[eS] =
            tq[ek] =
            tq[eT] =
            tq[eI] =
            tq[eP] =
            tq[eR] =
            tq[eN] =
            tq[eO] =
            tq[eM] =
              !0),
            (tq[el] =
              tq[ec] =
              tq[eE] =
              tq[eu] =
              tq[eA] =
              tq[ed] =
              tq[eh] =
              tq[ep] =
              tq[eg] =
              tq[em] =
              tq[ew] =
              tq[ev] =
              tq[ey] =
              tq[e_] =
              tq[ex] =
                !1);
          var tV = {};
          (tV[el] =
            tV[ec] =
            tV[eE] =
            tV[eA] =
            tV[eu] =
            tV[ed] =
            tV[eS] =
            tV[ek] =
            tV[eT] =
            tV[eI] =
            tV[eP] =
            tV[eg] =
            tV[em] =
            tV[ew] =
            tV[ev] =
            tV[ey] =
            tV[e_] =
            tV[eC] =
            tV[eR] =
            tV[eN] =
            tV[eO] =
            tV[eM] =
              !0),
            (tV[eh] = tV[ep] = tV[ex] = !1);
          var tW = {
              "\\": "\\",
              "'": "'",
              "\n": "n",
              "\r": "r",
              "\u2028": "u2028",
              "\u2029": "u2029",
            },
            tK = parseFloat,
            tZ = parseInt,
            tG = "object" == typeof W.g && W.g && W.g.Object === Object && W.g,
            tY =
              "object" == typeof self && self && self.Object === Object && self,
            tQ = tG || tY || Function("return this")(),
            tJ = x && !x.nodeType && x,
            tX = tJ && s && !s.nodeType && s,
            t0 = tX && tX.exports === tJ,
            t1 = t0 && tG.process,
            t2 = (function () {
              try {
                var s = tX && tX.require && tX.require("util").types;
                if (s) return s;
                return t1 && t1.binding && t1.binding("util");
              } catch (s) {}
            })(),
            t3 = t2 && t2.isArrayBuffer,
            t5 = t2 && t2.isDate,
            t6 = t2 && t2.isMap,
            t4 = t2 && t2.isRegExp,
            t8 = t2 && t2.isSet,
            t9 = t2 && t2.isTypedArray;
          function apply(s, x, W) {
            switch (W.length) {
              case 0:
                return s.call(x);
              case 1:
                return s.call(x, W[0]);
              case 2:
                return s.call(x, W[0], W[1]);
              case 3:
                return s.call(x, W[0], W[1], W[2]);
            }
            return s.apply(x, W);
          }
          function arrayAggregator(s, x, W, X) {
            for (var ee = -1, et = null == s ? 0 : s.length; ++ee < et; ) {
              var er = s[ee];
              x(X, er, W(er), s);
            }
            return X;
          }
          function arrayEach(s, x) {
            for (
              var W = -1, X = null == s ? 0 : s.length;
              ++W < X && !1 !== x(s[W], W, s);

            );
            return s;
          }
          function arrayEvery(s, x) {
            for (var W = -1, X = null == s ? 0 : s.length; ++W < X; )
              if (!x(s[W], W, s)) return !1;
            return !0;
          }
          function arrayFilter(s, x) {
            for (
              var W = -1, X = null == s ? 0 : s.length, ee = 0, et = [];
              ++W < X;

            ) {
              var er = s[W];
              x(er, W, s) && (et[ee++] = er);
            }
            return et;
          }
          function arrayIncludes(s, x) {
            return !!(null == s ? 0 : s.length) && baseIndexOf(s, x, 0) > -1;
          }
          function arrayIncludesWith(s, x, W) {
            for (var X = -1, ee = null == s ? 0 : s.length; ++X < ee; )
              if (W(x, s[X])) return !0;
            return !1;
          }
          function arrayMap(s, x) {
            for (
              var W = -1, X = null == s ? 0 : s.length, ee = Array(X);
              ++W < X;

            )
              ee[W] = x(s[W], W, s);
            return ee;
          }
          function arrayPush(s, x) {
            for (var W = -1, X = x.length, ee = s.length; ++W < X; )
              s[ee + W] = x[W];
            return s;
          }
          function arrayReduce(s, x, W, X) {
            var ee = -1,
              et = null == s ? 0 : s.length;
            for (X && et && (W = s[++ee]); ++ee < et; ) W = x(W, s[ee], ee, s);
            return W;
          }
          function arrayReduceRight(s, x, W, X) {
            var ee = null == s ? 0 : s.length;
            for (X && ee && (W = s[--ee]); ee--; ) W = x(W, s[ee], ee, s);
            return W;
          }
          function arraySome(s, x) {
            for (var W = -1, X = null == s ? 0 : s.length; ++W < X; )
              if (x(s[W], W, s)) return !0;
            return !1;
          }
          var t7 = baseProperty("length");
          function baseFindKey(s, x, W) {
            var X;
            return (
              W(s, function (s, W, ee) {
                if (x(s, W, ee)) return (X = W), !1;
              }),
              X
            );
          }
          function baseFindIndex(s, x, W, X) {
            for (
              var ee = s.length, et = W + (X ? 1 : -1);
              X ? et-- : ++et < ee;

            )
              if (x(s[et], et, s)) return et;
            return -1;
          }
          function baseIndexOf(s, x, W) {
            return x == x
              ? (function (s, x, W) {
                  for (var X = W - 1, ee = s.length; ++X < ee; )
                    if (s[X] === x) return X;
                  return -1;
                })(s, x, W)
              : baseFindIndex(s, baseIsNaN, W);
          }
          function baseIndexOfWith(s, x, W, X) {
            for (var ee = W - 1, et = s.length; ++ee < et; )
              if (X(s[ee], x)) return ee;
            return -1;
          }
          function baseIsNaN(s) {
            return s != s;
          }
          function baseMean(s, x) {
            var W = null == s ? 0 : s.length;
            return W ? baseSum(s, x) / W : ea;
          }
          function baseProperty(s) {
            return function (x) {
              return null == x ? ee : x[s];
            };
          }
          function basePropertyOf(s) {
            return function (x) {
              return null == s ? ee : s[x];
            };
          }
          function baseReduce(s, x, W, X, ee) {
            return (
              ee(s, function (s, ee, et) {
                W = X ? ((X = !1), s) : x(W, s, ee, et);
              }),
              W
            );
          }
          function baseSum(s, x) {
            for (var W, X = -1, et = s.length; ++X < et; ) {
              var er = x(s[X]);
              ee !== er && (W = ee === W ? er : W + er);
            }
            return W;
          }
          function baseTimes(s, x) {
            for (var W = -1, X = Array(s); ++W < s; ) X[W] = x(W);
            return X;
          }
          function baseTrim(s) {
            return s ? s.slice(0, trimmedEndIndex(s) + 1).replace(eQ, "") : s;
          }
          function baseUnary(s) {
            return function (x) {
              return s(x);
            };
          }
          function baseValues(s, x) {
            return arrayMap(x, function (x) {
              return s[x];
            });
          }
          function cacheHas(s, x) {
            return s.has(x);
          }
          function charsStartIndex(s, x) {
            for (
              var W = -1, X = s.length;
              ++W < X && baseIndexOf(x, s[W], 0) > -1;

            );
            return W;
          }
          function charsEndIndex(s, x) {
            for (var W = s.length; W-- && baseIndexOf(x, s[W], 0) > -1; );
            return W;
          }
          var re = basePropertyOf({
              À: "A",
              Á: "A",
              Â: "A",
              Ã: "A",
              Ä: "A",
              Å: "A",
              à: "a",
              á: "a",
              â: "a",
              ã: "a",
              ä: "a",
              å: "a",
              Ç: "C",
              ç: "c",
              Ð: "D",
              ð: "d",
              È: "E",
              É: "E",
              Ê: "E",
              Ë: "E",
              è: "e",
              é: "e",
              ê: "e",
              ë: "e",
              Ì: "I",
              Í: "I",
              Î: "I",
              Ï: "I",
              ì: "i",
              í: "i",
              î: "i",
              ï: "i",
              Ñ: "N",
              ñ: "n",
              Ò: "O",
              Ó: "O",
              Ô: "O",
              Õ: "O",
              Ö: "O",
              Ø: "O",
              ò: "o",
              ó: "o",
              ô: "o",
              õ: "o",
              ö: "o",
              ø: "o",
              Ù: "U",
              Ú: "U",
              Û: "U",
              Ü: "U",
              ù: "u",
              ú: "u",
              û: "u",
              ü: "u",
              Ý: "Y",
              ý: "y",
              ÿ: "y",
              Æ: "Ae",
              æ: "ae",
              Þ: "Th",
              þ: "th",
              ß: "ss",
              Ā: "A",
              Ă: "A",
              Ą: "A",
              ā: "a",
              ă: "a",
              ą: "a",
              Ć: "C",
              Ĉ: "C",
              Ċ: "C",
              Č: "C",
              ć: "c",
              ĉ: "c",
              ċ: "c",
              č: "c",
              Ď: "D",
              Đ: "D",
              ď: "d",
              đ: "d",
              Ē: "E",
              Ĕ: "E",
              Ė: "E",
              Ę: "E",
              Ě: "E",
              ē: "e",
              ĕ: "e",
              ė: "e",
              ę: "e",
              ě: "e",
              Ĝ: "G",
              Ğ: "G",
              Ġ: "G",
              Ģ: "G",
              ĝ: "g",
              ğ: "g",
              ġ: "g",
              ģ: "g",
              Ĥ: "H",
              Ħ: "H",
              ĥ: "h",
              ħ: "h",
              Ĩ: "I",
              Ī: "I",
              Ĭ: "I",
              Į: "I",
              İ: "I",
              ĩ: "i",
              ī: "i",
              ĭ: "i",
              į: "i",
              ı: "i",
              Ĵ: "J",
              ĵ: "j",
              Ķ: "K",
              ķ: "k",
              ĸ: "k",
              Ĺ: "L",
              Ļ: "L",
              Ľ: "L",
              Ŀ: "L",
              Ł: "L",
              ĺ: "l",
              ļ: "l",
              ľ: "l",
              ŀ: "l",
              ł: "l",
              Ń: "N",
              Ņ: "N",
              Ň: "N",
              Ŋ: "N",
              ń: "n",
              ņ: "n",
              ň: "n",
              ŋ: "n",
              Ō: "O",
              Ŏ: "O",
              Ő: "O",
              ō: "o",
              ŏ: "o",
              ő: "o",
              Ŕ: "R",
              Ŗ: "R",
              Ř: "R",
              ŕ: "r",
              ŗ: "r",
              ř: "r",
              Ś: "S",
              Ŝ: "S",
              Ş: "S",
              Š: "S",
              ś: "s",
              ŝ: "s",
              ş: "s",
              š: "s",
              Ţ: "T",
              Ť: "T",
              Ŧ: "T",
              ţ: "t",
              ť: "t",
              ŧ: "t",
              Ũ: "U",
              Ū: "U",
              Ŭ: "U",
              Ů: "U",
              Ű: "U",
              Ų: "U",
              ũ: "u",
              ū: "u",
              ŭ: "u",
              ů: "u",
              ű: "u",
              ų: "u",
              Ŵ: "W",
              ŵ: "w",
              Ŷ: "Y",
              ŷ: "y",
              Ÿ: "Y",
              Ź: "Z",
              Ż: "Z",
              Ž: "Z",
              ź: "z",
              ż: "z",
              ž: "z",
              Ĳ: "IJ",
              ĳ: "ij",
              Œ: "Oe",
              œ: "oe",
              ŉ: "'n",
              ſ: "s",
            }),
            rt = basePropertyOf({
              "&": "&amp;",
              "<": "&lt;",
              ">": "&gt;",
              '"': "&quot;",
              "'": "&#39;",
            });
          function escapeStringChar(s) {
            return "\\" + tW[s];
          }
          function hasUnicode(s) {
            return t$.test(s);
          }
          function mapToArray(s) {
            var x = -1,
              W = Array(s.size);
            return (
              s.forEach(function (s, X) {
                W[++x] = [X, s];
              }),
              W
            );
          }
          function overArg(s, x) {
            return function (W) {
              return s(x(W));
            };
          }
          function replaceHolders(s, x) {
            for (var W = -1, X = s.length, ee = 0, et = []; ++W < X; ) {
              var er = s[W];
              (er === x || er === ei) && ((s[W] = ei), (et[ee++] = W));
            }
            return et;
          }
          function setToArray(s) {
            var x = -1,
              W = Array(s.size);
            return (
              s.forEach(function (s) {
                W[++x] = s;
              }),
              W
            );
          }
          function stringSize(s) {
            return hasUnicode(s)
              ? (function (s) {
                  for (var x = (tj.lastIndex = 0); tj.test(s); ) ++x;
                  return x;
                })(s)
              : t7(s);
          }
          function stringToArray(s) {
            return hasUnicode(s) ? s.match(tj) || [] : s.split("");
          }
          function trimmedEndIndex(s) {
            for (var x = s.length; x-- && eJ.test(s.charAt(x)); );
            return x;
          }
          var rn = basePropertyOf({
              "&amp;": "&",
              "&lt;": "<",
              "&gt;": ">",
              "&quot;": '"',
              "&#39;": "'",
            }),
            ro = (function runInContext(s) {
              var x,
                W,
                X,
                eJ,
                tc = (s =
                  null == s ? tQ : ro.defaults(tQ.Object(), s, ro.pick(tQ, tz)))
                  .Array,
                tu = s.Date,
                td = s.Error,
                th = s.Function,
                tp = s.Math,
                tf = s.Object,
                tg = s.RegExp,
                tm = s.String,
                tw = s.TypeError,
                tb = tc.prototype,
                tv = th.prototype,
                ty = tf.prototype,
                t_ = s["__core-js_shared__"],
                tC = tv.toString,
                tx = ty.hasOwnProperty,
                tE = 0,
                tA = (x = /[^.]+$/.exec(
                  (t_ && t_.keys && t_.keys.IE_PROTO) || ""
                ))
                  ? "Symbol(src)_1." + x
                  : "",
                tS = ty.toString,
                tk = tC.call(tf),
                tT = tQ._,
                tI = tg(
                  "^" +
                    tC
                      .call(tx)
                      .replace(eG, "\\$&")
                      .replace(
                        /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                        "$1.*?"
                      ) +
                    "$"
                ),
                tP = t0 ? s.Buffer : ee,
                tR = s.Symbol,
                tN = s.Uint8Array,
                tO = tP ? tP.allocUnsafe : ee,
                tM = overArg(tf.getPrototypeOf, tf),
                tD = tf.create,
                tj = ty.propertyIsEnumerable,
                t$ = tb.splice,
                tW = tR ? tR.isConcatSpreadable : ee,
                tG = tR ? tR.iterator : ee,
                tY = tR ? tR.toStringTag : ee,
                tJ = (function () {
                  try {
                    var s = getNative(tf, "defineProperty");
                    return s({}, "", {}), s;
                  } catch (s) {}
                })(),
                tX = s.clearTimeout !== tQ.clearTimeout && s.clearTimeout,
                t1 = tu && tu.now !== tQ.Date.now && tu.now,
                t2 = s.setTimeout !== tQ.setTimeout && s.setTimeout,
                t7 = tp.ceil,
                ra = tp.floor,
                rs = tf.getOwnPropertySymbols,
                rl = tP ? tP.isBuffer : ee,
                rc = s.isFinite,
                ru = tb.join,
                rd = overArg(tf.keys, tf),
                rh = tp.max,
                rp = tp.min,
                rf = tu.now,
                rg = s.parseInt,
                rm = tp.random,
                rw = tb.reverse,
                rb = getNative(s, "DataView"),
                rv = getNative(s, "Map"),
                ry = getNative(s, "Promise"),
                r_ = getNative(s, "Set"),
                rC = getNative(s, "WeakMap"),
                rx = getNative(tf, "create"),
                rE = rC && new rC(),
                rA = {},
                rS = toSource(rb),
                rk = toSource(rv),
                rT = toSource(ry),
                rI = toSource(r_),
                rP = toSource(rC),
                rR = tR ? tR.prototype : ee,
                rN = rR ? rR.valueOf : ee,
                rO = rR ? rR.toString : ee;
              function lodash(s) {
                if (isObjectLike(s) && !iP(s) && !(s instanceof LazyWrapper)) {
                  if (s instanceof LodashWrapper) return s;
                  if (tx.call(s, "__wrapped__")) return wrapperClone(s);
                }
                return new LodashWrapper(s);
              }
              var rM = (function () {
                function object() {}
                return function (s) {
                  if (!isObject(s)) return {};
                  if (tD) return tD(s);
                  object.prototype = s;
                  var x = new object();
                  return (object.prototype = ee), x;
                };
              })();
              function baseLodash() {}
              function LodashWrapper(s, x) {
                (this.__wrapped__ = s),
                  (this.__actions__ = []),
                  (this.__chain__ = !!x),
                  (this.__index__ = 0),
                  (this.__values__ = ee);
              }
              function LazyWrapper(s) {
                (this.__wrapped__ = s),
                  (this.__actions__ = []),
                  (this.__dir__ = 1),
                  (this.__filtered__ = !1),
                  (this.__iteratees__ = []),
                  (this.__takeCount__ = 4294967295),
                  (this.__views__ = []);
              }
              function Hash(s) {
                var x = -1,
                  W = null == s ? 0 : s.length;
                for (this.clear(); ++x < W; ) {
                  var X = s[x];
                  this.set(X[0], X[1]);
                }
              }
              function ListCache(s) {
                var x = -1,
                  W = null == s ? 0 : s.length;
                for (this.clear(); ++x < W; ) {
                  var X = s[x];
                  this.set(X[0], X[1]);
                }
              }
              function MapCache(s) {
                var x = -1,
                  W = null == s ? 0 : s.length;
                for (this.clear(); ++x < W; ) {
                  var X = s[x];
                  this.set(X[0], X[1]);
                }
              }
              function SetCache(s) {
                var x = -1,
                  W = null == s ? 0 : s.length;
                for (this.__data__ = new MapCache(); ++x < W; ) this.add(s[x]);
              }
              function Stack(s) {
                var x = (this.__data__ = new ListCache(s));
                this.size = x.size;
              }
              function arrayLikeKeys(s, x) {
                var W = iP(s),
                  X = !W && iI(s),
                  ee = !W && !X && iN(s),
                  et = !W && !X && !ee && iL(s),
                  er = W || X || ee || et,
                  ei = er ? baseTimes(s.length, tm) : [],
                  eo = ei.length;
                for (var ea in s)
                  (x || tx.call(s, ea)) &&
                    !(
                      er &&
                      ("length" == ea ||
                        (ee && ("offset" == ea || "parent" == ea)) ||
                        (et &&
                          ("buffer" == ea ||
                            "byteLength" == ea ||
                            "byteOffset" == ea)) ||
                        isIndex(ea, eo))
                    ) &&
                    ei.push(ea);
                return ei;
              }
              function arraySample(s) {
                var x = s.length;
                return x ? s[baseRandom(0, x - 1)] : ee;
              }
              function assignMergeValue(s, x, W) {
                ((ee === W || eq(s[x], W)) && (ee !== W || x in s)) ||
                  baseAssignValue(s, x, W);
              }
              function assignValue(s, x, W) {
                var X = s[x];
                (tx.call(s, x) && eq(X, W) && (ee !== W || x in s)) ||
                  baseAssignValue(s, x, W);
              }
              function assocIndexOf(s, x) {
                for (var W = s.length; W--; ) if (eq(s[W][0], x)) return W;
                return -1;
              }
              function baseAggregator(s, x, W, X) {
                return (
                  rD(s, function (s, ee, et) {
                    x(X, s, W(s), et);
                  }),
                  X
                );
              }
              function baseAssign(s, x) {
                return s && copyObject(x, keys(x), s);
              }
              function baseAssignValue(s, x, W) {
                "__proto__" == x && tJ
                  ? tJ(s, x, {
                      configurable: !0,
                      enumerable: !0,
                      value: W,
                      writable: !0,
                    })
                  : (s[x] = W);
              }
              function baseAt(s, x) {
                for (
                  var W = -1, X = x.length, et = tc(X), er = null == s;
                  ++W < X;

                )
                  et[W] = er ? ee : get(s, x[W]);
                return et;
              }
              function baseClamp(s, x, W) {
                return (
                  s == s &&
                    (ee !== W && (s = s <= W ? s : W),
                    ee !== x && (s = s >= x ? s : x)),
                  s
                );
              }
              function baseClone(s, x, W, X, et, er) {
                var ei,
                  eo = 1 & x,
                  ea = 2 & x,
                  es = 4 & x;
                if ((W && (ei = et ? W(s, X, et, er) : W(s)), ee !== ei))
                  return ei;
                if (!isObject(s)) return s;
                var ec = iP(s);
                if (ec) {
                  if (
                    ((eh = s.length),
                    (eb = new s.constructor(eh)),
                    eh &&
                      "string" == typeof s[0] &&
                      tx.call(s, "index") &&
                      ((eb.index = s.index), (eb.input = s.input)),
                    (ei = eb),
                    !eo)
                  )
                    return copyArray(s, ei);
                } else {
                  var eh,
                    eb,
                    ex,
                    eD,
                    eB,
                    eL = rW(s),
                    ej = eL == ep || eL == ef;
                  if (iN(s)) return cloneBuffer(s, eo);
                  if (eL == ew || eL == el || (ej && !et)) {
                    if (((ei = ea || ej ? {} : initCloneObject(s)), !eo))
                      return ea
                        ? ((ex = (eB = ei) && copyObject(s, keysIn(s), eB)),
                          copyObject(s, rV(s), ex))
                        : ((eD = baseAssign(ei, s)), copyObject(s, rq(s), eD));
                  } else {
                    if (!tV[eL]) return et ? s : {};
                    ei = (function (s, x, W) {
                      var X,
                        ee,
                        et = s.constructor;
                      switch (x) {
                        case eE:
                          return cloneArrayBuffer(s);
                        case eu:
                        case ed:
                          return new et(+s);
                        case eA:
                          return (
                            (X = W ? cloneArrayBuffer(s.buffer) : s.buffer),
                            new s.constructor(X, s.byteOffset, s.byteLength)
                          );
                        case eS:
                        case ek:
                        case eT:
                        case eI:
                        case eP:
                        case eR:
                        case eN:
                        case eO:
                        case eM:
                          return cloneTypedArray(s, W);
                        case eg:
                          return new et();
                        case em:
                        case e_:
                          return new et(s);
                        case ev:
                          return (
                            ((ee = new s.constructor(
                              s.source,
                              e4.exec(s)
                            )).lastIndex = s.lastIndex),
                            ee
                          );
                        case ey:
                          return new et();
                        case eC:
                          return rN ? tf(rN.call(s)) : {};
                      }
                    })(s, eL, eo);
                  }
                }
                er || (er = new Stack());
                var eU = er.get(s);
                if (eU) return eU;
                er.set(s, ei),
                  iB(s)
                    ? s.forEach(function (X) {
                        ei.add(baseClone(X, x, W, X, s, er));
                      })
                    : iM(s) &&
                      s.forEach(function (X, ee) {
                        ei.set(ee, baseClone(X, x, W, ee, s, er));
                      });
                var e$ = es
                    ? ea
                      ? getAllKeysIn
                      : getAllKeys
                    : ea
                    ? keysIn
                    : keys,
                  eF = ec ? ee : e$(s);
                return (
                  arrayEach(eF || s, function (X, ee) {
                    eF && (X = s[(ee = X)]),
                      assignValue(ei, ee, baseClone(X, x, W, ee, s, er));
                  }),
                  ei
                );
              }
              function baseConformsTo(s, x, W) {
                var X = W.length;
                if (null == s) return !X;
                for (s = tf(s); X--; ) {
                  var et = W[X],
                    er = x[et],
                    ei = s[et];
                  if ((ee === ei && !(et in s)) || !er(ei)) return !1;
                }
                return !0;
              }
              function baseDelay(s, x, W) {
                if ("function" != typeof s) throw new tw(et);
                return rG(function () {
                  s.apply(ee, W);
                }, x);
              }
              function baseDifference(s, x, W, X) {
                var ee = -1,
                  et = arrayIncludes,
                  er = !0,
                  ei = s.length,
                  eo = [],
                  ea = x.length;
                if (!ei) return eo;
                W && (x = arrayMap(x, baseUnary(W))),
                  X
                    ? ((et = arrayIncludesWith), (er = !1))
                    : x.length >= 200 &&
                      ((et = cacheHas), (er = !1), (x = new SetCache(x)));
                e: for (; ++ee < ei; ) {
                  var es = s[ee],
                    el = null == W ? es : W(es);
                  if (((es = X || 0 !== es ? es : 0), er && el == el)) {
                    for (var ec = ea; ec--; ) if (x[ec] === el) continue e;
                    eo.push(es);
                  } else et(x, el, X) || eo.push(es);
                }
                return eo;
              }
              (lodash.templateSettings = {
                escape: ez,
                evaluate: eH,
                interpolate: eV,
                variable: "",
                imports: { _: lodash },
              }),
                (lodash.prototype = baseLodash.prototype),
                (lodash.prototype.constructor = lodash),
                (LodashWrapper.prototype = rM(baseLodash.prototype)),
                (LodashWrapper.prototype.constructor = LodashWrapper),
                (LazyWrapper.prototype = rM(baseLodash.prototype)),
                (LazyWrapper.prototype.constructor = LazyWrapper),
                (Hash.prototype.clear = function () {
                  (this.__data__ = rx ? rx(null) : {}), (this.size = 0);
                }),
                (Hash.prototype.delete = function (s) {
                  var x = this.has(s) && delete this.__data__[s];
                  return (this.size -= x ? 1 : 0), x;
                }),
                (Hash.prototype.get = function (s) {
                  var x = this.__data__;
                  if (rx) {
                    var W = x[s];
                    return W === er ? ee : W;
                  }
                  return tx.call(x, s) ? x[s] : ee;
                }),
                (Hash.prototype.has = function (s) {
                  var x = this.__data__;
                  return rx ? ee !== x[s] : tx.call(x, s);
                }),
                (Hash.prototype.set = function (s, x) {
                  var W = this.__data__;
                  return (
                    (this.size += this.has(s) ? 0 : 1),
                    (W[s] = rx && ee === x ? er : x),
                    this
                  );
                }),
                (ListCache.prototype.clear = function () {
                  (this.__data__ = []), (this.size = 0);
                }),
                (ListCache.prototype.delete = function (s) {
                  var x = this.__data__,
                    W = assocIndexOf(x, s);
                  return (
                    !(W < 0) &&
                    (W == x.length - 1 ? x.pop() : t$.call(x, W, 1),
                    --this.size,
                    !0)
                  );
                }),
                (ListCache.prototype.get = function (s) {
                  var x = this.__data__,
                    W = assocIndexOf(x, s);
                  return W < 0 ? ee : x[W][1];
                }),
                (ListCache.prototype.has = function (s) {
                  return assocIndexOf(this.__data__, s) > -1;
                }),
                (ListCache.prototype.set = function (s, x) {
                  var W = this.__data__,
                    X = assocIndexOf(W, s);
                  return (
                    X < 0 ? (++this.size, W.push([s, x])) : (W[X][1] = x), this
                  );
                }),
                (MapCache.prototype.clear = function () {
                  (this.size = 0),
                    (this.__data__ = {
                      hash: new Hash(),
                      map: new (rv || ListCache)(),
                      string: new Hash(),
                    });
                }),
                (MapCache.prototype.delete = function (s) {
                  var x = getMapData(this, s).delete(s);
                  return (this.size -= x ? 1 : 0), x;
                }),
                (MapCache.prototype.get = function (s) {
                  return getMapData(this, s).get(s);
                }),
                (MapCache.prototype.has = function (s) {
                  return getMapData(this, s).has(s);
                }),
                (MapCache.prototype.set = function (s, x) {
                  var W = getMapData(this, s),
                    X = W.size;
                  return W.set(s, x), (this.size += W.size == X ? 0 : 1), this;
                }),
                (SetCache.prototype.add = SetCache.prototype.push =
                  function (s) {
                    return this.__data__.set(s, er), this;
                  }),
                (SetCache.prototype.has = function (s) {
                  return this.__data__.has(s);
                }),
                (Stack.prototype.clear = function () {
                  (this.__data__ = new ListCache()), (this.size = 0);
                }),
                (Stack.prototype.delete = function (s) {
                  var x = this.__data__,
                    W = x.delete(s);
                  return (this.size = x.size), W;
                }),
                (Stack.prototype.get = function (s) {
                  return this.__data__.get(s);
                }),
                (Stack.prototype.has = function (s) {
                  return this.__data__.has(s);
                }),
                (Stack.prototype.set = function (s, x) {
                  var W = this.__data__;
                  if (W instanceof ListCache) {
                    var X = W.__data__;
                    if (!rv || X.length < 199)
                      return X.push([s, x]), (this.size = ++W.size), this;
                    W = this.__data__ = new MapCache(X);
                  }
                  return W.set(s, x), (this.size = W.size), this;
                });
              var rD = createBaseEach(baseForOwn),
                rB = createBaseEach(baseForOwnRight, !0);
              function baseEvery(s, x) {
                var W = !0;
                return (
                  rD(s, function (s, X, ee) {
                    return (W = !!x(s, X, ee));
                  }),
                  W
                );
              }
              function baseExtremum(s, x, W) {
                for (var X = -1, et = s.length; ++X < et; ) {
                  var er = s[X],
                    ei = x(er);
                  if (
                    null != ei &&
                    (ee === eo ? ei == ei && !isSymbol(ei) : W(ei, eo))
                  )
                    var eo = ei,
                      ea = er;
                }
                return ea;
              }
              function baseFilter(s, x) {
                var W = [];
                return (
                  rD(s, function (s, X, ee) {
                    x(s, X, ee) && W.push(s);
                  }),
                  W
                );
              }
              function baseFlatten(s, x, W, X, ee) {
                var et = -1,
                  er = s.length;
                for (W || (W = isFlattenable), ee || (ee = []); ++et < er; ) {
                  var ei = s[et];
                  x > 0 && W(ei)
                    ? x > 1
                      ? baseFlatten(ei, x - 1, W, X, ee)
                      : arrayPush(ee, ei)
                    : X || (ee[ee.length] = ei);
                }
                return ee;
              }
              var rL = createBaseFor(),
                rj = createBaseFor(!0);
              function baseForOwn(s, x) {
                return s && rL(s, x, keys);
              }
              function baseForOwnRight(s, x) {
                return s && rj(s, x, keys);
              }
              function baseFunctions(s, x) {
                return arrayFilter(x, function (x) {
                  return isFunction(s[x]);
                });
              }
              function baseGet(s, x) {
                x = castPath(x, s);
                for (var W = 0, X = x.length; null != s && W < X; )
                  s = s[toKey(x[W++])];
                return W && W == X ? s : ee;
              }
              function baseGetAllKeys(s, x, W) {
                var X = x(s);
                return iP(s) ? X : arrayPush(X, W(s));
              }
              function baseGetTag(s) {
                return null == s
                  ? ee === s
                    ? "[object Undefined]"
                    : "[object Null]"
                  : tY && tY in tf(s)
                  ? (function (s) {
                      var x = tx.call(s, tY),
                        W = s[tY];
                      try {
                        s[tY] = ee;
                        var X = !0;
                      } catch (s) {}
                      var et = tS.call(s);
                      return X && (x ? (s[tY] = W) : delete s[tY]), et;
                    })(s)
                  : tS.call(s);
              }
              function baseGt(s, x) {
                return s > x;
              }
              function baseHas(s, x) {
                return null != s && tx.call(s, x);
              }
              function baseHasIn(s, x) {
                return null != s && x in tf(s);
              }
              function baseIntersection(s, x, W) {
                for (
                  var X = W ? arrayIncludesWith : arrayIncludes,
                    et = s[0].length,
                    er = s.length,
                    ei = er,
                    eo = tc(er),
                    ea = 1 / 0,
                    es = [];
                  ei--;

                ) {
                  var el = s[ei];
                  ei && x && (el = arrayMap(el, baseUnary(x))),
                    (ea = rp(el.length, ea)),
                    (eo[ei] =
                      !W && (x || (et >= 120 && el.length >= 120))
                        ? new SetCache(ei && el)
                        : ee);
                }
                el = s[0];
                var ec = -1,
                  eu = eo[0];
                e: for (; ++ec < et && es.length < ea; ) {
                  var ed = el[ec],
                    eh = x ? x(ed) : ed;
                  if (
                    ((ed = W || 0 !== ed ? ed : 0),
                    !(eu ? cacheHas(eu, eh) : X(es, eh, W)))
                  ) {
                    for (ei = er; --ei; ) {
                      var ep = eo[ei];
                      if (!(ep ? cacheHas(ep, eh) : X(s[ei], eh, W)))
                        continue e;
                    }
                    eu && eu.push(eh), es.push(ed);
                  }
                }
                return es;
              }
              function baseInvoke(s, x, W) {
                x = castPath(x, s);
                var X = null == (s = parent(s, x)) ? s : s[toKey(last(x))];
                return null == X ? ee : apply(X, s, W);
              }
              function baseIsArguments(s) {
                return isObjectLike(s) && baseGetTag(s) == el;
              }
              function baseIsEqual(s, x, W, X, et) {
                return (
                  s === x ||
                  (null != s &&
                  null != x &&
                  (isObjectLike(s) || isObjectLike(x))
                    ? (function (s, x, W, X, et, er) {
                        var ei = iP(s),
                          eo = iP(x),
                          ea = ei ? ec : rW(s),
                          es = eo ? ec : rW(x);
                        (ea = ea == el ? ew : ea), (es = es == el ? ew : es);
                        var ep = ea == ew,
                          ef = es == ew,
                          eb = ea == es;
                        if (eb && iN(s)) {
                          if (!iN(x)) return !1;
                          (ei = !0), (ep = !1);
                        }
                        if (eb && !ep)
                          return (
                            er || (er = new Stack()),
                            ei || iL(s)
                              ? equalArrays(s, x, W, X, et, er)
                              : (function (s, x, W, X, ee, et, er) {
                                  switch (W) {
                                    case eA:
                                      if (
                                        s.byteLength != x.byteLength ||
                                        s.byteOffset != x.byteOffset
                                      )
                                        break;
                                      (s = s.buffer), (x = x.buffer);
                                    case eE:
                                      if (
                                        s.byteLength != x.byteLength ||
                                        !et(new tN(s), new tN(x))
                                      )
                                        break;
                                      return !0;
                                    case eu:
                                    case ed:
                                    case em:
                                      return eq(+s, +x);
                                    case eh:
                                      return (
                                        s.name == x.name &&
                                        s.message == x.message
                                      );
                                    case ev:
                                    case e_:
                                      return s == x + "";
                                    case eg:
                                      var ei = mapToArray;
                                    case ey:
                                      var eo = 1 & X;
                                      if (
                                        (ei || (ei = setToArray),
                                        s.size != x.size && !eo)
                                      )
                                        break;
                                      var ea = er.get(s);
                                      if (ea) return ea == x;
                                      (X |= 2), er.set(s, x);
                                      var es = equalArrays(
                                        ei(s),
                                        ei(x),
                                        X,
                                        ee,
                                        et,
                                        er
                                      );
                                      return er.delete(s), es;
                                    case eC:
                                      if (rN) return rN.call(s) == rN.call(x);
                                  }
                                  return !1;
                                })(s, x, ea, W, X, et, er)
                          );
                        if (!(1 & W)) {
                          var ex = ep && tx.call(s, "__wrapped__"),
                            eS = ef && tx.call(x, "__wrapped__");
                          if (ex || eS) {
                            var ek = ex ? s.value() : s,
                              eT = eS ? x.value() : x;
                            return (
                              er || (er = new Stack()), et(ek, eT, W, X, er)
                            );
                          }
                        }
                        return (
                          !!eb &&
                          (er || (er = new Stack()),
                          (function (s, x, W, X, et, er) {
                            var ei = 1 & W,
                              eo = getAllKeys(s),
                              ea = eo.length;
                            if (ea != getAllKeys(x).length && !ei) return !1;
                            for (var es = ea; es--; ) {
                              var el = eo[es];
                              if (!(ei ? el in x : tx.call(x, el))) return !1;
                            }
                            var ec = er.get(s),
                              eu = er.get(x);
                            if (ec && eu) return ec == x && eu == s;
                            var ed = !0;
                            er.set(s, x), er.set(x, s);
                            for (var eh = ei; ++es < ea; ) {
                              var ep = s[(el = eo[es])],
                                ef = x[el];
                              if (X)
                                var eg = ei
                                  ? X(ef, ep, el, x, s, er)
                                  : X(ep, ef, el, s, x, er);
                              if (
                                !(ee === eg
                                  ? ep === ef || et(ep, ef, W, X, er)
                                  : eg)
                              ) {
                                ed = !1;
                                break;
                              }
                              eh || (eh = "constructor" == el);
                            }
                            if (ed && !eh) {
                              var em = s.constructor,
                                ew = x.constructor;
                              em != ew &&
                                "constructor" in s &&
                                "constructor" in x &&
                                !(
                                  "function" == typeof em &&
                                  em instanceof em &&
                                  "function" == typeof ew &&
                                  ew instanceof ew
                                ) &&
                                (ed = !1);
                            }
                            return er.delete(s), er.delete(x), ed;
                          })(s, x, W, X, et, er))
                        );
                      })(s, x, W, X, baseIsEqual, et)
                    : s != s && x != x)
                );
              }
              function baseIsMatch(s, x, W, X) {
                var et = W.length,
                  er = et,
                  ei = !X;
                if (null == s) return !er;
                for (s = tf(s); et--; ) {
                  var eo = W[et];
                  if (ei && eo[2] ? eo[1] !== s[eo[0]] : !(eo[0] in s))
                    return !1;
                }
                for (; ++et < er; ) {
                  var ea = (eo = W[et])[0],
                    es = s[ea],
                    el = eo[1];
                  if (ei && eo[2]) {
                    if (ee === es && !(ea in s)) return !1;
                  } else {
                    var ec = new Stack();
                    if (X) var eu = X(es, el, ea, s, x, ec);
                    if (!(ee === eu ? baseIsEqual(el, es, 3, X, ec) : eu))
                      return !1;
                  }
                }
                return !0;
              }
              function baseIsNative(s) {
                return (
                  !(!isObject(s) || (tA && tA in s)) &&
                  (isFunction(s) ? tI : e7).test(toSource(s))
                );
              }
              function baseIteratee(s) {
                return "function" == typeof s
                  ? s
                  : null == s
                  ? identity
                  : "object" == typeof s
                  ? iP(s)
                    ? baseMatchesProperty(s[0], s[1])
                    : baseMatches(s)
                  : property(s);
              }
              function baseKeys(s) {
                if (!isPrototype(s)) return rd(s);
                var x = [];
                for (var W in tf(s))
                  tx.call(s, W) && "constructor" != W && x.push(W);
                return x;
              }
              function baseLt(s, x) {
                return s < x;
              }
              function baseMap(s, x) {
                var W = -1,
                  X = isArrayLike(s) ? tc(s.length) : [];
                return (
                  rD(s, function (s, ee, et) {
                    X[++W] = x(s, ee, et);
                  }),
                  X
                );
              }
              function baseMatches(s) {
                var x = getMatchData(s);
                return 1 == x.length && x[0][2]
                  ? matchesStrictComparable(x[0][0], x[0][1])
                  : function (W) {
                      return W === s || baseIsMatch(W, s, x);
                    };
              }
              function baseMatchesProperty(s, x) {
                var W;
                return isKey(s) && (W = x) == W && !isObject(W)
                  ? matchesStrictComparable(toKey(s), x)
                  : function (W) {
                      var X = get(W, s);
                      return ee === X && X === x
                        ? hasIn(W, s)
                        : baseIsEqual(x, X, 3);
                    };
              }
              function baseMerge(s, x, W, X, et) {
                s !== x &&
                  rL(
                    x,
                    function (er, ei) {
                      if ((et || (et = new Stack()), isObject(er)))
                        (function (s, x, W, X, et, er, ei) {
                          var eo = safeGet(s, W),
                            ea = safeGet(x, W),
                            es = ei.get(ea);
                          if (es) {
                            assignMergeValue(s, W, es);
                            return;
                          }
                          var el = er ? er(eo, ea, W + "", s, x, ei) : ee,
                            ec = ee === el;
                          if (ec) {
                            var eu = iP(ea),
                              ed = !eu && iN(ea),
                              eh = !eu && !ed && iL(ea);
                            (el = ea),
                              eu || ed || eh
                                ? iP(eo)
                                  ? (el = eo)
                                  : isArrayLikeObject(eo)
                                  ? (el = copyArray(eo))
                                  : ed
                                  ? ((ec = !1), (el = cloneBuffer(ea, !0)))
                                  : eh
                                  ? ((ec = !1), (el = cloneTypedArray(ea, !0)))
                                  : (el = [])
                                : isPlainObject(ea) || iI(ea)
                                ? ((el = eo),
                                  iI(eo)
                                    ? (el = toPlainObject(eo))
                                    : (!isObject(eo) || isFunction(eo)) &&
                                      (el = initCloneObject(ea)))
                                : (ec = !1);
                          }
                          ec &&
                            (ei.set(ea, el),
                            et(el, ea, X, er, ei),
                            ei.delete(ea)),
                            assignMergeValue(s, W, el);
                        })(s, x, ei, W, baseMerge, X, et);
                      else {
                        var eo = X
                          ? X(safeGet(s, ei), er, ei + "", s, x, et)
                          : ee;
                        ee === eo && (eo = er), assignMergeValue(s, ei, eo);
                      }
                    },
                    keysIn
                  );
              }
              function baseNth(s, x) {
                var W = s.length;
                if (W) return isIndex((x += x < 0 ? W : 0), W) ? s[x] : ee;
              }
              function baseOrderBy(s, x, W) {
                x = x.length
                  ? arrayMap(x, function (s) {
                      return iP(s)
                        ? function (x) {
                            return baseGet(x, 1 === s.length ? s[0] : s);
                          }
                        : s;
                    })
                  : [identity];
                var X = -1;
                return (
                  (x = arrayMap(x, baseUnary(getIteratee()))),
                  (function (s, x) {
                    var W = s.length;
                    for (s.sort(x); W--; ) s[W] = s[W].value;
                    return s;
                  })(
                    baseMap(s, function (s, W, ee) {
                      return {
                        criteria: arrayMap(x, function (x) {
                          return x(s);
                        }),
                        index: ++X,
                        value: s,
                      };
                    }),
                    function (s, x) {
                      return (function (s, x, W) {
                        for (
                          var X = -1,
                            ee = s.criteria,
                            et = x.criteria,
                            er = ee.length,
                            ei = W.length;
                          ++X < er;

                        ) {
                          var eo = compareAscending(ee[X], et[X]);
                          if (eo) {
                            if (X >= ei) return eo;
                            return eo * ("desc" == W[X] ? -1 : 1);
                          }
                        }
                        return s.index - x.index;
                      })(s, x, W);
                    }
                  )
                );
              }
              function basePickBy(s, x, W) {
                for (var X = -1, ee = x.length, et = {}; ++X < ee; ) {
                  var er = x[X],
                    ei = baseGet(s, er);
                  W(ei, er) && baseSet(et, castPath(er, s), ei);
                }
                return et;
              }
              function basePullAll(s, x, W, X) {
                var ee = X ? baseIndexOfWith : baseIndexOf,
                  et = -1,
                  er = x.length,
                  ei = s;
                for (
                  s === x && (x = copyArray(x)),
                    W && (ei = arrayMap(s, baseUnary(W)));
                  ++et < er;

                )
                  for (
                    var eo = 0, ea = x[et], es = W ? W(ea) : ea;
                    (eo = ee(ei, es, eo, X)) > -1;

                  )
                    ei !== s && t$.call(ei, eo, 1), t$.call(s, eo, 1);
                return s;
              }
              function basePullAt(s, x) {
                for (var W = s ? x.length : 0, X = W - 1; W--; ) {
                  var ee = x[W];
                  if (W == X || ee !== et) {
                    var et = ee;
                    isIndex(ee) ? t$.call(s, ee, 1) : baseUnset(s, ee);
                  }
                }
                return s;
              }
              function baseRandom(s, x) {
                return s + ra(rm() * (x - s + 1));
              }
              function baseRepeat(s, x) {
                var W = "";
                if (!s || x < 1 || x > 9007199254740991) return W;
                do x % 2 && (W += s), (x = ra(x / 2)) && (s += s);
                while (x);
                return W;
              }
              function baseRest(s, x) {
                return rY(overRest(s, x, identity), s + "");
              }
              function baseSet(s, x, W, X) {
                if (!isObject(s)) return s;
                x = castPath(x, s);
                for (
                  var et = -1, er = x.length, ei = er - 1, eo = s;
                  null != eo && ++et < er;

                ) {
                  var ea = toKey(x[et]),
                    es = W;
                  if (
                    "__proto__" === ea ||
                    "constructor" === ea ||
                    "prototype" === ea
                  )
                    break;
                  if (et != ei) {
                    var el = eo[ea];
                    (es = X ? X(el, ea, eo) : ee),
                      ee === es &&
                        (es = isObject(el) ? el : isIndex(x[et + 1]) ? [] : {});
                  }
                  assignValue(eo, ea, es), (eo = eo[ea]);
                }
                return s;
              }
              var rU = rE
                  ? function (s, x) {
                      return rE.set(s, x), s;
                    }
                  : identity,
                r$ = tJ
                  ? function (s, x) {
                      return tJ(s, "toString", {
                        configurable: !0,
                        enumerable: !1,
                        value: constant(x),
                        writable: !0,
                      });
                    }
                  : identity;
              function baseSlice(s, x, W) {
                var X = -1,
                  ee = s.length;
                x < 0 && (x = -x > ee ? 0 : ee + x),
                  (W = W > ee ? ee : W) < 0 && (W += ee),
                  (ee = x > W ? 0 : (W - x) >>> 0),
                  (x >>>= 0);
                for (var et = tc(ee); ++X < ee; ) et[X] = s[X + x];
                return et;
              }
              function baseSome(s, x) {
                var W;
                return (
                  rD(s, function (s, X, ee) {
                    return !(W = x(s, X, ee));
                  }),
                  !!W
                );
              }
              function baseSortedIndex(s, x, W) {
                var X = 0,
                  ee = null == s ? X : s.length;
                if ("number" == typeof x && x == x && ee <= 2147483647) {
                  for (; X < ee; ) {
                    var et = (X + ee) >>> 1,
                      er = s[et];
                    null !== er && !isSymbol(er) && (W ? er <= x : er < x)
                      ? (X = et + 1)
                      : (ee = et);
                  }
                  return ee;
                }
                return baseSortedIndexBy(s, x, identity, W);
              }
              function baseSortedIndexBy(s, x, W, X) {
                var et = 0,
                  er = null == s ? 0 : s.length;
                if (0 === er) return 0;
                for (
                  var ei = (x = W(x)) != x,
                    eo = null === x,
                    ea = isSymbol(x),
                    es = ee === x;
                  et < er;

                ) {
                  var el = ra((et + er) / 2),
                    ec = W(s[el]),
                    eu = ee !== ec,
                    ed = null === ec,
                    eh = ec == ec,
                    ep = isSymbol(ec);
                  if (ei) var ef = X || eh;
                  else
                    ef = es
                      ? eh && (X || eu)
                      : eo
                      ? eh && eu && (X || !ed)
                      : ea
                      ? eh && eu && !ed && (X || !ep)
                      : !ed && !ep && (X ? ec <= x : ec < x);
                  ef ? (et = el + 1) : (er = el);
                }
                return rp(er, 4294967294);
              }
              function baseSortedUniq(s, x) {
                for (var W = -1, X = s.length, ee = 0, et = []; ++W < X; ) {
                  var er = s[W],
                    ei = x ? x(er) : er;
                  if (!W || !eq(ei, eo)) {
                    var eo = ei;
                    et[ee++] = 0 === er ? 0 : er;
                  }
                }
                return et;
              }
              function baseToNumber(s) {
                return "number" == typeof s ? s : isSymbol(s) ? ea : +s;
              }
              function baseToString(s) {
                if ("string" == typeof s) return s;
                if (iP(s)) return arrayMap(s, baseToString) + "";
                if (isSymbol(s)) return rO ? rO.call(s) : "";
                var x = s + "";
                return "0" == x && 1 / s == -eo ? "-0" : x;
              }
              function baseUniq(s, x, W) {
                var X = -1,
                  ee = arrayIncludes,
                  et = s.length,
                  er = !0,
                  ei = [],
                  eo = ei;
                if (W) (er = !1), (ee = arrayIncludesWith);
                else if (et >= 200) {
                  var ea = x ? null : rz(s);
                  if (ea) return setToArray(ea);
                  (er = !1), (ee = cacheHas), (eo = new SetCache());
                } else eo = x ? [] : ei;
                e: for (; ++X < et; ) {
                  var es = s[X],
                    el = x ? x(es) : es;
                  if (((es = W || 0 !== es ? es : 0), er && el == el)) {
                    for (var ec = eo.length; ec--; )
                      if (eo[ec] === el) continue e;
                    x && eo.push(el), ei.push(es);
                  } else
                    ee(eo, el, W) || (eo !== ei && eo.push(el), ei.push(es));
                }
                return ei;
              }
              function baseUnset(s, x) {
                return (
                  (x = castPath(x, s)),
                  null == (s = parent(s, x)) || delete s[toKey(last(x))]
                );
              }
              function baseUpdate(s, x, W, X) {
                return baseSet(s, x, W(baseGet(s, x)), X);
              }
              function baseWhile(s, x, W, X) {
                for (
                  var ee = s.length, et = X ? ee : -1;
                  (X ? et-- : ++et < ee) && x(s[et], et, s);

                );
                return W
                  ? baseSlice(s, X ? 0 : et, X ? et + 1 : ee)
                  : baseSlice(s, X ? et + 1 : 0, X ? ee : et);
              }
              function baseWrapperValue(s, x) {
                var W = s;
                return (
                  W instanceof LazyWrapper && (W = W.value()),
                  arrayReduce(
                    x,
                    function (s, x) {
                      return x.func.apply(x.thisArg, arrayPush([s], x.args));
                    },
                    W
                  )
                );
              }
              function baseXor(s, x, W) {
                var X = s.length;
                if (X < 2) return X ? baseUniq(s[0]) : [];
                for (var ee = -1, et = tc(X); ++ee < X; )
                  for (var er = s[ee], ei = -1; ++ei < X; )
                    ei != ee &&
                      (et[ee] = baseDifference(et[ee] || er, s[ei], x, W));
                return baseUniq(baseFlatten(et, 1), x, W);
              }
              function baseZipObject(s, x, W) {
                for (
                  var X = -1, et = s.length, er = x.length, ei = {};
                  ++X < et;

                ) {
                  var eo = X < er ? x[X] : ee;
                  W(ei, s[X], eo);
                }
                return ei;
              }
              function castArrayLikeObject(s) {
                return isArrayLikeObject(s) ? s : [];
              }
              function castFunction(s) {
                return "function" == typeof s ? s : identity;
              }
              function castPath(s, x) {
                return iP(s) ? s : isKey(s, x) ? [s] : rQ(toString(s));
              }
              function castSlice(s, x, W) {
                var X = s.length;
                return (
                  (W = ee === W ? X : W), !x && W >= X ? s : baseSlice(s, x, W)
                );
              }
              var rF =
                tX ||
                function (s) {
                  return tQ.clearTimeout(s);
                };
              function cloneBuffer(s, x) {
                if (x) return s.slice();
                var W = s.length,
                  X = tO ? tO(W) : new s.constructor(W);
                return s.copy(X), X;
              }
              function cloneArrayBuffer(s) {
                var x = new s.constructor(s.byteLength);
                return new tN(x).set(new tN(s)), x;
              }
              function cloneTypedArray(s, x) {
                var W = x ? cloneArrayBuffer(s.buffer) : s.buffer;
                return new s.constructor(W, s.byteOffset, s.length);
              }
              function compareAscending(s, x) {
                if (s !== x) {
                  var W = ee !== s,
                    X = null === s,
                    et = s == s,
                    er = isSymbol(s),
                    ei = ee !== x,
                    eo = null === x,
                    ea = x == x,
                    es = isSymbol(x);
                  if (
                    (!eo && !es && !er && s > x) ||
                    (er && ei && ea && !eo && !es) ||
                    (X && ei && ea) ||
                    (!W && ea) ||
                    !et
                  )
                    return 1;
                  if (
                    (!X && !er && !es && s < x) ||
                    (es && W && et && !X && !er) ||
                    (eo && W && et) ||
                    (!ei && et) ||
                    !ea
                  )
                    return -1;
                }
                return 0;
              }
              function composeArgs(s, x, W, X) {
                for (
                  var ee = -1,
                    et = s.length,
                    er = W.length,
                    ei = -1,
                    eo = x.length,
                    ea = rh(et - er, 0),
                    es = tc(eo + ea),
                    el = !X;
                  ++ei < eo;

                )
                  es[ei] = x[ei];
                for (; ++ee < er; ) (el || ee < et) && (es[W[ee]] = s[ee]);
                for (; ea--; ) es[ei++] = s[ee++];
                return es;
              }
              function composeArgsRight(s, x, W, X) {
                for (
                  var ee = -1,
                    et = s.length,
                    er = -1,
                    ei = W.length,
                    eo = -1,
                    ea = x.length,
                    es = rh(et - ei, 0),
                    el = tc(es + ea),
                    ec = !X;
                  ++ee < es;

                )
                  el[ee] = s[ee];
                for (var eu = ee; ++eo < ea; ) el[eu + eo] = x[eo];
                for (; ++er < ei; )
                  (ec || ee < et) && (el[eu + W[er]] = s[ee++]);
                return el;
              }
              function copyArray(s, x) {
                var W = -1,
                  X = s.length;
                for (x || (x = tc(X)); ++W < X; ) x[W] = s[W];
                return x;
              }
              function copyObject(s, x, W, X) {
                var et = !W;
                W || (W = {});
                for (var er = -1, ei = x.length; ++er < ei; ) {
                  var eo = x[er],
                    ea = X ? X(W[eo], s[eo], eo, W, s) : ee;
                  ee === ea && (ea = s[eo]),
                    et ? baseAssignValue(W, eo, ea) : assignValue(W, eo, ea);
                }
                return W;
              }
              function createAggregator(s, x) {
                return function (W, X) {
                  var ee = iP(W) ? arrayAggregator : baseAggregator,
                    et = x ? x() : {};
                  return ee(W, s, getIteratee(X, 2), et);
                };
              }
              function createAssigner(s) {
                return baseRest(function (x, W) {
                  var X = -1,
                    et = W.length,
                    er = et > 1 ? W[et - 1] : ee,
                    ei = et > 2 ? W[2] : ee;
                  for (
                    er =
                      s.length > 3 && "function" == typeof er ? (et--, er) : ee,
                      ei &&
                        isIterateeCall(W[0], W[1], ei) &&
                        ((er = et < 3 ? ee : er), (et = 1)),
                      x = tf(x);
                    ++X < et;

                  ) {
                    var eo = W[X];
                    eo && s(x, eo, X, er);
                  }
                  return x;
                });
              }
              function createBaseEach(s, x) {
                return function (W, X) {
                  if (null == W) return W;
                  if (!isArrayLike(W)) return s(W, X);
                  for (
                    var ee = W.length, et = x ? ee : -1, er = tf(W);
                    (x ? et-- : ++et < ee) && !1 !== X(er[et], et, er);

                  );
                  return W;
                };
              }
              function createBaseFor(s) {
                return function (x, W, X) {
                  for (
                    var ee = -1, et = tf(x), er = X(x), ei = er.length;
                    ei--;

                  ) {
                    var eo = er[s ? ei : ++ee];
                    if (!1 === W(et[eo], eo, et)) break;
                  }
                  return x;
                };
              }
              function createCaseFirst(s) {
                return function (x) {
                  var W = hasUnicode((x = toString(x))) ? stringToArray(x) : ee,
                    X = W ? W[0] : x.charAt(0),
                    et = W ? castSlice(W, 1).join("") : x.slice(1);
                  return X[s]() + et;
                };
              }
              function createCompounder(s) {
                return function (x) {
                  return arrayReduce(words(deburr(x).replace(tB, "")), s, "");
                };
              }
              function createCtor(s) {
                return function () {
                  var x = arguments;
                  switch (x.length) {
                    case 0:
                      return new s();
                    case 1:
                      return new s(x[0]);
                    case 2:
                      return new s(x[0], x[1]);
                    case 3:
                      return new s(x[0], x[1], x[2]);
                    case 4:
                      return new s(x[0], x[1], x[2], x[3]);
                    case 5:
                      return new s(x[0], x[1], x[2], x[3], x[4]);
                    case 6:
                      return new s(x[0], x[1], x[2], x[3], x[4], x[5]);
                    case 7:
                      return new s(x[0], x[1], x[2], x[3], x[4], x[5], x[6]);
                  }
                  var W = rM(s.prototype),
                    X = s.apply(W, x);
                  return isObject(X) ? X : W;
                };
              }
              function createFind(s) {
                return function (x, W, X) {
                  var et = tf(x);
                  if (!isArrayLike(x)) {
                    var er = getIteratee(W, 3);
                    (x = keys(x)),
                      (W = function (s) {
                        return er(et[s], s, et);
                      });
                  }
                  var ei = s(x, W, X);
                  return ei > -1 ? et[er ? x[ei] : ei] : ee;
                };
              }
              function createFlow(s) {
                return flatRest(function (x) {
                  var W = x.length,
                    X = W,
                    er = LodashWrapper.prototype.thru;
                  for (s && x.reverse(); X--; ) {
                    var ei = x[X];
                    if ("function" != typeof ei) throw new tw(et);
                    if (er && !eo && "wrapper" == getFuncName(ei))
                      var eo = new LodashWrapper([], !0);
                  }
                  for (X = eo ? X : W; ++X < W; ) {
                    var ea = getFuncName((ei = x[X])),
                      es = "wrapper" == ea ? rH(ei) : ee;
                    eo =
                      es &&
                      isLaziable(es[0]) &&
                      424 == es[1] &&
                      !es[4].length &&
                      1 == es[9]
                        ? eo[getFuncName(es[0])].apply(eo, es[3])
                        : 1 == ei.length && isLaziable(ei)
                        ? eo[ea]()
                        : eo.thru(ei);
                  }
                  return function () {
                    var s = arguments,
                      X = s[0];
                    if (eo && 1 == s.length && iP(X))
                      return eo.plant(X).value();
                    for (
                      var ee = 0, et = W ? x[ee].apply(this, s) : X;
                      ++ee < W;

                    )
                      et = x[ee].call(this, et);
                    return et;
                  };
                });
              }
              function createHybrid(s, x, W, X, et, er, ei, eo, ea, es) {
                var el = 128 & x,
                  ec = 1 & x,
                  eu = 2 & x,
                  ed = 24 & x,
                  eh = 512 & x,
                  ep = eu ? ee : createCtor(s);
                return function wrapper() {
                  for (var ef = arguments.length, eg = tc(ef), em = ef; em--; )
                    eg[em] = arguments[em];
                  if (ed)
                    var ew = getHolder(wrapper),
                      eb = (function (s, x) {
                        for (var W = s.length, X = 0; W--; ) s[W] === x && ++X;
                        return X;
                      })(eg, ew);
                  if (
                    (X && (eg = composeArgs(eg, X, et, ed)),
                    er && (eg = composeArgsRight(eg, er, ei, ed)),
                    (ef -= eb),
                    ed && ef < es)
                  ) {
                    var ev = replaceHolders(eg, ew);
                    return createRecurry(
                      s,
                      x,
                      createHybrid,
                      wrapper.placeholder,
                      W,
                      eg,
                      ev,
                      eo,
                      ea,
                      es - ef
                    );
                  }
                  var ey = ec ? W : this,
                    e_ = eu ? ey[s] : s;
                  return (
                    (ef = eg.length),
                    eo
                      ? (eg = (function (s, x) {
                          for (
                            var W = s.length,
                              X = rp(x.length, W),
                              et = copyArray(s);
                            X--;

                          ) {
                            var er = x[X];
                            s[X] = isIndex(er, W) ? et[er] : ee;
                          }
                          return s;
                        })(eg, eo))
                      : eh && ef > 1 && eg.reverse(),
                    el && ea < ef && (eg.length = ea),
                    this &&
                      this !== tQ &&
                      this instanceof wrapper &&
                      (e_ = ep || createCtor(e_)),
                    e_.apply(ey, eg)
                  );
                };
              }
              function createInverter(s, x) {
                return function (W, X) {
                  var ee, et;
                  return (
                    (ee = x(X)),
                    (et = {}),
                    baseForOwn(W, function (x, W, X) {
                      s(et, ee(x), W, X);
                    }),
                    et
                  );
                };
              }
              function createMathOperation(s, x) {
                return function (W, X) {
                  var et;
                  if (ee === W && ee === X) return x;
                  if ((ee !== W && (et = W), ee !== X)) {
                    if (ee === et) return X;
                    "string" == typeof W || "string" == typeof X
                      ? ((W = baseToString(W)), (X = baseToString(X)))
                      : ((W = baseToNumber(W)), (X = baseToNumber(X))),
                      (et = s(W, X));
                  }
                  return et;
                };
              }
              function createOver(s) {
                return flatRest(function (x) {
                  return (
                    (x = arrayMap(x, baseUnary(getIteratee()))),
                    baseRest(function (W) {
                      var X = this;
                      return s(x, function (s) {
                        return apply(s, X, W);
                      });
                    })
                  );
                });
              }
              function createPadding(s, x) {
                var W = (x = ee === x ? " " : baseToString(x)).length;
                if (W < 2) return W ? baseRepeat(x, s) : x;
                var X = baseRepeat(x, t7(s / stringSize(x)));
                return hasUnicode(x)
                  ? castSlice(stringToArray(X), 0, s).join("")
                  : X.slice(0, s);
              }
              function createRange(s) {
                return function (x, W, X) {
                  return (
                    X &&
                      "number" != typeof X &&
                      isIterateeCall(x, W, X) &&
                      (W = X = ee),
                    (x = toFinite(x)),
                    ee === W ? ((W = x), (x = 0)) : (W = toFinite(W)),
                    (X = ee === X ? (x < W ? 1 : -1) : toFinite(X)),
                    (function (s, x, W, X) {
                      for (
                        var ee = -1,
                          et = rh(t7((x - s) / (W || 1)), 0),
                          er = tc(et);
                        et--;

                      )
                        (er[X ? et : ++ee] = s), (s += W);
                      return er;
                    })(x, W, X, s)
                  );
                };
              }
              function createRelationalOperation(s) {
                return function (x, W) {
                  return (
                    ("string" == typeof x && "string" == typeof W) ||
                      ((x = toNumber(x)), (W = toNumber(W))),
                    s(x, W)
                  );
                };
              }
              function createRecurry(s, x, W, X, et, er, ei, eo, ea, es) {
                var el = 8 & x,
                  ec = el ? ei : ee,
                  eu = el ? ee : ei,
                  ed = el ? er : ee,
                  eh = el ? ee : er;
                (x |= el ? 32 : 64), 4 & (x &= ~(el ? 64 : 32)) || (x &= -4);
                var ep = [s, x, et, ed, ec, eh, eu, eo, ea, es],
                  ef = W.apply(ee, ep);
                return (
                  isLaziable(s) && rZ(ef, ep),
                  (ef.placeholder = X),
                  setWrapToString(ef, s, x)
                );
              }
              function createRound(s) {
                var x = tp[s];
                return function (s, W) {
                  if (
                    ((s = toNumber(s)),
                    (W = null == W ? 0 : rp(toInteger(W), 292)) && rc(s))
                  ) {
                    var X = (toString(s) + "e").split("e");
                    return +(
                      (X = (toString(x(X[0] + "e" + (+X[1] + W))) + "e").split(
                        "e"
                      ))[0] +
                      "e" +
                      (+X[1] - W)
                    );
                  }
                  return x(s);
                };
              }
              var rz =
                r_ && 1 / setToArray(new r_([, -0]))[1] == eo
                  ? function (s) {
                      return new r_(s);
                    }
                  : noop;
              function createToPairs(s) {
                return function (x) {
                  var W,
                    X,
                    ee = rW(x);
                  return ee == eg
                    ? mapToArray(x)
                    : ee == ey
                    ? ((W = -1),
                      (X = Array(x.size)),
                      x.forEach(function (s) {
                        X[++W] = [s, s];
                      }),
                      X)
                    : arrayMap(s(x), function (s) {
                        return [s, x[s]];
                      });
                };
              }
              function createWrap(s, x, W, X, er, eo, ea, es) {
                var el = 2 & x;
                if (!el && "function" != typeof s) throw new tw(et);
                var ec = X ? X.length : 0;
                if (
                  (ec || ((x &= -97), (X = er = ee)),
                  (ea = ee === ea ? ea : rh(toInteger(ea), 0)),
                  (es = ee === es ? es : toInteger(es)),
                  (ec -= er ? er.length : 0),
                  64 & x)
                ) {
                  var eu = X,
                    ed = er;
                  X = er = ee;
                }
                var eh = el ? ee : rH(s),
                  ep = [s, x, W, X, er, eu, ed, eo, ea, es];
                if (
                  (eh &&
                    (function (s, x) {
                      var W = s[1],
                        X = x[1],
                        ee = W | X,
                        et = ee < 131,
                        er =
                          (128 == X && 8 == W) ||
                          (128 == X && 256 == W && s[7].length <= x[8]) ||
                          (384 == X && x[7].length <= x[8] && 8 == W);
                      if (et || er) {
                        1 & X && ((s[2] = x[2]), (ee |= 1 & W ? 0 : 4));
                        var eo = x[3];
                        if (eo) {
                          var ea = s[3];
                          (s[3] = ea ? composeArgs(ea, eo, x[4]) : eo),
                            (s[4] = ea ? replaceHolders(s[3], ei) : x[4]);
                        }
                        (eo = x[5]) &&
                          ((ea = s[5]),
                          (s[5] = ea ? composeArgsRight(ea, eo, x[6]) : eo),
                          (s[6] = ea ? replaceHolders(s[5], ei) : x[6])),
                          (eo = x[7]) && (s[7] = eo),
                          128 & X &&
                            (s[8] = null == s[8] ? x[8] : rp(s[8], x[8])),
                          null == s[9] && (s[9] = x[9]),
                          (s[0] = x[0]),
                          (s[1] = ee);
                      }
                    })(ep, eh),
                  (s = ep[0]),
                  (x = ep[1]),
                  (W = ep[2]),
                  (X = ep[3]),
                  (er = ep[4]),
                  (es = ep[9] =
                    ee === ep[9] ? (el ? 0 : s.length) : rh(ep[9] - ec, 0)) ||
                    !(24 & x) ||
                    (x &= -25),
                  x && 1 != x)
                )
                  8 == x || 16 == x
                    ? ((ef = s),
                      (eg = x),
                      (em = es),
                      (ew = createCtor(ef)),
                      (eI = function wrapper() {
                        for (
                          var s = arguments.length,
                            x = tc(s),
                            W = s,
                            X = getHolder(wrapper);
                          W--;

                        )
                          x[W] = arguments[W];
                        var et =
                          s < 3 && x[0] !== X && x[s - 1] !== X
                            ? []
                            : replaceHolders(x, X);
                        return (s -= et.length) < em
                          ? createRecurry(
                              ef,
                              eg,
                              createHybrid,
                              wrapper.placeholder,
                              ee,
                              x,
                              et,
                              ee,
                              ee,
                              em - s
                            )
                          : apply(
                              this && this !== tQ && this instanceof wrapper
                                ? ew
                                : ef,
                              this,
                              x
                            );
                      }))
                    : (32 != x && 33 != x) || er.length
                    ? (eI = createHybrid.apply(ee, ep))
                    : ((eb = s),
                      (ev = x),
                      (ey = W),
                      (e_ = X),
                      (eC = 1 & ev),
                      (ex = createCtor(eb)),
                      (eI = function wrapper() {
                        for (
                          var s = -1,
                            x = arguments.length,
                            W = -1,
                            X = e_.length,
                            ee = tc(X + x),
                            et =
                              this && this !== tQ && this instanceof wrapper
                                ? ex
                                : eb;
                          ++W < X;

                        )
                          ee[W] = e_[W];
                        for (; x--; ) ee[W++] = arguments[++s];
                        return apply(et, eC ? ey : this, ee);
                      }));
                else
                  var ef,
                    eg,
                    em,
                    ew,
                    eb,
                    ev,
                    ey,
                    e_,
                    eC,
                    ex,
                    eE,
                    eA,
                    eS,
                    ek,
                    eT,
                    eI =
                      ((eE = s),
                      (eA = x),
                      (eS = W),
                      (ek = 1 & eA),
                      (eT = createCtor(eE)),
                      function wrapper() {
                        return (
                          this && this !== tQ && this instanceof wrapper
                            ? eT
                            : eE
                        ).apply(ek ? eS : this, arguments);
                      });
                return setWrapToString((eh ? rU : rZ)(eI, ep), s, x);
              }
              function customDefaultsAssignIn(s, x, W, X) {
                return ee === s || (eq(s, ty[W]) && !tx.call(X, W)) ? x : s;
              }
              function customDefaultsMerge(s, x, W, X, et, er) {
                return (
                  isObject(s) &&
                    isObject(x) &&
                    (er.set(x, s),
                    baseMerge(s, x, ee, customDefaultsMerge, er),
                    er.delete(x)),
                  s
                );
              }
              function customOmitClone(s) {
                return isPlainObject(s) ? ee : s;
              }
              function equalArrays(s, x, W, X, et, er) {
                var ei = 1 & W,
                  eo = s.length,
                  ea = x.length;
                if (eo != ea && !(ei && ea > eo)) return !1;
                var es = er.get(s),
                  el = er.get(x);
                if (es && el) return es == x && el == s;
                var ec = -1,
                  eu = !0,
                  ed = 2 & W ? new SetCache() : ee;
                for (er.set(s, x), er.set(x, s); ++ec < eo; ) {
                  var eh = s[ec],
                    ep = x[ec];
                  if (X)
                    var ef = ei
                      ? X(ep, eh, ec, x, s, er)
                      : X(eh, ep, ec, s, x, er);
                  if (ee !== ef) {
                    if (ef) continue;
                    eu = !1;
                    break;
                  }
                  if (ed) {
                    if (
                      !arraySome(x, function (s, x) {
                        if (
                          !cacheHas(ed, x) &&
                          (eh === s || et(eh, s, W, X, er))
                        )
                          return ed.push(x);
                      })
                    ) {
                      eu = !1;
                      break;
                    }
                  } else if (!(eh === ep || et(eh, ep, W, X, er))) {
                    eu = !1;
                    break;
                  }
                }
                return er.delete(s), er.delete(x), eu;
              }
              function flatRest(s) {
                return rY(overRest(s, ee, flatten), s + "");
              }
              function getAllKeys(s) {
                return baseGetAllKeys(s, keys, rq);
              }
              function getAllKeysIn(s) {
                return baseGetAllKeys(s, keysIn, rV);
              }
              var rH = rE
                ? function (s) {
                    return rE.get(s);
                  }
                : noop;
              function getFuncName(s) {
                for (
                  var x = s.name + "",
                    W = rA[x],
                    X = tx.call(rA, x) ? W.length : 0;
                  X--;

                ) {
                  var ee = W[X],
                    et = ee.func;
                  if (null == et || et == s) return ee.name;
                }
                return x;
              }
              function getHolder(s) {
                return (tx.call(lodash, "placeholder") ? lodash : s)
                  .placeholder;
              }
              function getIteratee() {
                var s = lodash.iteratee || iteratee;
                return (
                  (s = s === iteratee ? baseIteratee : s),
                  arguments.length ? s(arguments[0], arguments[1]) : s
                );
              }
              function getMapData(s, x) {
                var W,
                  X = s.__data__;
                return (
                  "string" == (W = typeof x) ||
                  "number" == W ||
                  "symbol" == W ||
                  "boolean" == W
                    ? "__proto__" !== x
                    : null === x
                )
                  ? X["string" == typeof x ? "string" : "hash"]
                  : X.map;
              }
              function getMatchData(s) {
                for (var x = keys(s), W = x.length; W--; ) {
                  var X = x[W],
                    ee = s[X];
                  x[W] = [X, ee, ee == ee && !isObject(ee)];
                }
                return x;
              }
              function getNative(s, x) {
                var W = null == s ? ee : s[x];
                return baseIsNative(W) ? W : ee;
              }
              var rq = rs
                  ? function (s) {
                      return null == s
                        ? []
                        : arrayFilter(rs((s = tf(s))), function (x) {
                            return tj.call(s, x);
                          });
                    }
                  : stubArray,
                rV = rs
                  ? function (s) {
                      for (var x = []; s; ) arrayPush(x, rq(s)), (s = tM(s));
                      return x;
                    }
                  : stubArray,
                rW = baseGetTag;
              function hasPath(s, x, W) {
                x = castPath(x, s);
                for (var X = -1, ee = x.length, et = !1; ++X < ee; ) {
                  var er = toKey(x[X]);
                  if (!(et = null != s && W(s, er))) break;
                  s = s[er];
                }
                return et || ++X != ee
                  ? et
                  : !!(ee = null == s ? 0 : s.length) &&
                      isLength(ee) &&
                      isIndex(er, ee) &&
                      (iP(s) || iI(s));
              }
              function initCloneObject(s) {
                return "function" != typeof s.constructor || isPrototype(s)
                  ? {}
                  : rM(tM(s));
              }
              function isFlattenable(s) {
                return iP(s) || iI(s) || !!(tW && s && s[tW]);
              }
              function isIndex(s, x) {
                var W = typeof s;
                return (
                  !!(x = null == x ? 9007199254740991 : x) &&
                  ("number" == W || ("symbol" != W && tr.test(s))) &&
                  s > -1 &&
                  s % 1 == 0 &&
                  s < x
                );
              }
              function isIterateeCall(s, x, W) {
                if (!isObject(W)) return !1;
                var X = typeof x;
                return (
                  ("number" == X
                    ? !!(isArrayLike(W) && isIndex(x, W.length))
                    : "string" == X && x in W) && eq(W[x], s)
                );
              }
              function isKey(s, x) {
                if (iP(s)) return !1;
                var W = typeof s;
                return (
                  !!(
                    "number" == W ||
                    "symbol" == W ||
                    "boolean" == W ||
                    null == s ||
                    isSymbol(s)
                  ) ||
                  eK.test(s) ||
                  !eW.test(s) ||
                  (null != x && s in tf(x))
                );
              }
              function isLaziable(s) {
                var x = getFuncName(s),
                  W = lodash[x];
                if ("function" != typeof W || !(x in LazyWrapper.prototype))
                  return !1;
                if (s === W) return !0;
                var X = rH(W);
                return !!X && s === X[0];
              }
              ((rb && rW(new rb(new ArrayBuffer(1))) != eA) ||
                (rv && rW(new rv()) != eg) ||
                (ry && rW(ry.resolve()) != eb) ||
                (r_ && rW(new r_()) != ey) ||
                (rC && rW(new rC()) != ex)) &&
                (rW = function (s) {
                  var x = baseGetTag(s),
                    W = x == ew ? s.constructor : ee,
                    X = W ? toSource(W) : "";
                  if (X)
                    switch (X) {
                      case rS:
                        return eA;
                      case rk:
                        return eg;
                      case rT:
                        return eb;
                      case rI:
                        return ey;
                      case rP:
                        return ex;
                    }
                  return x;
                });
              var rK = t_ ? isFunction : stubFalse;
              function isPrototype(s) {
                var x = s && s.constructor;
                return s === (("function" == typeof x && x.prototype) || ty);
              }
              function matchesStrictComparable(s, x) {
                return function (W) {
                  return null != W && W[s] === x && (ee !== x || s in tf(W));
                };
              }
              function overRest(s, x, W) {
                return (
                  (x = rh(ee === x ? s.length - 1 : x, 0)),
                  function () {
                    for (
                      var X = arguments,
                        ee = -1,
                        et = rh(X.length - x, 0),
                        er = tc(et);
                      ++ee < et;

                    )
                      er[ee] = X[x + ee];
                    ee = -1;
                    for (var ei = tc(x + 1); ++ee < x; ) ei[ee] = X[ee];
                    return (ei[x] = W(er)), apply(s, this, ei);
                  }
                );
              }
              function parent(s, x) {
                return x.length < 2 ? s : baseGet(s, baseSlice(x, 0, -1));
              }
              function safeGet(s, x) {
                if (
                  ("constructor" !== x || "function" != typeof s[x]) &&
                  "__proto__" != x
                )
                  return s[x];
              }
              var rZ = shortOut(rU),
                rG =
                  t2 ||
                  function (s, x) {
                    return tQ.setTimeout(s, x);
                  },
                rY = shortOut(r$);
              function setWrapToString(s, x, W) {
                var X,
                  ee,
                  et = x + "";
                return rY(
                  s,
                  (function (s, x) {
                    var W = x.length;
                    if (!W) return s;
                    var X = W - 1;
                    return (
                      (x[X] = (W > 1 ? "& " : "") + x[X]),
                      (x = x.join(W > 2 ? ", " : " ")),
                      s.replace(eX, "{\n/* [wrapped with " + x + "] */\n")
                    );
                  })(
                    et,
                    ((X = (ee = et.match(e0)) ? ee[1].split(e1) : []),
                    arrayEach(es, function (s) {
                      var x = "_." + s[0];
                      W & s[1] && !arrayIncludes(X, x) && X.push(x);
                    }),
                    X.sort())
                  )
                );
              }
              function shortOut(s) {
                var x = 0,
                  W = 0;
                return function () {
                  var X = rf(),
                    et = 16 - (X - W);
                  if (((W = X), et > 0)) {
                    if (++x >= 800) return arguments[0];
                  } else x = 0;
                  return s.apply(ee, arguments);
                };
              }
              function shuffleSelf(s, x) {
                var W = -1,
                  X = s.length,
                  et = X - 1;
                for (x = ee === x ? X : x; ++W < x; ) {
                  var er = baseRandom(W, et),
                    ei = s[er];
                  (s[er] = s[W]), (s[W] = ei);
                }
                return (s.length = x), s;
              }
              var rQ =
                ((X = (W = memoize(
                  function (s) {
                    var x = [];
                    return (
                      46 === s.charCodeAt(0) && x.push(""),
                      s.replace(eZ, function (s, W, X, ee) {
                        x.push(X ? ee.replace(e5, "$1") : W || s);
                      }),
                      x
                    );
                  },
                  function (s) {
                    return 500 === X.size && X.clear(), s;
                  }
                )).cache),
                W);
              function toKey(s) {
                if ("string" == typeof s || isSymbol(s)) return s;
                var x = s + "";
                return "0" == x && 1 / s == -eo ? "-0" : x;
              }
              function toSource(s) {
                if (null != s) {
                  try {
                    return tC.call(s);
                  } catch (s) {}
                  try {
                    return s + "";
                  } catch (s) {}
                }
                return "";
              }
              function wrapperClone(s) {
                if (s instanceof LazyWrapper) return s.clone();
                var x = new LodashWrapper(s.__wrapped__, s.__chain__);
                return (
                  (x.__actions__ = copyArray(s.__actions__)),
                  (x.__index__ = s.__index__),
                  (x.__values__ = s.__values__),
                  x
                );
              }
              var rJ = baseRest(function (s, x) {
                  return isArrayLikeObject(s)
                    ? baseDifference(
                        s,
                        baseFlatten(x, 1, isArrayLikeObject, !0)
                      )
                    : [];
                }),
                rX = baseRest(function (s, x) {
                  var W = last(x);
                  return (
                    isArrayLikeObject(W) && (W = ee),
                    isArrayLikeObject(s)
                      ? baseDifference(
                          s,
                          baseFlatten(x, 1, isArrayLikeObject, !0),
                          getIteratee(W, 2)
                        )
                      : []
                  );
                }),
                r0 = baseRest(function (s, x) {
                  var W = last(x);
                  return (
                    isArrayLikeObject(W) && (W = ee),
                    isArrayLikeObject(s)
                      ? baseDifference(
                          s,
                          baseFlatten(x, 1, isArrayLikeObject, !0),
                          ee,
                          W
                        )
                      : []
                  );
                });
              function findIndex(s, x, W) {
                var X = null == s ? 0 : s.length;
                if (!X) return -1;
                var ee = null == W ? 0 : toInteger(W);
                return (
                  ee < 0 && (ee = rh(X + ee, 0)),
                  baseFindIndex(s, getIteratee(x, 3), ee)
                );
              }
              function findLastIndex(s, x, W) {
                var X = null == s ? 0 : s.length;
                if (!X) return -1;
                var et = X - 1;
                return (
                  ee !== W &&
                    ((et = toInteger(W)),
                    (et = W < 0 ? rh(X + et, 0) : rp(et, X - 1))),
                  baseFindIndex(s, getIteratee(x, 3), et, !0)
                );
              }
              function flatten(s) {
                return (null == s ? 0 : s.length) ? baseFlatten(s, 1) : [];
              }
              function head(s) {
                return s && s.length ? s[0] : ee;
              }
              var r1 = baseRest(function (s) {
                  var x = arrayMap(s, castArrayLikeObject);
                  return x.length && x[0] === s[0] ? baseIntersection(x) : [];
                }),
                r2 = baseRest(function (s) {
                  var x = last(s),
                    W = arrayMap(s, castArrayLikeObject);
                  return (
                    x === last(W) ? (x = ee) : W.pop(),
                    W.length && W[0] === s[0]
                      ? baseIntersection(W, getIteratee(x, 2))
                      : []
                  );
                }),
                r3 = baseRest(function (s) {
                  var x = last(s),
                    W = arrayMap(s, castArrayLikeObject);
                  return (
                    (x = "function" == typeof x ? x : ee) && W.pop(),
                    W.length && W[0] === s[0] ? baseIntersection(W, ee, x) : []
                  );
                });
              function last(s) {
                var x = null == s ? 0 : s.length;
                return x ? s[x - 1] : ee;
              }
              var r5 = baseRest(pullAll);
              function pullAll(s, x) {
                return s && s.length && x && x.length ? basePullAll(s, x) : s;
              }
              var r6 = flatRest(function (s, x) {
                var W = null == s ? 0 : s.length,
                  X = baseAt(s, x);
                return (
                  basePullAt(
                    s,
                    arrayMap(x, function (s) {
                      return isIndex(s, W) ? +s : s;
                    }).sort(compareAscending)
                  ),
                  X
                );
              });
              function reverse(s) {
                return null == s ? s : rw.call(s);
              }
              var r4 = baseRest(function (s) {
                  return baseUniq(baseFlatten(s, 1, isArrayLikeObject, !0));
                }),
                r8 = baseRest(function (s) {
                  var x = last(s);
                  return (
                    isArrayLikeObject(x) && (x = ee),
                    baseUniq(
                      baseFlatten(s, 1, isArrayLikeObject, !0),
                      getIteratee(x, 2)
                    )
                  );
                }),
                r9 = baseRest(function (s) {
                  var x = last(s);
                  return (
                    (x = "function" == typeof x ? x : ee),
                    baseUniq(baseFlatten(s, 1, isArrayLikeObject, !0), ee, x)
                  );
                });
              function unzip(s) {
                if (!(s && s.length)) return [];
                var x = 0;
                return (
                  (s = arrayFilter(s, function (s) {
                    if (isArrayLikeObject(s)) return (x = rh(s.length, x)), !0;
                  })),
                  baseTimes(x, function (x) {
                    return arrayMap(s, baseProperty(x));
                  })
                );
              }
              function unzipWith(s, x) {
                if (!(s && s.length)) return [];
                var W = unzip(s);
                return null == x
                  ? W
                  : arrayMap(W, function (s) {
                      return apply(x, ee, s);
                    });
              }
              var r7 = baseRest(function (s, x) {
                  return isArrayLikeObject(s) ? baseDifference(s, x) : [];
                }),
                it = baseRest(function (s) {
                  return baseXor(arrayFilter(s, isArrayLikeObject));
                }),
                ir = baseRest(function (s) {
                  var x = last(s);
                  return (
                    isArrayLikeObject(x) && (x = ee),
                    baseXor(
                      arrayFilter(s, isArrayLikeObject),
                      getIteratee(x, 2)
                    )
                  );
                }),
                io = baseRest(function (s) {
                  var x = last(s);
                  return (
                    (x = "function" == typeof x ? x : ee),
                    baseXor(arrayFilter(s, isArrayLikeObject), ee, x)
                  );
                }),
                ia = baseRest(unzip),
                is = baseRest(function (s) {
                  var x = s.length,
                    W = x > 1 ? s[x - 1] : ee;
                  return (
                    (W = "function" == typeof W ? (s.pop(), W) : ee),
                    unzipWith(s, W)
                  );
                });
              function chain(s) {
                var x = lodash(s);
                return (x.__chain__ = !0), x;
              }
              function thru(s, x) {
                return x(s);
              }
              var il = flatRest(function (s) {
                  var x = s.length,
                    W = x ? s[0] : 0,
                    X = this.__wrapped__,
                    interceptor = function (x) {
                      return baseAt(x, s);
                    };
                  return !(x > 1) &&
                    !this.__actions__.length &&
                    X instanceof LazyWrapper &&
                    isIndex(W)
                    ? ((X = X.slice(W, +W + (x ? 1 : 0))).__actions__.push({
                        func: thru,
                        args: [interceptor],
                        thisArg: ee,
                      }),
                      new LodashWrapper(X, this.__chain__).thru(function (s) {
                        return x && !s.length && s.push(ee), s;
                      }))
                    : this.thru(interceptor);
                }),
                ic = createAggregator(function (s, x, W) {
                  tx.call(s, W) ? ++s[W] : baseAssignValue(s, W, 1);
                }),
                iu = createFind(findIndex),
                id = createFind(findLastIndex);
              function forEach(s, x) {
                return (iP(s) ? arrayEach : rD)(s, getIteratee(x, 3));
              }
              function forEachRight(s, x) {
                return (
                  iP(s)
                    ? function (s, x) {
                        for (
                          var W = null == s ? 0 : s.length;
                          W-- && !1 !== x(s[W], W, s);

                        );
                        return s;
                      }
                    : rB
                )(s, getIteratee(x, 3));
              }
              var ih = createAggregator(function (s, x, W) {
                  tx.call(s, W) ? s[W].push(x) : baseAssignValue(s, W, [x]);
                }),
                ip = baseRest(function (s, x, W) {
                  var X = -1,
                    ee = "function" == typeof x,
                    et = isArrayLike(s) ? tc(s.length) : [];
                  return (
                    rD(s, function (s) {
                      et[++X] = ee ? apply(x, s, W) : baseInvoke(s, x, W);
                    }),
                    et
                  );
                }),
                ig = createAggregator(function (s, x, W) {
                  baseAssignValue(s, W, x);
                });
              function map(s, x) {
                return (iP(s) ? arrayMap : baseMap)(s, getIteratee(x, 3));
              }
              var im = createAggregator(
                  function (s, x, W) {
                    s[W ? 0 : 1].push(x);
                  },
                  function () {
                    return [[], []];
                  }
                ),
                iw = baseRest(function (s, x) {
                  if (null == s) return [];
                  var W = x.length;
                  return (
                    W > 1 && isIterateeCall(s, x[0], x[1])
                      ? (x = [])
                      : W > 2 &&
                        isIterateeCall(x[0], x[1], x[2]) &&
                        (x = [x[0]]),
                    baseOrderBy(s, baseFlatten(x, 1), [])
                  );
                }),
                ib =
                  t1 ||
                  function () {
                    return tQ.Date.now();
                  };
              function ary(s, x, W) {
                return (
                  (x = W ? ee : x),
                  (x = s && null == x ? s.length : x),
                  createWrap(s, 128, ee, ee, ee, ee, x)
                );
              }
              function before(s, x) {
                var W;
                if ("function" != typeof x) throw new tw(et);
                return (
                  (s = toInteger(s)),
                  function () {
                    return (
                      --s > 0 && (W = x.apply(this, arguments)),
                      s <= 1 && (x = ee),
                      W
                    );
                  }
                );
              }
              var iv = baseRest(function (s, x, W) {
                  var X = 1;
                  if (W.length) {
                    var ee = replaceHolders(W, getHolder(iv));
                    X |= 32;
                  }
                  return createWrap(s, X, x, W, ee);
                }),
                iy = baseRest(function (s, x, W) {
                  var X = 3;
                  if (W.length) {
                    var ee = replaceHolders(W, getHolder(iy));
                    X |= 32;
                  }
                  return createWrap(x, X, s, W, ee);
                });
              function debounce(s, x, W) {
                var X,
                  er,
                  ei,
                  eo,
                  ea,
                  es,
                  el = 0,
                  ec = !1,
                  eu = !1,
                  ed = !0;
                if ("function" != typeof s) throw new tw(et);
                function invokeFunc(x) {
                  var W = X,
                    et = er;
                  return (X = er = ee), (el = x), (eo = s.apply(et, W));
                }
                function shouldInvoke(s) {
                  var W = s - es,
                    X = s - el;
                  return ee === es || W >= x || W < 0 || (eu && X >= ei);
                }
                function timerExpired() {
                  var s,
                    W,
                    X,
                    ee = ib();
                  if (shouldInvoke(ee)) return trailingEdge(ee);
                  ea = rG(
                    timerExpired,
                    ((s = ee - es),
                    (W = ee - el),
                    (X = x - s),
                    eu ? rp(X, ei - W) : X)
                  );
                }
                function trailingEdge(s) {
                  return ((ea = ee), ed && X)
                    ? invokeFunc(s)
                    : ((X = er = ee), eo);
                }
                function debounced() {
                  var s,
                    W = ib(),
                    et = shouldInvoke(W);
                  if (((X = arguments), (er = this), (es = W), et)) {
                    if (ee === ea)
                      return (
                        (el = s = es),
                        (ea = rG(timerExpired, x)),
                        ec ? invokeFunc(s) : eo
                      );
                    if (eu)
                      return rF(ea), (ea = rG(timerExpired, x)), invokeFunc(es);
                  }
                  return ee === ea && (ea = rG(timerExpired, x)), eo;
                }
                return (
                  (x = toNumber(x) || 0),
                  isObject(W) &&
                    ((ec = !!W.leading),
                    (ei = (eu = "maxWait" in W)
                      ? rh(toNumber(W.maxWait) || 0, x)
                      : ei),
                    (ed = "trailing" in W ? !!W.trailing : ed)),
                  (debounced.cancel = function () {
                    ee !== ea && rF(ea), (el = 0), (X = es = er = ea = ee);
                  }),
                  (debounced.flush = function () {
                    return ee === ea ? eo : trailingEdge(ib());
                  }),
                  debounced
                );
              }
              var i_ = baseRest(function (s, x) {
                  return baseDelay(s, 1, x);
                }),
                iC = baseRest(function (s, x, W) {
                  return baseDelay(s, toNumber(x) || 0, W);
                });
              function memoize(s, x) {
                if (
                  "function" != typeof s ||
                  (null != x && "function" != typeof x)
                )
                  throw new tw(et);
                var memoized = function () {
                  var W = arguments,
                    X = x ? x.apply(this, W) : W[0],
                    ee = memoized.cache;
                  if (ee.has(X)) return ee.get(X);
                  var et = s.apply(this, W);
                  return (memoized.cache = ee.set(X, et) || ee), et;
                };
                return (
                  (memoized.cache = new (memoize.Cache || MapCache)()), memoized
                );
              }
              function negate(s) {
                if ("function" != typeof s) throw new tw(et);
                return function () {
                  var x = arguments;
                  switch (x.length) {
                    case 0:
                      return !s.call(this);
                    case 1:
                      return !s.call(this, x[0]);
                    case 2:
                      return !s.call(this, x[0], x[1]);
                    case 3:
                      return !s.call(this, x[0], x[1], x[2]);
                  }
                  return !s.apply(this, x);
                };
              }
              memoize.Cache = MapCache;
              var ix = baseRest(function (s, x) {
                  var W = (x =
                    1 == x.length && iP(x[0])
                      ? arrayMap(x[0], baseUnary(getIteratee()))
                      : arrayMap(baseFlatten(x, 1), baseUnary(getIteratee())))
                    .length;
                  return baseRest(function (X) {
                    for (var ee = -1, et = rp(X.length, W); ++ee < et; )
                      X[ee] = x[ee].call(this, X[ee]);
                    return apply(s, this, X);
                  });
                }),
                iE = baseRest(function (s, x) {
                  var W = replaceHolders(x, getHolder(iE));
                  return createWrap(s, 32, ee, x, W);
                }),
                iA = baseRest(function (s, x) {
                  var W = replaceHolders(x, getHolder(iA));
                  return createWrap(s, 64, ee, x, W);
                }),
                iS = flatRest(function (s, x) {
                  return createWrap(s, 256, ee, ee, ee, x);
                });
              function eq(s, x) {
                return s === x || (s != s && x != x);
              }
              var ik = createRelationalOperation(baseGt),
                iT = createRelationalOperation(function (s, x) {
                  return s >= x;
                }),
                iI = baseIsArguments(
                  (function () {
                    return arguments;
                  })()
                )
                  ? baseIsArguments
                  : function (s) {
                      return (
                        isObjectLike(s) &&
                        tx.call(s, "callee") &&
                        !tj.call(s, "callee")
                      );
                    },
                iP = tc.isArray,
                iR = t3
                  ? baseUnary(t3)
                  : function (s) {
                      return isObjectLike(s) && baseGetTag(s) == eE;
                    };
              function isArrayLike(s) {
                return null != s && isLength(s.length) && !isFunction(s);
              }
              function isArrayLikeObject(s) {
                return isObjectLike(s) && isArrayLike(s);
              }
              var iN = rl || stubFalse,
                iO = t5
                  ? baseUnary(t5)
                  : function (s) {
                      return isObjectLike(s) && baseGetTag(s) == ed;
                    };
              function isError(s) {
                if (!isObjectLike(s)) return !1;
                var x = baseGetTag(s);
                return (
                  x == eh ||
                  "[object DOMException]" == x ||
                  ("string" == typeof s.message &&
                    "string" == typeof s.name &&
                    !isPlainObject(s))
                );
              }
              function isFunction(s) {
                if (!isObject(s)) return !1;
                var x = baseGetTag(s);
                return (
                  x == ep ||
                  x == ef ||
                  "[object AsyncFunction]" == x ||
                  "[object Proxy]" == x
                );
              }
              function isInteger(s) {
                return "number" == typeof s && s == toInteger(s);
              }
              function isLength(s) {
                return (
                  "number" == typeof s &&
                  s > -1 &&
                  s % 1 == 0 &&
                  s <= 9007199254740991
                );
              }
              function isObject(s) {
                var x = typeof s;
                return null != s && ("object" == x || "function" == x);
              }
              function isObjectLike(s) {
                return null != s && "object" == typeof s;
              }
              var iM = t6
                ? baseUnary(t6)
                : function (s) {
                    return isObjectLike(s) && rW(s) == eg;
                  };
              function isNumber(s) {
                return (
                  "number" == typeof s ||
                  (isObjectLike(s) && baseGetTag(s) == em)
                );
              }
              function isPlainObject(s) {
                if (!isObjectLike(s) || baseGetTag(s) != ew) return !1;
                var x = tM(s);
                if (null === x) return !0;
                var W = tx.call(x, "constructor") && x.constructor;
                return (
                  "function" == typeof W && W instanceof W && tC.call(W) == tk
                );
              }
              var iD = t4
                  ? baseUnary(t4)
                  : function (s) {
                      return isObjectLike(s) && baseGetTag(s) == ev;
                    },
                iB = t8
                  ? baseUnary(t8)
                  : function (s) {
                      return isObjectLike(s) && rW(s) == ey;
                    };
              function isString(s) {
                return (
                  "string" == typeof s ||
                  (!iP(s) && isObjectLike(s) && baseGetTag(s) == e_)
                );
              }
              function isSymbol(s) {
                return (
                  "symbol" == typeof s ||
                  (isObjectLike(s) && baseGetTag(s) == eC)
                );
              }
              var iL = t9
                  ? baseUnary(t9)
                  : function (s) {
                      return (
                        isObjectLike(s) &&
                        isLength(s.length) &&
                        !!tq[baseGetTag(s)]
                      );
                    },
                ij = createRelationalOperation(baseLt),
                iU = createRelationalOperation(function (s, x) {
                  return s <= x;
                });
              function toArray(s) {
                if (!s) return [];
                if (isArrayLike(s))
                  return isString(s) ? stringToArray(s) : copyArray(s);
                if (tG && s[tG])
                  return (function (s) {
                    for (var x, W = []; !(x = s.next()).done; ) W.push(x.value);
                    return W;
                  })(s[tG]());
                var x = rW(s);
                return (x == eg ? mapToArray : x == ey ? setToArray : values)(
                  s
                );
              }
              function toFinite(s) {
                return s
                  ? (s = toNumber(s)) === eo || s === -eo
                    ? (s < 0 ? -1 : 1) * 17976931348623157e292
                    : s == s
                    ? s
                    : 0
                  : 0 === s
                  ? s
                  : 0;
              }
              function toInteger(s) {
                var x = toFinite(s),
                  W = x % 1;
                return x == x ? (W ? x - W : x) : 0;
              }
              function toLength(s) {
                return s ? baseClamp(toInteger(s), 0, 4294967295) : 0;
              }
              function toNumber(s) {
                if ("number" == typeof s) return s;
                if (isSymbol(s)) return ea;
                if (isObject(s)) {
                  var x = "function" == typeof s.valueOf ? s.valueOf() : s;
                  s = isObject(x) ? x + "" : x;
                }
                if ("string" != typeof s) return 0 === s ? s : +s;
                s = baseTrim(s);
                var W = e9.test(s);
                return W || tt.test(s)
                  ? tZ(s.slice(2), W ? 2 : 8)
                  : e8.test(s)
                  ? ea
                  : +s;
              }
              function toPlainObject(s) {
                return copyObject(s, keysIn(s));
              }
              function toString(s) {
                return null == s ? "" : baseToString(s);
              }
              var i$ = createAssigner(function (s, x) {
                  if (isPrototype(x) || isArrayLike(x)) {
                    copyObject(x, keys(x), s);
                    return;
                  }
                  for (var W in x) tx.call(x, W) && assignValue(s, W, x[W]);
                }),
                iF = createAssigner(function (s, x) {
                  copyObject(x, keysIn(x), s);
                }),
                iz = createAssigner(function (s, x, W, X) {
                  copyObject(x, keysIn(x), s, X);
                }),
                iH = createAssigner(function (s, x, W, X) {
                  copyObject(x, keys(x), s, X);
                }),
                iq = flatRest(baseAt),
                iV = baseRest(function (s, x) {
                  s = tf(s);
                  var W = -1,
                    X = x.length,
                    et = X > 2 ? x[2] : ee;
                  for (
                    et && isIterateeCall(x[0], x[1], et) && (X = 1);
                    ++W < X;

                  )
                    for (
                      var er = x[W], ei = keysIn(er), eo = -1, ea = ei.length;
                      ++eo < ea;

                    ) {
                      var es = ei[eo],
                        el = s[es];
                      (ee === el || (eq(el, ty[es]) && !tx.call(s, es))) &&
                        (s[es] = er[es]);
                    }
                  return s;
                }),
                iW = baseRest(function (s) {
                  return s.push(ee, customDefaultsMerge), apply(iQ, ee, s);
                });
              function get(s, x, W) {
                var X = null == s ? ee : baseGet(s, x);
                return ee === X ? W : X;
              }
              function hasIn(s, x) {
                return null != s && hasPath(s, x, baseHasIn);
              }
              var iK = createInverter(function (s, x, W) {
                  null != x &&
                    "function" != typeof x.toString &&
                    (x = tS.call(x)),
                    (s[x] = W);
                }, constant(identity)),
                iZ = createInverter(function (s, x, W) {
                  null != x &&
                    "function" != typeof x.toString &&
                    (x = tS.call(x)),
                    tx.call(s, x) ? s[x].push(W) : (s[x] = [W]);
                }, getIteratee),
                iG = baseRest(baseInvoke);
              function keys(s) {
                return isArrayLike(s) ? arrayLikeKeys(s) : baseKeys(s);
              }
              function keysIn(s) {
                return isArrayLike(s)
                  ? arrayLikeKeys(s, !0)
                  : (function (s) {
                      if (!isObject(s))
                        return (function (s) {
                          var x = [];
                          if (null != s) for (var W in tf(s)) x.push(W);
                          return x;
                        })(s);
                      var x = isPrototype(s),
                        W = [];
                      for (var X in s)
                        ("constructor" == X && (x || !tx.call(s, X))) ||
                          W.push(X);
                      return W;
                    })(s);
              }
              var iY = createAssigner(function (s, x, W) {
                  baseMerge(s, x, W);
                }),
                iQ = createAssigner(function (s, x, W, X) {
                  baseMerge(s, x, W, X);
                }),
                iJ = flatRest(function (s, x) {
                  var W = {};
                  if (null == s) return W;
                  var X = !1;
                  (x = arrayMap(x, function (x) {
                    return (x = castPath(x, s)), X || (X = x.length > 1), x;
                  })),
                    copyObject(s, getAllKeysIn(s), W),
                    X && (W = baseClone(W, 7, customOmitClone));
                  for (var ee = x.length; ee--; ) baseUnset(W, x[ee]);
                  return W;
                }),
                iX = flatRest(function (s, x) {
                  return null == s
                    ? {}
                    : basePickBy(s, x, function (x, W) {
                        return hasIn(s, W);
                      });
                });
              function pickBy(s, x) {
                if (null == s) return {};
                var W = arrayMap(getAllKeysIn(s), function (s) {
                  return [s];
                });
                return (
                  (x = getIteratee(x)),
                  basePickBy(s, W, function (s, W) {
                    return x(s, W[0]);
                  })
                );
              }
              var i0 = createToPairs(keys),
                i1 = createToPairs(keysIn);
              function values(s) {
                return null == s ? [] : baseValues(s, keys(s));
              }
              var i2 = createCompounder(function (s, x, W) {
                return (x = x.toLowerCase()), s + (W ? capitalize(x) : x);
              });
              function capitalize(s) {
                return i7(toString(s).toLowerCase());
              }
              function deburr(s) {
                return (s = toString(s)) && s.replace(ta, re).replace(tL, "");
              }
              var i3 = createCompounder(function (s, x, W) {
                  return s + (W ? "-" : "") + x.toLowerCase();
                }),
                i5 = createCompounder(function (s, x, W) {
                  return s + (W ? " " : "") + x.toLowerCase();
                }),
                i6 = createCaseFirst("toLowerCase"),
                i4 = createCompounder(function (s, x, W) {
                  return s + (W ? "_" : "") + x.toLowerCase();
                }),
                i8 = createCompounder(function (s, x, W) {
                  return s + (W ? " " : "") + i7(x);
                }),
                i9 = createCompounder(function (s, x, W) {
                  return s + (W ? " " : "") + x.toUpperCase();
                }),
                i7 = createCaseFirst("toUpperCase");
              function words(s, x, W) {
                if (((s = toString(s)), (x = W ? ee : x), ee === x)) {
                  var X;
                  return ((X = s), tF.test(X))
                    ? s.match(tU) || []
                    : s.match(e2) || [];
                }
                return s.match(x) || [];
              }
              var nt = baseRest(function (s, x) {
                  try {
                    return apply(s, ee, x);
                  } catch (s) {
                    return isError(s) ? s : new td(s);
                  }
                }),
                nr = flatRest(function (s, x) {
                  return (
                    arrayEach(x, function (x) {
                      baseAssignValue(s, (x = toKey(x)), iv(s[x], s));
                    }),
                    s
                  );
                });
              function constant(s) {
                return function () {
                  return s;
                };
              }
              var nn = createFlow(),
                no = createFlow(!0);
              function identity(s) {
                return s;
              }
              function iteratee(s) {
                return baseIteratee(
                  "function" == typeof s ? s : baseClone(s, 1)
                );
              }
              var na = baseRest(function (s, x) {
                  return function (W) {
                    return baseInvoke(W, s, x);
                  };
                }),
                ns = baseRest(function (s, x) {
                  return function (W) {
                    return baseInvoke(s, W, x);
                  };
                });
              function mixin(s, x, W) {
                var X = keys(x),
                  ee = baseFunctions(x, X);
                null != W ||
                  (isObject(x) && (ee.length || !X.length)) ||
                  ((W = x),
                  (x = s),
                  (s = this),
                  (ee = baseFunctions(x, keys(x))));
                var et = !(isObject(W) && "chain" in W) || !!W.chain,
                  er = isFunction(s);
                return (
                  arrayEach(ee, function (W) {
                    var X = x[W];
                    (s[W] = X),
                      er &&
                        (s.prototype[W] = function () {
                          var x = this.__chain__;
                          if (et || x) {
                            var W = s(this.__wrapped__);
                            return (
                              (W.__actions__ = copyArray(
                                this.__actions__
                              )).push({ func: X, args: arguments, thisArg: s }),
                              (W.__chain__ = x),
                              W
                            );
                          }
                          return X.apply(
                            s,
                            arrayPush([this.value()], arguments)
                          );
                        });
                  }),
                  s
                );
              }
              function noop() {}
              var nl = createOver(arrayMap),
                nc = createOver(arrayEvery),
                nu = createOver(arraySome);
              function property(s) {
                return isKey(s)
                  ? baseProperty(toKey(s))
                  : function (x) {
                      return baseGet(x, s);
                    };
              }
              var nd = createRange(),
                nh = createRange(!0);
              function stubArray() {
                return [];
              }
              function stubFalse() {
                return !1;
              }
              var np = createMathOperation(function (s, x) {
                  return s + x;
                }, 0),
                nf = createRound("ceil"),
                ng = createMathOperation(function (s, x) {
                  return s / x;
                }, 1),
                nm = createRound("floor"),
                nw = createMathOperation(function (s, x) {
                  return s * x;
                }, 1),
                nb = createRound("round"),
                nv = createMathOperation(function (s, x) {
                  return s - x;
                }, 0);
              return (
                (lodash.after = function (s, x) {
                  if ("function" != typeof x) throw new tw(et);
                  return (
                    (s = toInteger(s)),
                    function () {
                      if (--s < 1) return x.apply(this, arguments);
                    }
                  );
                }),
                (lodash.ary = ary),
                (lodash.assign = i$),
                (lodash.assignIn = iF),
                (lodash.assignInWith = iz),
                (lodash.assignWith = iH),
                (lodash.at = iq),
                (lodash.before = before),
                (lodash.bind = iv),
                (lodash.bindAll = nr),
                (lodash.bindKey = iy),
                (lodash.castArray = function () {
                  if (!arguments.length) return [];
                  var s = arguments[0];
                  return iP(s) ? s : [s];
                }),
                (lodash.chain = chain),
                (lodash.chunk = function (s, x, W) {
                  x = (W ? isIterateeCall(s, x, W) : ee === x)
                    ? 1
                    : rh(toInteger(x), 0);
                  var X = null == s ? 0 : s.length;
                  if (!X || x < 1) return [];
                  for (var et = 0, er = 0, ei = tc(t7(X / x)); et < X; )
                    ei[er++] = baseSlice(s, et, (et += x));
                  return ei;
                }),
                (lodash.compact = function (s) {
                  for (
                    var x = -1, W = null == s ? 0 : s.length, X = 0, ee = [];
                    ++x < W;

                  ) {
                    var et = s[x];
                    et && (ee[X++] = et);
                  }
                  return ee;
                }),
                (lodash.concat = function () {
                  var s = arguments.length;
                  if (!s) return [];
                  for (var x = tc(s - 1), W = arguments[0], X = s; X--; )
                    x[X - 1] = arguments[X];
                  return arrayPush(
                    iP(W) ? copyArray(W) : [W],
                    baseFlatten(x, 1)
                  );
                }),
                (lodash.cond = function (s) {
                  var x = null == s ? 0 : s.length,
                    W = getIteratee();
                  return (
                    (s = x
                      ? arrayMap(s, function (s) {
                          if ("function" != typeof s[1]) throw new tw(et);
                          return [W(s[0]), s[1]];
                        })
                      : []),
                    baseRest(function (W) {
                      for (var X = -1; ++X < x; ) {
                        var ee = s[X];
                        if (apply(ee[0], this, W)) return apply(ee[1], this, W);
                      }
                    })
                  );
                }),
                (lodash.conforms = function (s) {
                  var x, W;
                  return (
                    (W = keys((x = baseClone(s, 1)))),
                    function (s) {
                      return baseConformsTo(s, x, W);
                    }
                  );
                }),
                (lodash.constant = constant),
                (lodash.countBy = ic),
                (lodash.create = function (s, x) {
                  var W = rM(s);
                  return null == x ? W : baseAssign(W, x);
                }),
                (lodash.curry = function curry(s, x, W) {
                  x = W ? ee : x;
                  var X = createWrap(s, 8, ee, ee, ee, ee, ee, x);
                  return (X.placeholder = curry.placeholder), X;
                }),
                (lodash.curryRight = function curryRight(s, x, W) {
                  x = W ? ee : x;
                  var X = createWrap(s, 16, ee, ee, ee, ee, ee, x);
                  return (X.placeholder = curryRight.placeholder), X;
                }),
                (lodash.debounce = debounce),
                (lodash.defaults = iV),
                (lodash.defaultsDeep = iW),
                (lodash.defer = i_),
                (lodash.delay = iC),
                (lodash.difference = rJ),
                (lodash.differenceBy = rX),
                (lodash.differenceWith = r0),
                (lodash.drop = function (s, x, W) {
                  var X = null == s ? 0 : s.length;
                  return X
                    ? baseSlice(
                        s,
                        (x = W || ee === x ? 1 : toInteger(x)) < 0 ? 0 : x,
                        X
                      )
                    : [];
                }),
                (lodash.dropRight = function (s, x, W) {
                  var X = null == s ? 0 : s.length;
                  return X
                    ? baseSlice(
                        s,
                        0,
                        (x = X - (x = W || ee === x ? 1 : toInteger(x))) < 0
                          ? 0
                          : x
                      )
                    : [];
                }),
                (lodash.dropRightWhile = function (s, x) {
                  return s && s.length
                    ? baseWhile(s, getIteratee(x, 3), !0, !0)
                    : [];
                }),
                (lodash.dropWhile = function (s, x) {
                  return s && s.length
                    ? baseWhile(s, getIteratee(x, 3), !0)
                    : [];
                }),
                (lodash.fill = function (s, x, W, X) {
                  var et = null == s ? 0 : s.length;
                  return et
                    ? (W &&
                        "number" != typeof W &&
                        isIterateeCall(s, x, W) &&
                        ((W = 0), (X = et)),
                      (function (s, x, W, X) {
                        var et = s.length;
                        for (
                          (W = toInteger(W)) < 0 && (W = -W > et ? 0 : et + W),
                            (X = ee === X || X > et ? et : toInteger(X)) < 0 &&
                              (X += et),
                            X = W > X ? 0 : toLength(X);
                          W < X;

                        )
                          s[W++] = x;
                        return s;
                      })(s, x, W, X))
                    : [];
                }),
                (lodash.filter = function (s, x) {
                  return (iP(s) ? arrayFilter : baseFilter)(
                    s,
                    getIteratee(x, 3)
                  );
                }),
                (lodash.flatMap = function (s, x) {
                  return baseFlatten(map(s, x), 1);
                }),
                (lodash.flatMapDeep = function (s, x) {
                  return baseFlatten(map(s, x), eo);
                }),
                (lodash.flatMapDepth = function (s, x, W) {
                  return (
                    (W = ee === W ? 1 : toInteger(W)), baseFlatten(map(s, x), W)
                  );
                }),
                (lodash.flatten = flatten),
                (lodash.flattenDeep = function (s) {
                  return (null == s ? 0 : s.length) ? baseFlatten(s, eo) : [];
                }),
                (lodash.flattenDepth = function (s, x) {
                  return (null == s ? 0 : s.length)
                    ? baseFlatten(s, (x = ee === x ? 1 : toInteger(x)))
                    : [];
                }),
                (lodash.flip = function (s) {
                  return createWrap(s, 512);
                }),
                (lodash.flow = nn),
                (lodash.flowRight = no),
                (lodash.fromPairs = function (s) {
                  for (
                    var x = -1, W = null == s ? 0 : s.length, X = {};
                    ++x < W;

                  ) {
                    var ee = s[x];
                    X[ee[0]] = ee[1];
                  }
                  return X;
                }),
                (lodash.functions = function (s) {
                  return null == s ? [] : baseFunctions(s, keys(s));
                }),
                (lodash.functionsIn = function (s) {
                  return null == s ? [] : baseFunctions(s, keysIn(s));
                }),
                (lodash.groupBy = ih),
                (lodash.initial = function (s) {
                  return (null == s ? 0 : s.length) ? baseSlice(s, 0, -1) : [];
                }),
                (lodash.intersection = r1),
                (lodash.intersectionBy = r2),
                (lodash.intersectionWith = r3),
                (lodash.invert = iK),
                (lodash.invertBy = iZ),
                (lodash.invokeMap = ip),
                (lodash.iteratee = iteratee),
                (lodash.keyBy = ig),
                (lodash.keys = keys),
                (lodash.keysIn = keysIn),
                (lodash.map = map),
                (lodash.mapKeys = function (s, x) {
                  var W = {};
                  return (
                    (x = getIteratee(x, 3)),
                    baseForOwn(s, function (s, X, ee) {
                      baseAssignValue(W, x(s, X, ee), s);
                    }),
                    W
                  );
                }),
                (lodash.mapValues = function (s, x) {
                  var W = {};
                  return (
                    (x = getIteratee(x, 3)),
                    baseForOwn(s, function (s, X, ee) {
                      baseAssignValue(W, X, x(s, X, ee));
                    }),
                    W
                  );
                }),
                (lodash.matches = function (s) {
                  return baseMatches(baseClone(s, 1));
                }),
                (lodash.matchesProperty = function (s, x) {
                  return baseMatchesProperty(s, baseClone(x, 1));
                }),
                (lodash.memoize = memoize),
                (lodash.merge = iY),
                (lodash.mergeWith = iQ),
                (lodash.method = na),
                (lodash.methodOf = ns),
                (lodash.mixin = mixin),
                (lodash.negate = negate),
                (lodash.nthArg = function (s) {
                  return (
                    (s = toInteger(s)),
                    baseRest(function (x) {
                      return baseNth(x, s);
                    })
                  );
                }),
                (lodash.omit = iJ),
                (lodash.omitBy = function (s, x) {
                  return pickBy(s, negate(getIteratee(x)));
                }),
                (lodash.once = function (s) {
                  return before(2, s);
                }),
                (lodash.orderBy = function (s, x, W, X) {
                  return null == s
                    ? []
                    : (iP(x) || (x = null == x ? [] : [x]),
                      iP((W = X ? ee : W)) || (W = null == W ? [] : [W]),
                      baseOrderBy(s, x, W));
                }),
                (lodash.over = nl),
                (lodash.overArgs = ix),
                (lodash.overEvery = nc),
                (lodash.overSome = nu),
                (lodash.partial = iE),
                (lodash.partialRight = iA),
                (lodash.partition = im),
                (lodash.pick = iX),
                (lodash.pickBy = pickBy),
                (lodash.property = property),
                (lodash.propertyOf = function (s) {
                  return function (x) {
                    return null == s ? ee : baseGet(s, x);
                  };
                }),
                (lodash.pull = r5),
                (lodash.pullAll = pullAll),
                (lodash.pullAllBy = function (s, x, W) {
                  return s && s.length && x && x.length
                    ? basePullAll(s, x, getIteratee(W, 2))
                    : s;
                }),
                (lodash.pullAllWith = function (s, x, W) {
                  return s && s.length && x && x.length
                    ? basePullAll(s, x, ee, W)
                    : s;
                }),
                (lodash.pullAt = r6),
                (lodash.range = nd),
                (lodash.rangeRight = nh),
                (lodash.rearg = iS),
                (lodash.reject = function (s, x) {
                  return (iP(s) ? arrayFilter : baseFilter)(
                    s,
                    negate(getIteratee(x, 3))
                  );
                }),
                (lodash.remove = function (s, x) {
                  var W = [];
                  if (!(s && s.length)) return W;
                  var X = -1,
                    ee = [],
                    et = s.length;
                  for (x = getIteratee(x, 3); ++X < et; ) {
                    var er = s[X];
                    x(er, X, s) && (W.push(er), ee.push(X));
                  }
                  return basePullAt(s, ee), W;
                }),
                (lodash.rest = function (s, x) {
                  if ("function" != typeof s) throw new tw(et);
                  return baseRest(s, (x = ee === x ? x : toInteger(x)));
                }),
                (lodash.reverse = reverse),
                (lodash.sampleSize = function (s, x, W) {
                  return (
                    (x = (W ? isIterateeCall(s, x, W) : ee === x)
                      ? 1
                      : toInteger(x)),
                    (iP(s)
                      ? function (s, x) {
                          return shuffleSelf(
                            copyArray(s),
                            baseClamp(x, 0, s.length)
                          );
                        }
                      : function (s, x) {
                          var W = values(s);
                          return shuffleSelf(W, baseClamp(x, 0, W.length));
                        })(s, x)
                  );
                }),
                (lodash.set = function (s, x, W) {
                  return null == s ? s : baseSet(s, x, W);
                }),
                (lodash.setWith = function (s, x, W, X) {
                  return (
                    (X = "function" == typeof X ? X : ee),
                    null == s ? s : baseSet(s, x, W, X)
                  );
                }),
                (lodash.shuffle = function (s) {
                  return (
                    iP(s)
                      ? function (s) {
                          return shuffleSelf(copyArray(s));
                        }
                      : function (s) {
                          return shuffleSelf(values(s));
                        }
                  )(s);
                }),
                (lodash.slice = function (s, x, W) {
                  var X = null == s ? 0 : s.length;
                  return X
                    ? (W && "number" != typeof W && isIterateeCall(s, x, W)
                        ? ((x = 0), (W = X))
                        : ((x = null == x ? 0 : toInteger(x)),
                          (W = ee === W ? X : toInteger(W))),
                      baseSlice(s, x, W))
                    : [];
                }),
                (lodash.sortBy = iw),
                (lodash.sortedUniq = function (s) {
                  return s && s.length ? baseSortedUniq(s) : [];
                }),
                (lodash.sortedUniqBy = function (s, x) {
                  return s && s.length
                    ? baseSortedUniq(s, getIteratee(x, 2))
                    : [];
                }),
                (lodash.split = function (s, x, W) {
                  return (W &&
                    "number" != typeof W &&
                    isIterateeCall(s, x, W) &&
                    (x = W = ee),
                  (W = ee === W ? 4294967295 : W >>> 0))
                    ? (s = toString(s)) &&
                      ("string" == typeof x || (null != x && !iD(x))) &&
                      !(x = baseToString(x)) &&
                      hasUnicode(s)
                      ? castSlice(stringToArray(s), 0, W)
                      : s.split(x, W)
                    : [];
                }),
                (lodash.spread = function (s, x) {
                  if ("function" != typeof s) throw new tw(et);
                  return (
                    (x = null == x ? 0 : rh(toInteger(x), 0)),
                    baseRest(function (W) {
                      var X = W[x],
                        ee = castSlice(W, 0, x);
                      return X && arrayPush(ee, X), apply(s, this, ee);
                    })
                  );
                }),
                (lodash.tail = function (s) {
                  var x = null == s ? 0 : s.length;
                  return x ? baseSlice(s, 1, x) : [];
                }),
                (lodash.take = function (s, x, W) {
                  return s && s.length
                    ? baseSlice(
                        s,
                        0,
                        (x = W || ee === x ? 1 : toInteger(x)) < 0 ? 0 : x
                      )
                    : [];
                }),
                (lodash.takeRight = function (s, x, W) {
                  var X = null == s ? 0 : s.length;
                  return X
                    ? baseSlice(
                        s,
                        (x = X - (x = W || ee === x ? 1 : toInteger(x))) < 0
                          ? 0
                          : x,
                        X
                      )
                    : [];
                }),
                (lodash.takeRightWhile = function (s, x) {
                  return s && s.length
                    ? baseWhile(s, getIteratee(x, 3), !1, !0)
                    : [];
                }),
                (lodash.takeWhile = function (s, x) {
                  return s && s.length ? baseWhile(s, getIteratee(x, 3)) : [];
                }),
                (lodash.tap = function (s, x) {
                  return x(s), s;
                }),
                (lodash.throttle = function (s, x, W) {
                  var X = !0,
                    ee = !0;
                  if ("function" != typeof s) throw new tw(et);
                  return (
                    isObject(W) &&
                      ((X = "leading" in W ? !!W.leading : X),
                      (ee = "trailing" in W ? !!W.trailing : ee)),
                    debounce(s, x, { leading: X, maxWait: x, trailing: ee })
                  );
                }),
                (lodash.thru = thru),
                (lodash.toArray = toArray),
                (lodash.toPairs = i0),
                (lodash.toPairsIn = i1),
                (lodash.toPath = function (s) {
                  return iP(s)
                    ? arrayMap(s, toKey)
                    : isSymbol(s)
                    ? [s]
                    : copyArray(rQ(toString(s)));
                }),
                (lodash.toPlainObject = toPlainObject),
                (lodash.transform = function (s, x, W) {
                  var X = iP(s),
                    ee = X || iN(s) || iL(s);
                  if (((x = getIteratee(x, 4)), null == W)) {
                    var et = s && s.constructor;
                    W = ee
                      ? X
                        ? new et()
                        : []
                      : isObject(s) && isFunction(et)
                      ? rM(tM(s))
                      : {};
                  }
                  return (
                    (ee ? arrayEach : baseForOwn)(s, function (s, X, ee) {
                      return x(W, s, X, ee);
                    }),
                    W
                  );
                }),
                (lodash.unary = function (s) {
                  return ary(s, 1);
                }),
                (lodash.union = r4),
                (lodash.unionBy = r8),
                (lodash.unionWith = r9),
                (lodash.uniq = function (s) {
                  return s && s.length ? baseUniq(s) : [];
                }),
                (lodash.uniqBy = function (s, x) {
                  return s && s.length ? baseUniq(s, getIteratee(x, 2)) : [];
                }),
                (lodash.uniqWith = function (s, x) {
                  return (
                    (x = "function" == typeof x ? x : ee),
                    s && s.length ? baseUniq(s, ee, x) : []
                  );
                }),
                (lodash.unset = function (s, x) {
                  return null == s || baseUnset(s, x);
                }),
                (lodash.unzip = unzip),
                (lodash.unzipWith = unzipWith),
                (lodash.update = function (s, x, W) {
                  return null == s ? s : baseUpdate(s, x, castFunction(W));
                }),
                (lodash.updateWith = function (s, x, W, X) {
                  return (
                    (X = "function" == typeof X ? X : ee),
                    null == s ? s : baseUpdate(s, x, castFunction(W), X)
                  );
                }),
                (lodash.values = values),
                (lodash.valuesIn = function (s) {
                  return null == s ? [] : baseValues(s, keysIn(s));
                }),
                (lodash.without = r7),
                (lodash.words = words),
                (lodash.wrap = function (s, x) {
                  return iE(castFunction(x), s);
                }),
                (lodash.xor = it),
                (lodash.xorBy = ir),
                (lodash.xorWith = io),
                (lodash.zip = ia),
                (lodash.zipObject = function (s, x) {
                  return baseZipObject(s || [], x || [], assignValue);
                }),
                (lodash.zipObjectDeep = function (s, x) {
                  return baseZipObject(s || [], x || [], baseSet);
                }),
                (lodash.zipWith = is),
                (lodash.entries = i0),
                (lodash.entriesIn = i1),
                (lodash.extend = iF),
                (lodash.extendWith = iz),
                mixin(lodash, lodash),
                (lodash.add = np),
                (lodash.attempt = nt),
                (lodash.camelCase = i2),
                (lodash.capitalize = capitalize),
                (lodash.ceil = nf),
                (lodash.clamp = function (s, x, W) {
                  return (
                    ee === W && ((W = x), (x = ee)),
                    ee !== W && (W = (W = toNumber(W)) == W ? W : 0),
                    ee !== x && (x = (x = toNumber(x)) == x ? x : 0),
                    baseClamp(toNumber(s), x, W)
                  );
                }),
                (lodash.clone = function (s) {
                  return baseClone(s, 4);
                }),
                (lodash.cloneDeep = function (s) {
                  return baseClone(s, 5);
                }),
                (lodash.cloneDeepWith = function (s, x) {
                  return baseClone(s, 5, (x = "function" == typeof x ? x : ee));
                }),
                (lodash.cloneWith = function (s, x) {
                  return baseClone(s, 4, (x = "function" == typeof x ? x : ee));
                }),
                (lodash.conformsTo = function (s, x) {
                  return null == x || baseConformsTo(s, x, keys(x));
                }),
                (lodash.deburr = deburr),
                (lodash.defaultTo = function (s, x) {
                  return null == s || s != s ? x : s;
                }),
                (lodash.divide = ng),
                (lodash.endsWith = function (s, x, W) {
                  (s = toString(s)), (x = baseToString(x));
                  var X = s.length,
                    et = (W = ee === W ? X : baseClamp(toInteger(W), 0, X));
                  return (W -= x.length) >= 0 && s.slice(W, et) == x;
                }),
                (lodash.eq = eq),
                (lodash.escape = function (s) {
                  return (s = toString(s)) && eF.test(s)
                    ? s.replace(eU, rt)
                    : s;
                }),
                (lodash.escapeRegExp = function (s) {
                  return (s = toString(s)) && eY.test(s)
                    ? s.replace(eG, "\\$&")
                    : s;
                }),
                (lodash.every = function (s, x, W) {
                  var X = iP(s) ? arrayEvery : baseEvery;
                  return (
                    W && isIterateeCall(s, x, W) && (x = ee),
                    X(s, getIteratee(x, 3))
                  );
                }),
                (lodash.find = iu),
                (lodash.findIndex = findIndex),
                (lodash.findKey = function (s, x) {
                  return baseFindKey(s, getIteratee(x, 3), baseForOwn);
                }),
                (lodash.findLast = id),
                (lodash.findLastIndex = findLastIndex),
                (lodash.findLastKey = function (s, x) {
                  return baseFindKey(s, getIteratee(x, 3), baseForOwnRight);
                }),
                (lodash.floor = nm),
                (lodash.forEach = forEach),
                (lodash.forEachRight = forEachRight),
                (lodash.forIn = function (s, x) {
                  return null == s ? s : rL(s, getIteratee(x, 3), keysIn);
                }),
                (lodash.forInRight = function (s, x) {
                  return null == s ? s : rj(s, getIteratee(x, 3), keysIn);
                }),
                (lodash.forOwn = function (s, x) {
                  return s && baseForOwn(s, getIteratee(x, 3));
                }),
                (lodash.forOwnRight = function (s, x) {
                  return s && baseForOwnRight(s, getIteratee(x, 3));
                }),
                (lodash.get = get),
                (lodash.gt = ik),
                (lodash.gte = iT),
                (lodash.has = function (s, x) {
                  return null != s && hasPath(s, x, baseHas);
                }),
                (lodash.hasIn = hasIn),
                (lodash.head = head),
                (lodash.identity = identity),
                (lodash.includes = function (s, x, W, X) {
                  (s = isArrayLike(s) ? s : values(s)),
                    (W = W && !X ? toInteger(W) : 0);
                  var ee = s.length;
                  return (
                    W < 0 && (W = rh(ee + W, 0)),
                    isString(s)
                      ? W <= ee && s.indexOf(x, W) > -1
                      : !!ee && baseIndexOf(s, x, W) > -1
                  );
                }),
                (lodash.indexOf = function (s, x, W) {
                  var X = null == s ? 0 : s.length;
                  if (!X) return -1;
                  var ee = null == W ? 0 : toInteger(W);
                  return ee < 0 && (ee = rh(X + ee, 0)), baseIndexOf(s, x, ee);
                }),
                (lodash.inRange = function (s, x, W) {
                  var X, et, er;
                  return (
                    (x = toFinite(x)),
                    ee === W ? ((W = x), (x = 0)) : (W = toFinite(W)),
                    (X = s = toNumber(s)) >= rp((et = x), (er = W)) &&
                      X < rh(et, er)
                  );
                }),
                (lodash.invoke = iG),
                (lodash.isArguments = iI),
                (lodash.isArray = iP),
                (lodash.isArrayBuffer = iR),
                (lodash.isArrayLike = isArrayLike),
                (lodash.isArrayLikeObject = isArrayLikeObject),
                (lodash.isBoolean = function (s) {
                  return (
                    !0 === s ||
                    !1 === s ||
                    (isObjectLike(s) && baseGetTag(s) == eu)
                  );
                }),
                (lodash.isBuffer = iN),
                (lodash.isDate = iO),
                (lodash.isElement = function (s) {
                  return (
                    isObjectLike(s) && 1 === s.nodeType && !isPlainObject(s)
                  );
                }),
                (lodash.isEmpty = function (s) {
                  if (null == s) return !0;
                  if (
                    isArrayLike(s) &&
                    (iP(s) ||
                      "string" == typeof s ||
                      "function" == typeof s.splice ||
                      iN(s) ||
                      iL(s) ||
                      iI(s))
                  )
                    return !s.length;
                  var x = rW(s);
                  if (x == eg || x == ey) return !s.size;
                  if (isPrototype(s)) return !baseKeys(s).length;
                  for (var W in s) if (tx.call(s, W)) return !1;
                  return !0;
                }),
                (lodash.isEqual = function (s, x) {
                  return baseIsEqual(s, x);
                }),
                (lodash.isEqualWith = function (s, x, W) {
                  var X = (W = "function" == typeof W ? W : ee) ? W(s, x) : ee;
                  return ee === X ? baseIsEqual(s, x, ee, W) : !!X;
                }),
                (lodash.isError = isError),
                (lodash.isFinite = function (s) {
                  return "number" == typeof s && rc(s);
                }),
                (lodash.isFunction = isFunction),
                (lodash.isInteger = isInteger),
                (lodash.isLength = isLength),
                (lodash.isMap = iM),
                (lodash.isMatch = function (s, x) {
                  return s === x || baseIsMatch(s, x, getMatchData(x));
                }),
                (lodash.isMatchWith = function (s, x, W) {
                  return (
                    (W = "function" == typeof W ? W : ee),
                    baseIsMatch(s, x, getMatchData(x), W)
                  );
                }),
                (lodash.isNaN = function (s) {
                  return isNumber(s) && s != +s;
                }),
                (lodash.isNative = function (s) {
                  if (rK(s))
                    throw new td(
                      "Unsupported core-js use. Try https://npms.io/search?q=ponyfill."
                    );
                  return baseIsNative(s);
                }),
                (lodash.isNil = function (s) {
                  return null == s;
                }),
                (lodash.isNull = function (s) {
                  return null === s;
                }),
                (lodash.isNumber = isNumber),
                (lodash.isObject = isObject),
                (lodash.isObjectLike = isObjectLike),
                (lodash.isPlainObject = isPlainObject),
                (lodash.isRegExp = iD),
                (lodash.isSafeInteger = function (s) {
                  return (
                    isInteger(s) &&
                    s >= -9007199254740991 &&
                    s <= 9007199254740991
                  );
                }),
                (lodash.isSet = iB),
                (lodash.isString = isString),
                (lodash.isSymbol = isSymbol),
                (lodash.isTypedArray = iL),
                (lodash.isUndefined = function (s) {
                  return ee === s;
                }),
                (lodash.isWeakMap = function (s) {
                  return isObjectLike(s) && rW(s) == ex;
                }),
                (lodash.isWeakSet = function (s) {
                  return isObjectLike(s) && "[object WeakSet]" == baseGetTag(s);
                }),
                (lodash.join = function (s, x) {
                  return null == s ? "" : ru.call(s, x);
                }),
                (lodash.kebabCase = i3),
                (lodash.last = last),
                (lodash.lastIndexOf = function (s, x, W) {
                  var X = null == s ? 0 : s.length;
                  if (!X) return -1;
                  var et = X;
                  return (
                    ee !== W &&
                      (et =
                        (et = toInteger(W)) < 0
                          ? rh(X + et, 0)
                          : rp(et, X - 1)),
                    x == x
                      ? (function (s, x, W) {
                          for (var X = W + 1; X-- && s[X] !== x; );
                          return X;
                        })(s, x, et)
                      : baseFindIndex(s, baseIsNaN, et, !0)
                  );
                }),
                (lodash.lowerCase = i5),
                (lodash.lowerFirst = i6),
                (lodash.lt = ij),
                (lodash.lte = iU),
                (lodash.max = function (s) {
                  return s && s.length ? baseExtremum(s, identity, baseGt) : ee;
                }),
                (lodash.maxBy = function (s, x) {
                  return s && s.length
                    ? baseExtremum(s, getIteratee(x, 2), baseGt)
                    : ee;
                }),
                (lodash.mean = function (s) {
                  return baseMean(s, identity);
                }),
                (lodash.meanBy = function (s, x) {
                  return baseMean(s, getIteratee(x, 2));
                }),
                (lodash.min = function (s) {
                  return s && s.length ? baseExtremum(s, identity, baseLt) : ee;
                }),
                (lodash.minBy = function (s, x) {
                  return s && s.length
                    ? baseExtremum(s, getIteratee(x, 2), baseLt)
                    : ee;
                }),
                (lodash.stubArray = stubArray),
                (lodash.stubFalse = stubFalse),
                (lodash.stubObject = function () {
                  return {};
                }),
                (lodash.stubString = function () {
                  return "";
                }),
                (lodash.stubTrue = function () {
                  return !0;
                }),
                (lodash.multiply = nw),
                (lodash.nth = function (s, x) {
                  return s && s.length ? baseNth(s, toInteger(x)) : ee;
                }),
                (lodash.noConflict = function () {
                  return tQ._ === this && (tQ._ = tT), this;
                }),
                (lodash.noop = noop),
                (lodash.now = ib),
                (lodash.pad = function (s, x, W) {
                  s = toString(s);
                  var X = (x = toInteger(x)) ? stringSize(s) : 0;
                  if (!x || X >= x) return s;
                  var ee = (x - X) / 2;
                  return (
                    createPadding(ra(ee), W) + s + createPadding(t7(ee), W)
                  );
                }),
                (lodash.padEnd = function (s, x, W) {
                  s = toString(s);
                  var X = (x = toInteger(x)) ? stringSize(s) : 0;
                  return x && X < x ? s + createPadding(x - X, W) : s;
                }),
                (lodash.padStart = function (s, x, W) {
                  s = toString(s);
                  var X = (x = toInteger(x)) ? stringSize(s) : 0;
                  return x && X < x ? createPadding(x - X, W) + s : s;
                }),
                (lodash.parseInt = function (s, x, W) {
                  return (
                    W || null == x ? (x = 0) : x && (x = +x),
                    rg(toString(s).replace(eQ, ""), x || 0)
                  );
                }),
                (lodash.random = function (s, x, W) {
                  if (
                    (W &&
                      "boolean" != typeof W &&
                      isIterateeCall(s, x, W) &&
                      (x = W = ee),
                    ee === W &&
                      ("boolean" == typeof x
                        ? ((W = x), (x = ee))
                        : "boolean" == typeof s && ((W = s), (s = ee))),
                    ee === s && ee === x
                      ? ((s = 0), (x = 1))
                      : ((s = toFinite(s)),
                        ee === x ? ((x = s), (s = 0)) : (x = toFinite(x))),
                    s > x)
                  ) {
                    var X = s;
                    (s = x), (x = X);
                  }
                  if (W || s % 1 || x % 1) {
                    var et = rm();
                    return rp(
                      s + et * (x - s + tK("1e-" + ((et + "").length - 1))),
                      x
                    );
                  }
                  return baseRandom(s, x);
                }),
                (lodash.reduce = function (s, x, W) {
                  var X = iP(s) ? arrayReduce : baseReduce,
                    ee = arguments.length < 3;
                  return X(s, getIteratee(x, 4), W, ee, rD);
                }),
                (lodash.reduceRight = function (s, x, W) {
                  var X = iP(s) ? arrayReduceRight : baseReduce,
                    ee = arguments.length < 3;
                  return X(s, getIteratee(x, 4), W, ee, rB);
                }),
                (lodash.repeat = function (s, x, W) {
                  return (
                    (x = (W ? isIterateeCall(s, x, W) : ee === x)
                      ? 1
                      : toInteger(x)),
                    baseRepeat(toString(s), x)
                  );
                }),
                (lodash.replace = function () {
                  var s = arguments,
                    x = toString(s[0]);
                  return s.length < 3 ? x : x.replace(s[1], s[2]);
                }),
                (lodash.result = function (s, x, W) {
                  x = castPath(x, s);
                  var X = -1,
                    et = x.length;
                  for (et || ((et = 1), (s = ee)); ++X < et; ) {
                    var er = null == s ? ee : s[toKey(x[X])];
                    ee === er && ((X = et), (er = W)),
                      (s = isFunction(er) ? er.call(s) : er);
                  }
                  return s;
                }),
                (lodash.round = nb),
                (lodash.runInContext = runInContext),
                (lodash.sample = function (s) {
                  return (
                    iP(s)
                      ? arraySample
                      : function (s) {
                          return arraySample(values(s));
                        }
                  )(s);
                }),
                (lodash.size = function (s) {
                  if (null == s) return 0;
                  if (isArrayLike(s))
                    return isString(s) ? stringSize(s) : s.length;
                  var x = rW(s);
                  return x == eg || x == ey ? s.size : baseKeys(s).length;
                }),
                (lodash.snakeCase = i4),
                (lodash.some = function (s, x, W) {
                  var X = iP(s) ? arraySome : baseSome;
                  return (
                    W && isIterateeCall(s, x, W) && (x = ee),
                    X(s, getIteratee(x, 3))
                  );
                }),
                (lodash.sortedIndex = function (s, x) {
                  return baseSortedIndex(s, x);
                }),
                (lodash.sortedIndexBy = function (s, x, W) {
                  return baseSortedIndexBy(s, x, getIteratee(W, 2));
                }),
                (lodash.sortedIndexOf = function (s, x) {
                  var W = null == s ? 0 : s.length;
                  if (W) {
                    var X = baseSortedIndex(s, x);
                    if (X < W && eq(s[X], x)) return X;
                  }
                  return -1;
                }),
                (lodash.sortedLastIndex = function (s, x) {
                  return baseSortedIndex(s, x, !0);
                }),
                (lodash.sortedLastIndexBy = function (s, x, W) {
                  return baseSortedIndexBy(s, x, getIteratee(W, 2), !0);
                }),
                (lodash.sortedLastIndexOf = function (s, x) {
                  if (null == s ? 0 : s.length) {
                    var W = baseSortedIndex(s, x, !0) - 1;
                    if (eq(s[W], x)) return W;
                  }
                  return -1;
                }),
                (lodash.startCase = i8),
                (lodash.startsWith = function (s, x, W) {
                  return (
                    (s = toString(s)),
                    (W = null == W ? 0 : baseClamp(toInteger(W), 0, s.length)),
                    (x = baseToString(x)),
                    s.slice(W, W + x.length) == x
                  );
                }),
                (lodash.subtract = nv),
                (lodash.sum = function (s) {
                  return s && s.length ? baseSum(s, identity) : 0;
                }),
                (lodash.sumBy = function (s, x) {
                  return s && s.length ? baseSum(s, getIteratee(x, 2)) : 0;
                }),
                (lodash.template = function (s, x, W) {
                  var X = lodash.templateSettings;
                  W && isIterateeCall(s, x, W) && (x = ee),
                    (s = toString(s)),
                    (x = iz({}, x, X, customDefaultsAssignIn));
                  var et,
                    er,
                    ei = iz({}, x.imports, X.imports, customDefaultsAssignIn),
                    eo = keys(ei),
                    ea = baseValues(ei, eo),
                    es = 0,
                    el = x.interpolate || ts,
                    ec = "__p += '",
                    eu = tg(
                      (x.escape || ts).source +
                        "|" +
                        el.source +
                        "|" +
                        (el === eV ? e6 : ts).source +
                        "|" +
                        (x.evaluate || ts).source +
                        "|$",
                      "g"
                    ),
                    ed =
                      "//# sourceURL=" +
                      (tx.call(x, "sourceURL")
                        ? (x.sourceURL + "").replace(/\s/g, " ")
                        : "lodash.templateSources[" + ++tH + "]") +
                      "\n";
                  s.replace(eu, function (x, W, X, ee, ei, eo) {
                    return (
                      X || (X = ee),
                      (ec += s.slice(es, eo).replace(tl, escapeStringChar)),
                      W && ((et = !0), (ec += "' +\n__e(" + W + ") +\n'")),
                      ei && ((er = !0), (ec += "';\n" + ei + ";\n__p += '")),
                      X &&
                        (ec +=
                          "' +\n((__t = (" + X + ")) == null ? '' : __t) +\n'"),
                      (es = eo + x.length),
                      x
                    );
                  }),
                    (ec += "';\n");
                  var eh = tx.call(x, "variable") && x.variable;
                  if (eh) {
                    if (e3.test(eh))
                      throw new td(
                        "Invalid `variable` option passed into `_.template`"
                      );
                  } else ec = "with (obj) {\n" + ec + "\n}\n";
                  (ec = (er ? ec.replace(eD, "") : ec)
                    .replace(eB, "$1")
                    .replace(eL, "$1;")),
                    (ec =
                      "function(" +
                      (eh || "obj") +
                      ") {\n" +
                      (eh ? "" : "obj || (obj = {});\n") +
                      "var __t, __p = ''" +
                      (et ? ", __e = _.escape" : "") +
                      (er
                        ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n"
                        : ";\n") +
                      ec +
                      "return __p\n}");
                  var ep = nt(function () {
                    return th(eo, ed + "return " + ec).apply(ee, ea);
                  });
                  if (((ep.source = ec), isError(ep))) throw ep;
                  return ep;
                }),
                (lodash.times = function (s, x) {
                  if ((s = toInteger(s)) < 1 || s > 9007199254740991) return [];
                  var W = 4294967295,
                    X = rp(s, 4294967295);
                  (x = getIteratee(x)), (s -= 4294967295);
                  for (var ee = baseTimes(X, x); ++W < s; ) x(W);
                  return ee;
                }),
                (lodash.toFinite = toFinite),
                (lodash.toInteger = toInteger),
                (lodash.toLength = toLength),
                (lodash.toLower = function (s) {
                  return toString(s).toLowerCase();
                }),
                (lodash.toNumber = toNumber),
                (lodash.toSafeInteger = function (s) {
                  return s
                    ? baseClamp(
                        toInteger(s),
                        -9007199254740991,
                        9007199254740991
                      )
                    : 0 === s
                    ? s
                    : 0;
                }),
                (lodash.toString = toString),
                (lodash.toUpper = function (s) {
                  return toString(s).toUpperCase();
                }),
                (lodash.trim = function (s, x, W) {
                  if ((s = toString(s)) && (W || ee === x)) return baseTrim(s);
                  if (!s || !(x = baseToString(x))) return s;
                  var X = stringToArray(s),
                    et = stringToArray(x),
                    er = charsStartIndex(X, et),
                    ei = charsEndIndex(X, et) + 1;
                  return castSlice(X, er, ei).join("");
                }),
                (lodash.trimEnd = function (s, x, W) {
                  if ((s = toString(s)) && (W || ee === x))
                    return s.slice(0, trimmedEndIndex(s) + 1);
                  if (!s || !(x = baseToString(x))) return s;
                  var X = stringToArray(s),
                    et = charsEndIndex(X, stringToArray(x)) + 1;
                  return castSlice(X, 0, et).join("");
                }),
                (lodash.trimStart = function (s, x, W) {
                  if ((s = toString(s)) && (W || ee === x))
                    return s.replace(eQ, "");
                  if (!s || !(x = baseToString(x))) return s;
                  var X = stringToArray(s),
                    et = charsStartIndex(X, stringToArray(x));
                  return castSlice(X, et).join("");
                }),
                (lodash.truncate = function (s, x) {
                  var W = 30,
                    X = "...";
                  if (isObject(x)) {
                    var et = "separator" in x ? x.separator : et;
                    (W = "length" in x ? toInteger(x.length) : W),
                      (X = "omission" in x ? baseToString(x.omission) : X);
                  }
                  var er = (s = toString(s)).length;
                  if (hasUnicode(s)) {
                    var ei = stringToArray(s);
                    er = ei.length;
                  }
                  if (W >= er) return s;
                  var eo = W - stringSize(X);
                  if (eo < 1) return X;
                  var ea = ei ? castSlice(ei, 0, eo).join("") : s.slice(0, eo);
                  if (ee === et) return ea + X;
                  if ((ei && (eo += ea.length - eo), iD(et))) {
                    if (s.slice(eo).search(et)) {
                      var es,
                        el = ea;
                      for (
                        et.global ||
                          (et = tg(et.source, toString(e4.exec(et)) + "g")),
                          et.lastIndex = 0;
                        (es = et.exec(el));

                      )
                        var ec = es.index;
                      ea = ea.slice(0, ee === ec ? eo : ec);
                    }
                  } else if (s.indexOf(baseToString(et), eo) != eo) {
                    var eu = ea.lastIndexOf(et);
                    eu > -1 && (ea = ea.slice(0, eu));
                  }
                  return ea + X;
                }),
                (lodash.unescape = function (s) {
                  return (s = toString(s)) && e$.test(s)
                    ? s.replace(ej, rn)
                    : s;
                }),
                (lodash.uniqueId = function (s) {
                  var x = ++tE;
                  return toString(s) + x;
                }),
                (lodash.upperCase = i9),
                (lodash.upperFirst = i7),
                (lodash.each = forEach),
                (lodash.eachRight = forEachRight),
                (lodash.first = head),
                mixin(
                  lodash,
                  ((eJ = {}),
                  baseForOwn(lodash, function (s, x) {
                    tx.call(lodash.prototype, x) || (eJ[x] = s);
                  }),
                  eJ),
                  { chain: !1 }
                ),
                (lodash.VERSION = "4.17.21"),
                arrayEach(
                  [
                    "bind",
                    "bindKey",
                    "curry",
                    "curryRight",
                    "partial",
                    "partialRight",
                  ],
                  function (s) {
                    lodash[s].placeholder = lodash;
                  }
                ),
                arrayEach(["drop", "take"], function (s, x) {
                  (LazyWrapper.prototype[s] = function (W) {
                    W = ee === W ? 1 : rh(toInteger(W), 0);
                    var X =
                      this.__filtered__ && !x
                        ? new LazyWrapper(this)
                        : this.clone();
                    return (
                      X.__filtered__
                        ? (X.__takeCount__ = rp(W, X.__takeCount__))
                        : X.__views__.push({
                            size: rp(W, 4294967295),
                            type: s + (X.__dir__ < 0 ? "Right" : ""),
                          }),
                      X
                    );
                  }),
                    (LazyWrapper.prototype[s + "Right"] = function (x) {
                      return this.reverse()[s](x).reverse();
                    });
                }),
                arrayEach(["filter", "map", "takeWhile"], function (s, x) {
                  var W = x + 1,
                    X = 1 == W || 3 == W;
                  LazyWrapper.prototype[s] = function (s) {
                    var x = this.clone();
                    return (
                      x.__iteratees__.push({
                        iteratee: getIteratee(s, 3),
                        type: W,
                      }),
                      (x.__filtered__ = x.__filtered__ || X),
                      x
                    );
                  };
                }),
                arrayEach(["head", "last"], function (s, x) {
                  var W = "take" + (x ? "Right" : "");
                  LazyWrapper.prototype[s] = function () {
                    return this[W](1).value()[0];
                  };
                }),
                arrayEach(["initial", "tail"], function (s, x) {
                  var W = "drop" + (x ? "" : "Right");
                  LazyWrapper.prototype[s] = function () {
                    return this.__filtered__
                      ? new LazyWrapper(this)
                      : this[W](1);
                  };
                }),
                (LazyWrapper.prototype.compact = function () {
                  return this.filter(identity);
                }),
                (LazyWrapper.prototype.find = function (s) {
                  return this.filter(s).head();
                }),
                (LazyWrapper.prototype.findLast = function (s) {
                  return this.reverse().find(s);
                }),
                (LazyWrapper.prototype.invokeMap = baseRest(function (s, x) {
                  return "function" == typeof s
                    ? new LazyWrapper(this)
                    : this.map(function (W) {
                        return baseInvoke(W, s, x);
                      });
                })),
                (LazyWrapper.prototype.reject = function (s) {
                  return this.filter(negate(getIteratee(s)));
                }),
                (LazyWrapper.prototype.slice = function (s, x) {
                  s = toInteger(s);
                  var W = this;
                  return W.__filtered__ && (s > 0 || x < 0)
                    ? new LazyWrapper(W)
                    : (s < 0 ? (W = W.takeRight(-s)) : s && (W = W.drop(s)),
                      ee !== x &&
                        (W =
                          (x = toInteger(x)) < 0
                            ? W.dropRight(-x)
                            : W.take(x - s)),
                      W);
                }),
                (LazyWrapper.prototype.takeRightWhile = function (s) {
                  return this.reverse().takeWhile(s).reverse();
                }),
                (LazyWrapper.prototype.toArray = function () {
                  return this.take(4294967295);
                }),
                baseForOwn(LazyWrapper.prototype, function (s, x) {
                  var W = /^(?:filter|find|map|reject)|While$/.test(x),
                    X = /^(?:head|last)$/.test(x),
                    et = lodash[X ? "take" + ("last" == x ? "Right" : "") : x],
                    er = X || /^find/.test(x);
                  et &&
                    (lodash.prototype[x] = function () {
                      var x = this.__wrapped__,
                        ei = X ? [1] : arguments,
                        eo = x instanceof LazyWrapper,
                        ea = ei[0],
                        es = eo || iP(x),
                        interceptor = function (s) {
                          var x = et.apply(lodash, arrayPush([s], ei));
                          return X && el ? x[0] : x;
                        };
                      es &&
                        W &&
                        "function" == typeof ea &&
                        1 != ea.length &&
                        (eo = es = !1);
                      var el = this.__chain__,
                        ec = !!this.__actions__.length,
                        eu = er && !el,
                        ed = eo && !ec;
                      if (!er && es) {
                        x = ed ? x : new LazyWrapper(this);
                        var eh = s.apply(x, ei);
                        return (
                          eh.__actions__.push({
                            func: thru,
                            args: [interceptor],
                            thisArg: ee,
                          }),
                          new LodashWrapper(eh, el)
                        );
                      }
                      return eu && ed
                        ? s.apply(this, ei)
                        : ((eh = this.thru(interceptor)),
                          eu ? (X ? eh.value()[0] : eh.value()) : eh);
                    });
                }),
                arrayEach(
                  ["pop", "push", "shift", "sort", "splice", "unshift"],
                  function (s) {
                    var x = tb[s],
                      W = /^(?:push|sort|unshift)$/.test(s) ? "tap" : "thru",
                      X = /^(?:pop|shift)$/.test(s);
                    lodash.prototype[s] = function () {
                      var s = arguments;
                      if (X && !this.__chain__) {
                        var ee = this.value();
                        return x.apply(iP(ee) ? ee : [], s);
                      }
                      return this[W](function (W) {
                        return x.apply(iP(W) ? W : [], s);
                      });
                    };
                  }
                ),
                baseForOwn(LazyWrapper.prototype, function (s, x) {
                  var W = lodash[x];
                  if (W) {
                    var X = W.name + "";
                    tx.call(rA, X) || (rA[X] = []),
                      rA[X].push({ name: x, func: W });
                  }
                }),
                (rA[createHybrid(ee, 2).name] = [
                  { name: "wrapper", func: ee },
                ]),
                (LazyWrapper.prototype.clone = function () {
                  var s = new LazyWrapper(this.__wrapped__);
                  return (
                    (s.__actions__ = copyArray(this.__actions__)),
                    (s.__dir__ = this.__dir__),
                    (s.__filtered__ = this.__filtered__),
                    (s.__iteratees__ = copyArray(this.__iteratees__)),
                    (s.__takeCount__ = this.__takeCount__),
                    (s.__views__ = copyArray(this.__views__)),
                    s
                  );
                }),
                (LazyWrapper.prototype.reverse = function () {
                  if (this.__filtered__) {
                    var s = new LazyWrapper(this);
                    (s.__dir__ = -1), (s.__filtered__ = !0);
                  } else (s = this.clone()), (s.__dir__ *= -1);
                  return s;
                }),
                (LazyWrapper.prototype.value = function () {
                  var s = this.__wrapped__.value(),
                    x = this.__dir__,
                    W = iP(s),
                    X = x < 0,
                    ee = W ? s.length : 0,
                    et = (function (s, x, W) {
                      for (var X = -1, ee = W.length; ++X < ee; ) {
                        var et = W[X],
                          er = et.size;
                        switch (et.type) {
                          case "drop":
                            s += er;
                            break;
                          case "dropRight":
                            x -= er;
                            break;
                          case "take":
                            x = rp(x, s + er);
                            break;
                          case "takeRight":
                            s = rh(s, x - er);
                        }
                      }
                      return { start: s, end: x };
                    })(0, ee, this.__views__),
                    er = et.start,
                    ei = et.end,
                    eo = ei - er,
                    ea = X ? ei : er - 1,
                    es = this.__iteratees__,
                    el = es.length,
                    ec = 0,
                    eu = rp(eo, this.__takeCount__);
                  if (!W || (!X && ee == eo && eu == eo))
                    return baseWrapperValue(s, this.__actions__);
                  var ed = [];
                  e: for (; eo-- && ec < eu; ) {
                    for (var eh = -1, ep = s[(ea += x)]; ++eh < el; ) {
                      var ef = es[eh],
                        eg = ef.iteratee,
                        em = ef.type,
                        ew = eg(ep);
                      if (2 == em) ep = ew;
                      else if (!ew) {
                        if (1 == em) continue e;
                        break e;
                      }
                    }
                    ed[ec++] = ep;
                  }
                  return ed;
                }),
                (lodash.prototype.at = il),
                (lodash.prototype.chain = function () {
                  return chain(this);
                }),
                (lodash.prototype.commit = function () {
                  return new LodashWrapper(this.value(), this.__chain__);
                }),
                (lodash.prototype.next = function () {
                  ee === this.__values__ &&
                    (this.__values__ = toArray(this.value()));
                  var s = this.__index__ >= this.__values__.length,
                    x = s ? ee : this.__values__[this.__index__++];
                  return { done: s, value: x };
                }),
                (lodash.prototype.plant = function (s) {
                  for (var x, W = this; W instanceof baseLodash; ) {
                    var X = wrapperClone(W);
                    (X.__index__ = 0),
                      (X.__values__ = ee),
                      x ? (et.__wrapped__ = X) : (x = X);
                    var et = X;
                    W = W.__wrapped__;
                  }
                  return (et.__wrapped__ = s), x;
                }),
                (lodash.prototype.reverse = function () {
                  var s = this.__wrapped__;
                  if (s instanceof LazyWrapper) {
                    var x = s;
                    return (
                      this.__actions__.length && (x = new LazyWrapper(this)),
                      (x = x.reverse()).__actions__.push({
                        func: thru,
                        args: [reverse],
                        thisArg: ee,
                      }),
                      new LodashWrapper(x, this.__chain__)
                    );
                  }
                  return this.thru(reverse);
                }),
                (lodash.prototype.toJSON =
                  lodash.prototype.valueOf =
                  lodash.prototype.value =
                    function () {
                      return baseWrapperValue(
                        this.__wrapped__,
                        this.__actions__
                      );
                    }),
                (lodash.prototype.first = lodash.prototype.head),
                tG &&
                  (lodash.prototype[tG] = function () {
                    return this;
                  }),
                lodash
              );
            })();
          (tQ._ = ro),
            ee !==
              (X = function () {
                return ro;
              }.call(x, W, x, s)) && (s.exports = X);
        }.call(this);
    },
    79746: function (s) {
      function assert(s, x) {
        if (!s) throw Error(x || "Assertion failed");
      }
      (s.exports = assert),
        (assert.equal = function (s, x, W) {
          if (s != x) throw Error(W || "Assertion failed: " + s + " != " + x);
        });
    },
    34504: function (s, x) {
      "use strict";
      function zero2(s) {
        return 1 === s.length ? "0" + s : s;
      }
      function toHex(s) {
        for (var x = "", W = 0; W < s.length; W++)
          x += zero2(s[W].toString(16));
        return x;
      }
      (x.toArray = function (s, x) {
        if (Array.isArray(s)) return s.slice();
        if (!s) return [];
        var W = [];
        if ("string" != typeof s) {
          for (var X = 0; X < s.length; X++) W[X] = 0 | s[X];
          return W;
        }
        if ("hex" === x) {
          (s = s.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (s = "0" + s);
          for (var X = 0; X < s.length; X += 2)
            W.push(parseInt(s[X] + s[X + 1], 16));
        } else
          for (var X = 0; X < s.length; X++) {
            var ee = s.charCodeAt(X),
              et = ee >> 8,
              er = 255 & ee;
            et ? W.push(et, er) : W.push(er);
          }
        return W;
      }),
        (x.zero2 = zero2),
        (x.toHex = toHex),
        (x.encode = function (s, x) {
          return "hex" === x ? toHex(s) : s;
        });
    },
    83454: function (s, x, W) {
      "use strict";
      var X, ee;
      s.exports =
        (null == (X = W.g.process) ? void 0 : X.env) &&
        "object" == typeof (null == (ee = W.g.process) ? void 0 : ee.env)
          ? W.g.process
          : W(77663);
    },
    6840: function (s, x, W) {
      (window.__NEXT_P = window.__NEXT_P || []).push([
        "/_app",
        function () {
          return W(26623);
        },
      ]);
    },
    93677: function (s, x, W) {
      "use strict";
      W.d(x, {
        e: function () {
          return X;
        },
      });
      let X = {
        treasuryAddress: "0x4c4052007CCEA0E62B8FaA818019F817296F5354",
        presaleAddress: "0x958713B08536Ba87165002b167e3911787f083Be",
        usdtAddress: "0xdAC17F958D2ee523a2206206994597C13D831ec7",
        tokenAddress: "0x Comming Soon!",
        usdtDecimal: 6,
        tokenDecimal: 18,
        minTokenToBuy: 1e4,
        minEthAmount: 0.006,
        minUsdtAmount: 20,
        presaleEnd: "2025-03-25T03:00:00Z",
      };
    },
    97498: function (s, x) {
      "use strict";
      var W, X;
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (function (s, x) {
          for (var W in x)
            Object.defineProperty(s, W, { enumerable: !0, get: x[W] });
        })(x, {
          PrefetchKind: function () {
            return W;
          },
          ACTION_REFRESH: function () {
            return ee;
          },
          ACTION_NAVIGATE: function () {
            return et;
          },
          ACTION_RESTORE: function () {
            return er;
          },
          ACTION_SERVER_PATCH: function () {
            return ei;
          },
          ACTION_PREFETCH: function () {
            return eo;
          },
          ACTION_FAST_REFRESH: function () {
            return ea;
          },
          ACTION_SERVER_ACTION: function () {
            return es;
          },
        });
      let ee = "refresh",
        et = "navigate",
        er = "restore",
        ei = "server-patch",
        eo = "prefetch",
        ea = "fast-refresh",
        es = "server-action";
      ((X = W || (W = {})).AUTO = "auto"),
        (X.FULL = "full"),
        (X.TEMPORARY = "temporary"),
        ("function" == typeof x.default ||
          ("object" == typeof x.default && null !== x.default)) &&
          void 0 === x.default.__esModule &&
          (Object.defineProperty(x.default, "__esModule", { value: !0 }),
          Object.assign(x.default, x),
          (s.exports = x.default));
    },
    10030: function (s, x, W) {
      "use strict";
      function getDomainLocale(s, x, W, X) {
        return !1;
      }
      Object.defineProperty(x, "__esModule", { value: !0 }),
        Object.defineProperty(x, "getDomainLocale", {
          enumerable: !0,
          get: function () {
            return getDomainLocale;
          },
        }),
        W(22866),
        ("function" == typeof x.default ||
          ("object" == typeof x.default && null !== x.default)) &&
          void 0 === x.default.__esModule &&
          (Object.defineProperty(x.default, "__esModule", { value: !0 }),
          Object.assign(x.default, x),
          (s.exports = x.default));
    },
    65170: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        Object.defineProperty(x, "default", {
          enumerable: !0,
          get: function () {
            return eg;
          },
        });
      let X = W(38754),
        ee = X._(W(67294)),
        et = W(74450),
        er = W(92227),
        ei = W(64364),
        eo = W(10109),
        ea = W(73607),
        es = W(11823),
        el = W(89031),
        ec = W(40920),
        eu = W(10030),
        ed = W(77192),
        eh = W(97498),
        ep = new Set();
      function prefetch(s, x, W, X, ee, et) {
        if (!et && !(0, er.isLocalURL)(x)) return;
        if (!X.bypassPrefetchedCheck) {
          let ee =
              void 0 !== X.locale
                ? X.locale
                : "locale" in s
                ? s.locale
                : void 0,
            et = x + "%" + W + "%" + ee;
          if (ep.has(et)) return;
          ep.add(et);
        }
        let ei = et ? s.prefetch(x, ee) : s.prefetch(x, W, X);
        Promise.resolve(ei).catch((s) => {});
      }
      function formatStringOrUrl(s) {
        return "string" == typeof s ? s : (0, ei.formatUrl)(s);
      }
      let ef = ee.default.forwardRef(function (s, x) {
          let W, X;
          let {
            href: ei,
            as: ep,
            children: ef,
            prefetch: eg = null,
            passHref: em,
            replace: ew,
            shallow: eb,
            scroll: ev,
            locale: ey,
            onClick: e_,
            onMouseEnter: eC,
            onTouchStart: ex,
            legacyBehavior: eE = !1,
            ...eA
          } = s;
          (W = ef),
            eE &&
              ("string" == typeof W || "number" == typeof W) &&
              (W = ee.default.createElement("a", null, W));
          let eS = ee.default.useContext(es.RouterContext),
            ek = ee.default.useContext(el.AppRouterContext),
            eT = null != eS ? eS : ek,
            eI = !eS,
            eP = !1 !== eg,
            eR = null === eg ? eh.PrefetchKind.AUTO : eh.PrefetchKind.FULL,
            { href: eN, as: eO } = ee.default.useMemo(() => {
              if (!eS) {
                let s = formatStringOrUrl(ei);
                return { href: s, as: ep ? formatStringOrUrl(ep) : s };
              }
              let [s, x] = (0, et.resolveHref)(eS, ei, !0);
              return { href: s, as: ep ? (0, et.resolveHref)(eS, ep) : x || s };
            }, [eS, ei, ep]),
            eM = ee.default.useRef(eN),
            eD = ee.default.useRef(eO);
          eE && (X = ee.default.Children.only(W));
          let eB = eE ? X && "object" == typeof X && X.ref : x,
            [eL, ej, eU] = (0, ec.useIntersection)({ rootMargin: "200px" }),
            e$ = ee.default.useCallback(
              (s) => {
                (eD.current !== eO || eM.current !== eN) &&
                  (eU(), (eD.current = eO), (eM.current = eN)),
                  eL(s),
                  eB &&
                    ("function" == typeof eB
                      ? eB(s)
                      : "object" == typeof eB && (eB.current = s));
              },
              [eO, eB, eN, eU, eL]
            );
          ee.default.useEffect(() => {
            eT &&
              ej &&
              eP &&
              prefetch(eT, eN, eO, { locale: ey }, { kind: eR }, eI);
          }, [eO, eN, ej, ey, eP, null == eS ? void 0 : eS.locale, eT, eI, eR]);
          let eF = {
            ref: e$,
            onClick(s) {
              eE || "function" != typeof e_ || e_(s),
                eE &&
                  X.props &&
                  "function" == typeof X.props.onClick &&
                  X.props.onClick(s),
                eT &&
                  !s.defaultPrevented &&
                  (function (s, x, W, X, et, ei, eo, ea, es, el) {
                    let { nodeName: ec } = s.currentTarget,
                      eu = "A" === ec.toUpperCase();
                    if (
                      eu &&
                      ((function (s) {
                        let x = s.currentTarget,
                          W = x.getAttribute("target");
                        return (
                          (W && "_self" !== W) ||
                          s.metaKey ||
                          s.ctrlKey ||
                          s.shiftKey ||
                          s.altKey ||
                          (s.nativeEvent && 2 === s.nativeEvent.which)
                        );
                      })(s) ||
                        (!es && !(0, er.isLocalURL)(W)))
                    )
                      return;
                    s.preventDefault();
                    let navigate = () => {
                      let s = null == eo || eo;
                      "beforePopState" in x
                        ? x[et ? "replace" : "push"](W, X, {
                            shallow: ei,
                            locale: ea,
                            scroll: s,
                          })
                        : x[et ? "replace" : "push"](X || W, {
                            forceOptimisticNavigation: !el,
                            scroll: s,
                          });
                    };
                    es ? ee.default.startTransition(navigate) : navigate();
                  })(s, eT, eN, eO, ew, eb, ev, ey, eI, eP);
            },
            onMouseEnter(s) {
              eE || "function" != typeof eC || eC(s),
                eE &&
                  X.props &&
                  "function" == typeof X.props.onMouseEnter &&
                  X.props.onMouseEnter(s),
                eT &&
                  (eP || !eI) &&
                  prefetch(
                    eT,
                    eN,
                    eO,
                    { locale: ey, priority: !0, bypassPrefetchedCheck: !0 },
                    { kind: eR },
                    eI
                  );
            },
            onTouchStart(s) {
              eE || "function" != typeof ex || ex(s),
                eE &&
                  X.props &&
                  "function" == typeof X.props.onTouchStart &&
                  X.props.onTouchStart(s),
                eT &&
                  (eP || !eI) &&
                  prefetch(
                    eT,
                    eN,
                    eO,
                    { locale: ey, priority: !0, bypassPrefetchedCheck: !0 },
                    { kind: eR },
                    eI
                  );
            },
          };
          if ((0, eo.isAbsoluteUrl)(eO)) eF.href = eO;
          else if (!eE || em || ("a" === X.type && !("href" in X.props))) {
            let s = void 0 !== ey ? ey : null == eS ? void 0 : eS.locale,
              x =
                (null == eS ? void 0 : eS.isLocaleDomain) &&
                (0, eu.getDomainLocale)(
                  eO,
                  s,
                  null == eS ? void 0 : eS.locales,
                  null == eS ? void 0 : eS.domainLocales
                );
            eF.href =
              x ||
              (0, ed.addBasePath)(
                (0, ea.addLocale)(eO, s, null == eS ? void 0 : eS.defaultLocale)
              );
          }
          return eE
            ? ee.default.cloneElement(X, eF)
            : ee.default.createElement("a", { ...eA, ...eF }, W);
        }),
        eg = ef;
      ("function" == typeof x.default ||
        ("object" == typeof x.default && null !== x.default)) &&
        void 0 === x.default.__esModule &&
        (Object.defineProperty(x.default, "__esModule", { value: !0 }),
        Object.assign(x.default, x),
        (s.exports = x.default));
    },
    40920: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        Object.defineProperty(x, "useIntersection", {
          enumerable: !0,
          get: function () {
            return useIntersection;
          },
        });
      let X = W(67294),
        ee = W(63436),
        et = "function" == typeof IntersectionObserver,
        er = new Map(),
        ei = [];
      function useIntersection(s) {
        let { rootRef: x, rootMargin: W, disabled: eo } = s,
          ea = eo || !et,
          [es, el] = (0, X.useState)(!1),
          ec = (0, X.useRef)(null),
          eu = (0, X.useCallback)((s) => {
            ec.current = s;
          }, []);
        (0, X.useEffect)(() => {
          if (et) {
            if (ea || es) return;
            let s = ec.current;
            if (s && s.tagName) {
              let X = (function (s, x, W) {
                let {
                  id: X,
                  observer: ee,
                  elements: et,
                } = (function (s) {
                  let x;
                  let W = { root: s.root || null, margin: s.rootMargin || "" },
                    X = ei.find(
                      (s) => s.root === W.root && s.margin === W.margin
                    );
                  if (X && (x = er.get(X))) return x;
                  let ee = new Map(),
                    et = new IntersectionObserver((s) => {
                      s.forEach((s) => {
                        let x = ee.get(s.target),
                          W = s.isIntersecting || s.intersectionRatio > 0;
                        x && W && x(W);
                      });
                    }, s);
                  return (
                    (x = { id: W, observer: et, elements: ee }),
                    ei.push(W),
                    er.set(W, x),
                    x
                  );
                })(W);
                return (
                  et.set(s, x),
                  ee.observe(s),
                  function () {
                    if ((et.delete(s), ee.unobserve(s), 0 === et.size)) {
                      ee.disconnect(), er.delete(X);
                      let s = ei.findIndex(
                        (s) => s.root === X.root && s.margin === X.margin
                      );
                      s > -1 && ei.splice(s, 1);
                    }
                  }
                );
              })(s, (s) => s && el(s), {
                root: null == x ? void 0 : x.current,
                rootMargin: W,
              });
              return X;
            }
          } else if (!es) {
            let s = (0, ee.requestIdleCallback)(() => el(!0));
            return () => (0, ee.cancelIdleCallback)(s);
          }
        }, [ea, W, x, es, ec.current]);
        let ed = (0, X.useCallback)(() => {
          el(!1);
        }, []);
        return [eu, es, ed];
      }
      ("function" == typeof x.default ||
        ("object" == typeof x.default && null !== x.default)) &&
        void 0 === x.default.__esModule &&
        (Object.defineProperty(x.default, "__esModule", { value: !0 }),
        Object.assign(x.default, x),
        (s.exports = x.default));
    },
    26623: function (s, x, W) {
      "use strict";
      let X, ee, et, er, ei, eo, ea, es, el, ec, eu, ed, eh, ep, ef, eg, em;
      W.r(x),
        W.d(x, {
          default: function () {
            return _app;
          },
          networks: function () {
            return oM;
          },
          wagmiAdapter: function () {
            return oD;
          },
          wagmiConfig: function () {
            return oB;
          },
          web3Modal: function () {
            return oL;
          },
        });
      var ew,
        eb,
        ev,
        ey,
        e_,
        eC,
        ex,
        eE,
        eA,
        eS = W(85893);
      W(76944), W(27967);
      var ek = W(15805),
        eT = W(55678),
        eI = W(67294),
        eP = W(64892),
        eR = W(49739),
        eN = W(24139),
        eO = W(56888),
        eM = W(27037),
        eD = W(7506),
        eB = class extends eD.l {
          constructor(s = {}) {
            super(), (this.config = s), (this.#e = new Map());
          }
          #e;
          build(s, x, W) {
            let X = x.queryKey,
              ee = x.queryHash ?? (0, eN.Rm)(X, x),
              et = this.get(ee);
            return (
              et ||
                ((et = new eO.A({
                  cache: this,
                  queryKey: X,
                  queryHash: ee,
                  options: s.defaultQueryOptions(x),
                  state: W,
                  defaultOptions: s.getQueryDefaults(X),
                })),
                this.add(et)),
              et
            );
          }
          add(s) {
            this.#e.has(s.queryHash) ||
              (this.#e.set(s.queryHash, s),
              this.notify({ type: "added", query: s }));
          }
          remove(s) {
            let x = this.#e.get(s.queryHash);
            x &&
              (s.destroy(),
              x === s && this.#e.delete(s.queryHash),
              this.notify({ type: "removed", query: s }));
          }
          clear() {
            eM.V.batch(() => {
              this.getAll().forEach((s) => {
                this.remove(s);
              });
            });
          }
          get(s) {
            return this.#e.get(s);
          }
          getAll() {
            return [...this.#e.values()];
          }
          find(s) {
            let x = { exact: !0, ...s };
            return this.getAll().find((s) => (0, eN._x)(x, s));
          }
          findAll(s = {}) {
            let x = this.getAll();
            return Object.keys(s).length > 0
              ? x.filter((x) => (0, eN._x)(s, x))
              : x;
          }
          notify(s) {
            eM.V.batch(() => {
              this.listeners.forEach((x) => {
                x(s);
              });
            });
          }
          onFocus() {
            eM.V.batch(() => {
              this.getAll().forEach((s) => {
                s.onFocus();
              });
            });
          }
          onOnline() {
            eM.V.batch(() => {
              this.getAll().forEach((s) => {
                s.onOnline();
              });
            });
          }
        },
        eL = W(48907),
        ej = W(72008),
        eU = class extends eL.F {
          #t;
          #r;
          #i;
          constructor(s) {
            super(),
              (this.mutationId = s.mutationId),
              (this.#r = s.mutationCache),
              (this.#t = []),
              (this.state = s.state || {
                context: void 0,
                data: void 0,
                error: null,
                failureCount: 0,
                failureReason: null,
                isPaused: !1,
                status: "idle",
                variables: void 0,
                submittedAt: 0,
              }),
              this.setOptions(s.options),
              this.scheduleGc();
          }
          setOptions(s) {
            (this.options = s), this.updateGcTime(this.options.gcTime);
          }
          get meta() {
            return this.options.meta;
          }
          addObserver(s) {
            this.#t.includes(s) ||
              (this.#t.push(s),
              this.clearGcTimeout(),
              this.#r.notify({
                type: "observerAdded",
                mutation: this,
                observer: s,
              }));
          }
          removeObserver(s) {
            (this.#t = this.#t.filter((x) => x !== s)),
              this.scheduleGc(),
              this.#r.notify({
                type: "observerRemoved",
                mutation: this,
                observer: s,
              });
          }
          optionalRemove() {
            this.#t.length ||
              ("pending" === this.state.status
                ? this.scheduleGc()
                : this.#r.remove(this));
          }
          continue() {
            return this.#i?.continue() ?? this.execute(this.state.variables);
          }
          async execute(s) {
            this.#i = (0, ej.Mz)({
              fn: () =>
                this.options.mutationFn
                  ? this.options.mutationFn(s)
                  : Promise.reject(Error("No mutationFn found")),
              onFail: (s, x) => {
                this.#n({ type: "failed", failureCount: s, error: x });
              },
              onPause: () => {
                this.#n({ type: "pause" });
              },
              onContinue: () => {
                this.#n({ type: "continue" });
              },
              retry: this.options.retry ?? 0,
              retryDelay: this.options.retryDelay,
              networkMode: this.options.networkMode,
              canRun: () => this.#r.canRun(this),
            });
            let x = "pending" === this.state.status,
              W = !this.#i.canStart();
            try {
              if (!x) {
                this.#n({ type: "pending", variables: s, isPaused: W }),
                  await this.#r.config.onMutate?.(s, this);
                let x = await this.options.onMutate?.(s);
                x !== this.state.context &&
                  this.#n({
                    type: "pending",
                    context: x,
                    variables: s,
                    isPaused: W,
                  });
              }
              let X = await this.#i.start();
              return (
                await this.#r.config.onSuccess?.(
                  X,
                  s,
                  this.state.context,
                  this
                ),
                await this.options.onSuccess?.(X, s, this.state.context),
                await this.#r.config.onSettled?.(
                  X,
                  null,
                  this.state.variables,
                  this.state.context,
                  this
                ),
                await this.options.onSettled?.(X, null, s, this.state.context),
                this.#n({ type: "success", data: X }),
                X
              );
            } catch (x) {
              try {
                throw (
                  (await this.#r.config.onError?.(
                    x,
                    s,
                    this.state.context,
                    this
                  ),
                  await this.options.onError?.(x, s, this.state.context),
                  await this.#r.config.onSettled?.(
                    void 0,
                    x,
                    this.state.variables,
                    this.state.context,
                    this
                  ),
                  await this.options.onSettled?.(
                    void 0,
                    x,
                    s,
                    this.state.context
                  ),
                  x)
                );
              } finally {
                this.#n({ type: "error", error: x });
              }
            } finally {
              this.#r.runNext(this);
            }
          }
          #n(s) {
            (this.state = ((x) => {
              switch (s.type) {
                case "failed":
                  return {
                    ...x,
                    failureCount: s.failureCount,
                    failureReason: s.error,
                  };
                case "pause":
                  return { ...x, isPaused: !0 };
                case "continue":
                  return { ...x, isPaused: !1 };
                case "pending":
                  return {
                    ...x,
                    context: s.context,
                    data: void 0,
                    failureCount: 0,
                    failureReason: null,
                    error: null,
                    isPaused: s.isPaused,
                    status: "pending",
                    variables: s.variables,
                    submittedAt: Date.now(),
                  };
                case "success":
                  return {
                    ...x,
                    data: s.data,
                    failureCount: 0,
                    failureReason: null,
                    error: null,
                    status: "success",
                    isPaused: !1,
                  };
                case "error":
                  return {
                    ...x,
                    data: void 0,
                    error: s.error,
                    failureCount: x.failureCount + 1,
                    failureReason: s.error,
                    isPaused: !1,
                    status: "error",
                  };
              }
            })(this.state)),
              eM.V.batch(() => {
                this.#t.forEach((x) => {
                  x.onMutationUpdate(s);
                }),
                  this.#r.notify({
                    mutation: this,
                    type: "updated",
                    action: s,
                  });
              });
          }
        },
        e$ = class extends eD.l {
          constructor(s = {}) {
            super(),
              (this.config = s),
              (this.#o = new Map()),
              (this.#a = Date.now());
          }
          #o;
          #a;
          build(s, x, W) {
            let X = new eU({
              mutationCache: this,
              mutationId: ++this.#a,
              options: s.defaultMutationOptions(x),
              state: W,
            });
            return this.add(X), X;
          }
          add(s) {
            let x = scopeFor(s),
              W = this.#o.get(x) ?? [];
            W.push(s),
              this.#o.set(x, W),
              this.notify({ type: "added", mutation: s });
          }
          remove(s) {
            let x = scopeFor(s);
            if (this.#o.has(x)) {
              let W = this.#o.get(x)?.filter((x) => x !== s);
              W && (0 === W.length ? this.#o.delete(x) : this.#o.set(x, W));
            }
            this.notify({ type: "removed", mutation: s });
          }
          canRun(s) {
            let x = this.#o
              .get(scopeFor(s))
              ?.find((s) => "pending" === s.state.status);
            return !x || x === s;
          }
          runNext(s) {
            let x = this.#o
              .get(scopeFor(s))
              ?.find((x) => x !== s && x.state.isPaused);
            return x?.continue() ?? Promise.resolve();
          }
          clear() {
            eM.V.batch(() => {
              this.getAll().forEach((s) => {
                this.remove(s);
              });
            });
          }
          getAll() {
            return [...this.#o.values()].flat();
          }
          find(s) {
            let x = { exact: !0, ...s };
            return this.getAll().find((s) => (0, eN.X7)(x, s));
          }
          findAll(s = {}) {
            return this.getAll().filter((x) => (0, eN.X7)(s, x));
          }
          notify(s) {
            eM.V.batch(() => {
              this.listeners.forEach((x) => {
                x(s);
              });
            });
          }
          resumePausedMutations() {
            let s = this.getAll().filter((s) => s.state.isPaused);
            return eM.V.batch(() =>
              Promise.all(s.map((s) => s.continue().catch(eN.ZT)))
            );
          }
        };
      function scopeFor(s) {
        return s.options.scope?.id ?? String(s.mutationId);
      }
      var eF = W(66474),
        ez = W(14304);
      function infiniteQueryBehavior(s) {
        return {
          onFetch: (x, W) => {
            let X = x.options,
              ee = x.fetchOptions?.meta?.fetchMore?.direction,
              et = x.state.data?.pages || [],
              er = x.state.data?.pageParams || [],
              ei = { pages: [], pageParams: [] },
              eo = 0,
              fetchFn = async () => {
                let W = !1,
                  addSignalProperty = (s) => {
                    Object.defineProperty(s, "signal", {
                      enumerable: !0,
                      get: () => (
                        x.signal.aborted
                          ? (W = !0)
                          : x.signal.addEventListener("abort", () => {
                              W = !0;
                            }),
                        x.signal
                      ),
                    });
                  },
                  ea = (0, eN.cG)(x.options, x.fetchOptions),
                  fetchPage = async (s, X, ee) => {
                    if (W) return Promise.reject();
                    if (null == X && s.pages.length) return Promise.resolve(s);
                    let et = {
                      queryKey: x.queryKey,
                      pageParam: X,
                      direction: ee ? "backward" : "forward",
                      meta: x.options.meta,
                    };
                    addSignalProperty(et);
                    let er = await ea(et),
                      { maxPages: ei } = x.options,
                      eo = ee ? eN.Ht : eN.VX;
                    return {
                      pages: eo(s.pages, er, ei),
                      pageParams: eo(s.pageParams, X, ei),
                    };
                  };
                if (ee && et.length) {
                  let s = "backward" === ee,
                    x = s ? getPreviousPageParam : getNextPageParam,
                    W = { pages: et, pageParams: er },
                    eo = x(X, W);
                  ei = await fetchPage(W, eo, s);
                } else {
                  let x = s ?? et.length;
                  do {
                    let s =
                      0 === eo
                        ? er[0] ?? X.initialPageParam
                        : getNextPageParam(X, ei);
                    if (eo > 0 && null == s) break;
                    (ei = await fetchPage(ei, s)), eo++;
                  } while (eo < x);
                }
                return ei;
              };
            x.options.persister
              ? (x.fetchFn = () =>
                  x.options.persister?.(
                    fetchFn,
                    {
                      queryKey: x.queryKey,
                      meta: x.options.meta,
                      signal: x.signal,
                    },
                    W
                  ))
              : (x.fetchFn = fetchFn);
          },
        };
      }
      function getNextPageParam(s, { pages: x, pageParams: W }) {
        let X = x.length - 1;
        return x.length > 0 ? s.getNextPageParam(x[X], x, W[X], W) : void 0;
      }
      function getPreviousPageParam(s, { pages: x, pageParams: W }) {
        return x.length > 0
          ? s.getPreviousPageParam?.(x[0], x, W[0], W)
          : void 0;
      }
      var eH = class {
          #s;
          #r;
          #l;
          #c;
          #u;
          #d;
          #h;
          #p;
          constructor(s = {}) {
            (this.#s = s.queryCache || new eB()),
              (this.#r = s.mutationCache || new e$()),
              (this.#l = s.defaultOptions || {}),
              (this.#c = new Map()),
              (this.#u = new Map()),
              (this.#d = 0);
          }
          mount() {
            this.#d++,
              1 === this.#d &&
                ((this.#h = eF.j.subscribe(async (s) => {
                  s && (await this.resumePausedMutations(), this.#s.onFocus());
                })),
                (this.#p = ez.N.subscribe(async (s) => {
                  s && (await this.resumePausedMutations(), this.#s.onOnline());
                })));
          }
          unmount() {
            this.#d--,
              0 === this.#d &&
                (this.#h?.(),
                (this.#h = void 0),
                this.#p?.(),
                (this.#p = void 0));
          }
          isFetching(s) {
            return this.#s.findAll({ ...s, fetchStatus: "fetching" }).length;
          }
          isMutating(s) {
            return this.#r.findAll({ ...s, status: "pending" }).length;
          }
          getQueryData(s) {
            let x = this.defaultQueryOptions({ queryKey: s });
            return this.#s.get(x.queryHash)?.state.data;
          }
          ensureQueryData(s) {
            let x = this.getQueryData(s.queryKey);
            if (void 0 === x) return this.fetchQuery(s);
            {
              let W = this.defaultQueryOptions(s),
                X = this.#s.build(this, W);
              return (
                s.revalidateIfStale &&
                  X.isStaleByTime((0, eN.KC)(W.staleTime, X)) &&
                  this.prefetchQuery(W),
                Promise.resolve(x)
              );
            }
          }
          getQueriesData(s) {
            return this.#s.findAll(s).map(({ queryKey: s, state: x }) => {
              let W = x.data;
              return [s, W];
            });
          }
          setQueryData(s, x, W) {
            let X = this.defaultQueryOptions({ queryKey: s }),
              ee = this.#s.get(X.queryHash),
              et = ee?.state.data,
              er = (0, eN.SE)(x, et);
            if (void 0 !== er)
              return this.#s.build(this, X).setData(er, { ...W, manual: !0 });
          }
          setQueriesData(s, x, W) {
            return eM.V.batch(() =>
              this.#s
                .findAll(s)
                .map(({ queryKey: s }) => [s, this.setQueryData(s, x, W)])
            );
          }
          getQueryState(s) {
            let x = this.defaultQueryOptions({ queryKey: s });
            return this.#s.get(x.queryHash)?.state;
          }
          removeQueries(s) {
            let x = this.#s;
            eM.V.batch(() => {
              x.findAll(s).forEach((s) => {
                x.remove(s);
              });
            });
          }
          resetQueries(s, x) {
            let W = this.#s,
              X = { type: "active", ...s };
            return eM.V.batch(
              () => (
                W.findAll(s).forEach((s) => {
                  s.reset();
                }),
                this.refetchQueries(X, x)
              )
            );
          }
          cancelQueries(s = {}, x = {}) {
            let W = { revert: !0, ...x },
              X = eM.V.batch(() => this.#s.findAll(s).map((s) => s.cancel(W)));
            return Promise.all(X).then(eN.ZT).catch(eN.ZT);
          }
          invalidateQueries(s = {}, x = {}) {
            return eM.V.batch(() => {
              if (
                (this.#s.findAll(s).forEach((s) => {
                  s.invalidate();
                }),
                "none" === s.refetchType)
              )
                return Promise.resolve();
              let W = { ...s, type: s.refetchType ?? s.type ?? "active" };
              return this.refetchQueries(W, x);
            });
          }
          refetchQueries(s = {}, x) {
            let W = { ...x, cancelRefetch: x?.cancelRefetch ?? !0 },
              X = eM.V.batch(() =>
                this.#s
                  .findAll(s)
                  .filter((s) => !s.isDisabled())
                  .map((s) => {
                    let x = s.fetch(void 0, W);
                    return (
                      W.throwOnError || (x = x.catch(eN.ZT)),
                      "paused" === s.state.fetchStatus ? Promise.resolve() : x
                    );
                  })
              );
            return Promise.all(X).then(eN.ZT);
          }
          fetchQuery(s) {
            let x = this.defaultQueryOptions(s);
            void 0 === x.retry && (x.retry = !1);
            let W = this.#s.build(this, x);
            return W.isStaleByTime((0, eN.KC)(x.staleTime, W))
              ? W.fetch(x)
              : Promise.resolve(W.state.data);
          }
          prefetchQuery(s) {
            return this.fetchQuery(s).then(eN.ZT).catch(eN.ZT);
          }
          fetchInfiniteQuery(s) {
            return (
              (s.behavior = infiniteQueryBehavior(s.pages)), this.fetchQuery(s)
            );
          }
          prefetchInfiniteQuery(s) {
            return this.fetchInfiniteQuery(s).then(eN.ZT).catch(eN.ZT);
          }
          ensureInfiniteQueryData(s) {
            return (
              (s.behavior = infiniteQueryBehavior(s.pages)),
              this.ensureQueryData(s)
            );
          }
          resumePausedMutations() {
            return ez.N.isOnline()
              ? this.#r.resumePausedMutations()
              : Promise.resolve();
          }
          getQueryCache() {
            return this.#s;
          }
          getMutationCache() {
            return this.#r;
          }
          getDefaultOptions() {
            return this.#l;
          }
          setDefaultOptions(s) {
            this.#l = s;
          }
          setQueryDefaults(s, x) {
            this.#c.set((0, eN.Ym)(s), { queryKey: s, defaultOptions: x });
          }
          getQueryDefaults(s) {
            let x = [...this.#c.values()],
              W = {};
            return (
              x.forEach((x) => {
                (0, eN.to)(s, x.queryKey) &&
                  (W = { ...W, ...x.defaultOptions });
              }),
              W
            );
          }
          setMutationDefaults(s, x) {
            this.#u.set((0, eN.Ym)(s), { mutationKey: s, defaultOptions: x });
          }
          getMutationDefaults(s) {
            let x = [...this.#u.values()],
              W = {};
            return (
              x.forEach((x) => {
                (0, eN.to)(s, x.mutationKey) &&
                  (W = { ...W, ...x.defaultOptions });
              }),
              W
            );
          }
          defaultQueryOptions(s) {
            if (s._defaulted) return s;
            let x = {
              ...this.#l.queries,
              ...this.getQueryDefaults(s.queryKey),
              ...s,
              _defaulted: !0,
            };
            return (
              x.queryHash || (x.queryHash = (0, eN.Rm)(x.queryKey, x)),
              void 0 === x.refetchOnReconnect &&
                (x.refetchOnReconnect = "always" !== x.networkMode),
              void 0 === x.throwOnError && (x.throwOnError = !!x.suspense),
              !x.networkMode && x.persister && (x.networkMode = "offlineFirst"),
              !0 !== x.enabled && x.queryFn === eN.CN && (x.enabled = !1),
              x
            );
          }
          defaultMutationOptions(s) {
            return s?._defaulted
              ? s
              : {
                  ...this.#l.mutations,
                  ...(s?.mutationKey &&
                    this.getMutationDefaults(s.mutationKey)),
                  ...s,
                  _defaulted: !0,
                };
          }
          clear() {
            this.#s.clear(), this.#r.clear();
          }
        },
        eV = W(30202),
        eW = W(86491),
        eK = W(36609);
      function _typeof(s) {
        return (_typeof =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (s) {
                return typeof s;
              }
            : function (s) {
                return s &&
                  "function" == typeof Symbol &&
                  s.constructor === Symbol &&
                  s !== Symbol.prototype
                  ? "symbol"
                  : typeof s;
              })(s);
      }
      function hasXMLHttpRequest() {
        return (
          "function" == typeof XMLHttpRequest ||
          ("undefined" == typeof XMLHttpRequest
            ? "undefined"
            : _typeof(XMLHttpRequest)) === "object"
        );
      }
      var eZ = W(83154),
        eG = W.t(eZ, 2);
      function ownKeys(s, x) {
        var W = Object.keys(s);
        if (Object.getOwnPropertySymbols) {
          var X = Object.getOwnPropertySymbols(s);
          x &&
            (X = X.filter(function (x) {
              return Object.getOwnPropertyDescriptor(s, x).enumerable;
            })),
            W.push.apply(W, X);
        }
        return W;
      }
      function _objectSpread(s) {
        for (var x = 1; x < arguments.length; x++) {
          var W = null != arguments[x] ? arguments[x] : {};
          x % 2
            ? ownKeys(Object(W), !0).forEach(function (x) {
                var X, ee;
                (X = x),
                  (ee = W[x]),
                  (X = (function (s) {
                    var x = (function (s, x) {
                      if ("object" != request_typeof(s) || !s) return s;
                      var W = s[Symbol.toPrimitive];
                      if (void 0 !== W) {
                        var X = W.call(s, x || "default");
                        if ("object" != request_typeof(X)) return X;
                        throw TypeError(
                          "@@toPrimitive must return a primitive value."
                        );
                      }
                      return ("string" === x ? String : Number)(s);
                    })(s, "string");
                    return "symbol" == request_typeof(x) ? x : x + "";
                  })(X)) in s
                    ? Object.defineProperty(s, X, {
                        value: ee,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                      })
                    : (s[X] = ee);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(s, Object.getOwnPropertyDescriptors(W))
            : ownKeys(Object(W)).forEach(function (x) {
                Object.defineProperty(
                  s,
                  x,
                  Object.getOwnPropertyDescriptor(W, x)
                );
              });
        }
        return s;
      }
      function request_typeof(s) {
        return (request_typeof =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (s) {
                return typeof s;
              }
            : function (s) {
                return s &&
                  "function" == typeof Symbol &&
                  s.constructor === Symbol &&
                  s !== Symbol.prototype
                  ? "symbol"
                  : typeof s;
              })(s);
      }
      "function" == typeof fetch &&
        (eC =
          "undefined" != typeof global && global.fetch
            ? global.fetch
            : "undefined" != typeof window && window.fetch
            ? window.fetch
            : fetch),
        hasXMLHttpRequest() &&
          ("undefined" != typeof global && global.XMLHttpRequest
            ? (ex = global.XMLHttpRequest)
            : "undefined" != typeof window &&
              window.XMLHttpRequest &&
              (ex = window.XMLHttpRequest)),
        "function" == typeof ActiveXObject &&
          ("undefined" != typeof global && global.ActiveXObject
            ? (eE = global.ActiveXObject)
            : "undefined" != typeof window &&
              window.ActiveXObject &&
              (eE = window.ActiveXObject)),
        eC || !eG || ex || eE || (eC = eZ || eG),
        "function" != typeof eC && (eC = void 0);
      var addQueryString = function (s, x) {
          if (x && "object" === request_typeof(x)) {
            var W = "";
            for (var X in x)
              W += "&" + encodeURIComponent(X) + "=" + encodeURIComponent(x[X]);
            if (!W) return s;
            s = s + (-1 !== s.indexOf("?") ? "&" : "?") + W.slice(1);
          }
          return s;
        },
        fetchIt = function (s, x, W, X) {
          var resolver = function (s) {
            if (!s.ok) return W(s.statusText || "Error", { status: s.status });
            s.text()
              .then(function (x) {
                W(null, { status: s.status, data: x });
              })
              .catch(W);
          };
          if (X) {
            var ee = X(s, x);
            if (ee instanceof Promise) {
              ee.then(resolver).catch(W);
              return;
            }
          }
          "function" == typeof fetch
            ? fetch(s, x).then(resolver).catch(W)
            : eC(s, x).then(resolver).catch(W);
        },
        eY = !1,
        requestWithFetch = function (s, x, W, X) {
          s.queryStringParams && (x = addQueryString(x, s.queryStringParams));
          var ee = _objectSpread(
            {},
            "function" == typeof s.customHeaders
              ? s.customHeaders()
              : s.customHeaders
          );
          "undefined" == typeof window &&
            "undefined" != typeof global &&
            void 0 !== global.process &&
            global.process.versions &&
            global.process.versions.node &&
            (ee["User-Agent"] = "i18next-http-backend (node/"
              .concat(global.process.version, "; ")
              .concat(global.process.platform, " ")
              .concat(global.process.arch, ")")),
            W && (ee["Content-Type"] = "application/json");
          var et =
              "function" == typeof s.requestOptions
                ? s.requestOptions(W)
                : s.requestOptions,
            er = _objectSpread(
              {
                method: W ? "POST" : "GET",
                body: W ? s.stringify(W) : void 0,
                headers: ee,
              },
              eY ? {} : et
            ),
            ei =
              "function" == typeof s.alternateFetch &&
              s.alternateFetch.length >= 1
                ? s.alternateFetch
                : void 0;
          try {
            fetchIt(x, er, X, ei);
          } catch (s) {
            if (
              !et ||
              0 === Object.keys(et).length ||
              !s.message ||
              0 > s.message.indexOf("not implemented")
            )
              return X(s);
            try {
              Object.keys(et).forEach(function (s) {
                delete er[s];
              }),
                fetchIt(x, er, X, ei),
                (eY = !0);
            } catch (s) {
              X(s);
            }
          }
        },
        requestWithXmlHttpRequest = function (s, x, W, X) {
          W &&
            "object" === request_typeof(W) &&
            (W = addQueryString("", W).slice(1)),
            s.queryStringParams && (x = addQueryString(x, s.queryStringParams));
          try {
            (ee = ex ? new ex() : new eE("MSXML2.XMLHTTP.3.0")).open(
              W ? "POST" : "GET",
              x,
              1
            ),
              s.crossDomain ||
                ee.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
              (ee.withCredentials = !!s.withCredentials),
              W &&
                ee.setRequestHeader(
                  "Content-Type",
                  "application/x-www-form-urlencoded"
                ),
              ee.overrideMimeType && ee.overrideMimeType("application/json");
            var ee,
              et = s.customHeaders;
            if ((et = "function" == typeof et ? et() : et))
              for (var er in et) ee.setRequestHeader(er, et[er]);
            (ee.onreadystatechange = function () {
              ee.readyState > 3 &&
                X(ee.status >= 400 ? ee.statusText : null, {
                  status: ee.status,
                  data: ee.responseText,
                });
            }),
              ee.send(W);
          } catch (s) {
            console && console.log(s);
          }
        },
        esm_request = function (s, x, W, X) {
          return ("function" == typeof W && ((X = W), (W = void 0)),
          (X = X || function () {}),
          eC && 0 !== x.indexOf("file:"))
            ? requestWithFetch(s, x, W, X)
            : hasXMLHttpRequest() || "function" == typeof ActiveXObject
            ? requestWithXmlHttpRequest(s, x, W, X)
            : void X(Error("No fetch and no xhr implementation found!"));
        };
      function esm_typeof(s) {
        return (esm_typeof =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (s) {
                return typeof s;
              }
            : function (s) {
                return s &&
                  "function" == typeof Symbol &&
                  s.constructor === Symbol &&
                  s !== Symbol.prototype
                  ? "symbol"
                  : typeof s;
              })(s);
      }
      function esm_ownKeys(s, x) {
        var W = Object.keys(s);
        if (Object.getOwnPropertySymbols) {
          var X = Object.getOwnPropertySymbols(s);
          x &&
            (X = X.filter(function (x) {
              return Object.getOwnPropertyDescriptor(s, x).enumerable;
            })),
            W.push.apply(W, X);
        }
        return W;
      }
      function esm_objectSpread(s) {
        for (var x = 1; x < arguments.length; x++) {
          var W = null != arguments[x] ? arguments[x] : {};
          x % 2
            ? esm_ownKeys(Object(W), !0).forEach(function (x) {
                esm_defineProperty(s, x, W[x]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(s, Object.getOwnPropertyDescriptors(W))
            : esm_ownKeys(Object(W)).forEach(function (x) {
                Object.defineProperty(
                  s,
                  x,
                  Object.getOwnPropertyDescriptor(W, x)
                );
              });
        }
        return s;
      }
      function _defineProperties(s, x) {
        for (var W = 0; W < x.length; W++) {
          var X = x[W];
          (X.enumerable = X.enumerable || !1),
            (X.configurable = !0),
            "value" in X && (X.writable = !0),
            Object.defineProperty(s, esm_toPropertyKey(X.key), X);
        }
      }
      function esm_defineProperty(s, x, W) {
        return (
          (x = esm_toPropertyKey(x)) in s
            ? Object.defineProperty(s, x, {
                value: W,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (s[x] = W),
          s
        );
      }
      function esm_toPropertyKey(s) {
        var x = (function (s, x) {
          if ("object" != esm_typeof(s) || !s) return s;
          var W = s[Symbol.toPrimitive];
          if (void 0 !== W) {
            var X = W.call(s, x || "default");
            if ("object" != esm_typeof(X)) return X;
            throw TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === x ? String : Number)(s);
        })(s, "string");
        return "symbol" == esm_typeof(x) ? x : x + "";
      }
      var eQ =
        ((eb = function Backend(s) {
          var x =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            W =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
          (function (s, x) {
            if (!(s instanceof x))
              throw TypeError("Cannot call a class as a function");
          })(this, Backend),
            (this.services = s),
            (this.options = x),
            (this.allOptions = W),
            (this.type = "backend"),
            this.init(s, x, W);
        }),
        (ev = [
          {
            key: "init",
            value: function (s) {
              var x = this,
                W =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {},
                X =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : {};
              if (
                ((this.services = s),
                (this.options = esm_objectSpread(
                  esm_objectSpread(
                    esm_objectSpread(
                      {},
                      {
                        loadPath: "/locales/{{lng}}/{{ns}}.json",
                        addPath: "/locales/add/{{lng}}/{{ns}}",
                        parse: function (s) {
                          return JSON.parse(s);
                        },
                        stringify: JSON.stringify,
                        parsePayload: function (s, x, W) {
                          return esm_defineProperty({}, x, W || "");
                        },
                        parseLoadPayload: function (s, x) {},
                        request: esm_request,
                        reloadInterval: "undefined" == typeof window && 36e5,
                        customHeaders: {},
                        queryStringParams: {},
                        crossDomain: !1,
                        withCredentials: !1,
                        overrideMimeType: !1,
                        requestOptions: {
                          mode: "cors",
                          credentials: "same-origin",
                          cache: "default",
                        },
                      }
                    ),
                    this.options || {}
                  ),
                  W
                )),
                (this.allOptions = X),
                this.services && this.options.reloadInterval)
              ) {
                var ee = setInterval(function () {
                  return x.reload();
                }, this.options.reloadInterval);
                "object" === esm_typeof(ee) &&
                  "function" == typeof ee.unref &&
                  ee.unref();
              }
            },
          },
          {
            key: "readMulti",
            value: function (s, x, W) {
              this._readAny(s, s, x, x, W);
            },
          },
          {
            key: "read",
            value: function (s, x, W) {
              this._readAny([s], s, [x], x, W);
            },
          },
          {
            key: "_readAny",
            value: function (s, x, W, X, ee) {
              var et,
                er,
                ei = this,
                eo = this.options.loadPath;
              "function" == typeof this.options.loadPath &&
                (eo = this.options.loadPath(s, W)),
                (eo =
                  (er = et = eo) && "function" == typeof er.then
                    ? et
                    : Promise.resolve(et)).then(function (et) {
                  if (!et) return ee(null, {});
                  var er = ei.services.interpolator.interpolate(et, {
                    lng: s.join("+"),
                    ns: W.join("+"),
                  });
                  ei.loadUrl(er, ee, x, X);
                });
            },
          },
          {
            key: "loadUrl",
            value: function (s, x, W, X) {
              var ee = this,
                et = "string" == typeof W ? [W] : W,
                er = "string" == typeof X ? [X] : X,
                ei = this.options.parseLoadPayload(et, er);
              this.options.request(this.options, s, ei, function (et, er) {
                if (er && ((er.status >= 500 && er.status < 600) || !er.status))
                  return x(
                    "failed loading " + s + "; status code: " + er.status,
                    !0
                  );
                if (er && er.status >= 400 && er.status < 500)
                  return x(
                    "failed loading " + s + "; status code: " + er.status,
                    !1
                  );
                if (!er && et && et.message) {
                  var ei,
                    eo,
                    ea = et.message.toLowerCase();
                  if (
                    ["failed", "fetch", "network", "load"].find(function (s) {
                      return ea.indexOf(s) > -1;
                    })
                  )
                    return x("failed loading " + s + ": " + et.message, !0);
                }
                if (et) return x(et, !1);
                try {
                  ei =
                    "string" == typeof er.data
                      ? ee.options.parse(er.data, W, X)
                      : er.data;
                } catch (x) {
                  eo = "failed parsing " + s + " to json";
                }
                if (eo) return x(eo, !1);
                x(null, ei);
              });
            },
          },
          {
            key: "create",
            value: function (s, x, W, X, ee) {
              var et = this;
              if (this.options.addPath) {
                "string" == typeof s && (s = [s]);
                var er = this.options.parsePayload(x, W, X),
                  ei = 0,
                  eo = [],
                  ea = [];
                s.forEach(function (W) {
                  var X = et.options.addPath;
                  "function" == typeof et.options.addPath &&
                    (X = et.options.addPath(W, x));
                  var es = et.services.interpolator.interpolate(X, {
                    lng: W,
                    ns: x,
                  });
                  et.options.request(et.options, es, er, function (x, W) {
                    (ei += 1),
                      eo.push(x),
                      ea.push(W),
                      ei === s.length && "function" == typeof ee && ee(eo, ea);
                  });
                });
              }
            },
          },
          {
            key: "reload",
            value: function () {
              var s = this,
                x = this.services,
                W = x.backendConnector,
                X = x.languageUtils,
                ee = x.logger,
                et = W.language;
              if (!et || "cimode" !== et.toLowerCase()) {
                var er = [],
                  append = function (s) {
                    X.toResolveHierarchy(s).forEach(function (s) {
                      0 > er.indexOf(s) && er.push(s);
                    });
                  };
                append(et),
                  this.allOptions.preload &&
                    this.allOptions.preload.forEach(function (s) {
                      return append(s);
                    }),
                  er.forEach(function (x) {
                    s.allOptions.ns.forEach(function (s) {
                      W.read(x, s, "read", null, null, function (X, et) {
                        X &&
                          ee.warn(
                            "loading namespace "
                              .concat(s, " for language ")
                              .concat(x, " failed"),
                            X
                          ),
                          !X &&
                            et &&
                            ee.log(
                              "loaded namespace "
                                .concat(s, " for language ")
                                .concat(x),
                              et
                            ),
                          W.loaded("".concat(x, "|").concat(s), X, et);
                      });
                    });
                  });
              }
            },
          },
        ]),
        _defineProperties(eb.prototype, ev),
        ey && _defineProperties(eb, ey),
        Object.defineProperty(eb, "prototype", { writable: !1 }),
        eb);
      eQ.type = "backend";
      let { slice: eJ, forEach: eX } = [],
        e0 = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,
        serializeCookie = (s, x, W) => {
          let X = W || {};
          X.path = X.path || "/";
          let ee = encodeURIComponent(x),
            et = `${s}=${ee}`;
          if (X.maxAge > 0) {
            let s = X.maxAge - 0;
            if (Number.isNaN(s)) throw Error("maxAge should be a Number");
            et += `; Max-Age=${Math.floor(s)}`;
          }
          if (X.domain) {
            if (!e0.test(X.domain)) throw TypeError("option domain is invalid");
            et += `; Domain=${X.domain}`;
          }
          if (X.path) {
            if (!e0.test(X.path)) throw TypeError("option path is invalid");
            et += `; Path=${X.path}`;
          }
          if (X.expires) {
            if ("function" != typeof X.expires.toUTCString)
              throw TypeError("option expires is invalid");
            et += `; Expires=${X.expires.toUTCString()}`;
          }
          if (
            (X.httpOnly && (et += "; HttpOnly"),
            X.secure && (et += "; Secure"),
            X.sameSite)
          ) {
            let s =
              "string" == typeof X.sameSite
                ? X.sameSite.toLowerCase()
                : X.sameSite;
            switch (s) {
              case !0:
              case "strict":
                et += "; SameSite=Strict";
                break;
              case "lax":
                et += "; SameSite=Lax";
                break;
              case "none":
                et += "; SameSite=None";
                break;
              default:
                throw TypeError("option sameSite is invalid");
            }
          }
          return et;
        },
        e1 = {
          create(s, x, W, X) {
            let ee =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : { path: "/", sameSite: "strict" };
            W &&
              ((ee.expires = new Date()),
              ee.expires.setTime(ee.expires.getTime() + 6e4 * W)),
              X && (ee.domain = X),
              (document.cookie = serializeCookie(s, encodeURIComponent(x), ee));
          },
          read(s) {
            let x = `${s}=`,
              W = document.cookie.split(";");
            for (let s = 0; s < W.length; s++) {
              let X = W[s];
              for (; " " === X.charAt(0); ) X = X.substring(1, X.length);
              if (0 === X.indexOf(x)) return X.substring(x.length, X.length);
            }
            return null;
          },
          remove(s) {
            this.create(s, "", -1);
          },
        };
      var e2 = {
          name: "cookie",
          lookup(s) {
            let { lookupCookie: x } = s;
            if (x && "undefined" != typeof document)
              return e1.read(x) || void 0;
          },
          cacheUserLanguage(s, x) {
            let {
              lookupCookie: W,
              cookieMinutes: X,
              cookieDomain: ee,
              cookieOptions: et,
            } = x;
            W && "undefined" != typeof document && e1.create(W, s, X, ee, et);
          },
        },
        e3 = {
          name: "querystring",
          lookup(s) {
            let x,
              { lookupQuerystring: W } = s;
            if ("undefined" != typeof window) {
              let { search: s } = window.location;
              !window.location.search &&
                window.location.hash?.indexOf("?") > -1 &&
                (s = window.location.hash.substring(
                  window.location.hash.indexOf("?")
                ));
              let X = s.substring(1),
                ee = X.split("&");
              for (let s = 0; s < ee.length; s++) {
                let X = ee[s].indexOf("=");
                if (X > 0) {
                  let et = ee[s].substring(0, X);
                  et === W && (x = ee[s].substring(X + 1));
                }
              }
            }
            return x;
          },
        };
      let e5 = null,
        localStorageAvailable = () => {
          if (null !== e5) return e5;
          try {
            e5 = "undefined" !== window && null !== window.localStorage;
            let s = "i18next.translate.boo";
            window.localStorage.setItem(s, "foo"),
              window.localStorage.removeItem(s);
          } catch (s) {
            e5 = !1;
          }
          return e5;
        };
      var e6 = {
        name: "localStorage",
        lookup(s) {
          let { lookupLocalStorage: x } = s;
          if (x && localStorageAvailable())
            return window.localStorage.getItem(x) || void 0;
        },
        cacheUserLanguage(s, x) {
          let { lookupLocalStorage: W } = x;
          W && localStorageAvailable() && window.localStorage.setItem(W, s);
        },
      };
      let e4 = null,
        sessionStorageAvailable = () => {
          if (null !== e4) return e4;
          try {
            e4 = "undefined" !== window && null !== window.sessionStorage;
            let s = "i18next.translate.boo";
            window.sessionStorage.setItem(s, "foo"),
              window.sessionStorage.removeItem(s);
          } catch (s) {
            e4 = !1;
          }
          return e4;
        };
      var e8 = {
          name: "sessionStorage",
          lookup(s) {
            let { lookupSessionStorage: x } = s;
            if (x && sessionStorageAvailable())
              return window.sessionStorage.getItem(x) || void 0;
          },
          cacheUserLanguage(s, x) {
            let { lookupSessionStorage: W } = x;
            W &&
              sessionStorageAvailable() &&
              window.sessionStorage.setItem(W, s);
          },
        },
        e9 = {
          name: "navigator",
          lookup(s) {
            let x = [];
            if ("undefined" != typeof navigator) {
              let { languages: s, userLanguage: W, language: X } = navigator;
              if (s) for (let W = 0; W < s.length; W++) x.push(s[W]);
              W && x.push(W), X && x.push(X);
            }
            return x.length > 0 ? x : void 0;
          },
        },
        e7 = {
          name: "htmlTag",
          lookup(s) {
            let x,
              { htmlTag: W } = s,
              X =
                W ||
                ("undefined" != typeof document
                  ? document.documentElement
                  : null);
            return (
              X &&
                "function" == typeof X.getAttribute &&
                (x = X.getAttribute("lang")),
              x
            );
          },
        },
        tt = {
          name: "path",
          lookup(s) {
            let { lookupFromPathIndex: x } = s;
            if ("undefined" == typeof window) return;
            let W = window.location.pathname.match(/\/([a-zA-Z-]*)/g);
            if (Array.isArray(W))
              return W["number" == typeof x ? x : 0]?.replace("/", "");
          },
        },
        tr = {
          name: "subdomain",
          lookup(s) {
            let { lookupFromSubdomainIndex: x } = s,
              W =
                "undefined" != typeof window &&
                window.location?.hostname?.match(
                  /^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i
                );
            if (W) return W["number" == typeof x ? x + 1 : 1];
          },
        };
      let Browser = class Browser {
        constructor(s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          (this.type = "languageDetector"),
            (this.detectors = {}),
            this.init(s, x);
        }
        init(s) {
          let x =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            W =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
          (this.services = s || { languageUtils: {} }),
            (this.options = (function (s) {
              return (
                eX.call(eJ.call(arguments, 1), (x) => {
                  if (x) for (let W in x) void 0 === s[W] && (s[W] = x[W]);
                }),
                s
              );
            })(x, this.options || {}, {
              order: [
                "querystring",
                "cookie",
                "localStorage",
                "sessionStorage",
                "navigator",
                "htmlTag",
              ],
              lookupQuerystring: "lng",
              lookupCookie: "i18next",
              lookupLocalStorage: "i18nextLng",
              lookupSessionStorage: "i18nextLng",
              caches: ["localStorage"],
              excludeCacheFor: ["cimode"],
              convertDetectedLanguage: (s) => s,
            })),
            "string" == typeof this.options.convertDetectedLanguage &&
              this.options.convertDetectedLanguage.indexOf("15897") > -1 &&
              (this.options.convertDetectedLanguage = (s) =>
                s.replace("-", "_")),
            this.options.lookupFromUrlIndex &&
              (this.options.lookupFromPathIndex =
                this.options.lookupFromUrlIndex),
            (this.i18nOptions = W),
            this.addDetector(e2),
            this.addDetector(e3),
            this.addDetector(e6),
            this.addDetector(e8),
            this.addDetector(e9),
            this.addDetector(e7),
            this.addDetector(tt),
            this.addDetector(tr);
        }
        addDetector(s) {
          return (this.detectors[s.name] = s), this;
        }
        detect(s) {
          s || (s = this.options.order);
          let x = [];
          return (s.forEach((s) => {
            if (this.detectors[s]) {
              let W = this.detectors[s].lookup(this.options);
              W && "string" == typeof W && (W = [W]), W && (x = x.concat(W));
            }
          }),
          (x = x.map((s) => this.options.convertDetectedLanguage(s))),
          this.services.languageUtils.getBestMatchFromCodes)
            ? x
            : x.length > 0
            ? x[0]
            : null;
        }
        cacheUserLanguage(s, x) {
          x || (x = this.options.caches),
            x &&
              ((this.options.excludeCacheFor &&
                this.options.excludeCacheFor.indexOf(s) > -1) ||
                x.forEach((x) => {
                  this.detectors[x] &&
                    this.detectors[x].cacheUserLanguage(s, this.options);
                }));
        }
      };
      Browser.type = "languageDetector";
      var ta = W(67421);
      eK.ZP.use(eQ)
        .use(Browser)
        .use(ta.Db)
        .init({
          fallbackLng: "en",
          ns: ["default"],
          defaultNS: "default",
          supportedLngs: [
            "en",
            "fr",
            "ro",
            "zh",
            "bg",
            "ar",
            "zh-CN",
            "ja-JP",
            "cs",
            "ug-CN",
            "de",
            "el",
            "hu",
            "id",
            "it",
            "ko-KR",
            "pl",
            "pt",
            "ru",
            "sk",
            "es",
            "th",
            "tr",
            "vi-VN",
          ],
          backend: {
            loadPath:
              "https://api.i18nexus.com/project_resources/translations/{{lng}}/{{ns}}.json?api_key=".concat(
                "P0snjoKQGhO7p4fOmo51qg"
              ),
          },
        }),
        W(11846);
      var ts = W(87675),
        tl = W(45775),
        tc = W(39028),
        tu = W(92106);
      function coinbaseWallet(s = {}) {
        let x, X, ee, et, er, ei, eo, ea, es;
        return "3" === s.version || s.headlessMode
          ? (ei) => ({
              id: "coinbaseWalletSDK",
              name: "Coinbase Wallet",
              type: coinbaseWallet.type,
              async connect({ chainId: s } = {}) {
                try {
                  let x = await this.getProvider(),
                    W = (
                      await x.request({ method: "eth_requestAccounts" })
                    ).map((s) => (0, tl.K)(s));
                  ee ||
                    ((ee = this.onAccountsChanged.bind(this)),
                    x.on("accountsChanged", ee)),
                    et ||
                      ((et = this.onChainChanged.bind(this)),
                      x.on("chainChanged", et)),
                    er ||
                      ((er = this.onDisconnect.bind(this)),
                      x.on("disconnect", er));
                  let X = await this.getChainId();
                  if (s && X !== s) {
                    let x = await this.switchChain({ chainId: s }).catch(
                      (s) => {
                        if (s.code === tc.ab.code) throw s;
                        return { id: X };
                      }
                    );
                    X = x?.id ?? X;
                  }
                  return { accounts: W, chainId: X };
                } catch (s) {
                  if (
                    /(user closed modal|accounts received is empty|user denied account)/i.test(
                      s.message
                    )
                  )
                    throw new tc.ab(s);
                  throw s;
                }
              },
              async disconnect() {
                let s = await this.getProvider();
                ee && (s.removeListener("accountsChanged", ee), (ee = void 0)),
                  et && (s.removeListener("chainChanged", et), (et = void 0)),
                  er && (s.removeListener("disconnect", er), (er = void 0)),
                  s.disconnect(),
                  s.close();
              },
              async getAccounts() {
                let s = await this.getProvider();
                return (await s.request({ method: "eth_accounts" })).map((s) =>
                  (0, tl.K)(s)
                );
              },
              async getChainId() {
                let s = await this.getProvider(),
                  x = await s.request({ method: "eth_chainId" });
                return Number(x);
              },
              async getProvider() {
                if (!X) {
                  let ee = await (async () => {
                    let { default: s } = await Promise.all([
                      W.e(9635),
                      W.e(4726),
                    ]).then(W.t.bind(W, 89635, 19));
                    return "function" != typeof s &&
                      "function" == typeof s.default
                      ? s.default
                      : s;
                  })();
                  x = new ee({ ...s, reloadOnDisconnect: !1 });
                  let et = x.walletExtension?.getChainId(),
                    er =
                      ei.chains.find((x) =>
                        s.chainId ? x.id === s.chainId : x.id === et
                      ) || ei.chains[0],
                    eo = s.chainId || er?.id,
                    ea = s.jsonRpcUrl || er?.rpcUrls.default.http[0];
                  X = x.makeWeb3Provider(ea, eo);
                }
                return X;
              },
              async isAuthorized() {
                try {
                  let s = await this.getAccounts();
                  return !!s.length;
                } catch {
                  return !1;
                }
              },
              async switchChain({ addEthereumChainParameter: s, chainId: x }) {
                let W = ei.chains.find((s) => s.id === x);
                if (!W) throw new tc.x3(new ts.X4());
                let X = await this.getProvider();
                try {
                  return (
                    await X.request({
                      method: "wallet_switchEthereumChain",
                      params: [{ chainId: (0, tu.eC)(W.id) }],
                    }),
                    W
                  );
                } catch (ee) {
                  if (4902 === ee.code)
                    try {
                      let ee, et;
                      (ee = s?.blockExplorerUrls
                        ? s.blockExplorerUrls
                        : W.blockExplorers?.default.url
                        ? [W.blockExplorers?.default.url]
                        : []),
                        (et = s?.rpcUrls?.length
                          ? s.rpcUrls
                          : [W.rpcUrls.default?.http[0] ?? ""]);
                      let er = {
                        blockExplorerUrls: ee,
                        chainId: (0, tu.eC)(x),
                        chainName: s?.chainName ?? W.name,
                        iconUrls: s?.iconUrls,
                        nativeCurrency: s?.nativeCurrency ?? W.nativeCurrency,
                        rpcUrls: et,
                      };
                      return (
                        await X.request({
                          method: "wallet_addEthereumChain",
                          params: [er],
                        }),
                        W
                      );
                    } catch (s) {
                      throw new tc.ab(s);
                    }
                  throw new tc.x3(ee);
                }
              },
              onAccountsChanged(s) {
                0 === s.length
                  ? this.onDisconnect()
                  : ei.emitter.emit("change", {
                      accounts: s.map((s) => (0, tl.K)(s)),
                    });
              },
              onChainChanged(s) {
                let x = Number(s);
                ei.emitter.emit("change", { chainId: x });
              },
              async onDisconnect(s) {
                ei.emitter.emit("disconnect");
                let x = await this.getProvider();
                ee && (x.removeListener("accountsChanged", ee), (ee = void 0)),
                  et && (x.removeListener("chainChanged", et), (et = void 0)),
                  er && (x.removeListener("disconnect", er), (er = void 0));
              },
            })
          : (x) => ({
              id: "coinbaseWalletSDK",
              name: "Coinbase Wallet",
              rdns: "com.coinbase.wallet",
              type: coinbaseWallet.type,
              async connect({ chainId: s, ...x } = {}) {
                try {
                  let W = await this.getProvider(),
                    X = (
                      await W.request({
                        method: "eth_requestAccounts",
                        params:
                          "instantOnboarding" in x && x.instantOnboarding
                            ? [{ onboarding: "instant" }]
                            : [],
                      })
                    ).map((s) => (0, tl.K)(s));
                  eo ||
                    ((eo = this.onAccountsChanged.bind(this)),
                    W.on("accountsChanged", eo)),
                    ea ||
                      ((ea = this.onChainChanged.bind(this)),
                      W.on("chainChanged", ea)),
                    es ||
                      ((es = this.onDisconnect.bind(this)),
                      W.on("disconnect", es));
                  let ee = await this.getChainId();
                  if (s && ee !== s) {
                    let x = await this.switchChain({ chainId: s }).catch(
                      (s) => {
                        if (s.code === tc.ab.code) throw s;
                        return { id: ee };
                      }
                    );
                    ee = x?.id ?? ee;
                  }
                  return { accounts: X, chainId: ee };
                } catch (s) {
                  if (
                    /(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(
                      s.message
                    )
                  )
                    throw new tc.ab(s);
                  throw s;
                }
              },
              async disconnect() {
                let s = await this.getProvider();
                eo && (s.removeListener("accountsChanged", eo), (eo = void 0)),
                  ea && (s.removeListener("chainChanged", ea), (ea = void 0)),
                  es && (s.removeListener("disconnect", es), (es = void 0)),
                  s.disconnect(),
                  s.close?.();
              },
              async getAccounts() {
                let s = await this.getProvider();
                return (await s.request({ method: "eth_accounts" })).map((s) =>
                  (0, tl.K)(s)
                );
              },
              async getChainId() {
                let s = await this.getProvider(),
                  x = await s.request({ method: "eth_chainId" });
                return Number(x);
              },
              async getProvider() {
                if (!ei) {
                  let X =
                      "string" == typeof s.preference
                        ? { options: s.preference }
                        : {
                            ...s.preference,
                            options: s.preference?.options ?? "all",
                          },
                    { createCoinbaseWalletSDK: ee } = await W.e(7485).then(
                      W.bind(W, 77485)
                    ),
                    et = ee({
                      ...s,
                      appChainIds: x.chains.map((s) => s.id),
                      preference: X,
                    });
                  ei = et.getProvider();
                }
                return ei;
              },
              async isAuthorized() {
                try {
                  let s = await this.getAccounts();
                  return !!s.length;
                } catch {
                  return !1;
                }
              },
              async switchChain({ addEthereumChainParameter: s, chainId: W }) {
                let X = x.chains.find((s) => s.id === W);
                if (!X) throw new tc.x3(new ts.X4());
                let ee = await this.getProvider();
                try {
                  return (
                    await ee.request({
                      method: "wallet_switchEthereumChain",
                      params: [{ chainId: (0, tu.eC)(X.id) }],
                    }),
                    X
                  );
                } catch (x) {
                  if (4902 === x.code)
                    try {
                      let x, et;
                      (x = s?.blockExplorerUrls
                        ? s.blockExplorerUrls
                        : X.blockExplorers?.default.url
                        ? [X.blockExplorers?.default.url]
                        : []),
                        (et = s?.rpcUrls?.length
                          ? s.rpcUrls
                          : [X.rpcUrls.default?.http[0] ?? ""]);
                      let er = {
                        blockExplorerUrls: x,
                        chainId: (0, tu.eC)(W),
                        chainName: s?.chainName ?? X.name,
                        iconUrls: s?.iconUrls,
                        nativeCurrency: s?.nativeCurrency ?? X.nativeCurrency,
                        rpcUrls: et,
                      };
                      return (
                        await ee.request({
                          method: "wallet_addEthereumChain",
                          params: [er],
                        }),
                        X
                      );
                    } catch (s) {
                      throw new tc.ab(s);
                    }
                  throw new tc.x3(x);
                }
              },
              onAccountsChanged(s) {
                0 === s.length
                  ? this.onDisconnect()
                  : x.emitter.emit("change", {
                      accounts: s.map((s) => (0, tl.K)(s)),
                    });
              },
              onChainChanged(s) {
                let W = Number(s);
                x.emitter.emit("change", { chainId: W });
              },
              async onDisconnect(s) {
                x.emitter.emit("disconnect");
                let W = await this.getProvider();
                eo && (W.removeListener("accountsChanged", eo), (eo = void 0)),
                  ea && (W.removeListener("chainChanged", ea), (ea = void 0)),
                  es && (W.removeListener("disconnect", es), (es = void 0));
              },
            });
      }
      coinbaseWallet.type = "coinbaseWallet";
      var td = W(52425),
        th = W(94898);
      let subscribeWithSelector = (s) => (x, W, X) => {
          let ee = X.subscribe;
          X.subscribe = (s, x, W) => {
            let et = s;
            if (x) {
              let ee = (null == W ? void 0 : W.equalityFn) || Object.is,
                er = s(X.getState());
              (et = (W) => {
                let X = s(W);
                if (!ee(er, X)) {
                  let s = er;
                  x((er = X), s);
                }
              }),
                (null == W ? void 0 : W.fireImmediately) && x(er, er);
            }
            return ee(et);
          };
          let et = s(x, W, X);
          return et;
        },
        toThenable = (s) => (x) => {
          try {
            let W = s(x);
            if (W instanceof Promise) return W;
            return {
              then: (s) => toThenable(s)(W),
              catch(s) {
                return this;
              },
            };
          } catch (s) {
            return {
              then(s) {
                return this;
              },
              catch: (x) => toThenable(x)(s),
            };
          }
        },
        persist = (s, x) => (W, X, ee) => {
          let et,
            er = {
              storage: (function (s, x) {
                let W;
                try {
                  W = s();
                } catch (s) {
                  return;
                }
                return {
                  getItem: (s) => {
                    var X;
                    let parse = (s) =>
                        null === s
                          ? null
                          : JSON.parse(s, null == x ? void 0 : x.reviver),
                      ee = null != (X = W.getItem(s)) ? X : null;
                    return ee instanceof Promise ? ee.then(parse) : parse(ee);
                  },
                  setItem: (s, X) =>
                    W.setItem(
                      s,
                      JSON.stringify(X, null == x ? void 0 : x.replacer)
                    ),
                  removeItem: (s) => W.removeItem(s),
                };
              })(() => localStorage),
              partialize: (s) => s,
              version: 0,
              merge: (s, x) => ({ ...x, ...s }),
              ...x,
            },
            ei = !1,
            eo = new Set(),
            ea = new Set(),
            es = er.storage;
          if (!es)
            return s(
              (...s) => {
                console.warn(
                  `[zustand persist middleware] Unable to update item '${er.name}', the given storage is currently unavailable.`
                ),
                  W(...s);
              },
              X,
              ee
            );
          let setItem = () => {
              let s = er.partialize({ ...X() });
              return es.setItem(er.name, { state: s, version: er.version });
            },
            el = ee.setState;
          ee.setState = (s, x) => {
            el(s, x), setItem();
          };
          let ec = s(
            (...s) => {
              W(...s), setItem();
            },
            X,
            ee
          );
          ee.getInitialState = () => ec;
          let hydrate = () => {
            var s, x;
            if (!es) return;
            (ei = !1),
              eo.forEach((s) => {
                var x;
                return s(null != (x = X()) ? x : ec);
              });
            let ee =
              (null == (x = er.onRehydrateStorage)
                ? void 0
                : x.call(er, null != (s = X()) ? s : ec)) || void 0;
            return toThenable(es.getItem.bind(es))(er.name)
              .then((s) => {
                if (s) {
                  if ("number" != typeof s.version || s.version === er.version)
                    return [!1, s.state];
                  if (er.migrate) return [!0, er.migrate(s.state, s.version)];
                  console.error(
                    "State loaded from storage couldn't be migrated since no migrate function was provided"
                  );
                }
                return [!1, void 0];
              })
              .then((s) => {
                var x;
                let [ee, ei] = s;
                if (
                  (W((et = er.merge(ei, null != (x = X()) ? x : ec)), !0), ee)
                )
                  return setItem();
              })
              .then(() => {
                null == ee || ee(et, void 0),
                  (et = X()),
                  (ei = !0),
                  ea.forEach((s) => s(et));
              })
              .catch((s) => {
                null == ee || ee(void 0, s);
              });
          };
          return (
            (ee.persist = {
              setOptions: (s) => {
                (er = { ...er, ...s }), s.storage && (es = s.storage);
              },
              clearStorage: () => {
                null == es || es.removeItem(er.name);
              },
              getOptions: () => er,
              rehydrate: () => hydrate(),
              hasHydrated: () => ei,
              onHydrate: (s) => (
                eo.add(s),
                () => {
                  eo.delete(s);
                }
              ),
              onFinishHydration: (s) => (
                ea.add(s),
                () => {
                  ea.delete(s);
                }
              ),
            }),
            er.skipHydration || hydrate(),
            et || ec
          );
        },
        createStoreImpl = (s) => {
          let x;
          let W = new Set(),
            setState = (s, X) => {
              let ee = "function" == typeof s ? s(x) : s;
              if (!Object.is(ee, x)) {
                let s = x;
                (x = (null != X ? X : "object" != typeof ee || null === ee)
                  ? ee
                  : Object.assign({}, x, ee)),
                  W.forEach((W) => W(x, s));
              }
            },
            getState = () => x,
            X = {
              setState,
              getState,
              getInitialState: () => ee,
              subscribe: (s) => (W.add(s), () => W.delete(s)),
            },
            ee = (x = s(setState, getState, X));
          return X;
        },
        vanilla_createStore = (s) => (s ? createStoreImpl(s) : createStoreImpl);
      var tp = W(60229),
        tf = W(7760),
        tg = W(7066);
      let ProviderNotFoundError = class ProviderNotFoundError extends tg.G {
        constructor() {
          super("Provider not found."),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "ProviderNotFoundError",
            });
        }
      };
      let SwitchChainNotSupportedError = class SwitchChainNotSupportedError extends tg.G {
        constructor({ connector: s }) {
          super(`"${s.name}" does not support programmatic chain switching.`),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "SwitchChainNotSupportedError",
            });
        }
      };
      function injected(s = {}) {
        let x, W, X, ee;
        let { shimDisconnect: et = !0, unstable_shimAsyncInject: er } = s;
        function getTarget() {
          let x = s.target;
          if ("function" == typeof x) {
            let s = x();
            if (s) return s;
          }
          return "object" == typeof x
            ? x
            : "string" == typeof x
            ? {
                ...(tm[x] ?? {
                  id: x,
                  name: `${x[0].toUpperCase()}${x.slice(1)}`,
                  provider: `is${x[0].toUpperCase()}${x.slice(1)}`,
                }),
              }
            : {
                id: "injected",
                name: "Injected",
                provider: (s) => s?.ethereum,
              };
        }
        return (ei) => ({
          get icon() {
            return getTarget().icon;
          },
          get id() {
            return getTarget().id;
          },
          get name() {
            return getTarget().name;
          },
          get supportsSimulation() {
            return !0;
          },
          type: injected.type,
          async setup() {
            let W = await this.getProvider();
            W?.on &&
              s.target &&
              (X || ((X = this.onConnect.bind(this)), W.on("connect", X)),
              x ||
                ((x = this.onAccountsChanged.bind(this)),
                W.on("accountsChanged", x)));
          },
          async connect({ chainId: er, isReconnecting: eo } = {}) {
            let ea = await this.getProvider();
            if (!ea) throw new ProviderNotFoundError();
            let es = [];
            if (eo) es = await this.getAccounts().catch(() => []);
            else if (et)
              try {
                let s = await ea.request({
                  method: "wallet_requestPermissions",
                  params: [{ eth_accounts: {} }],
                });
                if (
                  (es = s[0]?.caveats?.[0]?.value?.map((s) => tl.K(s))).length >
                  0
                ) {
                  let s = await this.getAccounts();
                  es = s;
                }
              } catch (s) {
                if (s.code === tc.ab.code) throw new tc.ab(s);
                if (s.code === tc.pT.code) throw s;
              }
            try {
              if (!es?.length && !eo) {
                let s = await ea.request({ method: "eth_requestAccounts" });
                es = s.map((s) => (0, tl.K)(s));
              }
              X && (ea.removeListener("connect", X), (X = void 0)),
                x ||
                  ((x = this.onAccountsChanged.bind(this)),
                  ea.on("accountsChanged", x)),
                W ||
                  ((W = this.onChainChanged.bind(this)),
                  ea.on("chainChanged", W)),
                ee ||
                  ((ee = this.onDisconnect.bind(this)),
                  ea.on("disconnect", ee));
              let el = await this.getChainId();
              if (er && el !== er) {
                let s = await this.switchChain({ chainId: er }).catch((s) => {
                  if (s.code === tc.ab.code) throw s;
                  return { id: el };
                });
                el = s?.id ?? el;
              }
              return (
                et && (await ei.storage?.removeItem(`${this.id}.disconnected`)),
                s.target ||
                  (await ei.storage?.setItem("injected.connected", !0)),
                { accounts: es, chainId: el }
              );
            } catch (s) {
              if (s.code === tc.ab.code) throw new tc.ab(s);
              if (s.code === tc.pT.code) throw new tc.pT(s);
              throw s;
            }
          },
          async disconnect() {
            let x = await this.getProvider();
            if (!x) throw new ProviderNotFoundError();
            W && (x.removeListener("chainChanged", W), (W = void 0)),
              ee && (x.removeListener("disconnect", ee), (ee = void 0)),
              X || ((X = this.onConnect.bind(this)), x.on("connect", X));
            try {
              await (0, tp.F)(
                () =>
                  x.request({
                    method: "wallet_revokePermissions",
                    params: [{ eth_accounts: {} }],
                  }),
                { timeout: 100 }
              );
            } catch {}
            et && (await ei.storage?.setItem(`${this.id}.disconnected`, !0)),
              s.target || (await ei.storage?.removeItem("injected.connected"));
          },
          async getAccounts() {
            let s = await this.getProvider();
            if (!s) throw new ProviderNotFoundError();
            let x = await s.request({ method: "eth_accounts" });
            return x.map((s) => (0, tl.K)(s));
          },
          async getChainId() {
            let s = await this.getProvider();
            if (!s) throw new ProviderNotFoundError();
            let x = await s.request({ method: "eth_chainId" });
            return Number(x);
          },
          async getProvider() {
            let s;
            if ("undefined" == typeof window) return;
            let x = getTarget();
            return (
              (s =
                "function" == typeof x.provider
                  ? x.provider(window)
                  : "string" == typeof x.provider
                  ? findProvider(window, x.provider)
                  : x.provider) &&
                !s.removeListener &&
                ("off" in s && "function" == typeof s.off
                  ? (s.removeListener = s.off)
                  : (s.removeListener = () => {})),
              s
            );
          },
          async isAuthorized() {
            try {
              let x =
                et && (await ei.storage?.getItem(`${this.id}.disconnected`));
              if (x) return !1;
              if (!s.target) {
                let s = await ei.storage?.getItem("injected.connected");
                if (!s) return !1;
              }
              let W = await this.getProvider();
              if (!W) {
                if (void 0 !== er && !1 !== er) {
                  let handleEthereum = async () => {
                      "undefined" != typeof window &&
                        window.removeEventListener(
                          "ethereum#initialized",
                          handleEthereum
                        );
                      let s = await this.getProvider();
                      return !!s;
                    },
                    s = "number" == typeof er ? er : 1e3,
                    x = await Promise.race([
                      ...("undefined" != typeof window
                        ? [
                            new Promise((s) =>
                              window.addEventListener(
                                "ethereum#initialized",
                                () => s(handleEthereum()),
                                { once: !0 }
                              )
                            ),
                          ]
                        : []),
                      new Promise((x) =>
                        setTimeout(() => x(handleEthereum()), s)
                      ),
                    ]);
                  if (x) return !0;
                }
                throw new ProviderNotFoundError();
              }
              let X = await (0, tf.J)(() => this.getAccounts());
              return !!X.length;
            } catch {
              return !1;
            }
          },
          async switchChain({ addEthereumChainParameter: s, chainId: x }) {
            let W = await this.getProvider();
            if (!W) throw new ProviderNotFoundError();
            let X = ei.chains.find((s) => s.id === x);
            if (!X) throw new tc.x3(new ts.X4());
            let ee = new Promise((s) => {
              let listener = (W) => {
                "chainId" in W &&
                  W.chainId === x &&
                  (ei.emitter.off("change", listener), s());
              };
              ei.emitter.on("change", listener);
            });
            try {
              return (
                await Promise.all([
                  W.request({
                    method: "wallet_switchEthereumChain",
                    params: [{ chainId: (0, tu.eC)(x) }],
                  }).then(async () => {
                    let s = await this.getChainId();
                    s === x && ei.emitter.emit("change", { chainId: x });
                  }),
                  ee,
                ]),
                X
              );
            } catch (et) {
              if (4902 === et.code || et?.data?.originalError?.code === 4902)
                try {
                  let et, er;
                  let { default: eo, ...ea } = X.blockExplorers ?? {};
                  s?.blockExplorerUrls
                    ? (et = s.blockExplorerUrls)
                    : eo &&
                      (et = [eo.url, ...Object.values(ea).map((s) => s.url)]),
                    (er = s?.rpcUrls?.length
                      ? s.rpcUrls
                      : [X.rpcUrls.default?.http[0] ?? ""]);
                  let es = {
                    blockExplorerUrls: et,
                    chainId: (0, tu.eC)(x),
                    chainName: s?.chainName ?? X.name,
                    iconUrls: s?.iconUrls,
                    nativeCurrency: s?.nativeCurrency ?? X.nativeCurrency,
                    rpcUrls: er,
                  };
                  return (
                    await Promise.all([
                      W.request({
                        method: "wallet_addEthereumChain",
                        params: [es],
                      }).then(async () => {
                        let s = await this.getChainId();
                        if (s === x) ei.emitter.emit("change", { chainId: x });
                        else
                          throw new tc.ab(
                            Error("User rejected switch after adding network.")
                          );
                      }),
                      ee,
                    ]),
                    X
                  );
                } catch (s) {
                  throw new tc.ab(s);
                }
              if (et.code === tc.ab.code) throw new tc.ab(et);
              throw new tc.x3(et);
            }
          },
          async onAccountsChanged(s) {
            if (0 === s.length) this.onDisconnect();
            else if (ei.emitter.listenerCount("connect")) {
              let s = (await this.getChainId()).toString();
              this.onConnect({ chainId: s }),
                et && (await ei.storage?.removeItem(`${this.id}.disconnected`));
            } else
              ei.emitter.emit("change", {
                accounts: s.map((s) => (0, tl.K)(s)),
              });
          },
          onChainChanged(s) {
            let x = Number(s);
            ei.emitter.emit("change", { chainId: x });
          },
          async onConnect(s) {
            let et = await this.getAccounts();
            if (0 === et.length) return;
            let er = Number(s.chainId);
            ei.emitter.emit("connect", { accounts: et, chainId: er });
            let eo = await this.getProvider();
            eo &&
              (X && (eo.removeListener("connect", X), (X = void 0)),
              x ||
                ((x = this.onAccountsChanged.bind(this)),
                eo.on("accountsChanged", x)),
              W ||
                ((W = this.onChainChanged.bind(this)),
                eo.on("chainChanged", W)),
              ee ||
                ((ee = this.onDisconnect.bind(this)), eo.on("disconnect", ee)));
          },
          async onDisconnect(s) {
            let x = await this.getProvider();
            (s && 1013 === s.code && x && (await this.getAccounts()).length) ||
              (ei.emitter.emit("disconnect"),
              x &&
                (W && (x.removeListener("chainChanged", W), (W = void 0)),
                ee && (x.removeListener("disconnect", ee), (ee = void 0)),
                X || ((X = this.onConnect.bind(this)), x.on("connect", X))));
          },
        });
      }
      injected.type = "injected";
      let tm = {
        coinbaseWallet: {
          id: "coinbaseWallet",
          name: "Coinbase Wallet",
          provider: (s) =>
            s?.coinbaseWalletExtension
              ? s.coinbaseWalletExtension
              : findProvider(s, "isCoinbaseWallet"),
        },
        metaMask: {
          id: "metaMask",
          name: "MetaMask",
          provider: (s) =>
            findProvider(s, (s) => {
              if (!s.isMetaMask || (s.isBraveWallet && !s._events && !s._state))
                return !1;
              for (let x of [
                "isApexWallet",
                "isAvalanche",
                "isBitKeep",
                "isBlockWallet",
                "isKuCoinWallet",
                "isMathWallet",
                "isOkxWallet",
                "isOKExWallet",
                "isOneInchIOSWallet",
                "isOneInchAndroidWallet",
                "isOpera",
                "isPortal",
                "isRabby",
                "isTokenPocket",
                "isTokenary",
                "isUniswapWallet",
                "isZerion",
              ])
                if (s[x]) return !1;
              return !0;
            }),
        },
        phantom: {
          id: "phantom",
          name: "Phantom",
          provider: (s) =>
            s?.phantom?.ethereum
              ? s.phantom?.ethereum
              : findProvider(s, "isPhantom"),
        },
      };
      function findProvider(s, x) {
        function isProvider(s) {
          return "function" == typeof x ? x(s) : "string" != typeof x || s[x];
        }
        let W = s.ethereum;
        return W?.providers
          ? W.providers.find((s) => isProvider(s))
          : W && isProvider(W)
          ? W
          : void 0;
      }
      var tw = W(54146);
      let Emitter = class Emitter {
        constructor(s) {
          Object.defineProperty(this, "uid", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: s,
          }),
            Object.defineProperty(this, "_emitter", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: new tw.v(),
            });
        }
        on(s, x) {
          this._emitter.on(s, x);
        }
        once(s, x) {
          this._emitter.once(s, x);
        }
        off(s, x) {
          this._emitter.off(s, x);
        }
        emit(s, ...x) {
          let W = x[0];
          this._emitter.emit(s, { uid: this.uid, ...W });
        }
        listenerCount(s) {
          return this._emitter.listenerCount(s);
        }
      };
      function deserialize_deserialize(s, x) {
        return JSON.parse(s, (s, W) => {
          let X = W;
          return (
            X?.__type === "bigint" && (X = BigInt(X.value)),
            X?.__type === "Map" && (X = new Map(X.value)),
            x?.(s, X) ?? X
          );
        });
      }
      function getReferenceKey(s, x) {
        return s.slice(0, x).join(".") || ".";
      }
      function getCutoff(s, x) {
        let { length: W } = s;
        for (let X = 0; X < W; ++X) if (s[X] === x) return X + 1;
        return 0;
      }
      function serialize_serialize(s, x, W, X) {
        return JSON.stringify(
          s,
          (function (s, x) {
            let W = "function" == typeof s,
              X = "function" == typeof x,
              ee = [],
              et = [];
            return function (er, ei) {
              if ("object" == typeof ei) {
                if (ee.length) {
                  let s = getCutoff(ee, this);
                  0 === s
                    ? (ee[ee.length] = this)
                    : (ee.splice(s), et.splice(s)),
                    (et[et.length] = er);
                  let W = getCutoff(ee, ei);
                  if (0 !== W)
                    return X
                      ? x.call(this, er, ei, getReferenceKey(et, W))
                      : `[ref=${getReferenceKey(et, W)}]`;
                } else (ee[0] = ei), (et[0] = er);
              }
              return W ? s.call(this, er, ei) : ei;
            };
          })((s, W) => {
            let X = W;
            return (
              "bigint" == typeof X &&
                (X = { __type: "bigint", value: W.toString() }),
              X instanceof Map &&
                (X = { __type: "Map", value: Array.from(W.entries()) }),
              x?.(s, X) ?? X
            );
          }, X),
          W ?? void 0
        );
      }
      function createStorage(s) {
        let {
          deserialize: x = deserialize_deserialize,
          key: W = "wagmi",
          serialize: X = serialize_serialize,
          storage: ee = tb,
        } = s;
        function unwrap(s) {
          return s instanceof Promise ? s.then((s) => s).catch(() => null) : s;
        }
        return {
          ...ee,
          key: W,
          async getItem(s, X) {
            let et = ee.getItem(`${W}.${s}`),
              er = await unwrap(et);
            return er ? x(er) ?? null : X ?? null;
          },
          async setItem(s, x) {
            let et = `${W}.${s}`;
            null === x
              ? await unwrap(ee.removeItem(et))
              : await unwrap(ee.setItem(et, X(x)));
          },
          async removeItem(s) {
            await unwrap(ee.removeItem(`${W}.${s}`));
          },
        };
      }
      let tb = { getItem: () => null, setItem: () => {}, removeItem: () => {} },
        tv = 256;
      var ty = W(79983),
        t_ = W(37075),
        tC = W(81946),
        tx = W(33397),
        tE = W(74751);
      let tA = [];
      function getConnections(s) {
        let x = [...s.state.connections.values()];
        return "reconnecting" === s.state.status || (0, tE.v)(tA, x)
          ? tA
          : ((tA = x), x);
      }
      var tS = W(14503),
        tk = W(8998);
      async function signMessage(s, { account: x = s.account, message: W }) {
        if (!x)
          throw new tk.o({ docsPath: "/docs/actions/wallet/signMessage" });
        let X = (0, tS.T)(x);
        if (X.signMessage) return X.signMessage({ message: W });
        let ee =
          "string" == typeof W
            ? (0, tu.$G)(W)
            : W.raw instanceof Uint8Array
            ? (0, tu.NC)(W.raw)
            : W.raw;
        return s.request(
          { method: "personal_sign", params: [ee, X.address] },
          { retryCount: 0 }
        );
      }
      var tT = W(75230);
      async function signMessage_signMessage(s, x) {
        let W;
        let { account: X, connector: ee, ...et } = x;
        W =
          "object" == typeof X && "local" === X.type
            ? s.getClient()
            : await (0, tT.e)(s, { account: X, connector: ee });
        let er = (0, tC.s)(W, signMessage, "signMessage");
        return er({ ...et, ...(X ? { account: X } : {}) });
      }
      var tI = W(45141);
      async function prepareTransactionRequest_prepareTransactionRequest(s, x) {
        let { account: W, chainId: X, ...ee } = x,
          et = W ?? (0, td.D)(s).address,
          er = s.getClient({ chainId: X }),
          ei = (0, tC.s)(er, tI.ZE, "prepareTransactionRequest");
        return ei({ ...ee, ...(et ? { account: et } : {}) });
      }
      var tP = W(66357),
        tR = W(14679),
        tN = W(82693),
        tO = W(18011),
        tM = W(81841);
      async function estimateGas_estimateGas(s, x) {
        let W;
        let { chainId: X, connector: ee, ...et } = x;
        if (x.account) W = x.account;
        else {
          let et = await (0, tT.e)(s, {
            account: x.account,
            chainId: X,
            connector: ee,
          });
          W = et.account;
        }
        let er = s.getClient({ chainId: X }),
          ei = (0, tC.s)(er, tM.Q, "estimateGas");
        return ei({ ...et, account: W });
      }
      async function connect(s, x) {
        let W;
        if (
          (W =
            "function" == typeof x.connector
              ? s._internal.connectors.setup(x.connector)
              : x.connector).uid === s.state.current
        )
          throw new ts.wi();
        try {
          s.setState((s) => ({ ...s, status: "connecting" })),
            W.emitter.emit("message", { type: "connecting" });
          let { connector: X, ...ee } = x,
            et = await W.connect(ee),
            er = et.accounts;
          return (
            W.emitter.off("connect", s._internal.events.connect),
            W.emitter.on("change", s._internal.events.change),
            W.emitter.on("disconnect", s._internal.events.disconnect),
            await s.storage?.setItem("recentConnectorId", W.id),
            s.setState((s) => ({
              ...s,
              connections: new Map(s.connections).set(W.uid, {
                accounts: er,
                chainId: et.chainId,
                connector: W,
              }),
              current: W.uid,
              status: "connected",
            })),
            { accounts: er, chainId: et.chainId }
          );
        } catch (x) {
          throw (
            (s.setState((s) => ({
              ...s,
              status: s.current ? "connected" : "disconnected",
            })),
            x)
          );
        }
      }
      var tD = W(51785),
        tB = W(79869),
        tL = W(95602),
        tj = W(95270),
        tU = W(6590);
      async function switchChain(s, x) {
        let { addEthereumChainParameter: W, chainId: X } = x,
          ee = s.state.connections.get(x.connector?.uid ?? s.state.current);
        if (ee) {
          let s = ee.connector;
          if (!s.switchChain)
            throw new SwitchChainNotSupportedError({ connector: s });
          let x = await s.switchChain({
            addEthereumChainParameter: W,
            chainId: X,
          });
          return x;
        }
        let et = s.chains.find((s) => s.id === X);
        if (!et) throw new ts.X4();
        return s.setState((s) => ({ ...s, chainId: X })), et;
      }
      var t$ = W(48120),
        tF = W(15229);
      let tz = new Map([
        [8217, "apostrophe"],
        [8260, "fraction slash"],
        [12539, "middle dot"],
      ]);
      function read_compressed_payload(s) {
        var x;
        let W;
        return (
          (x = (function (s) {
            let x = 0;
            function u16() {
              return (s[x++] << 8) | s[x++];
            }
            let W = u16(),
              X = 1,
              ee = [0, 1];
            for (let s = 1; s < W; s++) ee.push((X += u16()));
            let et = u16(),
              er = x;
            x += et;
            let ei = 0,
              eo = 0;
            function read_bit() {
              return (
                0 == ei && ((eo = (eo << 8) | s[x++]), (ei = 8)),
                (eo >> --ei) & 1
              );
            }
            let ea = 2147483648 - 1,
              es = 0;
            for (let s = 0; s < 31; s++) es = (es << 1) | read_bit();
            let el = [],
              ec = 0,
              eu = 2147483648;
            for (;;) {
              let s = Math.floor(((es - ec + 1) * X - 1) / eu),
                x = 0,
                et = W;
              for (; et - x > 1; ) {
                let W = (x + et) >>> 1;
                s < ee[W] ? (et = W) : (x = W);
              }
              if (0 == x) break;
              el.push(x);
              let er = ec + Math.floor((eu * ee[x]) / X),
                ei = ec + Math.floor((eu * ee[x + 1]) / X) - 1;
              for (; ((er ^ ei) & 1073741824) == 0; )
                (es = ((es << 1) & ea) | read_bit()),
                  (er = (er << 1) & ea),
                  (ei = ((ei << 1) & ea) | 1);
              for (; er & ~ei & 536870912; )
                (es =
                  (1073741824 & es) | ((es << 1) & (ea >>> 1)) | read_bit()),
                  (er = (er << 1) ^ 1073741824),
                  (ei = ((1073741824 ^ ei) << 1) | 1073741825);
              (ec = er), (eu = 1 + ei - er);
            }
            let ed = W - 4;
            return el.map((x) => {
              switch (x - ed) {
                case 3:
                  return (
                    ed + 65792 + ((s[er++] << 16) | (s[er++] << 8) | s[er++])
                  );
                case 2:
                  return ed + 256 + ((s[er++] << 8) | s[er++]);
                case 1:
                  return ed + s[er++];
                default:
                  return x - 1;
              }
            });
          })(
            (function (s) {
              let x = [];
              [
                ..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
              ].forEach((s, W) => (x[s.charCodeAt(0)] = W));
              let W = s.length,
                X = new Uint8Array((6 * W) >> 3);
              for (let ee = 0, et = 0, er = 0, ei = 0; ee < W; ee++)
                (ei = (ei << 6) | x[s.charCodeAt(ee)]),
                  (er += 6) >= 8 && (X[et++] = ei >> (er -= 8));
              return X;
            })(s)
          )),
          (W = 0),
          () => x[W++]
        );
      }
      function read_sorted(s, x = 0) {
        let W = [];
        for (;;) {
          let X = s(),
            ee = s();
          if (!ee) break;
          x += X;
          for (let s = 0; s < ee; s++) W.push(x + s);
          x += ee + 1;
        }
        return W;
      }
      function read_sorted_arrays(s) {
        return read_array_while(() => {
          let x = read_sorted(s);
          if (x.length) return x;
        });
      }
      function read_mapped(s) {
        let x = [];
        for (;;) {
          let W = s();
          if (0 == W) break;
          x.push(
            (function (s, x) {
              let W = 1 + x(),
                X = x(),
                ee = read_array_while(x);
              return read_transposed(ee.length, 1 + s, x).flatMap((s, x) => {
                let [et, ...er] = s;
                return Array(ee[x])
                  .fill()
                  .map((s, x) => {
                    let ee = x * X;
                    return [et + x * W, er.map((s) => s + ee)];
                  });
              });
            })(W, s)
          );
        }
        for (;;) {
          let W = s() - 1;
          if (W < 0) break;
          x.push(
            read_transposed(1 + s(), 1 + W, s).map((s) => [s[0], s.slice(1)])
          );
        }
        return x.flat();
      }
      function read_array_while(s) {
        let x = [];
        for (;;) {
          let W = s(x.length);
          if (!W) break;
          x.push(W);
        }
        return x;
      }
      function read_transposed(s, x, W) {
        let X = Array(s)
          .fill()
          .map(() => []);
        for (let ee = 0; ee < x; ee++)
          (function (s, x) {
            let W = Array(s);
            for (let ee = 0, et = 0; ee < s; ee++) {
              var X;
              W[ee] = et += 1 & (X = x()) ? ~X >> 1 : X >> 1;
            }
            return W;
          })(s, W).forEach((s, x) => X[x].push(s));
        return X;
      }
      function quote_cp(s) {
        return `{${s.toString(16).toUpperCase().padStart(2, "0")}}`;
      }
      function str_from_cps(s) {
        let x = s.length;
        if (x < 4096) return String.fromCodePoint(...s);
        let W = [];
        for (let X = 0; X < x; )
          W.push(String.fromCodePoint(...s.slice(X, (X += 4096))));
        return W.join("");
      }
      function compare_arrays(s, x) {
        let W = s.length,
          X = W - x.length;
        for (let ee = 0; 0 == X && ee < W; ee++) X = s[ee] - x[ee];
        return X;
      }
      function unpack_cc(s) {
        return (s >> 24) & 255;
      }
      function unpack_cp(s) {
        return 16777215 & s;
      }
      function is_hangul(s) {
        return s >= 44032 && s < 55204;
      }
      function decomposed(s) {
        ee ||
          (function () {
            let s = read_compressed_payload(
              "AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g"
            );
            for (let [x, W] of ((ee = new Map(
              read_sorted_arrays(s).flatMap((s, x) =>
                s.map((s) => [s, (x + 1) << 24])
              )
            )),
            (et = new Set(read_sorted(s))),
            (er = new Map()),
            (ei = new Map()),
            read_mapped(s))) {
              if (!et.has(x) && 2 == W.length) {
                let [s, X] = W,
                  ee = ei.get(s);
                ee || ((ee = new Map()), ei.set(s, ee)), ee.set(X, x);
              }
              er.set(x, W.reverse());
            }
          })();
        let x = [],
          W = [],
          X = !1;
        function add(s) {
          let W = ee.get(s);
          W && ((X = !0), (s |= W)), x.push(s);
        }
        for (let X of s)
          for (;;) {
            if (X < 128) x.push(X);
            else if (is_hangul(X)) {
              let s = X - 44032,
                x = (s / 588) | 0,
                W = ((s % 588) / 28) | 0,
                ee = s % 28;
              add(4352 + x), add(4449 + W), ee > 0 && add(4519 + ee);
            } else {
              let s = er.get(X);
              s ? W.push(...s) : add(X);
            }
            if (!W.length) break;
            X = W.pop();
          }
        if (X && x.length > 1) {
          let s = unpack_cc(x[0]);
          for (let W = 1; W < x.length; W++) {
            let X = unpack_cc(x[W]);
            if (0 == X || s <= X) {
              s = X;
              continue;
            }
            let ee = W - 1;
            for (;;) {
              let W = x[ee + 1];
              if (
                ((x[ee + 1] = x[ee]),
                (x[ee] = W),
                !ee || (s = unpack_cc(x[--ee])) <= X)
              )
                break;
            }
            s = unpack_cc(x[W]);
          }
        }
        return x;
      }
      function nfc(s) {
        return (function (s) {
          let x = [],
            W = [],
            X = -1,
            ee = 0;
          for (let et of s) {
            let s = unpack_cc(et),
              er = unpack_cp(et);
            if (-1 == X) 0 == s ? (X = er) : x.push(er);
            else if (ee > 0 && ee >= s)
              0 == s ? (x.push(X, ...W), (W.length = 0), (X = er)) : W.push(er),
                (ee = s);
            else {
              let et = (function (s, x) {
                if (s >= 4352 && s < 4371 && x >= 4449 && x < 4470)
                  return 44032 + (s - 4352) * 588 + (x - 4449) * 28;
                if (
                  is_hangul(s) &&
                  x > 4519 &&
                  x < 4547 &&
                  (s - 44032) % 28 == 0
                )
                  return s + (x - 4519);
                {
                  let W = ei.get(s);
                  return W && (W = W.get(x)) ? W : -1;
                }
              })(X, er);
              et >= 0
                ? (X = et)
                : 0 == ee && 0 == s
                ? (x.push(X), (X = er))
                : (W.push(er), (ee = s));
            }
          }
          return X >= 0 && x.push(X, ...W), x;
        })(decomposed(s));
      }
      let Array_from = (s) => Array.from(s);
      function group_has_cp(s, x) {
        return s.P.has(x) || s.Q.has(x);
      }
      let Emoji = class Emoji extends Array {
        get is_emoji() {
          return !0;
        }
      };
      function init() {
        let s, x;
        if (eo) return;
        let W = read_compressed_payload(
            ""
          ),
          read_sorted_array = () => read_sorted(W),
          read_sorted_set = () => new Set(read_sorted_array()),
          set_add_many = (s, x) => x.forEach((x) => s.add(x));
        (eo = new Map(read_mapped(W))),
          (ea = read_sorted_set()),
          (es = read_sorted_array()),
          (el = new Set(read_sorted_array().map((s) => es[s]))),
          (es = new Set(es)),
          (ec = read_sorted_set()),
          read_sorted_set();
        let X = read_sorted_arrays(W),
          ee = W(),
          read_chunked = () => {
            let s = new Set();
            return (
              read_sorted_array().forEach((x) => set_add_many(s, X[x])),
              set_add_many(s, read_sorted_array()),
              s
            );
          };
        (eu = read_array_while((s) => {
          let x = read_array_while(W).map((s) => s + 96);
          if (x.length) {
            let X = s >= ee;
            return (
              (x[0] -= 32),
              (x = str_from_cps(x)),
              X && (x = `Restricted[${x}]`),
              { N: x, P: read_chunked(), Q: read_chunked(), M: !W(), R: X }
            );
          }
        })),
          (ed = read_sorted_set()),
          (eh = new Map());
        let et = read_sorted_array()
          .concat(Array_from(ed))
          .sort((s, x) => s - x);
        for (let { V: s, M: x } of (et.forEach((s, x) => {
          let X = W(),
            ee = (et[x] = X ? et[x - X] : { V: [], M: new Map() });
          ee.V.push(s), ed.has(s) || eh.set(s, ee);
        }),
        new Set(eh.values()))) {
          let W = [];
          for (let x of s) {
            let s = eu.filter((s) => group_has_cp(s, x)),
              X = W.find(({ G: x }) => s.some((s) => x.has(s)));
            X || ((X = { G: new Set(), V: [] }), W.push(X)),
              X.V.push(x),
              set_add_many(X.G, s);
          }
          let X = W.flatMap((s) => Array_from(s.G));
          for (let { G: s, V: ee } of W) {
            let W = new Set(X.filter((x) => !s.has(x)));
            for (let s of ee) x.set(s, W);
          }
        }
        ep = new Set();
        let er = new Set(),
          add_to_union = (s) => (ep.has(s) ? er.add(s) : ep.add(s));
        for (let s of eu) {
          for (let x of s.P) add_to_union(x);
          for (let x of s.Q) add_to_union(x);
        }
        for (let s of ep) eh.has(s) || er.has(s) || eh.set(s, 1);
        for (let X of (set_add_many(ep, decomposed(ep).map(unpack_cp)),
        (ef = ((s = []),
        (x = read_sorted(W)),
        (function expand({ S: x, B: W }, X, ee) {
          if (!(4 & x) || ee !== X[X.length - 1])
            for (let et of (2 & x && (ee = X[X.length - 1]),
            1 & x && s.push(X),
            W))
              for (let s of et.Q) expand(et, [...X, s], ee);
        })(
          (function decode(s) {
            return {
              S: W(),
              B: read_array_while(() => {
                let s = read_sorted(W).map((s) => x[s]);
                if (s.length) return decode(s);
              }),
              Q: s,
            };
          })([]),
          []
        ),
        s)
          .map((s) => Emoji.from(s))
          .sort(compare_arrays)),
        (eg = new Map()),
        ef)) {
          let s = [eg];
          for (let x of X) {
            let W = s.map((s) => {
              let W = s.get(x);
              return W || ((W = new Map()), s.set(x, W)), W;
            });
            65039 === x ? s.push(...W) : (s = W);
          }
          for (let x of s) x.V = X;
        }
      }
      function quoted_cp(s) {
        return (
          (should_escape(s) ? "" : `${bidi_qq(safe_str_from_cps([s]))} `) +
          quote_cp(s)
        );
      }
      function bidi_qq(s) {
        return `"${s}"\u200E`;
      }
      function safe_str_from_cps(s, x = 1 / 0, W = quote_cp) {
        var X;
        let ee = [];
        (X = s[0]),
          init(),
          es.has(X) && ee.push("◌"),
          s.length > x &&
            ((x >>= 1), (s = [...s.slice(0, x), 8230, ...s.slice(-x)]));
        let et = 0,
          er = s.length;
        for (let x = 0; x < er; x++) {
          let X = s[x];
          should_escape(X) &&
            (ee.push(str_from_cps(s.slice(et, x))),
            ee.push(W(X)),
            (et = x + 1));
        }
        return ee.push(str_from_cps(s.slice(et, er))), ee.join("");
      }
      function should_escape(s) {
        return init(), ec.has(s);
      }
      function error_disallowed(s) {
        return Error(`disallowed character: ${quoted_cp(s)}`);
      }
      function error_group_member(s, x) {
        let W = quoted_cp(x),
          X = eu.find((s) => s.P.has(x));
        return (
          X && (W = `${X.N} ${W}`), Error(`illegal mixture: ${s.N} + ${W}`)
        );
      }
      function error_placement(s) {
        return Error(`illegal placement: ${s}`);
      }
      function filter_fe0f(s) {
        return s.filter((s) => 65039 != s);
      }
      var tH = W(83408),
        tq = W(47367),
        tV = W(74490),
        tW = W(83454);
      let tK = {
          ACCOUNT_TABS: [
            { label: "Tokens" },
            { label: "NFTs" },
            { label: "Activity" },
          ],
          SECURE_SITE_ORIGIN:
            tW.env.NEXT_PUBLIC_SECURE_SITE_ORIGIN ||
            "https://secure.walletconnect.org",
          VIEW_DIRECTION: { Next: "next", Prev: "prev" },
          DEFAULT_CONNECT_METHOD_ORDER: ["email", "social", "wallet"],
          ANIMATION_DURATIONS: {
            HeaderText: 120,
            ModalHeight: 150,
            ViewTransition: 150,
          },
        },
        tZ = {
          filterOutDuplicatesByRDNS(s) {
            let x = tH.OptionsController.state.enableEIP6963
                ? tH.ConnectorController.state.connectors
                : [],
              W = tH.MO.getRecentWallets(),
              X = x.map((s) => s.info?.rdns).filter(Boolean),
              ee = W.map((s) => s.rdns).filter(Boolean),
              et = X.concat(ee);
            if (et.includes("io.metamask.mobile") && tH.j1.isMobile()) {
              let s = et.indexOf("io.metamask.mobile");
              et[s] = "io.metamask";
            }
            let er = s.filter((s) => !et.includes(String(s?.rdns)));
            return er;
          },
          filterOutDuplicatesByIds(s) {
            let x = tH.ConnectorController.state.connectors.filter(
                (s) => "ANNOUNCED" === s.type || "INJECTED" === s.type
              ),
              W = tH.MO.getRecentWallets(),
              X = x.map((s) => s.explorerId),
              ee = W.map((s) => s.id),
              et = X.concat(ee),
              er = s.filter((s) => !et.includes(s?.id));
            return er;
          },
          filterOutDuplicateWallets(s) {
            let x = this.filterOutDuplicatesByRDNS(s),
              W = this.filterOutDuplicatesByIds(x);
            return W;
          },
          markWalletsAsInstalled(s) {
            let { connectors: x } = tH.ConnectorController.state,
              W = x
                .filter((s) => "ANNOUNCED" === s.type)
                .reduce(
                  (s, x) => (x.info?.rdns && (s[x.info.rdns] = !0), s),
                  {}
                ),
              X = s.map((s) => ({
                ...s,
                installed: !!s.rdns && !!W[s.rdns ?? ""],
              })),
              ee = X.sort((s, x) => Number(x.installed) - Number(s.installed));
            return ee;
          },
          getConnectOrderMethod(s, x) {
            let W =
                s?.connectMethodsOrder ||
                tH.OptionsController.state.features?.connectMethodsOrder,
              X = x || tH.ConnectorController.state.connectors;
            if (W) return W;
            let { injected: ee, announced: et } = tG.getConnectorsByType(X),
              er = ee.filter(tG.showConnector),
              ei = et.filter(tG.showConnector);
            return er.length || ei.length
              ? ["wallet", "email", "social"]
              : tK.DEFAULT_CONNECT_METHOD_ORDER;
          },
        },
        tG = {
          getConnectorsByType(s) {
            let { featured: x, recommended: W } = tH.ApiController.state,
              { customWallets: X } = tH.OptionsController.state,
              ee = tH.MO.getRecentWallets(),
              et = tZ.filterOutDuplicateWallets(W),
              er = tZ.filterOutDuplicateWallets(x),
              ei = s.filter((s) => "MULTI_CHAIN" === s.type),
              eo = s.filter((s) => "ANNOUNCED" === s.type),
              ea = s.filter((s) => "INJECTED" === s.type),
              es = s.filter((s) => "EXTERNAL" === s.type);
            return {
              custom: X,
              recent: ee,
              external: es,
              multiChain: ei,
              announced: eo,
              injected: ea,
              recommended: et,
              featured: er,
            };
          },
          showConnector(s) {
            if ("INJECTED" === s.type) {
              if (!tH.j1.isMobile() && "Browser Wallet" === s.name) return !1;
              let x = s.info?.rdns;
              if (
                (!x && !tH.ConnectionController.checkInstalled()) ||
                (x &&
                  tH.ApiController.state.excludedRDNS &&
                  tH.ApiController.state.excludedRDNS.includes(x))
              )
                return !1;
            }
            if ("ANNOUNCED" === s.type) {
              let x = s.info?.rdns;
              if (x && tH.ApiController.state.excludedRDNS.includes(x))
                return !1;
            }
            return !0;
          },
        };
      var tY = W(46083);
      let tQ = {
          METMASK_CONNECTOR_NAME: "MetaMask",
          TRUST_CONNECTOR_NAME: "Trust Wallet",
          SOLFLARE_CONNECTOR_NAME: "Solflare",
          PHANTOM_CONNECTOR_NAME: "Phantom",
          COIN98_CONNECTOR_NAME: "Coin98",
          MAGIC_EDEN_CONNECTOR_NAME: "Magic Eden",
          BACKPACK_CONNECTOR_NAME: "Backpack",
          BITGET_CONNECTOR_NAME: "Bitget Wallet",
          FRONTIER_CONNECTOR_NAME: "Frontier",
          EIP155: "eip155",
          CONNECTOR_TYPE_WALLET_CONNECT: "WALLET_CONNECT",
          CONNECTOR_TYPE_INJECTED: "INJECTED",
          CONNECTOR_TYPE_ANNOUNCED: "ANNOUNCED",
          CONNECTOR_TYPE_AUTH: "AUTH",
        },
        tJ = {
          ConnectorExplorerIds: {
            [tV.bq.CONNECTOR_ID.COINBASE]:
              "fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa",
            [tV.bq.CONNECTOR_ID.COINBASE_SDK]:
              "fd20dc426fb37566d803205b19bbc1d4096b248ac04548e3cfb6b3a38bd033aa",
            [tV.bq.CONNECTOR_ID.SAFE]:
              "225affb176778569276e484e1b92637ad061b01e13a048b35a9d280c3b58970f",
            [tV.bq.CONNECTOR_ID.LEDGER]:
              "19177a98252e07ddfc9af2083ba8e07ef627cb6103467ffebb3f8f4205fd7927",
            [tQ.METMASK_CONNECTOR_NAME]:
              "c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96",
            [tQ.TRUST_CONNECTOR_NAME]:
              "4622a2b2d6af1c9844944291e5e7351a6aa24cd7b23099efac1b2fd875da31a0",
            [tQ.SOLFLARE_CONNECTOR_NAME]:
              "1ca0bdd4747578705b1939af023d120677c64fe6ca76add81fda36e350605e79",
            [tQ.PHANTOM_CONNECTOR_NAME]:
              "a797aa35c0fadbfc1a53e7f675162ed5226968b44a19ee3d24385c64d1d3c393",
            [tQ.COIN98_CONNECTOR_NAME]:
              "2a3c89040ac3b723a1972a33a125b1db11e258a6975d3a61252cd64e6ea5ea01",
            [tQ.MAGIC_EDEN_CONNECTOR_NAME]:
              "8b830a2b724a9c3fbab63af6f55ed29c9dfa8a55e732dc88c80a196a2ba136c6",
            [tQ.BACKPACK_CONNECTOR_NAME]:
              "2bd8c14e035c2d48f184aaa168559e86b0e3433228d3c4075900a221785019b0",
            [tQ.BITGET_CONNECTOR_NAME]:
              "38f5d18bd8522c244bdd70cb4a68e0e718865155811c043f052fb9f1c51de662",
            [tQ.FRONTIER_CONNECTOR_NAME]:
              "85db431492aa2e8672e93f4ea7acf10c88b97b867b0d373107af63dc4880f041",
          },
          NetworkImageIds: {
            1: "ba0ba0cd-17c6-4806-ad93-f9d174f17900",
            42161: "3bff954d-5cb0-47a0-9a23-d20192e74600",
            43114: "30c46e53-e989-45fb-4549-be3bd4eb3b00",
            56: "93564157-2e8e-4ce7-81df-b264dbee9b00",
            250: "06b26297-fe0c-4733-5d6b-ffa5498aac00",
            10: "ab9c186a-c52f-464b-2906-ca59d760a400",
            137: "41d04d42-da3b-4453-8506-668cc0727900",
            100: "02b53f6a-e3d4-479e-1cb4-21178987d100",
            9001: "f926ff41-260d-4028-635e-91913fc28e00",
            324: "b310f07f-4ef7-49f3-7073-2a0a39685800",
            314: "5a73b3dd-af74-424e-cae0-0de859ee9400",
            4689: "34e68754-e536-40da-c153-6ef2e7188a00",
            1088: "3897a66d-40b9-4833-162f-a2c90531c900",
            1284: "161038da-44ae-4ec7-1208-0ea569454b00",
            1285: "f1d73bb6-5450-4e18-38f7-fb6484264a00",
            7777777: "845c60df-d429-4991-e687-91ae45791600",
            42220: "ab781bbc-ccc6-418d-d32d-789b15da1f00",
            8453: "7289c336-3981-4081-c5f4-efc26ac64a00",
            1313161554: "3ff73439-a619-4894-9262-4470c773a100",
            2020: "b8101fc0-9c19-4b6f-ec65-f6dfff106e00",
            2021: "b8101fc0-9c19-4b6f-ec65-f6dfff106e00",
            "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp":
              "a1b58899-f671-4276-6a5e-56ca5bd59700",
            "4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z":
              "a1b58899-f671-4276-6a5e-56ca5bd59700",
            EtWTRABZaYq6iMfeYKouRu166VU2xqa1:
              "a1b58899-f671-4276-6a5e-56ca5bd59700",
            "000000000019d6689c085ae165831e93":
              "21c895fa-e105-4829-9434-378bb54fa600",
          },
          ConnectorImageIds: {
            [tV.bq.CONNECTOR_ID.COINBASE]:
              "0c2840c3-5b04-4c44-9661-fbd4b49e1800",
            [tV.bq.CONNECTOR_ID.COINBASE_SDK]:
              "0c2840c3-5b04-4c44-9661-fbd4b49e1800",
            [tV.bq.CONNECTOR_ID.SAFE]: "461db637-8616-43ce-035a-d89b8a1d5800",
            [tV.bq.CONNECTOR_ID.LEDGER]: "54a1aa77-d202-4f8d-0fb2-5d2bb6db0300",
            [tV.bq.CONNECTOR_ID.WALLET_CONNECT]:
              "ef1a1fcf-7fe8-4d69-bd6d-fda1345b4400",
            [tV.bq.CONNECTOR_ID.INJECTED]:
              "07ba87ed-43aa-4adf-4540-9e6a2b9cae00",
          },
          ConnectorNamesMap: {
            [tV.bq.CONNECTOR_ID.INJECTED]: "Browser Wallet",
            [tV.bq.CONNECTOR_ID.WALLET_CONNECT]: "WalletConnect",
            [tV.bq.CONNECTOR_ID.COINBASE]: "Coinbase",
            [tV.bq.CONNECTOR_ID.COINBASE_SDK]: "Coinbase",
            [tV.bq.CONNECTOR_ID.LEDGER]: "Ledger",
            [tV.bq.CONNECTOR_ID.SAFE]: "Safe",
          },
          ConnectorTypesMap: {
            [tV.bq.CONNECTOR_ID.INJECTED]: "INJECTED",
            [tV.bq.CONNECTOR_ID.WALLET_CONNECT]: "WALLET_CONNECT",
            [tV.bq.CONNECTOR_ID.EIP6963]: "ANNOUNCED",
            [tV.bq.CONNECTOR_ID.AUTH]: "AUTH",
          },
          WalletConnectRpcChainIds: [
            1, 5, 11155111, 10, 420, 42161, 421613, 137, 80001, 42220,
            1313161554, 1313161555, 56, 97, 43114, 43113, 100, 8453, 84531,
            7777777, 999, 324, 280,
          ],
        },
        tX = {
          getCaipTokens(s) {
            if (!s) return;
            let x = {};
            return (
              Object.entries(s).forEach(([s, W]) => {
                x[`${tQ.EIP155}:${s}`] = W;
              }),
              x
            );
          },
          isLowerCaseMatch: (s, x) => s?.toLowerCase() === x?.toLowerCase(),
        },
        t0 = {
          UniversalProviderErrors: {
            UNAUTHORIZED_DOMAIN_NOT_ALLOWED: {
              message: "Unauthorized: origin not allowed",
              alertErrorKey: "INVALID_APP_CONFIGURATION",
            },
            JWT_VALIDATION_ERROR: {
              message: "JWT validation error: JWT Token is not yet valid",
              alertErrorKey: "JWT_TOKEN_NOT_VALID",
            },
            INVALID_KEY: {
              message: "Unauthorized: invalid key",
              alertErrorKey: "INVALID_PROJECT_ID",
            },
          },
          ALERT_ERRORS: {
            SWITCH_NETWORK_NOT_FOUND: {
              shortMessage: "Network Not Found",
              longMessage:
                "Network not found - please make sure it is included in 'networks' array in createAppKit function",
            },
            INVALID_APP_CONFIGURATION: {
              shortMessage: "Invalid App Configuration",
              longMessage: () =>
                `Origin ${
                  "undefined" != typeof window ? window.origin : "unknown"
                } not found on Allowlist - update configuration on cloud.reown.com`,
            },
            SOCIALS_TIMEOUT: {
              shortMessage: "Invalid App Configuration",
              longMessage: () =>
                "There was an issue loading the embedded wallet. Please verify that your domain is allowed at cloud.reown.com",
            },
            JWT_TOKEN_NOT_VALID: {
              shortMessage: "Session Expired",
              longMessage:
                "Invalid session found on UniversalProvider - please check your time settings and connect again",
            },
            INVALID_PROJECT_ID: {
              shortMessage: "Invalid App Configuration",
              longMessage: "Invalid Project ID - update configuration",
            },
            PROJECT_ID_NOT_CONFIGURED: {
              shortMessage: "Project ID Not Configured",
              longMessage:
                "Project ID Not Configured - update configuration on cloud.reown.com",
            },
          },
        };
      var t1 = W(12044);
      let t2 = {
        createLogger(s, x = "error") {
          let W = (0, t1.jI)({ level: x }),
            { logger: X } = (0, t1.Rt)({ opts: W });
          return (
            (X.error = (...x) => {
              for (let W of x)
                if (W instanceof Error) {
                  s(W, ...x);
                  return;
                }
              s(void 0, ...x);
            }),
            X
          );
        },
      };
      var t3 = W(68597),
        t5 = W(26445),
        t6 = W(62914),
        t4 = W(22319);
      let t8 = [
          "near:mainnet",
          "solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
          "eip155:1101",
          "eip155:56",
          "eip155:42161",
          "eip155:7777777",
          "eip155:59144",
          "eip155:324",
          "solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
          "eip155:5000",
          "solana:4sgjmw1sunhzsxgspuhpqldx6wiyjntz",
          "eip155:80084",
          "eip155:5003",
          "eip155:100",
          "eip155:8453",
          "eip155:42220",
          "eip155:1313161555",
          "eip155:17000",
          "eip155:1",
          "eip155:300",
          "eip155:1313161554",
          "eip155:1329",
          "eip155:84532",
          "eip155:421614",
          "eip155:11155111",
          "eip155:8217",
          "eip155:43114",
          "solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
          "eip155:999999999",
          "eip155:11155420",
          "eip155:80002",
          "eip155:97",
          "eip155:43113",
          "eip155:137",
          "eip155:10",
          "eip155:1301",
          "bip122:000000000019d6689c085ae165831e93",
          "bip122:000000000933ea01ad0ee984209779ba",
        ],
        t9 = {
          extendRpcUrlWithProjectId(s, x) {
            let W = !1;
            try {
              let x = new URL(s);
              W = "rpc.walletconnect.org" === x.host;
            } catch (s) {
              W = !1;
            }
            if (W) {
              let W = new URL(s);
              return (
                W.searchParams.has("projectId") ||
                  W.searchParams.set("projectId", x),
                W.toString()
              );
            }
            return s;
          },
          isCaipNetwork: (s) => "chainNamespace" in s && "caipNetworkId" in s,
          getChainNamespace(s) {
            return this.isCaipNetwork(s) ? s.chainNamespace : tV.bq.CHAIN.EVM;
          },
          getCaipNetworkId(s) {
            return this.isCaipNetwork(s)
              ? s.caipNetworkId
              : `${tV.bq.CHAIN.EVM}:${s.id}`;
          },
          getDefaultRpcUrl(s, x, W) {
            let X = s.rpcUrls?.default?.http?.[0];
            return t8.includes(x)
              ? (function (s, x) {
                  let W = new URL("https://rpc.walletconnect.org/v1/");
                  return (
                    W.searchParams.set("chainId", s),
                    W.searchParams.set("projectId", x),
                    W.toString()
                  );
                })(x, W)
              : X || "";
          },
          extendCaipNetwork(
            s,
            { customNetworkImageUrls: x, projectId: W, customRpc: X }
          ) {
            let ee = this.getCaipNetworkId(s),
              et = this.getChainNamespace(s),
              er = "";
            return (
              (er = X
                ? s.rpcUrls.default.http?.[0] || ""
                : this.getDefaultRpcUrl(s, ee, W)),
              {
                ...s,
                chainNamespace: et,
                caipNetworkId: ee,
                assets: {
                  imageId: tJ.NetworkImageIds[s.id],
                  imageUrl: x?.[s.id],
                },
                rpcUrls: {
                  ...s.rpcUrls,
                  default: { http: [er] },
                  chainDefault: { http: [s.rpcUrls.default.http[0] || ""] },
                },
              }
            );
          },
          extendCaipNetworks: (
            s,
            { customNetworkImageUrls: x, projectId: W, customRpcChainIds: X }
          ) =>
            s.map((s) =>
              t9.extendCaipNetwork(s, {
                customNetworkImageUrls: x,
                projectId: W,
                customRpc: X?.includes(s.id),
              })
            ),
          getViemTransport(s) {
            let x = s.rpcUrls.default.http?.[0];
            return t8.includes(s.caipNetworkId)
              ? (function (s, x = {}) {
                  let {
                    key: W = "fallback",
                    name: X = "Fallback",
                    rank: ee = !1,
                    retryCount: et,
                    retryDelay: er,
                  } = x;
                  return ({
                    chain: x,
                    pollingInterval: ei = 4e3,
                    timeout: eo,
                    ...ea
                  }) => {
                    let es = s,
                      onResponse = () => {},
                      el = (0, t4.q)(
                        {
                          key: W,
                          name: X,
                          async request({ method: s, params: W }) {
                            let fetch = async (X = 0) => {
                              let ee = es[X]({
                                ...ea,
                                chain: x,
                                retryCount: 0,
                                timeout: eo,
                              });
                              try {
                                let x = await ee.request({
                                  method: s,
                                  params: W,
                                });
                                return (
                                  onResponse({
                                    method: s,
                                    params: W,
                                    response: x,
                                    transport: ee,
                                    status: "success",
                                  }),
                                  x
                                );
                              } catch (x) {
                                if (
                                  (onResponse({
                                    error: x,
                                    method: s,
                                    params: W,
                                    transport: ee,
                                    status: "error",
                                  }),
                                  ("code" in x &&
                                    "number" == typeof x.code &&
                                    (x.code === tc.KB.code ||
                                      x.code === tc.ab.code ||
                                      t5.M_.nodeMessage.test(x.message) ||
                                      5e3 === x.code)) ||
                                    X === es.length - 1)
                                )
                                  throw x;
                                return fetch(X + 1);
                              }
                            };
                            return fetch();
                          },
                          retryCount: et,
                          retryDelay: er,
                          type: "fallback",
                        },
                        {
                          onResponse: (s) => (onResponse = s),
                          transports: es.map((s) =>
                            s({ chain: x, retryCount: 0 })
                          ),
                        }
                      );
                    if (ee) {
                      let s = "object" == typeof ee ? ee : {};
                      !(function ({
                        chain: s,
                        interval: x = 4e3,
                        onTransports: W,
                        ping: X,
                        sampleCount: ee = 10,
                        timeout: et = 1e3,
                        transports: er,
                        weights: ei = {},
                      }) {
                        let { stability: eo = 0.7, latency: ea = 0.3 } = ei,
                          es = [],
                          rankTransports_ = async () => {
                            let ei = await Promise.all(
                              er.map(async (x) => {
                                let W, ee;
                                let er = x({
                                    chain: s,
                                    retryCount: 0,
                                    timeout: et,
                                  }),
                                  ei = Date.now();
                                try {
                                  await (X
                                    ? X({ transport: er })
                                    : er.request({ method: "net_listening" })),
                                    (ee = 1);
                                } catch {
                                  ee = 0;
                                } finally {
                                  W = Date.now();
                                }
                                let eo = W - ei;
                                return { latency: eo, success: ee };
                              })
                            );
                            es.push(ei), es.length > ee && es.shift();
                            let el = Math.max(
                                ...es.map((s) =>
                                  Math.max(...s.map(({ latency: s }) => s))
                                )
                              ),
                              ec = er
                                .map((s, x) => {
                                  let W = es.map((s) => s[x].latency),
                                    X = W.reduce((s, x) => s + x, 0) / W.length,
                                    ee = es.map((s) => s[x].success),
                                    et =
                                      ee.reduce((s, x) => s + x, 0) / ee.length;
                                  return 0 === et
                                    ? [0, x]
                                    : [ea * (1 - X / el) + eo * et, x];
                                })
                                .sort((s, x) => x[0] - s[0]);
                            W(ec.map(([, s]) => er[s])),
                              await (0, t6.D)(x),
                              rankTransports_();
                          };
                        rankTransports_();
                      })({
                        chain: x,
                        interval: s.interval ?? ei,
                        onTransports: (s) => (es = s),
                        ping: s.ping,
                        sampleCount: s.sampleCount,
                        timeout: s.timeout,
                        transports: es,
                        weights: s.weights,
                      });
                    }
                    return el;
                  };
                })([
                  (0, t3.d)(x, {
                    fetchOptions: { headers: { "Content-Type": "text/plain" } },
                  }),
                  (0, t3.d)(x),
                ])
              : (0, t3.d)(x);
          },
        };
      ((e_ = eA || (eA = {})).Google = "google"),
        (e_.Github = "github"),
        (e_.Apple = "apple"),
        (e_.Facebook = "facebook"),
        (e_.X = "x"),
        (e_.Discord = "discord"),
        (e_.Farcaster = "farcaster");
      var t7 = W(69406);
      let W3mFrameProviderSingleton = class W3mFrameProviderSingleton {
        constructor() {}
        static getInstance({
          projectId: s,
          chainId: x,
          enableLogger: W,
          onTimeout: X,
        }) {
          return (
            W3mFrameProviderSingleton.instance ||
              (W3mFrameProviderSingleton.instance = new t7.Sd({
                projectId: s,
                chainId: x,
                enableLogger: W,
                onTimeout: X,
              })),
            W3mFrameProviderSingleton.instance
          );
        }
      };
      var re = W(17832),
        rt = W(73932);
      let rn = {
          eip155: void 0,
          solana: void 0,
          polkadot: void 0,
          bip122: void 0,
        },
        ro = (0, re.sj)({ providers: { ...rn }, providerIds: { ...rn } }),
        ra = {
          state: ro,
          subscribeKey: (s, x) => (0, rt.VW)(ro, s, x),
          subscribeProviders: (s) =>
            (0, re.Ld)(ro.providers, () => s(ro.providers)),
          setProvider(s, x) {
            x && (ro.providers[s] = (0, re.iH)(x));
          },
          getProvider: (s) => ro.providers[s],
          setProviderId(s, x) {
            x && (ro.providerIds[s] = x);
          },
          getProviderId: (s) => ro.providerIds[s],
          reset() {
            (ro.providers = { ...rn }), (ro.providerIds = { ...rn });
          },
          resetChain(s) {
            (ro.providers[s] = void 0), (ro.providerIds[s] = void 0);
          },
        };
      var rs = (function (s) {
        if (s.length >= 255) throw TypeError("Alphabet too long");
        let x = new Uint8Array(256);
        for (let s = 0; s < x.length; s++) x[s] = 255;
        for (let W = 0; W < s.length; W++) {
          let X = s.charAt(W),
            ee = X.charCodeAt(0);
          if (255 !== x[ee]) throw TypeError(X + " is ambiguous");
          x[ee] = W;
        }
        let W = s.length,
          X = s.charAt(0),
          ee = Math.log(W) / Math.log(256),
          et = Math.log(256) / Math.log(W);
        function decodeUnsafe(s) {
          if ("string" != typeof s) throw TypeError("Expected String");
          if (0 === s.length) return new Uint8Array();
          let et = 0,
            er = 0,
            ei = 0;
          for (; s[et] === X; ) er++, et++;
          let eo = ((s.length - et) * ee + 1) >>> 0,
            ea = new Uint8Array(eo);
          for (; s[et]; ) {
            let X = x[s.charCodeAt(et)];
            if (255 === X) return;
            let ee = 0;
            for (let s = eo - 1; (0 !== X || ee < ei) && -1 !== s; s--, ee++)
              (X += (W * ea[s]) >>> 0),
                (ea[s] = X % 256 >>> 0),
                (X = (X / 256) >>> 0);
            if (0 !== X) throw Error("Non-zero carry");
            (ei = ee), et++;
          }
          let es = eo - ei;
          for (; es !== eo && 0 === ea[es]; ) es++;
          let el = new Uint8Array(er + (eo - es)),
            ec = er;
          for (; es !== eo; ) el[ec++] = ea[es++];
          return el;
        }
        return {
          encode: function (x) {
            if (
              (x instanceof Uint8Array ||
                (ArrayBuffer.isView(x)
                  ? (x = new Uint8Array(x.buffer, x.byteOffset, x.byteLength))
                  : Array.isArray(x) && (x = Uint8Array.from(x))),
              !(x instanceof Uint8Array))
            )
              throw TypeError("Expected Uint8Array");
            if (0 === x.length) return "";
            let ee = 0,
              er = 0,
              ei = 0,
              eo = x.length;
            for (; ei !== eo && 0 === x[ei]; ) ei++, ee++;
            let ea = ((eo - ei) * et + 1) >>> 0,
              es = new Uint8Array(ea);
            for (; ei !== eo; ) {
              let s = x[ei],
                X = 0;
              for (let x = ea - 1; (0 !== s || X < er) && -1 !== x; x--, X++)
                (s += (256 * es[x]) >>> 0),
                  (es[x] = s % W >>> 0),
                  (s = (s / W) >>> 0);
              if (0 !== s) throw Error("Non-zero carry");
              (er = X), ei++;
            }
            let el = ea - er;
            for (; el !== ea && 0 === es[el]; ) el++;
            let ec = X.repeat(ee);
            for (; el < ea; ++el) ec += s.charAt(es[el]);
            return ec;
          },
          decodeUnsafe,
          decode: function (s) {
            let x = decodeUnsafe(s);
            if (x) return x;
            throw Error("Non-base" + W + " character");
          },
        };
      })("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");
      function defineChain(s) {
        return { formatters: void 0, fees: void 0, serializers: void 0, ...s };
      }
      let rl = defineChain({
          id: "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
          name: "Solana",
          network: "solana-mainnet",
          nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
          rpcUrls: { default: { http: ["https://rpc.walletconnect.org/v1"] } },
          blockExplorers: {
            default: { name: "Solscan", url: "https://solscan.io" },
          },
          testnet: !1,
          chainNamespace: "solana",
          caipNetworkId: "solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
          deprecatedCaipNetworkId: "solana:4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZ",
        }),
        rc = defineChain({
          id: "EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
          name: "Solana Devnet",
          network: "solana-devnet",
          nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
          rpcUrls: { default: { http: ["https://rpc.walletconnect.org/v1"] } },
          blockExplorers: {
            default: { name: "Solscan", url: "https://solscan.io" },
          },
          testnet: !0,
          chainNamespace: "solana",
          caipNetworkId: "solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
          deprecatedCaipNetworkId: "solana:8E9rvCKLFQia2Y35HXjjpWzj8weVo44K",
        });
      defineChain({
        id: "4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
        name: "Solana Testnet",
        network: "solana-testnet",
        nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
        rpcUrls: { default: { http: ["https://rpc.walletconnect.org/v1"] } },
        blockExplorers: {
          default: { name: "Solscan", url: "https://solscan.io" },
        },
        testnet: !0,
        chainNamespace: "solana",
        caipNetworkId: "solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
      }),
        defineChain({
          id: "000000000019d6689c085ae165831e93",
          caipNetworkId: "bip122:000000000019d6689c085ae165831e93",
          chainNamespace: "bip122",
          name: "Bitcoin",
          nativeCurrency: { name: "Bitcoin", symbol: "BTC", decimals: 8 },
          rpcUrls: { default: { http: ["https://rpc.walletconnect.org/v1"] } },
        }),
        defineChain({
          id: "000000000933ea01ad0ee984209779ba",
          caipNetworkId: "bip122:000000000933ea01ad0ee984209779ba",
          chainNamespace: "bip122",
          name: "Bitcoin Testnet",
          nativeCurrency: { name: "Bitcoin", symbol: "BTC", decimals: 8 },
          rpcUrls: { default: { http: ["https://rpc.walletconnect.org/v1"] } },
          testnet: !0,
        });
      let ru = {
        getMethodsByChainNamespace(s) {
          switch (s) {
            case "solana":
              return [
                "solana_signMessage",
                "solana_signTransaction",
                "solana_requestAccounts",
                "solana_getAccounts",
                "solana_signAllTransactions",
                "solana_signAndSendTransaction",
              ];
            case "eip155":
              return [
                "personal_sign",
                "eth_sign",
                "eth_signTransaction",
                "eth_signTypedData",
                "eth_signTypedData_v3",
                "eth_signTypedData_v4",
                "eth_sendRawTransaction",
                "eth_sendTransaction",
                "wallet_getCapabilities",
                "wallet_sendCalls",
                "wallet_showCallsStatus",
                "wallet_getCallsStatus",
                "wallet_grantPermissions",
                "wallet_revokePermissions",
                "wallet_switchEthereumChain",
              ];
            case "bip122":
              return [
                "sendTransfer",
                "signMessage",
                "signPsbt",
                "getAccountAddresses",
              ];
            default:
              return [];
          }
        },
        createNamespaces(s) {
          return s.reduce((s, x) => {
            let { id: W, chainNamespace: X, rpcUrls: ee } = x,
              et = ee.default.http[0],
              er = this.getMethodsByChainNamespace(X);
            s[X] ||
              (s[X] = {
                methods: er,
                events: ["accountsChanged", "chainChanged"],
                chains: [],
                rpcMap: {},
              });
            let ei = `${X}:${W}`,
              eo = s[X];
            switch ((eo.chains.push(ei), ei)) {
              case rl.caipNetworkId:
                eo.chains.push(rl.deprecatedCaipNetworkId);
                break;
              case rc.caipNetworkId:
                eo.chains.push(rc.deprecatedCaipNetworkId);
            }
            return eo?.rpcMap && et && (eo.rpcMap[W] = et), s;
          }, {});
        },
        resolveReownName: async (s) => {
          let x = await tH.a.resolveName(s),
            W = Object.values(x?.addresses) || [];
          return W[0]?.address || !1;
        },
        getChainsFromNamespaces: (s = {}) =>
          Object.values(s).flatMap((s) => {
            let x = s.chains || [],
              W = s.accounts.map((s) => {
                let [x, W] = s.split(":");
                return `${x}:${W}`;
              });
            return Array.from(new Set([...x, ...W]));
          }),
        isSessionEventData: (s) =>
          "object" == typeof s &&
          null !== s &&
          "id" in s &&
          "topic" in s &&
          "params" in s &&
          "object" == typeof s.params &&
          null !== s.params &&
          "chainId" in s.params &&
          "event" in s.params &&
          "object" == typeof s.params.event &&
          null !== s.params.event,
      };
      let WalletConnectConnector = class WalletConnectConnector {
        constructor({ provider: s, caipNetworks: x, namespace: W }) {
          (this.id = tV.bq.CONNECTOR_ID.WALLET_CONNECT),
            (this.name =
              tJ.ConnectorNamesMap[tV.bq.CONNECTOR_ID.WALLET_CONNECT]),
            (this.type = "WALLET_CONNECT"),
            (this.imageId =
              tJ.ConnectorImageIds[tV.bq.CONNECTOR_ID.WALLET_CONNECT]),
            (this.caipNetworks = x),
            (this.provider = s),
            (this.chain = W);
        }
        get chains() {
          return this.caipNetworks;
        }
        async connectWalletConnect() {
          let s = await this.authenticate();
          return (
            s ||
              (await this.provider.connect({
                optionalNamespaces: ru.createNamespaces(this.caipNetworks),
              })),
            {
              clientId: await this.provider.client.core.crypto.getClientId(),
              session: this.provider.session,
            }
          );
        }
        async disconnect() {
          await this.provider.disconnect();
        }
        async authenticate() {
          let s = this.chains.map((s) => s.caipNetworkId);
          return tH.wf.universalProviderAuthenticate({
            universalProvider: this.provider,
            chains: s,
            methods: rd,
          });
        }
      };
      let rd = [
        "eth_accounts",
        "eth_requestAccounts",
        "eth_sendRawTransaction",
        "eth_sign",
        "eth_signTransaction",
        "eth_signTypedData",
        "eth_signTypedData_v3",
        "eth_signTypedData_v4",
        "eth_sendTransaction",
        "personal_sign",
        "wallet_switchEthereumChain",
        "wallet_addEthereumChain",
        "wallet_getPermissions",
        "wallet_requestPermissions",
        "wallet_registerOnboarding",
        "wallet_watchAsset",
        "wallet_scanQRCode",
        "wallet_getCallsStatus",
        "wallet_sendCalls",
        "wallet_getCapabilities",
        "wallet_grantPermissions",
        "wallet_revokePermissions",
      ];
      let AdapterBlueprint = class AdapterBlueprint {
        constructor(s) {
          (this.availableConnectors = []),
            (this.eventListeners = new Map()),
            s && this.construct(s);
        }
        construct(s) {
          (this.caipNetworks = s.networks),
            (this.projectId = s.projectId),
            (this.namespace = s.namespace);
        }
        get connectors() {
          return this.availableConnectors;
        }
        get networks() {
          return this.caipNetworks || [];
        }
        setAuthProvider(s) {
          this.addConnector({
            id: tV.bq.CONNECTOR_ID.AUTH,
            type: "AUTH",
            name: tV.bq.CONNECTOR_NAMES.AUTH,
            provider: s,
            imageId: tJ.ConnectorImageIds[tV.bq.CONNECTOR_ID.AUTH],
            chain: this.namespace,
            chains: [],
          });
        }
        addConnector(...s) {
          let x = new Set();
          (this.availableConnectors = [
            ...s,
            ...this.availableConnectors,
          ].filter((s) => !x.has(s.id) && (x.add(s.id), !0))),
            this.emit("connectors", this.availableConnectors);
        }
        setStatus(s, x) {
          tH.AccountController.setStatus(s, x);
        }
        on(s, x) {
          this.eventListeners.has(s) || this.eventListeners.set(s, new Set()),
            this.eventListeners.get(s)?.add(x);
        }
        off(s, x) {
          let W = this.eventListeners.get(s);
          W && W.delete(x);
        }
        removeAllEventListeners() {
          this.eventListeners.forEach((s) => {
            s.clear();
          });
        }
        emit(s, x) {
          let W = this.eventListeners.get(s);
          W && W.forEach((s) => s(x));
        }
        async connectWalletConnect(s) {
          let x = this.getWalletConnectConnector(),
            W = await x.connectWalletConnect();
          return { clientId: W.clientId };
        }
        async switchNetwork(s) {
          let { caipNetwork: x, providerType: W } = s;
          if (!s.provider) return;
          let X = "provider" in s.provider ? s.provider.provider : s.provider;
          if ("WALLET_CONNECT" === W) {
            X.setDefaultChain(x.caipNetworkId);
            return;
          }
          if (X && "AUTH" === W) {
            await X.switchNetwork(x.caipNetworkId);
            let s = await X.getUser({
              chainId: x.caipNetworkId,
              preferredAccountType:
                tH.OptionsController.state.defaultAccountTypes[
                  x.chainNamespace
                ],
            });
            this.emit("switchNetwork", s);
          }
        }
        getWalletConnectConnector() {
          let s = this.connectors.find(
            (s) => s instanceof WalletConnectConnector
          );
          if (!s) throw Error("WalletConnectConnector not found");
          return s;
        }
      };
      let UniversalAdapter = class UniversalAdapter extends AdapterBlueprint {
        setUniversalProvider(s) {
          this.addConnector(
            new WalletConnectConnector({
              provider: s,
              caipNetworks: this.caipNetworks || [],
              namespace: this.namespace,
            })
          );
        }
        async connect(s) {
          return Promise.resolve({
            id: "WALLET_CONNECT",
            type: "WALLET_CONNECT",
            chainId: Number(s.chainId),
            provider: this.provider,
            address: "",
          });
        }
        async disconnect() {
          try {
            let s = this.getWalletConnectConnector();
            await s.disconnect();
          } catch (s) {
            console.warn("UniversalAdapter:disconnect - error", s);
          }
        }
        async getAccounts({ namespace: s }) {
          let x = this.provider,
            W =
              x?.session?.namespaces?.[s]?.accounts
                ?.map((s) => {
                  let [, , x] = s.split(":");
                  return x;
                })
                .filter((s, x, W) => W.indexOf(s) === x) || [];
          return Promise.resolve({
            accounts: W.map((x) =>
              tH.j1.createAccount(s, x, "bip122" === s ? "payment" : "eoa")
            ),
          });
        }
        async syncConnectors() {
          return Promise.resolve();
        }
        async getBalance() {
          return Promise.resolve({ balance: "0", decimals: 0, symbol: "" });
        }
        async signMessage(s) {
          let { provider: x, message: W, address: X } = s;
          if (!x)
            throw Error("UniversalAdapter:signMessage - provider is undefined");
          let ee = "";
          if (
            tH.RY.state.activeCaipNetwork?.chainNamespace === tV.bq.CHAIN.SOLANA
          ) {
            let s = await x.request(
              {
                method: "solana_signMessage",
                params: {
                  message: rs.encode(new TextEncoder().encode(W)),
                  pubkey: X,
                },
              },
              tH.RY.state.activeCaipNetwork?.caipNetworkId
            );
            ee = s.signature;
          } else
            ee = await x.request(
              { method: "personal_sign", params: [W, X] },
              tH.RY.state.activeCaipNetwork?.caipNetworkId
            );
          return { signature: ee };
        }
        async estimateGas() {
          return Promise.resolve({ gas: BigInt(0) });
        }
        async getProfile() {
          return Promise.resolve({ profileImage: "", profileName: "" });
        }
        async sendTransaction() {
          return Promise.resolve({ hash: "" });
        }
        async writeContract() {
          return Promise.resolve({ hash: "" });
        }
        async getEnsAddress() {
          return Promise.resolve({ address: !1 });
        }
        parseUnits() {
          return 0n;
        }
        formatUnits() {
          return "0";
        }
        async getCapabilities() {
          return Promise.resolve({});
        }
        async grantPermissions() {
          return Promise.resolve({});
        }
        async revokePermissions() {
          return Promise.resolve("0x");
        }
        async syncConnection() {
          return Promise.resolve({
            id: "WALLET_CONNECT",
            type: "WALLET_CONNECT",
            chainId: 1,
            provider: this.provider,
            address: "",
          });
        }
        async switchNetwork(s) {
          let { caipNetwork: x } = s,
            W = this.getWalletConnectConnector();
          W.provider.setDefaultChain(x.caipNetworkId);
        }
        getWalletConnectProvider() {
          let s = this.connectors.find((s) => "WALLET_CONNECT" === s.type),
            x = s?.provider;
          return x;
        }
      };
      let rh = !1;
      var rp = W(52284),
        rf = W(59662),
        rg = W(35592),
        __decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let W3mAccountButtonBase = class W3mAccountButtonBase extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.disabled = !1),
            (this.balance = "show"),
            (this.charsStart = 4),
            (this.charsEnd = 6),
            (this.caipAddress = tH.RY.state.activeCaipAddress),
            (this.balanceVal = tH.AccountController.state.balance),
            (this.balanceSymbol = tH.AccountController.state.balanceSymbol),
            (this.profileName = tH.AccountController.state.profileName),
            (this.profileImage = tH.AccountController.state.profileImage),
            (this.network = tH.RY.state.activeCaipNetwork),
            (this.networkImage = tH.fz.getNetworkImage(this.network)),
            (this.isSupported =
              !!tH.OptionsController.state.allowUnsupportedChain ||
              !tH.RY.state.activeChain ||
              tH.RY.checkIfSupportedNetwork(tH.RY.state.activeChain)),
            this.unsubscribe.push(
              ...[
                tH.WM.subscribeNetworkImages(() => {
                  this.networkImage = tH.fz.getNetworkImage(this.network);
                }),
                tH.RY.subscribeKey("activeCaipAddress", (s) => {
                  this.caipAddress = s;
                }),
                tH.AccountController.subscribeKey(
                  "balance",
                  (s) => (this.balanceVal = s)
                ),
                tH.AccountController.subscribeKey(
                  "balanceSymbol",
                  (s) => (this.balanceSymbol = s)
                ),
                tH.AccountController.subscribeKey(
                  "profileName",
                  (s) => (this.profileName = s)
                ),
                tH.AccountController.subscribeKey(
                  "profileImage",
                  (s) => (this.profileImage = s)
                ),
                tH.RY.subscribeKey("activeCaipNetwork", (s) => {
                  (this.network = s),
                    (this.networkImage = tH.fz.getNetworkImage(s)),
                    (this.isSupported =
                      !s?.chainNamespace ||
                      tH.RY.checkIfSupportedNetwork(s?.chainNamespace));
                }),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          if (!tH.RY.state.activeChain) return null;
          let s = "show" === this.balance,
            x = "string" != typeof this.balanceVal;
          return rp.dy`
      <wui-account-button
        .disabled=${!!this.disabled}
        .isUnsupportedChain=${
          !tH.OptionsController.state.allowUnsupportedChain && !this.isSupported
        }
        address=${(0, rg.o)(tH.j1.getPlainAddress(this.caipAddress))}
        profileName=${(0, rg.o)(this.profileName)}
        networkSrc=${(0, rg.o)(this.networkImage)}
        avatarSrc=${(0, rg.o)(this.profileImage)}
        balance=${
          s ? tH.j1.formatBalance(this.balanceVal, this.balanceSymbol) : ""
        }
        @click=${this.onClick.bind(this)}
        data-testid="account-button"
        .charsStart=${this.charsStart}
        .charsEnd=${this.charsEnd}
        ?loading=${x}
      >
      </wui-account-button>
    `;
        }
        onClick() {
          this.isSupported || tH.OptionsController.state.allowUnsupportedChain
            ? tH.IN.open()
            : tH.IN.open({ view: "UnsupportedChain" });
        }
      };
      __decorate(
        [(0, rf.Cb)({ type: Boolean })],
        W3mAccountButtonBase.prototype,
        "disabled",
        void 0
      ),
        __decorate(
          [(0, rf.Cb)()],
          W3mAccountButtonBase.prototype,
          "balance",
          void 0
        ),
        __decorate(
          [(0, rf.Cb)()],
          W3mAccountButtonBase.prototype,
          "charsStart",
          void 0
        ),
        __decorate(
          [(0, rf.Cb)()],
          W3mAccountButtonBase.prototype,
          "charsEnd",
          void 0
        ),
        __decorate(
          [(0, rf.SB)()],
          W3mAccountButtonBase.prototype,
          "caipAddress",
          void 0
        ),
        __decorate(
          [(0, rf.SB)()],
          W3mAccountButtonBase.prototype,
          "balanceVal",
          void 0
        ),
        __decorate(
          [(0, rf.SB)()],
          W3mAccountButtonBase.prototype,
          "balanceSymbol",
          void 0
        ),
        __decorate(
          [(0, rf.SB)()],
          W3mAccountButtonBase.prototype,
          "profileName",
          void 0
        ),
        __decorate(
          [(0, rf.SB)()],
          W3mAccountButtonBase.prototype,
          "profileImage",
          void 0
        ),
        __decorate(
          [(0, rf.SB)()],
          W3mAccountButtonBase.prototype,
          "network",
          void 0
        ),
        __decorate(
          [(0, rf.SB)()],
          W3mAccountButtonBase.prototype,
          "networkImage",
          void 0
        ),
        __decorate(
          [(0, rf.SB)()],
          W3mAccountButtonBase.prototype,
          "isSupported",
          void 0
        );
      let rm = class extends W3mAccountButtonBase {};
      rm = __decorate([(0, tY.customElement)("w3m-account-button")], rm);
      let rw = class extends W3mAccountButtonBase {};
      rw = __decorate([(0, tY.customElement)("appkit-account-button")], rw);
      var rb = rp.iv`
  :host {
    display: block;
    width: max-content;
  }
`,
        w3m_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let W3mButtonBase = class W3mButtonBase extends rp.oi {
        constructor() {
          super(...arguments),
            (this.unsubscribe = []),
            (this.disabled = !1),
            (this.balance = void 0),
            (this.size = void 0),
            (this.label = void 0),
            (this.loadingLabel = void 0),
            (this.charsStart = 4),
            (this.charsEnd = 6),
            (this.caipAddress = tH.RY.state.activeCaipAddress),
            (this.isLoading = tH.IN.state.loading);
        }
        firstUpdated() {
          this.unsubscribe.push(
            tH.RY.subscribeKey(
              "activeCaipAddress",
              (s) => (this.caipAddress = s)
            ),
            tH.IN.subscribeKey("loading", (s) => (this.isLoading = s))
          );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          return this.caipAddress && !this.isLoading
            ? rp.dy`
          <appkit-account-button
            .disabled=${!!this.disabled}
            balance=${(0, rg.o)(this.balance)}
            .charsStart=${(0, rg.o)(this.charsStart)}
            .charsEnd=${(0, rg.o)(this.charsEnd)}
          >
          </appkit-account-button>
        `
            : rp.dy`
          <appkit-connect-button
            size=${(0, rg.o)(this.size)}
            label=${(0, rg.o)(this.label)}
            loadingLabel=${(0, rg.o)(this.loadingLabel)}
          ></appkit-connect-button>
        `;
        }
      };
      (W3mButtonBase.styles = rb),
        w3m_button_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          W3mButtonBase.prototype,
          "disabled",
          void 0
        ),
        w3m_button_decorate(
          [(0, rf.Cb)()],
          W3mButtonBase.prototype,
          "balance",
          void 0
        ),
        w3m_button_decorate(
          [(0, rf.Cb)()],
          W3mButtonBase.prototype,
          "size",
          void 0
        ),
        w3m_button_decorate(
          [(0, rf.Cb)()],
          W3mButtonBase.prototype,
          "label",
          void 0
        ),
        w3m_button_decorate(
          [(0, rf.Cb)()],
          W3mButtonBase.prototype,
          "loadingLabel",
          void 0
        ),
        w3m_button_decorate(
          [(0, rf.Cb)()],
          W3mButtonBase.prototype,
          "charsStart",
          void 0
        ),
        w3m_button_decorate(
          [(0, rf.Cb)()],
          W3mButtonBase.prototype,
          "charsEnd",
          void 0
        ),
        w3m_button_decorate(
          [(0, rf.SB)()],
          W3mButtonBase.prototype,
          "caipAddress",
          void 0
        ),
        w3m_button_decorate(
          [(0, rf.SB)()],
          W3mButtonBase.prototype,
          "isLoading",
          void 0
        );
      let rv = class extends W3mButtonBase {};
      rv = w3m_button_decorate([(0, tY.customElement)("w3m-button")], rv);
      let ry = class extends W3mButtonBase {};
      ry = w3m_button_decorate([(0, tY.customElement)("appkit-button")], ry);
      var w3m_connect_button_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let W3mConnectButtonBase = class W3mConnectButtonBase extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.size = "md"),
            (this.label = "Connect Wallet"),
            (this.loadingLabel = "Connecting..."),
            (this.open = tH.IN.state.open),
            (this.loading = tH.IN.state.loading),
            this.unsubscribe.push(
              tH.IN.subscribe((s) => {
                (this.open = s.open), (this.loading = s.loading);
              })
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.loading || this.open;
          return rp.dy`
      <wui-connect-button
        size=${(0, rg.o)(this.size)}
        .loading=${s}
        @click=${this.onClick.bind(this)}
        data-testid="connect-button"
      >
        ${s ? this.loadingLabel : this.label}
      </wui-connect-button>
    `;
        }
        onClick() {
          this.open ? tH.IN.close() : this.loading || tH.IN.open();
        }
      };
      w3m_connect_button_decorate(
        [(0, rf.Cb)()],
        W3mConnectButtonBase.prototype,
        "size",
        void 0
      ),
        w3m_connect_button_decorate(
          [(0, rf.Cb)()],
          W3mConnectButtonBase.prototype,
          "label",
          void 0
        ),
        w3m_connect_button_decorate(
          [(0, rf.Cb)()],
          W3mConnectButtonBase.prototype,
          "loadingLabel",
          void 0
        ),
        w3m_connect_button_decorate(
          [(0, rf.SB)()],
          W3mConnectButtonBase.prototype,
          "open",
          void 0
        ),
        w3m_connect_button_decorate(
          [(0, rf.SB)()],
          W3mConnectButtonBase.prototype,
          "loading",
          void 0
        );
      let r_ = class extends W3mConnectButtonBase {};
      r_ = w3m_connect_button_decorate(
        [(0, tY.customElement)("w3m-connect-button")],
        r_
      );
      let rC = class extends W3mConnectButtonBase {};
      rC = w3m_connect_button_decorate(
        [(0, tY.customElement)("appkit-connect-button")],
        rC
      );
      var rx = rp.iv`
  :host {
    display: block;
    width: max-content;
  }
`,
        w3m_network_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let W3mNetworkButtonBase = class W3mNetworkButtonBase extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.disabled = !1),
            (this.network = tH.RY.state.activeCaipNetwork),
            (this.networkImage = tH.fz.getNetworkImage(this.network)),
            (this.caipAddress = tH.RY.state.activeCaipAddress),
            (this.loading = tH.IN.state.loading),
            (this.isSupported =
              !!tH.OptionsController.state.allowUnsupportedChain ||
              !tH.RY.state.activeChain ||
              tH.RY.checkIfSupportedNetwork(tH.RY.state.activeChain)),
            this.unsubscribe.push(
              ...[
                tH.WM.subscribeNetworkImages(() => {
                  this.networkImage = tH.fz.getNetworkImage(this.network);
                }),
                tH.RY.subscribeKey("activeCaipAddress", (s) => {
                  this.caipAddress = s;
                }),
                tH.RY.subscribeKey("activeCaipNetwork", (s) => {
                  (this.network = s),
                    (this.networkImage = tH.fz.getNetworkImage(s)),
                    (this.isSupported =
                      !s?.chainNamespace ||
                      tH.RY.checkIfSupportedNetwork(s.chainNamespace));
                }),
                tH.IN.subscribeKey("loading", (s) => (this.loading = s)),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s =
            !this.network ||
            tH.RY.checkIfSupportedNetwork(this.network.chainNamespace);
          return rp.dy`
      <wui-network-button
        .disabled=${!!(this.disabled || this.loading)}
        .isUnsupportedChain=${
          !tH.OptionsController.state.allowUnsupportedChain && !s
        }
        imageSrc=${(0, rg.o)(this.networkImage)}
        @click=${this.onClick.bind(this)}
        data-testid="w3m-network-button"
      >
        ${this.getLabel()}
        <slot></slot>
      </wui-network-button>
    `;
        }
        getLabel() {
          return this.network
            ? this.isSupported ||
              tH.OptionsController.state.allowUnsupportedChain
              ? this.network.name
              : "Switch Network"
            : this.label
            ? this.label
            : this.caipAddress
            ? "Unknown Network"
            : "Select Network";
        }
        onClick() {
          this.loading ||
            (tH.Xs.sendEvent({ type: "track", event: "CLICK_NETWORKS" }),
            tH.IN.open({ view: "Networks" }));
        }
      };
      (W3mNetworkButtonBase.styles = rx),
        w3m_network_button_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          W3mNetworkButtonBase.prototype,
          "disabled",
          void 0
        ),
        w3m_network_button_decorate(
          [(0, rf.Cb)({ type: String })],
          W3mNetworkButtonBase.prototype,
          "label",
          void 0
        ),
        w3m_network_button_decorate(
          [(0, rf.SB)()],
          W3mNetworkButtonBase.prototype,
          "network",
          void 0
        ),
        w3m_network_button_decorate(
          [(0, rf.SB)()],
          W3mNetworkButtonBase.prototype,
          "networkImage",
          void 0
        ),
        w3m_network_button_decorate(
          [(0, rf.SB)()],
          W3mNetworkButtonBase.prototype,
          "caipAddress",
          void 0
        ),
        w3m_network_button_decorate(
          [(0, rf.SB)()],
          W3mNetworkButtonBase.prototype,
          "loading",
          void 0
        ),
        w3m_network_button_decorate(
          [(0, rf.SB)()],
          W3mNetworkButtonBase.prototype,
          "isSupported",
          void 0
        );
      let rE = class extends W3mNetworkButtonBase {};
      rE = w3m_network_button_decorate(
        [(0, tY.customElement)("w3m-network-button")],
        rE
      );
      let rA = class extends W3mNetworkButtonBase {};
      rA = w3m_network_button_decorate(
        [(0, tY.customElement)("appkit-network-button")],
        rA
      );
      var rS = rp.iv`
  :host {
    --prev-height: 0px;
    --new-height: 0px;
    display: block;
  }

  div.w3m-router-container {
    transform: translateY(0);
    opacity: 1;
  }

  div.w3m-router-container[view-direction='prev'] {
    animation:
      slide-left-out 150ms forwards ease,
      slide-left-in 150ms forwards ease;
    animation-delay: 0ms, 200ms;
  }

  div.w3m-router-container[view-direction='next'] {
    animation:
      slide-right-out 150ms forwards ease,
      slide-right-in 150ms forwards ease;
    animation-delay: 0ms, 200ms;
  }

  @keyframes slide-left-out {
    from {
      transform: translateX(0px);
      opacity: 1;
    }
    to {
      transform: translateX(10px);
      opacity: 0;
    }
  }

  @keyframes slide-left-in {
    from {
      transform: translateX(-10px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slide-right-out {
    from {
      transform: translateX(0px);
      opacity: 1;
    }
    to {
      transform: translateX(-10px);
      opacity: 0;
    }
  }

  @keyframes slide-right-in {
    from {
      transform: translateX(10px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
`,
        w3m_router_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rk = class extends rp.oi {
        constructor() {
          super(),
            (this.resizeObserver = void 0),
            (this.prevHeight = "0px"),
            (this.prevHistoryLength = 1),
            (this.unsubscribe = []),
            (this.view = tH.RouterController.state.view),
            (this.viewDirection = ""),
            this.unsubscribe.push(
              tH.RouterController.subscribeKey("view", (s) =>
                this.onViewChange(s)
              )
            );
        }
        firstUpdated() {
          (this.resizeObserver = new ResizeObserver(([s]) => {
            let x = `${s?.contentRect.height}px`;
            "0px" !== this.prevHeight &&
              (this.style.setProperty("--prev-height", this.prevHeight),
              this.style.setProperty("--new-height", x),
              (this.style.animation = "w3m-view-height 150ms forwards ease"),
              (this.style.height = "auto")),
              setTimeout(() => {
                (this.prevHeight = x), (this.style.animation = "unset");
              }, tK.ANIMATION_DURATIONS.ModalHeight);
          })),
            this.resizeObserver.observe(this.getWrapper());
        }
        disconnectedCallback() {
          this.resizeObserver?.unobserve(this.getWrapper()),
            this.unsubscribe.forEach((s) => s());
        }
        render() {
          return rp.dy`<div class="w3m-router-container" view-direction="${
            this.viewDirection
          }">
      ${this.viewTemplate()}
    </div>`;
        }
        viewTemplate() {
          switch (this.view) {
            case "AccountSettings":
              return rp.dy`<w3m-account-settings-view></w3m-account-settings-view>`;
            case "Account":
              return rp.dy`<w3m-account-view></w3m-account-view>`;
            case "AllWallets":
              return rp.dy`<w3m-all-wallets-view></w3m-all-wallets-view>`;
            case "ApproveTransaction":
              return rp.dy`<w3m-approve-transaction-view></w3m-approve-transaction-view>`;
            case "BuyInProgress":
              return rp.dy`<w3m-buy-in-progress-view></w3m-buy-in-progress-view>`;
            case "ChooseAccountName":
              return rp.dy`<w3m-choose-account-name-view></w3m-choose-account-name-view>`;
            case "Connect":
            default:
              return rp.dy`<w3m-connect-view></w3m-connect-view>`;
            case "Create":
              return rp.dy`<w3m-connect-view walletGuide="explore"></w3m-connect-view>`;
            case "ConnectingWalletConnect":
              return rp.dy`<w3m-connecting-wc-view></w3m-connecting-wc-view>`;
            case "ConnectingWalletConnectBasic":
              return rp.dy`<w3m-connecting-wc-basic-view></w3m-connecting-wc-basic-view>`;
            case "ConnectingExternal":
              return rp.dy`<w3m-connecting-external-view></w3m-connecting-external-view>`;
            case "ConnectingSiwe":
              return rp.dy`<w3m-connecting-siwe-view></w3m-connecting-siwe-view>`;
            case "ConnectWallets":
              return rp.dy`<w3m-connect-wallets-view></w3m-connect-wallets-view>`;
            case "ConnectSocials":
              return rp.dy`<w3m-connect-socials-view></w3m-connect-socials-view>`;
            case "ConnectingSocial":
              return rp.dy`<w3m-connecting-social-view></w3m-connecting-social-view>`;
            case "Downloads":
              return rp.dy`<w3m-downloads-view></w3m-downloads-view>`;
            case "EmailVerifyOtp":
              return rp.dy`<w3m-email-verify-otp-view></w3m-email-verify-otp-view>`;
            case "EmailVerifyDevice":
              return rp.dy`<w3m-email-verify-device-view></w3m-email-verify-device-view>`;
            case "GetWallet":
              return rp.dy`<w3m-get-wallet-view></w3m-get-wallet-view>`;
            case "Networks":
              return rp.dy`<w3m-networks-view></w3m-networks-view>`;
            case "SwitchNetwork":
              return rp.dy`<w3m-network-switch-view></w3m-network-switch-view>`;
            case "Profile":
              return rp.dy`<w3m-profile-view></w3m-profile-view>`;
            case "SwitchAddress":
              return rp.dy`<w3m-switch-address-view></w3m-switch-address-view>`;
            case "Transactions":
              return rp.dy`<w3m-transactions-view></w3m-transactions-view>`;
            case "OnRampProviders":
              return rp.dy`<w3m-onramp-providers-view></w3m-onramp-providers-view>`;
            case "OnRampActivity":
              return rp.dy`<w3m-onramp-activity-view></w3m-onramp-activity-view>`;
            case "OnRampTokenSelect":
              return rp.dy`<w3m-onramp-token-select-view></w3m-onramp-token-select-view>`;
            case "OnRampFiatSelect":
              return rp.dy`<w3m-onramp-fiat-select-view></w3m-onramp-fiat-select-view>`;
            case "UpgradeEmailWallet":
              return rp.dy`<w3m-upgrade-wallet-view></w3m-upgrade-wallet-view>`;
            case "UpdateEmailWallet":
              return rp.dy`<w3m-update-email-wallet-view></w3m-update-email-wallet-view>`;
            case "UpdateEmailPrimaryOtp":
              return rp.dy`<w3m-update-email-primary-otp-view></w3m-update-email-primary-otp-view>`;
            case "UpdateEmailSecondaryOtp":
              return rp.dy`<w3m-update-email-secondary-otp-view></w3m-update-email-secondary-otp-view>`;
            case "UnsupportedChain":
              return rp.dy`<w3m-unsupported-chain-view></w3m-unsupported-chain-view>`;
            case "Swap":
              return rp.dy`<w3m-swap-view></w3m-swap-view>`;
            case "SwapSelectToken":
              return rp.dy`<w3m-swap-select-token-view></w3m-swap-select-token-view>`;
            case "SwapPreview":
              return rp.dy`<w3m-swap-preview-view></w3m-swap-preview-view>`;
            case "WalletSend":
              return rp.dy`<w3m-wallet-send-view></w3m-wallet-send-view>`;
            case "WalletSendSelectToken":
              return rp.dy`<w3m-wallet-send-select-token-view></w3m-wallet-send-select-token-view>`;
            case "WalletSendPreview":
              return rp.dy`<w3m-wallet-send-preview-view></w3m-wallet-send-preview-view>`;
            case "WhatIsABuy":
              return rp.dy`<w3m-what-is-a-buy-view></w3m-what-is-a-buy-view>`;
            case "WalletReceive":
              return rp.dy`<w3m-wallet-receive-view></w3m-wallet-receive-view>`;
            case "WalletCompatibleNetworks":
              return rp.dy`<w3m-wallet-compatible-networks-view></w3m-wallet-compatible-networks-view>`;
            case "WhatIsAWallet":
              return rp.dy`<w3m-what-is-a-wallet-view></w3m-what-is-a-wallet-view>`;
            case "ConnectingMultiChain":
              return rp.dy`<w3m-connecting-multi-chain-view></w3m-connecting-multi-chain-view>`;
            case "WhatIsANetwork":
              return rp.dy`<w3m-what-is-a-network-view></w3m-what-is-a-network-view>`;
            case "ConnectingFarcaster":
              return rp.dy`<w3m-connecting-farcaster-view></w3m-connecting-farcaster-view>`;
            case "SwitchActiveChain":
              return rp.dy`<w3m-switch-active-chain-view></w3m-switch-active-chain-view>`;
            case "RegisterAccountName":
              return rp.dy`<w3m-register-account-name-view></w3m-register-account-name-view>`;
            case "RegisterAccountNameSuccess":
              return rp.dy`<w3m-register-account-name-success-view></w3m-register-account-name-success-view>`;
            case "SmartSessionCreated":
              return rp.dy`<w3m-smart-session-created-view></w3m-smart-session-created-view>`;
            case "SmartSessionList":
              return rp.dy`<w3m-smart-session-list-view></w3m-smart-session-list-view>`;
            case "SIWXSignMessage":
              return rp.dy`<w3m-siwx-sign-message-view></w3m-siwx-sign-message-view>`;
          }
        }
        onViewChange(s) {
          tH.fw.hide();
          let x = tK.VIEW_DIRECTION.Next,
            { history: W } = tH.RouterController.state;
          W.length < this.prevHistoryLength && (x = tK.VIEW_DIRECTION.Prev),
            (this.prevHistoryLength = W.length),
            (this.viewDirection = x),
            setTimeout(() => {
              this.view = s;
            }, tK.ANIMATION_DURATIONS.ViewTransition);
        }
        getWrapper() {
          return this.shadowRoot?.querySelector("div");
        }
      };
      (rk.styles = rS),
        w3m_router_decorate([(0, rf.SB)()], rk.prototype, "view", void 0),
        w3m_router_decorate(
          [(0, rf.SB)()],
          rk.prototype,
          "viewDirection",
          void 0
        ),
        (rk = w3m_router_decorate([(0, tY.customElement)("w3m-router")], rk));
      var rT = rp.iv`
  :host > wui-flex {
    width: 100%;
    max-width: 360px;
  }

  :host > wui-flex > wui-flex {
    border-radius: var(--wui-border-radius-l);
    width: 100%;
  }

  .amounts-container {
    width: 100%;
  }
`,
        w3m_onramp_widget_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rI = { USD: "$", EUR: "€", GBP: "\xa3" },
        rP = [100, 250, 500, 1e3],
        rR = class extends rp.oi {
          constructor() {
            super(),
              (this.unsubscribe = []),
              (this.disabled = !1),
              (this.caipAddress = tH.RY.state.activeCaipAddress),
              (this.loading = tH.IN.state.loading),
              (this.paymentCurrency = tH.ph.state.paymentCurrency),
              (this.paymentAmount = tH.ph.state.paymentAmount),
              (this.purchaseAmount = tH.ph.state.purchaseAmount),
              (this.quoteLoading = tH.ph.state.quotesLoading),
              this.unsubscribe.push(
                ...[
                  tH.RY.subscribeKey(
                    "activeCaipAddress",
                    (s) => (this.caipAddress = s)
                  ),
                  tH.IN.subscribeKey("loading", (s) => {
                    this.loading = s;
                  }),
                  tH.ph.subscribe((s) => {
                    (this.paymentCurrency = s.paymentCurrency),
                      (this.paymentAmount = s.paymentAmount),
                      (this.purchaseAmount = s.purchaseAmount),
                      (this.quoteLoading = s.quotesLoading);
                  }),
                ]
              );
          }
          disconnectedCallback() {
            this.unsubscribe.forEach((s) => s());
          }
          render() {
            return rp.dy`
      <wui-flex flexDirection="column" justifyContent="center" alignItems="center">
        <wui-flex flexDirection="column" alignItems="center" gap="xs">
          <w3m-onramp-input
            type="Fiat"
            @inputChange=${this.onPaymentAmountChange.bind(this)}
            .value=${this.paymentAmount || 0}
          ></w3m-onramp-input>
          <w3m-onramp-input
            type="Token"
            .value=${this.purchaseAmount || 0}
            .loading=${this.quoteLoading}
          ></w3m-onramp-input>
          <wui-flex justifyContent="space-evenly" class="amounts-container" gap="xs">
            ${rP.map(
              (s) => rp.dy`<wui-button
                  variant=${this.paymentAmount === s ? "accent" : "neutral"}
                  size="md"
                  textVariant="paragraph-600"
                  fullWidth
                  @click=${() => this.selectPresetAmount(s)}
                  >${`${
                    rI[this.paymentCurrency?.id || "USD"]
                  } ${s}`}</wui-button
                >`
            )}
          </wui-flex>
          ${this.templateButton()}
        </wui-flex>
      </wui-flex>
    `;
          }
          templateButton() {
            return this.caipAddress
              ? rp.dy`<wui-button
          @click=${this.getQuotes.bind(this)}
          variant="main"
          fullWidth
          size="lg"
          borderRadius="xs"
        >
          Get quotes
        </wui-button>`
              : rp.dy`<wui-button
          @click=${this.openModal.bind(this)}
          variant="accent"
          fullWidth
          size="lg"
          borderRadius="xs"
        >
          Connect wallet
        </wui-button>`;
          }
          getQuotes() {
            this.loading || tH.IN.open({ view: "OnRampProviders" });
          }
          openModal() {
            tH.IN.open({ view: "Connect" });
          }
          async onPaymentAmountChange(s) {
            tH.ph.setPaymentAmount(Number(s.detail)), await tH.ph.getQuote();
          }
          async selectPresetAmount(s) {
            tH.ph.setPaymentAmount(s), await tH.ph.getQuote();
          }
        };
      (rR.styles = rT),
        w3m_onramp_widget_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          rR.prototype,
          "disabled",
          void 0
        ),
        w3m_onramp_widget_decorate(
          [(0, rf.SB)()],
          rR.prototype,
          "caipAddress",
          void 0
        ),
        w3m_onramp_widget_decorate(
          [(0, rf.SB)()],
          rR.prototype,
          "loading",
          void 0
        ),
        w3m_onramp_widget_decorate(
          [(0, rf.SB)()],
          rR.prototype,
          "paymentCurrency",
          void 0
        ),
        w3m_onramp_widget_decorate(
          [(0, rf.SB)()],
          rR.prototype,
          "paymentAmount",
          void 0
        ),
        w3m_onramp_widget_decorate(
          [(0, rf.SB)()],
          rR.prototype,
          "purchaseAmount",
          void 0
        ),
        w3m_onramp_widget_decorate(
          [(0, rf.SB)()],
          rR.prototype,
          "quoteLoading",
          void 0
        ),
        (rR = w3m_onramp_widget_decorate(
          [(0, tY.customElement)("w3m-onramp-widget")],
          rR
        ));
      var w3m_account_settings_view_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let rN = class extends rp.oi {
        constructor() {
          super(),
            (this.usubscribe = []),
            (this.networkImages = tH.WM.state.networkImages),
            (this.address = tH.AccountController.state.address),
            (this.profileImage = tH.AccountController.state.profileImage),
            (this.profileName = tH.AccountController.state.profileName),
            (this.network = tH.RY.state.activeCaipNetwork),
            (this.preferredAccountType =
              tH.AccountController.state.preferredAccountType),
            (this.disconnecting = !1),
            (this.loading = !1),
            (this.switched = !1),
            (this.text = ""),
            this.usubscribe.push(
              ...[
                tH.AccountController.subscribe((s) => {
                  s.address
                    ? ((this.address = s.address),
                      (this.profileImage = s.profileImage),
                      (this.profileName = s.profileName),
                      (this.preferredAccountType = s.preferredAccountType))
                    : tH.IN.close();
                }),
                tH.AccountController.subscribeKey(
                  "preferredAccountType",
                  (s) => (this.preferredAccountType = s)
                ),
                tH.RY.subscribeKey("activeCaipNetwork", (s) => {
                  s?.id && (this.network = s);
                }),
              ]
            );
        }
        disconnectedCallback() {
          this.usubscribe.forEach((s) => s());
        }
        render() {
          if (!this.address)
            throw Error("w3m-account-settings-view: No account provided");
          let s = this.networkImages[this.network?.assets?.imageId ?? ""];
          return rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        gap="l"
        .padding=${["0", "xl", "m", "xl"]}
      >
        <wui-avatar
          alt=${this.address}
          address=${this.address}
          imageSrc=${(0, rg.o)(this.profileImage)}
          size="2lg"
        ></wui-avatar>
        <wui-flex flexDirection="column" alignItems="center">
          <wui-flex gap="3xs" alignItems="center" justifyContent="center">
            <wui-text variant="title-6-600" color="fg-100" data-testid="account-settings-address">
              ${tY.UiHelperUtil.getTruncateString({
                string: this.address,
                charsStart: 4,
                charsEnd: 6,
                truncate: "middle",
              })}
            </wui-text>
            <wui-icon-link
              size="md"
              icon="copy"
              iconColor="fg-200"
              @click=${this.onCopyAddress}
            ></wui-icon-link>
          </wui-flex>
        </wui-flex>
      </wui-flex>
      <wui-flex flexDirection="column" gap="m">
        <wui-flex flexDirection="column" gap="xs" .padding=${[
          "0",
          "l",
          "m",
          "l",
        ]}>
          ${this.authCardTemplate()}
          <w3m-account-auth-button></w3m-account-auth-button>
          <wui-list-item
            .variant=${s ? "image" : "icon"}
            iconVariant="overlay"
            icon="networkPlaceholder"
            imageSrc=${(0, rg.o)(s)}
            ?chevron=${this.isAllowedNetworkSwitch()}
            @click=${this.onNetworks.bind(this)}
            data-testid="account-switch-network-button"
          >
            <wui-text variant="paragraph-500" color="fg-100">
              ${this.network?.name ?? "Unknown"}
            </wui-text>
          </wui-list-item>
          ${this.togglePreferredAccountBtnTemplate()} ${this.chooseNameButtonTemplate()}
          <wui-list-item
            variant="icon"
            iconVariant="overlay"
            icon="disconnect"
            ?chevron=${!1}
            .loading=${this.disconnecting}
            @click=${this.onDisconnect.bind(this)}
            data-testid="disconnect-button"
          >
            <wui-text variant="paragraph-500" color="fg-200">Disconnect</wui-text>
          </wui-list-item>
        </wui-flex>
      </wui-flex>
    `;
        }
        chooseNameButtonTemplate() {
          let s = this.network?.chainNamespace,
            x = tH.MO.getConnectedConnectorId(s),
            W = tH.ConnectorController.getAuthConnector(),
            X = tH.RY.checkIfNamesSupported();
          return X && W && x === tV.bq.CONNECTOR_ID.AUTH && !this.profileName
            ? rp.dy`
      <wui-list-item
        variant="icon"
        iconVariant="overlay"
        icon="id"
        iconSize="sm"
        ?chevron=${!0}
        @click=${this.onChooseName.bind(this)}
        data-testid="account-choose-name-button"
      >
        <wui-text variant="paragraph-500" color="fg-100">Choose account name </wui-text>
      </wui-list-item>
    `
            : null;
        }
        authCardTemplate() {
          let s = this.network?.chainNamespace,
            x = tH.MO.getConnectedConnectorId(s),
            W = tH.ConnectorController.getAuthConnector(),
            { origin: X } = location;
          return !W ||
            x !== tV.bq.CONNECTOR_ID.AUTH ||
            X.includes(tH.bq.SECURE_SITE)
            ? null
            : rp.dy`
      <wui-notice-card
        @click=${this.onGoToUpgradeView.bind(this)}
        label="Upgrade your wallet"
        description="Transition to a self-custodial wallet"
        icon="wallet"
        data-testid="w3m-wallet-upgrade-card"
      ></wui-notice-card>
    `;
        }
        isAllowedNetworkSwitch() {
          let s = tH.RY.getAllRequestedCaipNetworks(),
            x = !!s && s.length > 1,
            W = s?.find(({ id: s }) => s === this.network?.id);
          return x || !W;
        }
        onCopyAddress() {
          try {
            this.address &&
              (tH.j1.copyToClopboard(this.address),
              tH.SnackController.showSuccess("Address copied"));
          } catch {
            tH.SnackController.showError("Failed to copy");
          }
        }
        togglePreferredAccountBtnTemplate() {
          let s = this.network?.chainNamespace,
            x = tH.RY.checkIfSmartAccountEnabled(),
            W = tH.MO.getConnectedConnectorId(s),
            X = tH.ConnectorController.getAuthConnector();
          return X && W === tV.bq.CONNECTOR_ID.AUTH && x
            ? (this.switched ||
                (this.text =
                  this.preferredAccountType ===
                  t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT
                    ? "Switch to your EOA"
                    : "Switch to your smart account"),
              rp.dy`
      <wui-list-item
        variant="icon"
        iconVariant="overlay"
        icon="swapHorizontalBold"
        iconSize="sm"
        ?chevron=${!0}
        ?loading=${this.loading}
        @click=${this.changePreferredAccountType.bind(this)}
        data-testid="account-toggle-preferred-account-type"
      >
        <wui-text variant="paragraph-500" color="fg-100">${this.text}</wui-text>
      </wui-list-item>
    `)
            : null;
        }
        onChooseName() {
          tH.RouterController.push("ChooseAccountName");
        }
        async changePreferredAccountType() {
          let s = tH.RY.checkIfSmartAccountEnabled(),
            x =
              this.preferredAccountType !== t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT &&
              s
                ? t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT
                : t7.y_.ACCOUNT_TYPES.EOA,
            W = tH.ConnectorController.getAuthConnector();
          W &&
            ((this.loading = !0),
            await tH.ConnectionController.setPreferredAccountType(x),
            (this.text =
              x === t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT
                ? "Switch to your EOA"
                : "Switch to your smart account"),
            (this.switched = !0),
            tH.Si.resetSend(),
            (this.loading = !1),
            this.requestUpdate());
        }
        onNetworks() {
          this.isAllowedNetworkSwitch() && tH.RouterController.push("Networks");
        }
        async onDisconnect() {
          try {
            (this.disconnecting = !0),
              await tH.ConnectionController.disconnect(),
              tH.Xs.sendEvent({ type: "track", event: "DISCONNECT_SUCCESS" }),
              tH.IN.close();
          } catch {
            tH.Xs.sendEvent({ type: "track", event: "DISCONNECT_ERROR" }),
              tH.SnackController.showError("Failed to disconnect");
          } finally {
            this.disconnecting = !1;
          }
        }
        onGoToUpgradeView() {
          tH.Xs.sendEvent({ type: "track", event: "EMAIL_UPGRADE_FROM_MODAL" }),
            tH.RouterController.push("UpgradeEmailWallet");
        }
      };
      w3m_account_settings_view_decorate(
        [(0, rf.SB)()],
        rN.prototype,
        "address",
        void 0
      ),
        w3m_account_settings_view_decorate(
          [(0, rf.SB)()],
          rN.prototype,
          "profileImage",
          void 0
        ),
        w3m_account_settings_view_decorate(
          [(0, rf.SB)()],
          rN.prototype,
          "profileName",
          void 0
        ),
        w3m_account_settings_view_decorate(
          [(0, rf.SB)()],
          rN.prototype,
          "network",
          void 0
        ),
        w3m_account_settings_view_decorate(
          [(0, rf.SB)()],
          rN.prototype,
          "preferredAccountType",
          void 0
        ),
        w3m_account_settings_view_decorate(
          [(0, rf.SB)()],
          rN.prototype,
          "disconnecting",
          void 0
        ),
        w3m_account_settings_view_decorate(
          [(0, rf.SB)()],
          rN.prototype,
          "loading",
          void 0
        ),
        w3m_account_settings_view_decorate(
          [(0, rf.SB)()],
          rN.prototype,
          "switched",
          void 0
        ),
        w3m_account_settings_view_decorate(
          [(0, rf.SB)()],
          rN.prototype,
          "text",
          void 0
        ),
        (rN = w3m_account_settings_view_decorate(
          [(0, tY.customElement)("w3m-account-settings-view")],
          rN
        ));
      var w3m_account_view_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let rO = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.namespace = tH.RY.state.activeChain),
            this.unsubscribe.push(
              tH.RY.subscribeKey("activeChain", (s) => {
                this.namespace = s;
              })
            );
        }
        render() {
          if (!this.namespace) return null;
          let s = tH.MO.getConnectedConnectorId(this.namespace),
            x = tH.ConnectorController.getAuthConnector();
          return rp.dy`
      ${
        x && s === tV.bq.CONNECTOR_ID.AUTH
          ? this.walletFeaturesTemplate()
          : this.defaultTemplate()
      }
    `;
        }
        walletFeaturesTemplate() {
          return rp.dy`<w3m-account-wallet-features-widget></w3m-account-wallet-features-widget>`;
        }
        defaultTemplate() {
          return rp.dy`<w3m-account-default-widget></w3m-account-default-widget>`;
        }
      };
      w3m_account_view_decorate(
        [(0, rf.SB)()],
        rO.prototype,
        "namespace",
        void 0
      ),
        (rO = w3m_account_view_decorate(
          [(0, tY.customElement)("w3m-account-view")],
          rO
        ));
      var w3m_all_wallets_view_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let rM = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.search = ""),
            (this.onDebouncedSearch = tH.j1.debounce((s) => {
              this.search = s;
            }));
        }
        render() {
          let s = this.search.length >= 2;
          return rp.dy`
      <wui-flex .padding=${["0", "s", "s", "s"]} gap="xs">
        <wui-search-bar @inputChange=${this.onInputChange.bind(
          this
        )}></wui-search-bar>
        <wui-certified-switch
          ?checked=${this.badge}
          @click=${this.onClick.bind(this)}
          data-testid="wui-certified-switch"
        ></wui-certified-switch>
        ${this.qrButtonTemplate()}
      </wui-flex>
      ${
        s || this.badge
          ? rp.dy`<w3m-all-wallets-search
            query=${this.search}
            badge=${(0, rg.o)(this.badge)}
          ></w3m-all-wallets-search>`
          : rp.dy`<w3m-all-wallets-list badge=${(0, rg.o)(
              this.badge
            )}></w3m-all-wallets-list>`
      }
    `;
        }
        onInputChange(s) {
          this.onDebouncedSearch(s.detail);
        }
        onClick() {
          if ("certified" === this.badge) {
            this.badge = void 0;
            return;
          }
          (this.badge = "certified"),
            tH.SnackController.showSvg("Only WalletConnect certified", {
              icon: "walletConnectBrown",
              iconColor: "accent-100",
            });
        }
        qrButtonTemplate() {
          return tH.j1.isMobile()
            ? rp.dy`
        <wui-icon-box
          size="lg"
          iconSize="xl"
          iconColor="accent-100"
          backgroundColor="accent-100"
          icon="qrCode"
          background="transparent"
          border
          borderColor="wui-accent-glass-010"
          @click=${this.onWalletConnectQr.bind(this)}
        ></wui-icon-box>
      `
            : null;
        }
        onWalletConnectQr() {
          tH.RouterController.push("ConnectingWalletConnect");
        }
      };
      w3m_all_wallets_view_decorate(
        [(0, rf.SB)()],
        rM.prototype,
        "search",
        void 0
      ),
        w3m_all_wallets_view_decorate(
          [(0, rf.SB)()],
          rM.prototype,
          "badge",
          void 0
        ),
        (rM = w3m_all_wallets_view_decorate(
          [(0, tY.customElement)("w3m-all-wallets-view")],
          rM
        ));
      var rD = rp.iv`
  @keyframes shake {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(3px);
    }
    50% {
      transform: translateX(-3px);
    }
    75% {
      transform: translateX(3px);
    }
    100% {
      transform: translateX(0);
    }
  }

  wui-flex:first-child:not(:only-child) {
    position: relative;
  }

  wui-loading-thumbnail {
    position: absolute;
  }

  wui-visual {
    width: var(--wui-wallet-image-size-lg);
    height: var(--wui-wallet-image-size-lg);
    border-radius: calc(var(--wui-border-radius-5xs) * 9 - var(--wui-border-radius-xxs));
    position: relative;
    overflow: hidden;
  }

  wui-visual::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0;
    border-radius: calc(var(--wui-border-radius-5xs) * 9 - var(--wui-border-radius-xxs));
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  wui-icon-box {
    position: absolute;
    right: calc(var(--wui-spacing-3xs) * -1);
    bottom: calc(var(--wui-spacing-3xs) * -1);
    opacity: 0;
    transform: scale(0.5);
    transition:
      opacity var(--wui-ease-out-power-2) var(--wui-duration-lg),
      transform var(--wui-ease-out-power-2) var(--wui-duration-lg);
    will-change: opacity, transform;
  }

  wui-text[align='center'] {
    width: 100%;
    padding: 0px var(--wui-spacing-l);
  }

  [data-error='true'] wui-icon-box {
    opacity: 1;
    transform: scale(1);
  }

  [data-error='true'] > wui-flex:first-child {
    animation: shake 250ms cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  }

  [data-retry='false'] wui-link {
    display: none;
  }

  [data-retry='true'] wui-link {
    display: block;
    opacity: 1;
  }

  wui-link {
    padding: var(--wui-spacing-4xs) var(--wui-spacing-xxs);
  }
`,
        w3m_buy_in_progress_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rB = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.selectedOnRampProvider = tH.ph.state.selectedProvider),
            (this.uri = tH.ConnectionController.state.wcUri),
            (this.ready = !1),
            (this.showRetry = !1),
            (this.buffering = !1),
            (this.error = !1),
            (this.startTime = null),
            (this.isMobile = !1),
            (this.onRetry = void 0),
            this.unsubscribe.push(
              ...[
                tH.ph.subscribeKey("selectedProvider", (s) => {
                  this.selectedOnRampProvider = s;
                }),
              ]
            ),
            this.watchTransactions();
        }
        disconnectedCallback() {
          this.intervalId && clearInterval(this.intervalId);
        }
        render() {
          let s = "Continue in external window";
          this.error
            ? (s = "Buy failed")
            : this.selectedOnRampProvider &&
              (s = `Buy in ${this.selectedOnRampProvider?.label}`);
          let x = this.error
            ? "Buy can be declined from your side or due to and error on the provider app"
            : `We’ll notify you once your Buy is processed`;
          return rp.dy`
      <wui-flex
        data-error=${(0, rg.o)(this.error)}
        data-retry=${this.showRetry}
        flexDirection="column"
        alignItems="center"
        .padding=${["3xl", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-flex justifyContent="center" alignItems="center">
          <wui-visual
            name=${(0, rg.o)(this.selectedOnRampProvider?.name)}
            size="lg"
            class="provider-image"
          >
          </wui-visual>

          ${this.error ? null : this.loaderTemplate()}

          <wui-icon-box
            backgroundColor="error-100"
            background="opaque"
            iconColor="error-100"
            icon="close"
            size="sm"
            border
            borderColor="wui-color-bg-125"
          ></wui-icon-box>
        </wui-flex>

        <wui-flex flexDirection="column" alignItems="center" gap="xs">
          <wui-text variant="paragraph-500" color=${
            this.error ? "error-100" : "fg-100"
          }>
            ${s}
          </wui-text>
          <wui-text align="center" variant="small-500" color="fg-200">${x}</wui-text>
        </wui-flex>

        ${this.error ? this.tryAgainTemplate() : null}
      </wui-flex>

      <wui-flex .padding=${["0", "xl", "xl", "xl"]} justifyContent="center">
        <wui-link @click=${this.onCopyUri} color="fg-200">
          <wui-icon size="xs" color="fg-200" slot="iconLeft" name="copy"></wui-icon>
          Copy link
        </wui-link>
      </wui-flex>
    `;
        }
        watchTransactions() {
          this.selectedOnRampProvider &&
            "coinbase" === this.selectedOnRampProvider.name &&
            ((this.startTime = Date.now()),
            this.initializeCoinbaseTransactions());
        }
        async initializeCoinbaseTransactions() {
          await this.watchCoinbaseTransactions(),
            (this.intervalId = setInterval(
              () => this.watchCoinbaseTransactions(),
              4e3
            ));
        }
        async watchCoinbaseTransactions() {
          try {
            let s = tH.AccountController.state.address,
              x = tH.OptionsController.state.projectId;
            if (!s) throw Error("No address found");
            let W = await tH.Lr.fetchTransactions({
                account: s,
                onramp: "coinbase",
                projectId: x,
              }),
              X = W.data.filter(
                (s) =>
                  new Date(s.metadata.minedAt) > new Date(this.startTime) ||
                  "ONRAMP_TRANSACTION_STATUS_IN_PROGRESS" === s.metadata.status
              );
            X.length
              ? (clearInterval(this.intervalId),
                tH.RouterController.replace("OnRampActivity"))
              : this.startTime &&
                Date.now() - this.startTime >= 18e4 &&
                (clearInterval(this.intervalId), (this.error = !0));
          } catch (s) {
            tH.SnackController.showError(s);
          }
        }
        onTryAgain() {
          this.selectedOnRampProvider &&
            ((this.error = !1),
            tH.j1.openHref(
              this.selectedOnRampProvider.url,
              "popupWindow",
              "width=600,height=800,scrollbars=yes"
            ));
        }
        tryAgainTemplate() {
          return this.selectedOnRampProvider?.url
            ? rp.dy`<wui-button size="md" variant="accent" @click=${this.onTryAgain.bind(
                this
              )}>
      <wui-icon color="inherit" slot="iconLeft" name="refresh"></wui-icon>
      Try again
    </wui-button>`
            : null;
        }
        loaderTemplate() {
          let s =
              tH.ThemeController.state.themeVariables[
                "--w3m-border-radius-master"
              ],
            x = s ? parseInt(s.replace("px", ""), 10) : 4;
          return rp.dy`<wui-loading-thumbnail radius=${
            9 * x
          }></wui-loading-thumbnail>`;
        }
        onCopyUri() {
          if (!this.selectedOnRampProvider?.url) {
            tH.SnackController.showError("No link found"),
              tH.RouterController.goBack();
            return;
          }
          try {
            tH.j1.copyToClopboard(this.selectedOnRampProvider.url),
              tH.SnackController.showSuccess("Link copied");
          } catch {
            tH.SnackController.showError("Failed to copy");
          }
        }
      };
      (rB.styles = rD),
        w3m_buy_in_progress_view_decorate(
          [(0, rf.SB)()],
          rB.prototype,
          "intervalId",
          void 0
        ),
        w3m_buy_in_progress_view_decorate(
          [(0, rf.SB)()],
          rB.prototype,
          "selectedOnRampProvider",
          void 0
        ),
        w3m_buy_in_progress_view_decorate(
          [(0, rf.SB)()],
          rB.prototype,
          "uri",
          void 0
        ),
        w3m_buy_in_progress_view_decorate(
          [(0, rf.SB)()],
          rB.prototype,
          "ready",
          void 0
        ),
        w3m_buy_in_progress_view_decorate(
          [(0, rf.SB)()],
          rB.prototype,
          "showRetry",
          void 0
        ),
        w3m_buy_in_progress_view_decorate(
          [(0, rf.SB)()],
          rB.prototype,
          "buffering",
          void 0
        ),
        w3m_buy_in_progress_view_decorate(
          [(0, rf.SB)()],
          rB.prototype,
          "error",
          void 0
        ),
        w3m_buy_in_progress_view_decorate(
          [(0, rf.SB)()],
          rB.prototype,
          "startTime",
          void 0
        ),
        w3m_buy_in_progress_view_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          rB.prototype,
          "isMobile",
          void 0
        ),
        w3m_buy_in_progress_view_decorate(
          [(0, rf.Cb)()],
          rB.prototype,
          "onRetry",
          void 0
        ),
        (rB = w3m_buy_in_progress_view_decorate(
          [(0, tY.customElement)("w3m-buy-in-progress-view")],
          rB
        ));
      var rL = W(19005),
        rj = W(31364),
        rU = rp.iv`
  :host {
    --connect-scroll--top-opacity: 0;
    --connect-scroll--bottom-opacity: 0;
    --connect-mask-image: none;
  }

  .connect {
    max-height: clamp(360px, 470px, 80vh);
    scrollbar-width: none;
    overflow-y: scroll;
    overflow-x: hidden;
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    mask-image: var(--connect-mask-image);
  }

  .guide {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
  }

  .connect::-webkit-scrollbar {
    display: none;
  }

  .all-wallets {
    flex-flow: column;
  }

  .connect.disabled,
  .guide.disabled {
    opacity: 0.3;
    pointer-events: none;
    user-select: none;
  }

  wui-separator {
    margin: var(--wui-spacing-s) calc(var(--wui-spacing-s) * -1);
    width: calc(100% + var(--wui-spacing-s) * 2);
  }
`,
        w3m_connect_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r$ = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.connectors = tH.ConnectorController.state.connectors),
            (this.authConnector = this.connectors.find(
              (s) => "AUTH" === s.type
            )),
            (this.features = tH.OptionsController.state.features),
            (this.enableWallets = tH.OptionsController.state.enableWallets),
            (this.noAdapters = tH.RY.state.noAdapters),
            (this.walletGuide = "get-started"),
            (this.checked = !1),
            (this.isEmailEnabled =
              this.features?.email && !tH.RY.state.noAdapters),
            (this.isSocialEnabled =
              this.features?.socials &&
              this.features.socials.length > 0 &&
              !tH.RY.state.noAdapters),
            (this.isAuthEnabled = this.checkIfAuthEnabled(this.connectors)),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey("connectors", (s) => {
                (this.connectors = s),
                  (this.authConnector = this.connectors.find(
                    (s) => "AUTH" === s.type
                  )),
                  (this.isAuthEnabled = this.checkIfAuthEnabled(
                    this.connectors
                  ));
              }),
              tH.OptionsController.subscribeKey("features", (s) =>
                this.setEmailAndSocialEnableCheck(s, this.noAdapters)
              ),
              tH.OptionsController.subscribeKey(
                "enableWallets",
                (s) => (this.enableWallets = s)
              ),
              tH.RY.subscribeKey("noAdapters", (s) =>
                this.setEmailAndSocialEnableCheck(this.features, s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s()),
            this.resizeObserver?.disconnect();
          let s = this.shadowRoot?.querySelector(".connect");
          s?.removeEventListener(
            "scroll",
            this.handleConnectListScroll.bind(this)
          );
        }
        firstUpdated() {
          let s = this.shadowRoot?.querySelector(".connect");
          s &&
            (requestAnimationFrame(this.handleConnectListScroll.bind(this)),
            s?.addEventListener(
              "scroll",
              this.handleConnectListScroll.bind(this)
            ),
            (this.resizeObserver = new ResizeObserver(() => {
              this.handleConnectListScroll();
            })),
            this.resizeObserver.observe(s),
            this.handleConnectListScroll());
        }
        render() {
          let { termsConditionsUrl: s, privacyPolicyUrl: x } =
              tH.OptionsController.state,
            W = tH.OptionsController.state.features?.legalCheckbox,
            X = !!(s || x) && !!W && "get-started" === this.walletGuide,
            ee = X && !this.checked,
            et = tH.OptionsController.state.enableWalletGuide,
            er = this.enableWallets,
            ei = this.isSocialEnabled || this.authConnector,
            eo = ee ? -1 : void 0;
          return rp.dy`
      <wui-flex flexDirection="column">
        ${this.legalCheckboxTemplate()}
        <wui-flex
          data-testid="w3m-connect-scroll-view"
          flexDirection="column"
          class=${(0, rj.$)({ connect: !0, disabled: ee })}
        >
          <wui-flex
            class="connect-methods"
            flexDirection="column"
            gap="s"
            .padding=${
              ei && er && et && "get-started" === this.walletGuide
                ? ["3xs", "s", "0", "s"]
                : ["3xs", "s", "s", "s"]
            }
          >
            ${this.renderConnectMethod(eo)}
          </wui-flex>
        </wui-flex>
        ${this.guideTemplate(ee)}
        <w3m-legal-footer></w3m-legal-footer>
      </wui-flex>
    `;
        }
        setEmailAndSocialEnableCheck(s, x) {
          (this.isEmailEnabled = s?.email && !x),
            (this.isSocialEnabled = s?.socials && s.socials.length > 0 && !x),
            (this.features = s),
            (this.noAdapters = x);
        }
        checkIfAuthEnabled(s) {
          let x = s
              .filter((s) => s.type === tQ.CONNECTOR_TYPE_AUTH)
              .map((s) => s.chain),
            W = tV.bq.AUTH_CONNECTOR_SUPPORTED_CHAINS;
          return W.some((s) => x.includes(s));
        }
        renderConnectMethod(s) {
          let x = tZ.getConnectOrderMethod(this.features, this.connectors);
          return rp.dy`${x.map((x, W) => {
            switch (x) {
              case "email":
                return rp.dy`${this.emailTemplate(s)} ${this.separatorTemplate(
                  W,
                  "email"
                )}`;
              case "social":
                return rp.dy`${this.socialListTemplate(s)}
          ${this.separatorTemplate(W, "social")}`;
              case "wallet":
                return rp.dy`${this.walletListTemplate(s)}
          ${this.separatorTemplate(W, "wallet")}`;
              default:
                return null;
            }
          })}`;
        }
        checkMethodEnabled(s) {
          switch (s) {
            case "wallet":
              return this.enableWallets;
            case "social":
              return this.isSocialEnabled && this.isAuthEnabled;
            case "email":
              return this.isEmailEnabled && this.isAuthEnabled;
            default:
              return null;
          }
        }
        checkIsThereNextMethod(s) {
          let x = tZ.getConnectOrderMethod(this.features, this.connectors),
            W = x[s + 1];
          if (!W) return;
          let X = this.checkMethodEnabled(W);
          return X ? W : this.checkIsThereNextMethod(s + 1);
        }
        separatorTemplate(s, x) {
          let W = this.checkIsThereNextMethod(s),
            X = "explore" === this.walletGuide;
          switch (x) {
            case "wallet": {
              let s = this.enableWallets;
              return s && W && !X
                ? rp.dy`<wui-separator data-testid="wui-separator" text="or"></wui-separator>`
                : null;
            }
            case "email":
              return this.isAuthEnabled &&
                this.isEmailEnabled &&
                "social" !== W &&
                W
                ? rp.dy`<wui-separator
              data-testid="w3m-email-login-or-separator"
              text="or"
            ></wui-separator>`
                : null;
            case "social":
              return this.isAuthEnabled &&
                this.isSocialEnabled &&
                "email" !== W &&
                W
                ? rp.dy`<wui-separator data-testid="wui-separator" text="or"></wui-separator>`
                : null;
            default:
              return null;
          }
        }
        emailTemplate(s) {
          return this.isEmailEnabled && this.isAuthEnabled
            ? rp.dy`<w3m-email-login-widget
      walletGuide=${this.walletGuide}
      tabIdx=${(0, rg.o)(s)}
    ></w3m-email-login-widget>`
            : null;
        }
        socialListTemplate(s) {
          return this.isSocialEnabled && this.isAuthEnabled
            ? rp.dy`<w3m-social-login-widget
      walletGuide=${this.walletGuide}
      tabIdx=${(0, rg.o)(s)}
    ></w3m-social-login-widget>`
            : null;
        }
        walletListTemplate(s) {
          let x = this.enableWallets,
            W = this.features?.emailShowWallets === !1,
            X = this.features?.collapseWallets;
          if (
            !x ||
            ((tH.j1.isTelegram() || tH.j1.isSafari()) &&
              tH.j1.isIos() &&
              tH.ConnectionController.connectWalletConnect().catch((s) => ({})),
            "explore" === this.walletGuide)
          )
            return null;
          let ee =
            this.isAuthEnabled && (this.isEmailEnabled || this.isSocialEnabled);
          return ee && (W || X)
            ? rp.dy`<wui-list-button
        data-testid="w3m-collapse-wallets-button"
        tabIdx=${(0, rg.o)(s)}
        @click=${this.onContinueWalletClick.bind(this)}
        text="Continue with a wallet"
      ></wui-list-button>`
            : rp.dy`<w3m-wallet-login-list tabIdx=${(0, rg.o)(
                s
              )}></w3m-wallet-login-list>`;
        }
        guideTemplate(s = !1) {
          let x = tH.OptionsController.state.enableWalletGuide;
          if (!x) return null;
          let W = s ? -1 : void 0;
          return this.authConnector || this.isSocialEnabled
            ? rp.dy`
      ${
        "explore" !== this.walletGuide || tH.RY.state.noAdapters
          ? null
          : rp.dy`<wui-separator data-testid="wui-separator" id="explore" text="or"></wui-separator>`
      }
      <wui-flex flexDirection="column" .padding=${[
        "s",
        "0",
        "xl",
        "0",
      ]} class=${(0, rj.$)({ guide: !0, disabled: s })}>
        <w3m-wallet-guide
          tabIdx=${(0, rg.o)(W)}
          walletGuide=${this.walletGuide}
        ></w3m-wallet-guide>
      </wui-flex>
    `
            : null;
        }
        legalCheckboxTemplate() {
          return "explore" === this.walletGuide
            ? null
            : rp.dy`<w3m-legal-checkbox
      @checkboxChange=${this.onCheckboxChange.bind(this)}
      data-testid="w3m-legal-checkbox"
    ></w3m-legal-checkbox>`;
        }
        handleConnectListScroll() {
          let s = this.shadowRoot?.querySelector(".connect");
          if (!s) return;
          let x = s.scrollHeight > 470;
          x
            ? (s.style.setProperty(
                "--connect-mask-image",
                `linear-gradient(
          to bottom,
          rgba(0, 0, 0, calc(1 - var(--connect-scroll--top-opacity))) 0px,
          rgba(200, 200, 200, calc(1 - var(--connect-scroll--top-opacity))) 1px,
          black 40px,
          black calc(100% - 40px),
          rgba(155, 155, 155, calc(1 - var(--connect-scroll--bottom-opacity))) calc(100% - 1px),
          rgba(0, 0, 0, calc(1 - var(--connect-scroll--bottom-opacity))) 100%
        )`
              ),
              s.style.setProperty(
                "--connect-scroll--top-opacity",
                tY.MathUtil.interpolate([0, 50], [0, 1], s.scrollTop).toString()
              ),
              s.style.setProperty(
                "--connect-scroll--bottom-opacity",
                tY.MathUtil.interpolate(
                  [0, 50],
                  [0, 1],
                  s.scrollHeight - s.scrollTop - s.offsetHeight
                ).toString()
              ))
            : (s.style.setProperty("--connect-mask-image", "none"),
              s.style.setProperty("--connect-scroll--top-opacity", "0"),
              s.style.setProperty("--connect-scroll--bottom-opacity", "0"));
        }
        onContinueWalletClick() {
          tH.RouterController.push("ConnectWallets");
        }
        onCheckboxChange(s) {
          this.checked = !!s.detail;
        }
      };
      (r$.styles = rU),
        w3m_connect_view_decorate(
          [(0, rL.S)()],
          r$.prototype,
          "connectors",
          void 0
        ),
        w3m_connect_view_decorate(
          [(0, rL.S)()],
          r$.prototype,
          "authConnector",
          void 0
        ),
        w3m_connect_view_decorate(
          [(0, rL.S)()],
          r$.prototype,
          "features",
          void 0
        ),
        w3m_connect_view_decorate(
          [(0, rL.S)()],
          r$.prototype,
          "enableWallets",
          void 0
        ),
        w3m_connect_view_decorate(
          [(0, rL.S)()],
          r$.prototype,
          "noAdapters",
          void 0
        ),
        w3m_connect_view_decorate(
          [(0, rf.Cb)()],
          r$.prototype,
          "walletGuide",
          void 0
        ),
        w3m_connect_view_decorate(
          [(0, rL.S)()],
          r$.prototype,
          "checked",
          void 0
        ),
        w3m_connect_view_decorate(
          [(0, rL.S)()],
          r$.prototype,
          "isEmailEnabled",
          void 0
        ),
        w3m_connect_view_decorate(
          [(0, rL.S)()],
          r$.prototype,
          "isSocialEnabled",
          void 0
        ),
        w3m_connect_view_decorate(
          [(0, rL.S)()],
          r$.prototype,
          "isAuthEnabled",
          void 0
        ),
        (r$ = w3m_connect_view_decorate(
          [(0, tY.customElement)("w3m-connect-view")],
          r$
        ));
      var rF = rp.iv`
  @keyframes shake {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(3px);
    }
    50% {
      transform: translateX(-3px);
    }
    75% {
      transform: translateX(3px);
    }
    100% {
      transform: translateX(0);
    }
  }

  wui-flex:first-child:not(:only-child) {
    position: relative;
  }

  wui-loading-thumbnail {
    position: absolute;
  }

  wui-icon-box {
    position: absolute;
    right: calc(var(--wui-spacing-3xs) * -1);
    bottom: calc(var(--wui-spacing-3xs) * -1);
    opacity: 0;
    transform: scale(0.5);
    transition-property: opacity, transform;
    transition-duration: var(--wui-duration-lg);
    transition-timing-function: var(--wui-ease-out-power-2);
    will-change: opacity, transform;
  }

  wui-text[align='center'] {
    width: 100%;
    padding: 0px var(--wui-spacing-l);
  }

  [data-error='true'] wui-icon-box {
    opacity: 1;
    transform: scale(1);
  }

  [data-error='true'] > wui-flex:first-child {
    animation: shake 250ms cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  }

  [data-retry='false'] wui-link {
    display: none;
  }

  [data-retry='true'] wui-link {
    display: block;
    opacity: 1;
  }
`,
        w3m_connecting_widget_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let W3mConnectingWidget = class W3mConnectingWidget extends rp.oi {
        constructor() {
          super(),
            (this.wallet = tH.RouterController.state.data?.wallet),
            (this.connector = tH.RouterController.state.data?.connector),
            (this.timeout = void 0),
            (this.secondaryBtnIcon = "refresh"),
            (this.onConnect = void 0),
            (this.onRender = void 0),
            (this.onAutoConnect = void 0),
            (this.isWalletConnect = !0),
            (this.unsubscribe = []),
            (this.imageSrc =
              tH.fz.getWalletImage(this.wallet) ??
              tH.fz.getConnectorImage(this.connector)),
            (this.name = this.wallet?.name ?? this.connector?.name ?? "Wallet"),
            (this.isRetrying = !1),
            (this.uri = tH.ConnectionController.state.wcUri),
            (this.error = tH.ConnectionController.state.wcError),
            (this.ready = !1),
            (this.showRetry = !1),
            (this.secondaryBtnLabel = "Try again"),
            (this.secondaryLabel = "Accept connection request in the wallet"),
            (this.buffering = !1),
            (this.isMobile = !1),
            (this.onRetry = void 0),
            this.unsubscribe.push(
              ...[
                tH.ConnectionController.subscribeKey("wcUri", (s) => {
                  (this.uri = s),
                    this.isRetrying &&
                      this.onRetry &&
                      ((this.isRetrying = !1), this.onConnect?.());
                }),
                tH.ConnectionController.subscribeKey(
                  "wcError",
                  (s) => (this.error = s)
                ),
                tH.ConnectionController.subscribeKey(
                  "buffering",
                  (s) => (this.buffering = s)
                ),
              ]
            ),
            (tH.j1.isTelegram() || tH.j1.isSafari()) &&
              tH.j1.isIos() &&
              tH.ConnectionController.state.wcUri &&
              this.onConnect?.();
        }
        firstUpdated() {
          this.onAutoConnect?.(), (this.showRetry = !this.onAutoConnect);
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s()), clearTimeout(this.timeout);
        }
        render() {
          this.onRender?.(), this.onShowRetry();
          let s = this.error
              ? "Connection can be declined if a previous request is still active"
              : this.secondaryLabel,
            x = `Continue in ${this.name}`;
          return (
            this.buffering && (x = "Connecting..."),
            this.error && (x = "Connection declined"),
            rp.dy`
      <wui-flex
        data-error=${(0, rg.o)(this.error)}
        data-retry=${this.showRetry}
        flexDirection="column"
        alignItems="center"
        .padding=${["3xl", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-flex justifyContent="center" alignItems="center">
          <wui-wallet-image size="lg" imageSrc=${(0, rg.o)(
            this.imageSrc
          )}></wui-wallet-image>

          ${this.error ? null : this.loaderTemplate()}

          <wui-icon-box
            backgroundColor="error-100"
            background="opaque"
            iconColor="error-100"
            icon="close"
            size="sm"
            border
            borderColor="wui-color-bg-125"
          ></wui-icon-box>
        </wui-flex>

        <wui-flex flexDirection="column" alignItems="center" gap="xs">
          <wui-text variant="paragraph-500" color=${
            this.error ? "error-100" : "fg-100"
          }>
            ${x}
          </wui-text>
          <wui-text align="center" variant="small-500" color="fg-200">${s}</wui-text>
        </wui-flex>

        ${
          this.secondaryBtnLabel
            ? rp.dy`
              <wui-button
                variant="accent"
                size="md"
                ?disabled=${this.isRetrying || (!this.error && this.buffering)}
                @click=${this.onTryAgain.bind(this)}
                data-testid="w3m-connecting-widget-secondary-button"
              >
                <wui-icon color="inherit" slot="iconLeft" name=${
                  this.secondaryBtnIcon
                }></wui-icon>
                ${this.secondaryBtnLabel}
              </wui-button>
            `
            : null
        }
      </wui-flex>

      ${
        this.isWalletConnect
          ? rp.dy`
            <wui-flex .padding=${[
              "0",
              "xl",
              "xl",
              "xl",
            ]} justifyContent="center">
              <wui-link @click=${
                this.onCopyUri
              } color="fg-200" data-testid="wui-link-copy">
                <wui-icon size="xs" color="fg-200" slot="iconLeft" name="copy"></wui-icon>
                Copy link
              </wui-link>
            </wui-flex>
          `
          : null
      }

      <w3m-mobile-download-links .wallet=${
        this.wallet
      }></w3m-mobile-download-links>
    `
          );
        }
        onShowRetry() {
          if (this.error && !this.showRetry) {
            this.showRetry = !0;
            let s = this.shadowRoot?.querySelector("wui-button");
            s?.animate([{ opacity: 0 }, { opacity: 1 }], {
              fill: "forwards",
              easing: "ease",
            });
          }
        }
        onTryAgain() {
          this.buffering ||
            (tH.ConnectionController.setWcError(!1),
            this.onRetry
              ? ((this.isRetrying = !0), this.onRetry?.())
              : this.onConnect?.());
        }
        loaderTemplate() {
          let s =
              tH.ThemeController.state.themeVariables[
                "--w3m-border-radius-master"
              ],
            x = s ? parseInt(s.replace("px", ""), 10) : 4;
          return rp.dy`<wui-loading-thumbnail radius=${
            9 * x
          }></wui-loading-thumbnail>`;
        }
        onCopyUri() {
          try {
            this.uri &&
              (tH.j1.copyToClopboard(this.uri),
              tH.SnackController.showSuccess("Link copied"));
          } catch {
            tH.SnackController.showError("Failed to copy");
          }
        }
      };
      (W3mConnectingWidget.styles = rF),
        w3m_connecting_widget_decorate(
          [(0, rf.SB)()],
          W3mConnectingWidget.prototype,
          "isRetrying",
          void 0
        ),
        w3m_connecting_widget_decorate(
          [(0, rf.SB)()],
          W3mConnectingWidget.prototype,
          "uri",
          void 0
        ),
        w3m_connecting_widget_decorate(
          [(0, rf.SB)()],
          W3mConnectingWidget.prototype,
          "error",
          void 0
        ),
        w3m_connecting_widget_decorate(
          [(0, rf.SB)()],
          W3mConnectingWidget.prototype,
          "ready",
          void 0
        ),
        w3m_connecting_widget_decorate(
          [(0, rf.SB)()],
          W3mConnectingWidget.prototype,
          "showRetry",
          void 0
        ),
        w3m_connecting_widget_decorate(
          [(0, rf.SB)()],
          W3mConnectingWidget.prototype,
          "secondaryBtnLabel",
          void 0
        ),
        w3m_connecting_widget_decorate(
          [(0, rf.SB)()],
          W3mConnectingWidget.prototype,
          "secondaryLabel",
          void 0
        ),
        w3m_connecting_widget_decorate(
          [(0, rf.SB)()],
          W3mConnectingWidget.prototype,
          "buffering",
          void 0
        ),
        w3m_connecting_widget_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          W3mConnectingWidget.prototype,
          "isMobile",
          void 0
        ),
        w3m_connecting_widget_decorate(
          [(0, rf.Cb)()],
          W3mConnectingWidget.prototype,
          "onRetry",
          void 0
        );
      let rz = class extends W3mConnectingWidget {
        constructor() {
          if ((super(), (this.externalViewUnsubscribe = []), !this.connector))
            throw Error("w3m-connecting-view: No connector provided");
          tH.Xs.sendEvent({
            type: "track",
            event: "SELECT_WALLET",
            properties: {
              name: this.connector.name ?? "Unknown",
              platform: "browser",
            },
          }),
            (this.onConnect = this.onConnectProxy.bind(this)),
            (this.onAutoConnect = this.onConnectProxy.bind(this)),
            (this.isWalletConnect = !1),
            this.externalViewUnsubscribe.push(
              tH.RY.subscribeKey("activeCaipAddress", (s) => {
                s && tH.IN.close();
              })
            );
        }
        disconnectedCallback() {
          this.externalViewUnsubscribe.forEach((s) => s());
        }
        async onConnectProxy() {
          try {
            (this.error = !1),
              this.connector &&
                (this.connector.id !== tV.bq.CONNECTOR_ID.COINBASE_SDK ||
                  !this.error) &&
                (await tH.ConnectionController.connectExternal(
                  this.connector,
                  this.connector.chain
                ),
                tH.Xs.sendEvent({
                  type: "track",
                  event: "CONNECT_SUCCESS",
                  properties: {
                    method: "browser",
                    name: this.connector.name || "Unknown",
                  },
                }));
          } catch (s) {
            tH.Xs.sendEvent({
              type: "track",
              event: "CONNECT_ERROR",
              properties: { message: s?.message ?? "Unknown" },
            }),
              (this.error = !0);
          }
        }
      };
      rz = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-connecting-external-view")], rz);
      var rH = rp.iv`
  wui-flex,
  wui-list-wallet {
    width: 100%;
  }
`,
        w3m_connecting_multi_chain_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rq = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.activeConnector =
              tH.ConnectorController.state.activeConnector),
            this.unsubscribe.push(
              ...[
                tH.ConnectorController.subscribeKey(
                  "activeConnector",
                  (s) => (this.activeConnector = s)
                ),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          return rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        .padding=${["m", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-flex justifyContent="center" alignItems="center">
          <wui-wallet-image
            size="lg"
            imageSrc=${(0, rg.o)(tH.fz.getConnectorImage(this.activeConnector))}
          ></wui-wallet-image>
        </wui-flex>
        <wui-flex
          flexDirection="column"
          alignItems="center"
          gap="xs"
          .padding=${["0", "s", "0", "s"]}
        >
          <wui-text variant="paragraph-500" color="fg-100">
            Select Chain for ${this.activeConnector?.name}
          </wui-text>
          <wui-text align="center" variant="small-500" color="fg-200"
            >Select which chain to connect to your multi chain wallet</wui-text
          >
        </wui-flex>
        <wui-flex
          flexGrow="1"
          flexDirection="column"
          alignItems="center"
          gap="xs"
          .padding=${["xs", "0", "xs", "0"]}
        >
          ${this.networksTemplate()}
        </wui-flex>
      </wui-flex>
    `;
        }
        networksTemplate() {
          return this.activeConnector?.connectors?.map((s) =>
            s.name
              ? rp.dy`
            <wui-list-wallet
              imageSrc=${rg.o(tH.fz.getChainImage(s.chain))}
              name=${tV.bq.CHAIN_NAME_MAP[s.chain]}
              @click=${() => this.onConnector(s)}
              data-testid="wui-list-chain-${s.chain}"
            ></wui-list-wallet>
          `
              : null
          );
        }
        onConnector(s) {
          let x = this.activeConnector?.connectors?.find(
            (x) => x.chain === s.chain
          );
          if (!x) {
            tH.SnackController.showError("Failed to find connector");
            return;
          }
          "walletConnect" === x.id
            ? tH.j1.isMobile()
              ? tH.RouterController.push("AllWallets")
              : tH.RouterController.push("ConnectingWalletConnect")
            : tH.RouterController.push("ConnectingExternal", { connector: x });
        }
      };
      (rq.styles = rH),
        w3m_connecting_multi_chain_view_decorate(
          [(0, rf.SB)()],
          rq.prototype,
          "activeConnector",
          void 0
        ),
        (rq = w3m_connecting_multi_chain_view_decorate(
          [(0, tY.customElement)("w3m-connecting-multi-chain-view")],
          rq
        ));
      var w3m_connecting_wc_view_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let rV = class extends rp.oi {
        constructor() {
          super(),
            (this.interval = void 0),
            (this.lastRetry = Date.now()),
            (this.wallet = tH.RouterController.state.data?.wallet),
            (this.platform = void 0),
            (this.platforms = []),
            (this.isSiwxEnabled = !!tH.OptionsController.state.siwx),
            this.determinePlatforms(),
            this.initializeConnection(),
            (this.interval = setInterval(
              this.initializeConnection.bind(this),
              tH.bq.TEN_SEC_MS
            ));
        }
        disconnectedCallback() {
          clearTimeout(this.interval);
        }
        render() {
          return rp.dy`
      ${this.headerTemplate()}
      <div>${this.platformTemplate()}</div>
    `;
        }
        async initializeConnection(s = !1) {
          if ("browser" !== this.platform)
            try {
              let { wcPairingExpiry: x, status: W } =
                tH.ConnectionController.state;
              (s || tH.j1.isPairingExpired(x) || "connecting" === W) &&
                (await tH.ConnectionController.connectWalletConnect(),
                this.finalizeConnection(),
                this.isSiwxEnabled || tH.IN.close());
            } catch (s) {
              tH.Xs.sendEvent({
                type: "track",
                event: "CONNECT_ERROR",
                properties: { message: s?.message ?? "Unknown" },
              }),
                tH.ConnectionController.setWcError(!0),
                tH.j1.isAllowedRetry(this.lastRetry)
                  ? (tH.SnackController.showError(s.message ?? "Declined"),
                    (this.lastRetry = Date.now()),
                    this.initializeConnection(!0))
                  : tH.SnackController.showError(
                      s.message ?? "Connection error"
                    );
            }
        }
        finalizeConnection() {
          let { wcLinking: s, recentWallet: x } = tH.ConnectionController.state;
          s && tH.MO.setWalletConnectDeepLink(s),
            x && tH.MO.setAppKitRecent(x),
            tH.Xs.sendEvent({
              type: "track",
              event: "CONNECT_SUCCESS",
              properties: {
                method: s ? "mobile" : "qrcode",
                name: this.wallet?.name || "Unknown",
              },
            });
        }
        determinePlatforms() {
          if (!this.wallet) {
            this.platforms.push("qrcode"), (this.platform = "qrcode");
            return;
          }
          if (this.platform) return;
          let {
              mobile_link: s,
              desktop_link: x,
              webapp_link: W,
              injected: X,
              rdns: ee,
            } = this.wallet,
            et = X?.map(({ injected_id: s }) => s).filter(Boolean),
            er = [...(ee ? [ee] : et ?? [])],
            ei = !tH.OptionsController.state.isUniversalProvider && er.length,
            eo = tH.ConnectionController.checkInstalled(er),
            ea = ei && eo,
            es = x && !tH.j1.isMobile();
          ea && this.platforms.push("browser"),
            s && this.platforms.push(tH.j1.isMobile() ? "mobile" : "qrcode"),
            W && this.platforms.push("web"),
            es && this.platforms.push("desktop"),
            !ea && ei && this.platforms.push("unsupported"),
            (this.platform = this.platforms[0]);
        }
        platformTemplate() {
          switch (this.platform) {
            case "browser":
              return rp.dy`<w3m-connecting-wc-browser></w3m-connecting-wc-browser>`;
            case "web":
              return rp.dy`<w3m-connecting-wc-web></w3m-connecting-wc-web>`;
            case "desktop":
              return rp.dy`
          <w3m-connecting-wc-desktop .onRetry=${() =>
            this.initializeConnection(!0)}>
          </w3m-connecting-wc-desktop>
        `;
            case "mobile":
              return rp.dy`
          <w3m-connecting-wc-mobile isMobile .onRetry=${() =>
            this.initializeConnection(!0)}>
          </w3m-connecting-wc-mobile>
        `;
            case "qrcode":
              return rp.dy`<w3m-connecting-wc-qrcode></w3m-connecting-wc-qrcode>`;
            default:
              return rp.dy`<w3m-connecting-wc-unsupported></w3m-connecting-wc-unsupported>`;
          }
        }
        headerTemplate() {
          let s = this.platforms.length > 1;
          return s
            ? rp.dy`
      <w3m-connecting-header
        .platforms=${this.platforms}
        .onSelectPlatfrom=${this.onSelectPlatform.bind(this)}
      >
      </w3m-connecting-header>
    `
            : null;
        }
        async onSelectPlatform(s) {
          let x = this.shadowRoot?.querySelector("div");
          x &&
            (await x.animate([{ opacity: 1 }, { opacity: 0 }], {
              duration: 200,
              fill: "forwards",
              easing: "ease",
            }).finished,
            (this.platform = s),
            x.animate([{ opacity: 0 }, { opacity: 1 }], {
              duration: 200,
              fill: "forwards",
              easing: "ease",
            }));
        }
      };
      w3m_connecting_wc_view_decorate(
        [(0, rf.SB)()],
        rV.prototype,
        "platform",
        void 0
      ),
        w3m_connecting_wc_view_decorate(
          [(0, rf.SB)()],
          rV.prototype,
          "platforms",
          void 0
        ),
        w3m_connecting_wc_view_decorate(
          [(0, rf.SB)()],
          rV.prototype,
          "isSiwxEnabled",
          void 0
        ),
        (rV = w3m_connecting_wc_view_decorate(
          [(0, tY.customElement)("w3m-connecting-wc-view")],
          rV
        ));
      var w3m_connecting_wc_basic_view_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let rW = class extends rp.oi {
        constructor() {
          super(...arguments), (this.isMobile = tH.j1.isMobile());
        }
        render() {
          if (this.isMobile) {
            let { featured: s, recommended: x } = tH.ApiController.state,
              { customWallets: W } = tH.OptionsController.state,
              X = tH.MO.getRecentWallets(),
              ee = s.length || x.length || W?.length || X.length;
            return rp.dy`<wui-flex
        flexDirection="column"
        gap="xs"
        .margin=${["3xs", "s", "s", "s"]}
      >
        ${ee ? rp.dy`<w3m-connector-list></w3m-connector-list>` : null}
        <w3m-all-wallets-widget></w3m-all-wallets-widget>
      </wui-flex>`;
          }
          return rp.dy`<wui-flex flexDirection="column" .padding=${[
            "0",
            "0",
            "l",
            "0",
          ]}>
      <w3m-connecting-wc-view></w3m-connecting-wc-view>
      <wui-flex flexDirection="column" .padding=${["0", "m", "0", "m"]}>
        <w3m-all-wallets-widget></w3m-all-wallets-widget> </wui-flex
    ></wui-flex>`;
        }
      };
      w3m_connecting_wc_basic_view_decorate(
        [(0, rf.SB)()],
        rW.prototype,
        "isMobile",
        void 0
      ),
        (rW = w3m_connecting_wc_basic_view_decorate(
          [(0, tY.customElement)("w3m-connecting-wc-basic-view")],
          rW
        ));
      var rK = rp.iv`
  .continue-button-container {
    width: 100%;
  }
`,
        w3m_choose_account_name_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rZ = class extends rp.oi {
        constructor() {
          super(...arguments), (this.loading = !1);
        }
        render() {
          return rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        gap="xxl"
        .padding=${["0", "0", "l", "0"]}
      >
        ${this.onboardingTemplate()} ${this.buttonsTemplate()}
        <wui-link
          @click=${() => {
            tH.j1.openHref(tV.UE.URLS.FAQ, "_blank");
          }}
        >
          Learn more about names
          <wui-icon color="inherit" slot="iconRight" name="externalLink"></wui-icon>
        </wui-link>
      </wui-flex>
    `;
        }
        onboardingTemplate() {
          return rp.dy` <wui-flex
      flexDirection="column"
      gap="xxl"
      alignItems="center"
      .padding=${["0", "xxl", "0", "xxl"]}
    >
      <wui-flex gap="s" alignItems="center" justifyContent="center">
        <wui-icon-box
          icon="id"
          size="xl"
          iconSize="xxl"
          iconColor="fg-200"
          backgroundColor="fg-200"
        ></wui-icon-box>
      </wui-flex>
      <wui-flex flexDirection="column" alignItems="center" gap="s">
        <wui-text align="center" variant="medium-600" color="fg-100">
          Choose your account name
        </wui-text>
        <wui-text align="center" variant="paragraph-400" color="fg-100">
          Finally say goodbye to 0x addresses, name your account to make it easier to exchange
          assets
        </wui-text>
      </wui-flex>
    </wui-flex>`;
        }
        buttonsTemplate() {
          return rp.dy`<wui-flex
      .padding=${["0", "2l", "0", "2l"]}
      gap="s"
      class="continue-button-container"
    >
      <wui-button
        fullWidth
        .loading=${this.loading}
        size="lg"
        borderRadius="xs"
        @click=${this.handleContinue.bind(this)}
        >Choose name
      </wui-button>
    </wui-flex>`;
        }
        handleContinue() {
          tH.RouterController.push("RegisterAccountName"),
            tH.Xs.sendEvent({
              type: "track",
              event: "OPEN_ENS_FLOW",
              properties: {
                isSmartAccount:
                  tH.AccountController.state.preferredAccountType ===
                  t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
              },
            });
        }
      };
      (rZ.styles = rK),
        w3m_choose_account_name_view_decorate(
          [(0, rf.SB)()],
          rZ.prototype,
          "loading",
          void 0
        ),
        (rZ = w3m_choose_account_name_view_decorate(
          [(0, tY.customElement)("w3m-choose-account-name-view")],
          rZ
        ));
      let rG = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.wallet = tH.RouterController.state.data?.wallet);
        }
        render() {
          if (!this.wallet) throw Error("w3m-downloads-view");
          return rp.dy`
      <wui-flex gap="xs" flexDirection="column" .padding=${[
        "s",
        "s",
        "l",
        "s",
      ]}>
        ${this.chromeTemplate()} ${this.iosTemplate()} ${this.androidTemplate()}
        ${this.homepageTemplate()}
      </wui-flex>
    `;
        }
        chromeTemplate() {
          return this.wallet?.chrome_store
            ? rp.dy`<wui-list-item
      variant="icon"
      icon="chromeStore"
      iconVariant="square"
      @click=${this.onChromeStore.bind(this)}
      chevron
    >
      <wui-text variant="paragraph-500" color="fg-100">Chrome Extension</wui-text>
    </wui-list-item>`
            : null;
        }
        iosTemplate() {
          return this.wallet?.app_store
            ? rp.dy`<wui-list-item
      variant="icon"
      icon="appStore"
      iconVariant="square"
      @click=${this.onAppStore.bind(this)}
      chevron
    >
      <wui-text variant="paragraph-500" color="fg-100">iOS App</wui-text>
    </wui-list-item>`
            : null;
        }
        androidTemplate() {
          return this.wallet?.play_store
            ? rp.dy`<wui-list-item
      variant="icon"
      icon="playStore"
      iconVariant="square"
      @click=${this.onPlayStore.bind(this)}
      chevron
    >
      <wui-text variant="paragraph-500" color="fg-100">Android App</wui-text>
    </wui-list-item>`
            : null;
        }
        homepageTemplate() {
          return this.wallet?.homepage
            ? rp.dy`
      <wui-list-item
        variant="icon"
        icon="browser"
        iconVariant="square-blue"
        @click=${this.onHomePage.bind(this)}
        chevron
      >
        <wui-text variant="paragraph-500" color="fg-100">Website</wui-text>
      </wui-list-item>
    `
            : null;
        }
        onChromeStore() {
          this.wallet?.chrome_store &&
            tH.j1.openHref(this.wallet.chrome_store, "_blank");
        }
        onAppStore() {
          this.wallet?.app_store &&
            tH.j1.openHref(this.wallet.app_store, "_blank");
        }
        onPlayStore() {
          this.wallet?.play_store &&
            tH.j1.openHref(this.wallet.play_store, "_blank");
        }
        onHomePage() {
          this.wallet?.homepage &&
            tH.j1.openHref(this.wallet.homepage, "_blank");
        }
      };
      rG = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-downloads-view")], rG);
      let rY = class extends rp.oi {
        render() {
          return rp.dy`
      <wui-flex flexDirection="column" .padding=${[
        "0",
        "s",
        "s",
        "s",
      ]} gap="xs">
        ${this.recommendedWalletsTemplate()}
        <wui-list-wallet
          name="Explore all"
          showAllWallets
          walletIcon="allWallets"
          icon="externalLink"
          @click=${() => {
            tH.j1.openHref(
              "https://walletconnect.com/explorer?type=wallet",
              "_blank"
            );
          }}
        ></wui-list-wallet>
      </wui-flex>
    `;
        }
        recommendedWalletsTemplate() {
          let { recommended: s, featured: x } = tH.ApiController.state,
            { customWallets: W } = tH.OptionsController.state,
            X = [...x, ...(W ?? []), ...s].slice(0, 4);
          return X.map(
            (s) => rp.dy`
        <wui-list-wallet
          name=${s.name ?? "Unknown"}
          tagVariant="main"
          imageSrc=${(0, rg.o)(tH.fz.getWalletImage(s))}
          @click=${() => {
            tH.j1.openHref(
              s.homepage ?? "https://walletconnect.com/explorer",
              "_blank"
            );
          }}
        ></wui-list-wallet>
      `
          );
        }
      };
      rY = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-get-wallet-view")], rY);
      var rQ = W(69178),
        rJ = rp.iv`
  wui-flex {
    width: 100%;
  }

  .suggestion {
    background: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
  }

  .suggestion:hover {
    background-color: var(--wui-color-gray-glass-005);
    cursor: pointer;
  }

  .suggested-name {
    max-width: 75%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  form {
    width: 100%;
  }

  wui-icon-link {
    position: absolute;
    right: 20px;
    transform: translateY(11px);
  }
`,
        w3m_register_account_name_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rX = class extends rp.oi {
        constructor() {
          super(),
            (this.formRef = (0, rQ.V)()),
            (this.usubscribe = []),
            (this.name = ""),
            (this.error = ""),
            (this.loading = tH.a.state.loading),
            (this.suggestions = tH.a.state.suggestions),
            (this.registered = !1),
            (this.profileName = tH.AccountController.state.profileName),
            (this.onDebouncedNameInputChange = tH.j1.debounce((s) => {
              tH.a.validateName(s)
                ? ((this.error = ""),
                  (this.name = s),
                  tH.a.getSuggestions(s),
                  tH.a.isNameRegistered(s).then((s) => {
                    this.registered = s;
                  }))
                : s.length < 4
                ? (this.error = "Name must be at least 4 characters long")
                : (this.error =
                    "Can only contain letters, numbers and - characters");
            })),
            this.usubscribe.push(
              ...[
                tH.a.subscribe((s) => {
                  (this.suggestions = s.suggestions),
                    (this.loading = s.loading);
                }),
                tH.AccountController.subscribeKey("profileName", (s) => {
                  (this.profileName = s),
                    s && (this.error = "You already own a name");
                }),
              ]
            );
        }
        firstUpdated() {
          this.formRef.value?.addEventListener(
            "keydown",
            this.onEnterKey.bind(this)
          );
        }
        disconnectedCallback() {
          super.disconnectedCallback(),
            this.usubscribe.forEach((s) => s()),
            this.formRef.value?.removeEventListener(
              "keydown",
              this.onEnterKey.bind(this)
            );
        }
        render() {
          return rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        gap="m"
        .padding=${["0", "s", "m", "s"]}
      >
        <form ${(0, rQ.i)(this.formRef)} @submit=${this.onSubmitName.bind(
            this
          )}>
          <wui-ens-input
            @inputChange=${this.onNameInputChange.bind(this)}
            .errorMessage=${this.error}
            .value=${this.name}
          >
          </wui-ens-input>
          ${this.submitButtonTemplate()}
          <input type="submit" hidden />
        </form>
        ${this.templateSuggestions()}
      </wui-flex>
    `;
        }
        submitButtonTemplate() {
          let s = this.isAllowedToSubmit();
          return s
            ? rp.dy`
          <wui-icon-link
            size="sm"
            icon="chevronRight"
            iconcolor="accent-100"
            @click=${this.onSubmitName.bind(this)}
          >
          </wui-icon-link>
        `
            : null;
        }
        onSelectSuggestion(s) {
          return () => {
            (this.name = s), (this.registered = !1), this.requestUpdate();
          };
        }
        onNameInputChange(s) {
          this.onDebouncedNameInputChange(s.detail);
        }
        nameSuggestionTagTemplate() {
          return this.loading
            ? rp.dy`<wui-loading-spinner size="lg" color="fg-100"></wui-loading-spinner>`
            : this.registered
            ? rp.dy`<wui-tag variant="shade" size="lg">Registered</wui-tag>`
            : rp.dy`<wui-tag variant="success" size="lg">Available</wui-tag>`;
        }
        templateSuggestions() {
          if (!this.name || this.name.length < 4 || this.error) return null;
          let s = this.registered
            ? this.suggestions.filter((s) => s.name !== this.name)
            : [];
          return rp.dy`<wui-flex flexDirection="column" gap="xxs" alignItems="center">
      <wui-flex
        data-testid="account-name-suggestion"
        .padding=${["m", "m", "m", "m"]}
        justifyContent="space-between"
        class="suggestion"
        @click=${this.onSubmitName.bind(this)}
      >
        <wui-text color="fg-100" variant="paragraph-400" class="suggested-name">
          ${this.name}</wui-text
        >${this.nameSuggestionTagTemplate()}
      </wui-flex>
      ${s.map((s) => this.availableNameTemplate(s.name))}
    </wui-flex>`;
        }
        availableNameTemplate(s) {
          return rp.dy` <wui-flex
      data-testid="account-name-suggestion"
      .padding=${["m", "m", "m", "m"]}
      justifyContent="space-between"
      class="suggestion"
      @click=${this.onSelectSuggestion(s)}
    >
      <wui-text color="fg-100" variant="paragraph-400" class="suggested-name">
        ${s}
      </wui-text>
      <wui-tag variant="success" size="lg">Available</wui-tag>
    </wui-flex>`;
        }
        isAllowedToSubmit() {
          return (
            !this.loading &&
            !this.registered &&
            !this.error &&
            !this.profileName &&
            tH.a.validateName(this.name)
          );
        }
        async onSubmitName() {
          try {
            if (!this.isAllowedToSubmit()) return;
            let s = `${this.name}${tV.bq.WC_NAME_SUFFIX}`;
            tH.Xs.sendEvent({
              type: "track",
              event: "REGISTER_NAME_INITIATED",
              properties: {
                isSmartAccount:
                  tH.AccountController.state.preferredAccountType ===
                  t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                ensName: s,
              },
            }),
              await tH.a.registerName(s),
              tH.Xs.sendEvent({
                type: "track",
                event: "REGISTER_NAME_SUCCESS",
                properties: {
                  isSmartAccount:
                    tH.AccountController.state.preferredAccountType ===
                    t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                  ensName: s,
                },
              });
          } catch (s) {
            tH.SnackController.showError(s.message),
              tH.Xs.sendEvent({
                type: "track",
                event: "REGISTER_NAME_ERROR",
                properties: {
                  isSmartAccount:
                    tH.AccountController.state.preferredAccountType ===
                    t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                  ensName: `${this.name}${tV.bq.WC_NAME_SUFFIX}`,
                  error: s?.message || "Unknown error",
                },
              });
          }
        }
        onEnterKey(s) {
          "Enter" === s.key && this.isAllowedToSubmit() && this.onSubmitName();
        }
      };
      (rX.styles = rJ),
        w3m_register_account_name_view_decorate(
          [(0, rf.Cb)()],
          rX.prototype,
          "errorMessage",
          void 0
        ),
        w3m_register_account_name_view_decorate(
          [(0, rf.SB)()],
          rX.prototype,
          "name",
          void 0
        ),
        w3m_register_account_name_view_decorate(
          [(0, rf.SB)()],
          rX.prototype,
          "error",
          void 0
        ),
        w3m_register_account_name_view_decorate(
          [(0, rf.SB)()],
          rX.prototype,
          "loading",
          void 0
        ),
        w3m_register_account_name_view_decorate(
          [(0, rf.SB)()],
          rX.prototype,
          "suggestions",
          void 0
        ),
        w3m_register_account_name_view_decorate(
          [(0, rf.SB)()],
          rX.prototype,
          "registered",
          void 0
        ),
        w3m_register_account_name_view_decorate(
          [(0, rf.SB)()],
          rX.prototype,
          "profileName",
          void 0
        ),
        (rX = w3m_register_account_name_view_decorate(
          [(0, tY.customElement)("w3m-register-account-name-view")],
          rX
        ));
      var r0 = rp.iv`
  .continue-button-container {
    width: 100%;
  }
`;
      let r1 = class extends rp.oi {
        render() {
          return rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        gap="xxl"
        .padding=${["0", "0", "l", "0"]}
      >
        ${this.onboardingTemplate()} ${this.buttonsTemplate()}
        <wui-link
          @click=${() => {
            tH.j1.openHref(tV.UE.URLS.FAQ, "_blank");
          }}
        >
          Learn more
          <wui-icon color="inherit" slot="iconRight" name="externalLink"></wui-icon>
        </wui-link>
      </wui-flex>
    `;
        }
        onboardingTemplate() {
          return rp.dy` <wui-flex
      flexDirection="column"
      gap="xxl"
      alignItems="center"
      .padding=${["0", "xxl", "0", "xxl"]}
    >
      <wui-flex gap="s" alignItems="center" justifyContent="center">
        <wui-icon-box
          size="xl"
          iconcolor="success-100"
          backgroundcolor="success-100"
          icon="checkmark"
          background="opaque"
        ></wui-icon-box>
      </wui-flex>
      <wui-flex flexDirection="column" alignItems="center" gap="s">
        <wui-text align="center" variant="medium-600" color="fg-100">
          Account name chosen successfully
        </wui-text>
        <wui-text align="center" variant="paragraph-400" color="fg-100">
          You can now fund your account and trade crypto
        </wui-text>
      </wui-flex>
    </wui-flex>`;
        }
        buttonsTemplate() {
          return rp.dy`<wui-flex
      .padding=${["0", "2l", "0", "2l"]}
      gap="s"
      class="continue-button-container"
    >
      <wui-button fullWidth size="lg" borderRadius="xs" @click=${this.redirectToAccount.bind(
        this
      )}
        >Let's Go!
      </wui-button>
    </wui-flex>`;
        }
        redirectToAccount() {
          tH.RouterController.replace("Account");
        }
      };
      (r1.styles = r0),
        (r1 = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })(
          [(0, tY.customElement)("w3m-register-account-name-success-view")],
          r1
        ));
      var r2 = rp.iv`
  @keyframes shake {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(3px);
    }
    50% {
      transform: translateX(-3px);
    }
    75% {
      transform: translateX(3px);
    }
    100% {
      transform: translateX(0);
    }
  }

  wui-flex:first-child:not(:only-child) {
    position: relative;
  }

  wui-loading-hexagon {
    position: absolute;
  }

  wui-icon-box {
    position: absolute;
    right: 4px;
    bottom: 0;
    opacity: 0;
    transform: scale(0.5);
    z-index: 1;
  }

  wui-button {
    display: none;
  }

  [data-error='true'] wui-icon-box {
    opacity: 1;
    transform: scale(1);
  }

  [data-error='true'] > wui-flex:first-child {
    animation: shake 250ms cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  }

  wui-button[data-retry='true'] {
    display: block;
    opacity: 1;
  }
`,
        w3m_network_switch_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r3 = class extends rp.oi {
        constructor() {
          super(),
            (this.network = tH.RouterController.state.data?.network),
            (this.unsubscribe = []),
            (this.showRetry = !1),
            (this.error = !1);
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        firstUpdated() {
          this.onSwitchNetwork();
        }
        render() {
          if (!this.network)
            throw Error("w3m-network-switch-view: No network provided");
          this.onShowRetry();
          let s = this.getLabel(),
            x = this.getSubLabel();
          return rp.dy`
      <wui-flex
        data-error=${this.error}
        flexDirection="column"
        alignItems="center"
        .padding=${["3xl", "xl", "3xl", "xl"]}
        gap="xl"
      >
        <wui-flex justifyContent="center" alignItems="center">
          <wui-network-image
            size="lg"
            imageSrc=${(0, rg.o)(tH.fz.getNetworkImage(this.network))}
          ></wui-network-image>

          ${
            this.error
              ? null
              : rp.dy`<wui-loading-hexagon></wui-loading-hexagon>`
          }

          <wui-icon-box
            backgroundColor="error-100"
            background="opaque"
            iconColor="error-100"
            icon="close"
            size="sm"
            ?border=${!0}
            borderColor="wui-color-bg-125"
          ></wui-icon-box>
        </wui-flex>

        <wui-flex flexDirection="column" alignItems="center" gap="xs">
          <wui-text align="center" variant="paragraph-500" color="fg-100">${s}</wui-text>
          <wui-text align="center" variant="small-500" color="fg-200">${x}</wui-text>
        </wui-flex>

        <wui-button
          data-retry=${this.showRetry}
          variant="accent"
          size="md"
          .disabled=${!this.error}
          @click=${this.onSwitchNetwork.bind(this)}
        >
          <wui-icon color="inherit" slot="iconLeft" name="refresh"></wui-icon>
          Try again
        </wui-button>
      </wui-flex>
    `;
        }
        getSubLabel() {
          let s = tH.RY.state.activeChain,
            x = tH.MO.getConnectedConnectorId(s),
            W = tH.ConnectorController.getAuthConnector();
          return W && x === tV.bq.CONNECTOR_ID.AUTH
            ? ""
            : this.error
            ? "Switch can be declined if chain is not supported by a wallet or previous request is still active"
            : "Accept connection request in your wallet";
        }
        getLabel() {
          let s = tH.RY.state.activeChain,
            x = tH.MO.getConnectedConnectorId(s),
            W = tH.ConnectorController.getAuthConnector();
          return W && x === tV.bq.CONNECTOR_ID.AUTH
            ? `Switching to ${this.network?.name ?? "Unknown"} network...`
            : this.error
            ? "Switch declined"
            : "Approve in wallet";
        }
        onShowRetry() {
          if (this.error && !this.showRetry) {
            this.showRetry = !0;
            let s = this.shadowRoot?.querySelector("wui-button");
            s?.animate([{ opacity: 0 }, { opacity: 1 }], {
              fill: "forwards",
              easing: "ease",
            });
          }
        }
        async onSwitchNetwork() {
          try {
            (this.error = !1),
              this.network && (await tH.RY.switchActiveNetwork(this.network));
          } catch (s) {
            this.error = !0;
          }
        }
      };
      (r3.styles = r2),
        w3m_network_switch_view_decorate(
          [(0, rf.SB)()],
          r3.prototype,
          "showRetry",
          void 0
        ),
        w3m_network_switch_view_decorate(
          [(0, rf.SB)()],
          r3.prototype,
          "error",
          void 0
        ),
        (r3 = w3m_network_switch_view_decorate(
          [(0, tY.customElement)("w3m-network-switch-view")],
          r3
        ));
      var r5 = rp.iv`
  .container {
    max-height: 360px;
    overflow: auto;
  }

  .container::-webkit-scrollbar {
    display: none;
  }
`,
        w3m_networks_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r6 = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.network = tH.RY.state.activeCaipNetwork),
            (this.requestedCaipNetworks = tH.RY.getAllRequestedCaipNetworks()),
            (this.search = ""),
            (this.onDebouncedSearch = tH.j1.debounce((s) => {
              this.search = s;
            }, 100)),
            this.unsubscribe.push(
              tH.RY.subscribeKey(
                "activeCaipNetwork",
                (s) => (this.network = s)
              ),
              tH.RY.subscribeKey(
                "chains",
                () =>
                  (this.requestedCaipNetworks =
                    tH.RY.getAllRequestedCaipNetworks())
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          return rp.dy`
      ${this.templateSearchInput()}
      <wui-flex
        class="container"
        .padding=${["0", "s", "s", "s"]}
        flexDirection="column"
        gap="xs"
      >
        ${this.networksTemplate()}
      </wui-flex>

      <wui-separator></wui-separator>

      <wui-flex padding="s" flexDirection="column" gap="m" alignItems="center">
        <wui-text variant="small-400" color="fg-300" align="center">
          Your connected wallet may not support some of the networks available for this dApp
        </wui-text>
        <wui-link @click=${this.onNetworkHelp.bind(this)}>
          <wui-icon size="xs" color="accent-100" slot="iconLeft" name="helpCircle"></wui-icon>
          What is a network
        </wui-link>
      </wui-flex>
    `;
        }
        templateSearchInput() {
          return rp.dy`
      <wui-flex gap="xs" .padding=${["0", "s", "s", "s"]}>
        <wui-input-text
          @inputChange=${this.onInputChange.bind(this)}
          class="network-search-input"
          size="md"
          placeholder="Search network"
          icon="search"
        ></wui-input-text>
      </wui-flex>
    `;
        }
        onInputChange(s) {
          this.onDebouncedSearch(s.detail);
        }
        onNetworkHelp() {
          tH.Xs.sendEvent({ type: "track", event: "CLICK_NETWORK_HELP" }),
            tH.RouterController.push("WhatIsANetwork");
        }
        networksTemplate() {
          let s = tH.RY.getAllRequestedCaipNetworks(),
            x = tH.RY.getAllApprovedCaipNetworkIds(),
            W = tH.j1.sortRequestedNetworks(x, s);
          return (
            this.search
              ? (this.filteredNetworks = W?.filter((s) =>
                  s?.name?.toLowerCase().includes(this.search.toLowerCase())
                ))
              : (this.filteredNetworks = W),
            this.filteredNetworks?.map(
              (s) => rp.dy`
        <wui-list-network
          .selected=${this.network?.id === s.id}
          imageSrc=${rg.o(tH.fz.getNetworkImage(s))}
          type="network"
          name=${s.name ?? s.id}
          @click=${() => this.onSwitchNetwork(s)}
          .disabled=${this.getNetworkDisabled(s)}
          data-testid=${`w3m-network-switch-${s.name ?? s.id}`}
        ></wui-list-network>
      `
            )
          );
        }
        getNetworkDisabled(s) {
          let x = s.chainNamespace,
            W = tH.AccountController.getCaipAddress(x),
            X = tH.RY.getAllApprovedCaipNetworkIds(),
            ee = !1 !== tH.RY.getNetworkProp("supportsAllNetworks", x),
            et = tH.MO.getConnectedConnectorId(x),
            er = tH.ConnectorController.getAuthConnector(),
            ei = et === tV.bq.CONNECTOR_ID.AUTH && er;
          return !!W && !ee && !ei && !X?.includes(s.caipNetworkId);
        }
        onSwitchNetwork(s) {
          let x = tH.RouterController.state.data,
            W = s.id === this.network?.id;
          if (W) return;
          let X = s.chainNamespace !== tH.RY.state.activeChain,
            ee = tH.AccountController.state.caipAddress,
            et = tH.AccountController.getCaipAddress(s.chainNamespace),
            er = tH.MO.getConnectedConnectorId(tH.RY.state.activeChain),
            ei = er === tV.bq.CONNECTOR_ID.AUTH,
            eo = tV.bq.AUTH_CONNECTOR_SUPPORTED_CHAINS.find(
              (x) => x === s.chainNamespace
            );
          ee
            ? ei && eo
              ? tH.RouterController.push("SwitchNetwork", { ...x, network: s })
              : (ei && !eo) || (X && !et)
              ? tH.RouterController.push("SwitchActiveChain", {
                  switchToChain: s.chainNamespace,
                  navigateTo: "Connect",
                  navigateWithReplace: !0,
                  network: s,
                })
              : tH.RouterController.push("SwitchNetwork", { ...x, network: s })
            : tH.RouterController.push("SwitchNetwork", { ...x, network: s });
        }
      };
      (r6.styles = r5),
        w3m_networks_view_decorate(
          [(0, rf.SB)()],
          r6.prototype,
          "network",
          void 0
        ),
        w3m_networks_view_decorate(
          [(0, rf.SB)()],
          r6.prototype,
          "requestedCaipNetworks",
          void 0
        ),
        w3m_networks_view_decorate(
          [(0, rf.SB)()],
          r6.prototype,
          "filteredNetworks",
          void 0
        ),
        w3m_networks_view_decorate(
          [(0, rf.SB)()],
          r6.prototype,
          "search",
          void 0
        ),
        (r6 = w3m_networks_view_decorate(
          [(0, tY.customElement)("w3m-networks-view")],
          r6
        ));
      var r4 = rp.iv`
  :host > wui-flex {
    height: 500px;
    overflow-y: auto;
    overflow-x: hidden;
    scrollbar-width: none;
    padding: var(--wui-spacing-m);
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }

  :host > wui-flex::-webkit-scrollbar {
    display: none;
  }

  :host > wui-flex > wui-flex {
    width: 100%;
  }

  wui-transaction-list-item-loader {
    width: 100%;
  }
`,
        w3m_onramp_activity_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r8 = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.selectedOnRampProvider = tH.ph.state.selectedProvider),
            (this.loading = !1),
            (this.coinbaseTransactions = tH.sl.state.coinbaseTransactions),
            (this.tokenImages = tH.WM.state.tokenImages),
            this.unsubscribe.push(
              ...[
                tH.ph.subscribeKey("selectedProvider", (s) => {
                  this.selectedOnRampProvider = s;
                }),
                tH.WM.subscribeKey(
                  "tokenImages",
                  (s) => (this.tokenImages = s)
                ),
                () => {
                  clearTimeout(this.refetchTimeout);
                },
                tH.sl.subscribe((s) => {
                  this.coinbaseTransactions = { ...s.coinbaseTransactions };
                }),
              ]
            ),
            tH.sl.clearCursor(),
            this.fetchTransactions();
        }
        render() {
          return rp.dy`
      <wui-flex flexDirection="column" .padding=${[
        "0",
        "s",
        "s",
        "s",
      ]} gap="xs">
        ${
          this.loading
            ? this.templateLoading()
            : this.templateTransactionsByYear()
        }
      </wui-flex>
    `;
        }
        templateTransactions(s) {
          return s?.map((s) => {
            let x = tV.Em.formatDate(s?.metadata?.minedAt),
              W = s.transfers[0],
              X = W?.fungible_info;
            if (!X) return null;
            let ee = X?.icon?.url || this.tokenImages?.[X.symbol || ""];
            return rp.dy`
        <w3m-onramp-activity-item
          label="Bought"
          .completed=${
            "ONRAMP_TRANSACTION_STATUS_SUCCESS" === s.metadata.status
          }
          .inProgress=${
            "ONRAMP_TRANSACTION_STATUS_IN_PROGRESS" === s.metadata.status
          }
          .failed=${"ONRAMP_TRANSACTION_STATUS_FAILED" === s.metadata.status}
          purchaseCurrency=${rg.o(X.symbol)}
          purchaseValue=${W.quantity.numeric}
          date=${x}
          icon=${rg.o(ee)}
          symbol=${rg.o(X.symbol)}
        ></w3m-onramp-activity-item>
      `;
          });
        }
        templateTransactionsByYear() {
          let s = Object.keys(this.coinbaseTransactions).sort().reverse();
          return s.map((s) => {
            let x = parseInt(s, 10),
              W = Array(12)
                .fill(null)
                .map((s, x) => x)
                .reverse();
            return W.map((s) => {
              let W = tY.TransactionUtil.getTransactionGroupTitle(x, s),
                X = this.coinbaseTransactions[x]?.[s];
              return X
                ? rp.dy`
          <wui-flex flexDirection="column">
            <wui-flex
              alignItems="center"
              flexDirection="row"
              .padding=${["xs", "s", "s", "s"]}
            >
              <wui-text variant="paragraph-500" color="fg-200">${W}</wui-text>
            </wui-flex>
            <wui-flex flexDirection="column" gap="xs">
              ${this.templateTransactions(X)}
            </wui-flex>
          </wui-flex>
        `
                : null;
            });
          });
        }
        async fetchTransactions() {
          await this.fetchCoinbaseTransactions();
        }
        async fetchCoinbaseTransactions() {
          let s = tH.AccountController.state.address,
            x = tH.OptionsController.state.projectId;
          if (!s) throw Error("No address found");
          if (!x) throw Error("No projectId found");
          (this.loading = !0),
            await tH.sl.fetchTransactions(s, "coinbase"),
            (this.loading = !1),
            this.refetchLoadingTransactions();
        }
        refetchLoadingTransactions() {
          let s = new Date(),
            x =
              this.coinbaseTransactions[s.getFullYear()]?.[s.getMonth()] || [],
            W = x.filter(
              (s) =>
                "ONRAMP_TRANSACTION_STATUS_IN_PROGRESS" === s.metadata.status
            );
          if (0 === W.length) {
            clearTimeout(this.refetchTimeout);
            return;
          }
          this.refetchTimeout = setTimeout(async () => {
            let s = tH.AccountController.state.address;
            await tH.sl.fetchTransactions(s, "coinbase"),
              this.refetchLoadingTransactions();
          }, 3e3);
        }
        templateLoading() {
          return Array(7)
            .fill(
              rp.dy` <wui-transaction-list-item-loader></wui-transaction-list-item-loader> `
            )
            .map((s) => s);
        }
      };
      (r8.styles = r4),
        w3m_onramp_activity_view_decorate(
          [(0, rf.SB)()],
          r8.prototype,
          "selectedOnRampProvider",
          void 0
        ),
        w3m_onramp_activity_view_decorate(
          [(0, rf.SB)()],
          r8.prototype,
          "loading",
          void 0
        ),
        w3m_onramp_activity_view_decorate(
          [(0, rf.SB)()],
          r8.prototype,
          "coinbaseTransactions",
          void 0
        ),
        w3m_onramp_activity_view_decorate(
          [(0, rf.SB)()],
          r8.prototype,
          "tokenImages",
          void 0
        ),
        (r8 = w3m_onramp_activity_view_decorate(
          [(0, tY.customElement)("w3m-onramp-activity-view")],
          r8
        ));
      var r9 = rp.iv`
  :host > wui-grid {
    max-height: 360px;
    overflow: auto;
  }

  wui-flex {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
  }

  wui-grid::-webkit-scrollbar {
    display: none;
  }

  wui-flex.disabled {
    opacity: 0.3;
    pointer-events: none;
    user-select: none;
  }
`,
        w3m_onramp_fiat_select_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r7 = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.selectedCurrency = tH.ph.state.paymentCurrency),
            (this.currencies = tH.ph.state.paymentCurrencies),
            (this.currencyImages = tH.WM.state.currencyImages),
            (this.checked = !1),
            this.unsubscribe.push(
              ...[
                tH.ph.subscribe((s) => {
                  (this.selectedCurrency = s.paymentCurrency),
                    (this.currencies = s.paymentCurrencies);
                }),
                tH.WM.subscribeKey(
                  "currencyImages",
                  (s) => (this.currencyImages = s)
                ),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let { termsConditionsUrl: s, privacyPolicyUrl: x } =
              tH.OptionsController.state,
            W = tH.OptionsController.state.features?.legalCheckbox,
            X = !!(s || x) && !!W && !this.checked;
          return rp.dy`
      <w3m-legal-checkbox @checkboxChange=${this.onCheckboxChange.bind(
        this
      )}></w3m-legal-checkbox>
      <wui-flex
        flexDirection="column"
        .padding=${["0", "s", "s", "s"]}
        gap="xs"
        class=${(0, rg.o)(X ? "disabled" : void 0)}
      >
        ${this.currenciesTemplate(X)}
      </wui-flex>
      <w3m-legal-footer></w3m-legal-footer>
    `;
        }
        currenciesTemplate(s = !1) {
          return this.currencies.map(
            (x) => rp.dy`
        <wui-list-item
          imageSrc=${(0, rg.o)(this.currencyImages?.[x.id])}
          @click=${() => this.selectCurrency(x)}
          variant="image"
          tabIdx=${(0, rg.o)(s ? -1 : void 0)}
        >
          <wui-text variant="paragraph-500" color="fg-100">${x.id}</wui-text>
        </wui-list-item>
      `
          );
        }
        selectCurrency(s) {
          s && (tH.ph.setPaymentCurrency(s), tH.IN.close());
        }
        onCheckboxChange(s) {
          this.checked = !!s.detail;
        }
      };
      (r7.styles = r9),
        w3m_onramp_fiat_select_view_decorate(
          [(0, rf.SB)()],
          r7.prototype,
          "selectedCurrency",
          void 0
        ),
        w3m_onramp_fiat_select_view_decorate(
          [(0, rf.SB)()],
          r7.prototype,
          "currencies",
          void 0
        ),
        w3m_onramp_fiat_select_view_decorate(
          [(0, rf.SB)()],
          r7.prototype,
          "currencyImages",
          void 0
        ),
        w3m_onramp_fiat_select_view_decorate(
          [(0, rf.SB)()],
          r7.prototype,
          "checked",
          void 0
        ),
        (r7 = w3m_onramp_fiat_select_view_decorate(
          [(0, tY.customElement)("w3m-onramp-fiat-select-view")],
          r7
        ));
      var w3m_onramp_providers_view_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let it = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.providers = tH.ph.state.providers),
            this.unsubscribe.push(
              ...[
                tH.ph.subscribeKey("providers", (s) => {
                  this.providers = s;
                }),
              ]
            );
        }
        firstUpdated() {
          let s = this.providers.map(async (s) =>
            "coinbase" === s.name
              ? await this.getCoinbaseOnRampURL()
              : Promise.resolve(s?.url)
          );
          Promise.all(s).then((s) => {
            this.providers = this.providers.map((x, W) => ({
              ...x,
              url: s[W] || "",
            }));
          });
        }
        render() {
          return rp.dy`
      <wui-flex flexDirection="column" .padding=${[
        "0",
        "s",
        "s",
        "s",
      ]} gap="xs">
        ${this.onRampProvidersTemplate()}
      </wui-flex>
      <w3m-onramp-providers-footer></w3m-onramp-providers-footer>
    `;
        }
        onRampProvidersTemplate() {
          return this.providers
            .filter((s) =>
              s.supportedChains.includes(tH.RY.state.activeChain ?? "eip155")
            )
            .map(
              (s) => rp.dy`
          <w3m-onramp-provider-item
            label=${s.label}
            name=${s.name}
            feeRange=${s.feeRange}
            @click=${() => {
              this.onClickProvider(s);
            }}
            ?disabled=${!s.url}
          ></w3m-onramp-provider-item>
        `
            );
        }
        onClickProvider(s) {
          tH.ph.setSelectedProvider(s),
            tH.RouterController.push("BuyInProgress"),
            tH.j1.openHref(
              s.url,
              "popupWindow",
              "width=600,height=800,scrollbars=yes"
            ),
            tH.Xs.sendEvent({
              type: "track",
              event: "SELECT_BUY_PROVIDER",
              properties: {
                provider: s.name,
                isSmartAccount:
                  tH.AccountController.state.preferredAccountType ===
                  t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
              },
            });
        }
        async getCoinbaseOnRampURL() {
          let s = tH.AccountController.state.address,
            x = tH.RY.state.activeCaipNetwork;
          if (!s) throw Error("No address found");
          if (!x?.name) throw Error("No network found");
          let W =
              tH.bq.WC_COINBASE_PAY_SDK_CHAIN_NAME_MAP[x.name] ??
              tH.bq.WC_COINBASE_PAY_SDK_FALLBACK_CHAIN,
            X = tH.ph.state.purchaseCurrency,
            ee = X
              ? [X.symbol]
              : tH.ph.state.purchaseCurrencies.map((s) => s.symbol);
          return await tH.Lr.generateOnRampURL({
            defaultNetwork: W,
            destinationWallets: [
              {
                address: s,
                blockchains: tH.bq.WC_COINBASE_PAY_SDK_CHAINS,
                assets: ee,
              },
            ],
            partnerUserId: s,
            purchaseAmount: tH.ph.state.purchaseAmount,
          });
        }
      };
      w3m_onramp_providers_view_decorate(
        [(0, rf.SB)()],
        it.prototype,
        "providers",
        void 0
      ),
        (it = w3m_onramp_providers_view_decorate(
          [(0, tY.customElement)("w3m-onramp-providers-view")],
          it
        ));
      var ir = rp.iv`
  :host > wui-grid {
    max-height: 360px;
    overflow: auto;
  }

  wui-flex {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
  }

  wui-grid::-webkit-scrollbar {
    display: none;
  }

  wui-flex.disabled {
    opacity: 0.3;
    pointer-events: none;
    user-select: none;
  }
`,
        w3m_onramp_tokens_select_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let io = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.selectedCurrency = tH.ph.state.purchaseCurrencies),
            (this.tokens = tH.ph.state.purchaseCurrencies),
            (this.tokenImages = tH.WM.state.tokenImages),
            (this.checked = !1),
            this.unsubscribe.push(
              ...[
                tH.ph.subscribe((s) => {
                  (this.selectedCurrency = s.purchaseCurrencies),
                    (this.tokens = s.purchaseCurrencies);
                }),
                tH.WM.subscribeKey(
                  "tokenImages",
                  (s) => (this.tokenImages = s)
                ),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let { termsConditionsUrl: s, privacyPolicyUrl: x } =
              tH.OptionsController.state,
            W = tH.OptionsController.state.features?.legalCheckbox,
            X = !!(s || x) && !!W && !this.checked;
          return rp.dy`
      <w3m-legal-checkbox @checkboxChange=${this.onCheckboxChange.bind(
        this
      )}></w3m-legal-checkbox>
      <wui-flex
        flexDirection="column"
        .padding=${["0", "s", "s", "s"]}
        gap="xs"
        class=${(0, rg.o)(X ? "disabled" : void 0)}
      >
        ${this.currenciesTemplate(X)}
      </wui-flex>
      <w3m-legal-footer></w3m-legal-footer>
    `;
        }
        currenciesTemplate(s = !1) {
          return this.tokens.map(
            (x) => rp.dy`
        <wui-list-item
          imageSrc=${(0, rg.o)(this.tokenImages?.[x.symbol])}
          @click=${() => this.selectToken(x)}
          variant="image"
          tabIdx=${(0, rg.o)(s ? -1 : void 0)}
        >
          <wui-flex gap="3xs" alignItems="center">
            <wui-text variant="paragraph-500" color="fg-100">${
              x.name
            }</wui-text>
            <wui-text variant="small-400" color="fg-200">${x.symbol}</wui-text>
          </wui-flex>
        </wui-list-item>
      `
          );
        }
        selectToken(s) {
          s && (tH.ph.setPurchaseCurrency(s), tH.IN.close());
        }
        onCheckboxChange(s) {
          this.checked = !!s.detail;
        }
      };
      (io.styles = ir),
        w3m_onramp_tokens_select_view_decorate(
          [(0, rf.SB)()],
          io.prototype,
          "selectedCurrency",
          void 0
        ),
        w3m_onramp_tokens_select_view_decorate(
          [(0, rf.SB)()],
          io.prototype,
          "tokens",
          void 0
        ),
        w3m_onramp_tokens_select_view_decorate(
          [(0, rf.SB)()],
          io.prototype,
          "tokenImages",
          void 0
        ),
        w3m_onramp_tokens_select_view_decorate(
          [(0, rf.SB)()],
          io.prototype,
          "checked",
          void 0
        ),
        (io = w3m_onramp_tokens_select_view_decorate(
          [(0, tY.customElement)("w3m-onramp-token-select-view")],
          io
        ));
      var ia = rp.iv`
  :host > wui-flex:first-child {
    overflow-y: auto;
    overflow-x: hidden;
    scrollbar-width: none;
  }

  :host > wui-flex:first-child::-webkit-scrollbar {
    display: none;
  }

  wui-loading-hexagon {
    position: absolute;
  }

  .action-button {
    width: 100%;
    border-radius: var(--wui-border-radius-xs);
  }

  .action-button:disabled {
    border-color: 1px solid var(--wui-color-gray-glass-005);
  }

  .swap-inputs-container {
    position: relative;
  }

  .replace-tokens-button-container {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    gap: var(--wui-spacing-1xs);
    border-radius: var(--wui-border-radius-xs);
    background-color: var(--wui-color-modal-bg-base);
    padding: var(--wui-spacing-xxs);
  }

  .replace-tokens-button-container > button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 40px;
    width: 40px;
    padding: var(--wui-spacing-xs);
    border: none;
    border-radius: var(--wui-border-radius-xxs);
    background: var(--wui-color-gray-glass-002);
    transition: background-color var(--wui-duration-md) var(--wui-ease-out-power-1);
    will-change: background-color;
    z-index: 20;
  }

  .replace-tokens-button-container > button:hover {
    background: var(--wui-color-gray-glass-005);
  }

  .details-container > wui-flex {
    background: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xxs);
    width: 100%;
  }

  .details-container > wui-flex > button {
    border: none;
    background: none;
    padding: var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-xxs);
    transition: background 0.2s linear;
  }

  .details-container > wui-flex > button:hover {
    background: var(--wui-color-gray-glass-002);
  }

  .details-content-container {
    padding: var(--wui-spacing-1xs);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .details-content-container > wui-flex {
    width: 100%;
  }

  .details-row {
    width: 100%;
    padding: var(--wui-spacing-s) var(--wui-spacing-xl);
    border-radius: var(--wui-border-radius-xxs);
    background: var(--wui-color-gray-glass-002);
  }
`,
        w3m_swap_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let is = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.detailsOpen = !1),
            (this.caipNetworkId = tH.RY.state.activeCaipNetwork?.caipNetworkId),
            (this.initialized = tH.nY.state.initialized),
            (this.loadingQuote = tH.nY.state.loadingQuote),
            (this.loadingPrices = tH.nY.state.loadingPrices),
            (this.loadingTransaction = tH.nY.state.loadingTransaction),
            (this.sourceToken = tH.nY.state.sourceToken),
            (this.sourceTokenAmount = tH.nY.state.sourceTokenAmount),
            (this.sourceTokenPriceInUSD = tH.nY.state.sourceTokenPriceInUSD),
            (this.toToken = tH.nY.state.toToken),
            (this.toTokenAmount = tH.nY.state.toTokenAmount),
            (this.toTokenPriceInUSD = tH.nY.state.toTokenPriceInUSD),
            (this.inputError = tH.nY.state.inputError),
            (this.gasPriceInUSD = tH.nY.state.gasPriceInUSD),
            (this.fetchError = tH.nY.state.fetchError),
            (this.onDebouncedGetSwapCalldata = tH.j1.debounce(async () => {
              await tH.nY.swapTokens();
            }, 200)),
            tH.RY.subscribeKey("activeCaipNetwork", (s) => {
              this.caipNetworkId !== s?.caipNetworkId &&
                ((this.caipNetworkId = s?.caipNetworkId),
                tH.nY.resetState(),
                tH.nY.initializeState());
            }),
            this.unsubscribe.push(
              ...[
                tH.IN.subscribeKey("open", (s) => {
                  s || tH.nY.resetState();
                }),
                tH.RouterController.subscribeKey("view", (s) => {
                  s.includes("Swap") || tH.nY.resetValues();
                }),
                tH.nY.subscribe((s) => {
                  (this.initialized = s.initialized),
                    (this.loadingQuote = s.loadingQuote),
                    (this.loadingPrices = s.loadingPrices),
                    (this.loadingTransaction = s.loadingTransaction),
                    (this.sourceToken = s.sourceToken),
                    (this.sourceTokenAmount = s.sourceTokenAmount),
                    (this.sourceTokenPriceInUSD = s.sourceTokenPriceInUSD),
                    (this.toToken = s.toToken),
                    (this.toTokenAmount = s.toTokenAmount),
                    (this.toTokenPriceInUSD = s.toTokenPriceInUSD),
                    (this.inputError = s.inputError),
                    (this.gasPriceInUSD = s.gasPriceInUSD),
                    (this.fetchError = s.fetchError);
                }),
              ]
            );
        }
        firstUpdated() {
          tH.nY.initializeState(), this.watchTokensAndValues();
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s?.()), clearInterval(this.interval);
        }
        render() {
          return rp.dy`
      <wui-flex flexDirection="column" .padding=${["0", "l", "l", "l"]} gap="s">
        ${this.initialized ? this.templateSwap() : this.templateLoading()}
      </wui-flex>
    `;
        }
        watchTokensAndValues() {
          this.interval = setInterval(() => {
            tH.nY.getNetworkTokenPrice(),
              tH.nY.getMyTokensWithBalance(),
              tH.nY.swapTokens();
          }, 1e4);
        }
        templateSwap() {
          return rp.dy`
      <wui-flex flexDirection="column" gap="s">
        <wui-flex flexDirection="column" alignItems="center" gap="xs" class="swap-inputs-container">
          ${this.templateTokenInput("sourceToken", this.sourceToken)}
          ${this.templateTokenInput(
            "toToken",
            this.toToken
          )} ${this.templateReplaceTokensButton()}
        </wui-flex>
        ${this.templateDetails()} ${this.templateActionButton()}
      </wui-flex>
    `;
        }
        actionButtonLabel() {
          return this.fetchError
            ? "Swap"
            : this.sourceToken && this.toToken
            ? this.sourceTokenAmount
              ? this.inputError
                ? this.inputError
                : "Review swap"
              : "Enter amount"
            : "Select token";
        }
        templateReplaceTokensButton() {
          return rp.dy`
      <wui-flex class="replace-tokens-button-container">
        <button @click=${this.onSwitchTokens.bind(this)}>
          <wui-icon name="recycleHorizontal" color="fg-250" size="lg"></wui-icon>
        </button>
      </wui-flex>
    `;
        }
        templateLoading() {
          return rp.dy`
      <wui-flex flexDirection="column" gap="l">
        <wui-flex flexDirection="column" alignItems="center" gap="xs" class="swap-inputs-container">
          <w3m-swap-input-skeleton target="sourceToken"></w3m-swap-input-skeleton>
          <w3m-swap-input-skeleton target="toToken"></w3m-swap-input-skeleton>
          ${this.templateReplaceTokensButton()}
        </wui-flex>
        ${this.templateActionButton()}
      </wui-flex>
    `;
        }
        templateTokenInput(s, x) {
          let W = tH.nY.state.myTokensWithBalance?.find(
              (s) => s?.address === x?.address
            ),
            X = "toToken" === s ? this.toTokenAmount : this.sourceTokenAmount,
            ee =
              "toToken" === s
                ? this.toTokenPriceInUSD
                : this.sourceTokenPriceInUSD,
            et = tV.C6.parseLocalStringToNumber(X) * ee;
          return rp.dy`<w3m-swap-input
      .value=${"toToken" === s ? this.toTokenAmount : this.sourceTokenAmount}
      .disabled=${"toToken" === s}
      .onSetAmount=${this.handleChangeAmount.bind(this)}
      target=${s}
      .token=${x}
      .balance=${W?.quantity?.numeric}
      .price=${W?.price}
      .marketValue=${et}
      .onSetMaxValue=${this.onSetMaxValue.bind(this)}
    ></w3m-swap-input>`;
        }
        onSetMaxValue(s, x) {
          let W = "sourceToken" === s ? this.sourceToken : this.toToken,
            X = W?.address === tH.RY.getActiveNetworkTokenAddress(),
            ee = "0";
          if (!x) {
            (ee = "0"), this.handleChangeAmount(s, ee);
            return;
          }
          if (!this.gasPriceInUSD) {
            (ee = x), this.handleChangeAmount(s, ee);
            return;
          }
          let et = tV.C6.bigNumber(this.gasPriceInUSD.toFixed(5)).dividedBy(
              this.sourceTokenPriceInUSD
            ),
            er = X ? tV.C6.bigNumber(x).minus(et) : tV.C6.bigNumber(x);
          this.handleChangeAmount(
            s,
            er.isGreaterThan(0) ? er.toFixed(20) : "0"
          );
        }
        templateDetails() {
          return this.sourceToken && this.toToken && !this.inputError
            ? rp.dy`<w3m-swap-details .detailsOpen=${this.detailsOpen}></w3m-swap-details>`
            : null;
        }
        handleChangeAmount(s, x) {
          tH.nY.clearError(),
            "sourceToken" === s
              ? tH.nY.setSourceTokenAmount(x)
              : tH.nY.setToTokenAmount(x),
            this.onDebouncedGetSwapCalldata();
        }
        templateActionButton() {
          let s = !this.toToken || !this.sourceToken,
            x = !this.sourceTokenAmount,
            W =
              this.loadingQuote ||
              this.loadingPrices ||
              this.loadingTransaction,
            X = W || s || x || this.inputError;
          return rp.dy` <wui-flex gap="xs">
      <wui-button
        data-testid="swap-action-button"
        class="action-button"
        fullWidth
        size="lg"
        borderRadius="xs"
        variant=${s ? "neutral" : "main"}
        .loading=${W}
        .disabled=${X}
        @click=${this.onSwapPreview.bind(this)}
      >
        ${this.actionButtonLabel()}
      </wui-button>
    </wui-flex>`;
        }
        onSwitchTokens() {
          tH.nY.switchTokens();
        }
        onSwapPreview() {
          if (this.fetchError) {
            tH.nY.swapTokens();
            return;
          }
          tH.Xs.sendEvent({
            type: "track",
            event: "INITIATE_SWAP",
            properties: {
              network: this.caipNetworkId || "",
              swapFromToken: this.sourceToken?.symbol || "",
              swapToToken: this.toToken?.symbol || "",
              swapFromAmount: this.sourceTokenAmount || "",
              swapToAmount: this.toTokenAmount || "",
              isSmartAccount:
                tH.AccountController.state.preferredAccountType ===
                t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
            },
          }),
            tH.RouterController.push("SwapPreview");
        }
      };
      (is.styles = ia),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "interval",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "detailsOpen",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "caipNetworkId",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "initialized",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "loadingQuote",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "loadingPrices",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "loadingTransaction",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "sourceToken",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "sourceTokenAmount",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "sourceTokenPriceInUSD",
          void 0
        ),
        w3m_swap_view_decorate([(0, rf.SB)()], is.prototype, "toToken", void 0),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "toTokenAmount",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "toTokenPriceInUSD",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "inputError",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "gasPriceInUSD",
          void 0
        ),
        w3m_swap_view_decorate(
          [(0, rf.SB)()],
          is.prototype,
          "fetchError",
          void 0
        ),
        (is = w3m_swap_view_decorate(
          [(0, tY.customElement)("w3m-swap-view")],
          is
        ));
      var il = rp.iv`
  @keyframes shake {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(3px);
    }
    50% {
      transform: translateX(-3px);
    }
    75% {
      transform: translateX(3px);
    }
    100% {
      transform: translateX(0);
    }
  }

  wui-flex:first-child:not(:only-child) {
    position: relative;
  }

  wui-loading-thumbnail {
    position: absolute;
  }

  wui-visual {
    width: var(--wui-wallet-image-size-lg);
    height: var(--wui-wallet-image-size-lg);
    border-radius: calc(var(--wui-border-radius-5xs) * 9 - var(--wui-border-radius-xxs));
    position: relative;
    overflow: hidden;
  }

  wui-visual::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0;
    border-radius: calc(var(--wui-border-radius-5xs) * 9 - var(--wui-border-radius-xxs));
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  wui-icon-box {
    position: absolute;
    right: calc(var(--wui-spacing-3xs) * -1);
    bottom: calc(var(--wui-spacing-3xs) * -1);
    opacity: 0;
    transform: scale(0.5);
    transition:
      opacity var(--wui-ease-out-power-2) var(--wui-duration-lg),
      transform var(--wui-ease-out-power-2) var(--wui-duration-lg);
    will-change: opacity, transform;
  }

  wui-text[align='center'] {
    width: 100%;
    padding: 0px var(--wui-spacing-l);
  }

  [data-error='true'] wui-icon-box {
    opacity: 1;
    transform: scale(1);
  }

  [data-error='true'] > wui-flex:first-child {
    animation: shake 250ms cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  }

  [data-retry='false'] wui-link {
    display: none;
  }

  [data-retry='true'] wui-link {
    display: block;
    opacity: 1;
  }

  wui-link {
    padding: var(--wui-spacing-4xs) var(--wui-spacing-xxs);
  }

  .capitalize {
    text-transform: capitalize;
  }
`,
        w3m_switch_active_chain_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ic = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.unsubscribe = []),
            (this.switchToChain =
              tH.RouterController.state.data?.switchToChain),
            (this.navigateTo = tH.RouterController.state.data?.navigateTo),
            (this.navigateWithReplace =
              tH.RouterController.state.data?.navigateWithReplace),
            (this.caipNetwork = tH.RouterController.state.data?.network),
            (this.activeChain = tH.RY.state.activeChain);
        }
        firstUpdated() {
          this.unsubscribe.push(
            tH.RY.subscribeKey("activeChain", (s) => (this.activeChain = s))
          );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.switchToChain
            ? tV.bq.CHAIN_NAME_MAP[this.switchToChain]
            : "supported";
          if (!this.switchToChain) return null;
          let x =
            "eip155" === this.switchToChain ? "Ethereum" : this.switchToChain;
          return rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        .padding=${["3xl", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-flex justifyContent="center" flexDirection="column" alignItems="center" gap="xl">
          <wui-visual
            name=${"eip155" === this.switchToChain ? "eth" : this.switchToChain}
          ></wui-visual>
          <wui-text
            data-testid=${`w3m-switch-active-chain-to-${x}`}
            variant="paragraph-500"
            color="fg-100"
            align="center"
            >Switch to <span class="capitalize">${x}</span></wui-text
          >
          <wui-text variant="small-400" color="fg-200" align="center">
            Connected wallet doesn't support connecting to ${s} chain. You
            need to connect with a different wallet.
          </wui-text>
          <wui-button
            data-testid="w3m-switch-active-chain-button"
            size="md"
            @click=${this.switchActiveChain.bind(this)}
            >Switch</wui-button
          >
        </wui-flex>
      </wui-flex>
    `;
        }
        switchActiveChain() {
          this.switchToChain &&
            (this.caipNetwork
              ? tH.RY.setActiveCaipNetwork(this.caipNetwork)
              : tH.RY.setActiveNamespace(this.switchToChain),
            tH.RouterController.reset("Connect"));
        }
      };
      (ic.styles = il),
        w3m_switch_active_chain_view_decorate(
          [(0, rf.Cb)()],
          ic.prototype,
          "activeChain",
          void 0
        ),
        (ic = w3m_switch_active_chain_view_decorate(
          [(0, tY.customElement)("w3m-switch-active-chain-view")],
          ic
        ));
      var iu = rp.iv`
  :host > wui-flex:first-child {
    overflow-y: auto;
    overflow-x: hidden;
    scrollbar-width: none;
  }

  :host > wui-flex:first-child::-webkit-scrollbar {
    display: none;
  }

  .preview-container,
  .details-container {
    width: 100%;
  }

  .token-image {
    width: 24px;
    height: 24px;
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
    border-radius: 12px;
  }

  wui-loading-hexagon {
    position: absolute;
  }

  .token-item {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--wui-spacing-xxs);
    padding: var(--wui-spacing-xs);
    height: 40px;
    border: none;
    border-radius: 80px;
    background: var(--wui-color-gray-glass-002);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    cursor: pointer;
    transition: background 0.2s linear;
  }

  .token-item:hover {
    background: var(--wui-color-gray-glass-005);
  }

  .preview-token-details-container {
    width: 100%;
  }

  .details-row {
    width: 100%;
    padding: var(--wui-spacing-s) var(--wui-spacing-xl);
    border-radius: var(--wui-border-radius-xxs);
    background: var(--wui-color-gray-glass-002);
  }

  .action-buttons-container {
    width: 100%;
    gap: var(--wui-spacing-xs);
  }

  .action-buttons-container > button {
    display: flex;
    align-items: center;
    justify-content: center;
    background: transparent;
    height: 48px;
    border-radius: var(--wui-border-radius-xs);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  .action-buttons-container > button:disabled {
    opacity: 0.8;
    cursor: not-allowed;
  }

  .action-button > wui-loading-spinner {
    display: inline-block;
  }

  .cancel-button:hover,
  .action-button:hover {
    cursor: pointer;
  }

  .action-buttons-container > wui-button.cancel-button {
    flex: 2;
  }

  .action-buttons-container > wui-button.action-button {
    flex: 4;
  }

  .action-buttons-container > button.action-button > wui-text {
    color: white;
  }

  .details-container > wui-flex {
    background: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xxs);
    width: 100%;
  }

  .details-container > wui-flex > button {
    border: none;
    background: none;
    padding: var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-xxs);
    transition: background 0.2s linear;
  }

  .details-container > wui-flex > button:hover {
    background: var(--wui-color-gray-glass-002);
  }

  .details-content-container {
    padding: var(--wui-spacing-1xs);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .details-content-container > wui-flex {
    width: 100%;
  }

  .details-row {
    width: 100%;
    padding: var(--wui-spacing-s) var(--wui-spacing-xl);
    border-radius: var(--wui-border-radius-xxs);
    background: var(--wui-color-gray-glass-002);
  }
`,
        w3m_swap_preview_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let id = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.detailsOpen = !0),
            (this.approvalTransaction = tH.nY.state.approvalTransaction),
            (this.swapTransaction = tH.nY.state.swapTransaction),
            (this.sourceToken = tH.nY.state.sourceToken),
            (this.sourceTokenAmount = tH.nY.state.sourceTokenAmount ?? ""),
            (this.sourceTokenPriceInUSD = tH.nY.state.sourceTokenPriceInUSD),
            (this.toToken = tH.nY.state.toToken),
            (this.toTokenAmount = tH.nY.state.toTokenAmount ?? ""),
            (this.toTokenPriceInUSD = tH.nY.state.toTokenPriceInUSD),
            (this.caipNetwork = tH.RY.state.activeCaipNetwork),
            (this.balanceSymbol = tH.AccountController.state.balanceSymbol),
            (this.gasPriceInUSD = tH.nY.state.gasPriceInUSD),
            (this.inputError = tH.nY.state.inputError),
            (this.loadingQuote = tH.nY.state.loadingQuote),
            (this.loadingApprovalTransaction =
              tH.nY.state.loadingApprovalTransaction),
            (this.loadingBuildTransaction =
              tH.nY.state.loadingBuildTransaction),
            (this.loadingTransaction = tH.nY.state.loadingTransaction),
            this.unsubscribe.push(
              ...[
                tH.AccountController.subscribeKey("balanceSymbol", (s) => {
                  this.balanceSymbol !== s && tH.RouterController.goBack();
                }),
                tH.RY.subscribeKey("activeCaipNetwork", (s) => {
                  this.caipNetwork !== s && (this.caipNetwork = s);
                }),
                tH.nY.subscribe((s) => {
                  (this.approvalTransaction = s.approvalTransaction),
                    (this.swapTransaction = s.swapTransaction),
                    (this.sourceToken = s.sourceToken),
                    (this.gasPriceInUSD = s.gasPriceInUSD),
                    (this.toToken = s.toToken),
                    (this.gasPriceInUSD = s.gasPriceInUSD),
                    (this.toTokenPriceInUSD = s.toTokenPriceInUSD),
                    (this.sourceTokenAmount = s.sourceTokenAmount ?? ""),
                    (this.toTokenAmount = s.toTokenAmount ?? ""),
                    (this.inputError = s.inputError),
                    s.inputError && tH.RouterController.goBack(),
                    (this.loadingQuote = s.loadingQuote),
                    (this.loadingApprovalTransaction =
                      s.loadingApprovalTransaction),
                    (this.loadingBuildTransaction = s.loadingBuildTransaction),
                    (this.loadingTransaction = s.loadingTransaction);
                }),
              ]
            );
        }
        firstUpdated() {
          tH.nY.getTransaction(), this.refreshTransaction();
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s?.()), clearInterval(this.interval);
        }
        render() {
          return rp.dy`
      <wui-flex flexDirection="column" .padding=${["0", "l", "l", "l"]} gap="s">
        ${this.templateSwap()}
      </wui-flex>
    `;
        }
        refreshTransaction() {
          this.interval = setInterval(() => {
            tH.nY.getApprovalLoadingState() || tH.nY.getTransaction();
          }, 1e4);
        }
        templateSwap() {
          let s = `${tY.UiHelperUtil.formatNumberToLocalString(
              parseFloat(this.sourceTokenAmount)
            )} ${this.sourceToken?.symbol}`,
            x = `${tY.UiHelperUtil.formatNumberToLocalString(
              parseFloat(this.toTokenAmount)
            )} ${this.toToken?.symbol}`,
            W = parseFloat(this.sourceTokenAmount) * this.sourceTokenPriceInUSD,
            X =
              parseFloat(this.toTokenAmount) * this.toTokenPriceInUSD -
              (this.gasPriceInUSD || 0),
            ee = tY.UiHelperUtil.formatNumberToLocalString(W),
            et = tY.UiHelperUtil.formatNumberToLocalString(X),
            er =
              this.loadingQuote ||
              this.loadingBuildTransaction ||
              this.loadingTransaction ||
              this.loadingApprovalTransaction;
          return rp.dy`
      <wui-flex flexDirection="column" alignItems="center" gap="l">
        <wui-flex class="preview-container" flexDirection="column" alignItems="flex-start" gap="l">
          <wui-flex
            class="preview-token-details-container"
            alignItems="center"
            justifyContent="space-between"
            gap="l"
          >
            <wui-flex flexDirection="column" alignItems="flex-start" gap="4xs">
              <wui-text variant="small-400" color="fg-150">Send</wui-text>
              <wui-text variant="paragraph-400" color="fg-100">$${ee}</wui-text>
            </wui-flex>
            <wui-token-button
              flexDirection="row-reverse"
              text=${s}
              imageSrc=${this.sourceToken?.logoUri}
            >
            </wui-token-button>
          </wui-flex>
          <wui-icon name="recycleHorizontal" color="fg-200" size="md"></wui-icon>
          <wui-flex
            class="preview-token-details-container"
            alignItems="center"
            justifyContent="space-between"
            gap="l"
          >
            <wui-flex flexDirection="column" alignItems="flex-start" gap="4xs">
              <wui-text variant="small-400" color="fg-150">Receive</wui-text>
              <wui-text variant="paragraph-400" color="fg-100">$${et}</wui-text>
            </wui-flex>
            <wui-token-button
              flexDirection="row-reverse"
              text=${x}
              imageSrc=${this.toToken?.logoUri}
            >
            </wui-token-button>
          </wui-flex>
        </wui-flex>

        ${this.templateDetails()}

        <wui-flex flexDirection="row" alignItems="center" justifyContent="center" gap="xs">
          <wui-icon size="sm" color="fg-200" name="infoCircle"></wui-icon>
          <wui-text variant="small-400" color="fg-200">Review transaction carefully</wui-text>
        </wui-flex>

        <wui-flex
          class="action-buttons-container"
          flexDirection="row"
          alignItems="center"
          justifyContent="space-between"
          gap="xs"
        >
          <wui-button
            class="cancel-button"
            fullWidth
            size="lg"
            borderRadius="xs"
            variant="neutral"
            @click=${this.onCancelTransaction.bind(this)}
          >
            <wui-text variant="paragraph-600" color="fg-200">Cancel</wui-text>
          </wui-button>
          <wui-button
            class="action-button"
            fullWidth
            size="lg"
            borderRadius="xs"
            variant="main"
            ?loading=${er}
            ?disabled=${er}
            @click=${this.onSendTransaction.bind(this)}
          >
            <wui-text variant="paragraph-600" color="inverse-100">
              ${this.actionButtonLabel()}
            </wui-text>
          </wui-button>
        </wui-flex>
      </wui-flex>
    `;
        }
        templateDetails() {
          return this.sourceToken && this.toToken && !this.inputError
            ? rp.dy`<w3m-swap-details .detailsOpen=${this.detailsOpen}></w3m-swap-details>`
            : null;
        }
        actionButtonLabel() {
          return this.loadingApprovalTransaction
            ? "Approving..."
            : this.approvalTransaction
            ? "Approve"
            : "Swap";
        }
        onCancelTransaction() {
          tH.RouterController.goBack();
        }
        onSendTransaction() {
          this.approvalTransaction
            ? tH.nY.sendTransactionForApproval(this.approvalTransaction)
            : tH.nY.sendTransactionForSwap(this.swapTransaction);
        }
      };
      (id.styles = iu),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "interval",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "detailsOpen",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "approvalTransaction",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "swapTransaction",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "sourceToken",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "sourceTokenAmount",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "sourceTokenPriceInUSD",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "toToken",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "toTokenAmount",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "toTokenPriceInUSD",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "caipNetwork",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "balanceSymbol",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "gasPriceInUSD",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "inputError",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "loadingQuote",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "loadingApprovalTransaction",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "loadingBuildTransaction",
          void 0
        ),
        w3m_swap_preview_view_decorate(
          [(0, rf.SB)()],
          id.prototype,
          "loadingTransaction",
          void 0
        ),
        (id = w3m_swap_preview_view_decorate(
          [(0, tY.customElement)("w3m-swap-preview-view")],
          id
        ));
      var ih = rp.iv`
  :host {
    --tokens-scroll--top-opacity: 0;
    --tokens-scroll--bottom-opacity: 1;
    --suggested-tokens-scroll--left-opacity: 0;
    --suggested-tokens-scroll--right-opacity: 1;
  }

  :host > wui-flex:first-child {
    overflow-y: hidden;
    overflow-x: hidden;
    scrollbar-width: none;
    scrollbar-height: none;
  }

  :host > wui-flex:first-child::-webkit-scrollbar {
    display: none;
  }

  wui-loading-hexagon {
    position: absolute;
  }

  .suggested-tokens-container {
    overflow-x: auto;
    mask-image: linear-gradient(
      to right,
      rgba(0, 0, 0, calc(1 - var(--suggested-tokens-scroll--left-opacity))) 0px,
      rgba(200, 200, 200, calc(1 - var(--suggested-tokens-scroll--left-opacity))) 1px,
      black 50px,
      black 90px,
      black calc(100% - 90px),
      black calc(100% - 50px),
      rgba(155, 155, 155, calc(1 - var(--suggested-tokens-scroll--right-opacity))) calc(100% - 1px),
      rgba(0, 0, 0, calc(1 - var(--suggested-tokens-scroll--right-opacity))) 100%
    );
  }

  .suggested-tokens-container::-webkit-scrollbar {
    display: none;
  }

  .tokens-container {
    border-top: 1px solid var(--wui-color-gray-glass-005);
    height: 100%;
    max-height: 390px;
  }

  .tokens {
    width: 100%;
    overflow-y: auto;
    mask-image: linear-gradient(
      to bottom,
      rgba(0, 0, 0, calc(1 - var(--tokens-scroll--top-opacity))) 0px,
      rgba(200, 200, 200, calc(1 - var(--tokens-scroll--top-opacity))) 1px,
      black 50px,
      black 90px,
      black calc(100% - 90px),
      black calc(100% - 50px),
      rgba(155, 155, 155, calc(1 - var(--tokens-scroll--bottom-opacity))) calc(100% - 1px),
      rgba(0, 0, 0, calc(1 - var(--tokens-scroll--bottom-opacity))) 100%
    );
  }

  .network-search-input,
  .select-network-button {
    height: 40px;
  }

  .select-network-button {
    border: none;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: var(--wui-spacing-xs);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
    background-color: transparent;
    border-radius: var(--wui-border-radius-xxs);
    padding: var(--wui-spacing-xs);
    align-items: center;
    transition: background-color 0.2s linear;
  }

  .select-network-button:hover {
    background-color: var(--wui-color-gray-glass-002);
  }

  .select-network-button > wui-image {
    width: 26px;
    height: 26px;
    border-radius: var(--wui-border-radius-xs);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }
`,
        w3m_swap_select_token_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ip = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.targetToken = tH.RouterController.state.data?.target),
            (this.sourceToken = tH.nY.state.sourceToken),
            (this.sourceTokenAmount = tH.nY.state.sourceTokenAmount),
            (this.toToken = tH.nY.state.toToken),
            (this.myTokensWithBalance = tH.nY.state.myTokensWithBalance),
            (this.popularTokens = tH.nY.state.popularTokens),
            (this.searchValue = ""),
            this.unsubscribe.push(
              ...[
                tH.nY.subscribe((s) => {
                  (this.sourceToken = s.sourceToken),
                    (this.toToken = s.toToken),
                    (this.myTokensWithBalance = s.myTokensWithBalance);
                }),
              ]
            );
        }
        updated() {
          let s = this.renderRoot?.querySelector(".suggested-tokens-container");
          s?.addEventListener(
            "scroll",
            this.handleSuggestedTokensScroll.bind(this)
          );
          let x = this.renderRoot?.querySelector(".tokens");
          x?.addEventListener("scroll", this.handleTokenListScroll.bind(this));
        }
        disconnectedCallback() {
          super.disconnectedCallback();
          let s = this.renderRoot?.querySelector(".suggested-tokens-container"),
            x = this.renderRoot?.querySelector(".tokens");
          s?.removeEventListener(
            "scroll",
            this.handleSuggestedTokensScroll.bind(this)
          ),
            x?.removeEventListener(
              "scroll",
              this.handleTokenListScroll.bind(this)
            ),
            clearInterval(this.interval);
        }
        render() {
          return rp.dy`
      <wui-flex flexDirection="column" gap="s">
        ${this.templateSearchInput()} ${this.templateSuggestedTokens()} ${this.templateTokens()}
      </wui-flex>
    `;
        }
        onSelectToken(s) {
          "sourceToken" === this.targetToken
            ? tH.nY.setSourceToken(s)
            : (tH.nY.setToToken(s),
              this.sourceToken && this.sourceTokenAmount && tH.nY.swapTokens()),
            tH.RouterController.goBack();
        }
        templateSearchInput() {
          return rp.dy`
      <wui-flex .padding=${["3xs", "s", "0", "s"]} gap="xs">
        <wui-input-text
          data-testid="swap-select-token-search-input"
          class="network-search-input"
          size="sm"
          placeholder="Search token"
          icon="search"
          .value=${this.searchValue}
          @inputChange=${this.onSearchInputChange.bind(this)}
        ></wui-input-text>
      </wui-flex>
    `;
        }
        templateTokens() {
          let s = this.myTokensWithBalance
              ? Object.values(this.myTokensWithBalance)
              : [],
            x = this.popularTokens ? this.popularTokens : [],
            W = this.filterTokensWithText(s, this.searchValue),
            X = this.filterTokensWithText(x, this.searchValue);
          return rp.dy`
      <wui-flex class="tokens-container">
        <wui-flex class="tokens" .padding=${[
          "0",
          "s",
          "s",
          "s",
        ]} flexDirection="column">
          ${
            W?.length > 0
              ? rp.dy`
                <wui-flex justifyContent="flex-start" padding="s">
                  <wui-text variant="paragraph-500" color="fg-200">Your tokens</wui-text>
                </wui-flex>
                ${W.map((s) => {
                  let x =
                    s.symbol === this.sourceToken?.symbol ||
                    s.symbol === this.toToken?.symbol;
                  return rp.dy`
                    <wui-token-list-item
                      data-testid="swap-select-token-item-${s.symbol}"
                      name=${s.name}
                      ?disabled=${x}
                      symbol=${s.symbol}
                      price=${s?.price}
                      amount=${s?.quantity?.numeric}
                      imageSrc=${s.logoUri}
                      @click=${() => {
                        x || this.onSelectToken(s);
                      }}
                    >
                    </wui-token-list-item>
                  `;
                })}
              `
              : null
          }

          <wui-flex justifyContent="flex-start" padding="s">
            <wui-text variant="paragraph-500" color="fg-200">Tokens</wui-text>
          </wui-flex>
          ${
            X?.length > 0
              ? X.map(
                  (s) => rp.dy`
                  <wui-token-list-item
                    data-testid="swap-select-token-item-${s.symbol}"
                    name=${s.name}
                    symbol=${s.symbol}
                    imageSrc=${s.logoUri}
                    @click=${() => this.onSelectToken(s)}
                  >
                  </wui-token-list-item>
                `
                )
              : null
          }
        </wui-flex>
      </wui-flex>
    `;
        }
        templateSuggestedTokens() {
          let s = tH.nY.state.suggestedTokens
            ? tH.nY.state.suggestedTokens.slice(0, 8)
            : null;
          return s
            ? rp.dy`
      <wui-flex class="suggested-tokens-container" .padding=${[
        "0",
        "s",
        "0",
        "s",
      ]} gap="xs">
        ${s.map(
          (s) => rp.dy`
            <wui-token-button
              text=${s.symbol}
              imageSrc=${s.logoUri}
              @click=${() => this.onSelectToken(s)}
            >
            </wui-token-button>
          `
        )}
      </wui-flex>
    `
            : null;
        }
        onSearchInputChange(s) {
          this.searchValue = s.detail;
        }
        handleSuggestedTokensScroll() {
          let s = this.renderRoot?.querySelector(".suggested-tokens-container");
          s &&
            (s.style.setProperty(
              "--suggested-tokens-scroll--left-opacity",
              tY.MathUtil.interpolate([0, 100], [0, 1], s.scrollLeft).toString()
            ),
            s.style.setProperty(
              "--suggested-tokens-scroll--right-opacity",
              tY.MathUtil.interpolate(
                [0, 100],
                [0, 1],
                s.scrollWidth - s.scrollLeft - s.offsetWidth
              ).toString()
            ));
        }
        handleTokenListScroll() {
          let s = this.renderRoot?.querySelector(".tokens");
          s &&
            (s.style.setProperty(
              "--tokens-scroll--top-opacity",
              tY.MathUtil.interpolate([0, 100], [0, 1], s.scrollTop).toString()
            ),
            s.style.setProperty(
              "--tokens-scroll--bottom-opacity",
              tY.MathUtil.interpolate(
                [0, 100],
                [0, 1],
                s.scrollHeight - s.scrollTop - s.offsetHeight
              ).toString()
            ));
        }
        filterTokensWithText(s, x) {
          return s.filter((s) =>
            `${s.symbol} ${s.name} ${s.address}`
              .toLowerCase()
              .includes(x.toLowerCase())
          );
        }
      };
      (ip.styles = ih),
        w3m_swap_select_token_view_decorate(
          [(0, rf.SB)()],
          ip.prototype,
          "interval",
          void 0
        ),
        w3m_swap_select_token_view_decorate(
          [(0, rf.SB)()],
          ip.prototype,
          "targetToken",
          void 0
        ),
        w3m_swap_select_token_view_decorate(
          [(0, rf.SB)()],
          ip.prototype,
          "sourceToken",
          void 0
        ),
        w3m_swap_select_token_view_decorate(
          [(0, rf.SB)()],
          ip.prototype,
          "sourceTokenAmount",
          void 0
        ),
        w3m_swap_select_token_view_decorate(
          [(0, rf.SB)()],
          ip.prototype,
          "toToken",
          void 0
        ),
        w3m_swap_select_token_view_decorate(
          [(0, rf.SB)()],
          ip.prototype,
          "myTokensWithBalance",
          void 0
        ),
        w3m_swap_select_token_view_decorate(
          [(0, rf.SB)()],
          ip.prototype,
          "popularTokens",
          void 0
        ),
        w3m_swap_select_token_view_decorate(
          [(0, rf.SB)()],
          ip.prototype,
          "searchValue",
          void 0
        ),
        (ip = w3m_swap_select_token_view_decorate(
          [(0, tY.customElement)("w3m-swap-select-token-view")],
          ip
        ));
      var ig = rp.iv`
  :host > wui-flex:first-child {
    height: 500px;
    overflow-y: auto;
    overflow-x: hidden;
    scrollbar-width: none;
  }

  :host > wui-flex:first-child::-webkit-scrollbar {
    display: none;
  }
`;
      let im = class extends rp.oi {
        render() {
          return rp.dy`
      <wui-flex flexDirection="column" .padding=${["0", "m", "m", "m"]} gap="s">
        <w3m-activity-list page="activity"></w3m-activity-list>
      </wui-flex>
    `;
        }
      };
      (im.styles = ig),
        (im = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([(0, tY.customElement)("w3m-transactions-view")], im));
      let iw = [
          {
            images: ["network", "layers", "system"],
            title: "The system’s nuts and bolts",
            text: "A network is what brings the blockchain to life, as this technical infrastructure allows apps to access the ledger and smart contract services.",
          },
          {
            images: ["noun", "defiAlt", "dao"],
            title: "Designed for different uses",
            text: "Each network is designed differently, and may therefore suit certain apps and experiences.",
          },
        ],
        ib = class extends rp.oi {
          render() {
            return rp.dy`
      <wui-flex
        flexDirection="column"
        .padding=${["xxl", "xl", "xl", "xl"]}
        alignItems="center"
        gap="xl"
      >
        <w3m-help-widget .data=${iw}></w3m-help-widget>
        <wui-button
          variant="main"
          size="md"
          @click=${() => {
            tH.j1.openHref(
              "https://ethereum.org/en/developers/docs/networks/",
              "_blank"
            );
          }}
        >
          Learn more
          <wui-icon color="inherit" slot="iconRight" name="externalLink"></wui-icon>
        </wui-button>
      </wui-flex>
    `;
          }
        };
      ib = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-what-is-a-network-view")], ib);
      let iv = [
          {
            images: ["login", "profile", "lock"],
            title: "One login for all of web3",
            text: "Log in to any app by connecting your wallet. Say goodbye to countless passwords!",
          },
          {
            images: ["defi", "nft", "eth"],
            title: "A home for your digital assets",
            text: "A wallet lets you store, send and receive digital assets like cryptocurrencies and NFTs.",
          },
          {
            images: ["browser", "noun", "dao"],
            title: "Your gateway to a new web",
            text: "With your wallet, you can explore and interact with DeFi, NFTs, DAOs, and much more.",
          },
        ],
        iy = class extends rp.oi {
          render() {
            return rp.dy`
      <wui-flex
        flexDirection="column"
        .padding=${["xxl", "xl", "xl", "xl"]}
        alignItems="center"
        gap="xl"
      >
        <w3m-help-widget .data=${iv}></w3m-help-widget>
        <wui-button variant="main" size="md" @click=${this.onGetWallet.bind(
          this
        )}>
          <wui-icon color="inherit" slot="iconLeft" name="wallet"></wui-icon>
          Get a wallet
        </wui-button>
      </wui-flex>
    `;
          }
          onGetWallet() {
            tH.Xs.sendEvent({ type: "track", event: "CLICK_GET_WALLET" }),
              tH.RouterController.push("GetWallet");
          }
        };
      iy = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-what-is-a-wallet-view")], iy);
      let i_ = class extends rp.oi {
        render() {
          return rp.dy`
      <wui-flex
        flexDirection="column"
        .padding=${["xxl", "3xl", "xl", "3xl"]}
        alignItems="center"
        gap="xl"
      >
        <wui-visual name="onrampCard"></wui-visual>
        <wui-flex flexDirection="column" gap="xs" alignItems="center">
          <wui-text align="center" variant="paragraph-500" color="fg-100">
            Quickly and easily buy digital assets!
          </wui-text>
          <wui-text align="center" variant="small-400" color="fg-200">
            Simply select your preferred onramp provider and add digital assets to your account
            using your credit card or bank transfer
          </wui-text>
        </wui-flex>
        <wui-button @click=${tH.RouterController.goBack}>
          <wui-icon size="sm" color="inherit" name="add" slot="iconLeft"></wui-icon>
          Buy
        </wui-button>
      </wui-flex>
    `;
        }
      };
      i_ = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-what-is-a-buy-view")], i_);
      var iC = rp.iv`
  wui-loading-spinner {
    margin: 9px auto;
  }

  .email-display,
  .email-display wui-text {
    max-width: 100%;
  }
`,
        w3m_email_otp_widget_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ix = class extends rp.oi {
        firstUpdated() {
          this.startOTPTimeout();
        }
        disconnectedCallback() {
          clearTimeout(this.OTPTimeout);
        }
        constructor() {
          super(),
            (this.loading = !1),
            (this.timeoutTimeLeft = t7.$D.getTimeToNextEmailLogin()),
            (this.error = ""),
            (this.otp = ""),
            (this.email = tH.RouterController.state.data?.email),
            (this.authConnector = tH.ConnectorController.getAuthConnector());
        }
        render() {
          if (!this.email)
            throw Error("w3m-email-otp-widget: No email provided");
          let s = !!this.timeoutTimeLeft,
            x = this.getFooterLabels(s);
          return rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        .padding=${["l", "0", "l", "0"]}
        gap="l"
      >
        <wui-flex
          class="email-display"
          flexDirection="column"
          alignItems="center"
          .padding=${["0", "xl", "0", "xl"]}
        >
          <wui-text variant="paragraph-400" color="fg-100" align="center">
            Enter the code we sent to
          </wui-text>
          <wui-text variant="paragraph-500" color="fg-100" lineClamp="1" align="center">
            ${this.email}
          </wui-text>
        </wui-flex>

        <wui-text variant="small-400" color="fg-200">The code expires in 20 minutes</wui-text>

        ${
          this.loading
            ? rp.dy`<wui-loading-spinner size="xl" color="accent-100"></wui-loading-spinner>`
            : rp.dy` <wui-flex flexDirection="column" alignItems="center" gap="xs">
              <wui-otp
                dissabled
                length="6"
                @inputChange=${this.onOtpInputChange.bind(this)}
                .otp=${this.otp}
              ></wui-otp>
              ${
                this.error
                  ? rp.dy`
                    <wui-text variant="small-400" align="center" color="error-100">
                      ${this.error}. Try Again
                    </wui-text>
                  `
                  : null
              }
            </wui-flex>`
        }

        <wui-flex alignItems="center" gap="xs">
          <wui-text variant="small-400" color="fg-200">${x.title}</wui-text>
          <wui-link @click=${this.onResendCode.bind(this)} .disabled=${s}>
            ${x.action}
          </wui-link>
        </wui-flex>
      </wui-flex>
    `;
        }
        startOTPTimeout() {
          (this.timeoutTimeLeft = t7.$D.getTimeToNextEmailLogin()),
            (this.OTPTimeout = setInterval(() => {
              this.timeoutTimeLeft > 0
                ? (this.timeoutTimeLeft = t7.$D.getTimeToNextEmailLogin())
                : clearInterval(this.OTPTimeout);
            }, 1e3));
        }
        async onOtpInputChange(s) {
          try {
            !this.loading &&
              ((this.otp = s.detail),
              this.authConnector &&
                6 === this.otp.length &&
                ((this.loading = !0), await this.onOtpSubmit?.(this.otp)));
          } catch (s) {
            (this.error = tH.j1.parseError(s)), (this.loading = !1);
          }
        }
        async onResendCode() {
          try {
            if (this.onOtpResend) {
              if (!this.loading && !this.timeoutTimeLeft) {
                (this.error = ""), (this.otp = "");
                let s = tH.ConnectorController.getAuthConnector();
                if (!s || !this.email)
                  throw Error("w3m-email-otp-widget: Unable to resend email");
                (this.loading = !0),
                  await this.onOtpResend(this.email),
                  this.startOTPTimeout(),
                  tH.SnackController.showSuccess("Code email resent");
              }
            } else this.onStartOver && this.onStartOver();
          } catch (s) {
            tH.SnackController.showError(s);
          } finally {
            this.loading = !1;
          }
        }
        getFooterLabels(s) {
          return this.onStartOver
            ? {
                title: "Something wrong?",
                action: `Try again ${s ? `in ${this.timeoutTimeLeft}s` : ""}`,
              }
            : {
                title: "Didn't receive it?",
                action: `Resend ${s ? `in ${this.timeoutTimeLeft}s` : "Code"}`,
              };
        }
      };
      (ix.styles = iC),
        w3m_email_otp_widget_decorate(
          [(0, rf.SB)()],
          ix.prototype,
          "loading",
          void 0
        ),
        w3m_email_otp_widget_decorate(
          [(0, rf.SB)()],
          ix.prototype,
          "timeoutTimeLeft",
          void 0
        ),
        w3m_email_otp_widget_decorate(
          [(0, rf.SB)()],
          ix.prototype,
          "error",
          void 0
        ),
        (ix = w3m_email_otp_widget_decorate(
          [(0, tY.customElement)("w3m-email-otp-widget")],
          ix
        ));
      let iE = class extends ix {
        constructor() {
          super(...arguments),
            (this.onOtpSubmit = async (s) => {
              try {
                if (this.authConnector) {
                  if (
                    (await this.authConnector.provider.connectOtp({ otp: s }),
                    tH.Xs.sendEvent({
                      type: "track",
                      event: "EMAIL_VERIFICATION_CODE_PASS",
                    }),
                    tH.RY.state.activeChain)
                  )
                    await tH.ConnectionController.connectExternal(
                      this.authConnector,
                      tH.RY.state.activeChain
                    );
                  else throw Error("Active chain is not set on ChainControll");
                  tH.Xs.sendEvent({
                    type: "track",
                    event: "CONNECT_SUCCESS",
                    properties: {
                      method: "email",
                      name: this.authConnector.name || "Unknown",
                    },
                  }),
                    tH.OptionsController.state.siwx || tH.IN.close();
                }
              } catch (s) {
                throw (
                  (tH.Xs.sendEvent({
                    type: "track",
                    event: "EMAIL_VERIFICATION_CODE_FAIL",
                    properties: { message: tH.j1.parseError(s) },
                  }),
                  s)
                );
              }
            }),
            (this.onOtpResend = async (s) => {
              this.authConnector &&
                (await this.authConnector.provider.connectEmail({ email: s }),
                tH.Xs.sendEvent({
                  type: "track",
                  event: "EMAIL_VERIFICATION_CODE_SENT",
                }));
            });
        }
      };
      iE = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-email-verify-otp-view")], iE);
      var iA = rp.iv`
  wui-icon-box {
    height: var(--wui-icon-box-size-xl);
    width: var(--wui-icon-box-size-xl);
  }
`,
        w3m_email_verify_device_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iS = class extends rp.oi {
        constructor() {
          super(),
            (this.email = tH.RouterController.state.data?.email),
            (this.authConnector = tH.ConnectorController.getAuthConnector()),
            (this.loading = !1),
            this.listenForDeviceApproval();
        }
        render() {
          if (!this.email)
            throw Error("w3m-email-verify-device-view: No email provided");
          if (!this.authConnector)
            throw Error(
              "w3m-email-verify-device-view: No auth connector provided"
            );
          return rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        .padding=${["xxl", "s", "xxl", "s"]}
        gap="l"
      >
        <wui-icon-box
          size="xl"
          iconcolor="accent-100"
          backgroundcolor="accent-100"
          icon="verify"
          background="opaque"
        ></wui-icon-box>

        <wui-flex flexDirection="column" alignItems="center" gap="s">
          <wui-flex flexDirection="column" alignItems="center">
            <wui-text variant="paragraph-400" color="fg-100">
              Approve the login link we sent to
            </wui-text>
            <wui-text variant="paragraph-400" color="fg-100"><b>${
              this.email
            }</b></wui-text>
          </wui-flex>

          <wui-text variant="small-400" color="fg-200" align="center">
            The code expires in 20 minutes
          </wui-text>

          <wui-flex alignItems="center" id="w3m-resend-section" gap="xs">
            <wui-text variant="small-400" color="fg-100" align="center">
              Didn't receive it?
            </wui-text>
            <wui-link @click=${this.onResendCode.bind(this)} .disabled=${
            this.loading
          }>
              Resend email
            </wui-link>
          </wui-flex>
        </wui-flex>
      </wui-flex>
    `;
        }
        async listenForDeviceApproval() {
          if (this.authConnector)
            try {
              await this.authConnector.provider.connectDevice(),
                tH.Xs.sendEvent({
                  type: "track",
                  event: "DEVICE_REGISTERED_FOR_EMAIL",
                }),
                tH.Xs.sendEvent({
                  type: "track",
                  event: "EMAIL_VERIFICATION_CODE_SENT",
                }),
                tH.RouterController.replace("EmailVerifyOtp", {
                  email: this.email,
                });
            } catch (s) {
              tH.RouterController.goBack();
            }
        }
        async onResendCode() {
          try {
            if (!this.loading) {
              if (!this.authConnector || !this.email)
                throw Error("w3m-email-login-widget: Unable to resend email");
              (this.loading = !0),
                await this.authConnector.provider.connectEmail({
                  email: this.email,
                }),
                this.listenForDeviceApproval(),
                tH.SnackController.showSuccess("Code email resent");
            }
          } catch (s) {
            tH.SnackController.showError(s);
          } finally {
            this.loading = !1;
          }
        }
      };
      (iS.styles = iA),
        w3m_email_verify_device_view_decorate(
          [(0, rf.SB)()],
          iS.prototype,
          "loading",
          void 0
        ),
        (iS = w3m_email_verify_device_view_decorate(
          [(0, tY.customElement)("w3m-email-verify-device-view")],
          iS
        ));
      var ik = rp.iv`
  div {
    width: 100%;
  }

  [data-ready='false'] {
    transform: scale(1.05);
  }

  @media (max-width: 430px) {
    [data-ready='false'] {
      transform: translateY(-50px);
    }
  }
`,
        w3m_approve_transaction_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iT = class extends rp.oi {
        constructor() {
          super(),
            (this.bodyObserver = void 0),
            (this.unsubscribe = []),
            (this.iframe = document.getElementById("w3m-iframe")),
            (this.ready = !1),
            this.unsubscribe.push(
              ...[
                tH.IN.subscribeKey("open", (s) => {
                  s ||
                    (this.onHideIframe(),
                    tH.RouterController.popTransactionStack());
                }),
                tH.IN.subscribeKey("shake", (s) => {
                  s
                    ? (this.iframe.style.animation =
                        "w3m-shake 500ms var(--wui-ease-out-power-2)")
                    : (this.iframe.style.animation = "none");
                }),
              ]
            );
        }
        disconnectedCallback() {
          this.onHideIframe(),
            this.unsubscribe.forEach((s) => s()),
            this.bodyObserver?.unobserve(window.document.body);
        }
        async firstUpdated() {
          await this.syncTheme(), (this.iframe.style.display = "block");
          let s = this?.renderRoot?.querySelector("div");
          (this.bodyObserver = new ResizeObserver((x) => {
            let W = x?.[0]?.contentBoxSize,
              X = W?.[0]?.inlineSize;
            (this.iframe.style.height = "600px"),
              (s.style.height = "600px"),
              X && X <= 430
                ? ((this.iframe.style.width = "100%"),
                  (this.iframe.style.left = "0px"),
                  (this.iframe.style.bottom = "0px"),
                  (this.iframe.style.top = "unset"))
                : ((this.iframe.style.width = "360px"),
                  (this.iframe.style.left = "calc(50% - 180px)"),
                  (this.iframe.style.top = "calc(50% - 300px + 32px)"),
                  (this.iframe.style.bottom = "unset")),
              (this.ready = !0),
              this.onShowIframe();
          })),
            this.bodyObserver.observe(window.document.body);
        }
        render() {
          return rp.dy`<div data-ready=${this.ready} id="w3m-frame-container"></div>`;
        }
        onShowIframe() {
          let s = window.innerWidth <= 430;
          this.iframe.style.animation = s
            ? "w3m-iframe-zoom-in-mobile 200ms var(--wui-ease-out-power-2)"
            : "w3m-iframe-zoom-in 200ms var(--wui-ease-out-power-2)";
        }
        onHideIframe() {
          (this.iframe.style.display = "none"),
            (this.iframe.style.animation =
              "w3m-iframe-fade-out 200ms var(--wui-ease-out-power-2)");
        }
        async syncTheme() {
          let s = tH.ConnectorController.getAuthConnector();
          if (s) {
            let x = tH.ThemeController.getSnapshot().themeMode,
              W = tH.ThemeController.getSnapshot().themeVariables;
            await s.provider.syncTheme({
              themeVariables: W,
              w3mThemeVariables: (0, tV.tU)(W, x),
            });
          }
        }
      };
      (iT.styles = ik),
        w3m_approve_transaction_view_decorate(
          [(0, rf.SB)()],
          iT.prototype,
          "ready",
          void 0
        ),
        (iT = w3m_approve_transaction_view_decorate(
          [(0, tY.customElement)("w3m-approve-transaction-view")],
          iT
        ));
      let iI = class extends rp.oi {
        render() {
          return rp.dy`
      <wui-flex flexDirection="column" alignItems="center" gap="xl" padding="xl">
        <wui-text variant="paragraph-400" color="fg-100">Follow the instructions on</wui-text>
        <wui-chip
          icon="externalLink"
          variant="fill"
          href=${tH.bq.SECURE_SITE_DASHBOARD}
          imageSrc=${tH.bq.SECURE_SITE_FAVICON}
          data-testid="w3m-secure-website-button"
        >
        </wui-chip>
        <wui-text variant="small-400" color="fg-200">
          You will have to reconnect for security reasons
        </wui-text>
      </wui-flex>
    `;
        }
      };
      iI = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-upgrade-wallet-view")], iI);
      var iP = rp.iv`
  wui-email-input {
    width: 100%;
  }

  form {
    width: 100%;
    display: block;
    position: relative;
  }
`,
        w3m_update_email_wallet_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iR = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.formRef = (0, rQ.V)()),
            (this.initialEmail = tH.RouterController.state.data?.email ?? ""),
            (this.email = ""),
            (this.loading = !1);
        }
        firstUpdated() {
          this.formRef.value?.addEventListener("keydown", (s) => {
            "Enter" === s.key && this.onSubmitEmail(s);
          });
        }
        render() {
          let s =
            !this.loading &&
            this.email.length > 3 &&
            this.email !== this.initialEmail;
          return rp.dy`
      <wui-flex flexDirection="column" padding="m" gap="m">
        <form ${(0, rQ.i)(this.formRef)} @submit=${this.onSubmitEmail.bind(
            this
          )}>
          <wui-email-input
            value=${this.initialEmail}
            .disabled=${this.loading}
            @inputChange=${this.onEmailInputChange.bind(this)}
          >
          </wui-email-input>
          <input type="submit" hidden />
        </form>

        <wui-flex gap="s">
          <wui-button size="md" variant="neutral" fullWidth @click=${
            tH.RouterController.goBack
          }>
            Cancel
          </wui-button>

          <wui-button
            size="md"
            variant="main"
            fullWidth
            @click=${this.onSubmitEmail.bind(this)}
            .disabled=${!s}
            .loading=${this.loading}
          >
            Save
          </wui-button>
        </wui-flex>
      </wui-flex>
    `;
        }
        onEmailInputChange(s) {
          this.email = s.detail;
        }
        async onSubmitEmail(s) {
          try {
            if (this.loading) return;
            (this.loading = !0), s.preventDefault();
            let x = tH.ConnectorController.getAuthConnector();
            if (!x)
              throw Error("w3m-update-email-wallet: Auth connector not found");
            let W = await x.provider.updateEmail({ email: this.email });
            tH.Xs.sendEvent({ type: "track", event: "EMAIL_EDIT" }),
              "VERIFY_SECONDARY_OTP" === W.action
                ? tH.RouterController.push("UpdateEmailSecondaryOtp", {
                    email: this.initialEmail,
                    newEmail: this.email,
                  })
                : tH.RouterController.push("UpdateEmailPrimaryOtp", {
                    email: this.initialEmail,
                    newEmail: this.email,
                  });
          } catch (s) {
            tH.SnackController.showError(s), (this.loading = !1);
          }
        }
      };
      (iR.styles = iP),
        w3m_update_email_wallet_view_decorate(
          [(0, rf.SB)()],
          iR.prototype,
          "email",
          void 0
        ),
        w3m_update_email_wallet_view_decorate(
          [(0, rf.SB)()],
          iR.prototype,
          "loading",
          void 0
        ),
        (iR = w3m_update_email_wallet_view_decorate(
          [(0, tY.customElement)("w3m-update-email-wallet-view")],
          iR
        ));
      let iN = class extends ix {
        constructor() {
          super(),
            (this.email = tH.RouterController.state.data?.email),
            (this.onOtpSubmit = async (s) => {
              try {
                this.authConnector &&
                  (await this.authConnector.provider.updateEmailPrimaryOtp({
                    otp: s,
                  }),
                  tH.Xs.sendEvent({
                    type: "track",
                    event: "EMAIL_VERIFICATION_CODE_PASS",
                  }),
                  tH.RouterController.replace(
                    "UpdateEmailSecondaryOtp",
                    tH.RouterController.state.data
                  ));
              } catch (s) {
                throw (
                  (tH.Xs.sendEvent({
                    type: "track",
                    event: "EMAIL_VERIFICATION_CODE_FAIL",
                    properties: { message: tH.j1.parseError(s) },
                  }),
                  s)
                );
              }
            }),
            (this.onStartOver = () => {
              tH.RouterController.replace(
                "UpdateEmailWallet",
                tH.RouterController.state.data
              );
            });
        }
      };
      iN = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-update-email-primary-otp-view")], iN);
      let iO = class extends ix {
        constructor() {
          super(),
            (this.email = tH.RouterController.state.data?.newEmail),
            (this.onOtpSubmit = async (s) => {
              try {
                this.authConnector &&
                  (await this.authConnector.provider.updateEmailSecondaryOtp({
                    otp: s,
                  }),
                  tH.Xs.sendEvent({
                    type: "track",
                    event: "EMAIL_VERIFICATION_CODE_PASS",
                  }),
                  tH.RouterController.reset("Account"));
              } catch (s) {
                throw (
                  (tH.Xs.sendEvent({
                    type: "track",
                    event: "EMAIL_VERIFICATION_CODE_FAIL",
                    properties: { message: tH.j1.parseError(s) },
                  }),
                  s)
                );
              }
            }),
            (this.onStartOver = () => {
              tH.RouterController.replace(
                "UpdateEmailWallet",
                tH.RouterController.state.data
              );
            });
        }
      };
      iO = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-update-email-secondary-otp-view")], iO);
      var iM = rp.iv`
  :host > wui-flex {
    max-height: clamp(360px, 540px, 80vh);
    overflow: scroll;
    scrollbar-width: none;
  }

  :host > wui-flex::-webkit-scrollbar {
    display: none;
  }
`,
        w3m_unsupported_chain_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iD = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.swapUnsupportedChain =
              tH.RouterController.state.data?.swapUnsupportedChain),
            (this.disconecting = !1);
        }
        render() {
          return rp.dy`
      <wui-flex class="container" flexDirection="column" gap="0">
        <wui-flex
          class="container"
          flexDirection="column"
          .padding=${["m", "xl", "xs", "xl"]}
          alignItems="center"
          gap="xl"
        >
          ${this.descriptionTemplate()}
        </wui-flex>

        <wui-flex flexDirection="column" padding="s" gap="xs">
          ${this.networksTemplate()}
        </wui-flex>

        <wui-separator text="or"></wui-separator>
        <wui-flex flexDirection="column" padding="s" gap="xs">
          <wui-list-item
            variant="icon"
            iconVariant="overlay"
            icon="disconnect"
            ?chevron=${!1}
            .loading=${this.disconecting}
            @click=${this.onDisconnect.bind(this)}
            data-testid="disconnect-button"
          >
            <wui-text variant="paragraph-500" color="fg-200">Disconnect</wui-text>
          </wui-list-item>
        </wui-flex>
      </wui-flex>
    `;
        }
        descriptionTemplate() {
          return this.swapUnsupportedChain
            ? rp.dy`
        <wui-text variant="small-400" color="fg-200" align="center">
          The swap feature doesn’t support your current network. Switch to an available option to
          continue.
        </wui-text>
      `
            : rp.dy`
      <wui-text variant="small-400" color="fg-200" align="center">
        This app doesn’t support your current network. Switch to an available option to continue.
      </wui-text>
    `;
        }
        networksTemplate() {
          let s = tH.RY.getAllRequestedCaipNetworks(),
            x = tH.RY.getAllApprovedCaipNetworkIds(),
            W = tH.j1.sortRequestedNetworks(x, s),
            X = this.swapUnsupportedChain
              ? W.filter((s) =>
                  tH.bq.SWAP_SUPPORTED_NETWORKS.includes(s.caipNetworkId)
                )
              : W;
          return X.map(
            (s) => rp.dy`
        <wui-list-network
          imageSrc=${(0, rg.o)(tH.fz.getNetworkImage(s))}
          name=${s.name ?? "Unknown"}
          @click=${() => this.onSwitchNetwork(s)}
        >
        </wui-list-network>
      `
          );
        }
        async onDisconnect() {
          try {
            (this.disconecting = !0),
              await tH.ConnectionController.disconnect(),
              tH.Xs.sendEvent({ type: "track", event: "DISCONNECT_SUCCESS" }),
              tH.IN.close();
          } catch {
            tH.Xs.sendEvent({ type: "track", event: "DISCONNECT_ERROR" }),
              tH.SnackController.showError("Failed to disconnect");
          } finally {
            this.disconecting = !1;
          }
        }
        async onSwitchNetwork(s) {
          let x = tH.AccountController.state.caipAddress,
            W = tH.RY.getAllApprovedCaipNetworkIds(),
            X =
              (tH.RY.getNetworkProp("supportsAllNetworks", s.chainNamespace),
              tH.RouterController.state.data);
          x
            ? W?.includes(s.caipNetworkId)
              ? await tH.RY.switchActiveNetwork(s)
              : tH.RouterController.push("SwitchNetwork", { ...X, network: s })
            : x ||
              (tH.RY.setActiveCaipNetwork(s),
              tH.RouterController.push("Connect"));
        }
      };
      (iD.styles = iM),
        w3m_unsupported_chain_view_decorate(
          [(0, rf.SB)()],
          iD.prototype,
          "disconecting",
          void 0
        ),
        (iD = w3m_unsupported_chain_view_decorate(
          [(0, tY.customElement)("w3m-unsupported-chain-view")],
          iD
        ));
      var iB = rp.iv`
  wui-compatible-network {
    margin-top: var(--wui-spacing-l);
  }
`,
        w3m_wallet_receive_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iL = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.address = tH.AccountController.state.address),
            (this.profileName = tH.AccountController.state.profileName),
            (this.network = tH.RY.state.activeCaipNetwork),
            (this.preferredAccountType =
              tH.AccountController.state.preferredAccountType),
            this.unsubscribe.push(
              ...[
                tH.AccountController.subscribe((s) => {
                  s.address
                    ? ((this.address = s.address),
                      (this.profileName = s.profileName),
                      (this.preferredAccountType = s.preferredAccountType))
                    : tH.SnackController.showError("Account not found");
                }),
              ],
              tH.RY.subscribeKey("activeCaipNetwork", (s) => {
                s?.id && (this.network = s);
              })
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          if (!this.address)
            throw Error("w3m-wallet-receive-view: No account provided");
          let s = tH.fz.getNetworkImage(this.network);
          return rp.dy` <wui-flex
      flexDirection="column"
      .padding=${["0", "l", "l", "l"]}
      alignItems="center"
    >
      <wui-chip-button
        data-testid="receive-address-copy-button"
        @click=${this.onCopyClick.bind(this)}
        text=${tY.UiHelperUtil.getTruncateString({
          string: this.profileName || this.address || "",
          charsStart: this.profileName ? 18 : 4,
          charsEnd: this.profileName ? 0 : 4,
          truncate: this.profileName ? "end" : "middle",
        })}
        icon="copy"
        size="sm"
        imageSrc=${s || ""}
        variant="gray"
      ></wui-chip-button>
      <wui-flex
        flexDirection="column"
        .padding=${["l", "0", "0", "0"]}
        alignItems="center"
        gap="s"
      >
        <wui-qr-code
          size=${232}
          theme=${tH.ThemeController.state.themeMode}
          uri=${this.address}
          ?arenaClear=${!0}
          color=${(0, rg.o)(
            tH.ThemeController.state.themeVariables["--w3m-qr-color"]
          )}
          data-testid="wui-qr-code"
        ></wui-qr-code>
        <wui-text variant="paragraph-500" color="fg-100" align="center">
          Copy your address or scan this QR code
        </wui-text>
      </wui-flex>
      ${this.networkTemplate()}
    </wui-flex>`;
        }
        networkTemplate() {
          let s = tH.RY.getAllRequestedCaipNetworks(),
            x = tH.RY.checkIfSmartAccountEnabled(),
            W = tH.RY.state.activeCaipNetwork;
          if (
            this.preferredAccountType === t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT &&
            x
          )
            return W
              ? rp.dy`<wui-compatible-network
        @click=${this.onReceiveClick.bind(this)}
        text="Only receive assets on this network"
        .networkImages=${[tH.fz.getNetworkImage(W) ?? ""]}
      ></wui-compatible-network>`
              : null;
          let X = s?.filter((s) => s?.assets?.imageId)?.slice(0, 5),
            ee = X.map(tH.fz.getNetworkImage).filter(Boolean);
          return rp.dy`<wui-compatible-network
      @click=${this.onReceiveClick.bind(this)}
      text="Only receive assets on these networks"
      .networkImages=${ee}
    ></wui-compatible-network>`;
        }
        onReceiveClick() {
          tH.RouterController.push("WalletCompatibleNetworks");
        }
        onCopyClick() {
          try {
            this.address &&
              (tH.j1.copyToClopboard(this.address),
              tH.SnackController.showSuccess("Address copied"));
          } catch {
            tH.SnackController.showError("Failed to copy");
          }
        }
      };
      (iL.styles = iB),
        w3m_wallet_receive_view_decorate(
          [(0, rf.SB)()],
          iL.prototype,
          "address",
          void 0
        ),
        w3m_wallet_receive_view_decorate(
          [(0, rf.SB)()],
          iL.prototype,
          "profileName",
          void 0
        ),
        w3m_wallet_receive_view_decorate(
          [(0, rf.SB)()],
          iL.prototype,
          "network",
          void 0
        ),
        w3m_wallet_receive_view_decorate(
          [(0, rf.SB)()],
          iL.prototype,
          "preferredAccountType",
          void 0
        ),
        (iL = w3m_wallet_receive_view_decorate(
          [(0, tY.customElement)("w3m-wallet-receive-view")],
          iL
        ));
      var ij = rp.iv`
  :host > wui-flex {
    max-height: clamp(360px, 540px, 80vh);
    overflow: scroll;
    scrollbar-width: none;
  }

  :host > wui-flex::-webkit-scrollbar {
    display: none;
  }
`,
        w3m_wallet_compatible_networks_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iU = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.preferredAccountType =
              tH.AccountController.state.preferredAccountType),
            this.unsubscribe.push(
              tH.AccountController.subscribeKey("preferredAccountType", (s) => {
                this.preferredAccountType = s;
              })
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          return rp.dy` <wui-flex
      flexDirection="column"
      .padding=${["xs", "s", "m", "s"]}
      gap="xs"
    >
      <wui-banner
        icon="warningCircle"
        text="You can only receive assets on these networks"
      ></wui-banner>
      ${this.networkTemplate()}
    </wui-flex>`;
        }
        networkTemplate() {
          let s = tH.RY.getAllRequestedCaipNetworks(),
            x = tH.RY.getAllApprovedCaipNetworkIds(),
            W = tH.RY.state.activeCaipNetwork,
            X = tH.RY.checkIfSmartAccountEnabled(),
            ee = tH.j1.sortRequestedNetworks(x, s);
          if (
            X &&
            this.preferredAccountType === t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT
          ) {
            if (!W) return null;
            ee = [W];
          }
          return ee.map(
            (s) => rp.dy`
        <wui-list-network
          imageSrc=${(0, rg.o)(tH.fz.getNetworkImage(s))}
          name=${s.name ?? "Unknown"}
          ?transparent=${!0}
        >
        </wui-list-network>
      `
          );
        }
      };
      (iU.styles = ij),
        w3m_wallet_compatible_networks_view_decorate(
          [(0, rf.SB)()],
          iU.prototype,
          "preferredAccountType",
          void 0
        ),
        (iU = w3m_wallet_compatible_networks_view_decorate(
          [(0, tY.customElement)("w3m-wallet-compatible-networks-view")],
          iU
        ));
      var i$ = rp.iv`
  :host {
    display: block;
  }

  wui-flex {
    position: relative;
  }

  wui-icon-box {
    width: 40px;
    height: 40px;
    border-radius: var(--wui-border-radius-xs) !important;
    border: 5px solid var(--wui-color-bg-125);
    background: var(--wui-color-bg-175);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 3;
  }

  wui-button {
    --local-border-radius: var(--wui-border-radius-xs) !important;
  }

  .inputContainer {
    height: fit-content;
  }
`,
        w3m_wallet_send_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iF = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.token = tH.Si.state.token),
            (this.sendTokenAmount = tH.Si.state.sendTokenAmount),
            (this.receiverAddress = tH.Si.state.receiverAddress),
            (this.receiverProfileName = tH.Si.state.receiverProfileName),
            (this.loading = tH.Si.state.loading),
            (this.gasPriceInUSD = tH.Si.state.gasPriceInUSD),
            (this.gasPrice = tH.Si.state.gasPrice),
            (this.message = "Preview Send"),
            this.fetchNetworkPrice(),
            this.fetchBalances(),
            this.unsubscribe.push(
              ...[
                tH.Si.subscribe((s) => {
                  (this.token = s.token),
                    (this.sendTokenAmount = s.sendTokenAmount),
                    (this.receiverAddress = s.receiverAddress),
                    (this.gasPriceInUSD = s.gasPriceInUSD),
                    (this.receiverProfileName = s.receiverProfileName),
                    (this.loading = s.loading);
                }),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          return (
            this.getMessage(),
            rp.dy` <wui-flex flexDirection="column" .padding=${[
              "0",
              "l",
              "l",
              "l",
            ]}>
      <wui-flex class="inputContainer" gap="xs" flexDirection="column">
        <w3m-input-token
          .token=${this.token}
          .sendTokenAmount=${this.sendTokenAmount}
          .gasPriceInUSD=${this.gasPriceInUSD}
          .gasPrice=${this.gasPrice}
        ></w3m-input-token>
        <wui-icon-box
          size="inherit"
          backgroundColor="fg-300"
          iconSize="lg"
          iconColor="fg-250"
          background="opaque"
          icon="arrowBottom"
        ></wui-icon-box>
        <w3m-input-address
          .value=${
            this.receiverProfileName
              ? this.receiverProfileName
              : this.receiverAddress
          }
        ></w3m-input-address>
      </wui-flex>
      <wui-flex .margin=${["l", "0", "0", "0"]}>
        <wui-button
          @click=${this.onButtonClick.bind(this)}
          ?disabled=${!this.message.startsWith("Preview Send")}
          size="lg"
          variant="main"
          ?loading=${this.loading}
          fullWidth
        >
          ${this.message}
        </wui-button>
      </wui-flex>
    </wui-flex>`
          );
        }
        async fetchBalances() {
          await tH.AccountController.fetchTokenBalance();
        }
        async fetchNetworkPrice() {
          await tH.nY.getNetworkTokenPrice();
          let s = await tH.nY.getInitialGasPrice();
          await tH.Si.fetchNetworkBalance(),
            s?.gasPrice &&
              s?.gasPriceInUSD &&
              (tH.Si.setGasPrice(s.gasPrice),
              tH.Si.setGasPriceInUsd(s.gasPriceInUSD));
        }
        onButtonClick() {
          tH.RouterController.push("WalletSendPreview");
        }
        getMessage() {
          if (
            ((this.message = "Preview Send"),
            this.receiverAddress &&
              !tH.j1.isAddress(this.receiverAddress, tH.RY.state.activeChain) &&
              (this.message = "Invalid Address"),
            this.receiverAddress || (this.message = "Add Address"),
            tH.Si.hasInsufficientGasFunds() &&
              (this.message = "Insufficient Gas Funds"),
            this.sendTokenAmount &&
              this.token &&
              this.sendTokenAmount > Number(this.token.quantity.numeric) &&
              (this.message = "Insufficient Funds"),
            this.sendTokenAmount || (this.message = "Add Amount"),
            this.sendTokenAmount && this.token?.price)
          ) {
            let s = this.sendTokenAmount * this.token.price;
            s || (this.message = "Incorrect Value");
          }
          this.token || (this.message = "Select Token");
        }
      };
      (iF.styles = i$),
        w3m_wallet_send_view_decorate(
          [(0, rf.SB)()],
          iF.prototype,
          "token",
          void 0
        ),
        w3m_wallet_send_view_decorate(
          [(0, rf.SB)()],
          iF.prototype,
          "sendTokenAmount",
          void 0
        ),
        w3m_wallet_send_view_decorate(
          [(0, rf.SB)()],
          iF.prototype,
          "receiverAddress",
          void 0
        ),
        w3m_wallet_send_view_decorate(
          [(0, rf.SB)()],
          iF.prototype,
          "receiverProfileName",
          void 0
        ),
        w3m_wallet_send_view_decorate(
          [(0, rf.SB)()],
          iF.prototype,
          "loading",
          void 0
        ),
        w3m_wallet_send_view_decorate(
          [(0, rf.SB)()],
          iF.prototype,
          "gasPriceInUSD",
          void 0
        ),
        w3m_wallet_send_view_decorate(
          [(0, rf.SB)()],
          iF.prototype,
          "gasPrice",
          void 0
        ),
        w3m_wallet_send_view_decorate(
          [(0, rf.SB)()],
          iF.prototype,
          "message",
          void 0
        ),
        (iF = w3m_wallet_send_view_decorate(
          [(0, tY.customElement)("w3m-wallet-send-view")],
          iF
        ));
      var iz = rp.iv`
  .contentContainer {
    height: 440px;
    overflow: scroll;
    scrollbar-width: none;
  }

  .contentContainer::-webkit-scrollbar {
    display: none;
  }

  wui-icon-box {
    width: 40px;
    height: 40px;
    border-radius: var(--wui-border-radius-xxs);
  }
`,
        w3m_wallet_send_select_token_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iH = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tokenBalance = tH.AccountController.state.tokenBalance),
            (this.search = ""),
            (this.onDebouncedSearch = tH.j1.debounce((s) => {
              this.search = s;
            })),
            this.unsubscribe.push(
              ...[
                tH.AccountController.subscribe((s) => {
                  this.tokenBalance = s.tokenBalance;
                }),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          return rp.dy`
      <wui-flex flexDirection="column">
        ${this.templateSearchInput()} <wui-separator></wui-separator> ${this.templateTokens()}
      </wui-flex>
    `;
        }
        templateSearchInput() {
          return rp.dy`
      <wui-flex gap="xs" padding="s">
        <wui-input-text
          @inputChange=${this.onInputChange.bind(this)}
          class="network-search-input"
          size="sm"
          placeholder="Search token"
          icon="search"
        ></wui-input-text>
      </wui-flex>
    `;
        }
        templateTokens() {
          return (
            (this.tokens = this.tokenBalance?.filter(
              (s) => s.chainId === tH.RY.state.activeCaipNetwork?.caipNetworkId
            )),
            this.search
              ? (this.filteredTokens = this.tokenBalance?.filter((s) =>
                  s.name.toLowerCase().includes(this.search.toLowerCase())
                ))
              : (this.filteredTokens = this.tokens),
            rp.dy`
      <wui-flex
        class="contentContainer"
        flexDirection="column"
        .padding=${["0", "s", "0", "s"]}
      >
        <wui-flex justifyContent="flex-start" .padding=${["m", "s", "s", "s"]}>
          <wui-text variant="paragraph-500" color="fg-200">Your tokens</wui-text>
        </wui-flex>
        <wui-flex flexDirection="column" gap="xs">
          ${
            this.filteredTokens && this.filteredTokens.length > 0
              ? this.filteredTokens.map(
                  (s) => rp.dy`<wui-list-token
                    @click=${this.handleTokenClick.bind(this, s)}
                    ?clickable=${!0}
                    tokenName=${s.name}
                    tokenImageUrl=${s.iconUrl}
                    tokenAmount=${s.quantity.numeric}
                    tokenValue=${s.value}
                    tokenCurrency=${s.symbol}
                  ></wui-list-token>`
                )
              : rp.dy`<wui-flex
                .padding=${["4xl", "0", "0", "0"]}
                alignItems="center"
                flexDirection="column"
                gap="l"
              >
                <wui-icon-box
                  icon="coinPlaceholder"
                  size="inherit"
                  iconColor="fg-200"
                  backgroundColor="fg-200"
                  iconSize="lg"
                ></wui-icon-box>
                <wui-flex
                  class="textContent"
                  gap="xs"
                  flexDirection="column"
                  justifyContent="center"
                  flexDirection="column"
                >
                  <wui-text variant="paragraph-500" align="center" color="fg-100"
                    >No tokens found</wui-text
                  >
                  <wui-text variant="small-400" align="center" color="fg-200"
                    >Your tokens will appear here</wui-text
                  >
                </wui-flex>
                <wui-link @click=${this.onBuyClick.bind(this)}>Buy</wui-link>
              </wui-flex>`
          }
        </wui-flex>
      </wui-flex>
    `
          );
        }
        onBuyClick() {
          tH.RouterController.push("OnRampProviders");
        }
        onInputChange(s) {
          this.onDebouncedSearch(s.detail);
        }
        handleTokenClick(s) {
          tH.Si.setToken(s),
            tH.Si.setTokenAmount(void 0),
            tH.RouterController.goBack();
        }
      };
      (iH.styles = iz),
        w3m_wallet_send_select_token_view_decorate(
          [(0, rf.SB)()],
          iH.prototype,
          "tokenBalance",
          void 0
        ),
        w3m_wallet_send_select_token_view_decorate(
          [(0, rf.SB)()],
          iH.prototype,
          "tokens",
          void 0
        ),
        w3m_wallet_send_select_token_view_decorate(
          [(0, rf.SB)()],
          iH.prototype,
          "filteredTokens",
          void 0
        ),
        w3m_wallet_send_select_token_view_decorate(
          [(0, rf.SB)()],
          iH.prototype,
          "search",
          void 0
        ),
        (iH = w3m_wallet_send_select_token_view_decorate(
          [(0, tY.customElement)("w3m-wallet-send-select-token-view")],
          iH
        ));
      var iq = rp.iv`
  wui-avatar,
  wui-image {
    display: ruby;
    width: 32px;
    height: 32px;
    border-radius: var(--wui-border-radius-3xl);
  }

  .sendButton {
    width: 70%;
    --local-width: 100% !important;
    --local-border-radius: var(--wui-border-radius-xs) !important;
  }

  .cancelButton {
    width: 30%;
    --local-width: 100% !important;
    --local-border-radius: var(--wui-border-radius-xs) !important;
  }
`,
        w3m_wallet_send_preview_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iV = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.token = tH.Si.state.token),
            (this.sendTokenAmount = tH.Si.state.sendTokenAmount),
            (this.receiverAddress = tH.Si.state.receiverAddress),
            (this.receiverProfileName = tH.Si.state.receiverProfileName),
            (this.receiverProfileImageUrl =
              tH.Si.state.receiverProfileImageUrl),
            (this.gasPriceInUSD = tH.Si.state.gasPriceInUSD),
            (this.caipNetwork = tH.RY.state.activeCaipNetwork),
            this.unsubscribe.push(
              ...[
                tH.Si.subscribe((s) => {
                  (this.token = s.token),
                    (this.sendTokenAmount = s.sendTokenAmount),
                    (this.receiverAddress = s.receiverAddress),
                    (this.gasPriceInUSD = s.gasPriceInUSD),
                    (this.receiverProfileName = s.receiverProfileName),
                    (this.receiverProfileImageUrl = s.receiverProfileImageUrl);
                }),
                tH.RY.subscribeKey(
                  "activeCaipNetwork",
                  (s) => (this.caipNetwork = s)
                ),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          return rp.dy` <wui-flex flexDirection="column" .padding=${[
            "0",
            "l",
            "l",
            "l",
          ]}>
      <wui-flex gap="xs" flexDirection="column" .padding=${[
        "0",
        "xs",
        "0",
        "xs",
      ]}>
        <wui-flex alignItems="center" justifyContent="space-between">
          <wui-flex flexDirection="column" gap="4xs">
            <wui-text variant="small-400" color="fg-150">Send</wui-text>
            ${this.sendValueTemplate()}
          </wui-flex>
          <wui-preview-item
            text="${
              this.sendTokenAmount
                ? tY.UiHelperUtil.roundNumber(this.sendTokenAmount, 6, 5)
                : "unknown"
            } ${this.token?.symbol}"
            .imageSrc=${this.token?.iconUrl}
          ></wui-preview-item>
        </wui-flex>
        <wui-flex>
          <wui-icon color="fg-200" size="md" name="arrowBottom"></wui-icon>
        </wui-flex>
        <wui-flex alignItems="center" justifyContent="space-between">
          <wui-text variant="small-400" color="fg-150">To</wui-text>
          <wui-preview-item
            text="${
              this.receiverProfileName
                ? tY.UiHelperUtil.getTruncateString({
                    string: this.receiverProfileName,
                    charsStart: 20,
                    charsEnd: 0,
                    truncate: "end",
                  })
                : tY.UiHelperUtil.getTruncateString({
                    string: this.receiverAddress ? this.receiverAddress : "",
                    charsStart: 4,
                    charsEnd: 4,
                    truncate: "middle",
                  })
            }"
            address=${this.receiverAddress ?? ""}
            .imageSrc=${this.receiverProfileImageUrl ?? void 0}
            .isAddress=${!0}
          ></wui-preview-item>
        </wui-flex>
      </wui-flex>
      <wui-flex flexDirection="column" .padding=${["xxl", "0", "0", "0"]}>
        <w3m-wallet-send-details
          .caipNetwork=${this.caipNetwork}
          .receiverAddress=${this.receiverAddress}
          .networkFee=${this.gasPriceInUSD}
        ></w3m-wallet-send-details>
        <wui-flex justifyContent="center" gap="xxs" .padding=${[
          "s",
          "0",
          "0",
          "0",
        ]}>
          <wui-icon size="sm" color="fg-200" name="warningCircle"></wui-icon>
          <wui-text variant="small-400" color="fg-200">Review transaction carefully</wui-text>
        </wui-flex>
        <wui-flex justifyContent="center" gap="s" .padding=${[
          "l",
          "0",
          "0",
          "0",
        ]}>
          <wui-button
            class="cancelButton"
            @click=${this.onCancelClick.bind(this)}
            size="lg"
            variant="neutral"
          >
            Cancel
          </wui-button>
          <wui-button
            class="sendButton"
            @click=${this.onSendClick.bind(this)}
            size="lg"
            variant="main"
          >
            Send
          </wui-button>
        </wui-flex>
      </wui-flex></wui-flex
    >`;
        }
        sendValueTemplate() {
          if (this.token && this.sendTokenAmount) {
            let s = this.token.price,
              x = s * this.sendTokenAmount;
            return rp.dy`<wui-text variant="paragraph-400" color="fg-100"
        >$${x.toFixed(2)}</wui-text
      >`;
          }
          return null;
        }
        onSendClick() {
          tH.Si.sendToken();
        }
        onCancelClick() {
          tH.RouterController.goBack();
        }
      };
      (iV.styles = iq),
        w3m_wallet_send_preview_view_decorate(
          [(0, rf.SB)()],
          iV.prototype,
          "token",
          void 0
        ),
        w3m_wallet_send_preview_view_decorate(
          [(0, rf.SB)()],
          iV.prototype,
          "sendTokenAmount",
          void 0
        ),
        w3m_wallet_send_preview_view_decorate(
          [(0, rf.SB)()],
          iV.prototype,
          "receiverAddress",
          void 0
        ),
        w3m_wallet_send_preview_view_decorate(
          [(0, rf.SB)()],
          iV.prototype,
          "receiverProfileName",
          void 0
        ),
        w3m_wallet_send_preview_view_decorate(
          [(0, rf.SB)()],
          iV.prototype,
          "receiverProfileImageUrl",
          void 0
        ),
        w3m_wallet_send_preview_view_decorate(
          [(0, rf.SB)()],
          iV.prototype,
          "gasPriceInUSD",
          void 0
        ),
        w3m_wallet_send_preview_view_decorate(
          [(0, rf.SB)()],
          iV.prototype,
          "caipNetwork",
          void 0
        ),
        (iV = w3m_wallet_send_preview_view_decorate(
          [(0, tY.customElement)("w3m-wallet-send-preview-view")],
          iV
        ));
      var iW = rp.iv`
  wui-flex {
    max-height: clamp(360px, 540px, 80vh);
    overflow: scroll;
    scrollbar-width: none;
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
  }
  wui-flex::-webkit-scrollbar {
    display: none;
  }
  wui-flex.disabled {
    opacity: 0.3;
    pointer-events: none;
    user-select: none;
  }
`,
        w3m_connect_wallets_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iK = class extends rp.oi {
        constructor() {
          super(...arguments), (this.checked = !1);
        }
        render() {
          let { termsConditionsUrl: s, privacyPolicyUrl: x } =
              tH.OptionsController.state,
            W = tH.OptionsController.state.features?.legalCheckbox,
            X = !!(s || x) && !!W,
            ee = X && !this.checked,
            et = ee ? -1 : void 0;
          return rp.dy`
      <w3m-legal-checkbox @checkboxChange=${this.onCheckboxChange.bind(
        this
      )}></w3m-legal-checkbox>
      <wui-flex
        flexDirection="column"
        .padding=${X ? ["0", "s", "s", "s"] : "s"}
        gap="xs"
        class=${(0, rg.o)(ee ? "disabled" : void 0)}
      >
        <w3m-wallet-login-list tabIdx=${(0, rg.o)(et)}></w3m-wallet-login-list>
      </wui-flex>
      <w3m-legal-footer></w3m-legal-footer>
    `;
        }
        onCheckboxChange(s) {
          this.checked = !!s.detail;
        }
      };
      (iK.styles = iW),
        w3m_connect_wallets_view_decorate(
          [(0, rf.SB)()],
          iK.prototype,
          "checked",
          void 0
        ),
        (iK = w3m_connect_wallets_view_decorate(
          [(0, tY.customElement)("w3m-connect-wallets-view")],
          iK
        ));
      var iZ = rp.iv`
  wui-flex {
    max-height: clamp(360px, 540px, 80vh);
    overflow: scroll;
    scrollbar-width: none;
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
  }
  wui-flex::-webkit-scrollbar {
    display: none;
  }
  wui-flex.disabled {
    opacity: 0.3;
    pointer-events: none;
    user-select: none;
  }
`,
        w3m_connect_socials_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iG = class extends rp.oi {
        constructor() {
          super(...arguments), (this.checked = !1);
        }
        render() {
          let { termsConditionsUrl: s, privacyPolicyUrl: x } =
              tH.OptionsController.state,
            W = tH.OptionsController.state.features?.legalCheckbox,
            X = !!(s || x) && !!W,
            ee = X && !this.checked,
            et = ee ? -1 : void 0;
          return rp.dy`
      <w3m-legal-checkbox @checkboxChange=${this.onCheckboxChange.bind(
        this
      )}></w3m-legal-checkbox>
      <wui-flex
        flexDirection="column"
        .padding=${X ? ["0", "s", "s", "s"] : "s"}
        gap="xs"
        class=${(0, rg.o)(ee ? "disabled" : void 0)}
      >
        <w3m-social-login-list tabIdx=${(0, rg.o)(et)}></w3m-social-login-list>
      </wui-flex>
      <w3m-legal-footer></w3m-legal-footer>
    `;
        }
        onCheckboxChange(s) {
          this.checked = !!s.detail;
        }
      };
      (iG.styles = iZ),
        w3m_connect_socials_view_decorate(
          [(0, rf.SB)()],
          iG.prototype,
          "checked",
          void 0
        ),
        (iG = w3m_connect_socials_view_decorate(
          [(0, tY.customElement)("w3m-connect-socials-view")],
          iG
        ));
      var iY = rp.iv`
  wui-logo {
    width: 80px;
    height: 80px;
    border-radius: var(--wui-border-radius-m);
  }
  @keyframes shake {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(3px);
    }
    50% {
      transform: translateX(-3px);
    }
    75% {
      transform: translateX(3px);
    }
    100% {
      transform: translateX(0);
    }
  }
  wui-flex:first-child:not(:only-child) {
    position: relative;
  }
  wui-loading-thumbnail {
    position: absolute;
  }
  wui-icon-box {
    position: absolute;
    right: calc(var(--wui-spacing-3xs) * -1);
    bottom: calc(var(--wui-spacing-3xs) * -1);
    opacity: 0;
    transform: scale(0.5);
    transition: all var(--wui-ease-out-power-2) var(--wui-duration-lg);
  }
  wui-text[align='center'] {
    width: 100%;
    padding: 0px var(--wui-spacing-l);
  }
  [data-error='true'] wui-icon-box {
    opacity: 1;
    transform: scale(1);
  }
  [data-error='true'] > wui-flex:first-child {
    animation: shake 250ms cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  }
  .capitalize {
    text-transform: capitalize;
  }
`,
        w3m_connecting_social_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iQ = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.socialProvider = tH.AccountController.state.socialProvider),
            (this.socialWindow = tH.AccountController.state.socialWindow),
            (this.error = !1),
            (this.connecting = !1),
            (this.message = "Connect in the provider window"),
            (this.authConnector = tH.ConnectorController.getAuthConnector()),
            (this.handleSocialConnection = async (s) => {
              if (s.data?.resultUri) {
                if (s.origin === tK.SECURE_SITE_ORIGIN) {
                  window.removeEventListener(
                    "message",
                    this.handleSocialConnection,
                    !1
                  );
                  try {
                    if (this.authConnector && !this.connecting) {
                      this.socialWindow &&
                        (this.socialWindow.close(),
                        tH.AccountController.setSocialWindow(
                          void 0,
                          tH.RY.state.activeChain
                        )),
                        (this.connecting = !0),
                        this.updateMessage();
                      let x = s.data.resultUri;
                      this.socialProvider &&
                        tH.Xs.sendEvent({
                          type: "track",
                          event: "SOCIAL_LOGIN_REQUEST_USER_DATA",
                          properties: { provider: this.socialProvider },
                        }),
                        await this.authConnector.provider.connectSocial(x),
                        this.socialProvider &&
                          (tH.MO.setConnectedSocialProvider(
                            this.socialProvider
                          ),
                          await tH.ConnectionController.connectExternal(
                            this.authConnector,
                            this.authConnector.chain
                          ),
                          tH.Xs.sendEvent({
                            type: "track",
                            event: "SOCIAL_LOGIN_SUCCESS",
                            properties: { provider: this.socialProvider },
                          }));
                    }
                  } catch (s) {
                    (this.error = !0),
                      this.updateMessage(),
                      this.socialProvider &&
                        tH.Xs.sendEvent({
                          type: "track",
                          event: "SOCIAL_LOGIN_ERROR",
                          properties: { provider: this.socialProvider },
                        });
                  }
                } else
                  tH.RouterController.goBack(),
                    tH.SnackController.showError("Untrusted Origin"),
                    this.socialProvider &&
                      tH.Xs.sendEvent({
                        type: "track",
                        event: "SOCIAL_LOGIN_ERROR",
                        properties: { provider: this.socialProvider },
                      });
              }
            }),
            this.unsubscribe.push(
              ...[
                tH.AccountController.subscribe((s) => {
                  s.socialProvider && (this.socialProvider = s.socialProvider),
                    s.socialWindow && (this.socialWindow = s.socialWindow),
                    s.address && tH.IN.state.open && tH.IN.close();
                }),
              ]
            ),
            this.authConnector && this.connectSocial();
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s()),
            window.removeEventListener(
              "message",
              this.handleSocialConnection,
              !1
            ),
            this.socialWindow?.close(),
            tH.AccountController.setSocialWindow(
              void 0,
              tH.RY.state.activeChain
            );
        }
        render() {
          return rp.dy`
      <wui-flex
        data-error=${(0, rg.o)(this.error)}
        flexDirection="column"
        alignItems="center"
        .padding=${["3xl", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-flex justifyContent="center" alignItems="center">
          <wui-logo logo=${(0, rg.o)(this.socialProvider)}></wui-logo>
          ${this.error ? null : this.loaderTemplate()}
          <wui-icon-box
            backgroundColor="error-100"
            background="opaque"
            iconColor="error-100"
            icon="close"
            size="sm"
            border
            borderColor="wui-color-bg-125"
          ></wui-icon-box>
        </wui-flex>
        <wui-flex flexDirection="column" alignItems="center" gap="xs">
          <wui-text align="center" variant="paragraph-500" color="fg-100"
            >Log in with
            <span class="capitalize">${
              this.socialProvider ?? "Social"
            }</span></wui-text
          >
          <wui-text align="center" variant="small-400" color=${
            this.error ? "error-100" : "fg-200"
          }
            >${this.message}</wui-text
          ></wui-flex
        >
      </wui-flex>
    `;
        }
        loaderTemplate() {
          let s =
              tH.ThemeController.state.themeVariables[
                "--w3m-border-radius-master"
              ],
            x = s ? parseInt(s.replace("px", ""), 10) : 4;
          return rp.dy`<wui-loading-thumbnail radius=${
            9 * x
          }></wui-loading-thumbnail>`;
        }
        connectSocial() {
          let s = setInterval(() => {
            this.socialWindow?.closed &&
              (this.connecting ||
                "ConnectingSocial" !== tH.RouterController.state.view ||
                (this.socialProvider &&
                  tH.Xs.sendEvent({
                    type: "track",
                    event: "SOCIAL_LOGIN_CANCELED",
                    properties: { provider: this.socialProvider },
                  }),
                tH.RouterController.goBack()),
              clearInterval(s));
          }, 1e3);
          window.addEventListener("message", this.handleSocialConnection, !1);
        }
        updateMessage() {
          this.error
            ? (this.message = "Something went wrong")
            : this.connecting
            ? (this.message = "Retrieving user data")
            : (this.message = "Connect in the provider window");
        }
      };
      (iQ.styles = iY),
        w3m_connecting_social_view_decorate(
          [(0, rf.SB)()],
          iQ.prototype,
          "socialProvider",
          void 0
        ),
        w3m_connecting_social_view_decorate(
          [(0, rf.SB)()],
          iQ.prototype,
          "socialWindow",
          void 0
        ),
        w3m_connecting_social_view_decorate(
          [(0, rf.SB)()],
          iQ.prototype,
          "error",
          void 0
        ),
        w3m_connecting_social_view_decorate(
          [(0, rf.SB)()],
          iQ.prototype,
          "connecting",
          void 0
        ),
        w3m_connecting_social_view_decorate(
          [(0, rf.SB)()],
          iQ.prototype,
          "message",
          void 0
        ),
        (iQ = w3m_connecting_social_view_decorate(
          [(0, tY.customElement)("w3m-connecting-social-view")],
          iQ
        ));
      var iJ = rp.iv`
  wui-flex {
    width: 100%;
  }

  wui-icon-link {
    margin-right: calc(var(--wui-icon-box-size-md) * -1);
  }

  .account-links {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .account-links wui-flex {
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
    background: red;
    align-items: center;
    justify-content: center;
    height: 48px;
    padding: 10px;
    flex: 1 0 0;

    border-radius: var(--XS, 16px);
    border: 1px solid var(--dark-accent-glass-010, rgba(71, 161, 255, 0.1));
    background: var(--dark-accent-glass-010, rgba(71, 161, 255, 0.1));
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color;
  }

  .account-links wui-flex:hover {
    background: var(--dark-accent-glass-015, rgba(71, 161, 255, 0.15));
  }

  .account-links wui-flex wui-icon {
    width: var(--S, 20px);
    height: var(--S, 20px);
  }

  .account-links wui-flex wui-icon svg path {
    stroke: #47a1ff;
  }

  .account-settings-button {
    padding: calc(var(--wui-spacing-m) - 1px) var(--wui-spacing-2l);
    height: 40px;
    border-radius: var(--wui-border-radius-xxs);
    border: 1px solid var(--wui-color-gray-glass-002);
    background: var(--wui-color-gray-glass-002);
    cursor: pointer;
  }

  .account-settings-button:hover {
    background: var(--wui-color-gray-glass-005);
  }
`,
        w3m_profile_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iX = class extends rp.oi {
        constructor() {
          super(),
            (this.usubscribe = []),
            (this.address = tH.AccountController.state.address),
            (this.profileImage = tH.AccountController.state.profileImage),
            (this.profileName = tH.AccountController.state.profileName),
            (this.accounts = tH.AccountController.state.allAccounts),
            (this.loading = !1),
            this.usubscribe.push(
              tH.AccountController.subscribeKey("address", (s) => {
                s ? (this.address = s) : tH.IN.close();
              })
            ),
            this.usubscribe.push(
              tH.AccountController.subscribeKey("profileImage", (s) => {
                this.profileImage = s;
              })
            ),
            this.usubscribe.push(
              tH.AccountController.subscribeKey("profileName", (s) => {
                this.profileName = s;
              })
            );
        }
        disconnectedCallback() {
          this.usubscribe.forEach((s) => s());
        }
        render() {
          if (!this.address)
            throw Error("w3m-profile-view: No account provided");
          return rp.dy`
      <wui-flex flexDirection="column" gap="l" .padding=${[
        "0",
        "xl",
        "m",
        "xl",
      ]}>
        <wui-flex flexDirection="column" alignItems="center" gap="l">
          <wui-avatar
            alt=${this.address}
            address=${this.address}
            imageSrc=${(0, rg.o)(this.profileImage)}
            size="2lg"
          ></wui-avatar>
          <wui-flex flexDirection="column" alignItems="center">
            <wui-flex gap="3xs" alignItems="center" justifyContent="center">
              <wui-text variant="title-6-600" color="fg-100" data-testid="account-settings-address">
                ${
                  this.profileName
                    ? tY.UiHelperUtil.getTruncateString({
                        string: this.profileName,
                        charsStart: 20,
                        charsEnd: 0,
                        truncate: "end",
                      })
                    : tY.UiHelperUtil.getTruncateString({
                        string: this.address,
                        charsStart: 4,
                        charsEnd: 6,
                        truncate: "middle",
                      })
                }
              </wui-text>
              <wui-icon-link
                size="md"
                icon="copy"
                iconColor="fg-200"
                @click=${this.onCopyAddress}
              ></wui-icon-link>
            </wui-flex>
          </wui-flex>
        </wui-flex>
        <wui-flex
          data-testid="account-settings-button"
          justifyContent="center"
          alignItems="center"
          class="account-settings-button"
          @click=${() => tH.RouterController.push("AccountSettings")}
        >
          <wui-text variant="paragraph-500" color="fg-100">Account Settings</wui-text>
        </wui-flex>
        ${this.accountsTemplate()}
      </wui-flex>
    `;
        }
        accountsTemplate() {
          return rp.dy`<wui-flex flexDirection="column">
      <wui-flex .padding=${["3xs", "m", "s", "s"]}>
        <wui-text color="fg-200" variant="paragraph-400">Your accounts</wui-text>
      </wui-flex>
      <wui-flex flexDirection="column" gap="xxs">
        ${this.accounts.map((s) => this.accountTemplate(s))}
      </wui-flex>
    </wui-flex>`;
        }
        async onSwitchAccount(s) {
          this.loading = !0;
          let x = tH.ConnectorController.getAuthConnector();
          if (x) {
            let x = s.type;
            await tH.ConnectionController.setPreferredAccountType(x);
          }
          tH.AccountController.setShouldUpdateToAddress(
            s.address,
            tH.RY.state.activeChain
          ),
            (this.loading = !1);
        }
        accountTemplate(s) {
          return rp.dy`<wui-list-account accountAddress=${
            s.address
          } accountType=${s.type}>
      ${
        s.address === this.address
          ? ""
          : rp.dy`<wui-button
            slot="action"
            textVariant="small-600"
            size="md"
            variant="accent"
            @click=${() => this.onSwitchAccount(s)}
            .loading=${this.loading}
            >Switch</wui-button
          >`
      }
    </wui-list-account>`;
        }
        onCopyAddress() {
          try {
            this.address &&
              (tH.j1.copyToClopboard(this.address),
              tH.SnackController.showSuccess("Address copied"));
          } catch {
            tH.SnackController.showError("Failed to copy");
          }
        }
      };
      (iX.styles = iJ),
        w3m_profile_view_decorate(
          [(0, rf.SB)()],
          iX.prototype,
          "address",
          void 0
        ),
        w3m_profile_view_decorate(
          [(0, rf.SB)()],
          iX.prototype,
          "profileImage",
          void 0
        ),
        w3m_profile_view_decorate(
          [(0, rf.SB)()],
          iX.prototype,
          "profileName",
          void 0
        ),
        w3m_profile_view_decorate(
          [(0, rf.SB)()],
          iX.prototype,
          "accounts",
          void 0
        ),
        w3m_profile_view_decorate(
          [(0, rf.SB)()],
          iX.prototype,
          "loading",
          void 0
        ),
        (iX = w3m_profile_view_decorate(
          [(0, tY.customElement)("w3m-profile-view")],
          iX
        ));
      var i0 = rp.iv`
  wui-avatar {
    width: var(--wui-spacing-3xl);
    height: var(--wui-spacing-3xl);
    box-shadow: 0 0 0 0;
  }

  wui-icon-box {
    position: relative;
    right: 15px;
    top: 15px;
    border: 2px solid var(--wui-color-bg-150);
    background-color: var(--wui-color-bg-125);
  }
`,
        w3m_switch_address_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i1 = class extends rp.oi {
        constructor() {
          super(),
            (this.metadata = tH.OptionsController.state.metadata),
            (this.allAccounts = tH.AccountController.state.allAccounts || []),
            (this.balances = {}),
            (this.labels = tH.AccountController.state.addressLabels),
            (this.currentAddress = tH.AccountController.state.address || ""),
            (this.caipNetwork = tH.RY.state.activeCaipNetwork),
            tH.AccountController.subscribeKey("allAccounts", (s) => {
              this.allAccounts = s;
            });
        }
        connectedCallback() {
          super.connectedCallback(),
            this.allAccounts.forEach((s) => {
              tH.Lr.getBalance(s.address, this.caipNetwork?.caipNetworkId).then(
                (x) => {
                  let W = this.balances[s.address] || 0;
                  x.balances.length > 0 &&
                    (W = x.balances.reduce((s, x) => s + (x?.value || 0), 0)),
                    (this.balances[s.address] = W),
                    this.requestUpdate();
                }
              );
            });
        }
        getAddressIcon(s) {
          return "smartAccount" === s ? "lightbulb" : "mail";
        }
        render() {
          return rp.dy`
      <wui-flex justifyContent="center" .padding=${["xl", "0", "xl", "0"]}>
        <wui-banner-img
          imageSrc=${(0, rg.o)(this.metadata?.icons[0])}
          text=${(0, rg.o)(this.metadata?.url)}
          size="sm"
        ></wui-banner-img>
      </wui-flex>
      <wui-flex flexDirection="column" gap="xxl" .padding=${[
        "l",
        "xl",
        "xl",
        "xl",
      ]}>
        ${this.allAccounts.map((s, x) => this.getAddressTemplate(s, x))}
      </wui-flex>
    `;
        }
        getAddressTemplate(s, x) {
          let W = this.labels?.get(s.address),
            X = tH.RY.state.activeChain,
            ee = tH.MO.getConnectedConnectorId(X),
            et = ee === tV.bq.CONNECTOR_ID.AUTH;
          return rp.dy`
      <wui-flex
        flexDirection="row"
        justifyContent="space-between"
        data-testid="switch-address-item"
      >
        <wui-flex alignItems="center">
          <wui-avatar address=${s.address}></wui-avatar>
          ${
            et
              ? rp.dy`<wui-icon-box
                size="sm"
                iconcolor="fg-200"
                backgroundcolor="glass-002"
                background="gray"
                icon="${this.getAddressIcon(s.type)}"
                ?border=${!0}
              ></wui-icon-box>`
              : rp.dy`<wui-flex .padding="${["0", "0", "0", "s"]}"></wui-flex>`
          }
          <wui-flex flexDirection="column">
            <wui-text class="address" variant="paragraph-500" color="fg-100"
              >${
                W ||
                tY.UiHelperUtil.getTruncateString({
                  string: s.address,
                  charsStart: 4,
                  charsEnd: 6,
                  truncate: "middle",
                })
              }</wui-text
            >
            <wui-text class="address-description" variant="small-400">
              ${
                "number" == typeof this.balances[s.address]
                  ? `$${this.balances[s.address]?.toFixed(2)}`
                  : rp.dy`<wui-loading-spinner size="sm" color="accent-100"></wui-loading-spinner>`
              }
            </wui-text>
          </wui-flex>
        </wui-flex>
        <wui-flex gap="s" alignItems="center">
          ${
            s.address?.toLowerCase() === this.currentAddress?.toLowerCase()
              ? ""
              : rp.dy`
                <wui-button
                  data-testid=${`w3m-switch-address-button-${x}`}
                  textVariant="small-600"
                  size="md"
                  variant="accent"
                  @click=${() => this.onSwitchAddress(s.address)}
                  >Switch to</wui-button
                >
              `
          }
        </wui-flex>
      </wui-flex>
    `;
        }
        onSwitchAddress(s) {
          let x = tH.RY.state.activeCaipNetwork,
            W = x?.chainNamespace,
            X = `${W}:${x?.id}:${s}`;
          tH.AccountController.setCaipAddress(X, W), tH.IN.close();
        }
      };
      (i1.styles = i0),
        w3m_switch_address_view_decorate(
          [(0, rf.SB)()],
          i1.prototype,
          "allAccounts",
          void 0
        ),
        w3m_switch_address_view_decorate(
          [(0, rf.SB)()],
          i1.prototype,
          "balances",
          void 0
        ),
        (i1 = w3m_switch_address_view_decorate(
          [(0, tY.customElement)("w3m-switch-address-view")],
          i1
        ));
      var i2 = rp.iv`
  @keyframes fadein {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  wui-shimmer {
    width: 100%;
    aspect-ratio: 1 / 1;
    border-radius: clamp(0px, var(--wui-border-radius-l), 40px) !important;
  }

  wui-qr-code {
    opacity: 0;
    animation-duration: 200ms;
    animation-timing-function: ease;
    animation-name: fadein;
    animation-fill-mode: forwards;
  }

  wui-logo {
    width: 80px;
    height: 80px;
    border-radius: var(--wui-border-radius-m);
  }

  wui-flex:first-child:not(:only-child) {
    position: relative;
  }
  wui-loading-thumbnail {
    position: absolute;
  }
  wui-icon-box {
    position: absolute;
    right: calc(var(--wui-spacing-3xs) * -1);
    bottom: calc(var(--wui-spacing-3xs) * -1);
    opacity: 0;
    transform: scale(0.5);
    transition: all var(--wui-ease-out-power-2) var(--wui-duration-lg);
  }
`,
        w3m_connecting_farcaster_view_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i3 = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.timeout = void 0),
            (this.socialProvider = tH.AccountController.state.socialProvider),
            (this.uri = tH.AccountController.state.farcasterUrl),
            (this.ready = !1),
            (this.loading = !1),
            (this.authConnector = tH.ConnectorController.getAuthConnector()),
            (this.forceUpdate = () => {
              this.requestUpdate();
            }),
            this.unsubscribe.push(
              ...[
                tH.AccountController.subscribeKey("farcasterUrl", (s) => {
                  s && ((this.uri = s), this.connectFarcaster());
                }),
                tH.AccountController.subscribeKey("socialProvider", (s) => {
                  s && (this.socialProvider = s);
                }),
              ]
            ),
            window.addEventListener("resize", this.forceUpdate);
        }
        disconnectedCallback() {
          super.disconnectedCallback(),
            clearTimeout(this.timeout),
            window.removeEventListener("resize", this.forceUpdate);
        }
        render() {
          return this.onRenderProxy(), rp.dy`${this.platformTemplate()}`;
        }
        platformTemplate() {
          return tH.j1.isMobile()
            ? rp.dy`${this.mobileTemplate()}`
            : rp.dy`${this.desktopTemplate()}`;
        }
        desktopTemplate() {
          return this.loading
            ? rp.dy`${this.loadingTemplate()}`
            : rp.dy`${this.qrTemplate()}`;
        }
        qrTemplate() {
          return rp.dy` <wui-flex
      flexDirection="column"
      alignItems="center"
      .padding=${["0", "xl", "xl", "xl"]}
      gap="xl"
    >
      <wui-shimmer borderRadius="l" width="100%"> ${this.qrCodeTemplate()} </wui-shimmer>

      <wui-text variant="paragraph-500" color="fg-100">
        Scan this QR Code with your phone
      </wui-text>
      ${this.copyTemplate()}
    </wui-flex>`;
        }
        loadingTemplate() {
          return rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        .padding=${["xl", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-flex justifyContent="center" alignItems="center">
          <wui-logo logo="farcaster"></wui-logo>
          ${this.loaderTemplate()}
          <wui-icon-box
            backgroundColor="error-100"
            background="opaque"
            iconColor="error-100"
            icon="close"
            size="sm"
            border
            borderColor="wui-color-bg-125"
          ></wui-icon-box>
        </wui-flex>
        <wui-flex flexDirection="column" alignItems="center" gap="xs">
          <wui-text align="center" variant="paragraph-500" color="fg-100">
            Loading user data
          </wui-text>
          <wui-text align="center" variant="small-400" color="fg-200">
            Please wait a moment while we load your data.
          </wui-text>
        </wui-flex>
      </wui-flex>
    `;
        }
        mobileTemplate() {
          return rp.dy` <wui-flex
      flexDirection="column"
      alignItems="center"
      .padding=${["3xl", "xl", "xl", "xl"]}
      gap="xl"
    >
      <wui-flex justifyContent="center" alignItems="center">
        <wui-logo logo="farcaster"></wui-logo>
        ${this.loaderTemplate()}
        <wui-icon-box
          backgroundColor="error-100"
          background="opaque"
          iconColor="error-100"
          icon="close"
          size="sm"
          border
          borderColor="wui-color-bg-125"
        ></wui-icon-box>
      </wui-flex>
      <wui-flex flexDirection="column" alignItems="center" gap="xs">
        <wui-text align="center" variant="paragraph-500" color="fg-100"
          >Continue in Farcaster</span></wui-text
        >
        <wui-text align="center" variant="small-400" color="fg-200"
          >Accept connection request in the app</wui-text
        ></wui-flex
      >
      ${this.mobileLinkTemplate()}
    </wui-flex>`;
        }
        loaderTemplate() {
          let s =
              tH.ThemeController.state.themeVariables[
                "--w3m-border-radius-master"
              ],
            x = s ? parseInt(s.replace("px", ""), 10) : 4;
          return rp.dy`<wui-loading-thumbnail radius=${
            9 * x
          }></wui-loading-thumbnail>`;
        }
        async connectFarcaster() {
          if (this.authConnector)
            try {
              await this.authConnector?.provider.connectFarcaster(),
                this.socialProvider &&
                  (tH.MO.setConnectedSocialProvider(this.socialProvider),
                  tH.Xs.sendEvent({
                    type: "track",
                    event: "SOCIAL_LOGIN_REQUEST_USER_DATA",
                    properties: { provider: this.socialProvider },
                  })),
                (this.loading = !0),
                await tH.ConnectionController.connectExternal(
                  this.authConnector,
                  this.authConnector.chain
                ),
                this.socialProvider &&
                  tH.Xs.sendEvent({
                    type: "track",
                    event: "SOCIAL_LOGIN_SUCCESS",
                    properties: { provider: this.socialProvider },
                  }),
                (this.loading = !1),
                tH.IN.close();
            } catch (s) {
              this.socialProvider &&
                tH.Xs.sendEvent({
                  type: "track",
                  event: "SOCIAL_LOGIN_ERROR",
                  properties: { provider: this.socialProvider },
                }),
                tH.RouterController.goBack(),
                tH.SnackController.showError(s);
            }
        }
        mobileLinkTemplate() {
          return rp.dy`<wui-button
      size="md"
      ?loading=${this.loading}
      ?disabled=${!this.uri || this.loading}
      @click=${() => {
        this.uri && tH.j1.openHref(this.uri, "_blank");
      }}
    >
      Open farcaster</wui-button
    >`;
        }
        onRenderProxy() {
          !this.ready &&
            this.uri &&
            (this.timeout = setTimeout(() => {
              this.ready = !0;
            }, 200));
        }
        qrCodeTemplate() {
          if (!this.uri || !this.ready) return null;
          let s = this.getBoundingClientRect().width - 40;
          return rp.dy` <wui-qr-code
      size=${s}
      theme=${tH.ThemeController.state.themeMode}
      uri=${this.uri}
      ?farcaster=${!0}
      data-testid="wui-qr-code"
      color=${(0, rg.o)(
        tH.ThemeController.state.themeVariables["--w3m-qr-color"]
      )}
    ></wui-qr-code>`;
        }
        copyTemplate() {
          let s = !this.uri || !this.ready;
          return rp.dy`<wui-link
      .disabled=${s}
      @click=${this.onCopyUri}
      color="fg-200"
      data-testid="copy-wc2-uri"
    >
      <wui-icon size="xs" color="fg-200" slot="iconLeft" name="copy"></wui-icon>
      Copy link
    </wui-link>`;
        }
        onCopyUri() {
          try {
            this.uri &&
              (tH.j1.copyToClopboard(this.uri),
              tH.SnackController.showSuccess("Link copied"));
          } catch {
            tH.SnackController.showError("Failed to copy");
          }
        }
      };
      (i3.styles = i2),
        w3m_connecting_farcaster_view_decorate(
          [(0, rf.SB)()],
          i3.prototype,
          "socialProvider",
          void 0
        ),
        w3m_connecting_farcaster_view_decorate(
          [(0, rf.SB)()],
          i3.prototype,
          "uri",
          void 0
        ),
        w3m_connecting_farcaster_view_decorate(
          [(0, rf.SB)()],
          i3.prototype,
          "ready",
          void 0
        ),
        w3m_connecting_farcaster_view_decorate(
          [(0, rf.SB)()],
          i3.prototype,
          "loading",
          void 0
        ),
        (i3 = w3m_connecting_farcaster_view_decorate(
          [(0, tY.customElement)("w3m-connecting-farcaster-view")],
          i3
        ));
      var w3m_siwx_sign_message_view_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let i5 = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.dappName = tH.OptionsController.state.metadata?.name),
            (this.isCancelling = !1),
            (this.isSigning = !1);
        }
        render() {
          return rp.dy`
      <wui-flex justifyContent="center" .padding=${["2xl", "0", "xxl", "0"]}>
        <w3m-siwx-sign-message-thumbnails></w3m-siwx-sign-message-thumbnails>
      </wui-flex>
      <wui-flex
        .padding=${["0", "4xl", "l", "4xl"]}
        gap="s"
        justifyContent="space-between"
      >
        <wui-text variant="paragraph-500" align="center" color="fg-100"
          >${this.dappName ?? "Dapp"} needs to connect to your wallet</wui-text
        >
      </wui-flex>
      <wui-flex
        .padding=${["0", "3xl", "l", "3xl"]}
        gap="s"
        justifyContent="space-between"
      >
        <wui-text variant="small-400" align="center" color="fg-200"
          >Sign this message to prove you own this wallet and proceed. Canceling will disconnect
          you.</wui-text
        >
      </wui-flex>
      <wui-flex .padding=${[
        "l",
        "xl",
        "xl",
        "xl",
      ]} gap="s" justifyContent="space-between">
        <wui-button
          size="lg"
          borderRadius="xs"
          fullWidth
          variant="neutral"
          ?loading=${this.isCancelling}
          @click=${this.onCancel.bind(this)}
          data-testid="w3m-connecting-siwe-cancel"
        >
          ${this.isCancelling ? "Cancelling..." : "Cancel"}
        </wui-button>
        <wui-button
          size="lg"
          borderRadius="xs"
          fullWidth
          variant="main"
          @click=${this.onSign.bind(this)}
          ?loading=${this.isSigning}
          data-testid="w3m-connecting-siwe-sign"
        >
          ${this.isSigning ? "Signing..." : "Sign"}
        </wui-button>
      </wui-flex>
    `;
        }
        async onSign() {
          (this.isSigning = !0),
            await tH.wf
              .requestSignMessage()
              .finally(() => (this.isSigning = !1));
        }
        async onCancel() {
          (this.isCancelling = !0),
            await tH.wf
              .cancelSignMessage()
              .finally(() => (this.isCancelling = !1));
        }
      };
      w3m_siwx_sign_message_view_decorate(
        [(0, rf.SB)()],
        i5.prototype,
        "isCancelling",
        void 0
      ),
        w3m_siwx_sign_message_view_decorate(
          [(0, rf.SB)()],
          i5.prototype,
          "isSigning",
          void 0
        ),
        (i5 = w3m_siwx_sign_message_view_decorate(
          [(0, tY.customElement)("w3m-siwx-sign-message-view")],
          i5
        ));
      var i6 = rp.iv`
  wui-grid {
    max-height: clamp(360px, 400px, 80vh);
    overflow: scroll;
    scrollbar-width: none;
    grid-auto-rows: min-content;
    grid-template-columns: repeat(auto-fill, 104px);
  }

  @media (max-width: 350px) {
    wui-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  wui-grid[data-scroll='false'] {
    overflow: hidden;
  }

  wui-grid::-webkit-scrollbar {
    display: none;
  }

  wui-loading-spinner {
    padding-top: var(--wui-spacing-l);
    padding-bottom: var(--wui-spacing-l);
    justify-content: center;
    grid-column: 1 / span 4;
  }
`,
        w3m_all_wallets_list_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i4 = "local-paginator",
        i8 = class extends rp.oi {
          constructor() {
            super(),
              (this.unsubscribe = []),
              (this.paginationObserver = void 0),
              (this.loading = !tH.ApiController.state.wallets.length),
              (this.wallets = tH.ApiController.state.wallets),
              (this.recommended = tH.ApiController.state.recommended),
              (this.featured = tH.ApiController.state.featured),
              this.unsubscribe.push(
                ...[
                  tH.ApiController.subscribeKey(
                    "wallets",
                    (s) => (this.wallets = s)
                  ),
                  tH.ApiController.subscribeKey(
                    "recommended",
                    (s) => (this.recommended = s)
                  ),
                  tH.ApiController.subscribeKey(
                    "featured",
                    (s) => (this.featured = s)
                  ),
                ]
              );
          }
          firstUpdated() {
            this.initialFetch(), this.createPaginationObserver();
          }
          disconnectedCallback() {
            this.unsubscribe.forEach((s) => s()),
              this.paginationObserver?.disconnect();
          }
          render() {
            return rp.dy`
      <wui-grid
        data-scroll=${!this.loading}
        .padding=${["0", "s", "s", "s"]}
        columnGap="xxs"
        rowGap="l"
        justifyContent="space-between"
      >
        ${this.loading ? this.shimmerTemplate(16) : this.walletsTemplate()}
        ${this.paginationLoaderTemplate()}
      </wui-grid>
    `;
          }
          async initialFetch() {
            this.loading = !0;
            let s = this.shadowRoot?.querySelector("wui-grid");
            s &&
              (await tH.ApiController.fetchWallets({ page: 1 }),
              await s.animate([{ opacity: 1 }, { opacity: 0 }], {
                duration: 200,
                fill: "forwards",
                easing: "ease",
              }).finished,
              (this.loading = !1),
              s.animate([{ opacity: 0 }, { opacity: 1 }], {
                duration: 200,
                fill: "forwards",
                easing: "ease",
              }));
          }
          shimmerTemplate(s, x) {
            return [...Array(s)].map(
              () => rp.dy`
        <wui-card-select-loader type="wallet" id=${(0, rg.o)(
          x
        )}></wui-card-select-loader>
      `
            );
          }
          walletsTemplate() {
            let s = [...this.featured, ...this.recommended, ...this.wallets],
              x = tZ.markWalletsAsInstalled(s);
            return x.map(
              (s) => rp.dy`
        <w3m-all-wallets-list-item
          @click=${() => this.onConnectWallet(s)}
          .wallet=${s}
        ></w3m-all-wallets-list-item>
      `
            );
          }
          paginationLoaderTemplate() {
            let {
                wallets: s,
                recommended: x,
                featured: W,
                count: X,
              } = tH.ApiController.state,
              ee = window.innerWidth < 352 ? 3 : 4,
              et = s.length + x.length,
              er = Math.ceil(et / ee) * ee - et + ee;
            return ((er -= s.length ? W.length % ee : 0),
            0 === X && W.length > 0)
              ? null
              : 0 === X || [...W, ...s, ...x].length < X
              ? this.shimmerTemplate(er, i4)
              : null;
          }
          createPaginationObserver() {
            let s = this.shadowRoot?.querySelector(`#${i4}`);
            s &&
              ((this.paginationObserver = new IntersectionObserver(([s]) => {
                if (s?.isIntersecting && !this.loading) {
                  let {
                    page: s,
                    count: x,
                    wallets: W,
                  } = tH.ApiController.state;
                  W.length < x &&
                    tH.ApiController.fetchWallets({ page: s + 1 });
                }
              })),
              this.paginationObserver.observe(s));
          }
          onConnectWallet(s) {
            let x = tH.ConnectorController.getConnector(s.id, s.rdns);
            x
              ? tH.RouterController.push("ConnectingExternal", { connector: x })
              : tH.RouterController.push("ConnectingWalletConnect", {
                  wallet: s,
                });
          }
        };
      (i8.styles = i6),
        w3m_all_wallets_list_decorate(
          [(0, rf.SB)()],
          i8.prototype,
          "loading",
          void 0
        ),
        w3m_all_wallets_list_decorate(
          [(0, rf.SB)()],
          i8.prototype,
          "wallets",
          void 0
        ),
        w3m_all_wallets_list_decorate(
          [(0, rf.SB)()],
          i8.prototype,
          "recommended",
          void 0
        ),
        w3m_all_wallets_list_decorate(
          [(0, rf.SB)()],
          i8.prototype,
          "featured",
          void 0
        ),
        (i8 = w3m_all_wallets_list_decorate(
          [(0, tY.customElement)("w3m-all-wallets-list")],
          i8
        ));
      var i9 = rp.iv`
  button {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    width: 104px;
    row-gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-s) var(--wui-spacing-0);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: clamp(0px, var(--wui-border-radius-xs), 20px);
    transition:
      color var(--wui-duration-lg) var(--wui-ease-out-power-1),
      background-color var(--wui-duration-lg) var(--wui-ease-out-power-1),
      border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: background-color, color, border-radius;
    outline: none;
    border: none;
  }

  button > wui-flex > wui-text {
    color: var(--wui-color-fg-100);
    max-width: 86px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    justify-content: center;
  }

  button > wui-flex > wui-text.certified {
    max-width: 66px;
  }

  button:hover:enabled {
    background-color: var(--wui-color-gray-glass-005);
  }

  button:disabled > wui-flex > wui-text {
    color: var(--wui-color-gray-glass-015);
  }

  [data-selected='true'] {
    background-color: var(--wui-color-accent-glass-020);
  }

  @media (hover: hover) and (pointer: fine) {
    [data-selected='true']:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }
  }

  [data-selected='true']:active:enabled {
    background-color: var(--wui-color-accent-glass-010);
  }

  @media (max-width: 350px) {
    button {
      width: 100%;
    }
  }
`,
        w3m_all_wallets_list_item_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i7 = class extends rp.oi {
        constructor() {
          super(),
            (this.observer = new IntersectionObserver(() => void 0)),
            (this.visible = !1),
            (this.imageSrc = void 0),
            (this.imageLoading = !1),
            (this.wallet = void 0),
            (this.observer = new IntersectionObserver(
              (s) => {
                s.forEach((s) => {
                  s.isIntersecting
                    ? ((this.visible = !0), this.fetchImageSrc())
                    : (this.visible = !1);
                });
              },
              { threshold: 0.01 }
            ));
        }
        firstUpdated() {
          this.observer.observe(this);
        }
        disconnectedCallback() {
          this.observer.disconnect();
        }
        render() {
          let s = this.wallet?.badge_type === "certified";
          return rp.dy`
      <button ontouchstart>
        ${this.imageTemplate()}
        <wui-flex flexDirection="row" alignItems="center" justifyContent="center" gap="3xs">
          <wui-text
            variant="tiny-500"
            color="inherit"
            class=${(0, rg.o)(s ? "certified" : void 0)}
            >${this.wallet?.name}</wui-text
          >
          ${
            s
              ? rp.dy`<wui-icon size="sm" name="walletConnectBrown"></wui-icon>`
              : null
          }
        </wui-flex>
      </button>
    `;
        }
        imageTemplate() {
          return (this.visible || this.imageSrc) && !this.imageLoading
            ? rp.dy`
      <wui-wallet-image
        size="md"
        imageSrc=${(0, rg.o)(this.imageSrc)}
        name=${this.wallet?.name}
        .installed=${this.wallet?.installed}
        badgeSize="sm"
      >
      </wui-wallet-image>
    `
            : this.shimmerTemplate();
        }
        shimmerTemplate() {
          return rp.dy`<wui-shimmer width="56px" height="56px" borderRadius="xs"></wui-shimmer>`;
        }
        async fetchImageSrc() {
          this.wallet &&
            ((this.imageSrc = tH.fz.getWalletImage(this.wallet)),
            this.imageSrc ||
              ((this.imageLoading = !0),
              (this.imageSrc = await tH.fz.fetchWalletImage(
                this.wallet.image_id
              )),
              (this.imageLoading = !1)));
        }
      };
      (i7.styles = i9),
        w3m_all_wallets_list_item_decorate(
          [(0, rf.SB)()],
          i7.prototype,
          "visible",
          void 0
        ),
        w3m_all_wallets_list_item_decorate(
          [(0, rf.SB)()],
          i7.prototype,
          "imageSrc",
          void 0
        ),
        w3m_all_wallets_list_item_decorate(
          [(0, rf.SB)()],
          i7.prototype,
          "imageLoading",
          void 0
        ),
        w3m_all_wallets_list_item_decorate(
          [(0, rf.Cb)()],
          i7.prototype,
          "wallet",
          void 0
        ),
        (i7 = w3m_all_wallets_list_item_decorate(
          [(0, tY.customElement)("w3m-all-wallets-list-item")],
          i7
        ));
      var nt = rp.iv`
  wui-grid,
  wui-loading-spinner,
  wui-flex {
    height: 360px;
  }

  wui-grid {
    overflow: scroll;
    scrollbar-width: none;
    grid-auto-rows: min-content;
    grid-template-columns: repeat(auto-fill, 104px);
  }

  wui-grid[data-scroll='false'] {
    overflow: hidden;
  }

  wui-grid::-webkit-scrollbar {
    display: none;
  }

  wui-loading-spinner {
    justify-content: center;
    align-items: center;
  }

  @media (max-width: 350px) {
    wui-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
`,
        w3m_all_wallets_search_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nr = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.prevQuery = ""),
            (this.prevBadge = void 0),
            (this.loading = !0),
            (this.query = "");
        }
        render() {
          return (
            this.onSearch(),
            this.loading
              ? rp.dy`<wui-loading-spinner color="accent-100"></wui-loading-spinner>`
              : this.walletsTemplate()
          );
        }
        async onSearch() {
          (this.query.trim() !== this.prevQuery.trim() ||
            this.badge !== this.prevBadge) &&
            ((this.prevQuery = this.query),
            (this.prevBadge = this.badge),
            (this.loading = !0),
            await tH.ApiController.searchWallet({
              search: this.query,
              badge: this.badge,
            }),
            (this.loading = !1));
        }
        walletsTemplate() {
          let { search: s } = tH.ApiController.state,
            x = tZ.markWalletsAsInstalled(s);
          return s.length
            ? rp.dy`
      <wui-grid
        data-testid="wallet-list"
        .padding=${["0", "s", "s", "s"]}
        rowGap="l"
        columnGap="xs"
        justifyContent="space-between"
      >
        ${x.map(
          (s) => rp.dy`
            <w3m-all-wallets-list-item
              @click=${() => this.onConnectWallet(s)}
              .wallet=${s}
              data-testid="wallet-search-item-${s.id}"
            ></w3m-all-wallets-list-item>
          `
        )}
      </wui-grid>
    `
            : rp.dy`
        <wui-flex
          data-testid="no-wallet-found"
          justifyContent="center"
          alignItems="center"
          gap="s"
          flexDirection="column"
        >
          <wui-icon-box
            size="lg"
            iconColor="fg-200"
            backgroundColor="fg-300"
            icon="wallet"
            background="transparent"
          ></wui-icon-box>
          <wui-text data-testid="no-wallet-found-text" color="fg-200" variant="paragraph-500">
            No Wallet found
          </wui-text>
        </wui-flex>
      `;
        }
        onConnectWallet(s) {
          let x = tH.ConnectorController.getConnector(s.id, s.rdns);
          x
            ? tH.RouterController.push("ConnectingExternal", { connector: x })
            : tH.RouterController.push("ConnectingWalletConnect", {
                wallet: s,
              });
        }
      };
      (nr.styles = nt),
        w3m_all_wallets_search_decorate(
          [(0, rf.SB)()],
          nr.prototype,
          "loading",
          void 0
        ),
        w3m_all_wallets_search_decorate(
          [(0, rf.Cb)()],
          nr.prototype,
          "query",
          void 0
        ),
        w3m_all_wallets_search_decorate(
          [(0, rf.Cb)()],
          nr.prototype,
          "badge",
          void 0
        ),
        (nr = w3m_all_wallets_search_decorate(
          [(0, tY.customElement)("w3m-all-wallets-search")],
          nr
        ));
      var w3m_connecting_header_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let nn = class extends rp.oi {
        constructor() {
          super(),
            (this.platformTabs = []),
            (this.unsubscribe = []),
            (this.platforms = []),
            (this.onSelectPlatfrom = void 0),
            (this.buffering = !1),
            this.unsubscribe.push(
              tH.ConnectionController.subscribeKey(
                "buffering",
                (s) => (this.buffering = s)
              )
            );
        }
        disconnectCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.generateTabs();
          return rp.dy`
      <wui-flex justifyContent="center" .padding=${["0", "0", "l", "0"]}>
        <wui-tabs
          ?disabled=${this.buffering}
          .tabs=${s}
          .onTabChange=${this.onTabChange.bind(this)}
        ></wui-tabs>
      </wui-flex>
    `;
        }
        generateTabs() {
          let s = this.platforms.map((s) =>
            "browser" === s
              ? { label: "Browser", icon: "extension", platform: "browser" }
              : "mobile" === s
              ? { label: "Mobile", icon: "mobile", platform: "mobile" }
              : "qrcode" === s
              ? { label: "Mobile", icon: "mobile", platform: "qrcode" }
              : "web" === s
              ? { label: "Webapp", icon: "browser", platform: "web" }
              : "desktop" === s
              ? { label: "Desktop", icon: "desktop", platform: "desktop" }
              : { label: "Browser", icon: "extension", platform: "unsupported" }
          );
          return (this.platformTabs = s.map(({ platform: s }) => s)), s;
        }
        onTabChange(s) {
          let x = this.platformTabs[s];
          x && this.onSelectPlatfrom?.(x);
        }
      };
      w3m_connecting_header_decorate(
        [(0, rf.Cb)({ type: Array })],
        nn.prototype,
        "platforms",
        void 0
      ),
        w3m_connecting_header_decorate(
          [(0, rf.Cb)()],
          nn.prototype,
          "onSelectPlatfrom",
          void 0
        ),
        w3m_connecting_header_decorate(
          [(0, rf.SB)()],
          nn.prototype,
          "buffering",
          void 0
        ),
        (nn = w3m_connecting_header_decorate(
          [(0, tY.customElement)("w3m-connecting-header")],
          nn
        ));
      let no = class extends W3mConnectingWidget {
        constructor() {
          if ((super(), !this.wallet))
            throw Error("w3m-connecting-wc-browser: No wallet provided");
          (this.onConnect = this.onConnectProxy.bind(this)),
            (this.onAutoConnect = this.onConnectProxy.bind(this)),
            tH.Xs.sendEvent({
              type: "track",
              event: "SELECT_WALLET",
              properties: { name: this.wallet.name, platform: "browser" },
            });
        }
        async onConnectProxy() {
          try {
            this.error = !1;
            let { connectors: s } = tH.ConnectorController.state,
              x = s.find(
                (s) =>
                  ("ANNOUNCED" === s.type &&
                    s.info?.rdns === this.wallet?.rdns) ||
                  "INJECTED" === s.type ||
                  s.name === this.wallet?.name
              );
            if (x) await tH.ConnectionController.connectExternal(x, x.chain);
            else throw Error("w3m-connecting-wc-browser: No connector found");
            tH.IN.close(),
              tH.Xs.sendEvent({
                type: "track",
                event: "CONNECT_SUCCESS",
                properties: {
                  method: "browser",
                  name: this.wallet?.name || "Unknown",
                },
              });
          } catch (s) {
            tH.Xs.sendEvent({
              type: "track",
              event: "CONNECT_ERROR",
              properties: { message: s?.message ?? "Unknown" },
            }),
              (this.error = !0);
          }
        }
      };
      no = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-connecting-wc-browser")], no);
      let na = class extends W3mConnectingWidget {
        constructor() {
          if ((super(), !this.wallet))
            throw Error("w3m-connecting-wc-desktop: No wallet provided");
          (this.onConnect = this.onConnectProxy.bind(this)),
            (this.onRender = this.onRenderProxy.bind(this)),
            tH.Xs.sendEvent({
              type: "track",
              event: "SELECT_WALLET",
              properties: { name: this.wallet.name, platform: "desktop" },
            });
        }
        onRenderProxy() {
          !this.ready && this.uri && ((this.ready = !0), this.onConnect?.());
        }
        onConnectProxy() {
          if (this.wallet?.desktop_link && this.uri)
            try {
              this.error = !1;
              let { desktop_link: s, name: x } = this.wallet,
                { redirect: W, href: X } = tH.j1.formatNativeUrl(s, this.uri);
              tH.ConnectionController.setWcLinking({ name: x, href: X }),
                tH.ConnectionController.setRecentWallet(this.wallet),
                tH.j1.openHref(W, "_blank");
            } catch {
              this.error = !0;
            }
        }
      };
      na = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-connecting-wc-desktop")], na);
      let ns = class extends W3mConnectingWidget {
        constructor() {
          if (
            (super(),
            (this.btnLabelTimeout = void 0),
            (this.labelTimeout = void 0),
            (this.onRender = () => {
              !this.ready &&
                this.uri &&
                ((this.ready = !0), this.onConnect?.());
            }),
            (this.onConnect = () => {
              if (this.wallet?.mobile_link && this.uri)
                try {
                  this.error = !1;
                  let { mobile_link: s, name: x } = this.wallet,
                    { redirect: W, href: X } = tH.j1.formatNativeUrl(
                      s,
                      this.uri
                    );
                  tH.ConnectionController.setWcLinking({ name: x, href: X }),
                    tH.ConnectionController.setRecentWallet(this.wallet);
                  let ee = tH.j1.isIframe() ? "_top" : "_self";
                  tH.j1.openHref(W, ee),
                    clearTimeout(this.labelTimeout),
                    (this.secondaryLabel = tH.bq.CONNECT_LABELS.MOBILE);
                } catch (s) {
                  tH.Xs.sendEvent({
                    type: "track",
                    event: "CONNECT_PROXY_ERROR",
                    properties: {
                      message:
                        s instanceof Error
                          ? s.message
                          : "Error parsing the deeplink",
                      uri: this.uri,
                      mobile_link: this.wallet.mobile_link,
                      name: this.wallet.name,
                    },
                  }),
                    (this.error = !0);
                }
            }),
            !this.wallet)
          )
            throw Error("w3m-connecting-wc-mobile: No wallet provided");
          (this.secondaryBtnLabel = void 0),
            (this.secondaryLabel = tH.bq.CONNECT_LABELS.MOBILE),
            document.addEventListener(
              "visibilitychange",
              this.onBuffering.bind(this)
            ),
            tH.Xs.sendEvent({
              type: "track",
              event: "SELECT_WALLET",
              properties: { name: this.wallet.name, platform: "mobile" },
            }),
            (this.btnLabelTimeout = setTimeout(() => {
              (this.secondaryBtnLabel = "Try again"),
                (this.secondaryLabel = tH.bq.CONNECT_LABELS.MOBILE);
            }, tH.bq.FIVE_SEC_MS)),
            (this.labelTimeout = setTimeout(() => {
              this.secondaryLabel =
                "Hold tight... it's taking longer than expected";
            }, tH.bq.THREE_SEC_MS));
        }
        disconnectedCallback() {
          super.disconnectedCallback(),
            document.removeEventListener(
              "visibilitychange",
              this.onBuffering.bind(this)
            ),
            clearTimeout(this.btnLabelTimeout),
            clearTimeout(this.labelTimeout);
        }
        onBuffering() {
          let s = tH.j1.isIos();
          document?.visibilityState === "visible" &&
            !this.error &&
            s &&
            (tH.ConnectionController.setBuffering(!0),
            setTimeout(() => {
              tH.ConnectionController.setBuffering(!1);
            }, 5e3));
        }
        onTryAgain() {
          this.buffering ||
            (tH.ConnectionController.setWcError(!1), this.onConnect());
        }
      };
      ns = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-connecting-wc-mobile")], ns);
      var nl = rp.iv`
  @keyframes fadein {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  wui-shimmer {
    width: 100%;
    aspect-ratio: 1 / 1;
    border-radius: clamp(0px, var(--wui-border-radius-l), 40px) !important;
  }

  wui-qr-code {
    opacity: 0;
    animation-duration: 200ms;
    animation-timing-function: ease;
    animation-name: fadein;
    animation-fill-mode: forwards;
  }
`;
      let nc = class extends W3mConnectingWidget {
        constructor() {
          super(),
            (this.forceUpdate = () => {
              this.requestUpdate();
            }),
            window.addEventListener("resize", this.forceUpdate),
            tH.Xs.sendEvent({
              type: "track",
              event: "SELECT_WALLET",
              properties: {
                name: this.wallet?.name ?? "WalletConnect",
                platform: "qrcode",
              },
            });
        }
        disconnectedCallback() {
          super.disconnectedCallback(),
            this.unsubscribe?.forEach((s) => s()),
            window.removeEventListener("resize", this.forceUpdate);
        }
        render() {
          return (
            this.onRenderProxy(),
            rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        .padding=${["0", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-shimmer borderRadius="l" width="100%"> ${this.qrCodeTemplate()} </wui-shimmer>

        <wui-text variant="paragraph-500" color="fg-100">
          Scan this QR Code with your phone
        </wui-text>
        ${this.copyTemplate()}
      </wui-flex>
      <w3m-mobile-download-links .wallet=${
        this.wallet
      }></w3m-mobile-download-links>
    `
          );
        }
        onRenderProxy() {
          !this.ready &&
            this.uri &&
            (this.timeout = setTimeout(() => {
              this.ready = !0;
            }, 200));
        }
        qrCodeTemplate() {
          if (!this.uri || !this.ready) return null;
          let s = this.getBoundingClientRect().width - 40,
            x = this.wallet ? this.wallet.name : void 0;
          return (
            tH.ConnectionController.setWcLinking(void 0),
            tH.ConnectionController.setRecentWallet(this.wallet),
            rp.dy` <wui-qr-code
      size=${s}
      theme=${tH.ThemeController.state.themeMode}
      uri=${this.uri}
      imageSrc=${(0, rg.o)(tH.fz.getWalletImage(this.wallet))}
      color=${(0, rg.o)(
        tH.ThemeController.state.themeVariables["--w3m-qr-color"]
      )}
      alt=${(0, rg.o)(x)}
      data-testid="wui-qr-code"
    ></wui-qr-code>`
          );
        }
        copyTemplate() {
          let s = !this.uri || !this.ready;
          return rp.dy`<wui-link
      .disabled=${s}
      @click=${this.onCopyUri}
      color="fg-200"
      data-testid="copy-wc2-uri"
    >
      <wui-icon size="xs" color="fg-200" slot="iconLeft" name="copy"></wui-icon>
      Copy link
    </wui-link>`;
        }
      };
      (nc.styles = nl),
        (nc = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([(0, tY.customElement)("w3m-connecting-wc-qrcode")], nc));
      let nu = class extends rp.oi {
        constructor() {
          if (
            (super(),
            (this.wallet = tH.RouterController.state.data?.wallet),
            !this.wallet)
          )
            throw Error("w3m-connecting-wc-unsupported: No wallet provided");
          tH.Xs.sendEvent({
            type: "track",
            event: "SELECT_WALLET",
            properties: { name: this.wallet.name, platform: "browser" },
          });
        }
        render() {
          return rp.dy`
      <wui-flex
        flexDirection="column"
        alignItems="center"
        .padding=${["3xl", "xl", "xl", "xl"]}
        gap="xl"
      >
        <wui-wallet-image
          size="lg"
          imageSrc=${(0, rg.o)(tH.fz.getWalletImage(this.wallet))}
        ></wui-wallet-image>

        <wui-text variant="paragraph-500" color="fg-100">Not Detected</wui-text>
      </wui-flex>

      <w3m-mobile-download-links .wallet=${
        this.wallet
      }></w3m-mobile-download-links>
    `;
        }
      };
      nu = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-connecting-wc-unsupported")], nu);
      let nd = class extends W3mConnectingWidget {
        constructor() {
          if ((super(), !this.wallet))
            throw Error("w3m-connecting-wc-web: No wallet provided");
          (this.onConnect = this.onConnectProxy.bind(this)),
            (this.secondaryBtnLabel = "Open"),
            (this.secondaryLabel = "Open and continue in a new browser tab"),
            (this.secondaryBtnIcon = "externalLink"),
            tH.Xs.sendEvent({
              type: "track",
              event: "SELECT_WALLET",
              properties: { name: this.wallet.name, platform: "web" },
            });
        }
        onConnectProxy() {
          if (this.wallet?.webapp_link && this.uri)
            try {
              this.error = !1;
              let { webapp_link: s, name: x } = this.wallet,
                { redirect: W, href: X } = tH.j1.formatUniversalUrl(
                  s,
                  this.uri
                );
              tH.ConnectionController.setWcLinking({ name: x, href: X }),
                tH.ConnectionController.setRecentWallet(this.wallet),
                tH.j1.openHref(W, "_blank");
            } catch {
              this.error = !0;
            }
        }
      };
      nd = (function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      })([(0, tY.customElement)("w3m-connecting-wc-web")], nd);
      var nh = rp.iv`
  :host {
    width: 100%;
  }

  .details-container > wui-flex {
    background: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xxs);
    width: 100%;
  }

  .details-container > wui-flex > button {
    border: none;
    background: none;
    padding: var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-xxs);
    cursor: pointer;
  }

  .details-content-container {
    padding: var(--wui-spacing-1xs);
    padding-top: 0px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .details-content-container > wui-flex {
    width: 100%;
  }

  .details-row {
    width: 100%;
    padding: var(--wui-spacing-s);
    padding-left: var(--wui-spacing-s);
    padding-right: var(--wui-spacing-1xs);
    border-radius: calc(var(--wui-border-radius-5xs) + var(--wui-border-radius-4xs));
    background: var(--wui-color-gray-glass-002);
  }

  .details-row-title {
    white-space: nowrap;
  }

  .details-row.provider-free-row {
    padding-right: var(--wui-spacing-xs);
  }
`,
        w3m_swap_details_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let np = tH.bq.CONVERT_SLIPPAGE_TOLERANCE,
        nf = class extends rp.oi {
          constructor() {
            super(),
              (this.unsubscribe = []),
              (this.networkName = tH.RY.state.activeCaipNetwork?.name),
              (this.detailsOpen = !1),
              (this.sourceToken = tH.nY.state.sourceToken),
              (this.toToken = tH.nY.state.toToken),
              (this.toTokenAmount = tH.nY.state.toTokenAmount),
              (this.sourceTokenPriceInUSD = tH.nY.state.sourceTokenPriceInUSD),
              (this.toTokenPriceInUSD = tH.nY.state.toTokenPriceInUSD),
              (this.gasPriceInUSD = tH.nY.state.gasPriceInUSD),
              (this.priceImpact = tH.nY.state.priceImpact),
              (this.maxSlippage = tH.nY.state.maxSlippage),
              (this.networkTokenSymbol = tH.nY.state.networkTokenSymbol),
              (this.inputError = tH.nY.state.inputError),
              this.unsubscribe.push(
                ...[
                  tH.nY.subscribe((s) => {
                    (this.sourceToken = s.sourceToken),
                      (this.toToken = s.toToken),
                      (this.toTokenAmount = s.toTokenAmount),
                      (this.gasPriceInUSD = s.gasPriceInUSD),
                      (this.priceImpact = s.priceImpact),
                      (this.maxSlippage = s.maxSlippage),
                      (this.sourceTokenPriceInUSD = s.sourceTokenPriceInUSD),
                      (this.toTokenPriceInUSD = s.toTokenPriceInUSD),
                      (this.inputError = s.inputError);
                  }),
                ]
              );
          }
          render() {
            let s =
              this.toTokenAmount && this.maxSlippage
                ? tV.C6.bigNumber(this.toTokenAmount)
                    .minus(this.maxSlippage)
                    .toString()
                : null;
            if (!this.sourceToken || !this.toToken || this.inputError)
              return null;
            let x =
              this.sourceTokenPriceInUSD && this.toTokenPriceInUSD
                ? (1 / this.toTokenPriceInUSD) * this.sourceTokenPriceInUSD
                : 0;
            return rp.dy`
      <wui-flex flexDirection="column" alignItems="center" gap="1xs" class="details-container">
        <wui-flex flexDirection="column">
          <button @click=${this.toggleDetails.bind(this)}>
            <wui-flex justifyContent="space-between" .padding=${[
              "0",
              "xs",
              "0",
              "xs",
            ]}>
              <wui-flex justifyContent="flex-start" flexGrow="1" gap="xs">
                <wui-text variant="small-400" color="fg-100">
                  1 ${this.sourceToken.symbol} =
                  ${tY.UiHelperUtil.formatNumberToLocalString(x, 3)}
                  ${this.toToken.symbol}
                </wui-text>
                <wui-text variant="small-400" color="fg-200">
                  $${tY.UiHelperUtil.formatNumberToLocalString(
                    this.sourceTokenPriceInUSD
                  )}
                </wui-text>
              </wui-flex>
              <wui-icon name="chevronBottom"></wui-icon>
            </wui-flex>
          </button>
          ${
            this.detailsOpen
              ? rp.dy`
                <wui-flex flexDirection="column" gap="xs" class="details-content-container">
                  <wui-flex flexDirection="column" gap="xs">
                    <wui-flex
                      justifyContent="space-between"
                      alignItems="center"
                      class="details-row"
                    >
                      <wui-flex alignItems="center" gap="xs">
                        <wui-text class="details-row-title" variant="small-400" color="fg-150">
                          Network cost
                        </wui-text>
                        <w3m-tooltip-trigger
                          text=${`Network cost is paid in ${this.networkTokenSymbol} on the ${this.networkName} network in order to execute transaction.`}
                        >
                          <wui-icon size="xs" color="fg-250" name="infoCircle"></wui-icon>
                        </w3m-tooltip-trigger>
                      </wui-flex>
                      <wui-text variant="small-400" color="fg-100">
                        $${tY.UiHelperUtil.formatNumberToLocalString(
                          this.gasPriceInUSD,
                          3
                        )}
                      </wui-text>
                    </wui-flex>
                  </wui-flex>
                  ${
                    this.priceImpact
                      ? rp.dy` <wui-flex flexDirection="column" gap="xs">
                        <wui-flex
                          justifyContent="space-between"
                          alignItems="center"
                          class="details-row"
                        >
                          <wui-flex alignItems="center" gap="xs">
                            <wui-text class="details-row-title" variant="small-400" color="fg-150">
                              Price impact
                            </wui-text>
                            <w3m-tooltip-trigger
                              text="Price impact reflects the change in market price due to your trade"
                            >
                              <wui-icon size="xs" color="fg-250" name="infoCircle"></wui-icon>
                            </w3m-tooltip-trigger>
                          </wui-flex>
                          <wui-flex>
                            <wui-text variant="small-400" color="fg-200">
                              ${tY.UiHelperUtil.formatNumberToLocalString(
                                this.priceImpact,
                                3
                              )}%
                            </wui-text>
                          </wui-flex>
                        </wui-flex>
                      </wui-flex>`
                      : null
                  }
                  ${
                    this.maxSlippage && this.sourceToken.symbol
                      ? rp.dy`<wui-flex flexDirection="column" gap="xs">
                        <wui-flex
                          justifyContent="space-between"
                          alignItems="center"
                          class="details-row"
                        >
                          <wui-flex alignItems="center" gap="xs">
                            <wui-text class="details-row-title" variant="small-400" color="fg-150">
                              Max. slippage
                            </wui-text>
                            <w3m-tooltip-trigger
                              text=${`Max slippage sets the minimum amount you must receive for the transaction to proceed. ${
                                s
                                  ? `Transaction will be reversed if you receive less than ${tY.UiHelperUtil.formatNumberToLocalString(
                                      s,
                                      6
                                    )} ${
                                      this.toToken.symbol
                                    } due to price changes.`
                                  : ""
                              }`}
                            >
                              <wui-icon size="xs" color="fg-250" name="infoCircle"></wui-icon>
                            </w3m-tooltip-trigger>
                          </wui-flex>
                          <wui-flex>
                            <wui-text variant="small-400" color="fg-200">
                              ${tY.UiHelperUtil.formatNumberToLocalString(
                                this.maxSlippage,
                                6
                              )}
                              ${this.toToken.symbol} ${np}%
                            </wui-text>
                          </wui-flex>
                        </wui-flex>
                      </wui-flex>`
                      : null
                  }
                  <wui-flex flexDirection="column" gap="xs">
                    <wui-flex
                      justifyContent="space-between"
                      alignItems="center"
                      class="details-row provider-free-row"
                    >
                      <wui-flex alignItems="center" gap="xs">
                        <wui-text class="details-row-title" variant="small-400" color="fg-150">
                          Provider fee
                        </wui-text>
                      </wui-flex>
                      <wui-flex>
                        <wui-text variant="small-400" color="fg-200">0.85%</wui-text>
                      </wui-flex>
                    </wui-flex>
                  </wui-flex>
                </wui-flex>
              `
              : null
          }
        </wui-flex>
      </wui-flex>
    `;
          }
          toggleDetails() {
            this.detailsOpen = !this.detailsOpen;
          }
        };
      (nf.styles = [nh]),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "networkName",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.Cb)()],
          nf.prototype,
          "detailsOpen",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "sourceToken",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "toToken",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "toTokenAmount",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "sourceTokenPriceInUSD",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "toTokenPriceInUSD",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "gasPriceInUSD",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "priceImpact",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "maxSlippage",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "networkTokenSymbol",
          void 0
        ),
        w3m_swap_details_decorate(
          [(0, rf.SB)()],
          nf.prototype,
          "inputError",
          void 0
        ),
        (nf = w3m_swap_details_decorate(
          [(0, tY.customElement)("w3m-swap-details")],
          nf
        ));
      var ng = rp.iv`
  :host > wui-flex {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    border-radius: var(--wui-border-radius-s);
    background-color: var(--wui-color-gray-glass-002);
    padding: var(--wui-spacing-xl);
    padding-right: var(--wui-spacing-s);
    width: 100%;
    height: 100px;
    box-sizing: border-box;
    box-shadow: inset 0px 0px 0px 1px var(--wui-color-gray-glass-002);
    position: relative;
    transition: box-shadow var(--wui-ease-out-power-1) var(--wui-duration-lg);
    will-change: background-color;
  }

  :host wui-flex.focus {
    box-shadow: inset 0px 0px 0px 1px var(--wui-color-gray-glass-005);
  }

  :host > wui-flex .swap-input,
  :host > wui-flex .swap-token-button {
    z-index: 10;
  }

  :host > wui-flex .swap-input {
    -webkit-mask-image: linear-gradient(
      270deg,
      transparent 0px,
      transparent 8px,
      black 24px,
      black 25px,
      black 32px,
      black 100%
    );
    mask-image: linear-gradient(
      270deg,
      transparent 0px,
      transparent 8px,
      black 24px,
      black 25px,
      black 32px,
      black 100%
    );
  }

  :host > wui-flex .swap-input input {
    background: none;
    border: none;
    height: 42px;
    width: 100%;
    font-size: 32px;
    font-style: normal;
    font-weight: 400;
    line-height: 130%;
    letter-spacing: -1.28px;
    outline: none;
    caret-color: var(--wui-color-accent-100);
    color: var(--wui-color-fg-100);
    padding: 0px;
  }

  :host > wui-flex .swap-input input:focus-visible {
    outline: none;
  }

  :host > wui-flex .swap-input input::-webkit-outer-spin-button,
  :host > wui-flex .swap-input input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .max-value-button {
    background-color: transparent;
    border: none;
    cursor: pointer;
    color: var(--wui-color-gray-glass-020);
    padding-left: 0px;
  }

  .market-value {
    min-height: 18px;
  }
`,
        w3m_swap_input_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nm = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.focused = !1),
            (this.price = 0),
            (this.target = "sourceToken"),
            (this.onSetAmount = null),
            (this.onSetMaxValue = null);
        }
        render() {
          let s = this.marketValue || "0",
            x = tV.C6.bigNumber(s).isGreaterThan("0");
          return rp.dy`
      <wui-flex class="${
        this.focused ? "focus" : ""
      }" justifyContent="space-between">
        <wui-flex
          flex="1"
          flexDirection="column"
          alignItems="flex-start"
          justifyContent="center"
          class="swap-input"
        >
          <input
            data-testid="swap-input-${this.target}"
            @focusin=${() => this.onFocusChange(!0)}
            @focusout=${() => this.onFocusChange(!1)}
            ?disabled=${this.disabled}
            .value=${this.value}
            @input=${this.dispatchInputChangeEvent}
            @keydown=${this.handleKeydown}
            placeholder="0"
            type="text"
            inputmode="decimal"
          />
          <wui-text class="market-value" variant="small-400" color="fg-200">
            ${
              x
                ? `$${tY.UiHelperUtil.formatNumberToLocalString(
                    this.marketValue,
                    2
                  )}`
                : null
            }
          </wui-text>
        </wui-flex>
        ${this.templateTokenSelectButton()}
      </wui-flex>
    `;
        }
        handleKeydown(s) {
          return tV.kg.numericInputKeyDown(s, this.value, (s) =>
            this.onSetAmount?.(this.target, s)
          );
        }
        dispatchInputChangeEvent(s) {
          if (!this.onSetAmount) return;
          let x = s.target.value.replace(/[^0-9.]/gu, "");
          "," === x || "." === x
            ? this.onSetAmount(this.target, "0.")
            : x.endsWith(",")
            ? this.onSetAmount(this.target, x.replace(",", "."))
            : this.onSetAmount(this.target, x);
        }
        setMaxValueToInput() {
          this.onSetMaxValue?.(this.target, this.balance);
        }
        templateTokenSelectButton() {
          return this.token
            ? rp.dy`
      <wui-flex
        class="swap-token-button"
        flexDirection="column"
        alignItems="flex-end"
        justifyContent="center"
        gap="xxs"
      >
        <wui-token-button
          data-testid="swap-input-token-${this.target}"
          text=${this.token.symbol}
          imageSrc=${this.token.logoUri}
          @click=${this.onSelectToken.bind(this)}
        >
        </wui-token-button>
        <wui-flex alignItems="center" gap="xxs"> ${this.tokenBalanceTemplate()} </wui-flex>
      </wui-flex>
    `
            : rp.dy` <wui-button
        data-testid="swap-select-token-button-${this.target}"
        class="swap-token-button"
        size="md"
        variant="accent"
        @click=${this.onSelectToken.bind(this)}
      >
        Select token
      </wui-button>`;
        }
        tokenBalanceTemplate() {
          let s = tV.C6.multiply(this.balance, this.price),
            x = !!s && s?.isGreaterThan(5e-5);
          return rp.dy`
      ${
        x
          ? rp.dy`<wui-text variant="small-400" color="fg-200">
            ${tY.UiHelperUtil.formatNumberToLocalString(this.balance, 2)}
          </wui-text>`
          : null
      }
      ${
        "sourceToken" === this.target ? this.tokenActionButtonTemplate(x) : null
      }
    `;
        }
        tokenActionButtonTemplate(s) {
          return s
            ? rp.dy` <button class="max-value-button" @click=${this.setMaxValueToInput.bind(
                this
              )}>
        <wui-text color="accent-100" variant="small-600">Max</wui-text>
      </button>`
            : rp.dy` <button class="max-value-button" @click=${this.onBuyToken.bind(
                this
              )}>
      <wui-text color="accent-100" variant="small-600">Buy</wui-text>
    </button>`;
        }
        onFocusChange(s) {
          this.focused = s;
        }
        onSelectToken() {
          tH.Xs.sendEvent({
            type: "track",
            event: "CLICK_SELECT_TOKEN_TO_SWAP",
          }),
            tH.RouterController.push("SwapSelectToken", {
              target: this.target,
            });
        }
        onBuyToken() {
          tH.RouterController.push("OnRampProviders");
        }
      };
      (nm.styles = [ng]),
        w3m_swap_input_decorate(
          [(0, rf.Cb)()],
          nm.prototype,
          "focused",
          void 0
        ),
        w3m_swap_input_decorate(
          [(0, rf.Cb)()],
          nm.prototype,
          "balance",
          void 0
        ),
        w3m_swap_input_decorate([(0, rf.Cb)()], nm.prototype, "value", void 0),
        w3m_swap_input_decorate([(0, rf.Cb)()], nm.prototype, "price", void 0),
        w3m_swap_input_decorate(
          [(0, rf.Cb)()],
          nm.prototype,
          "marketValue",
          void 0
        ),
        w3m_swap_input_decorate(
          [(0, rf.Cb)()],
          nm.prototype,
          "disabled",
          void 0
        ),
        w3m_swap_input_decorate([(0, rf.Cb)()], nm.prototype, "target", void 0),
        w3m_swap_input_decorate([(0, rf.Cb)()], nm.prototype, "token", void 0),
        w3m_swap_input_decorate(
          [(0, rf.Cb)()],
          nm.prototype,
          "onSetAmount",
          void 0
        ),
        w3m_swap_input_decorate(
          [(0, rf.Cb)()],
          nm.prototype,
          "onSetMaxValue",
          void 0
        ),
        (nm = w3m_swap_input_decorate(
          [(0, tY.customElement)("w3m-swap-input")],
          nm
        ));
      var nw = rp.iv`
  :host {
    width: 100%;
  }

  :host > wui-flex {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    border-radius: var(--wui-border-radius-s);
    padding: var(--wui-spacing-xl);
    padding-right: var(--wui-spacing-s);
    background-color: var(--wui-color-gray-glass-002);
    box-shadow: inset 0px 0px 0px 1px var(--wui-color-gray-glass-002);
    width: 100%;
    height: 100px;
    box-sizing: border-box;
    position: relative;
  }

  wui-shimmer.market-value {
    opacity: 0;
  }

  :host > wui-flex > svg.input_mask {
    position: absolute;
    inset: 0;
    z-index: 5;
  }

  :host wui-flex .input_mask__border,
  :host wui-flex .input_mask__background {
    transition: fill var(--wui-duration-md) var(--wui-ease-out-power-1);
    will-change: fill;
  }

  :host wui-flex .input_mask__border {
    fill: var(--wui-color-gray-glass-020);
  }

  :host wui-flex .input_mask__background {
    fill: var(--wui-color-gray-glass-002);
  }
`,
        w3m_swap_input_skeleton_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nb = class extends rp.oi {
        constructor() {
          super(...arguments), (this.target = "sourceToken");
        }
        render() {
          return rp.dy`
      <wui-flex class justifyContent="space-between">
        <wui-flex
          flex="1"
          flexDirection="column"
          alignItems="flex-start"
          justifyContent="center"
          class="swap-input"
          gap="xxs"
        >
          <wui-shimmer width="80px" height="40px" borderRadius="xxs" variant="light"></wui-shimmer>
        </wui-flex>
        ${this.templateTokenSelectButton()}
      </wui-flex>
    `;
        }
        templateTokenSelectButton() {
          return rp.dy`
      <wui-flex
        class="swap-token-button"
        flexDirection="column"
        alignItems="flex-end"
        justifyContent="center"
        gap="xxs"
      >
        <wui-shimmer width="80px" height="40px" borderRadius="3xl" variant="light"></wui-shimmer>
      </wui-flex>
    `;
        }
      };
      (nb.styles = [nw]),
        w3m_swap_input_skeleton_decorate(
          [(0, rf.Cb)()],
          nb.prototype,
          "target",
          void 0
        ),
        (nb = w3m_swap_input_skeleton_decorate(
          [(0, tY.customElement)("w3m-swap-input-skeleton")],
          nb
        ));
      var nv = rp.iv`
  :host {
    height: 64px;
  }

  wui-text {
    text-transform: capitalize;
  }

  wui-flex.w3m-header-title {
    transform: translateY(0);
    opacity: 1;
  }

  wui-flex.w3m-header-title[view-direction='prev'] {
    animation:
      slide-down-out 120ms forwards var(--wui-ease-out-power-2),
      slide-down-in 120ms forwards var(--wui-ease-out-power-2);
    animation-delay: 0ms, 200ms;
  }

  wui-flex.w3m-header-title[view-direction='next'] {
    animation:
      slide-up-out 120ms forwards var(--wui-ease-out-power-2),
      slide-up-in 120ms forwards var(--wui-ease-out-power-2);
    animation-delay: 0ms, 200ms;
  }

  wui-icon-link[data-hidden='true'] {
    opacity: 0 !important;
    pointer-events: none;
  }

  @keyframes slide-up-out {
    from {
      transform: translateY(0px);
      opacity: 1;
    }
    to {
      transform: translateY(3px);
      opacity: 0;
    }
  }

  @keyframes slide-up-in {
    from {
      transform: translateY(-3px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes slide-down-out {
    from {
      transform: translateY(0px);
      opacity: 1;
    }
    to {
      transform: translateY(-3px);
      opacity: 0;
    }
  }

  @keyframes slide-down-in {
    from {
      transform: translateY(3px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
`,
        w3m_header_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ny = ["SmartSessionList"];
      function headings() {
        let s = tH.RouterController.state.data?.connector?.name,
          x = tH.RouterController.state.data?.wallet?.name,
          W = tH.RouterController.state.data?.network?.name,
          X = x ?? s,
          ee = tH.ConnectorController.getConnectors(),
          et = 1 === ee.length && ee[0]?.id === "w3m-email";
        return {
          Connect: `Connect ${et ? "Email" : ""} Wallet`,
          Create: "Create Wallet",
          ChooseAccountName: void 0,
          Account: void 0,
          AccountSettings: void 0,
          AllWallets: "All Wallets",
          ApproveTransaction: "Approve Transaction",
          BuyInProgress: "Buy",
          ConnectingExternal: X ?? "Connect Wallet",
          ConnectingWalletConnect: X ?? "WalletConnect",
          ConnectingWalletConnectBasic: "WalletConnect",
          ConnectingSiwe: "Sign In",
          Convert: "Convert",
          ConvertSelectToken: "Select token",
          ConvertPreview: "Preview convert",
          Downloads: X ? `Get ${X}` : "Downloads",
          EmailVerifyOtp: "Confirm Email",
          EmailVerifyDevice: "Register Device",
          GetWallet: "Get a wallet",
          Networks: "Choose Network",
          OnRampProviders: "Choose Provider",
          OnRampActivity: "Activity",
          OnRampTokenSelect: "Select Token",
          OnRampFiatSelect: "Select Currency",
          Profile: void 0,
          SwitchNetwork: W ?? "Switch Network",
          SwitchAddress: "Switch Address",
          Transactions: "Activity",
          UnsupportedChain: "Switch Network",
          UpgradeEmailWallet: "Upgrade your Wallet",
          UpdateEmailWallet: "Edit Email",
          UpdateEmailPrimaryOtp: "Confirm Current Email",
          UpdateEmailSecondaryOtp: "Confirm New Email",
          WhatIsABuy: "What is Buy?",
          RegisterAccountName: "Choose name",
          RegisterAccountNameSuccess: "",
          WalletReceive: "Receive",
          WalletCompatibleNetworks: "Compatible Networks",
          Swap: "Swap",
          SwapSelectToken: "Select token",
          SwapPreview: "Preview swap",
          WalletSend: "Send",
          WalletSendPreview: "Review send",
          WalletSendSelectToken: "Select Token",
          WhatIsANetwork: "What is a network?",
          WhatIsAWallet: "What is a wallet?",
          ConnectWallets: "Connect wallet",
          ConnectSocials: "All socials",
          ConnectingSocial: tH.AccountController.state.socialProvider
            ? tH.AccountController.state.socialProvider
            : "Connect Social",
          ConnectingMultiChain: "Select chain",
          ConnectingFarcaster: "Farcaster",
          SwitchActiveChain: "Switch chain",
          SmartSessionCreated: void 0,
          SmartSessionList: "Smart Sessions",
          SIWXSignMessage: "Sign In",
        };
      }
      let n_ = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.heading = headings()[tH.RouterController.state.view]),
            (this.network = tH.RY.state.activeCaipNetwork),
            (this.buffering = !1),
            (this.showBack = !1),
            (this.prevHistoryLength = 1),
            (this.view = tH.RouterController.state.view),
            (this.viewDirection = ""),
            (this.headerText = headings()[tH.RouterController.state.view]),
            this.unsubscribe.push(
              tH.RouterController.subscribeKey("view", (s) => {
                setTimeout(() => {
                  (this.view = s), (this.headerText = headings()[s]);
                }, tK.ANIMATION_DURATIONS.HeaderText),
                  this.onViewChange(),
                  this.onHistoryChange();
              }),
              tH.ConnectionController.subscribeKey(
                "buffering",
                (s) => (this.buffering = s)
              ),
              tH.RY.subscribeKey("activeCaipNetwork", (s) => (this.network = s))
            );
        }
        disconnectCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          return rp.dy`
      <wui-flex .padding=${this.getPadding()} justifyContent="space-between" alignItems="center">
        ${this.leftHeaderTemplate()} ${this.titleTemplate()} ${this.rightHeaderTemplate()}
      </wui-flex>
    `;
        }
        onWalletHelp() {
          tH.Xs.sendEvent({ type: "track", event: "CLICK_WALLET_HELP" }),
            tH.RouterController.push("WhatIsAWallet");
        }
        async onClose() {
          let s = "UnsupportedChain" === tH.RouterController.state.view;
          s || (await tH.wf.isSIWXCloseDisabled())
            ? tH.IN.shake()
            : tH.IN.close();
        }
        rightHeaderTemplate() {
          let s = tH.OptionsController?.state?.features?.smartSessions;
          return "Account" === tH.RouterController.state.view && s
            ? rp.dy`<wui-flex>
      <wui-icon-link
        icon="clock"
        @click=${() => tH.RouterController.push("SmartSessionList")}
        data-testid="w3m-header-smart-sessions"
      ></wui-icon-link>
      ${this.closeButtonTemplate()}
    </wui-flex> `
            : this.closeButtonTemplate();
        }
        closeButtonTemplate() {
          return rp.dy`
      <wui-icon-link
        ?disabled=${this.buffering}
        icon="close"
        @click=${this.onClose.bind(this)}
        data-testid="w3m-header-close"
      ></wui-icon-link>
    `;
        }
        titleTemplate() {
          let s = ny.includes(this.view);
          return rp.dy`
      <wui-flex
        view-direction="${this.viewDirection}"
        class="w3m-header-title"
        alignItems="center"
        gap="xs"
      >
        <wui-text variant="paragraph-700" color="fg-100" data-testid="w3m-header-text"
          >${this.headerText}</wui-text
        >
        ${s ? rp.dy`<wui-tag variant="main">Beta</wui-tag>` : null}
      </wui-flex>
    `;
        }
        leftHeaderTemplate() {
          let { view: s } = tH.RouterController.state,
            x = "Connect" === s,
            W = tH.OptionsController.state.enableEmbedded;
          return "Account" === s
            ? rp.dy`<wui-select
        id="dynamic"
        data-testid="w3m-account-select-network"
        active-network=${(0, rg.o)(this.network?.name)}
        @click=${this.onNetworks.bind(this)}
        imageSrc=${(0, rg.o)(tH.fz.getNetworkImage(this.network))}
      ></wui-select>`
            : this.showBack &&
              !(
                "ApproveTransaction" === s ||
                "ConnectingSiwe" === s ||
                (x && W)
              )
            ? rp.dy`<wui-icon-link
        data-testid="header-back"
        id="dynamic"
        icon="chevronLeft"
        ?disabled=${this.buffering}
        @click=${this.onGoBack.bind(this)}
      ></wui-icon-link>`
            : rp.dy`<wui-icon-link
      data-hidden=${!x}
      id="dynamic"
      icon="helpCircle"
      @click=${this.onWalletHelp.bind(this)}
    ></wui-icon-link>`;
        }
        onNetworks() {
          this.isAllowedNetworkSwitch() &&
            (tH.Xs.sendEvent({ type: "track", event: "CLICK_NETWORKS" }),
            tH.RouterController.push("Networks"));
        }
        isAllowedNetworkSwitch() {
          let s = tH.RY.getAllRequestedCaipNetworks(),
            x = !!s && s.length > 1,
            W = s?.find(({ id: s }) => s === this.network?.id);
          return x || !W;
        }
        getPadding() {
          return this.heading ? ["l", "2l", "l", "2l"] : ["0", "2l", "0", "2l"];
        }
        onViewChange() {
          let { history: s } = tH.RouterController.state,
            x = tK.VIEW_DIRECTION.Next;
          s.length < this.prevHistoryLength && (x = tK.VIEW_DIRECTION.Prev),
            (this.prevHistoryLength = s.length),
            (this.viewDirection = x);
        }
        async onHistoryChange() {
          let { history: s } = tH.RouterController.state,
            x = this.shadowRoot?.querySelector("#dynamic");
          s.length > 1 && !this.showBack && x
            ? (await x.animate([{ opacity: 1 }, { opacity: 0 }], {
                duration: 200,
                fill: "forwards",
                easing: "ease",
              }).finished,
              (this.showBack = !0),
              x.animate([{ opacity: 0 }, { opacity: 1 }], {
                duration: 200,
                fill: "forwards",
                easing: "ease",
              }))
            : s.length <= 1 &&
              this.showBack &&
              x &&
              (await x.animate([{ opacity: 1 }, { opacity: 0 }], {
                duration: 200,
                fill: "forwards",
                easing: "ease",
              }).finished,
              (this.showBack = !1),
              x.animate([{ opacity: 0 }, { opacity: 1 }], {
                duration: 200,
                fill: "forwards",
                easing: "ease",
              }));
        }
        onGoBack() {
          tH.RouterController.goBack();
        }
      };
      (n_.styles = nv),
        w3m_header_decorate([(0, rf.SB)()], n_.prototype, "heading", void 0),
        w3m_header_decorate([(0, rf.SB)()], n_.prototype, "network", void 0),
        w3m_header_decorate([(0, rf.SB)()], n_.prototype, "buffering", void 0),
        w3m_header_decorate([(0, rf.SB)()], n_.prototype, "showBack", void 0),
        w3m_header_decorate(
          [(0, rf.SB)()],
          n_.prototype,
          "prevHistoryLength",
          void 0
        ),
        w3m_header_decorate([(0, rf.SB)()], n_.prototype, "view", void 0),
        w3m_header_decorate(
          [(0, rf.SB)()],
          n_.prototype,
          "viewDirection",
          void 0
        ),
        w3m_header_decorate([(0, rf.SB)()], n_.prototype, "headerText", void 0),
        (n_ = w3m_header_decorate([(0, tY.customElement)("w3m-header")], n_));
      var w3m_help_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let nC = class extends rp.oi {
        constructor() {
          super(...arguments), (this.data = []);
        }
        render() {
          return rp.dy`
      <wui-flex flexDirection="column" alignItems="center" gap="l">
        ${this.data.map(
          (s) => rp.dy`
            <wui-flex flexDirection="column" alignItems="center" gap="xl">
              <wui-flex flexDirection="row" justifyContent="center" gap="1xs">
                ${s.images.map(
                  (s) => rp.dy`<wui-visual name=${s}></wui-visual>`
                )}
              </wui-flex>
            </wui-flex>
            <wui-flex flexDirection="column" alignItems="center" gap="xxs">
              <wui-text variant="paragraph-500" color="fg-100" align="center">
                ${s.title}
              </wui-text>
              <wui-text variant="small-500" color="fg-200" align="center">${
                s.text
              }</wui-text>
            </wui-flex>
          `
        )}
      </wui-flex>
    `;
        }
      };
      w3m_help_widget_decorate(
        [(0, rf.Cb)({ type: Array })],
        nC.prototype,
        "data",
        void 0
      ),
        (nC = w3m_help_widget_decorate(
          [(0, tY.customElement)("w3m-help-widget")],
          nC
        ));
      var nx = rp.iv`
  :host {
    width: 100%;
  }

  :host > wui-flex {
    width: 100%;
    padding: var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-xs);
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: var(--wui-spacing-s);
  }

  :host > wui-flex:hover {
    background-color: var(--wui-color-gray-glass-002);
  }

  .purchase-image-container {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: var(--wui-icon-box-size-lg);
    height: var(--wui-icon-box-size-lg);
  }

  .purchase-image-container wui-image {
    width: 100%;
    height: 100%;
    position: relative;
    border-radius: calc(var(--wui-icon-box-size-lg) / 2);
  }

  .purchase-image-container wui-image::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0;
    border-radius: calc(var(--wui-icon-box-size-lg) / 2);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  .purchase-image-container wui-icon-box {
    position: absolute;
    right: 0;
    bottom: 0;
    transform: translate(20%, 20%);
  }
`,
        w3m_onramp_activity_item_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nE = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.disabled = !1),
            (this.color = "inherit"),
            (this.label = "Bought"),
            (this.purchaseValue = ""),
            (this.purchaseCurrency = ""),
            (this.date = ""),
            (this.completed = !1),
            (this.inProgress = !1),
            (this.failed = !1),
            (this.onClick = null),
            (this.symbol = "");
        }
        firstUpdated() {
          this.icon || this.fetchTokenImage();
        }
        render() {
          return rp.dy`
      <wui-flex>
        ${this.imageTemplate()}
        <wui-flex flexDirection="column" gap="4xs" flexGrow="1">
          <wui-flex gap="xxs" alignItems="center" justifyContent="flex-start">
            ${this.statusIconTemplate()}
            <wui-text variant="paragraph-500" color="fg-100"> ${
              this.label
            }</wui-text>
          </wui-flex>
          <wui-text variant="small-400" color="fg-200">
            + ${this.purchaseValue} ${this.purchaseCurrency}
          </wui-text>
        </wui-flex>
        ${
          this.inProgress
            ? rp.dy`<wui-loading-spinner color="fg-200" size="md"></wui-loading-spinner>`
            : rp.dy`<wui-text variant="micro-700" color="fg-300"><span>${this.date}</span></wui-text>`
        }
      </wui-flex>
    `;
        }
        async fetchTokenImage() {
          await tH.ApiController._fetchTokenImage(this.purchaseCurrency);
        }
        statusIconTemplate() {
          return this.inProgress
            ? null
            : this.completed
            ? this.boughtIconTemplate()
            : this.errorIconTemplate();
        }
        errorIconTemplate() {
          return rp.dy`<wui-icon-box
      size="xxs"
      iconColor="error-100"
      backgroundColor="error-100"
      background="opaque"
      icon="close"
      borderColor="wui-color-bg-125"
    ></wui-icon-box>`;
        }
        imageTemplate() {
          let s =
            this.icon ||
            `https://avatar.vercel.sh/andrew.svg?size=50&text=${this.symbol}`;
          return rp.dy`<wui-flex class="purchase-image-container">
      <wui-image src=${s}></wui-image>
    </wui-flex>`;
        }
        boughtIconTemplate() {
          return rp.dy`<wui-icon-box
      size="xxs"
      iconColor="success-100"
      backgroundColor="success-100"
      background="opaque"
      icon="arrowBottom"
      borderColor="wui-color-bg-125"
    ></wui-icon-box>`;
        }
      };
      (nE.styles = [nx]),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          nE.prototype,
          "disabled",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)()],
          nE.prototype,
          "color",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)()],
          nE.prototype,
          "label",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)()],
          nE.prototype,
          "purchaseValue",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)()],
          nE.prototype,
          "purchaseCurrency",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)()],
          nE.prototype,
          "date",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          nE.prototype,
          "completed",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          nE.prototype,
          "inProgress",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          nE.prototype,
          "failed",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)()],
          nE.prototype,
          "onClick",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)()],
          nE.prototype,
          "symbol",
          void 0
        ),
        w3m_onramp_activity_item_decorate(
          [(0, rf.Cb)()],
          nE.prototype,
          "icon",
          void 0
        ),
        (nE = w3m_onramp_activity_item_decorate(
          [(0, tY.customElement)("w3m-onramp-activity-item")],
          nE
        ));
      var nA = rp.iv`
  :host {
    width: 100%;
  }

  wui-loading-spinner {
    position: absolute;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
  }

  .currency-container {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: var(--wui-spacing-1xs);
    height: 40px;
    padding: var(--wui-spacing-xs) var(--wui-spacing-1xs) var(--wui-spacing-xs)
      var(--wui-spacing-xs);
    min-width: 95px;
    border-radius: var(--FULL, 1000px);
    border: 1px solid var(--wui-color-gray-glass-002);
    background: var(--wui-color-gray-glass-002);
    cursor: pointer;
  }

  .currency-container > wui-image {
    height: 24px;
    width: 24px;
    border-radius: 50%;
  }
`,
        w3m_onramp_input_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nS = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.type = "Token"),
            (this.value = 0),
            (this.currencies = []),
            (this.selectedCurrency = this.currencies?.[0]),
            (this.currencyImages = tH.WM.state.currencyImages),
            (this.tokenImages = tH.WM.state.tokenImages),
            this.unsubscribe.push(
              tH.ph.subscribeKey("purchaseCurrency", (s) => {
                s &&
                  "Fiat" !== this.type &&
                  (this.selectedCurrency = this.formatPurchaseCurrency(s));
              }),
              tH.ph.subscribeKey("paymentCurrency", (s) => {
                s &&
                  "Token" !== this.type &&
                  (this.selectedCurrency = this.formatPaymentCurrency(s));
              }),
              tH.ph.subscribe((s) => {
                "Fiat" === this.type
                  ? (this.currencies = s.purchaseCurrencies.map(
                      this.formatPurchaseCurrency
                    ))
                  : (this.currencies = s.paymentCurrencies.map(
                      this.formatPaymentCurrency
                    ));
              }),
              tH.WM.subscribe((s) => {
                (this.currencyImages = { ...s.currencyImages }),
                  (this.tokenImages = { ...s.tokenImages });
              })
            );
        }
        firstUpdated() {
          tH.ph.getAvailableCurrencies();
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.selectedCurrency?.symbol || "",
            x = this.currencyImages[s] || this.tokenImages[s];
          return rp.dy`<wui-input-text type="number" size="lg" value=${
            this.value
          }>
      ${
        this.selectedCurrency
          ? rp.dy` <wui-flex
            class="currency-container"
            justifyContent="space-between"
            alignItems="center"
            gap="xxs"
            @click=${() => tH.IN.open({ view: `OnRamp${this.type}Select` })}
          >
            <wui-image src=${(0, rg.o)(x)}></wui-image>
            <wui-text color="fg-100">${this.selectedCurrency.symbol}</wui-text>
          </wui-flex>`
          : rp.dy`<wui-loading-spinner></wui-loading-spinner>`
      }
    </wui-input-text>`;
        }
        formatPaymentCurrency(s) {
          return { name: s.id, symbol: s.id };
        }
        formatPurchaseCurrency(s) {
          return { name: s.name, symbol: s.symbol };
        }
      };
      (nS.styles = nA),
        w3m_onramp_input_decorate(
          [(0, rf.Cb)({ type: String })],
          nS.prototype,
          "type",
          void 0
        ),
        w3m_onramp_input_decorate(
          [(0, rf.Cb)({ type: Number })],
          nS.prototype,
          "value",
          void 0
        ),
        w3m_onramp_input_decorate(
          [(0, rf.SB)()],
          nS.prototype,
          "currencies",
          void 0
        ),
        w3m_onramp_input_decorate(
          [(0, rf.SB)()],
          nS.prototype,
          "selectedCurrency",
          void 0
        ),
        w3m_onramp_input_decorate(
          [(0, rf.SB)()],
          nS.prototype,
          "currencyImages",
          void 0
        ),
        w3m_onramp_input_decorate(
          [(0, rf.SB)()],
          nS.prototype,
          "tokenImages",
          void 0
        ),
        (nS = w3m_onramp_input_decorate(
          [(0, tY.customElement)("w3m-onramp-input")],
          nS
        ));
      var nk = rp.iv`
  button {
    padding: var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-xs);
    border: none;
    outline: none;
    background-color: var(--wui-color-gray-glass-002);
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: var(--wui-spacing-s);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color;
  }

  button:hover {
    background-color: var(--wui-color-gray-glass-005);
  }

  .provider-image {
    width: var(--wui-spacing-3xl);
    min-width: var(--wui-spacing-3xl);
    height: var(--wui-spacing-3xl);
    border-radius: calc(var(--wui-border-radius-xs) - calc(var(--wui-spacing-s) / 2));
    position: relative;
    overflow: hidden;
  }

  .provider-image::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0;
    border-radius: calc(var(--wui-border-radius-xs) - calc(var(--wui-spacing-s) / 2));
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  .network-icon {
    width: var(--wui-spacing-m);
    height: var(--wui-spacing-m);
    border-radius: calc(var(--wui-spacing-m) / 2);
    overflow: hidden;
    box-shadow:
      0 0 0 3px var(--wui-color-gray-glass-002),
      0 0 0 3px var(--wui-color-modal-bg);
    transition: box-shadow var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: box-shadow;
  }

  button:hover .network-icon {
    box-shadow:
      0 0 0 3px var(--wui-color-gray-glass-005),
      0 0 0 3px var(--wui-color-modal-bg);
  }
`,
        w3m_onramp_provider_item_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nT = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.disabled = !1),
            (this.color = "inherit"),
            (this.label = ""),
            (this.feeRange = ""),
            (this.loading = !1),
            (this.onClick = null);
        }
        render() {
          return rp.dy`
      <button ?disabled=${this.disabled} ontouchstart>
        <wui-visual name=${(0, rg.o)(
          this.name
        )} class="provider-image"></wui-visual>
        <wui-flex flexDirection="column" gap="4xs">
          <wui-text variant="paragraph-500" color="fg-100">${
            this.label
          }</wui-text>
          <wui-flex alignItems="center" justifyContent="flex-start" gap="l">
            <wui-text variant="tiny-500" color="fg-100">
              <wui-text variant="tiny-400" color="fg-200">Fees</wui-text>
              ${this.feeRange}
            </wui-text>
            <wui-flex gap="xxs">
              <wui-icon name="bank" size="xs" color="fg-150"></wui-icon>
              <wui-icon name="card" size="xs" color="fg-150"></wui-icon>
            </wui-flex>
            ${this.networksTemplate()}
          </wui-flex>
        </wui-flex>
        ${
          this.loading
            ? rp.dy`<wui-loading-spinner color="fg-200" size="md"></wui-loading-spinner>`
            : rp.dy`<wui-icon name="chevronRight" color="fg-200" size="sm"></wui-icon>`
        }
      </button>
    `;
        }
        networksTemplate() {
          let s = tH.RY.getAllRequestedCaipNetworks(),
            x = s?.filter((s) => s?.assets?.imageId)?.slice(0, 5);
          return rp.dy`
      <wui-flex class="networks">
        ${x?.map(
          (s) => rp.dy`
            <wui-flex class="network-icon">
              <wui-image src=${rg.o(tH.fz.getNetworkImage(s))}></wui-image>
            </wui-flex>
          `
        )}
      </wui-flex>
    `;
        }
      };
      (nT.styles = [nk]),
        w3m_onramp_provider_item_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          nT.prototype,
          "disabled",
          void 0
        ),
        w3m_onramp_provider_item_decorate(
          [(0, rf.Cb)()],
          nT.prototype,
          "color",
          void 0
        ),
        w3m_onramp_provider_item_decorate(
          [(0, rf.Cb)()],
          nT.prototype,
          "name",
          void 0
        ),
        w3m_onramp_provider_item_decorate(
          [(0, rf.Cb)()],
          nT.prototype,
          "label",
          void 0
        ),
        w3m_onramp_provider_item_decorate(
          [(0, rf.Cb)()],
          nT.prototype,
          "feeRange",
          void 0
        ),
        w3m_onramp_provider_item_decorate(
          [(0, rf.Cb)({ type: Boolean })],
          nT.prototype,
          "loading",
          void 0
        ),
        w3m_onramp_provider_item_decorate(
          [(0, rf.Cb)()],
          nT.prototype,
          "onClick",
          void 0
        ),
        (nT = w3m_onramp_provider_item_decorate(
          [(0, tY.customElement)("w3m-onramp-provider-item")],
          nT
        ));
      var nI = rp.iv`
  wui-flex {
    background-color: var(--wui-color-gray-glass-005);
  }

  a {
    text-decoration: none;
    color: var(--wui-color-fg-175);
    font-weight: 500;
  }
`;
      let nP = class extends rp.oi {
        render() {
          let { termsConditionsUrl: s, privacyPolicyUrl: x } =
              tH.OptionsController.state,
            W = tH.OptionsController.state.features?.legalCheckbox;
          return (s || x) && !W
            ? rp.dy`
      <wui-flex .padding=${["m", "s", "s", "s"]} justifyContent="center">
        <wui-text color="fg-250" variant="small-400" align="center">
          By connecting your wallet, you agree to our <br />
          ${this.termsTemplate()} ${this.andTemplate()} ${this.privacyTemplate()}
        </wui-text>
      </wui-flex>
    `
            : null;
        }
        andTemplate() {
          let { termsConditionsUrl: s, privacyPolicyUrl: x } =
            tH.OptionsController.state;
          return s && x ? "and" : "";
        }
        termsTemplate() {
          let { termsConditionsUrl: s } = tH.OptionsController.state;
          return s ? rp.dy`<a href=${s}>Terms of Service</a>` : null;
        }
        privacyTemplate() {
          let { privacyPolicyUrl: s } = tH.OptionsController.state;
          return s ? rp.dy`<a href=${s}>Privacy Policy</a>` : null;
        }
      };
      (nP.styles = [nI]),
        (nP = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([(0, tY.customElement)("w3m-legal-footer")], nP));
      var nR = rp.iv`
  :host {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  wui-checkbox {
    padding: var(--wui-spacing-s);
  }
  a {
    text-decoration: none;
    color: var(--wui-color-fg-150);
    font-weight: 500;
  }
`;
      let nN = class extends rp.oi {
        render() {
          let { termsConditionsUrl: s, privacyPolicyUrl: x } =
              tH.OptionsController.state,
            W = tH.OptionsController.state.features?.legalCheckbox;
          return (s || x) && W
            ? rp.dy`
      <wui-checkbox data-testid="wui-checkbox">
        <wui-text color="fg-250" variant="small-400" align="left">
          I agree to our ${this.termsTemplate()} ${this.andTemplate()} ${this.privacyTemplate()}
        </wui-text>
      </wui-checkbox>
    `
            : null;
        }
        andTemplate() {
          let { termsConditionsUrl: s, privacyPolicyUrl: x } =
            tH.OptionsController.state;
          return s && x ? "and" : "";
        }
        termsTemplate() {
          let { termsConditionsUrl: s } = tH.OptionsController.state;
          return s
            ? rp.dy`<a rel="noreferrer" target="_blank" href=${s}>terms of service</a>`
            : null;
        }
        privacyTemplate() {
          let { privacyPolicyUrl: s } = tH.OptionsController.state;
          return s
            ? rp.dy`<a rel="noreferrer" target="_blank" href=${s}>privacy policy</a>`
            : null;
        }
      };
      (nN.styles = [nR]),
        (nN = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([(0, tY.customElement)("w3m-legal-checkbox")], nN));
      var nO = rp.iv`
  :host {
    display: block;
    padding: 0 var(--wui-spacing-xl) var(--wui-spacing-xl);
  }
`,
        w3m_mobile_download_links_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nM = class extends rp.oi {
        constructor() {
          super(...arguments), (this.wallet = void 0);
        }
        render() {
          if (!this.wallet) return (this.style.display = "none"), null;
          let {
              name: s,
              app_store: x,
              play_store: W,
              chrome_store: X,
              homepage: ee,
            } = this.wallet,
            et = tH.j1.isMobile(),
            er = tH.j1.isIos(),
            ei = tH.j1.isAndroid(),
            eo = [x, W, ee, X].filter(Boolean).length > 1,
            ea = tY.UiHelperUtil.getTruncateString({
              string: s,
              charsStart: 12,
              charsEnd: 0,
              truncate: "end",
            });
          return eo && !et
            ? rp.dy`
        <wui-cta-button
          label=${`Don't have ${ea}?`}
          buttonLabel="Get"
          @click=${() =>
            tH.RouterController.push("Downloads", { wallet: this.wallet })}
        ></wui-cta-button>
      `
            : !eo && ee
            ? rp.dy`
        <wui-cta-button
          label=${`Don't have ${ea}?`}
          buttonLabel="Get"
          @click=${this.onHomePage.bind(this)}
        ></wui-cta-button>
      `
            : x && er
            ? rp.dy`
        <wui-cta-button
          label=${`Don't have ${ea}?`}
          buttonLabel="Get"
          @click=${this.onAppStore.bind(this)}
        ></wui-cta-button>
      `
            : W && ei
            ? rp.dy`
        <wui-cta-button
          label=${`Don't have ${ea}?`}
          buttonLabel="Get"
          @click=${this.onPlayStore.bind(this)}
        ></wui-cta-button>
      `
            : ((this.style.display = "none"), null);
        }
        onAppStore() {
          this.wallet?.app_store &&
            tH.j1.openHref(this.wallet.app_store, "_blank");
        }
        onPlayStore() {
          this.wallet?.play_store &&
            tH.j1.openHref(this.wallet.play_store, "_blank");
        }
        onHomePage() {
          this.wallet?.homepage &&
            tH.j1.openHref(this.wallet.homepage, "_blank");
        }
      };
      (nM.styles = [nO]),
        w3m_mobile_download_links_decorate(
          [(0, rf.Cb)({ type: Object })],
          nM.prototype,
          "wallet",
          void 0
        ),
        (nM = w3m_mobile_download_links_decorate(
          [(0, tY.customElement)("w3m-mobile-download-links")],
          nM
        ));
      var nD = rp.iv`
  wui-flex {
    border-top: 1px solid var(--wui-color-gray-glass-005);
  }

  a {
    text-decoration: none;
    color: var(--wui-color-fg-175);
    font-weight: 500;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--wui-spacing-3xs);
  }
`;
      let nB = class extends rp.oi {
        render() {
          let { termsConditionsUrl: s, privacyPolicyUrl: x } =
            tH.OptionsController.state;
          return s || x
            ? rp.dy`
      <wui-flex
        .padding=${["m", "s", "s", "s"]}
        flexDirection="column"
        alignItems="center"
        justifyContent="center"
        gap="s"
      >
        <wui-text color="fg-250" variant="small-400" align="center">
          We work with the best providers to give you the lowest fees and best support. More options
          coming soon!
        </wui-text>

        ${this.howDoesItWorkTemplate()}
      </wui-flex>
    `
            : null;
        }
        howDoesItWorkTemplate() {
          return rp.dy` <wui-link @click=${this.onWhatIsBuy.bind(this)}>
      <wui-icon size="xs" color="accent-100" slot="iconLeft" name="helpCircle"></wui-icon>
      How does it work?
    </wui-link>`;
        }
        onWhatIsBuy() {
          tH.Xs.sendEvent({
            type: "track",
            event: "SELECT_WHAT_IS_A_BUY",
            properties: {
              isSmartAccount:
                tH.AccountController.state.preferredAccountType ===
                t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
            },
          }),
            tH.RouterController.push("WhatIsABuy");
        }
      };
      (nB.styles = [nD]),
        (nB = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([(0, tY.customElement)("w3m-onramp-providers-footer")], nB));
      var nL = rp.iv`
  :host {
    display: block;
    position: absolute;
    opacity: 0;
    pointer-events: none;
    top: 11px;
    left: 50%;
    width: max-content;
  }
`,
        w3m_snackbar_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nj = {
          loading: void 0,
          success: {
            backgroundColor: "success-100",
            iconColor: "success-100",
            icon: "checkmark",
          },
          error: {
            backgroundColor: "error-100",
            iconColor: "error-100",
            icon: "close",
          },
        },
        nU = class extends rp.oi {
          constructor() {
            super(),
              (this.unsubscribe = []),
              (this.timeout = void 0),
              (this.open = tH.SnackController.state.open),
              this.unsubscribe.push(
                tH.SnackController.subscribeKey("open", (s) => {
                  (this.open = s), this.onOpen();
                })
              );
          }
          disconnectedCallback() {
            clearTimeout(this.timeout), this.unsubscribe.forEach((s) => s());
          }
          render() {
            let { message: s, variant: x, svg: W } = tH.SnackController.state,
              X = nj[x],
              { icon: ee, iconColor: et } = W ?? X ?? {};
            return rp.dy`
      <wui-snackbar
        message=${s}
        backgroundColor=${X?.backgroundColor}
        iconColor=${et}
        icon=${ee}
        .loading=${"loading" === x}
      ></wui-snackbar>
    `;
          }
          onOpen() {
            clearTimeout(this.timeout),
              this.open
                ? (this.animate(
                    [
                      { opacity: 0, transform: "translateX(-50%) scale(0.85)" },
                      { opacity: 1, transform: "translateX(-50%) scale(1)" },
                    ],
                    { duration: 150, fill: "forwards", easing: "ease" }
                  ),
                  this.timeout && clearTimeout(this.timeout),
                  tH.SnackController.state.autoClose &&
                    (this.timeout = setTimeout(
                      () => tH.SnackController.hide(),
                      2500
                    )))
                : this.animate(
                    [
                      { opacity: 1, transform: "translateX(-50%) scale(1)" },
                      { opacity: 0, transform: "translateX(-50%) scale(0.85)" },
                    ],
                    { duration: 150, fill: "forwards", easing: "ease" }
                  );
          }
        };
      (nU.styles = nL),
        w3m_snackbar_decorate([(0, rf.SB)()], nU.prototype, "open", void 0),
        (nU = w3m_snackbar_decorate(
          [(0, tY.customElement)("w3m-snackbar")],
          nU
        ));
      var n$ = rp.iv`
  :host {
    display: block;
    position: absolute;
    top: var(--wui-spacing-s);
    left: var(--wui-spacing-l);
    right: var(--wui-spacing-l);
    opacity: 0;
    pointer-events: none;
  }
`,
        w3m_alertbar_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nF = {
          info: {
            backgroundColor: "fg-350",
            iconColor: "fg-325",
            icon: "info",
          },
          success: {
            backgroundColor: "success-glass-reown-020",
            iconColor: "success-125",
            icon: "checkmark",
          },
          warning: {
            backgroundColor: "warning-glass-reown-020",
            iconColor: "warning-100",
            icon: "warningCircle",
          },
          error: {
            backgroundColor: "error-glass-reown-020",
            iconColor: "error-125",
            icon: "exclamationTriangle",
          },
        },
        nz = class extends rp.oi {
          constructor() {
            super(),
              (this.unsubscribe = []),
              (this.open = tH.AlertController.state.open),
              this.onOpen(!0),
              this.unsubscribe.push(
                tH.AlertController.subscribeKey("open", (s) => {
                  (this.open = s), this.onOpen(!1);
                })
              );
          }
          disconnectedCallback() {
            this.unsubscribe.forEach((s) => s());
          }
          render() {
            let { message: s, variant: x } = tH.AlertController.state,
              W = nF[x];
            return rp.dy`
      <wui-alertbar
        message=${s}
        backgroundColor=${W?.backgroundColor}
        iconColor=${W?.iconColor}
        icon=${W?.icon}
      ></wui-alertbar>
    `;
          }
          onOpen(s) {
            this.open
              ? (this.animate(
                  [
                    { opacity: 0, transform: "scale(0.85)" },
                    { opacity: 1, transform: "scale(1)" },
                  ],
                  { duration: 150, fill: "forwards", easing: "ease" }
                ),
                (this.style.cssText = "pointer-events: auto"))
              : s ||
                (this.animate(
                  [
                    { opacity: 1, transform: "scale(1)" },
                    { opacity: 0, transform: "scale(0.85)" },
                  ],
                  { duration: 150, fill: "forwards", easing: "ease" }
                ),
                (this.style.cssText = "pointer-events: none"));
          }
        };
      (nz.styles = n$),
        w3m_alertbar_decorate([(0, rf.SB)()], nz.prototype, "open", void 0),
        (nz = w3m_alertbar_decorate(
          [(0, tY.customElement)("w3m-alertbar")],
          nz
        ));
      var nH = rp.iv`
  wui-separator {
    margin: var(--wui-spacing-s) calc(var(--wui-spacing-s) * -1);
    width: calc(100% + var(--wui-spacing-s) * 2);
  }

  wui-email-input {
    width: 100%;
  }

  form {
    width: 100%;
    display: block;
    position: relative;
  }

  wui-icon-link,
  wui-loading-spinner {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }

  wui-icon-link {
    right: var(--wui-spacing-xs);
  }

  wui-loading-spinner {
    right: var(--wui-spacing-m);
  }

  wui-text {
    margin: var(--wui-spacing-xxs) var(--wui-spacing-m) var(--wui-spacing-0) var(--wui-spacing-m);
  }
`,
        w3m_email_login_widget_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nq = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.unsubscribe = []),
            (this.formRef = (0, rQ.V)()),
            (this.email = ""),
            (this.loading = !1),
            (this.error = "");
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        firstUpdated() {
          this.formRef.value?.addEventListener("keydown", (s) => {
            "Enter" === s.key && this.onSubmitEmail(s);
          });
        }
        render() {
          return rp.dy`
      <form ${(0, rQ.i)(this.formRef)} @submit=${this.onSubmitEmail.bind(this)}>
        <wui-email-input
          @focus=${this.onFocusEvent.bind(this)}
          .disabled=${this.loading}
          @inputChange=${this.onEmailInputChange.bind(this)}
          tabIdx=${(0, rg.o)(this.tabIdx)}
        >
        </wui-email-input>

        ${this.submitButtonTemplate()}${this.loadingTemplate()}
        <input type="submit" hidden />
      </form>
      ${this.templateError()}
    `;
        }
        submitButtonTemplate() {
          let s = !this.loading && this.email.length > 3;
          return s
            ? rp.dy`
          <wui-icon-link
            size="sm"
            icon="chevronRight"
            iconcolor="accent-100"
            @click=${this.onSubmitEmail.bind(this)}
          >
          </wui-icon-link>
        `
            : null;
        }
        loadingTemplate() {
          return this.loading
            ? rp.dy`<wui-loading-spinner size="md" color="accent-100"></wui-loading-spinner>`
            : null;
        }
        templateError() {
          return this.error
            ? rp.dy`<wui-text variant="tiny-500" color="error-100">${this.error}</wui-text>`
            : null;
        }
        onEmailInputChange(s) {
          (this.email = s.detail.trim()), (this.error = "");
        }
        async onSubmitEmail(s) {
          let x = tV.bq.AUTH_CONNECTOR_SUPPORTED_CHAINS.find(
            (s) => s === tH.RY.state.activeChain
          );
          if (!x) {
            let s = tH.RY.getFirstCaipNetworkSupportsAuthConnector();
            if (s) {
              tH.RouterController.push("SwitchNetwork", { network: s });
              return;
            }
          }
          try {
            if (this.loading) return;
            (this.loading = !0), s.preventDefault();
            let x = tH.ConnectorController.getAuthConnector();
            if (!x)
              throw Error("w3m-email-login-widget: Auth connector not found");
            let { action: W } = await x.provider.connectEmail({
              email: this.email,
            });
            tH.Xs.sendEvent({ type: "track", event: "EMAIL_SUBMITTED" }),
              "VERIFY_OTP" === W
                ? (tH.Xs.sendEvent({
                    type: "track",
                    event: "EMAIL_VERIFICATION_CODE_SENT",
                  }),
                  tH.RouterController.push("EmailVerifyOtp", {
                    email: this.email,
                  }))
                : "VERIFY_DEVICE" === W
                ? tH.RouterController.push("EmailVerifyDevice", {
                    email: this.email,
                  })
                : "CONNECT" === W &&
                  (await tH.ConnectionController.connectExternal(
                    x,
                    tH.RY.state.activeChain
                  ),
                  tH.RouterController.replace("Account"));
          } catch (x) {
            let s = tH.j1.parseError(x);
            s?.includes("Invalid email")
              ? (this.error = "Invalid email. Try again.")
              : tH.SnackController.showError(x);
          } finally {
            this.loading = !1;
          }
        }
        onFocusEvent() {
          tH.Xs.sendEvent({ type: "track", event: "EMAIL_LOGIN_SELECTED" });
        }
      };
      (nq.styles = nH),
        w3m_email_login_widget_decorate(
          [(0, rf.Cb)()],
          nq.prototype,
          "tabIdx",
          void 0
        ),
        w3m_email_login_widget_decorate(
          [(0, rf.SB)()],
          nq.prototype,
          "email",
          void 0
        ),
        w3m_email_login_widget_decorate(
          [(0, rf.SB)()],
          nq.prototype,
          "loading",
          void 0
        ),
        w3m_email_login_widget_decorate(
          [(0, rf.SB)()],
          nq.prototype,
          "error",
          void 0
        ),
        (nq = w3m_email_login_widget_decorate(
          [(0, tY.customElement)("w3m-email-login-widget")],
          nq
        ));
      var nV = rp.iv`
  wui-flex {
    width: 100%;
  }

  :host > wui-flex:first-child {
    transform: translateY(calc(var(--wui-spacing-xxs) * -1));
  }

  wui-icon-link {
    margin-right: calc(var(--wui-icon-box-size-md) * -1);
  }

  wui-notice-card {
    margin-bottom: var(--wui-spacing-3xs);
  }

  wui-list-item > wui-text {
    flex: 1;
  }

  w3m-transactions-view {
    max-height: 200px;
  }

  .tab-content-container {
    height: 300px;
    overflow-y: auto;
    overflow-x: hidden;
    scrollbar-width: none;
  }

  .tab-content-container::-webkit-scrollbar {
    display: none;
  }

  .account-button {
    width: auto;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--wui-spacing-s);
    height: 48px;
    padding: var(--wui-spacing-xs);
    padding-right: var(--wui-spacing-s);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: 24px;
    transition: background-color 0.2s linear;
  }

  .account-button:hover {
    background-color: var(--wui-color-gray-glass-005);
  }

  .avatar-container {
    position: relative;
  }

  wui-avatar.avatar {
    width: 32px;
    height: 32px;
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
  }

  wui-avatar.network-avatar {
    width: 16px;
    height: 16px;
    position: absolute;
    left: 100%;
    top: 100%;
    transform: translate(-75%, -75%);
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
  }

  .account-links {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .account-links wui-flex {
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
    background: red;
    align-items: center;
    justify-content: center;
    height: 48px;
    padding: 10px;
    flex: 1 0 0;
    border-radius: var(--XS, 16px);
    border: 1px solid var(--dark-accent-glass-010, rgba(71, 161, 255, 0.1));
    background: var(--dark-accent-glass-010, rgba(71, 161, 255, 0.1));
    transition:
      background-color var(--wui-ease-out-power-1) var(--wui-duration-md),
      opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color, opacity;
  }

  .account-links wui-flex:hover {
    background: var(--dark-accent-glass-015, rgba(71, 161, 255, 0.15));
  }

  .account-links wui-flex wui-icon {
    width: var(--S, 20px);
    height: var(--S, 20px);
  }

  .account-links wui-flex wui-icon svg path {
    stroke: #667dff;
  }
`,
        w3m_account_default_widget_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nW = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.caipAddress = tH.AccountController.state.caipAddress),
            (this.address = tH.j1.getPlainAddress(
              tH.AccountController.state.caipAddress
            )),
            (this.allAccounts = tH.AccountController.state.allAccounts),
            (this.profileImage = tH.AccountController.state.profileImage),
            (this.profileName = tH.AccountController.state.profileName),
            (this.disconnecting = !1),
            (this.balance = tH.AccountController.state.balance),
            (this.balanceSymbol = tH.AccountController.state.balanceSymbol),
            (this.features = tH.OptionsController.state.features),
            (this.namespace = tH.RY.state.activeChain),
            (this.chainId = tH.RY.state.activeCaipNetwork?.id),
            this.unsubscribe.push(
              ...[
                tH.AccountController.subscribeKey("caipAddress", (s) => {
                  (this.address = tH.j1.getPlainAddress(s)),
                    (this.caipAddress = s);
                }),
                tH.AccountController.subscribeKey(
                  "balance",
                  (s) => (this.balance = s)
                ),
                tH.AccountController.subscribeKey(
                  "balanceSymbol",
                  (s) => (this.balanceSymbol = s)
                ),
                tH.AccountController.subscribeKey(
                  "profileName",
                  (s) => (this.profileName = s)
                ),
                tH.AccountController.subscribeKey(
                  "profileImage",
                  (s) => (this.profileImage = s)
                ),
                tH.OptionsController.subscribeKey(
                  "features",
                  (s) => (this.features = s)
                ),
                tH.AccountController.subscribeKey("allAccounts", (s) => {
                  this.allAccounts = s;
                }),
                tH.RY.subscribeKey("activeChain", (s) => (this.namespace = s)),
                tH.RY.subscribeKey("activeCaipNetwork", (s) => {
                  if (s) {
                    let [x, W] = s?.caipNetworkId?.split(":") || [];
                    x && W && ((this.namespace = x), (this.chainId = W));
                  }
                }),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          if (!this.caipAddress) return null;
          let s =
            tH.RY.state.activeChain !== tV.bq.CHAIN.SOLANA &&
            this.allAccounts.length > 1;
          return rp.dy`<wui-flex
        flexDirection="column"
        .padding=${["0", "xl", "m", "xl"]}
        alignItems="center"
        gap="l"
      >
        ${s ? this.multiAccountTemplate() : this.singleAccountTemplate()}
        <wui-flex flexDirection="column" alignItems="center">
          <wui-text variant="paragraph-500" color="fg-200">
            ${tH.j1.formatBalance(this.balance, this.balanceSymbol)}
          </wui-text>
        </wui-flex>
        ${this.explorerBtnTemplate()}
      </wui-flex>

      <wui-flex flexDirection="column" gap="xs" .padding=${[
        "0",
        "s",
        "s",
        "s",
      ]}>
        ${this.authCardTemplate()} <w3m-account-auth-button></w3m-account-auth-button>
        ${this.orderedFeaturesTemplate()} ${this.activityTemplate()}
        <wui-list-item
          variant="icon"
          iconVariant="overlay"
          icon="disconnect"
          ?chevron=${!1}
          .loading=${this.disconnecting}
          @click=${this.onDisconnect.bind(this)}
          data-testid="disconnect-button"
        >
          <wui-text variant="paragraph-500" color="fg-200">Disconnect</wui-text>
        </wui-list-item>
      </wui-flex>`;
        }
        onrampTemplate() {
          if (!this.namespace) return null;
          let s = this.features?.onramp,
            x = tH.bq.ONRAMP_SUPPORTED_CHAIN_NAMESPACES.includes(
              this.namespace
            );
          return s && x
            ? rp.dy`
      <wui-list-item
        data-testid="w3m-account-default-onramp-button"
        iconVariant="blue"
        icon="card"
        ?chevron=${!0}
        @click=${this.handleClickPay.bind(this)}
      >
        <wui-text variant="paragraph-500" color="fg-100">Buy crypto</wui-text>
      </wui-list-item>
    `
            : null;
        }
        orderedFeaturesTemplate() {
          let s =
            this.features?.walletFeaturesOrder ||
            tH.bq.DEFAULT_FEATURES.walletFeaturesOrder;
          return s.map((s) => {
            switch (s) {
              case "onramp":
                return this.onrampTemplate();
              case "swaps":
                return this.swapsTemplate();
              case "send":
                return this.sendTemplate();
              default:
                return null;
            }
          });
        }
        activityTemplate() {
          if (!this.namespace) return null;
          let s = tH.RY.state.activeChain === tV.bq.CHAIN.SOLANA,
            x =
              this.features?.history &&
              tH.bq.ACTIVITY_ENABLED_CHAIN_NAMESPACES.includes(this.namespace);
          return x
            ? rp.dy` <wui-list-item
          iconVariant="blue"
          icon="clock"
          iconSize="sm"
          ?chevron=${!s}
          ?disabled=${s}
          @click=${this.onTransactions.bind(this)}
        >
          <wui-text variant="paragraph-500" color="fg-100" ?disabled=${s}>
            Activity
          </wui-text>
          ${s ? rp.dy`<wui-tag variant="main">Coming soon</wui-tag>` : ""}
        </wui-list-item>`
            : null;
        }
        swapsTemplate() {
          let s = this.features?.swaps,
            x = tH.RY.state.activeChain === tV.bq.CHAIN.EVM;
          return s && x
            ? rp.dy`
      <wui-list-item
        iconVariant="blue"
        icon="recycleHorizontal"
        ?chevron=${!0}
        @click=${this.handleClickSwap.bind(this)}
      >
        <wui-text variant="paragraph-500" color="fg-100">Swap</wui-text>
      </wui-list-item>
    `
            : null;
        }
        sendTemplate() {
          let s = this.features?.send,
            x = tH.RY.state.activeChain === tV.bq.CHAIN.EVM;
          return s && x
            ? rp.dy`
      <wui-list-item
        iconVariant="blue"
        icon="send"
        ?chevron=${!0}
        @click=${this.handleClickSend.bind(this)}
      >
        <wui-text variant="paragraph-500" color="fg-100">Send</wui-text>
      </wui-list-item>
    `
            : null;
        }
        authCardTemplate() {
          let s = tH.RY.state.activeChain,
            x = tH.MO.getConnectedConnectorId(s),
            W = tH.ConnectorController.getAuthConnector(),
            { origin: X } = location;
          return !W ||
            x !== tV.bq.CONNECTOR_ID.AUTH ||
            X.includes(tH.bq.SECURE_SITE)
            ? null
            : rp.dy`
      <wui-notice-card
        @click=${this.onGoToUpgradeView.bind(this)}
        label="Upgrade your wallet"
        description="Transition to a self-custodial wallet"
        icon="wallet"
        data-testid="w3m-wallet-upgrade-card"
      ></wui-notice-card>
    `;
        }
        handleSwitchAccountsView() {
          tH.RouterController.push("SwitchAddress");
        }
        handleClickPay() {
          tH.RouterController.push("OnRampProviders");
        }
        handleClickSwap() {
          tH.RouterController.push("Swap");
        }
        handleClickSend() {
          tH.RouterController.push("WalletSend");
        }
        explorerBtnTemplate() {
          let s = tH.AccountController.state.addressExplorerUrl;
          return s
            ? rp.dy`
      <wui-button size="md" variant="neutral" @click=${this.onExplorer.bind(
        this
      )}>
        <wui-icon size="sm" color="inherit" slot="iconLeft" name="compass"></wui-icon>
        Block Explorer
        <wui-icon size="sm" color="inherit" slot="iconRight" name="externalLink"></wui-icon>
      </wui-button>
    `
            : null;
        }
        singleAccountTemplate() {
          return rp.dy`
      <wui-avatar
        alt=${(0, rg.o)(this.caipAddress)}
        address=${(0, rg.o)(tH.j1.getPlainAddress(this.caipAddress))}
        imageSrc=${(0, rg.o)(
          null === this.profileImage ? void 0 : this.profileImage
        )}
        data-testid="single-account-avatar"
      ></wui-avatar>
      <wui-flex flexDirection="column" alignItems="center">
        <wui-flex gap="3xs" alignItems="center" justifyContent="center">
          <wui-text variant="large-600" color="fg-100">
            ${
              this.profileName
                ? tY.UiHelperUtil.getTruncateString({
                    string: this.profileName,
                    charsStart: 20,
                    charsEnd: 0,
                    truncate: "end",
                  })
                : tY.UiHelperUtil.getTruncateString({
                    string: this.address || "",
                    charsStart: 4,
                    charsEnd: 4,
                    truncate: "middle",
                  })
            }
          </wui-text>
          <wui-icon-link
            size="md"
            icon="copy"
            iconColor="fg-200"
            @click=${this.onCopyAddress}
          ></wui-icon-link> </wui-flex
      ></wui-flex>
    `;
        }
        multiAccountTemplate() {
          if (!this.address)
            throw Error("w3m-account-view: No account provided");
          let s = this.allAccounts.find((s) => s.address === this.address),
            x = tH.AccountController.state.addressLabels.get(this.address);
          return "bip122" === this.namespace
            ? this.btcAccountsTemplate()
            : rp.dy`
      <wui-profile-button-v2
        .onProfileClick=${this.handleSwitchAccountsView.bind(this)}
        address=${(0, rg.o)(this.address)}
        icon="${
          s?.type === t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT &&
          tH.RY.state.activeChain === tV.bq.CHAIN.EVM
            ? "lightbulb"
            : "mail"
        }"
        avatarSrc=${(0, rg.o)(this.profileImage ? this.profileImage : void 0)}
        profileName=${(0, rg.o)(x || this.profileName)}
        .onCopyClick=${this.onCopyAddress.bind(this)}
      ></wui-profile-button-v2>
    `;
        }
        btcAccountsTemplate() {
          return rp.dy`<wui-flex gap="m" alignItems="center" flexDirection="column">
      <wui-avatar
        .imageSrc=${(0, rg.o)(this.profileImage ? this.profileImage : void 0)}
        alt=${this.address}
        address=${this.address}
      ></wui-avatar>
      <wui-tabs
        .tabs=${[{ label: "Payment" }, { label: "Ordinals" }]}
        .onTabChange=${(s) =>
          tH.AccountController.setCaipAddress(
            `bip122:${this.chainId}:${this.allAccounts[s]?.address || ""}`,
            this.namespace
          )}
      ></wui-tabs>
      <wui-flex gap="xs" alignItems="center" justifyContent="center">
        <wui-text variant="large-600" color="fg-100">
          ${tY.UiHelperUtil.getTruncateString({
            string: this.profileName || this.address || "",
            charsStart: this.profileName ? 18 : 4,
            charsEnd: this.profileName ? 0 : 4,
            truncate: this.profileName ? "end" : "middle",
          })}
        </wui-text>
        <wui-icon-link
          size="md"
          icon="copy"
          iconColor="fg-200"
          @click=${this.onCopyAddress}
        ></wui-icon-link>
      </wui-flex>
    </wui-flex>`;
        }
        onCopyAddress() {
          try {
            this.address &&
              (tH.j1.copyToClopboard(this.address),
              tH.SnackController.showSuccess("Address copied"));
          } catch {
            tH.SnackController.showError("Failed to copy");
          }
        }
        onTransactions() {
          tH.Xs.sendEvent({
            type: "track",
            event: "CLICK_TRANSACTIONS",
            properties: {
              isSmartAccount:
                tH.AccountController.state.preferredAccountType ===
                t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
            },
          }),
            tH.RouterController.push("Transactions");
        }
        async onDisconnect() {
          try {
            (this.disconnecting = !0),
              await tH.ConnectionController.disconnect(),
              tH.Xs.sendEvent({ type: "track", event: "DISCONNECT_SUCCESS" }),
              tH.IN.close();
          } catch {
            tH.Xs.sendEvent({ type: "track", event: "DISCONNECT_ERROR" }),
              tH.SnackController.showError("Failed to disconnect");
          } finally {
            this.disconnecting = !1;
          }
        }
        onExplorer() {
          let s = tH.AccountController.state.addressExplorerUrl;
          s && tH.j1.openHref(s, "_blank");
        }
        onGoToUpgradeView() {
          tH.Xs.sendEvent({ type: "track", event: "EMAIL_UPGRADE_FROM_MODAL" }),
            tH.RouterController.push("UpgradeEmailWallet");
        }
      };
      (nW.styles = nV),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "caipAddress",
          void 0
        ),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "address",
          void 0
        ),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "allAccounts",
          void 0
        ),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "profileImage",
          void 0
        ),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "profileName",
          void 0
        ),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "disconnecting",
          void 0
        ),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "balance",
          void 0
        ),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "balanceSymbol",
          void 0
        ),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "features",
          void 0
        ),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "namespace",
          void 0
        ),
        w3m_account_default_widget_decorate(
          [(0, rf.SB)()],
          nW.prototype,
          "chainId",
          void 0
        ),
        (nW = w3m_account_default_widget_decorate(
          [(0, tY.customElement)("w3m-account-default-widget")],
          nW
        ));
      var nK = rp.iv`
  wui-flex {
    width: 100%;
  }

  wui-promo {
    position: absolute;
    top: -32px;
  }

  wui-profile-button {
    margin-top: calc(-1 * var(--wui-spacing-2l));
  }

  wui-promo + wui-profile-button {
    margin-top: var(--wui-spacing-2l);
  }

  wui-tabs {
    width: 100%;
  }

  .contentContainer {
    height: 280px;
  }

  .contentContainer > wui-icon-box {
    width: 40px;
    height: 40px;
    border-radius: var(--wui-border-radius-xxs);
  }

  .contentContainer > .textContent {
    width: 65%;
  }
`,
        w3m_account_wallet_features_widget_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nZ = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.address = tH.AccountController.state.address),
            (this.profileImage = tH.AccountController.state.profileImage),
            (this.profileName = tH.AccountController.state.profileName),
            (this.network = tH.RY.state.activeCaipNetwork),
            (this.currentTab = tH.AccountController.state.currentTab),
            (this.tokenBalance = tH.AccountController.state.tokenBalance),
            (this.features = tH.OptionsController.state.features),
            this.unsubscribe.push(
              ...[
                tH.AccountController.subscribe((s) => {
                  s.address
                    ? ((this.address = s.address),
                      (this.profileImage = s.profileImage),
                      (this.profileName = s.profileName),
                      (this.currentTab = s.currentTab),
                      (this.tokenBalance = s.tokenBalance))
                    : tH.IN.close();
                }),
              ],
              tH.RY.subscribeKey(
                "activeCaipNetwork",
                (s) => (this.network = s)
              ),
              tH.OptionsController.subscribeKey(
                "features",
                (s) => (this.features = s)
              )
            ),
            this.watchSwapValues();
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s()),
            clearInterval(this.watchTokenBalance);
        }
        firstUpdated() {
          tH.AccountController.fetchTokenBalance();
        }
        render() {
          if (!this.address)
            throw Error("w3m-account-view: No account provided");
          let s = tH.fz.getNetworkImage(this.network);
          return rp.dy`<wui-flex
      flexDirection="column"
      .padding=${["0", "xl", "m", "xl"]}
      alignItems="center"
      gap="m"
      data-testid="w3m-account-wallet-features-widget"
    >
      ${
        this.network &&
        rp.dy`<wui-network-icon .network=${this.network}></wui-network-icon>`
      }
      <wui-profile-button
        @click=${this.onProfileButtonClick.bind(this)}
        address=${(0, rg.o)(this.address)}
        networkSrc=${(0, rg.o)(s)}
        icon="chevronBottom"
        avatarSrc=${(0, rg.o)(this.profileImage ? this.profileImage : void 0)}
        profileName=${(0, rg.o)(this.profileName ?? void 0)}
        data-testid="w3m-profile-button"
      ></wui-profile-button>

      ${this.tokenBalanceTemplate()} ${this.orderedWalletFeatures()}

      <wui-tabs
        .onTabChange=${this.onTabChange.bind(this)}
        .activeTab=${this.currentTab}
        localTabWidth=${
          tH.j1.isMobile() && window.innerWidth < 430
            ? `${(window.innerWidth - 48) / 3}px`
            : "104px"
        }
        .tabs=${tK.ACCOUNT_TABS}
      ></wui-tabs>
      ${this.listContentTemplate()}
    </wui-flex>`;
        }
        orderedWalletFeatures() {
          let s =
              this.features?.walletFeaturesOrder ||
              tH.bq.DEFAULT_FEATURES.walletFeaturesOrder,
            x = s.every((s) => !this.features?.[s]);
          return x
            ? null
            : rp.dy`<wui-flex gap="s">
      ${s.map((s) => {
        switch (s) {
          case "onramp":
            return this.onrampTemplate();
          case "swaps":
            return this.swapsTemplate();
          case "receive":
            return this.receiveTemplate();
          case "send":
            return this.sendTemplate();
          default:
            return null;
        }
      })}
    </wui-flex>`;
        }
        onrampTemplate() {
          let s = this.features?.onramp;
          return s
            ? rp.dy`
      <w3m-tooltip-trigger text="Buy">
        <wui-icon-button
          data-testid="wallet-features-onramp-button"
          @click=${this.onBuyClick.bind(this)}
          icon="card"
        ></wui-icon-button>
      </w3m-tooltip-trigger>
    `
            : null;
        }
        swapsTemplate() {
          let s = this.features?.swaps,
            x = tH.RY.state.activeChain === tV.bq.CHAIN.EVM;
          return s && x
            ? rp.dy`
      <w3m-tooltip-trigger text="Swap">
        <wui-icon-button
          data-testid="wallet-features-swaps-button"
          @click=${this.onSwapClick.bind(this)}
          icon="recycleHorizontal"
        >
        </wui-icon-button>
      </w3m-tooltip-trigger>
    `
            : null;
        }
        receiveTemplate() {
          let s = this.features?.receive;
          return s
            ? rp.dy`
      <w3m-tooltip-trigger text="Receive">
        <wui-icon-button
          data-testid="wallet-features-receive-button"
          @click=${this.onReceiveClick.bind(this)}
          icon="arrowBottomCircle"
        >
        </wui-icon-button>
      </w3m-tooltip-trigger>
    `
            : null;
        }
        sendTemplate() {
          let s = this.features?.send,
            x = tH.RY.state.activeChain === tV.bq.CHAIN.EVM;
          return s && x
            ? rp.dy`
      <w3m-tooltip-trigger text="Send">
        <wui-icon-button
          data-testid="wallet-features-send-button"
          @click=${this.onSendClick.bind(this)}
          icon="send"
        ></wui-icon-button>
      </w3m-tooltip-trigger>
    `
            : null;
        }
        watchSwapValues() {
          this.watchTokenBalance = setInterval(
            () =>
              tH.AccountController.fetchTokenBalance((s) =>
                this.onTokenBalanceError(s)
              ),
            1e4
          );
        }
        onTokenBalanceError(s) {
          if (s instanceof Error && s.cause instanceof Response) {
            let x = s.cause.status;
            x === tV.bq.HTTP_STATUS_CODES.SERVICE_UNAVAILABLE &&
              clearInterval(this.watchTokenBalance);
          }
        }
        listContentTemplate() {
          return 0 === this.currentTab
            ? rp.dy`<w3m-account-tokens-widget></w3m-account-tokens-widget>`
            : 1 === this.currentTab
            ? rp.dy`<w3m-account-nfts-widget></w3m-account-nfts-widget>`
            : 2 === this.currentTab
            ? rp.dy`<w3m-account-activity-widget></w3m-account-activity-widget>`
            : rp.dy`<w3m-account-tokens-widget></w3m-account-tokens-widget>`;
        }
        tokenBalanceTemplate() {
          if (this.tokenBalance && this.tokenBalance?.length >= 0) {
            let s = tH.j1.calculateBalance(this.tokenBalance),
              { dollars: x = "0", pennies: W = "00" } =
                tH.j1.formatTokenBalance(s);
            return rp.dy`<wui-balance dollars=${x} pennies=${W}></wui-balance>`;
          }
          return rp.dy`<wui-balance dollars="0" pennies="00"></wui-balance>`;
        }
        onTabChange(s) {
          tH.AccountController.setCurrentTab(s);
        }
        onProfileButtonClick() {
          let { allAccounts: s } = tH.AccountController.state;
          s.length > 1
            ? tH.RouterController.push("Profile")
            : tH.RouterController.push("AccountSettings");
        }
        onBuyClick() {
          tH.RouterController.push("OnRampProviders");
        }
        onSwapClick() {
          this.network?.caipNetworkId &&
          !tH.bq.SWAP_SUPPORTED_NETWORKS.includes(this.network?.caipNetworkId)
            ? tH.RouterController.push("UnsupportedChain", {
                swapUnsupportedChain: !0,
              })
            : (tH.Xs.sendEvent({
                type: "track",
                event: "OPEN_SWAP",
                properties: {
                  network: this.network?.caipNetworkId || "",
                  isSmartAccount:
                    tH.AccountController.state.preferredAccountType ===
                    t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                },
              }),
              tH.RouterController.push("Swap"));
        }
        onReceiveClick() {
          tH.RouterController.push("WalletReceive");
        }
        onSendClick() {
          tH.Xs.sendEvent({
            type: "track",
            event: "OPEN_SEND",
            properties: {
              network: this.network?.caipNetworkId || "",
              isSmartAccount:
                tH.AccountController.state.preferredAccountType ===
                t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
            },
          }),
            tH.RouterController.push("WalletSend");
        }
      };
      (nZ.styles = nK),
        w3m_account_wallet_features_widget_decorate(
          [(0, rf.SB)()],
          nZ.prototype,
          "watchTokenBalance",
          void 0
        ),
        w3m_account_wallet_features_widget_decorate(
          [(0, rf.SB)()],
          nZ.prototype,
          "address",
          void 0
        ),
        w3m_account_wallet_features_widget_decorate(
          [(0, rf.SB)()],
          nZ.prototype,
          "profileImage",
          void 0
        ),
        w3m_account_wallet_features_widget_decorate(
          [(0, rf.SB)()],
          nZ.prototype,
          "profileName",
          void 0
        ),
        w3m_account_wallet_features_widget_decorate(
          [(0, rf.SB)()],
          nZ.prototype,
          "network",
          void 0
        ),
        w3m_account_wallet_features_widget_decorate(
          [(0, rf.SB)()],
          nZ.prototype,
          "currentTab",
          void 0
        ),
        w3m_account_wallet_features_widget_decorate(
          [(0, rf.SB)()],
          nZ.prototype,
          "tokenBalance",
          void 0
        ),
        w3m_account_wallet_features_widget_decorate(
          [(0, rf.SB)()],
          nZ.prototype,
          "features",
          void 0
        ),
        (nZ = w3m_account_wallet_features_widget_decorate(
          [(0, tY.customElement)("w3m-account-wallet-features-widget")],
          nZ
        ));
      var nG = rp.iv`
  :host {
    width: 100%;
    max-height: 280px;
    overflow: scroll;
    scrollbar-width: none;
  }

  :host::-webkit-scrollbar {
    display: none;
  }
`;
      let nY = class extends rp.oi {
        render() {
          return rp.dy`<w3m-activity-list page="account"></w3m-activity-list>`;
        }
      };
      (nY.styles = nG),
        (nY = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([(0, tY.customElement)("w3m-account-activity-widget")], nY));
      var nQ = rp.iv`
  .contentContainer {
    height: 280px;
  }

  .contentContainer > wui-icon-box {
    width: 40px;
    height: 40px;
    border-radius: var(--wui-border-radius-xxs);
  }

  .contentContainer > .textContent {
    width: 65%;
  }
`;
      let nJ = class extends rp.oi {
        render() {
          return rp.dy`${this.nftTemplate()}`;
        }
        nftTemplate() {
          return rp.dy` <wui-flex
      class="contentContainer"
      alignItems="center"
      justifyContent="center"
      flexDirection="column"
      gap="l"
    >
      <wui-icon-box
        icon="wallet"
        size="inherit"
        iconColor="fg-200"
        backgroundColor="fg-200"
        iconSize="lg"
      ></wui-icon-box>
      <wui-flex
        class="textContent"
        gap="xs"
        flexDirection="column"
        justifyContent="center"
        flexDirection="column"
      >
        <wui-text
          variant="paragraph-500"
          align="center"
          color="fg-100"
          data-testid="nft-template-title"
          >Coming soon</wui-text
        >
        <wui-text
          variant="small-400"
          align="center"
          color="fg-200"
          data-testid="nft-template-description"
          >Stay tuned for our upcoming NFT feature</wui-text
        >
      </wui-flex>
      <wui-link @click=${this.onReceiveClick.bind(
        this
      )} data-testid="link-receive-funds"
        >Receive funds</wui-link
      >
    </wui-flex>`;
        }
        onReceiveClick() {
          tH.RouterController.push("WalletReceive");
        }
      };
      (nJ.styles = nQ),
        (nJ = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([(0, tY.customElement)("w3m-account-nfts-widget")], nJ));
      var nX = rp.iv`
  :host {
    width: 100%;
  }

  wui-flex {
    width: 100%;
  }

  .contentContainer {
    max-height: 280px;
    overflow: scroll;
    scrollbar-width: none;
  }

  .contentContainer::-webkit-scrollbar {
    display: none;
  }
`,
        w3m_account_tokens_widget_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let n0 = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tokenBalance = tH.AccountController.state.tokenBalance),
            this.unsubscribe.push(
              ...[
                tH.AccountController.subscribe((s) => {
                  this.tokenBalance = s.tokenBalance;
                }),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          return rp.dy`${this.tokenTemplate()}`;
        }
        tokenTemplate() {
          return this.tokenBalance && this.tokenBalance?.length > 0
            ? rp.dy`<wui-flex class="contentContainer" flexDirection="column" gap="xs">
        ${this.tokenItemTemplate()}
      </wui-flex>`
            : rp.dy` <wui-flex flexDirection="column" gap="xs"
      ><wui-list-description
        @click=${this.onBuyClick.bind(this)}
        text="Buy Crypto"
        description="Easy with card or bank account"
        icon="card"
        iconColor="success-100"
        iconBackgroundColor="success-100"
        tag="popular"
        data-testid="buy-crypto"
      ></wui-list-description
      ><wui-list-description
        @click=${this.onReceiveClick.bind(this)}
        text="Receive funds"
        description="Transfer tokens on your wallet"
        icon="arrowBottomCircle"
        iconColor="fg-200"
        iconBackgroundColor="fg-200"
        data-testid="receive-funds"
      ></wui-list-description
    ></wui-flex>`;
        }
        tokenItemTemplate() {
          return this.tokenBalance?.map(
            (s) => rp.dy`<wui-list-token
          tokenName=${s.name}
          tokenImageUrl=${s.iconUrl}
          tokenAmount=${s.quantity.numeric}
          tokenValue=${s.value}
          tokenCurrency=${s.symbol}
        ></wui-list-token>`
          );
        }
        onReceiveClick() {
          tH.RouterController.push("WalletReceive");
        }
        onBuyClick() {
          tH.Xs.sendEvent({
            type: "track",
            event: "SELECT_BUY_CRYPTO",
            properties: {
              isSmartAccount:
                tH.AccountController.state.preferredAccountType ===
                t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
            },
          }),
            tH.RouterController.push("OnRampProviders");
        }
      };
      (n0.styles = nX),
        w3m_account_tokens_widget_decorate(
          [(0, rf.SB)()],
          n0.prototype,
          "tokenBalance",
          void 0
        ),
        (n0 = w3m_account_tokens_widget_decorate(
          [(0, tY.customElement)("w3m-account-tokens-widget")],
          n0
        ));
      var n1 = rp.iv`
  :host {
    min-height: 100%;
  }

  .group-container[last-group='true'] {
    padding-bottom: var(--wui-spacing-m);
  }

  .contentContainer {
    height: 280px;
  }

  .contentContainer > wui-icon-box {
    width: 40px;
    height: 40px;
    border-radius: var(--wui-border-radius-xxs);
  }

  .contentContainer > .textContent {
    width: 65%;
  }

  .emptyContainer {
    height: 100%;
  }
`,
        w3m_activity_list_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let n2 = "last-transaction",
        n3 = class extends rp.oi {
          constructor() {
            super(),
              (this.unsubscribe = []),
              (this.paginationObserver = void 0),
              (this.page = "activity"),
              (this.caipAddress = tH.RY.state.activeCaipAddress),
              (this.transactionsByYear = tH.sl.state.transactionsByYear),
              (this.loading = tH.sl.state.loading),
              (this.empty = tH.sl.state.empty),
              (this.next = tH.sl.state.next),
              tH.sl.clearCursor(),
              this.unsubscribe.push(
                ...[
                  tH.RY.subscribeKey("activeCaipAddress", (s) => {
                    s &&
                      this.caipAddress !== s &&
                      (tH.sl.resetTransactions(), tH.sl.fetchTransactions(s)),
                      (this.caipAddress = s);
                  }),
                  tH.RY.subscribeKey("activeCaipNetwork", () => {
                    this.updateTransactionView();
                  }),
                  tH.sl.subscribe((s) => {
                    (this.transactionsByYear = s.transactionsByYear),
                      (this.loading = s.loading),
                      (this.empty = s.empty),
                      (this.next = s.next);
                  }),
                ]
              );
          }
          firstUpdated() {
            this.updateTransactionView(), this.createPaginationObserver();
          }
          updated() {
            this.setPaginationObserver();
          }
          disconnectedCallback() {
            this.unsubscribe.forEach((s) => s());
          }
          render() {
            return rp.dy` ${
              this.empty ? null : this.templateTransactionsByYear()
            }
    ${this.loading ? this.templateLoading() : null}
    ${!this.loading && this.empty ? this.templateEmpty() : null}`;
          }
          updateTransactionView() {
            let s = tH.RY.state.activeCaipNetwork?.caipNetworkId,
              x = tH.sl.state.lastNetworkInView;
            x !== s &&
              (tH.sl.resetTransactions(),
              this.caipAddress &&
                tH.sl.fetchTransactions(
                  tH.j1.getPlainAddress(this.caipAddress)
                )),
              tH.sl.setLastNetworkInView(s);
          }
          templateTransactionsByYear() {
            let s = Object.keys(this.transactionsByYear).sort().reverse();
            return s.map((s) => {
              let x = parseInt(s, 10),
                W = Array(12)
                  .fill(null)
                  .map((s, W) => {
                    let X = tY.TransactionUtil.getTransactionGroupTitle(x, W),
                      ee = this.transactionsByYear[x]?.[W];
                    return { groupTitle: X, transactions: ee };
                  })
                  .filter(({ transactions: s }) => s)
                  .reverse();
              return W.map(({ groupTitle: s, transactions: x }, X) => {
                let ee = X === W.length - 1;
                return x
                  ? rp.dy`
          <wui-flex
            flexDirection="column"
            class="group-container"
            last-group="${ee ? "true" : "false"}"
            data-testid="month-indexes"
          >
            <wui-flex
              alignItems="center"
              flexDirection="row"
              .padding=${["xs", "s", "s", "s"]}
            >
              <wui-text variant="paragraph-500" color="fg-200" data-testid="group-title"
                >${s}</wui-text
              >
            </wui-flex>
            <wui-flex flexDirection="column" gap="xs">
              ${this.templateTransactions(x, ee)}
            </wui-flex>
          </wui-flex>
        `
                  : null;
              });
            });
          }
          templateRenderTransaction(s, x) {
            let {
                date: W,
                descriptions: X,
                direction: ee,
                isAllNFT: et,
                images: er,
                status: ei,
                transfers: eo,
                type: ea,
              } = this.getTransactionListItemProps(s),
              es = eo?.length > 1,
              el = eo?.length === 2;
            return el && !et
              ? rp.dy`
        <wui-transaction-list-item
          date=${W}
          .direction=${ee}
          id=${x && this.next ? n2 : ""}
          status=${ei}
          type=${ea}
          .images=${er}
          .descriptions=${X}
        ></wui-transaction-list-item>
      `
              : es
              ? eo.map((s, X) => {
                  let ee = tY.TransactionUtil.getTransferDescription(s),
                    et = x && X === eo.length - 1;
                  return rp.dy` <wui-transaction-list-item
          date=${W}
          direction=${s.direction}
          id=${et && this.next ? n2 : ""}
          status=${ei}
          type=${ea}
          .onlyDirectionIcon=${!0}
          .images=${[er[X]]}
          .descriptions=${[ee]}
        ></wui-transaction-list-item>`;
                })
              : rp.dy`
      <wui-transaction-list-item
        date=${W}
        .direction=${ee}
        id=${x && this.next ? n2 : ""}
        status=${ei}
        type=${ea}
        .images=${er}
        .descriptions=${X}
      ></wui-transaction-list-item>
    `;
          }
          templateTransactions(s, x) {
            return s.map((W, X) => {
              let ee = x && X === s.length - 1;
              return rp.dy`${this.templateRenderTransaction(W, ee)}`;
            });
          }
          emptyStateActivity() {
            return rp.dy`<wui-flex
      class="emptyContainer"
      flexGrow="1"
      flexDirection="column"
      justifyContent="center"
      alignItems="center"
      .padding=${["3xl", "xl", "3xl", "xl"]}
      gap="xl"
    >
      <wui-icon-box
        backgroundColor="gray-glass-005"
        background="gray"
        iconColor="fg-200"
        icon="wallet"
        size="lg"
        ?border=${!0}
        borderColor="wui-color-bg-125"
      ></wui-icon-box>
      <wui-flex flexDirection="column" alignItems="center" gap="xs">
        <wui-text align="center" variant="paragraph-500" color="fg-100"
          >No Transactions yet</wui-text
        >
        <wui-text align="center" variant="small-500" color="fg-200"
          >Start trading on dApps <br />
          to grow your wallet!</wui-text
        >
      </wui-flex>
    </wui-flex>`;
          }
          emptyStateAccount() {
            return rp.dy`<wui-flex
      class="contentContainer"
      alignItems="center"
      justifyContent="center"
      flexDirection="column"
      gap="l"
      data-testid="empty-account-state"
    >
      <wui-icon-box
        icon="swapHorizontal"
        size="inherit"
        iconColor="fg-200"
        backgroundColor="fg-200"
        iconSize="lg"
      ></wui-icon-box>
      <wui-flex
        class="textContent"
        gap="xs"
        flexDirection="column"
        justifyContent="center"
        flexDirection="column"
      >
        <wui-text variant="paragraph-500" align="center" color="fg-100">No activity yet</wui-text>
        <wui-text variant="small-400" align="center" color="fg-200"
          >Your next transactions will appear here</wui-text
        >
      </wui-flex>
      <wui-link @click=${this.onReceiveClick.bind(this)}>Trade</wui-link>
    </wui-flex>`;
          }
          templateEmpty() {
            return "account" === this.page
              ? rp.dy`${this.emptyStateAccount()}`
              : rp.dy`${this.emptyStateActivity()}`;
          }
          templateLoading() {
            return "activity" === this.page
              ? Array(7)
                  .fill(
                    rp.dy` <wui-transaction-list-item-loader></wui-transaction-list-item-loader> `
                  )
                  .map((s) => s)
              : null;
          }
          onReceiveClick() {
            tH.RouterController.push("WalletReceive");
          }
          createPaginationObserver() {
            let { projectId: s } = tH.OptionsController.state;
            (this.paginationObserver = new IntersectionObserver(([x]) => {
              x?.isIntersecting &&
                !this.loading &&
                (tH.sl.fetchTransactions(
                  tH.j1.getPlainAddress(this.caipAddress)
                ),
                tH.Xs.sendEvent({
                  type: "track",
                  event: "LOAD_MORE_TRANSACTIONS",
                  properties: {
                    address: tH.j1.getPlainAddress(this.caipAddress),
                    projectId: s,
                    cursor: this.next,
                    isSmartAccount:
                      tH.AccountController.state.preferredAccountType ===
                      t7.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                  },
                }));
            }, {})),
              this.setPaginationObserver();
          }
          setPaginationObserver() {
            this.paginationObserver?.disconnect();
            let s = this.shadowRoot?.querySelector(`#${n2}`);
            s && this.paginationObserver?.observe(s);
          }
          getTransactionListItemProps(s) {
            let x = tV.Em.formatDate(s?.metadata?.minedAt),
              W = tY.TransactionUtil.getTransactionDescriptions(s),
              X = s?.transfers,
              ee = s?.transfers?.[0],
              et = !!ee && s?.transfers?.every((s) => !!s.nft_info),
              er = tY.TransactionUtil.getTransactionImages(X);
            return {
              date: x,
              direction: ee?.direction,
              descriptions: W,
              isAllNFT: et,
              images: er,
              status: s.metadata?.status,
              transfers: X,
              type: s.metadata?.operationType,
            };
          }
        };
      (n3.styles = n1),
        w3m_activity_list_decorate(
          [(0, rf.Cb)()],
          n3.prototype,
          "page",
          void 0
        ),
        w3m_activity_list_decorate(
          [(0, rf.SB)()],
          n3.prototype,
          "caipAddress",
          void 0
        ),
        w3m_activity_list_decorate(
          [(0, rf.SB)()],
          n3.prototype,
          "transactionsByYear",
          void 0
        ),
        w3m_activity_list_decorate(
          [(0, rf.SB)()],
          n3.prototype,
          "loading",
          void 0
        ),
        w3m_activity_list_decorate(
          [(0, rf.SB)()],
          n3.prototype,
          "empty",
          void 0
        ),
        w3m_activity_list_decorate(
          [(0, rf.SB)()],
          n3.prototype,
          "next",
          void 0
        ),
        (n3 = w3m_activity_list_decorate(
          [(0, tY.customElement)("w3m-activity-list")],
          n3
        ));
      var n5 = rp.iv`
  :host {
    width: 100%;
    height: 100px;
    border-radius: var(--wui-border-radius-s);
    border: 1px solid var(--wui-color-gray-glass-002);
    background-color: var(--wui-color-gray-glass-002);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-lg);
    will-change: background-color;
  }

  :host(:hover) {
    background-color: var(--wui-color-gray-glass-005);
  }

  wui-flex {
    width: 100%;
    height: fit-content;
  }

  wui-button {
    width: 100%;
    display: flex;
    justify-content: flex-end;
  }

  wui-input-amount {
    mask-image: linear-gradient(
      270deg,
      transparent 0px,
      transparent 8px,
      black 24px,
      black 25px,
      black 32px,
      black 100%
    );
  }

  .totalValue {
    width: 100%;
  }
`,
        w3m_input_token_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let n6 = class extends rp.oi {
        render() {
          return rp.dy` <wui-flex
      flexDirection="column"
      gap="4xs"
      .padding=${["xl", "s", "l", "l"]}
    >
      <wui-flex alignItems="center">
        <wui-input-amount
          @inputChange=${this.onInputChange.bind(this)}
          ?disabled=${!this.token}
          .value=${this.sendTokenAmount ? String(this.sendTokenAmount) : ""}
        ></wui-input-amount>
        ${this.buttonTemplate()}
      </wui-flex>
      <wui-flex alignItems="center" justifyContent="space-between">
        ${this.sendValueTemplate()}
        <wui-flex alignItems="center" gap="4xs" justifyContent="flex-end">
          ${this.maxAmountTemplate()} ${this.actionTemplate()}
        </wui-flex>
      </wui-flex>
    </wui-flex>`;
        }
        buttonTemplate() {
          return this.token
            ? rp.dy`<wui-token-button
        text=${this.token.symbol}
        imageSrc=${this.token.iconUrl}
        @click=${this.handleSelectButtonClick.bind(this)}
      >
      </wui-token-button>`
            : rp.dy`<wui-button
      size="md"
      variant="accent"
      @click=${this.handleSelectButtonClick.bind(this)}
      >Select token</wui-button
    >`;
        }
        handleSelectButtonClick() {
          tH.RouterController.push("WalletSendSelectToken");
        }
        sendValueTemplate() {
          if (this.token && this.sendTokenAmount) {
            let s = this.token.price,
              x = s * this.sendTokenAmount;
            return rp.dy`<wui-text class="totalValue" variant="small-400" color="fg-200"
        >${
          x
            ? `$${tY.UiHelperUtil.formatNumberToLocalString(x, 2)}`
            : "Incorrect value"
        }</wui-text
      >`;
          }
          return null;
        }
        maxAmountTemplate() {
          return this.token
            ? this.sendTokenAmount &&
              this.sendTokenAmount > Number(this.token.quantity.numeric)
              ? rp.dy` <wui-text variant="small-400" color="error-100">
          ${tY.UiHelperUtil.roundNumber(
            Number(this.token.quantity.numeric),
            6,
            5
          )}
        </wui-text>`
              : rp.dy` <wui-text variant="small-400" color="fg-200">
        ${tY.UiHelperUtil.roundNumber(
          Number(this.token.quantity.numeric),
          6,
          5
        )}
      </wui-text>`
            : null;
        }
        actionTemplate() {
          return this.token
            ? this.sendTokenAmount &&
              this.sendTokenAmount > Number(this.token.quantity.numeric)
              ? rp.dy`<wui-link @click=${this.onBuyClick.bind(
                  this
                )}>Buy</wui-link>`
              : rp.dy`<wui-link @click=${this.onMaxClick.bind(
                  this
                )}>Max</wui-link>`
            : null;
        }
        onInputChange(s) {
          tH.Si.setTokenAmount(s.detail);
        }
        onMaxClick() {
          if (this.token && void 0 !== this.gasPrice) {
            let s =
                void 0 === this.token.address ||
                Object.values(tH.bq.NATIVE_TOKEN_ADDRESS).some(
                  (s) => this.token?.address === s
                ),
              x = tV.C6.bigNumber(this.gasPrice).shiftedBy(
                -this.token.quantity.decimals
              ),
              W = s
                ? tV.C6.bigNumber(this.token.quantity.numeric).minus(x)
                : tV.C6.bigNumber(this.token.quantity.numeric);
            tH.Si.setTokenAmount(Number(W.toFixed(20)));
          }
        }
        onBuyClick() {
          tH.RouterController.push("OnRampProviders");
        }
      };
      (n6.styles = n5),
        w3m_input_token_decorate(
          [(0, rf.Cb)({ type: Object })],
          n6.prototype,
          "token",
          void 0
        ),
        w3m_input_token_decorate(
          [(0, rf.Cb)({ type: Number })],
          n6.prototype,
          "sendTokenAmount",
          void 0
        ),
        w3m_input_token_decorate(
          [(0, rf.Cb)({ type: Number })],
          n6.prototype,
          "gasPriceInUSD",
          void 0
        ),
        w3m_input_token_decorate(
          [(0, rf.Cb)({ type: Number })],
          n6.prototype,
          "gasPrice",
          void 0
        ),
        (n6 = w3m_input_token_decorate(
          [(0, tY.customElement)("w3m-input-token")],
          n6
        ));
      var n4 = rp.iv`
  :host {
    width: 100%;
    height: 100px;
    border-radius: var(--wui-border-radius-s);
    border: 1px solid var(--wui-color-gray-glass-002);
    background-color: var(--wui-color-gray-glass-002);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-lg);
    will-change: background-color;
    position: relative;
  }

  :host(:hover) {
    background-color: var(--wui-color-gray-glass-005);
  }

  wui-flex {
    width: 100%;
    height: fit-content;
  }

  wui-button {
    display: ruby;
    color: var(--wui-color-fg-100);
    margin: 0 var(--wui-spacing-xs);
  }

  .instruction {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 2;
  }

  .paste {
    display: inline-flex;
  }

  textarea {
    background: transparent;
    width: 100%;
    font-family: var(--w3m-font-family);
    font-size: var(--wui-font-size-medium);
    font-style: normal;
    font-weight: var(--wui-font-weight-light);
    line-height: 130%;
    letter-spacing: var(--wui-letter-spacing-medium);
    color: var(--wui-color-fg-100);
    caret-color: var(--wui-color-accent-100);
    box-sizing: border-box;
    -webkit-appearance: none;
    -moz-appearance: textfield;
    padding: 0px;
    border: none;
    outline: none;
    appearance: none;
    resize: none;
    overflow: hidden;
  }
`,
        w3m_input_address_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let n8 = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.inputElementRef = (0, rQ.V)()),
            (this.instructionElementRef = (0, rQ.V)()),
            (this.instructionHidden = !!this.value),
            (this.pasting = !1),
            (this.onDebouncedSearch = tH.j1.debounce(async (s) => {
              let x = await tH.ConnectionController.getEnsAddress(s);
              if ((tH.Si.setLoading(!1), x)) {
                tH.Si.setReceiverProfileName(s), tH.Si.setReceiverAddress(x);
                let W = await tH.ConnectionController.getEnsAvatar(s);
                tH.Si.setReceiverProfileImageUrl(W || void 0);
              } else
                tH.Si.setReceiverAddress(s),
                  tH.Si.setReceiverProfileName(void 0),
                  tH.Si.setReceiverProfileImageUrl(void 0);
            }));
        }
        firstUpdated() {
          this.value && (this.instructionHidden = !0), this.checkHidden();
        }
        render() {
          return rp.dy` <wui-flex
      @click=${this.onBoxClick.bind(this)}
      flexDirection="column"
      justifyContent="center"
      gap="4xs"
      .padding=${["2xl", "l", "xl", "l"]}
    >
      <wui-text
        ${(0, rQ.i)(this.instructionElementRef)}
        class="instruction"
        color="fg-300"
        variant="medium-400"
      >
        Type or
        <wui-button
          class="paste"
          size="md"
          variant="neutral"
          iconLeft="copy"
          @click=${this.onPasteClick.bind(this)}
        >
          <wui-icon size="sm" color="inherit" slot="iconLeft" name="copy"></wui-icon>
          Paste
        </wui-button>
        address
      </wui-text>
      <textarea
        spellcheck="false"
        ?disabled=${!this.instructionHidden}
        ${(0, rQ.i)(this.inputElementRef)}
        @input=${this.onInputChange.bind(this)}
        @blur=${this.onBlur.bind(this)}
        .value=${this.value ?? ""}
        autocomplete="off"
      >
${this.value ?? ""}</textarea
      >
    </wui-flex>`;
        }
        async focusInput() {
          this.instructionElementRef.value &&
            ((this.instructionHidden = !0),
            await this.toggleInstructionFocus(!1),
            (this.instructionElementRef.value.style.pointerEvents = "none"),
            this.inputElementRef.value?.focus(),
            this.inputElementRef.value &&
              (this.inputElementRef.value.selectionStart =
                this.inputElementRef.value.selectionEnd =
                  this.inputElementRef.value.value.length));
        }
        async focusInstruction() {
          this.instructionElementRef.value &&
            ((this.instructionHidden = !1),
            await this.toggleInstructionFocus(!0),
            (this.instructionElementRef.value.style.pointerEvents = "auto"),
            this.inputElementRef.value?.blur());
        }
        async toggleInstructionFocus(s) {
          this.instructionElementRef.value &&
            (await this.instructionElementRef.value.animate(
              [{ opacity: s ? 0 : 1 }, { opacity: s ? 1 : 0 }],
              { duration: 100, easing: "ease", fill: "forwards" }
            ).finished);
        }
        onBoxClick() {
          this.value || this.instructionHidden || this.focusInput();
        }
        onBlur() {
          this.value ||
            !this.instructionHidden ||
            this.pasting ||
            this.focusInstruction();
        }
        checkHidden() {
          this.instructionHidden && this.focusInput();
        }
        async onPasteClick() {
          this.pasting = !0;
          let s = await navigator.clipboard.readText();
          tH.Si.setReceiverAddress(s), this.focusInput();
        }
        onInputChange(s) {
          this.pasting = !1;
          let x = s.target;
          x.value && !this.instructionHidden && this.focusInput(),
            tH.Si.setLoading(!0),
            this.onDebouncedSearch(x.value);
        }
      };
      (n8.styles = n4),
        w3m_input_address_decorate(
          [(0, rf.Cb)()],
          n8.prototype,
          "value",
          void 0
        ),
        w3m_input_address_decorate(
          [(0, rf.SB)()],
          n8.prototype,
          "instructionHidden",
          void 0
        ),
        w3m_input_address_decorate(
          [(0, rf.SB)()],
          n8.prototype,
          "pasting",
          void 0
        ),
        (n8 = w3m_input_address_decorate(
          [(0, tY.customElement)("w3m-input-address")],
          n8
        ));
      var n9 = rp.iv`
  :host {
    display: flex;
    width: auto;
    flex-direction: column;
    gap: var(--wui-border-radius-1xs);
    border-radius: var(--wui-border-radius-s);
    background: var(--wui-color-gray-glass-002);
    padding: var(--wui-spacing-s) var(--wui-spacing-1xs) var(--wui-spacing-1xs)
      var(--wui-spacing-1xs);
  }

  wui-text {
    padding: 0 var(--wui-spacing-1xs);
  }

  wui-flex {
    margin-top: var(--wui-spacing-1xs);
  }

  .network {
    cursor: pointer;
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-lg);
    will-change: background-color;
  }

  .network:focus-visible {
    border: 1px solid var(--wui-color-accent-100);
    background-color: var(--wui-color-gray-glass-005);
    -webkit-box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
    -moz-box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
    box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
  }

  .network:hover {
    background-color: var(--wui-color-gray-glass-005);
  }

  .network:active {
    background-color: var(--wui-color-gray-glass-010);
  }
`,
        w3m_wallet_send_details_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let n7 = class extends rp.oi {
        render() {
          return rp.dy` <wui-text variant="small-400" color="fg-200">Details</wui-text>
      <wui-flex flexDirection="column" gap="xxs">
        <wui-list-content textTitle="Network cost" textValue="$${(0, rg.o)(
          tY.UiHelperUtil.formatNumberToLocalString(this.networkFee, 2)
        )}"></wui-list-content></wui-list-content>
        <wui-list-content
          textTitle="Address"
          textValue=${tY.UiHelperUtil.getTruncateString({
            string: this.receiverAddress ?? "",
            charsStart: 4,
            charsEnd: 4,
            truncate: "middle",
          })}
        >
        </wui-list-content>
        ${this.networkTemplate()}
      </wui-flex>`;
        }
        networkTemplate() {
          return this.caipNetwork?.name
            ? rp.dy` <wui-list-content
        @click=${() => this.onNetworkClick(this.caipNetwork)}
        class="network"
        textTitle="Network"
        imageSrc=${(0, rg.o)(tH.fz.getNetworkImage(this.caipNetwork))}
      ></wui-list-content>`
            : null;
        }
        onNetworkClick(s) {
          s && tH.RouterController.push("Networks", { network: s });
        }
      };
      (n7.styles = n9),
        w3m_wallet_send_details_decorate(
          [(0, rf.Cb)()],
          n7.prototype,
          "receiverAddress",
          void 0
        ),
        w3m_wallet_send_details_decorate(
          [(0, rf.Cb)({ type: Object })],
          n7.prototype,
          "caipNetwork",
          void 0
        ),
        w3m_wallet_send_details_decorate(
          [(0, rf.Cb)({ type: Number })],
          n7.prototype,
          "networkFee",
          void 0
        ),
        (n7 = w3m_wallet_send_details_decorate(
          [(0, tY.customElement)("w3m-wallet-send-details")],
          n7
        ));
      var oe = rp.iv`
  :host {
    pointer-events: none;
  }

  :host > wui-flex {
    display: var(--w3m-tooltip-display);
    opacity: var(--w3m-tooltip-opacity);
    padding: 9px var(--wui-spacing-s) 10px var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-xxs);
    color: var(--wui-color-bg-100);
    position: fixed;
    top: var(--w3m-tooltip-top);
    left: var(--w3m-tooltip-left);
    transform: translate(calc(-50% + var(--w3m-tooltip-parent-width)), calc(-100% - 8px));
    max-width: calc(var(--w3m-modal-width) - var(--wui-spacing-xl));
    transition: opacity 0.2s var(--wui-ease-out-power-2);
    will-change: opacity;
  }

  :host([data-variant='shade']) > wui-flex {
    background-color: var(--wui-color-bg-150);
    border: 1px solid var(--wui-color-gray-glass-005);
  }

  :host([data-variant='shade']) > wui-flex > wui-text {
    color: var(--wui-color-fg-150);
  }

  :host([data-variant='fill']) > wui-flex {
    background-color: var(--wui-color-fg-100);
    border: none;
  }

  wui-icon {
    position: absolute;
    width: 12px !important;
    height: 4px !important;
    color: var(--wui-color-bg-150);
  }

  wui-icon[data-placement='top'] {
    bottom: 0px;
    left: 50%;
    transform: translate(-50%, 95%);
  }

  wui-icon[data-placement='bottom'] {
    top: 0;
    left: 50%;
    transform: translate(-50%, -95%) rotate(180deg);
  }

  wui-icon[data-placement='right'] {
    top: 50%;
    left: 0;
    transform: translate(-65%, -50%) rotate(90deg);
  }

  wui-icon[data-placement='left'] {
    top: 50%;
    right: 0%;
    transform: translate(65%, -50%) rotate(270deg);
  }
`,
        w3m_tooltip_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ot = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.open = tH.fw.state.open),
            (this.message = tH.fw.state.message),
            (this.triggerRect = tH.fw.state.triggerRect),
            (this.variant = tH.fw.state.variant),
            this.unsubscribe.push(
              ...[
                tH.fw.subscribe((s) => {
                  (this.open = s.open),
                    (this.message = s.message),
                    (this.triggerRect = s.triggerRect),
                    (this.variant = s.variant);
                }),
              ]
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          this.dataset.variant = this.variant;
          let s = this.triggerRect.top,
            x = this.triggerRect.left;
          return (
            (this.style.cssText = `
    --w3m-tooltip-top: ${s}px;
    --w3m-tooltip-left: ${x}px;
    --w3m-tooltip-parent-width: ${this.triggerRect.width / 2}px;
    --w3m-tooltip-display: ${this.open ? "flex" : "none"};
    --w3m-tooltip-opacity: ${this.open ? 1 : 0};
    `),
            rp.dy`<wui-flex>
      <wui-icon data-placement="top" color="fg-100" size="inherit" name="cursor"></wui-icon>
      <wui-text color="inherit" variant="small-500">${this.message}</wui-text>
    </wui-flex>`
          );
        }
      };
      (ot.styles = [oe]),
        w3m_tooltip_decorate([(0, rf.SB)()], ot.prototype, "open", void 0),
        w3m_tooltip_decorate([(0, rf.SB)()], ot.prototype, "message", void 0),
        w3m_tooltip_decorate(
          [(0, rf.SB)()],
          ot.prototype,
          "triggerRect",
          void 0
        ),
        w3m_tooltip_decorate([(0, rf.SB)()], ot.prototype, "variant", void 0),
        (ot = w3m_tooltip_decorate([(0, tY.customElement)("w3m-tooltip")], ot));
      var oa = rp.iv`
  :host {
    width: 100%;
    display: block;
  }
`,
        w3m_tooltip_trigger_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let os = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.text = ""),
            (this.open = tH.fw.state.open),
            this.unsubscribe.push(
              tH.RouterController.subscribeKey("view", () => {
                tH.fw.hide();
              }),
              tH.IN.subscribeKey("open", (s) => {
                s || tH.fw.hide();
              }),
              tH.fw.subscribeKey("open", (s) => {
                this.open = s;
              })
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s()), tH.fw.hide();
        }
        render() {
          return rp.dy`
      <div
        @pointermove=${this.onMouseEnter.bind(this)}
        @pointerleave=${this.onMouseLeave.bind(this)}
      >
        ${this.renderChildren()}
      </div>
    `;
        }
        renderChildren() {
          return rp.dy`<slot></slot> `;
        }
        onMouseEnter() {
          let s = this.getBoundingClientRect();
          this.open ||
            tH.fw.showTooltip({
              message: this.text,
              triggerRect: {
                width: s.width,
                height: s.height,
                left: s.left,
                top: s.top,
              },
              variant: "shade",
            });
        }
        onMouseLeave(s) {
          this.contains(s.relatedTarget) || tH.fw.hide();
        }
      };
      (os.styles = [oa]),
        w3m_tooltip_trigger_decorate(
          [(0, rf.Cb)()],
          os.prototype,
          "text",
          void 0
        ),
        w3m_tooltip_trigger_decorate(
          [(0, rf.SB)()],
          os.prototype,
          "open",
          void 0
        ),
        (os = w3m_tooltip_trigger_decorate(
          [(0, tY.customElement)("w3m-tooltip-trigger")],
          os
        ));
      var ol = rp.iv`
  wui-separator {
    margin: var(--wui-spacing-m) calc(var(--wui-spacing-m) * -1) var(--wui-spacing-m)
      calc(var(--wui-spacing-m) * -1);
    width: calc(100% + var(--wui-spacing-s) * 2);
  }
`,
        w3m_social_login_widget_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let oc = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.walletGuide = "get-started"),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            (this.features = tH.OptionsController.state.features),
            (this.authConnector = this.connectors.find(
              (s) => "AUTH" === s.type
            )),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey("connectors", (s) => {
                (this.connectors = s),
                  (this.authConnector = this.connectors.find(
                    (s) => "AUTH" === s.type
                  ));
              }),
              tH.OptionsController.subscribeKey(
                "features",
                (s) => (this.features = s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          return rp.dy`
      <wui-flex
        class="container"
        flexDirection="column"
        gap="xs"
        data-testid="w3m-social-login-widget"
      >
        ${this.topViewTemplate()}${this.bottomViewTemplate()}
      </wui-flex>
    `;
        }
        topViewTemplate() {
          let s = "explore" === this.walletGuide,
            x = this.features?.socials;
          return !x && s
            ? ((x = tH.bq.DEFAULT_FEATURES.socials),
              this.renderTopViewContent(x))
            : x
            ? this.renderTopViewContent(x)
            : null;
        }
        renderTopViewContent(s) {
          return 2 === s.length
            ? rp.dy` <wui-flex gap="xs">
        ${s.slice(0, 2).map(
          (s) => rp.dy`<wui-logo-select
              data-testid=${`social-selector-${s}`}
              @click=${() => {
                this.onSocialClick(s);
              }}
              logo=${s}
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></wui-logo-select>`
        )}
      </wui-flex>`
            : rp.dy` <wui-list-social
      data-testid=${`social-selector-${s[0]}`}
      @click=${() => {
        this.onSocialClick(s[0]);
      }}
      logo=${(0, rg.o)(s[0])}
      align="center"
      name=${`Continue with ${s[0]}`}
      tabIdx=${(0, rg.o)(this.tabIdx)}
    ></wui-list-social>`;
        }
        bottomViewTemplate() {
          let s = this.features?.socials,
            x = "explore" === this.walletGuide,
            W = !this.authConnector || !s || !s?.length;
          return (W && x && (s = tH.bq.DEFAULT_FEATURES.socials),
          !s || s.length <= 2)
            ? null
            : s && s.length > 6
            ? rp.dy`<wui-flex gap="xs">
        ${s.slice(1, 5).map(
          (s) => rp.dy`<wui-logo-select
              data-testid=${`social-selector-${s}`}
              @click=${() => {
                this.onSocialClick(s);
              }}
              logo=${s}
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></wui-logo-select>`
        )}
        <wui-logo-select
          logo="more"
          tabIdx=${(0, rg.o)(this.tabIdx)}
          @click=${this.onMoreSocialsClick.bind(this)}
        ></wui-logo-select>
      </wui-flex>`
            : s
            ? rp.dy`<wui-flex gap="xs">
      ${s.slice(1, s.length).map(
        (s) => rp.dy`<wui-logo-select
            data-testid=${`social-selector-${s}`}
            @click=${() => {
              this.onSocialClick(s);
            }}
            logo=${s}
            tabIdx=${(0, rg.o)(this.tabIdx)}
          ></wui-logo-select>`
      )}
    </wui-flex>`
            : null;
        }
        onMoreSocialsClick() {
          tH.RouterController.push("ConnectSocials");
        }
        async onSocialClick(s) {
          let x = tV.bq.AUTH_CONNECTOR_SUPPORTED_CHAINS.find(
            (s) => s === tH.RY.state.activeChain
          );
          if (!x) {
            let s = tH.RY.getFirstCaipNetworkSupportsAuthConnector();
            if (s) {
              tH.RouterController.push("SwitchNetwork", { network: s });
              return;
            }
          }
          if (
            (s &&
              (tH.AccountController.setSocialProvider(
                s,
                tH.RY.state.activeChain
              ),
              tH.Xs.sendEvent({
                type: "track",
                event: "SOCIAL_LOGIN_STARTED",
                properties: { provider: s },
              })),
            s === eA.Farcaster)
          ) {
            tH.RouterController.push("ConnectingFarcaster");
            let s = tH.ConnectorController.getAuthConnector();
            if (s && !tH.AccountController.state.farcasterUrl)
              try {
                let { url: x } = await s.provider.getFarcasterUri();
                tH.AccountController.setFarcasterUrl(
                  x,
                  tH.RY.state.activeChain
                );
              } catch (s) {
                tH.RouterController.goBack(), tH.SnackController.showError(s);
              }
          } else {
            tH.RouterController.push("ConnectingSocial");
            let x = tH.ConnectorController.getAuthConnector();
            this.popupWindow = tH.j1.returnOpenHref(
              "",
              "popupWindow",
              "width=600,height=800,scrollbars=yes"
            );
            try {
              if (x && s) {
                let { uri: W } = await x.provider.getSocialRedirectUri({
                  provider: s,
                });
                if (this.popupWindow && W)
                  tH.AccountController.setSocialWindow(
                    this.popupWindow,
                    tH.RY.state.activeChain
                  ),
                    (this.popupWindow.location.href = W);
                else
                  throw (
                    (this.popupWindow?.close(), Error("Something went wrong"))
                  );
              }
            } catch (s) {
              this.popupWindow?.close(),
                tH.SnackController.showError("Something went wrong");
            }
          }
        }
      };
      (oc.styles = ol),
        w3m_social_login_widget_decorate(
          [(0, rf.Cb)()],
          oc.prototype,
          "walletGuide",
          void 0
        ),
        w3m_social_login_widget_decorate(
          [(0, rf.Cb)()],
          oc.prototype,
          "tabIdx",
          void 0
        ),
        w3m_social_login_widget_decorate(
          [(0, rf.SB)()],
          oc.prototype,
          "connectors",
          void 0
        ),
        w3m_social_login_widget_decorate(
          [(0, rf.SB)()],
          oc.prototype,
          "features",
          void 0
        ),
        w3m_social_login_widget_decorate(
          [(0, rf.SB)()],
          oc.prototype,
          "authConnector",
          void 0
        ),
        (oc = w3m_social_login_widget_decorate(
          [(0, tY.customElement)("w3m-social-login-widget")],
          oc
        ));
      var w3m_wallet_login_list_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let ou = class extends rp.oi {
        constructor() {
          super(...arguments), (this.tabIdx = void 0);
        }
        render() {
          return rp.dy`
      <wui-flex flexDirection="column" gap="xs">
        <w3m-connector-list tabIdx=${(0, rg.o)(
          this.tabIdx
        )}></w3m-connector-list>
        <w3m-all-wallets-widget tabIdx=${(0, rg.o)(
          this.tabIdx
        )}></w3m-all-wallets-widget>
      </wui-flex>
    `;
        }
      };
      w3m_wallet_login_list_decorate(
        [(0, rf.Cb)()],
        ou.prototype,
        "tabIdx",
        void 0
      ),
        (ou = w3m_wallet_login_list_decorate(
          [(0, tY.customElement)("w3m-wallet-login-list")],
          ou
        ));
      var od = rp.iv`
  :host {
    margin-top: var(--wui-spacing-3xs);
  }
  wui-separator {
    margin: var(--wui-spacing-m) calc(var(--wui-spacing-m) * -1) var(--wui-spacing-xs)
      calc(var(--wui-spacing-m) * -1);
    width: calc(100% + var(--wui-spacing-s) * 2);
  }
`,
        w3m_social_login_list_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let oh = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            (this.authConnector = this.connectors.find(
              (s) => "AUTH" === s.type
            )),
            (this.features = tH.OptionsController.state.features),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey("connectors", (s) => {
                (this.connectors = s),
                  (this.authConnector = this.connectors.find(
                    (s) => "AUTH" === s.type
                  ));
              }),
              tH.OptionsController.subscribeKey(
                "features",
                (s) => (this.features = s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.features?.socials || [],
            x = !!this.authConnector,
            W = s?.length,
            X = "ConnectSocials" === tH.RouterController.state.view;
          return (x && W) || X
            ? (X && !W && (s = tH.bq.DEFAULT_FEATURES.socials),
              rp.dy` <wui-flex flexDirection="column" gap="xs">
      ${s.map(
        (s) => rp.dy`<wui-list-social
            @click=${() => {
              this.onSocialClick(s);
            }}
            name=${s}
            logo=${s}
            tabIdx=${(0, rg.o)(this.tabIdx)}
          ></wui-list-social>`
      )}
    </wui-flex>`)
            : null;
        }
        async onSocialClick(s) {
          if (
            (s &&
              (tH.AccountController.setSocialProvider(
                s,
                tH.RY.state.activeChain
              ),
              tH.Xs.sendEvent({
                type: "track",
                event: "SOCIAL_LOGIN_STARTED",
                properties: { provider: s },
              })),
            s === eA.Farcaster)
          ) {
            tH.RouterController.push("ConnectingFarcaster");
            let s = tH.ConnectorController.getAuthConnector();
            if (s && !tH.AccountController.state.farcasterUrl)
              try {
                let { url: x } = await s.provider.getFarcasterUri();
                tH.AccountController.setFarcasterUrl(
                  x,
                  tH.RY.state.activeChain
                );
              } catch (s) {
                tH.RouterController.goBack(), tH.SnackController.showError(s);
              }
          } else {
            tH.RouterController.push("ConnectingSocial");
            let x = tH.ConnectorController.getAuthConnector();
            this.popupWindow = tH.j1.returnOpenHref(
              "",
              "popupWindow",
              "width=600,height=800,scrollbars=yes"
            );
            try {
              if (x && s) {
                let { uri: W } = await x.provider.getSocialRedirectUri({
                  provider: s,
                });
                if (this.popupWindow && W)
                  tH.AccountController.setSocialWindow(
                    this.popupWindow,
                    tH.RY.state.activeChain
                  ),
                    (this.popupWindow.location.href = W);
                else
                  throw (
                    (this.popupWindow?.close(), Error("Something went wrong"))
                  );
              }
            } catch (s) {
              this.popupWindow?.close(),
                tH.SnackController.showError("Something went wrong");
            }
          }
        }
      };
      (oh.styles = od),
        w3m_social_login_list_decorate(
          [(0, rf.Cb)()],
          oh.prototype,
          "tabIdx",
          void 0
        ),
        w3m_social_login_list_decorate(
          [(0, rf.SB)()],
          oh.prototype,
          "connectors",
          void 0
        ),
        w3m_social_login_list_decorate(
          [(0, rf.SB)()],
          oh.prototype,
          "authConnector",
          void 0
        ),
        w3m_social_login_list_decorate(
          [(0, rf.SB)()],
          oh.prototype,
          "features",
          void 0
        ),
        (oh = w3m_social_login_list_decorate(
          [(0, tY.customElement)("w3m-social-login-list")],
          oh
        ));
      var w3m_connect_announced_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let op = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey(
                "connectors",
                (s) => (this.connectors = s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.connectors.filter((s) => "ANNOUNCED" === s.type);
          return s?.length
            ? rp.dy`
      <wui-flex flexDirection="column" gap="xs">
        ${s.map((s) =>
          s.info?.rdns &&
          tH.ApiController.state.excludedRDNS &&
          tH.ApiController.state.excludedRDNS.includes(s?.info?.rdns)
            ? null
            : rp.dy`
            <wui-list-wallet
              imageSrc=${(0, rg.o)(tH.fz.getConnectorImage(s))}
              name=${s.name ?? "Unknown"}
              @click=${() => this.onConnector(s)}
              tagVariant="success"
              tagLabel="installed"
              data-testid=${`wallet-selector-${s.id}`}
              .installed=${!0}
              tabIdx=${(0, rg.o)(this.tabIdx)}
            >
            </wui-list-wallet>
          `
        )}
      </wui-flex>
    `
            : ((this.style.cssText = "display: none"), null);
        }
        onConnector(s) {
          "walletConnect" === s.id
            ? tH.j1.isMobile()
              ? tH.RouterController.push("AllWallets")
              : tH.RouterController.push("ConnectingWalletConnect")
            : tH.RouterController.push("ConnectingExternal", { connector: s });
        }
      };
      w3m_connect_announced_widget_decorate(
        [(0, rf.Cb)()],
        op.prototype,
        "tabIdx",
        void 0
      ),
        w3m_connect_announced_widget_decorate(
          [(0, rf.SB)()],
          op.prototype,
          "connectors",
          void 0
        ),
        (op = w3m_connect_announced_widget_decorate(
          [(0, tY.customElement)("w3m-connect-announced-widget")],
          op
        ));
      var w3m_connect_custom_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let of = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey(
                "connectors",
                (s) => (this.connectors = s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let { customWallets: s } = tH.OptionsController.state;
          if (!s?.length) return (this.style.cssText = "display: none"), null;
          let x = this.filterOutDuplicateWallets(s);
          return rp.dy`<wui-flex flexDirection="column" gap="xs">
      ${x.map(
        (s) => rp.dy`
          <wui-list-wallet
            imageSrc=${(0, rg.o)(tH.fz.getWalletImage(s))}
            name=${s.name ?? "Unknown"}
            @click=${() => this.onConnectWallet(s)}
            data-testid=${`wallet-selector-${s.id}`}
            tabIdx=${(0, rg.o)(this.tabIdx)}
          >
          </wui-list-wallet>
        `
      )}
    </wui-flex>`;
        }
        filterOutDuplicateWallets(s) {
          let x = tH.MO.getRecentWallets(),
            W = this.connectors.map((s) => s.info?.rdns).filter(Boolean),
            X = x.map((s) => s.rdns).filter(Boolean),
            ee = W.concat(X);
          if (ee.includes("io.metamask.mobile") && tH.j1.isMobile()) {
            let s = ee.indexOf("io.metamask.mobile");
            ee[s] = "io.metamask";
          }
          let et = s.filter((s) => !ee.includes(String(s?.rdns)));
          return et;
        }
        onConnectWallet(s) {
          tH.RouterController.push("ConnectingWalletConnect", { wallet: s });
        }
      };
      w3m_connect_custom_widget_decorate(
        [(0, rf.Cb)()],
        of.prototype,
        "tabIdx",
        void 0
      ),
        w3m_connect_custom_widget_decorate(
          [(0, rf.SB)()],
          of.prototype,
          "connectors",
          void 0
        ),
        (of = w3m_connect_custom_widget_decorate(
          [(0, tY.customElement)("w3m-connect-custom-widget")],
          of
        ));
      var w3m_connect_featured_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let og = class extends rp.oi {
        constructor() {
          super(...arguments), (this.unsubscribe = []), (this.tabIdx = void 0);
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let { featured: s } = tH.ApiController.state;
          if (!s.length) return (this.style.cssText = "display: none"), null;
          let x = tZ.filterOutDuplicateWallets(s);
          return rp.dy`
      <wui-flex flexDirection="column" gap="xs">
        ${x.map(
          (s) => rp.dy`
            <wui-list-wallet
              data-testid=${`wallet-selector-featured-${s.id}`}
              imageSrc=${(0, rg.o)(tH.fz.getWalletImage(s))}
              name=${s.name ?? "Unknown"}
              @click=${() => this.onConnectWallet(s)}
              tabIdx=${(0, rg.o)(this.tabIdx)}
            >
            </wui-list-wallet>
          `
        )}
      </wui-flex>
    `;
        }
        onConnectWallet(s) {
          let x = tH.ConnectorController.getConnector(s.id, s.rdns);
          x
            ? tH.RouterController.push("ConnectingExternal", { connector: x })
            : tH.RouterController.push("ConnectingWalletConnect", {
                wallet: s,
              });
        }
      };
      w3m_connect_featured_widget_decorate(
        [(0, rf.Cb)()],
        og.prototype,
        "tabIdx",
        void 0
      ),
        (og = w3m_connect_featured_widget_decorate(
          [(0, tY.customElement)("w3m-connect-featured-widget")],
          og
        ));
      var w3m_connect_injected_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let om = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey(
                "connectors",
                (s) => (this.connectors = s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.connectors.filter((s) => "INJECTED" === s.type);
          return s?.length &&
            (1 !== s.length ||
              s[0]?.name !== "Browser Wallet" ||
              tH.j1.isMobile())
            ? rp.dy`
      <wui-flex flexDirection="column" gap="xs">
        ${s.map((s) => {
          if (!tH.j1.isMobile() && "Browser Wallet" === s.name) return null;
          let x = s.info?.rdns;
          return x || tH.ConnectionController.checkInstalled(void 0)
            ? x &&
              tH.ApiController.state.excludedRDNS &&
              tH.ApiController.state.excludedRDNS.includes(x)
              ? null
              : rp.dy`
            <wui-list-wallet
              imageSrc=${(0, rg.o)(tH.fz.getConnectorImage(s))}
              .installed=${!0}
              name=${s.name ?? "Unknown"}
              tagVariant="success"
              tagLabel="installed"
              data-testid=${`wallet-selector-${s.id}`}
              @click=${() => this.onConnector(s)}
              tabIdx=${(0, rg.o)(this.tabIdx)}
            >
            </wui-list-wallet>
          `
            : ((this.style.cssText = "display: none"), null);
        })}
      </wui-flex>
    `
            : ((this.style.cssText = "display: none"), null);
        }
        onConnector(s) {
          tH.ConnectorController.setActiveConnector(s),
            tH.RouterController.push("ConnectingExternal", { connector: s });
        }
      };
      w3m_connect_injected_widget_decorate(
        [(0, rf.Cb)()],
        om.prototype,
        "tabIdx",
        void 0
      ),
        w3m_connect_injected_widget_decorate(
          [(0, rf.SB)()],
          om.prototype,
          "connectors",
          void 0
        ),
        (om = w3m_connect_injected_widget_decorate(
          [(0, tY.customElement)("w3m-connect-injected-widget")],
          om
        ));
      var w3m_connect_multi_chain_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let ow = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey(
                "connectors",
                (s) => (this.connectors = s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.connectors.filter(
            (s) => "MULTI_CHAIN" === s.type && "WalletConnect" !== s.name
          );
          return s?.length
            ? rp.dy`
      <wui-flex flexDirection="column" gap="xs">
        ${s.map(
          (s) => rp.dy`
            <wui-list-wallet
              imageSrc=${(0, rg.o)(tH.fz.getConnectorImage(s))}
              .installed=${!0}
              name=${s.name ?? "Unknown"}
              tagVariant="shade"
              tagLabel="multichain"
              data-testid=${`wallet-selector-${s.id}`}
              @click=${() => this.onConnector(s)}
              tabIdx=${(0, rg.o)(this.tabIdx)}
            >
            </wui-list-wallet>
          `
        )}
      </wui-flex>
    `
            : ((this.style.cssText = "display: none"), null);
        }
        onConnector(s) {
          tH.ConnectorController.setActiveConnector(s),
            tH.RouterController.push("ConnectingMultiChain");
        }
      };
      w3m_connect_multi_chain_widget_decorate(
        [(0, rf.Cb)()],
        ow.prototype,
        "tabIdx",
        void 0
      ),
        w3m_connect_multi_chain_widget_decorate(
          [(0, rf.SB)()],
          ow.prototype,
          "connectors",
          void 0
        ),
        (ow = w3m_connect_multi_chain_widget_decorate(
          [(0, tY.customElement)("w3m-connect-multi-chain-widget")],
          ow
        ));
      var w3m_connect_external_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let ob = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey(
                "connectors",
                (s) => (this.connectors = s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.connectors.filter((s) => "EXTERNAL" === s.type),
            x = s.filter((s) => "coinbaseWalletSDK" !== s.id);
          return x?.length
            ? rp.dy`
      <wui-flex flexDirection="column" gap="xs">
        ${x.map(
          (s) => rp.dy`
            <wui-list-wallet
              imageSrc=${(0, rg.o)(tH.fz.getConnectorImage(s))}
              .installed=${!0}
              name=${s.name ?? "Unknown"}
              data-testid=${`wallet-selector-external-${s.id}`}
              @click=${() => this.onConnector(s)}
              tabIdx=${(0, rg.o)(this.tabIdx)}
            >
            </wui-list-wallet>
          `
        )}
      </wui-flex>
    `
            : ((this.style.cssText = "display: none"), null);
        }
        onConnector(s) {
          tH.RouterController.push("ConnectingExternal", { connector: s });
        }
      };
      w3m_connect_external_widget_decorate(
        [(0, rf.Cb)()],
        ob.prototype,
        "tabIdx",
        void 0
      ),
        w3m_connect_external_widget_decorate(
          [(0, rf.SB)()],
          ob.prototype,
          "connectors",
          void 0
        ),
        (ob = w3m_connect_external_widget_decorate(
          [(0, tY.customElement)("w3m-connect-external-widget")],
          ob
        ));
      var w3m_connect_recent_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let ov = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey(
                "connectors",
                (s) => (this.connectors = s)
              )
            );
        }
        render() {
          let s = tH.MO.getRecentWallets(),
            x = s.filter(
              (s) =>
                !this.connectors.some((x) => x.id === s.id || x.name === s.name)
            );
          return x.length
            ? rp.dy`
      <wui-flex flexDirection="column" gap="xs">
        ${x.map(
          (s) => rp.dy`
            <wui-list-wallet
              imageSrc=${(0, rg.o)(tH.fz.getWalletImage(s))}
              name=${s.name ?? "Unknown"}
              @click=${() => this.onConnectWallet(s)}
              tagLabel="recent"
              tagVariant="shade"
              tabIdx=${(0, rg.o)(this.tabIdx)}
            >
            </wui-list-wallet>
          `
        )}
      </wui-flex>
    `
            : ((this.style.cssText = "display: none"), null);
        }
        onConnectWallet(s) {
          tH.RouterController.push("ConnectingWalletConnect", { wallet: s });
        }
      };
      w3m_connect_recent_widget_decorate(
        [(0, rf.Cb)()],
        ov.prototype,
        "tabIdx",
        void 0
      ),
        w3m_connect_recent_widget_decorate(
          [(0, rf.SB)()],
          ov.prototype,
          "connectors",
          void 0
        ),
        (ov = w3m_connect_recent_widget_decorate(
          [(0, tY.customElement)("w3m-connect-recent-widget")],
          ov
        ));
      var w3m_connect_recommended_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let oy = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey(
                "connectors",
                (s) => (this.connectors = s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.connectors.find((s) => "walletConnect" === s.id);
          if (!s) return null;
          let { recommended: x } = tH.ApiController.state,
            { customWallets: W, featuredWalletIds: X } =
              tH.OptionsController.state,
            { connectors: ee } = tH.ConnectorController.state,
            et = tH.MO.getRecentWallets(),
            er = ee.filter(
              (s) =>
                "INJECTED" === s.type ||
                "ANNOUNCED" === s.type ||
                "MULTI_CHAIN" === s.type
            ),
            ei = er.filter((s) => "Browser Wallet" !== s.name);
          if (X || W || !x.length)
            return (this.style.cssText = "display: none"), null;
          let eo = ei.length + et.length,
            ea = tZ.filterOutDuplicateWallets(x).slice(0, Math.max(0, 2 - eo));
          return ea.length
            ? rp.dy`
      <wui-flex flexDirection="column" gap="xs">
        ${ea.map(
          (s) => rp.dy`
            <wui-list-wallet
              imageSrc=${(0, rg.o)(tH.fz.getWalletImage(s))}
              name=${s?.name ?? "Unknown"}
              @click=${() => this.onConnectWallet(s)}
              tabIdx=${(0, rg.o)(this.tabIdx)}
            >
            </wui-list-wallet>
          `
        )}
      </wui-flex>
    `
            : ((this.style.cssText = "display: none"), null);
        }
        onConnectWallet(s) {
          let x = tH.ConnectorController.getConnector(s.id, s.rdns);
          x
            ? tH.RouterController.push("ConnectingExternal", { connector: x })
            : tH.RouterController.push("ConnectingWalletConnect", {
                wallet: s,
              });
        }
      };
      w3m_connect_recommended_widget_decorate(
        [(0, rf.Cb)()],
        oy.prototype,
        "tabIdx",
        void 0
      ),
        w3m_connect_recommended_widget_decorate(
          [(0, rf.SB)()],
          oy.prototype,
          "connectors",
          void 0
        ),
        (oy = w3m_connect_recommended_widget_decorate(
          [(0, tY.customElement)("w3m-connect-recommended-widget")],
          oy
        ));
      var w3m_connect_walletconnect_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let o_ = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            (this.connectorImages = tH.WM.state.connectorImages),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey(
                "connectors",
                (s) => (this.connectors = s)
              ),
              tH.WM.subscribeKey(
                "connectorImages",
                (s) => (this.connectorImages = s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          if (tH.j1.isMobile())
            return (this.style.cssText = "display: none"), null;
          let s = this.connectors.find((s) => "walletConnect" === s.id);
          if (!s) return (this.style.cssText = "display: none"), null;
          let x = s.imageUrl || this.connectorImages[s?.imageId ?? ""];
          return rp.dy`
      <wui-list-wallet
        imageSrc=${(0, rg.o)(x)}
        name=${s.name ?? "Unknown"}
        @click=${() => this.onConnector(s)}
        tagLabel="qr code"
        tagVariant="main"
        tabIdx=${(0, rg.o)(this.tabIdx)}
        data-testid="wallet-selector-walletconnect"
      >
      </wui-list-wallet>
    `;
        }
        onConnector(s) {
          tH.ConnectorController.setActiveConnector(s),
            tH.RouterController.push("ConnectingWalletConnect");
        }
      };
      w3m_connect_walletconnect_widget_decorate(
        [(0, rf.Cb)()],
        o_.prototype,
        "tabIdx",
        void 0
      ),
        w3m_connect_walletconnect_widget_decorate(
          [(0, rf.SB)()],
          o_.prototype,
          "connectors",
          void 0
        ),
        w3m_connect_walletconnect_widget_decorate(
          [(0, rf.SB)()],
          o_.prototype,
          "connectorImages",
          void 0
        ),
        (o_ = w3m_connect_walletconnect_widget_decorate(
          [(0, tY.customElement)("w3m-connect-walletconnect-widget")],
          o_
        ));
      var oC = rp.iv`
  :host {
    margin-top: var(--wui-spacing-3xs);
  }
  wui-separator {
    margin: var(--wui-spacing-m) calc(var(--wui-spacing-m) * -1) var(--wui-spacing-xs)
      calc(var(--wui-spacing-m) * -1);
    width: calc(100% + var(--wui-spacing-s) * 2);
  }
`,
        w3m_connector_list_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ox = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey(
                "connectors",
                (s) => (this.connectors = s)
              )
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let {
              custom: s,
              recent: x,
              announced: W,
              injected: X,
              multiChain: ee,
              recommended: et,
              featured: er,
              external: ei,
            } = tG.getConnectorsByType(this.connectors),
            eo = tH.OptionsController.state.enableWalletConnect;
          return rp.dy`
      <wui-flex flexDirection="column" gap="xs">
        ${
          eo
            ? rp.dy`<w3m-connect-walletconnect-widget
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></w3m-connect-walletconnect-widget>`
            : null
        }
        ${
          x.length
            ? rp.dy`<w3m-connect-recent-widget
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></w3m-connect-recent-widget>`
            : null
        }
        ${
          ee.length
            ? rp.dy`<w3m-connect-multi-chain-widget
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></w3m-connect-multi-chain-widget>`
            : null
        }
        ${
          W.length
            ? rp.dy`<w3m-connect-announced-widget
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></w3m-connect-announced-widget>`
            : null
        }
        ${
          X.length
            ? rp.dy`<w3m-connect-injected-widget
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></w3m-connect-injected-widget>`
            : null
        }
        ${
          er.length
            ? rp.dy`<w3m-connect-featured-widget
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></w3m-connect-featured-widget>`
            : null
        }
        ${
          s?.length
            ? rp.dy`<w3m-connect-custom-widget
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></w3m-connect-custom-widget>`
            : null
        }
        ${
          ei.length
            ? rp.dy`<w3m-connect-external-widget
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></w3m-connect-external-widget>`
            : null
        }
        ${
          et.length
            ? rp.dy`<w3m-connect-recommended-widget
              tabIdx=${(0, rg.o)(this.tabIdx)}
            ></w3m-connect-recommended-widget>`
            : null
        }
      </wui-flex>
    `;
        }
      };
      (ox.styles = oC),
        w3m_connector_list_decorate(
          [(0, rf.Cb)()],
          ox.prototype,
          "tabIdx",
          void 0
        ),
        w3m_connector_list_decorate(
          [(0, rf.SB)()],
          ox.prototype,
          "connectors",
          void 0
        ),
        (ox = w3m_connector_list_decorate(
          [(0, tY.customElement)("w3m-connector-list")],
          ox
        ));
      var w3m_all_wallets_widget_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let oE = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.tabIdx = void 0),
            (this.connectors = tH.ConnectorController.state.connectors),
            (this.count = tH.ApiController.state.count),
            this.unsubscribe.push(
              tH.ConnectorController.subscribeKey(
                "connectors",
                (s) => (this.connectors = s)
              ),
              tH.ApiController.subscribeKey("count", (s) => (this.count = s))
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = this.connectors.find((s) => "walletConnect" === s.id),
            { allWallets: x } = tH.OptionsController.state;
          if (!s || "HIDE" === x || ("ONLY_MOBILE" === x && !tH.j1.isMobile()))
            return null;
          let W = tH.ApiController.state.featured.length,
            X = this.count + W,
            ee = X < 10 ? X : 10 * Math.floor(X / 10),
            et = ee < X ? `${ee}+` : `${ee}`;
          return rp.dy`
      <wui-list-wallet
        name="All Wallets"
        walletIcon="allWallets"
        showAllWallets
        @click=${this.onAllWallets.bind(this)}
        tagLabel=${et}
        tagVariant="shade"
        data-testid="all-wallets"
        tabIdx=${(0, rg.o)(this.tabIdx)}
      ></wui-list-wallet>
    `;
        }
        onAllWallets() {
          tH.Xs.sendEvent({ type: "track", event: "CLICK_ALL_WALLETS" }),
            tH.RouterController.push("AllWallets");
        }
      };
      w3m_all_wallets_widget_decorate(
        [(0, rf.Cb)()],
        oE.prototype,
        "tabIdx",
        void 0
      ),
        w3m_all_wallets_widget_decorate(
          [(0, rf.SB)()],
          oE.prototype,
          "connectors",
          void 0
        ),
        w3m_all_wallets_widget_decorate(
          [(0, rf.SB)()],
          oE.prototype,
          "count",
          void 0
        ),
        (oE = w3m_all_wallets_widget_decorate(
          [(0, tY.customElement)("w3m-all-wallets-widget")],
          oE
        ));
      var w3m_account_auth_button_decorate = function (s, x, W, X) {
        var ee,
          et = arguments.length,
          er =
            et < 3
              ? x
              : null === X
              ? (X = Object.getOwnPropertyDescriptor(x, W))
              : X;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          er = Reflect.decorate(s, x, W, X);
        else
          for (var ei = s.length - 1; ei >= 0; ei--)
            (ee = s[ei]) &&
              (er = (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
        return et > 3 && er && Object.defineProperty(x, W, er), er;
      };
      let oA = class extends rp.oi {
        constructor() {
          super(),
            (this.unsubscribe = []),
            (this.socialProvider = tH.MO.getConnectedSocialProvider()),
            (this.socialUsername = tH.MO.getConnectedSocialUsername()),
            (this.namespace = tH.RY.state.activeChain),
            this.unsubscribe.push(
              tH.RY.subscribeKey("activeChain", (s) => {
                this.namespace = s;
              })
            );
        }
        disconnectedCallback() {
          this.unsubscribe.forEach((s) => s());
        }
        render() {
          let s = tH.MO.getConnectedConnectorId(this.namespace),
            x = tH.ConnectorController.getAuthConnector();
          if (!x || s !== tV.bq.CONNECTOR_ID.AUTH)
            return (this.style.cssText = "display: none"), null;
          let W = x.provider.getEmail() ?? "";
          return rp.dy`
      <wui-list-item
        variant="icon"
        iconVariant="overlay"
        icon=${this.socialProvider ?? "mail"}
        iconSize=${this.socialProvider ? "xxl" : "sm"}
        data-testid="w3m-account-email-update"
        ?chevron=${!this.socialProvider}
        @click=${() => {
          this.onGoToUpdateEmail(W, this.socialProvider);
        }}
      >
        <wui-text variant="paragraph-500" color="fg-100">${this.getAuthName(
          W
        )}</wui-text>
      </wui-list-item>
    `;
        }
        onGoToUpdateEmail(s, x) {
          x || tH.RouterController.push("UpdateEmailWallet", { email: s });
        }
        getAuthName(s) {
          return this.socialUsername
            ? "discord" === this.socialProvider &&
              this.socialUsername.endsWith("0")
              ? this.socialUsername.slice(0, -1)
              : this.socialUsername
            : s.length > 30
            ? `${s.slice(0, -3)}...`
            : s;
        }
      };
      w3m_account_auth_button_decorate(
        [(0, rf.SB)()],
        oA.prototype,
        "namespace",
        void 0
      ),
        (oA = w3m_account_auth_button_decorate(
          [(0, tY.customElement)("w3m-account-auth-button")],
          oA
        ));
      var oS = rp.iv`
  wui-flex {
    width: 100%;
  }

  .wallet-guide {
    width: 100%;
  }

  .chip-box {
    width: fit-content;
    background-color: var(--wui-color-gray-glass-005);
    border-radius: var(--wui-border-radius-3xl);
  }
`,
        w3m_wallet_guide_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ok = class extends rp.oi {
        constructor() {
          super(...arguments), (this.walletGuide = "get-started");
        }
        render() {
          return "explore" === this.walletGuide
            ? rp.dy`<wui-flex
          class="wallet-guide"
          flexDirection="column"
          alignItems="center"
          justifyContent="center"
          rowGap="xs"
          data-testid="w3m-wallet-guide-explore"
        >
          <wui-text variant="small-400" color="fg-200" align="center">
            Looking for a self-custody wallet?
          </wui-text>

          <wui-flex class="chip-box">
            <wui-chip
              imageIcon="walletConnectLightBrown"
              icon="externalLink"
              variant="transparent"
              href="https://walletguide.walletconnect.network"
              title="Find one on WalletGuide"
            ></wui-chip>
          </wui-flex>
        </wui-flex>`
            : rp.dy`<wui-flex
          columnGap="4xs"
          flexDirection="row"
          alignItems="center"
          justifyContent="center"
        >
          <wui-text variant="small-400" class="title" color="fg-200"
            >Haven't got a wallet?</wui-text
          >
          <wui-link
            data-testid="w3m-wallet-guide-get-started"
            color="blue-100"
            class="get-started-link"
            @click=${this.onGetStarted}
            tabIdx=${(0, rg.o)(this.tabIdx)}
          >
            Get started
          </wui-link>
        </wui-flex>`;
        }
        onGetStarted() {
          tH.RouterController.push("Create");
        }
      };
      (ok.styles = oS),
        w3m_wallet_guide_decorate(
          [(0, rf.Cb)()],
          ok.prototype,
          "tabIdx",
          void 0
        ),
        w3m_wallet_guide_decorate(
          [(0, rf.Cb)()],
          ok.prototype,
          "walletGuide",
          void 0
        ),
        (ok = w3m_wallet_guide_decorate(
          [(0, tY.customElement)("w3m-wallet-guide")],
          ok
        ));
      var oT = rp.iv`
  :host {
    display: flex;
    justify-content: center;
    gap: var(--wui-spacing-2xl);
  }

  wui-visual-thumbnail:nth-child(1) {
    z-index: 1;
  }
`;
      let oI = class extends rp.oi {
        constructor() {
          super(...arguments),
            (this.dappImageUrl = tH.OptionsController.state.metadata?.icons),
            (this.walletImageUrl =
              tH.AccountController.state.connectedWalletInfo?.icon);
        }
        firstUpdated() {
          let s = this.shadowRoot?.querySelectorAll("wui-visual-thumbnail");
          s?.[0] && this.createAnimation(s[0], "translate(18px)"),
            s?.[1] && this.createAnimation(s[1], "translate(-18px)");
        }
        render() {
          return rp.dy`
      <wui-visual-thumbnail
        ?borderRadiusFull=${!0}
        .imageSrc=${this.dappImageUrl?.[0]}
      ></wui-visual-thumbnail>
      <wui-visual-thumbnail .imageSrc=${
        this.walletImageUrl
      }></wui-visual-thumbnail>
    `;
        }
        createAnimation(s, x) {
          s.animate([{ transform: "translateX(0px)" }, { transform: x }], {
            duration: 1600,
            easing: "cubic-bezier(0.56, 0, 0.48, 1)",
            direction: "alternate",
            iterations: 1 / 0,
          });
        }
      };
      function walletConnect(s, x, W) {
        let X, ee, et, er, ei, eo, ea;
        let es = s.isNewChainsStale ?? !0;
        return (s) => ({
          id: "walletConnect",
          name: "WalletConnect",
          type: walletConnect.type,
          async setup() {
            let s = await this.getProvider().catch(() => null);
            s &&
              (er || ((er = this.onConnect.bind(this)), s.on("connect", er)),
              eo ||
                ((eo = this.onSessionDelete.bind(this)),
                s.on("session_delete", eo)));
          },
          async connect({ ...s } = {}) {
            try {
              let x = await this.getProvider();
              if (!x) throw new ProviderNotFoundError();
              ei || ((ei = this.onDisplayUri), x.on("display_uri", ei));
              let X = await this.isChainsStale();
              if ((x.session && X && (await x.disconnect()), !x.session || X)) {
                let X = ru.createNamespaces(W);
                await x.connect({
                  optionalNamespaces: X,
                  ...("pairingTopic" in s
                    ? { pairingTopic: s.pairingTopic }
                    : {}),
                }),
                  this.setRequestedChainsIds(W.map((s) => Number(s.id)));
              }
              let es = (await x.enable()).map((s) => (0, tl.K)(s)),
                el = await this.getChainId();
              return (
                ei && (x.removeListener("display_uri", ei), (ei = void 0)),
                er && (x.removeListener("connect", er), (er = void 0)),
                ee ||
                  ((ee = this.onAccountsChanged.bind(this)),
                  x.on("accountsChanged", ee)),
                et ||
                  ((et = this.onChainChanged.bind(this)),
                  x.on("chainChanged", et)),
                ea ||
                  ((ea = this.onDisconnect.bind(this)), x.on("disconnect", ea)),
                eo ||
                  ((eo = this.onSessionDelete.bind(this)),
                  x.on("session_delete", eo)),
                { accounts: es, chainId: el }
              );
            } catch (s) {
              if (/(user rejected|connection request reset)/i.test(s?.message))
                throw new tc.ab(s);
              throw s;
            }
          },
          async disconnect() {
            let s = await this.getProvider();
            try {
              await s?.disconnect();
            } catch (s) {
              if (!/No matching key/i.test(s.message)) throw s;
            } finally {
              et && (s?.removeListener("chainChanged", et), (et = void 0)),
                ea && (s?.removeListener("disconnect", ea), (ea = void 0)),
                er || ((er = this.onConnect.bind(this)), s?.on("connect", er)),
                ee && (s?.removeListener("accountsChanged", ee), (ee = void 0)),
                eo && (s?.removeListener("session_delete", eo), (eo = void 0)),
                this.setRequestedChainsIds([]);
            }
          },
          async getAccounts() {
            let s = await this.getProvider();
            if (!s?.session?.namespaces) return [];
            let x = s?.session?.namespaces[tV.bq.CHAIN.EVM]?.accounts,
              W = x?.map((s) => s.split(":")[2]) ?? [];
            return W;
          },
          async getProvider({ chainId: s } = {}) {
            X ||
              ((X = await x.getUniversalProvider()),
              X?.events.setMaxListeners(Number.POSITIVE_INFINITY));
            let W = tH.MO.getActiveNamespace(),
              ee = x.getCaipNetwork()?.id;
            if (s && ee !== s && W) {
              let s = tH.MO.getStoredActiveCaipNetworkId(),
                X = x?.getCaipNetworks(W),
                ee = X?.find((x) => x.id === s);
              ee &&
                ee.chainNamespace === tV.bq.CHAIN.EVM &&
                (await this.switchChain?.({ chainId: Number(ee.id) }));
            }
            return X;
          },
          async getChainId() {
            let s = x.getCaipNetwork()?.id;
            if (s) return s;
            let X = await this.getProvider(),
              ee = X.session?.namespaces[tV.bq.CHAIN.EVM]?.chains?.[0],
              et = W.find((s) => s.id === ee);
            return et?.id;
          },
          async isAuthorized() {
            try {
              let [s, x] = await Promise.all([
                this.getAccounts(),
                this.getProvider(),
              ]);
              if (!s.length) return !1;
              let W = await this.isChainsStale();
              if (W && x.session)
                return await x.disconnect().catch(() => {}), !1;
              return !0;
            } catch {
              return !1;
            }
          },
          async switchChain({ addEthereumChainParameter: x, chainId: X }) {
            let ee = await this.getProvider();
            if (!ee) throw new ProviderNotFoundError();
            let et = W.find((s) => s.id === X);
            if (!et) throw new tc.x3(new ts.X4());
            try {
              await ee.request({
                method: "wallet_switchEthereumChain",
                params: [{ chainId: (0, tu.eC)(X) }],
              }),
                et?.caipNetworkId && ee.setDefaultChain(et?.caipNetworkId),
                s.emitter.emit("change", { chainId: Number(X) });
              let x = await this.getRequestedChainsIds();
              return (
                this.setRequestedChainsIds([...x, X]), { ...et, id: et.id }
              );
            } catch (s) {
              if (/(?:user rejected)/iu.test(s.message)) throw new tc.ab(s);
              try {
                let s;
                s = x?.blockExplorerUrls
                  ? x.blockExplorerUrls
                  : et.blockExplorers?.default.url
                  ? [et.blockExplorers?.default.url]
                  : [];
                let W = et.rpcUrls?.chainDefault?.http || [],
                  er = {
                    blockExplorerUrls: s,
                    chainId: (0, tu.eC)(X),
                    chainName: et.name,
                    iconUrls: x?.iconUrls,
                    nativeCurrency: et.nativeCurrency,
                    rpcUrls: W,
                  };
                await ee.request({
                  method: "wallet_addEthereumChain",
                  params: [er],
                });
                let ei = await this.getRequestedChainsIds();
                return (
                  this.setRequestedChainsIds([...ei, X]), { ...et, id: et.id }
                );
              } catch (s) {
                throw new tc.ab(s);
              }
            }
          },
          onAccountsChanged(x) {
            0 === x.length
              ? this.onDisconnect()
              : s.emitter.emit("change", {
                  accounts: x.map((s) => (0, tl.K)(s)),
                });
          },
          onChainChanged(x) {
            let W = Number(x);
            s.emitter.emit("change", { chainId: W });
          },
          onConnect(s) {
            this.setRequestedChainsIds(W.map((s) => Number(s.id)));
          },
          async onDisconnect(x) {
            this.setRequestedChainsIds([]), s.emitter.emit("disconnect");
            let W = await this.getProvider();
            ee && (W.removeListener("accountsChanged", ee), (ee = void 0)),
              et && (W.removeListener("chainChanged", et), (et = void 0)),
              ea && (W.removeListener("disconnect", ea), (ea = void 0)),
              eo && (W.removeListener("session_delete", eo), (eo = void 0)),
              er || ((er = this.onConnect.bind(this)), W.on("connect", er));
          },
          onDisplayUri(x) {
            s.emitter.emit("message", { type: "display_uri", data: x });
          },
          onSessionDelete() {
            this.onDisconnect();
          },
          getNamespaceChainsIds() {
            if (!X?.session?.namespaces) return [];
            let s = X?.session?.namespaces[tV.bq.CHAIN.EVM]?.accounts,
              x = s?.map((s) => Number.parseInt(s.split(":")[1] ?? "")) ?? [];
            return x;
          },
          async getRequestedChainsIds() {
            let x =
              (await s.storage?.getItem(this.requestedChainsStorageKey)) ?? [];
            return [...new Set(x)];
          },
          async isChainsStale() {
            if (!es) return !1;
            let x = s.chains.map((s) => s.id),
              W = this.getNamespaceChainsIds();
            if (W.length && !W.some((s) => x.includes(s))) return !1;
            let X = await this.getRequestedChainsIds();
            return !x.every((s) => X.includes(Number(s)));
          },
          async setRequestedChainsIds(x) {
            await s.storage?.setItem(this.requestedChainsStorageKey, x);
          },
          get requestedChainsStorageKey() {
            return `${this.id}.requestedChains`;
          },
        });
      }
      (oI.styles = oT),
        (oI = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([(0, tY.customElement)("w3m-siwx-sign-message-thumbnails")], oI)),
        (walletConnect.type = "walletConnect");
      let oP = (0, re.sj)({ pendingTransactions: 0 }),
        oR = {
          state: oP,
          subscribeKey: (s, x) => (0, rt.VW)(oP, s, x),
          increase(s) {
            oP[s] += 1;
          },
          decrease(s) {
            oP[s] -= 1;
          },
          reset(s) {
            oP[s] = 0;
          },
        },
        oN = { enable: !1, pollingInterval: 3e4 };
      W(64244), W(17672), W(9169), W(85956), W(11517);
      let oO = "8f3c1f5b3515a26940ff6198eb69f09e",
        oM = [eP.R],
        oD = new (class extends AdapterBlueprint {
          constructor(s) {
            super({
              projectId: s.projectId,
              networks: t9.extendCaipNetworks(s.networks, {
                projectId: s.projectId,
                customNetworkImageUrls: {},
                customRpcChainIds: s.transports
                  ? Object.keys(s.transports).map(Number)
                  : [],
              }),
            }),
              (this.adapterType = "wagmi"),
              (this.pendingTransactionsFilter = {
                ...oN,
                ...(s.pendingTransactionsFilter ?? {}),
              }),
              (this.namespace = tV.bq.CHAIN.EVM),
              this.createConfig({
                ...s,
                networks: t9.extendCaipNetworks(s.networks, {
                  projectId: s.projectId,
                  customNetworkImageUrls: {},
                  customRpcChainIds: s.transports
                    ? Object.keys(s.transports).map(Number)
                    : [],
                }),
                projectId: s.projectId,
              }),
              this.setupWatchers();
          }
          async getAccounts(s) {
            let x = this.getWagmiConnector(s.id);
            if (!x) return { accounts: [] };
            if (x.id === tV.bq.CONNECTOR_ID.AUTH) {
              let s = x.provider,
                { address: W, accounts: X } = await s.connect();
              return Promise.resolve({
                accounts: (X || [{ address: W, type: "eoa" }]).map((s) =>
                  tH.j1.createAccount("eip155", s.address, s.type)
                ),
              });
            }
            let { addresses: W, address: X } = (0, td.D)(this.wagmiConfig);
            return Promise.resolve({
              accounts: (W || [X])?.map((s) =>
                tH.j1.createAccount("eip155", s || "", "eoa")
              ),
            });
          }
          getWagmiConnector(s) {
            return this.wagmiConfig.connectors.find((x) => x.id === s);
          }
          createConfig(s) {
            (this.caipNetworks = s.networks),
              (this.wagmiChains = this.caipNetworks.filter(
                (s) => s.chainNamespace === tV.bq.CHAIN.EVM
              ));
            let x = this.wagmiChains.map((s) => [s.id, t9.getViemTransport(s)]);
            Object.entries(s.transports ?? {}).forEach(([s, W]) => {
              let X = x.findIndex(([x]) => x === Number(s));
              -1 === X ? x.push([Number(s), W]) : (x[X] = [Number(s), W]);
            });
            let W = Object.fromEntries(x),
              ee = [...(s.connectors ?? [])];
            this.wagmiConfig = (function (s) {
              let x;
              let {
                  multiInjectedProviderDiscovery: W = !0,
                  storage: ee = createStorage({
                    storage: (function () {
                      let s =
                        "undefined" != typeof window && window.localStorage
                          ? window.localStorage
                          : tb;
                      return {
                        getItem: (x) => s.getItem(x),
                        removeItem(x) {
                          s.removeItem(x);
                        },
                        setItem(x, W) {
                          try {
                            s.setItem(x, W);
                          } catch {}
                        },
                      };
                    })(),
                  }),
                  syncConnectedChain: et = !0,
                  ssr: er = !1,
                  ...ei
                } = s,
                eo =
                  "undefined" != typeof window && W
                    ? (function () {
                        let s = new Set(),
                          x = [],
                          request = () =>
                            (function (s) {
                              if ("undefined" == typeof window) return;
                              let handler = (x) => s(x.detail);
                              return (
                                window.addEventListener(
                                  "eip6963:announceProvider",
                                  handler
                                ),
                                window.dispatchEvent(
                                  new CustomEvent("eip6963:requestProvider")
                                ),
                                () =>
                                  window.removeEventListener(
                                    "eip6963:announceProvider",
                                    handler
                                  )
                              );
                            })((W) => {
                              x.some(({ info: s }) => s.uuid === W.info.uuid) ||
                                ((x = [...x, W]),
                                s.forEach((s) => s(x, { added: [W] })));
                            }),
                          W = request();
                        return {
                          _listeners: () => s,
                          clear() {
                            s.forEach((s) => s([], { removed: [...x] })),
                              (x = []);
                          },
                          destroy() {
                            this.clear(), s.clear(), W?.();
                          },
                          findProvider: ({ rdns: s }) =>
                            x.find((x) => x.info.rdns === s),
                          getProviders: () => x,
                          reset() {
                            this.clear(), W?.(), (W = request());
                          },
                          subscribe: (W, { emitImmediately: X } = {}) => (
                            s.add(W), X && W(x, { added: x }), () => s.delete(W)
                          ),
                        };
                      })()
                    : void 0,
                ea = vanilla_createStore(() => ei.chains),
                es = vanilla_createStore(() => {
                  let s = [],
                    x = new Set();
                  for (let W of ei.connectors ?? []) {
                    let X = setup(W);
                    if ((s.push(X), !er && X.rdns)) {
                      let s = "string" == typeof X.rdns ? [X.rdns] : X.rdns;
                      for (let W of s) x.add(W);
                    }
                  }
                  if (!er && eo) {
                    let W = eo.getProviders();
                    for (let X of W)
                      x.has(X.info.rdns) ||
                        s.push(setup(providerDetailToConnector(X)));
                  }
                  return s;
                });
              function setup(s) {
                var x;
                let W =
                    ((x = (function (s = 11) {
                      if (!X || tv + s > 512) {
                        (X = ""), (tv = 0);
                        for (let s = 0; s < 256; s++)
                          X += ((256 + 256 * Math.random()) | 0)
                            .toString(16)
                            .substring(1);
                      }
                      return X.substring(tv, tv++ + s);
                    })()),
                    new Emitter(x)),
                  et = {
                    ...s({
                      emitter: W,
                      chains: ea.getState(),
                      storage: ee,
                      transports: ei.transports,
                    }),
                    emitter: W,
                    uid: W.uid,
                  };
                return W.on("connect", connect), et.setup?.(), et;
              }
              function providerDetailToConnector(s) {
                let { info: x } = s,
                  W = s.provider;
                return injected({ target: { ...x, id: x.rdns, provider: W } });
              }
              let el = new Map();
              function getInitialState() {
                return {
                  chainId: ea.getState()[0].id,
                  connections: new Map(),
                  current: null,
                  status: "disconnected",
                };
              }
              let ec = "0.0.0-canary-";
              x = ty.i.startsWith(ec)
                ? Number.parseInt(ty.i.replace(ec, ""))
                : Number.parseInt(ty.i.split(".")[0] ?? "0");
              let eu = vanilla_createStore(
                subscribeWithSelector(
                  ee
                    ? persist(getInitialState, {
                        migrate(s, W) {
                          if (W === x) return s;
                          let X = getInitialState(),
                            ee = validatePersistedChainId(s, X.chainId);
                          return { ...X, chainId: ee };
                        },
                        name: "store",
                        partialize: (s) => ({
                          connections: {
                            __type: "Map",
                            value: Array.from(s.connections.entries()).map(
                              ([s, x]) => {
                                let {
                                  id: W,
                                  name: X,
                                  type: ee,
                                  uid: et,
                                } = x.connector;
                                return [
                                  s,
                                  {
                                    ...x,
                                    connector: {
                                      id: W,
                                      name: X,
                                      type: ee,
                                      uid: et,
                                    },
                                  },
                                ];
                              }
                            ),
                          },
                          chainId: s.chainId,
                          current: s.current,
                        }),
                        merge(s, x) {
                          "object" == typeof s &&
                            s &&
                            "status" in s &&
                            delete s.status;
                          let W = validatePersistedChainId(s, x.chainId);
                          return { ...x, ...s, chainId: W };
                        },
                        skipHydration: er,
                        storage: ee,
                        version: x,
                      })
                    : getInitialState
                )
              );
              function validatePersistedChainId(s, x) {
                return s &&
                  "object" == typeof s &&
                  "chainId" in s &&
                  "number" == typeof s.chainId &&
                  ea.getState().some((x) => x.id === s.chainId)
                  ? s.chainId
                  : x;
              }
              function change(s) {
                eu.setState((x) => {
                  let W = x.connections.get(s.uid);
                  return W
                    ? {
                        ...x,
                        connections: new Map(x.connections).set(s.uid, {
                          accounts: s.accounts ?? W.accounts,
                          chainId: s.chainId ?? W.chainId,
                          connector: W.connector,
                        }),
                      }
                    : x;
                });
              }
              function connect(s) {
                "connecting" !== eu.getState().status &&
                  "reconnecting" !== eu.getState().status &&
                  eu.setState((x) => {
                    let W = es.getState().find((x) => x.uid === s.uid);
                    return W
                      ? (W.emitter.listenerCount("connect") &&
                          W.emitter.off("connect", change),
                        W.emitter.listenerCount("change") ||
                          W.emitter.on("change", change),
                        W.emitter.listenerCount("disconnect") ||
                          W.emitter.on("disconnect", disconnect),
                        {
                          ...x,
                          connections: new Map(x.connections).set(s.uid, {
                            accounts: s.accounts,
                            chainId: s.chainId,
                            connector: W,
                          }),
                          current: s.uid,
                          status: "connected",
                        })
                      : x;
                  });
              }
              function disconnect(s) {
                eu.setState((x) => {
                  let W = x.connections.get(s.uid);
                  if (W) {
                    let s = W.connector;
                    s.emitter.listenerCount("change") &&
                      W.connector.emitter.off("change", change),
                      s.emitter.listenerCount("disconnect") &&
                        W.connector.emitter.off("disconnect", disconnect),
                      s.emitter.listenerCount("connect") ||
                        W.connector.emitter.on("connect", connect);
                  }
                  if ((x.connections.delete(s.uid), 0 === x.connections.size))
                    return {
                      ...x,
                      connections: new Map(),
                      current: null,
                      status: "disconnected",
                    };
                  let X = x.connections.values().next().value;
                  return {
                    ...x,
                    connections: new Map(x.connections),
                    current: X.connector.uid,
                  };
                });
              }
              return (
                eu.setState(getInitialState()),
                et &&
                  eu.subscribe(
                    ({ connections: s, current: x }) =>
                      x ? s.get(x)?.chainId : void 0,
                    (s) => {
                      let x = ea.getState().some((x) => x.id === s);
                      if (x)
                        return eu.setState((x) => ({
                          ...x,
                          chainId: s ?? x.chainId,
                        }));
                    }
                  ),
                eo?.subscribe((s) => {
                  let x = new Set(),
                    W = new Set();
                  for (let s of es.getState())
                    if ((x.add(s.id), s.rdns)) {
                      let x = "string" == typeof s.rdns ? [s.rdns] : s.rdns;
                      for (let s of x) W.add(s);
                    }
                  let X = [];
                  for (let ee of s) {
                    if (W.has(ee.info.rdns)) continue;
                    let s = setup(providerDetailToConnector(ee));
                    x.has(s.id) || X.push(s);
                  }
                  (!ee || eu.persist.hasHydrated()) &&
                    es.setState((s) => [...s, ...X], !0);
                }),
                {
                  get chains() {
                    return ea.getState();
                  },
                  get connectors() {
                    return es.getState();
                  },
                  storage: ee,
                  getClient: function (s = {}) {
                    let x;
                    let W = s.chainId ?? eu.getState().chainId,
                      X = ea.getState().find((s) => s.id === W);
                    if (s.chainId && !X) throw new ts.X4();
                    {
                      let s = el.get(eu.getState().chainId);
                      if (s && !X) return s;
                      if (!X) throw new ts.X4();
                    }
                    {
                      let s = el.get(W);
                      if (s) return s;
                    }
                    if (ei.client) x = ei.client({ chain: X });
                    else {
                      let s = X.id,
                        W = ea.getState().map((s) => s.id),
                        ee = {},
                        et = Object.entries(ei);
                      for (let [x, X] of et)
                        if (
                          "chains" !== x &&
                          "client" !== x &&
                          "connectors" !== x &&
                          "transports" !== x
                        ) {
                          if ("object" == typeof X) {
                            if (s in X) ee[x] = X[s];
                            else {
                              let s = W.some((s) => s in X);
                              if (s) continue;
                              ee[x] = X;
                            }
                          } else ee[x] = X;
                        }
                      x = (0, th.e)({
                        ...ee,
                        chain: X,
                        batch: ee.batch ?? { multicall: !0 },
                        transport: (x) =>
                          ei.transports[s]({ ...x, connectors: es }),
                      });
                    }
                    return el.set(W, x), x;
                  },
                  get state() {
                    return eu.getState();
                  },
                  setState(s) {
                    let x;
                    x = "function" == typeof s ? s(eu.getState()) : s;
                    let W = getInitialState();
                    "object" != typeof x && (x = W);
                    let X = Object.keys(W).some((s) => !(s in x));
                    X && (x = W), eu.setState(x, !0);
                  },
                  subscribe: (s, x, W) =>
                    eu.subscribe(
                      s,
                      x,
                      W ? { ...W, fireImmediately: W.emitImmediately } : void 0
                    ),
                  _internal: {
                    mipd: eo,
                    store: eu,
                    ssr: !!er,
                    syncConnectedChain: et,
                    transports: ei.transports,
                    chains: {
                      setState(s) {
                        let x = "function" == typeof s ? s(ea.getState()) : s;
                        if (0 !== x.length) return ea.setState(x, !0);
                      },
                      subscribe: (s) => ea.subscribe(s),
                    },
                    connectors: {
                      providerDetailToConnector,
                      setup: setup,
                      setState: (s) =>
                        es.setState(
                          "function" == typeof s ? s(es.getState()) : s,
                          !0
                        ),
                      subscribe: (s) => es.subscribe(s),
                    },
                    events: { change, connect, disconnect },
                  },
                }
              );
            })({
              ...s,
              chains: this.wagmiChains,
              transports: W,
              connectors: ee,
            });
          }
          setupWatchPendingTransactions() {
            if (
              !this.pendingTransactionsFilter.enable ||
              this.unwatchPendingTransactions
            )
              return;
            this.unwatchPendingTransactions = (function (s, x) {
              let W, X;
              let {
                  syncConnectedChain: ee = s._internal.syncConnectedChain,
                  ...et
                } = x,
                listener = (x) => {
                  W && W();
                  let X = s.getClient({ chainId: x }),
                    ee = (0, tC.s)(X, t_.O, "watchPendingTransactions");
                  return (W = ee(et));
                },
                er = listener(x.chainId);
              return (
                ee &&
                  !x.chainId &&
                  (X = s.subscribe(
                    ({ chainId: s }) => s,
                    async (s) => listener(s)
                  )),
                () => {
                  er?.(), X?.();
                }
              );
            })(this.wagmiConfig, {
              pollingInterval: this.pendingTransactionsFilter.pollingInterval,
              onError: () => {},
              onTransactions: () => {
                this.emit("pendingTransactions"),
                  oR.increase("pendingTransactions");
              },
            });
            let s = oR.subscribeKey("pendingTransactions", (x) => {
              x >= tV.bq.LIMITS.PENDING_TRANSACTIONS &&
                (this.unwatchPendingTransactions?.(), s());
            });
          }
          setupWatchers() {
            (0, tx.u)(this.wagmiConfig, {
              onChange: (s, x) => {
                "disconnected" === s.status &&
                  x.address &&
                  this.emit("disconnect"),
                  "connected" === s.status &&
                    ((s.address !== x?.address || "connected" !== x.status) &&
                      (this.setupWatchPendingTransactions(),
                      this.emit("accountChanged", { address: s.address })),
                    s.chainId !== x?.chainId &&
                      this.emit("switchNetwork", {
                        address: s.address,
                        chainId: s.chainId,
                      }));
              },
            }),
              (function (s, x) {
                let { onChange: W } = x;
                s.subscribe(() => getConnections(s), W, { equalityFn: tE.v });
              })(this.wagmiConfig, {
                onChange: (s) => {
                  0 === s.length && this.emit("disconnect");
                },
              });
          }
          addWagmiConnectors(s, x) {
            let W = [];
            !1 !== s.enableCoinbase &&
              W.push(
                coinbaseWallet({
                  version: "4",
                  appName: s.metadata?.name ?? "Unknown",
                  appLogoUrl: s.metadata?.icons[0] ?? "Unknown",
                  preference: s.coinbasePreference ?? "all",
                })
              ),
              !1 !== s.enableWalletConnect &&
                W.push(walletConnect(s, x, this.caipNetworks)),
              !1 !== s.enableInjected &&
                W.push(injected({ shimDisconnect: !0 }));
            let X =
                s.features?.email === void 0
                  ? tH.bq.DEFAULT_FEATURES.email
                  : s.features?.email,
              ee = s.features?.socials
                ? s.features?.socials?.length > 0
                : tH.bq.DEFAULT_FEATURES.socials;
            (X || ee) &&
              W.push(
                (function (s) {
                  let x = [];
                  function parseChainId(s) {
                    return tV.p1.parseEvmChainId(s) || 1;
                  }
                  return (W) => ({
                    id: tV.bq.CONNECTOR_ID.AUTH,
                    name: tV.bq.CONNECTOR_NAMES.AUTH,
                    type: "AUTH",
                    chain: tV.bq.CHAIN.EVM,
                    async connect(W = {}) {
                      let X = await this.getProvider(),
                        ee = W.chainId;
                      if (W.isReconnecting) {
                        let x = tV.p1.parseEvmChainId(
                            X.getLastUsedChainId() || ""
                          ),
                          W = s.chains?.[0].id;
                        if (!(ee = x || W))
                          throw Error("ChainId not found in provider");
                      }
                      let {
                        address: et,
                        chainId: er,
                        accounts: ei,
                      } = await X.connect({
                        chainId: ee,
                        preferredAccountType:
                          tH.OptionsController.state.defaultAccountTypes.eip155,
                      });
                      (x = ei?.map((s) => s.address) || [et]),
                        await X.getSmartAccountEnabledNetworks();
                      let eo = parseChainId(er);
                      return {
                        accounts: x,
                        account: et,
                        chainId: eo,
                        chain: { id: eo, unsuported: !1 },
                      };
                    },
                    async disconnect() {
                      let s = await this.getProvider();
                      await s.disconnect();
                    },
                    getAccounts: () =>
                      x?.length
                        ? (W.emitter.emit("change", { accounts: x }),
                          Promise.resolve(x))
                        : Promise.resolve([]),
                    async getProvider() {
                      return (
                        this.provider ||
                          (this.provider =
                            W3mFrameProviderSingleton.getInstance({
                              projectId: s.options.projectId,
                              enableLogger: s.options.enableAuthLogger,
                              onTimeout: () => {
                                tH.AlertController.open(
                                  t0.ALERT_ERRORS.SOCIALS_TIMEOUT,
                                  "error"
                                );
                              },
                            })),
                        Promise.resolve(this.provider)
                      );
                    },
                    async getChainId() {
                      let s = await this.getProvider(),
                        { chainId: x } = await s.getChainId();
                      return parseChainId(x);
                    },
                    async isAuthorized() {
                      let s = await this.getProvider();
                      return Promise.resolve(s.getLoginEmailUsed());
                    },
                    async switchChain({ chainId: s }) {
                      try {
                        let X = W.chains.find((x) => x.id === s);
                        if (!X)
                          throw new tc.x3(
                            Error("chain not found on connector.")
                          );
                        let ee = await this.getProvider(),
                          et = await ee.connect({
                            chainId: s,
                            preferredAccountType:
                              tH.OptionsController.state.defaultAccountTypes
                                .eip155,
                          });
                        return (
                          (x = et?.accounts?.map((s) => s.address) || [
                            et.address,
                          ]),
                          W.emitter.emit("change", {
                            chainId: Number(s),
                            accounts: x,
                          }),
                          X
                        );
                      } catch (s) {
                        if (s instanceof Error) throw new tc.x3(s);
                        throw s;
                      }
                    },
                    onAccountsChanged(s) {
                      0 === s.length
                        ? this.onDisconnect()
                        : W.emitter.emit("change", { accounts: s.map(tl.K) });
                    },
                    onChainChanged(s) {
                      let x = Number(s);
                      W.emitter.emit("change", { chainId: x });
                    },
                    async onDisconnect(s) {
                      let x = await this.getProvider();
                      await x.disconnect();
                    },
                  });
                })({
                  chains: this.wagmiChains,
                  options: {
                    projectId: s.projectId,
                    enableAuthLogger: s.enableAuthLogger,
                  },
                })
              ),
              W.forEach((s) => {
                let x = this.wagmiConfig._internal.connectors.setup(s);
                this.wagmiConfig._internal.connectors.setState((s) => [
                  ...s,
                  x,
                ]);
              });
          }
          async signMessage(s) {
            try {
              let x = await signMessage_signMessage(this.wagmiConfig, {
                message: s.message,
                account: s.address,
              });
              return { signature: x };
            } catch (s) {
              throw Error("WagmiAdapter:signMessage - Sign message failed");
            }
          }
          async sendTransaction(s) {
            let { chainId: x } = (0, td.D)(this.wagmiConfig),
              W = {
                account: s.address,
                to: s.to,
                value: s.value,
                gas: s.gas,
                gasPrice: s.gasPrice,
                data: s.data,
                chainId: x,
                type: "legacy",
              };
            await prepareTransactionRequest_prepareTransactionRequest(
              this.wagmiConfig,
              W
            );
            let X = await (0, tP.T)(this.wagmiConfig, W);
            return (
              await (0, tR.e)(this.wagmiConfig, { hash: X, timeout: 25e3 }),
              { hash: X }
            );
          }
          async writeContract(s) {
            let { caipNetwork: x, ...W } = s,
              X = Number(tV.p1.caipNetworkIdToNumber(x.caipNetworkId)),
              ee = await (0, tN.n)(this.wagmiConfig, {
                chain: this.wagmiChains?.[X],
                chainId: X,
                address: W.tokenAddress,
                account: W.fromAddress,
                abi: W.abi,
                functionName: W.method,
                args: W.args,
              });
            return { hash: ee };
          }
          async getEnsAddress(s) {
            let { name: x, caipNetwork: W } = s;
            try {
              if (!this.wagmiConfig)
                throw Error(
                  "networkControllerClient:getApprovedCaipNetworksData - wagmiConfig is undefined"
                );
              let s = !1,
                ee = !1;
              if (
                ((0, tV.oL)(x) && (ee = (await ru.resolveReownName(x)) || !1),
                1 === W.id)
              ) {
                var X;
                s = await (function (s, x) {
                  let { chainId: W, ...X } = x,
                    ee = s.getClient({ chainId: W }),
                    et = (0, tC.s)(ee, tO.O, "getEnsAddress");
                  return et(X);
                })(this.wagmiConfig, {
                  name: (X = (function (s, x, W) {
                    if (!s) return [];
                    init();
                    let X = 0;
                    return s.split(".").map((s) => {
                      let ee = (function (s) {
                          let x = [];
                          for (let W = 0, X = s.length; W < X; ) {
                            let X = s.codePointAt(W);
                            (W += X < 65536 ? 1 : 2), x.push(X);
                          }
                          return x;
                        })(s),
                        et = { input: ee, offset: X };
                      X += ee.length + 1;
                      try {
                        let s,
                          X = (et.tokens = (function (s, x, W) {
                            let X = [],
                              ee = [];
                            for (s = s.slice().reverse(); s.length; ) {
                              let et = (function (s, x) {
                                let W,
                                  X = eg,
                                  ee = s.length;
                                for (; ee && (X = X.get(s[--ee])); ) {
                                  let { V: et } = X;
                                  et &&
                                    ((W = et),
                                    x && x.push(...s.slice(ee).reverse()),
                                    (s.length = ee));
                                }
                                return W;
                              })(s);
                              if (et)
                                ee.length && (X.push(x(ee)), (ee = [])),
                                  X.push(W(et));
                              else {
                                let x = s.pop();
                                if (ep.has(x)) ee.push(x);
                                else {
                                  let s = eo.get(x);
                                  if (s) ee.push(...s);
                                  else if (!ea.has(x))
                                    throw error_disallowed(x);
                                }
                              }
                            }
                            return ee.length && X.push(x(ee)), X;
                          })(ee, x, W)),
                          er = X.length;
                        if (!er) throw Error("empty label");
                        let ei = (et.output = X.flat());
                        if (
                          ((function (s) {
                            for (let x = s.lastIndexOf(95); x > 0; )
                              if (95 !== s[--x])
                                throw Error("underscore allowed only at start");
                          })(ei),
                          !(et.emoji = er > 1 || X[0].is_emoji) &&
                            ei.every((s) => s < 128))
                        )
                          (function (s) {
                            if (s.length >= 4 && 45 == s[2] && 45 == s[3])
                              throw Error(
                                `invalid label extension: "${str_from_cps(
                                  s.slice(0, 4)
                                )}"`
                              );
                          })(ei),
                            (s = "ASCII");
                        else {
                          let x = X.flatMap((s) => (s.is_emoji ? [] : s));
                          if (x.length) {
                            if (es.has(ei[0]))
                              throw error_placement("leading combining mark");
                            for (let s = 1; s < er; s++) {
                              let x = X[s];
                              if (!x.is_emoji && es.has(x[0]))
                                throw error_placement(
                                  `emoji + combining mark: "${str_from_cps(
                                    X[s - 1]
                                  )} + ${safe_str_from_cps([x[0]])}"`
                                );
                            }
                            !(function (s) {
                              let x = s[0],
                                W = tz.get(x);
                              if (W) throw error_placement(`leading ${W}`);
                              let X = s.length,
                                ee = -1;
                              for (let et = 1; et < X; et++) {
                                x = s[et];
                                let X = tz.get(x);
                                if (X) {
                                  if (ee == et)
                                    throw error_placement(`${W} + ${X}`);
                                  (ee = et + 1), (W = X);
                                }
                              }
                              if (ee == X)
                                throw error_placement(`trailing ${W}`);
                            })(ei);
                            let W = Array_from(new Set(x)),
                              [ee] = (function (s) {
                                let x = eu;
                                for (let W of s) {
                                  let s = x.filter((s) => group_has_cp(s, W));
                                  if (!s.length) {
                                    if (eu.some((s) => group_has_cp(s, W)))
                                      throw error_group_member(x[0], W);
                                    throw error_disallowed(W);
                                  }
                                  if (((x = s), 1 == s.length)) break;
                                }
                                return x;
                              })(W);
                            (function (s, x) {
                              for (let W of x)
                                if (!group_has_cp(s, W))
                                  throw error_group_member(s, W);
                              if (s.M) {
                                let s = decomposed(x).map(unpack_cp);
                                for (let x = 1, W = s.length; x < W; x++)
                                  if (el.has(s[x])) {
                                    let X = x + 1;
                                    for (
                                      let ee;
                                      X < W && el.has((ee = s[X]));
                                      X++
                                    )
                                      for (let W = x; W < X; W++)
                                        if (s[W] == ee)
                                          throw Error(
                                            `duplicate non-spacing marks: ${quoted_cp(
                                              ee
                                            )}`
                                          );
                                    if (X - x > 4)
                                      throw Error(
                                        `excessive non-spacing marks: ${bidi_qq(
                                          safe_str_from_cps(s.slice(x - 1, X))
                                        )} (${X - x}/4)`
                                      );
                                    x = X;
                                  }
                              }
                            })(ee, x),
                              (function (s, x) {
                                let W;
                                let X = [];
                                for (let s of x) {
                                  let x = eh.get(s);
                                  if (1 === x) return;
                                  if (x) {
                                    let X = x.M.get(s);
                                    if (
                                      !(W = W
                                        ? W.filter((s) => X.has(s))
                                        : Array_from(X)).length
                                    )
                                      return;
                                  } else X.push(s);
                                }
                                if (W) {
                                  for (let x of W)
                                    if (X.every((s) => group_has_cp(x, s)))
                                      throw Error(
                                        `whole-script confusable: ${s.N}/${x.N}`
                                      );
                                }
                              })(ee, W),
                              (s = ee.N);
                          } else s = "Emoji";
                        }
                        et.type = s;
                      } catch (s) {
                        et.error = s;
                      }
                      return et;
                    });
                  })(x, nfc, filter_fe0f))
                    .map(({ input: s, error: x, output: W }) => {
                      if (x) {
                        let W = x.message;
                        throw Error(
                          1 == X.length
                            ? W
                            : `Invalid label ${bidi_qq(
                                safe_str_from_cps(s, 63)
                              )}: ${W}`
                        );
                      }
                      return str_from_cps(W);
                    })
                    .join("."),
                  chainId: W.id,
                });
              }
              return { address: s || ee || !1 };
            } catch {
              return { address: !1 };
            }
          }
          async estimateGas(s) {
            try {
              let x = await estimateGas_estimateGas(this.wagmiConfig, {
                account: s.address,
                to: s.to,
                data: s.data,
                type: "legacy",
              });
              return { gas: x };
            } catch (s) {
              throw Error("WagmiAdapter:estimateGas - error estimating gas");
            }
          }
          parseUnits(s) {
            return (0, t$.v)(s.value, s.decimals);
          }
          formatUnits(s) {
            return (0, tF.b)(s.value, s.decimals);
          }
          async addWagmiConnector(s, x) {
            if (
              s.id === tV.bq.CONNECTOR_ID.AUTH ||
              s.id === tV.bq.CONNECTOR_ID.WALLET_CONNECT
            )
              return;
            let W = await s.getProvider().catch(() => void 0);
            this.addConnector({
              id: s.id,
              explorerId: tJ.ConnectorExplorerIds[s.id],
              imageUrl: x?.connectorImages?.[s.id] ?? s.icon,
              name: tJ.ConnectorNamesMap[s.id] ?? s.name,
              imageId: tJ.ConnectorImageIds[s.id],
              type: tJ.ConnectorTypesMap[s.type] ?? "EXTERNAL",
              info:
                s.id === tV.bq.CONNECTOR_ID.INJECTED ? void 0 : { rdns: s.id },
              provider: W,
              chain: this.namespace,
              chains: [],
            });
          }
          async syncConnectors(s, x) {
            !(function (s, x) {
              let { onChange: W } = x;
              s._internal.connectors.subscribe((s, x) => {
                W(Object.values(s), x);
              });
            })(this.wagmiConfig, {
              onChange: (x) => x.forEach((x) => this.addWagmiConnector(x, s)),
            }),
              this.addWagmiConnectors(s, x),
              await Promise.all(
                this.wagmiConfig.connectors.map((x) =>
                  this.addWagmiConnector(x, s)
                )
              );
          }
          async syncConnection(s) {
            let { id: x } = s,
              W = getConnections(this.wagmiConfig),
              X = W.find((s) => s.connector.id === x),
              ee = this.getWagmiConnector(x),
              et = await ee?.getProvider();
            return {
              chainId: Number(X?.chainId),
              address: X?.accounts[0],
              provider: et,
              type: X?.connector.type,
              id: X?.connector.id,
            };
          }
          async connectWalletConnect(s) {
            let x = this.getWalletConnectConnector(),
              W = await x.authenticate();
            if (W)
              return {
                clientId: await x.provider.client.core.crypto.getClientId(),
              };
            let X = this.getWagmiConnector("walletConnect");
            if (!X)
              throw Error(
                "UniversalAdapter:connectWalletConnect - connector not found"
              );
            return (
              await connect(this.wagmiConfig, {
                connector: X,
                chainId: s ? Number(s) : void 0,
              }),
              { clientId: await x.provider.client.core.crypto.getClientId() }
            );
          }
          async connect(s) {
            let { id: x, provider: W, type: X, info: ee, chainId: et } = s,
              er = this.getWagmiConnector(x);
            if (!er)
              throw Error(
                "connectionControllerClient:connectExternal - connector is undefined"
              );
            W &&
              ee &&
              er.id === tV.bq.CONNECTOR_ID.EIP6963 &&
              er.setEip6963Wallet?.({ provider: W, info: ee });
            let ei = await connect(this.wagmiConfig, {
              connector: er,
              chainId: et ? Number(et) : void 0,
            });
            return {
              address: ei.accounts[0],
              chainId: ei.chainId,
              provider: W,
              type: X,
              id: x,
            };
          }
          async reconnect(s) {
            let { id: x } = s,
              W = this.getWagmiConnector(x);
            if (!W)
              throw Error(
                "connectionControllerClient:connectExternal - connector is undefined"
              );
            await (0, tD.G)(this.wagmiConfig, { connectors: [W] });
          }
          async getBalance(s) {
            let x = this.caipNetworks?.find((x) => x.id === s.chainId);
            if (x && this.wagmiConfig) {
              let W = Number(s.chainId),
                X = await (0, tB.s)(this.wagmiConfig, {
                  address: s.address,
                  chainId: W,
                  token: s.tokens?.[x.caipNetworkId]?.address,
                });
              return { balance: X.formatted, symbol: X.symbol };
            }
            return { balance: "", symbol: "" };
          }
          async getProfile(s) {
            let x = s.chainId,
              W = await (function (s, x) {
                let { chainId: W, ...X } = x,
                  ee = s.getClient({ chainId: W }),
                  et = (0, tC.s)(ee, tL.w, "getEnsName");
                return et(X);
              })(this.wagmiConfig, { address: s.address, chainId: x });
            if (W) {
              let s = await (function (s, x) {
                let { chainId: W, ...X } = x,
                  ee = s.getClient({ chainId: W }),
                  et = (0, tC.s)(ee, tj.r, "getEnsAvatar");
                return et(X);
              })(this.wagmiConfig, { name: W, chainId: x });
              return { profileName: W, profileImage: s ?? void 0 };
            }
            return { profileName: void 0, profileImage: void 0 };
          }
          getWalletConnectProvider() {
            return this.getWagmiConnector("walletConnect")?.provider;
          }
          async disconnect() {
            let s = getConnections(this.wagmiConfig);
            await Promise.all(
              s.map(async (s) => {
                let x = this.getWagmiConnector(s.connector.id);
                x && (await (0, tU.z)(this.wagmiConfig, { connector: x }));
              })
            );
          }
          async switchNetwork(s) {
            await switchChain(this.wagmiConfig, { chainId: s.caipNetwork.id });
          }
          async getCapabilities(s) {
            if (!this.wagmiConfig)
              throw Error(
                "connectionControllerClient:getCapabilities - wagmiConfig is undefined"
              );
            let x = getConnections(this.wagmiConfig),
              W = x[0],
              X = W ? this.getWagmiConnector(W.connector.id) : null;
            if (!X)
              throw Error(
                "connectionControllerClient:getCapabilities - connector is undefined"
              );
            let ee = await X.getProvider();
            if (!ee)
              throw Error(
                "connectionControllerClient:getCapabilities - provider is undefined"
              );
            let et = ee.session?.sessionProperties?.capabilities;
            if (et) {
              let x = (function (s) {
                  try {
                    return JSON.parse(s);
                  } catch (s) {
                    throw Error("Error parsing wallet capabilities");
                  }
                })(et),
                W = x[s];
              if (W) return W;
            }
            return await ee.request({
              method: "wallet_getCapabilities",
              params: [s],
            });
          }
          async grantPermissions(s) {
            if (!this.wagmiConfig)
              throw Error(
                "connectionControllerClient:grantPermissions - wagmiConfig is undefined"
              );
            let x = getConnections(this.wagmiConfig),
              W = x[0],
              X = W ? this.getWagmiConnector(W.connector.id) : null;
            if (!X)
              throw Error(
                "connectionControllerClient:grantPermissions - connector is undefined"
              );
            let ee = await X.getProvider();
            if (!ee)
              throw Error(
                "connectionControllerClient:grantPermissions - provider is undefined"
              );
            return ee.request({ method: "wallet_grantPermissions", params: s });
          }
          async revokePermissions(s) {
            if (!this.wagmiConfig)
              throw Error(
                "connectionControllerClient:revokePermissions - wagmiConfig is undefined"
              );
            let x = getConnections(this.wagmiConfig),
              W = x[0],
              X = W ? this.getWagmiConnector(W.connector.id) : null;
            if (!X)
              throw Error(
                "connectionControllerClient:revokePermissions - connector is undefined"
              );
            let ee = await X.getProvider();
            if (!ee)
              throw Error(
                "connectionControllerClient:revokePermissions - provider is undefined"
              );
            return ee.request({
              method: "wallet_revokePermissions",
              params: s,
            });
          }
          setUniversalProvider(s) {
            this.addConnector(
              new WalletConnectConnector({
                provider: s,
                caipNetworks: this.caipNetworks || [],
                namespace: "eip155",
              })
            );
          }
        })({
          storage: createStorage({
            storage: {
              getItem(s) {
                if ("undefined" == typeof window) return null;
                let x = (function (s, x) {
                  let W = s.split("; ").find((s) => s.startsWith(`${x}=`));
                  if (W) return W.substring(x.length + 1);
                })(document.cookie, s);
                return x ?? null;
              },
              setItem(s, x) {
                "undefined" != typeof window &&
                  (document.cookie = `${s}=${x};path=/;samesite=Lax`);
              },
              removeItem(s) {
                "undefined" != typeof window &&
                  (document.cookie = `${s}=;max-age=-1;path=/`);
              },
            },
          }),
          ssr: !0,
          projectId: oO,
          networks: oM,
        }),
        oB = oD.wagmiConfig,
        oL =
          ((ew = {
            adapters: [oD],
            projectId: oO,
            networks: [eP.R],
            defaultNetwork: eP.R,
            features: { email: !1, socials: !1 },
          }),
          em ||
            (em = new (class client_AppKit {
              constructor(s) {
                (this.chainNamespaces = []),
                  (this.initPromise = void 0),
                  (this.reportedAlertErrors = {}),
                  (this.setStatus = (s, x) => {
                    tH.MO.setConnectionStatus(s),
                      tH.AccountController.setStatus(s, x);
                  }),
                  (this.getIsConnectedState = () =>
                    !!tH.RY.state.activeCaipAddress),
                  (this.setAllAccounts = (s, x) => {
                    tH.AccountController.setAllAccounts(s, x),
                      tH.OptionsController.setHasMultipleAddresses(
                        s?.length > 1
                      );
                  }),
                  (this.addAddressLabel = (s, x, W) => {
                    tH.AccountController.addAddressLabel(s, x, W);
                  }),
                  (this.removeAddressLabel = (s, x) => {
                    tH.AccountController.removeAddressLabel(s, x);
                  }),
                  (this.getCaipAddress = (s) =>
                    tH.RY.state.activeChain !== s && s
                      ? tH.RY.getAccountProp("caipAddress", s)
                      : tH.RY.state.activeCaipAddress),
                  (this.getAddressByChainNamespace = (s) =>
                    tH.RY.getAccountProp("address", s)),
                  (this.getAddress = (s) =>
                    tH.RY.state.activeChain !== s && s
                      ? tH.RY.getAccountProp("address", s)
                      : tH.AccountController.state.address),
                  (this.getProvider = (s) => ra.getProvider(s)),
                  (this.getProviderType = (s) => ra.state.providerIds[s]),
                  (this.getPreferredAccountType = () =>
                    tH.AccountController.state.preferredAccountType),
                  (this.setCaipAddress = (s, x) => {
                    tH.AccountController.setCaipAddress(s, x);
                  }),
                  (this.setBalance = (s, x, W) => {
                    tH.AccountController.setBalance(s, x, W);
                  }),
                  (this.setProfileName = (s, x) => {
                    tH.AccountController.setProfileName(s, x);
                  }),
                  (this.setProfileImage = (s, x) => {
                    tH.AccountController.setProfileImage(s, x);
                  }),
                  (this.setUser = (s) => {
                    tH.AccountController.setUser(s);
                  }),
                  (this.resetAccount = (s) => {
                    tH.AccountController.resetAccount(s);
                  }),
                  (this.setCaipNetwork = (s) => {
                    tH.RY.setActiveCaipNetwork(s);
                  }),
                  (this.getCaipNetwork = (s) =>
                    s
                      ? tH.RY.getRequestedCaipNetworks(s).filter(
                          (x) => x.chainNamespace === s
                        )?.[0]
                      : tH.RY.state.activeCaipNetwork ||
                        this.defaultCaipNetwork),
                  (this.getCaipNetworkId = () => {
                    let s = this.getCaipNetwork();
                    if (s) return s.id;
                  }),
                  (this.getCaipNetworks = (s) =>
                    tH.RY.getRequestedCaipNetworks(s)),
                  (this.getActiveChainNamespace = () =>
                    tH.RY.state.activeChain),
                  (this.setRequestedCaipNetworks = (s, x) => {
                    tH.RY.setRequestedCaipNetworks(s, x);
                  }),
                  (this.getApprovedCaipNetworkIds = () =>
                    tH.RY.getAllApprovedCaipNetworkIds()),
                  (this.setApprovedCaipNetworksData = (s) =>
                    tH.RY.setApprovedCaipNetworksData(s)),
                  (this.resetNetwork = (s) => {
                    tH.RY.resetNetwork(s);
                  }),
                  (this.setConnectors = (s) => {
                    let x = [...tH.ConnectorController.getConnectors(), ...s];
                    tH.ConnectorController.setConnectors(x);
                  }),
                  (this.addConnector = (s) => {
                    tH.ConnectorController.addConnector(s);
                  }),
                  (this.getConnectors = () =>
                    tH.ConnectorController.getConnectors()),
                  (this.resetWcConnection = () => {
                    tH.ConnectionController.resetWcConnection();
                  }),
                  (this.fetchIdentity = (s) => tH.Lr.fetchIdentity(s)),
                  (this.setAddressExplorerUrl = (s, x) => {
                    tH.AccountController.setAddressExplorerUrl(s, x);
                  }),
                  (this.setSmartAccountDeployed = (s, x) => {
                    tH.AccountController.setSmartAccountDeployed(s, x);
                  }),
                  (this.setConnectedWalletInfo = (s, x) => {
                    tH.AccountController.setConnectedWalletInfo(s, x);
                  }),
                  (this.setSmartAccountEnabledNetworks = (s, x) => {
                    tH.RY.setSmartAccountEnabledNetworks(s, x);
                  }),
                  (this.setPreferredAccountType = (s, x) => {
                    tH.AccountController.setPreferredAccountType(s, x);
                  }),
                  (this.getReownName = (s) => tH.a.getNamesForAddress(s)),
                  (this.setEIP6963Enabled = (s) => {
                    tH.OptionsController.setEIP6963Enabled(s);
                  }),
                  (this.setClientId = (s) => {
                    tH.Lr.setClientId(s);
                  }),
                  (this.getConnectorImage = (s) => tH.fz.getConnectorImage(s)),
                  (this.handleUnsafeRPCRequest = () => {
                    this.isOpen()
                      ? this.isTransactionStackEmpty() ||
                        this.redirect("ApproveTransaction")
                      : this.open({ view: "ApproveTransaction" });
                  }),
                  (this.options = s),
                  (this.version = s.sdkVersion),
                  (this.caipNetworks = this.extendCaipNetworks(s)),
                  (this.chainNamespaces = [
                    ...new Set(this.caipNetworks?.map((s) => s.chainNamespace)),
                  ]),
                  (this.defaultCaipNetwork = this.extendDefaultCaipNetwork(s)),
                  (this.chainAdapters = this.createAdapters(s.adapters)),
                  this.initialize(s);
              }
              static getInstance() {
                return this.instance;
              }
              async initialize(s) {
                this.initControllers(s),
                  await this.initChainAdapters(),
                  await this.injectModalUi(),
                  await this.syncExistingConnection();
                let { ...x } = s;
                delete x.adapters,
                  tH.Xs.sendEvent({
                    type: "track",
                    event: "INITIALIZE",
                    properties: {
                      ...x,
                      networks: s.networks.map((s) => s.id),
                      siweConfig: { options: s.siweConfig?.options || {} },
                    },
                  }),
                  tH.Ie.set({ initialized: !0 });
              }
              async open(s) {
                await this.injectModalUi(),
                  s?.uri &&
                    this.universalAdapter &&
                    tH.ConnectionController.setUri(s.uri),
                  tH.IN.open(s);
              }
              async close() {
                await this.injectModalUi(), tH.IN.close();
              }
              setLoading(s) {
                tH.IN.setLoading(s);
              }
              getError() {
                return "";
              }
              getChainId() {
                return tH.RY.state.activeCaipNetwork?.id;
              }
              switchNetwork(s) {
                let x = this.caipNetworks?.find((x) => x.id === s.id);
                if (!x) {
                  tH.AlertController.open(
                    t0.ALERT_ERRORS.SWITCH_NETWORK_NOT_FOUND,
                    "error"
                  );
                  return;
                }
                tH.RY.switchActiveNetwork(x);
              }
              getWalletProvider() {
                return tH.RY.state.activeChain
                  ? ra.state.providers[tH.RY.state.activeChain]
                  : null;
              }
              getWalletProviderType() {
                return tH.RY.state.activeChain
                  ? ra.state.providerIds[tH.RY.state.activeChain]
                  : null;
              }
              subscribeProviders(s) {
                return ra.subscribeProviders(s);
              }
              getThemeMode() {
                return tH.ThemeController.state.themeMode;
              }
              getThemeVariables() {
                return tH.ThemeController.state.themeVariables;
              }
              setThemeMode(s) {
                tH.ThemeController.setThemeMode(s),
                  (0, tY.setColorTheme)(tH.ThemeController.state.themeMode);
              }
              setTermsConditionsUrl(s) {
                tH.OptionsController.setTermsConditionsUrl(s);
              }
              setPrivacyPolicyUrl(s) {
                tH.OptionsController.setPrivacyPolicyUrl(s);
              }
              setThemeVariables(s) {
                tH.ThemeController.setThemeVariables(s),
                  (0, tY.setThemeVariables)(
                    tH.ThemeController.state.themeVariables
                  );
              }
              subscribeTheme(s) {
                return tH.ThemeController.subscribe(s);
              }
              getWalletInfo() {
                return tH.AccountController.state.connectedWalletInfo;
              }
              subscribeAccount(s) {
                let x = tH.ConnectorController.getAuthConnector();
                function updateVal() {
                  s({
                    allAccounts: tH.AccountController.state.allAccounts,
                    caipAddress: tH.RY.state.activeCaipAddress,
                    address: tH.j1.getPlainAddress(
                      tH.RY.state.activeCaipAddress
                    ),
                    isConnected: !!tH.RY.state.activeCaipAddress,
                    status: tH.AccountController.state.status,
                    embeddedWalletInfo: x
                      ? {
                          user: tH.AccountController.state.user,
                          authProvider:
                            tH.AccountController.state.socialProvider ||
                            "email",
                          accountType:
                            tH.AccountController.state.preferredAccountType,
                          isSmartAccountDeployed:
                            !!tH.AccountController.state.smartAccountDeployed,
                        }
                      : void 0,
                  });
                }
                tH.RY.subscribe(updateVal),
                  tH.AccountController.subscribe(updateVal);
              }
              subscribeNetwork(s) {
                return tH.RY.subscribe(({ activeCaipNetwork: x }) => {
                  s({
                    caipNetwork: x,
                    chainId: x?.id,
                    caipNetworkId: x?.caipNetworkId,
                  });
                });
              }
              subscribeWalletInfo(s) {
                return tH.AccountController.subscribeKey(
                  "connectedWalletInfo",
                  s
                );
              }
              subscribeShouldUpdateToAddress(s) {
                tH.AccountController.subscribeKey("shouldUpdateToAddress", s);
              }
              subscribeCaipNetworkChange(s) {
                tH.RY.subscribeKey("activeCaipNetwork", s);
              }
              getState() {
                return tH.Ie.state;
              }
              subscribeState(s) {
                return tH.Ie.subscribe(s);
              }
              showErrorMessage(s) {
                tH.SnackController.showError(s);
              }
              showSuccessMessage(s) {
                tH.SnackController.showSuccess(s);
              }
              getEvent() {
                return { ...tH.Xs.state };
              }
              subscribeEvents(s) {
                return tH.Xs.subscribe(s);
              }
              replace(s) {
                tH.RouterController.replace(s);
              }
              redirect(s) {
                tH.RouterController.push(s);
              }
              popTransactionStack(s) {
                tH.RouterController.popTransactionStack(s);
              }
              isOpen() {
                return tH.IN.state.open;
              }
              isTransactionStackEmpty() {
                return 0 === tH.RouterController.state.transactionStack.length;
              }
              isTransactionShouldReplaceView() {
                return tH.RouterController.state.transactionStack[
                  tH.RouterController.state.transactionStack.length - 1
                ]?.replace;
              }
              updateFeatures(s) {
                tH.OptionsController.setFeatures(s);
              }
              updateOptions(s) {
                let x = tH.OptionsController.state || {},
                  W = { ...x, ...s };
                tH.OptionsController.setOptions(W);
              }
              setConnectMethodsOrder(s) {
                tH.OptionsController.setConnectMethodsOrder(s);
              }
              setWalletFeaturesOrder(s) {
                tH.OptionsController.setWalletFeaturesOrder(s);
              }
              setCollapseWallets(s) {
                tH.OptionsController.setCollapseWallets(s);
              }
              setSocialsOrder(s) {
                tH.OptionsController.setSocialsOrder(s);
              }
              async disconnect() {
                await tH.ConnectionController.disconnect();
              }
              getConnectMethodsOrder() {
                return tZ.getConnectOrderMethod(
                  tH.OptionsController.state.features,
                  tH.ConnectorController.getConnectors()
                );
              }
              removeAdapter(s) {
                let x = this.getIsConnectedState(),
                  W = this.getAdapter(s);
                if (!W || !this.chainAdapters || x) return;
                let X = this.caipNetworks?.filter(
                  (x) => x.chainNamespace !== s
                );
                tH.RY.removeAdapter(s),
                  tH.ConnectorController.removeAdapter(s),
                  (this.chainNamespaces = this.chainNamespaces.filter(
                    (x) => x !== s
                  )),
                  (this.caipNetworks = X),
                  W.removeAllEventListeners(),
                  Reflect.deleteProperty(this.chainAdapters, s);
              }
              addAdapter(s, x) {
                let W = s.namespace;
                if (
                  !this.connectionControllerClient ||
                  !this.networkControllerClient ||
                  !this.chainAdapters ||
                  !W
                )
                  return;
                let X = this.extendCaipNetworks({
                  ...this.options,
                  networks: x,
                });
                (this.caipNetworks = [...(this.caipNetworks || []), ...X]),
                  this.createAdapter(s),
                  this.initChainAdapter(W),
                  tH.RY.addAdapter(
                    s,
                    {
                      connectionControllerClient:
                        this.connectionControllerClient,
                      networkControllerClient: this.networkControllerClient,
                    },
                    X
                  );
              }
              initializeOptionsController(s) {
                if (
                  (tH.OptionsController.setDebug(!1 !== s.debug), !s.projectId)
                ) {
                  tH.AlertController.open(
                    t0.ALERT_ERRORS.PROJECT_ID_NOT_CONFIGURED,
                    "error"
                  );
                  return;
                }
                tH.OptionsController.setEnableWalletConnect(
                  !1 !== s.enableWalletConnect
                ),
                  tH.OptionsController.setEnableWalletGuide(
                    !1 !== s.enableWalletGuide
                  ),
                  tH.OptionsController.setEnableWallets(!1 !== s.enableWallets),
                  tH.OptionsController.setEIP6963Enabled(
                    !1 !== s.enableEIP6963
                  ),
                  tH.OptionsController.setEnableAuthLogger(
                    !1 !== s.enableAuthLogger
                  ),
                  tH.OptionsController.setSdkVersion(s.sdkVersion),
                  tH.OptionsController.setProjectId(s.projectId),
                  tH.OptionsController.setEnableEmbedded(s.enableEmbedded),
                  tH.OptionsController.setAllWallets(s.allWallets),
                  tH.OptionsController.setIncludeWalletIds(s.includeWalletIds),
                  tH.OptionsController.setExcludeWalletIds(s.excludeWalletIds),
                  tH.OptionsController.setFeaturedWalletIds(
                    s.featuredWalletIds
                  ),
                  tH.OptionsController.setTokens(s.tokens),
                  tH.OptionsController.setTermsConditionsUrl(
                    s.termsConditionsUrl
                  ),
                  tH.OptionsController.setPrivacyPolicyUrl(s.privacyPolicyUrl),
                  tH.OptionsController.setCustomWallets(s.customWallets),
                  tH.OptionsController.setFeatures(s.features),
                  tH.OptionsController.setAllowUnsupportedChain(
                    s.allowUnsupportedChain
                  ),
                  tH.OptionsController.setDefaultAccountTypes(
                    s.defaultAccountTypes
                  );
                let x = this.getDefaultMetaData();
                !s.metadata && x && (s.metadata = x),
                  tH.OptionsController.setMetadata(s.metadata),
                  tH.OptionsController.setDisableAppend(s.disableAppend),
                  tH.OptionsController.setEnableEmbedded(s.enableEmbedded),
                  tH.OptionsController.setSIWX(s.siwx);
                let W = s.adapters?.find(
                  (s) => s.namespace === tV.bq.CHAIN.EVM
                );
                if (W && s.siweConfig) {
                  if (s.siwx)
                    throw Error(
                      "Cannot set both `siweConfig` and `siwx` options"
                    );
                  tH.OptionsController.setSIWX(s.siweConfig.mapToSIWX());
                }
              }
              initializeThemeController(s) {
                s.themeMode && tH.ThemeController.setThemeMode(s.themeMode),
                  s.themeVariables &&
                    tH.ThemeController.setThemeVariables(s.themeVariables);
              }
              initializeChainController(s) {
                if (
                  !this.connectionControllerClient ||
                  !this.networkControllerClient
                )
                  throw Error(
                    "ConnectionControllerClient and NetworkControllerClient must be set"
                  );
                tH.RY.initialize(s.adapters ?? [], this.caipNetworks, {
                  connectionControllerClient: this.connectionControllerClient,
                  networkControllerClient: this.networkControllerClient,
                });
                let x = this.getDefaultNetwork();
                x && tH.RY.setActiveCaipNetwork(x);
              }
              async initializeBlockchainApiController(s) {
                await tH.Lr.getSupportedNetworks({ projectId: s.projectId });
              }
              initControllers(s) {
                this.initializeOptionsController(s),
                  this.initializeChainController(s),
                  this.initializeThemeController(s),
                  this.initializeBlockchainApiController(s),
                  s.excludeWalletIds &&
                    tH.ApiController.initializeExcludedWalletRdns({
                      ids: s.excludeWalletIds,
                    });
              }
              getDefaultMetaData() {
                return "undefined" != typeof window &&
                  "undefined" != typeof document
                  ? {
                      name:
                        document.getElementsByTagName("title")?.[0]
                          ?.textContent || "",
                      description:
                        document.querySelector(
                          'meta[property="og:description"]'
                        )?.content || "",
                      url: window.location.origin,
                      icons: [
                        document.querySelector('link[rel~="icon"]')?.href || "",
                      ],
                    }
                  : null;
              }
              setUnsupportedNetwork(s) {
                let x = this.getActiveChainNamespace();
                if (x) {
                  let W = this.getUnsupportedNetwork(`${x}:${s}`);
                  tH.RY.setActiveCaipNetwork(W);
                }
              }
              extendCaipNetworks(s) {
                let x = t9.extendCaipNetworks(s.networks, {
                  customNetworkImageUrls: s.chainImages,
                  projectId: s.projectId,
                });
                return x;
              }
              extendDefaultCaipNetwork(s) {
                let x = s.networks.find((x) => x.id === s.defaultNetwork?.id),
                  W = x
                    ? t9.extendCaipNetwork(x, {
                        customNetworkImageUrls: s.chainImages,
                        projectId: s.projectId,
                      })
                    : void 0;
                return W;
              }
              createClients() {
                (this.connectionControllerClient = {
                  connectWalletConnect: async () => {
                    let s = this.getAdapter(tH.RY.state.activeChain);
                    if (!s) throw Error("Adapter not found");
                    let x = await s.connectWalletConnect(
                      this.getCaipNetwork()?.id
                    );
                    this.close(),
                      this.setClientId(x?.clientId || null),
                      tH.MO.setConnectedNamespaces([
                        ...tH.RY.state.chains.keys(),
                      ]),
                      await this.syncWalletConnectAccount();
                  },
                  connectExternal: async ({
                    id: s,
                    info: x,
                    type: W,
                    provider: X,
                    chain: ee,
                    caipNetwork: et,
                  }) => {
                    let er = tH.RY.state.activeChain;
                    if (ee && ee !== er && !et) {
                      let s = this.caipNetworks?.find(
                        (s) => s.chainNamespace === ee
                      );
                      s && this.setCaipNetwork(s);
                    }
                    let ei = ee || er,
                      eo = this.getAdapter(ei);
                    if (!eo) throw Error("Adapter not found");
                    let ea = await eo.connect({
                      id: s,
                      info: x,
                      type: W,
                      provider: X,
                      chainId: et?.id || this.getCaipNetwork()?.id,
                      rpcUrl:
                        et?.rpcUrls?.default?.http?.[0] ||
                        this.getCaipNetwork()?.rpcUrls?.default?.http?.[0],
                    });
                    if (!ea) return;
                    tH.MO.addConnectedNamespace(ei),
                      this.syncProvider({ ...ea, chainNamespace: ei }),
                      await this.syncAccount({ ...ea, chainNamespace: ei });
                    let { accounts: es } = await eo.getAccounts({
                      namespace: ei,
                      id: s,
                    });
                    this.setAllAccounts(es, ei);
                  },
                  reconnectExternal: async ({
                    id: s,
                    info: x,
                    type: W,
                    provider: X,
                  }) => {
                    let ee = tH.RY.state.activeChain,
                      et = this.getAdapter(ee);
                    et?.reconnect &&
                      (await et?.reconnect({
                        id: s,
                        info: x,
                        type: W,
                        provider: X,
                        chainId: this.getCaipNetwork()?.id,
                      }),
                      tH.MO.addConnectedNamespace(ee));
                  },
                  disconnect: async () => {
                    let s = tH.RY.state.activeChain,
                      x = this.getAdapter(s),
                      W = ra.getProvider(s),
                      X = ra.state.providerIds[s];
                    await x?.disconnect({ provider: W, providerType: X }),
                      tH.MO.removeConnectedNamespace(s),
                      ra.resetChain(s),
                      this.setUser(void 0),
                      this.setStatus("disconnected", s);
                  },
                  checkInstalled: (s) =>
                    s
                      ? s.some((s) => !!window.ethereum?.[String(s)])
                      : !!window.ethereum,
                  signMessage: async (s) => {
                    let x = this.getAdapter(tH.RY.state.activeChain),
                      W = await x?.signMessage({
                        message: s,
                        address: tH.AccountController.state.address,
                        provider: ra.getProvider(tH.RY.state.activeChain),
                      });
                    return W?.signature || "";
                  },
                  sendTransaction: async (s) => {
                    if (s.chainNamespace === tV.bq.CHAIN.EVM) {
                      let x = this.getAdapter(tH.RY.state.activeChain),
                        W = ra.getProvider(tH.RY.state.activeChain),
                        X = await x?.sendTransaction({ ...s, provider: W });
                      return X?.hash || "";
                    }
                    return "";
                  },
                  estimateGas: async (s) => {
                    if (s.chainNamespace === tV.bq.CHAIN.EVM) {
                      let x = this.getAdapter(tH.RY.state.activeChain),
                        W = ra.getProvider(tH.RY.state.activeChain),
                        X = this.getCaipNetwork();
                      if (!X) throw Error("CaipNetwork is undefined");
                      let ee = await x?.estimateGas({
                        ...s,
                        provider: W,
                        caipNetwork: X,
                      });
                      return ee?.gas || 0n;
                    }
                    return 0n;
                  },
                  getEnsAvatar: async () => {
                    let s = this.getAdapter(tH.RY.state.activeChain),
                      x = await s?.getProfile({
                        address: tH.AccountController.state.address,
                        chainId: Number(this.getCaipNetwork()?.id),
                      });
                    return x?.profileImage || !1;
                  },
                  getEnsAddress: async (s) => {
                    let x = this.getAdapter(tH.RY.state.activeChain),
                      W = this.getCaipNetwork();
                    if (!W) return !1;
                    let X = await x?.getEnsAddress({ name: s, caipNetwork: W });
                    return X?.address || !1;
                  },
                  writeContract: async (s) => {
                    let x = this.getAdapter(tH.RY.state.activeChain),
                      W = this.getCaipNetwork(),
                      X = this.getCaipAddress(),
                      ee = ra.getProvider(tH.RY.state.activeChain);
                    if (!W || !X)
                      throw Error("CaipNetwork or CaipAddress is undefined");
                    let et = await x?.writeContract({
                      ...s,
                      caipNetwork: W,
                      provider: ee,
                      caipAddress: X,
                    });
                    return et?.hash;
                  },
                  parseUnits: (s, x) => {
                    let W = this.getAdapter(tH.RY.state.activeChain);
                    return W?.parseUnits({ value: s, decimals: x }) ?? 0n;
                  },
                  formatUnits: (s, x) => {
                    let W = this.getAdapter(tH.RY.state.activeChain);
                    return W?.formatUnits({ value: s, decimals: x }) ?? "0";
                  },
                  getCapabilities: async (s) => {
                    let x = this.getAdapter(tH.RY.state.activeChain);
                    await x?.getCapabilities(s);
                  },
                  grantPermissions: async (s) => {
                    let x = this.getAdapter(tH.RY.state.activeChain);
                    return await x?.grantPermissions(s);
                  },
                  revokePermissions: async (s) => {
                    let x = this.getAdapter(tH.RY.state.activeChain);
                    return x?.revokePermissions
                      ? await x.revokePermissions(s)
                      : "0x";
                  },
                }),
                  (this.networkControllerClient = {
                    switchCaipNetwork: async (s) => {
                      if (s) {
                        if (
                          tH.AccountController.state.address &&
                          s.chainNamespace === tH.RY.state.activeChain
                        ) {
                          let x = this.getAdapter(tH.RY.state.activeChain),
                            W = ra.getProvider(tH.RY.state.activeChain),
                            X = ra.state.providerIds[tH.RY.state.activeChain];
                          await x?.switchNetwork({
                            caipNetwork: s,
                            provider: W,
                            providerType: X,
                          }),
                            this.setCaipNetwork(s),
                            await this.syncAccount({
                              address: tH.AccountController.state.address,
                              chainId: s.id,
                              chainNamespace: s.chainNamespace,
                            });
                        } else if (tH.AccountController.state.address) {
                          let x = ra.state.providerIds[tH.RY.state.activeChain];
                          if (x === tQ.CONNECTOR_TYPE_AUTH)
                            try {
                              (tH.RY.state.activeChain = s.chainNamespace),
                                await this.connectionControllerClient?.connectExternal?.(
                                  {
                                    id: tV.bq.CONNECTOR_ID.AUTH,
                                    provider: this.authProvider,
                                    chain: s.chainNamespace,
                                    chainId: s.id,
                                    type: tQ.CONNECTOR_TYPE_AUTH,
                                    caipNetwork: s,
                                  }
                                ),
                                this.setCaipNetwork(s);
                            } catch (X) {
                              let W = this.getAdapter(s.chainNamespace);
                              await W?.switchNetwork({
                                caipNetwork: s,
                                provider: this.authProvider,
                                providerType: x,
                              });
                            }
                          else if ("WALLET_CONNECT" === x)
                            this.setCaipNetwork(s),
                              this.syncWalletConnectAccount();
                          else {
                            this.setCaipNetwork(s);
                            let x = this.getAddressByChainNamespace(
                              s.chainNamespace
                            );
                            x &&
                              this.syncAccount({
                                address: x,
                                chainId: s.id,
                                chainNamespace: s.chainNamespace,
                              });
                          }
                        } else this.setCaipNetwork(s);
                      }
                    },
                    getApprovedCaipNetworksData: async () => {
                      let s = ra.state.providerIds[tH.RY.state.activeChain];
                      if (s === tQ.CONNECTOR_TYPE_WALLET_CONNECT) {
                        let s = this.universalProvider?.session?.namespaces;
                        return {
                          supportsAllNetworks:
                            this.universalProvider?.session?.peer?.metadata
                              .name === "MetaMask Wallet",
                          approvedCaipNetworkIds:
                            this.getChainsFromNamespaces(s),
                        };
                      }
                      return {
                        supportsAllNetworks: !0,
                        approvedCaipNetworkIds: [],
                      };
                    },
                  }),
                  tH.ConnectionController.setClient(
                    this.connectionControllerClient
                  );
              }
              setupAuthConnectorListeners(s) {
                s.onRpcRequest((x) => {
                  t7.$D.checkIfRequestExists(x)
                    ? t7.$D.checkIfRequestIsSafe(x) ||
                      this.handleUnsafeRPCRequest()
                    : (this.open(),
                      console.error(t7.y_.RPC_METHOD_NOT_ALLOWED_MESSAGE, {
                        method: x.method,
                      }),
                      setTimeout(() => {
                        this.showErrorMessage(
                          t7.y_.RPC_METHOD_NOT_ALLOWED_UI_MESSAGE
                        );
                      }, 300),
                      s.rejectRpcRequests());
                }),
                  s.onRpcError(() => {
                    let s = this.isOpen();
                    s &&
                      (this.isTransactionStackEmpty()
                        ? this.close()
                        : this.popTransactionStack(!0));
                  }),
                  s.onRpcSuccess((s, x) => {
                    let W = t7.$D.checkIfRequestIsSafe(x);
                    !W &&
                      (this.isTransactionStackEmpty()
                        ? this.close()
                        : this.popTransactionStack(),
                      tH.AccountController.state.address &&
                        tH.RY.state.activeCaipNetwork?.id &&
                        this.updateNativeBalance());
                  }),
                  s.onNotConnected(() => {
                    let s = tH.RY.state.activeChain,
                      x = tH.MO.getConnectedConnectorId(s),
                      W = x === tV.bq.CONNECTOR_ID.AUTH;
                    W && (this.setCaipAddress(void 0, s), this.setLoading(!1));
                  }),
                  s.onConnect(async (x) => {
                    let W = tH.RY.state.activeChain,
                      X =
                        W === tV.bq.CHAIN.EVM
                          ? `eip155:${x.chainId}:${x.address}`
                          : `${x.chainId}:${x.address}`;
                    this.setSmartAccountDeployed(!!x.smartAccountDeployed, W),
                      tX.isLowerCaseMatch(
                        x.address,
                        tH.AccountController.state.address
                      ) ||
                        this.syncIdentity({
                          address: x.address,
                          chainId: x.chainId,
                          chainNamespace: W,
                        }),
                      this.setCaipAddress(X, W),
                      this.setUser({
                        ...(tH.AccountController.state.user || {}),
                        email: x.email,
                      });
                    let ee =
                      x.preferredAccountType ||
                      tH.OptionsController.state.defaultAccountTypes[W];
                    this.setPreferredAccountType(ee, W);
                    let et = x.accounts?.map((s) =>
                      tH.j1.createAccount(
                        W,
                        s.address,
                        s.type ||
                          tH.OptionsController.state.defaultAccountTypes[W]
                      )
                    );
                    this.setAllAccounts(
                      et || [tH.j1.createAccount(W, x.address, ee)],
                      W
                    ),
                      await s.getSmartAccountEnabledNetworks(),
                      this.setLoading(!1);
                  }),
                  s.onSocialConnected(({ userName: s }) => {
                    this.setUser({
                      ...(tH.AccountController.state.user || {}),
                      username: s,
                    });
                  }),
                  s.onGetSmartAccountEnabledNetworks((s) => {
                    this.setSmartAccountEnabledNetworks(
                      s,
                      tH.RY.state.activeChain
                    );
                  }),
                  s.onSetPreferredAccount(({ address: s, type: x }) => {
                    s &&
                      this.setPreferredAccountType(x, tH.RY.state.activeChain);
                  });
              }
              async syncAuthConnector(s) {
                this.setLoading(!0);
                let x = s.getLoginEmailUsed();
                this.setLoading(x),
                  x && this.setStatus("connecting", tH.RY.state.activeChain);
                let W = s.getEmail(),
                  X = s.getUsername();
                this.setUser({
                  ...(tH.AccountController.state?.user || {}),
                  username: X,
                  email: W,
                }),
                  this.setupAuthConnectorListeners(s);
                let { isConnected: ee } = await s.isConnected(),
                  et = tH.ThemeController.getSnapshot(),
                  er = tH.OptionsController.getSnapshot();
                s.syncDappData({
                  metadata: er.metadata,
                  sdkVersion: er.sdkVersion,
                  projectId: er.projectId,
                  sdkType: er.sdkType,
                }),
                  s.syncTheme({
                    themeMode: et.themeMode,
                    themeVariables: et.themeVariables,
                    w3mThemeVariables: (0, tV.tU)(
                      et.themeVariables,
                      et.themeMode
                    ),
                  });
                let ei = tH.MO.getActiveNamespace();
                ei &&
                  (ee && this.connectionControllerClient?.connectExternal
                    ? (await this.connectionControllerClient?.connectExternal({
                        id: tV.bq.CONNECTOR_ID.AUTH,
                        info: { name: tV.bq.CONNECTOR_ID.AUTH },
                        type: tQ.CONNECTOR_TYPE_AUTH,
                        provider: s,
                        chainId: tH.RY.state.activeCaipNetwork?.id,
                        chain: ei,
                      }),
                      this.setStatus("connected", ei))
                    : tH.MO.getConnectedConnectorId(ei) ===
                        tV.bq.CONNECTOR_ID.AUTH &&
                      (this.setStatus("disconnected", ei),
                      tH.MO.removeConnectedNamespace(ei))),
                  this.setLoading(!1);
              }
              listenWalletConnect() {
                this.universalProvider &&
                  (this.universalProvider.on(
                    "display_uri",
                    tH.ConnectionController.setUri.bind(tH.ConnectionController)
                  ),
                  this.universalProvider.on("disconnect", () => {
                    this.chainNamespaces.forEach((s) => {
                      this.resetAccount(s);
                    }),
                      tH.ConnectionController.resetWcConnection();
                  }),
                  this.universalProvider.on("chainChanged", (s) => {
                    let x = this.caipNetworks?.find((x) => x.id == s),
                      W = this.getCaipNetwork();
                    if (!x) {
                      this.setUnsupportedNetwork(s);
                      return;
                    }
                    W?.id !== x?.id && this.setCaipNetwork(x);
                  }),
                  this.universalProvider.on("session_event", (s) => {
                    if (ru.isSessionEventData(s)) {
                      let { name: x, data: W } = s.params.event;
                      "accountsChanged" === x &&
                        Array.isArray(W) &&
                        tH.j1.isCaipAddress(W[0]) &&
                        this.syncAccount(tV.uB.parseCaipAddress(W[0]));
                    }
                  }));
              }
              listenAdapter(s) {
                let x = this.getAdapter(s);
                if (!x) return;
                let W = tH.MO.getConnectionStatus();
                "connected" === W
                  ? this.setStatus("connecting", s)
                  : this.setStatus(W, s),
                  x.on("switchNetwork", ({ address: x, chainId: W }) => {
                    W &&
                    this.caipNetworks?.find(
                      (s) => s.id === W || s.caipNetworkId === W
                    )
                      ? tH.RY.state.activeChain === s && x
                        ? this.syncAccount({
                            address: x,
                            chainId: W,
                            chainNamespace: s,
                          })
                        : tH.RY.state.activeChain === s &&
                          tH.AccountController.state.address &&
                          this.syncAccount({
                            address: tH.AccountController.state.address,
                            chainId: W,
                            chainNamespace: s,
                          })
                      : this.setUnsupportedNetwork(W);
                  }),
                  x.on("disconnect", this.disconnect.bind(this)),
                  x.on("pendingTransactions", () => {
                    let s = tH.AccountController.state.address,
                      x = tH.RY.state.activeCaipNetwork;
                    s && x?.id && this.updateNativeBalance();
                  }),
                  x.on("accountChanged", ({ address: x, chainId: W }) => {
                    tH.RY.state.activeChain === s && W
                      ? this.syncAccount({
                          address: x,
                          chainId: W,
                          chainNamespace: s,
                        })
                      : tH.RY.state.activeChain === s &&
                        tH.RY.state.activeCaipNetwork?.id &&
                        this.syncAccount({
                          address: x,
                          chainId: tH.RY.state.activeCaipNetwork?.id,
                          chainNamespace: s,
                        });
                  });
              }
              async updateNativeBalance() {
                let s = this.getAdapter(tH.RY.state.activeChain);
                if (
                  s &&
                  tH.RY.state.activeChain &&
                  tH.AccountController.state.address
                ) {
                  let x = await s.getBalance({
                    address: tH.AccountController.state.address,
                    chainId: tH.RY.state.activeCaipNetwork?.id,
                    caipNetwork: this.getCaipNetwork(),
                    tokens: this.options.tokens,
                  });
                  this.setBalance(x.balance, x.symbol, tH.RY.state.activeChain);
                }
              }
              getChainsFromNamespaces(s = {}) {
                return Object.values(s).flatMap((s) => {
                  let x = s.chains || [],
                    W = s.accounts.map((s) => {
                      let { chainId: x, chainNamespace: W } =
                        tV.uB.parseCaipAddress(s);
                      return `${W}:${x}`;
                    });
                  return Array.from(new Set([...x, ...W]));
                });
              }
              async syncWalletConnectAccount() {
                let s = this.getAdapter(tH.RY.state.activeChain);
                this.chainNamespaces.forEach(async (x) => {
                  let W =
                      this.universalProvider?.session?.namespaces?.[x]
                        ?.accounts || [],
                    X = tH.RY.state.activeCaipNetwork?.id,
                    ee =
                      W.find((s) => {
                        let { chainId: x } = tV.uB.parseCaipAddress(s);
                        return x === X?.toString();
                      }) || W[0];
                  if (ee) {
                    let W = tV.uB.validateCaipAddress(ee),
                      { chainId: X, address: et } = tV.uB.parseCaipAddress(W);
                    if (
                      (ra.setProviderId(x, tQ.CONNECTOR_TYPE_WALLET_CONNECT),
                      this.caipNetworks &&
                        tH.RY.state.activeCaipNetwork &&
                        s?.namespace !== tV.bq.CHAIN.EVM)
                    ) {
                      let W = s?.getWalletConnectProvider({
                        caipNetworks: this.caipNetworks,
                        provider: this.universalProvider,
                        activeCaipNetwork: tH.RY.state.activeCaipNetwork,
                      });
                      ra.setProvider(x, W);
                    } else ra.setProvider(x, this.universalProvider);
                    if (
                      (tH.MO.setConnectedConnectorId(
                        x,
                        tV.bq.CONNECTOR_ID.WALLET_CONNECT
                      ),
                      tH.MO.addConnectedNamespace(x),
                      s?.adapterType === "wagmi")
                    )
                      try {
                        await s?.connect({
                          id: "walletConnect",
                          type: "WALLET_CONNECT",
                          chainId: tH.RY.state.activeCaipNetwork?.id,
                        });
                      } catch (x) {
                        s?.reconnect &&
                          s?.reconnect({
                            id: "walletConnect",
                            type: "WALLET_CONNECT",
                          });
                      }
                    this.syncWalletConnectAccounts(x),
                      await this.syncAccount({
                        address: et,
                        chainId: X,
                        chainNamespace: x,
                      });
                  }
                }),
                  await tH.RY.setApprovedCaipNetworksData(
                    tH.RY.state.activeChain
                  );
              }
              syncWalletConnectAccounts(s) {
                let x = this.universalProvider?.session?.namespaces?.[
                  s
                ]?.accounts
                  ?.map((s) => {
                    let { address: x } = tV.uB.parseCaipAddress(s);
                    return x;
                  })
                  .filter((s, x, W) => W.indexOf(s) === x);
                x &&
                  this.setAllAccounts(
                    x.map((x) =>
                      tH.j1.createAccount(
                        s,
                        x,
                        "bip122" === s ? "payment" : "eoa"
                      )
                    ),
                    s
                  );
              }
              syncProvider({ type: s, provider: x, id: W, chainNamespace: X }) {
                ra.setProviderId(X, s),
                  ra.setProvider(X, x),
                  tH.MO.setConnectedConnectorId(X, W);
              }
              async syncAccount(s) {
                let { address: x, chainId: W, chainNamespace: X } = s,
                  { chainId: ee } = tH.MO.getActiveNetworkProps(),
                  et = W || ee,
                  er =
                    tH.RY.state.activeCaipNetwork?.name ===
                    tV.bq.UNSUPPORTED_NETWORK_NAME,
                  ei = tH.RY.getNetworkProp("supportsAllNetworks", X);
                if (
                  (tX.isLowerCaseMatch(x, tH.AccountController.state.address) ||
                    (this.setCaipAddress(`${X}:${W}:${x}`, X),
                    await this.syncIdentity({
                      address: x,
                      chainId: W,
                      chainNamespace: X,
                    })),
                  this.setStatus("connected", X),
                  (!er || ei) && et)
                ) {
                  let s = this.caipNetworks?.find(
                      (s) => s.id.toString() === et.toString()
                    ),
                    W = this.caipNetworks?.find((s) => s.chainNamespace === X);
                  if (!ei) {
                    let x = this.getApprovedCaipNetworkIds() || [],
                      ee = x.find(
                        (s) =>
                          tV.uB.parseCaipNetworkId(s)?.chainId === et.toString()
                      ),
                      er = x.find(
                        (s) => tV.uB.parseCaipNetworkId(s)?.chainNamespace === X
                      );
                    (s = this.caipNetworks?.find(
                      (s) => s.caipNetworkId === ee
                    )),
                      (W = this.caipNetworks?.find(
                        (s) =>
                          s.caipNetworkId === er ||
                          ("deprecatedCaipNetworkId" in s &&
                            s.deprecatedCaipNetworkId === er)
                      ));
                  }
                  let ee = s || W;
                  ee?.chainNamespace === tH.RY.state.activeChain &&
                    this.setCaipNetwork(ee),
                    this.syncConnectedWalletInfo(X),
                    await this.syncBalance({
                      address: x,
                      chainId: ee?.id,
                      chainNamespace: X,
                    });
                }
              }
              async syncBalance(s) {
                let x = tV.p1
                  .getNetworksByNamespace(this.caipNetworks, s.chainNamespace)
                  .find((x) => x.id.toString() === s.chainId?.toString());
                if (!x) return;
                let W = tH.bq.BALANCE_SUPPORTED_CHAINS.includes(
                  x?.chainNamespace
                );
                if (x.testnet || !W) {
                  await this.updateNativeBalance();
                  return;
                }
                let X = await tH.AccountController.fetchTokenBalance(() =>
                    this.setBalance(
                      "0.00",
                      x.nativeCurrency.symbol,
                      x.chainNamespace
                    )
                  ),
                  ee = X.find(
                    (W) =>
                      W.chainId === `${s.chainNamespace}:${s.chainId}` &&
                      W.symbol === x.nativeCurrency.symbol
                  );
                this.setBalance(
                  ee?.quantity?.numeric || "0.00",
                  x.nativeCurrency.symbol,
                  s.chainNamespace
                );
              }
              syncConnectedWalletInfo(s) {
                let x = tH.MO.getConnectedConnectorId(s),
                  W = ra.getProviderId(s);
                if (
                  W === tQ.CONNECTOR_TYPE_ANNOUNCED ||
                  W === tQ.CONNECTOR_TYPE_INJECTED
                ) {
                  if (x) {
                    let W = this.getConnectors().find((s) => s.id === x);
                    if (W) {
                      let { info: x, name: X, imageUrl: ee } = W,
                        et = ee || this.getConnectorImage(W);
                      this.setConnectedWalletInfo(
                        { name: X, icon: et, ...x },
                        s
                      );
                    }
                  }
                } else if (W === tQ.CONNECTOR_TYPE_WALLET_CONNECT) {
                  let x = ra.getProvider(s);
                  x?.session &&
                    this.setConnectedWalletInfo(
                      {
                        ...x.session.peer.metadata,
                        name: x.session.peer.metadata.name,
                        icon: x.session.peer.metadata.icons?.[0],
                      },
                      s
                    );
                } else if (x) {
                  if (x === tV.bq.CONNECTOR_ID.COINBASE) {
                    let x = this.getConnectors().find(
                      (s) => s.id === tV.bq.CONNECTOR_ID.COINBASE
                    );
                    this.setConnectedWalletInfo(
                      {
                        name: "Coinbase Wallet",
                        icon: this.getConnectorImage(x),
                      },
                      s
                    );
                  }
                  this.setConnectedWalletInfo({ name: x }, s);
                }
              }
              async syncIdentity({
                address: s,
                chainId: x,
                chainNamespace: W,
              }) {
                let X = this.caipNetworks?.find(
                  (s) => s.caipNetworkId === `${W}:${x}`
                );
                if (!(W !== tV.bq.CHAIN.EVM || X?.testnet))
                  try {
                    let { name: X, avatar: ee } = await this.fetchIdentity({
                      address: s,
                    });
                    if (
                      (this.setProfileName(X, W),
                      this.setProfileImage(ee, W),
                      !X)
                    ) {
                      await this.syncReownName(s, W);
                      let X = this.getAdapter(W),
                        ee = await X?.getProfile({
                          address: s,
                          chainId: Number(x),
                        });
                      ee?.profileName
                        ? (this.setProfileName(ee.profileName, W),
                          ee.profileImage &&
                            this.setProfileImage(ee.profileImage, W))
                        : (await this.syncReownName(s, W),
                          this.setProfileImage(null, W));
                    }
                  } catch {
                    1 === x
                      ? await this.syncReownName(s, W)
                      : (await this.syncReownName(s, W),
                        this.setProfileImage(null, W));
                  }
              }
              async syncReownName(s, x) {
                try {
                  let W = await this.getReownName(s);
                  if (W[0]) {
                    let s = W[0];
                    this.setProfileName(s.name, x);
                  } else this.setProfileName(null, x);
                } catch {
                  this.setProfileName(null, x);
                }
              }
              async syncAdapterConnection(s) {
                let x = this.getAdapter(s),
                  W = tH.MO.getConnectedConnectorId(s),
                  X = this.getCaipNetwork();
                try {
                  if (!x || !W)
                    throw Error(
                      `Adapter or connectorId not found for namespace ${s}`
                    );
                  let ee = await x?.syncConnection({
                    namespace: s,
                    id: W,
                    chainId: X?.id,
                    rpcUrl: X?.rpcUrls?.default?.http?.[0],
                  });
                  if (ee) {
                    let X = await x?.getAccounts({ namespace: s, id: W });
                    X && X.accounts.length > 0
                      ? this.setAllAccounts(X.accounts, s)
                      : this.setAllAccounts(
                          [tH.j1.createAccount(s, ee.address, "eoa")],
                          s
                        ),
                      this.syncProvider({ ...ee, chainNamespace: s }),
                      await this.syncAccount({ ...ee, chainNamespace: s }),
                      this.setStatus("connected", s);
                  } else this.setStatus("disconnected", s);
                } catch (x) {
                  tH.MO.deleteConnectedConnectorId(s),
                    this.setStatus("disconnected", s);
                }
              }
              async syncNamespaceConnection(s) {
                try {
                  let x = tH.MO.getConnectedConnectorId(s),
                    W = this.authProvider?.getLoginEmailUsed();
                  if (W) return;
                  switch ((this.setStatus("connecting", s), x)) {
                    case tV.bq.CONNECTOR_ID.WALLET_CONNECT:
                      await this.syncWalletConnectAccount();
                      break;
                    case tV.bq.CONNECTOR_ID.AUTH:
                      break;
                    default:
                      await this.syncAdapterConnection(s);
                  }
                } catch (x) {
                  console.warn("AppKit couldn't sync existing connection", x),
                    tH.MO.deleteConnectedConnectorId(s),
                    this.setStatus("disconnected", s);
                }
              }
              async syncExistingConnection() {
                await Promise.allSettled(
                  this.chainNamespaces.map((s) =>
                    this.syncNamespaceConnection(s)
                  )
                );
              }
              getAdapter(s) {
                if (s) return this.chainAdapters?.[s];
              }
              createUniversalProvider() {
                return (
                  !this.universalProviderInitPromise &&
                    tH.j1.isClient() &&
                    this.options?.projectId &&
                    (this.universalProviderInitPromise =
                      this.initializeUniversalAdapter()),
                  this.universalProviderInitPromise
                );
              }
              handleAlertError(s) {
                let x = Object.entries(t0.UniversalProviderErrors).find(
                    ([, { message: x }]) => s.message.includes(x)
                  ),
                  [W, X] = x ?? [],
                  { message: ee, alertErrorKey: et } = X ?? {};
                if (W && ee && !this.reportedAlertErrors[W]) {
                  let s = t0.ALERT_ERRORS[et];
                  s &&
                    (tH.AlertController.open(s, "error"),
                    (this.reportedAlertErrors[W] = !0));
                }
              }
              async initializeUniversalAdapter() {
                let s = t2.createLogger((s, ...x) => {
                    s && this.handleAlertError(s), console.error(...x);
                  }),
                  x = {
                    projectId: this.options?.projectId,
                    metadata: {
                      name: this.options?.metadata
                        ? this.options?.metadata.name
                        : "",
                      description: this.options?.metadata
                        ? this.options?.metadata.description
                        : "",
                      url: this.options?.metadata
                        ? this.options?.metadata.url
                        : "",
                      icons: this.options?.metadata
                        ? this.options?.metadata.icons
                        : [""],
                    },
                    logger: s,
                  };
                tH.OptionsController.setUsingInjectedUniversalProvider(
                  !!this.options?.universalProvider
                ),
                  (this.universalProvider =
                    this.options.universalProvider ?? (await tq.Z.init(x))),
                  this.listenWalletConnect();
              }
              async getUniversalProvider() {
                if (!this.universalProvider)
                  try {
                    await this.createUniversalProvider();
                  } catch (s) {
                    throw Error(
                      "AppKit:getUniversalProvider - Cannot create provider"
                    );
                  }
                return this.universalProvider;
              }
              createAuthProvider() {
                let s =
                    this.options?.features?.email === void 0
                      ? tH.bq.DEFAULT_FEATURES.email
                      : this.options?.features?.email,
                  x = this.options?.features?.socials
                    ? this.options?.features?.socials?.length > 0
                    : tH.bq.DEFAULT_FEATURES.socials;
                !this.authProvider &&
                  this.options?.projectId &&
                  (s || x) &&
                  ((this.authProvider = W3mFrameProviderSingleton.getInstance({
                    projectId: this.options.projectId,
                    enableLogger: this.options.enableAuthLogger,
                    chainId: this.getCaipNetwork()?.caipNetworkId,
                    onTimeout: () => {
                      tH.AlertController.open(
                        t0.ALERT_ERRORS.SOCIALS_TIMEOUT,
                        "error"
                      );
                    },
                  })),
                  this.subscribeState((s) => {
                    s.open || this.authProvider?.rejectRpcRequests();
                  }),
                  this.syncAuthConnector(this.authProvider));
              }
              async createUniversalProviderForAdapter(s) {
                await this.getUniversalProvider(),
                  this.universalProvider &&
                    this.chainAdapters?.[s]?.setUniversalProvider?.(
                      this.universalProvider
                    );
              }
              createAuthProviderForAdapter(s) {
                this.createAuthProvider(),
                  this.authProvider &&
                    this.chainAdapters?.[s]?.setAuthProvider?.(
                      this.authProvider
                    );
              }
              createAdapter(s) {
                if (!s) return;
                let x = s.namespace;
                x &&
                  (this.createClients(),
                  (s.namespace = x),
                  s.construct({
                    namespace: x,
                    projectId: this.options?.projectId,
                    networks: this.caipNetworks,
                  }),
                  this.chainNamespaces.includes(x) ||
                    this.chainNamespaces.push(x),
                  this.chainAdapters && (this.chainAdapters[x] = s));
              }
              createAdapters(s) {
                return (
                  this.createClients(),
                  this.chainNamespaces.reduce((x, W) => {
                    let X = s?.find((s) => s.namespace === W);
                    return (
                      X
                        ? ((x[W] = X),
                          (x[W].namespace = W),
                          x[W].construct({
                            namespace: W,
                            projectId: this.options?.projectId,
                            networks: this.caipNetworks,
                          }))
                        : (x[W] = new UniversalAdapter({
                            namespace: W,
                            networks: this.caipNetworks,
                          })),
                      x
                    );
                  }, {})
                );
              }
              onConnectors(s) {
                let x = this.getAdapter(s);
                x?.on("connectors", this.setConnectors.bind(this));
              }
              async initChainAdapter(s) {
                this.onConnectors(s),
                  this.listenAdapter(s),
                  this.chainAdapters?.[s].syncConnectors(this.options, this),
                  await this.createUniversalProviderForAdapter(s),
                  this.createAuthProviderForAdapter(s);
              }
              async initChainAdapters() {
                await Promise.all(
                  this.chainNamespaces.map(async (s) => {
                    await this.initChainAdapter(s);
                  })
                );
              }
              getUnsupportedNetwork(s) {
                return {
                  id: s.split(":")[1],
                  caipNetworkId: s,
                  name: tV.bq.UNSUPPORTED_NETWORK_NAME,
                  chainNamespace: s.split(":")[0],
                  nativeCurrency: { name: "", decimals: 0, symbol: "" },
                  rpcUrls: { default: { http: [] } },
                };
              }
              getDefaultNetwork() {
                let s = tH.MO.getActiveCaipNetworkId();
                if (s) {
                  let x = this.caipNetworks?.find((x) => x.caipNetworkId === s);
                  return x || this.getUnsupportedNetwork(s);
                }
                return this.caipNetworks?.[0];
              }
              async injectModalUi() {
                return (
                  !this.initPromise &&
                    !rh &&
                    tH.j1.isClient() &&
                    ((rh = !0),
                    (this.initPromise = new Promise(async (s) => {
                      await Promise.all([
                        Promise.resolve().then(W.bind(W, 46083)),
                        W.e(824).then(W.bind(W, 70824)),
                      ]);
                      let x = document.createElement("w3m-modal");
                      tH.OptionsController.state.disableAppend ||
                        tH.OptionsController.state.enableEmbedded ||
                        document.body.insertAdjacentElement("beforeend", x),
                        s();
                    }))),
                  this.initPromise
                );
              }
            })({
              ...ew,
              sdkVersion: tH.j1.generateSdkVersion(
                ew.adapters ?? [],
                "react",
                "1.6.5"
              ),
            })),
          em),
        oj = new eH();
      var _app = function (s) {
        let { Component: x, pageProps: W } = s;
        return (0, eS.jsx)(eI.Suspense, {
          fallback: "loading",
          children: (0, eS.jsx)(eR.F, {
            config: oB,
            children: (0, eS.jsxs)(eV.aH, {
              client: oj,
              children: [
                (0, eS.jsx)(ek.default, {}),
                (0, eS.jsx)("div", {
                  className: "relative z-10 -mt-32 overflow-x-hidden bg-gray",
                  children: (0, eS.jsx)(x, { ...W }),
                }),
                (0, eS.jsx)(eW.default, {}),
                (0, eS.jsx)(eT.Ix, {}),
              ],
            }),
          }),
        });
      };
    },
    80134: function (s, x, W) {
      "use strict";
      W.r(x);
      var X = W(85893);
      W(67294);
      var ee = W(86472),
        et = W(92321),
        er = W(6590),
        ei = W(26623),
        eo = W(63114),
        ea = W(36609);
      x.default = (s) => {
        let { className: x, ...W } = s,
          { address: es, isConnected: el } = (0, et.m)();
        return (0, X.jsxs)("button", {
          className: "flex items-center justify-center cursor-pointer",
          children: [
            (0, X.jsx)("a", {
              href: "https://app.uniswap.org",
              className: "absolute text-[22px] md:text-[28px] label-button",
              children: "Buy Now"
            }),
            (0, X.jsx)(ee.default, { className: "h-[48px] md:h-[63px]" }),
          ],
        });
      };
    },
    58783: function (s, x, W) {
      "use strict";
      W.r(x),
        W.d(x, {
          default: function () {
            return DownArrowIcon;
          },
        });
      var X = W(85893);
      function DownArrowIcon(s) {
        return (0, X.jsx)("svg", {
          width: "8",
          height: "6",
          viewBox: "0 0 8 6",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          ...s,
          children: (0, X.jsx)("path", {
            d: "M4.00134 5.49023L0.132812 0.374023H7.86987L4.00134 5.49023Z",
            fill: "black",
          }),
        });
      }
      W(67294);
    },
    39998: function (s, x, W) {
      "use strict";
      W.r(x);
      var X = W(85893);
      W(67294),
        (x.default = function (s) {
          return (0, X.jsxs)("svg", {
            width: "30",
            height: "27",
            viewBox: "0 0 30 27",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            ...s,
            children: [
              (0, X.jsx)("rect", { width: "30", height: "5", fill: "#000000" }),
              (0, X.jsx)("rect", {
                y: "11",
                width: "30",
                height: "5",
                fill: "#000000",
              }),
              (0, X.jsx)("rect", {
                y: "22",
                width: "30",
                height: "5",
                fill: "#000000",
              }),
            ],
          });
        });
    },
    70741: function (s, x, W) {
      "use strict";
      W.r(x),
        W.d(x, {
          default: function () {
            return TelegramIcon;
          },
        });
      var X = W(85893);
      function TelegramIcon(s) {
        return (0, X.jsx)("div", {
          className: "discord bg-[#50AAFF]",
          children: (0, X.jsx)("svg", {
            width: "25",
            height: "25",
            viewBox: "0 0 29 25",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            children: (0, X.jsx)("path", {
              "fill-rule": "evenodd",
              "clip-rule": "evenodd",
              d: "M25.8487 0.496651C26.193 0.351754 26.5698 0.30178 26.9399 0.35193C27.31 0.402079 27.66 0.55052 27.9533 0.781802C28.2466 1.01308 28.4725 1.31875 28.6076 1.66699C28.7427 2.01522 28.7819 2.3933 28.7213 2.76186L25.5617 21.927C25.2552 23.7757 23.2268 24.8358 21.5314 23.915C20.1132 23.1446 18.0068 21.9577 16.1122 20.7192C15.1649 20.0992 12.263 18.114 12.6196 16.7014C12.9261 15.4936 17.802 10.9548 20.5883 8.25633C21.6819 7.19616 21.1831 6.58458 19.8917 7.55977C16.6848 9.98101 11.5358 13.663 9.8334 14.6995C8.33162 15.6134 7.54868 15.7694 6.61251 15.6134C4.90454 15.3292 3.32057 14.889 2.02775 14.3526C0.280779 13.6282 0.365759 11.2265 2.02636 10.5271L25.8487 0.496651Z",
              fill: "white",
            }),
          }),
        });
      }
      W(67294);
    },
    39039: function (s, x, W) {
      "use strict";
      W.r(x),
        W.d(x, {
          default: function () {
            return TwitterIcon;
          },
        });
      var X = W(85893);
      function TwitterIcon(s) {
        return (0, X.jsx)("div", {
          className: "discord bg-[#121212]",
          children: (0, X.jsx)("svg", {
            width: "23",
            height: "23",
            viewBox: "0 0 23 23",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            children: (0, X.jsx)("path", {
              d: "M13.8413 9.64844L22.0308 0.333008H20.0898L12.9808 8.42115L7.30001 0.333008H0.749023L9.3381 12.565L0.749023 22.333H2.69006L10.1986 13.7907L16.198 22.333H22.749L13.8413 9.64844ZM11.1837 12.6719L10.3135 11.454L3.38883 1.76301H6.36993L11.9569 9.58401L12.8271 10.8019L20.0914 20.969H17.1103L11.1837 12.6719Z",
              fill: "white",
            }),
          }),
        });
      }
      W(67294);
    },
    86491: function (s, x, W) {
      "use strict";
      W.r(x),
        W.d(x, {
          default: function () {
            return Footer;
          },
        });
      var X = W(85893),
        ee = W(67294),
        et = W(38741);
      W(48711), W(8679), W(15953), W(27278);
      var er = X.Fragment;
      function emotion_react_jsx_runtime_browser_esm_jsx(s, x, W) {
        return et.h.call(x, "css")
          ? X.jsx(et.E, (0, et.c)(s, x), W)
          : X.jsx(s, x, W);
      }
      var ei = W(70917),
        eo = Object.defineProperty,
        __defNormalProp = (s, x, W) =>
          x in s
            ? eo(s, x, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: W,
              })
            : (s[x] = W),
        __publicField = (s, x, W) =>
          __defNormalProp(s, "symbol" != typeof x ? x + "" : x, W),
        ea = new Map(),
        es = new WeakMap(),
        el = 0,
        ec = void 0;
      function observe(s, x, W = {}, X = ec) {
        if (void 0 === window.IntersectionObserver && void 0 !== X) {
          let ee = s.getBoundingClientRect();
          return (
            x(X, {
              isIntersecting: X,
              target: s,
              intersectionRatio:
                "number" == typeof W.threshold ? W.threshold : 0,
              time: 0,
              boundingClientRect: ee,
              intersectionRect: ee,
              rootBounds: ee,
            }),
            () => {}
          );
        }
        let {
            id: ee,
            observer: et,
            elements: er,
          } = (function (s) {
            let x = Object.keys(s)
                .sort()
                .filter((x) => void 0 !== s[x])
                .map((x) => {
                  var W;
                  return `${x}_${
                    "root" === x
                      ? (W = s.root)
                        ? (es.has(W) || ((el += 1), es.set(W, el.toString())),
                          es.get(W))
                        : "0"
                      : s[x]
                  }`;
                })
                .toString(),
              W = ea.get(x);
            if (!W) {
              let X;
              let ee = new Map(),
                et = new IntersectionObserver((x) => {
                  x.forEach((x) => {
                    var W;
                    let et =
                      x.isIntersecting &&
                      X.some((s) => x.intersectionRatio >= s);
                    s.trackVisibility &&
                      void 0 === x.isVisible &&
                      (x.isVisible = et),
                      null == (W = ee.get(x.target)) ||
                        W.forEach((s) => {
                          s(et, x);
                        });
                  });
                }, s);
              (X =
                et.thresholds ||
                (Array.isArray(s.threshold)
                  ? s.threshold
                  : [s.threshold || 0])),
                (W = { id: x, observer: et, elements: ee }),
                ea.set(x, W);
            }
            return W;
          })(W),
          ei = er.get(s) || [];
        return (
          er.has(s) || er.set(s, ei),
          ei.push(x),
          et.observe(s),
          function () {
            ei.splice(ei.indexOf(x), 1),
              0 === ei.length && (er.delete(s), et.unobserve(s)),
              0 === er.size && (et.disconnect(), ea.delete(ee));
          }
        );
      }
      var eu = class extends ee.Component {
        constructor(s) {
          super(s),
            __publicField(this, "node", null),
            __publicField(this, "_unobserveCb", null),
            __publicField(this, "handleNode", (s) => {
              !this.node ||
                (this.unobserve(),
                s ||
                  this.props.triggerOnce ||
                  this.props.skip ||
                  this.setState({
                    inView: !!this.props.initialInView,
                    entry: void 0,
                  })),
                (this.node = s || null),
                this.observeNode();
            }),
            __publicField(this, "handleChange", (s, x) => {
              s && this.props.triggerOnce && this.unobserve(),
                "function" != typeof this.props.children ||
                  this.setState({ inView: s, entry: x }),
                this.props.onChange && this.props.onChange(s, x);
            }),
            (this.state = { inView: !!s.initialInView, entry: void 0 });
        }
        componentDidMount() {
          this.unobserve(), this.observeNode();
        }
        componentDidUpdate(s) {
          (s.rootMargin !== this.props.rootMargin ||
            s.root !== this.props.root ||
            s.threshold !== this.props.threshold ||
            s.skip !== this.props.skip ||
            s.trackVisibility !== this.props.trackVisibility ||
            s.delay !== this.props.delay) &&
            (this.unobserve(), this.observeNode());
        }
        componentWillUnmount() {
          this.unobserve();
        }
        observeNode() {
          if (!this.node || this.props.skip) return;
          let {
            threshold: s,
            root: x,
            rootMargin: W,
            trackVisibility: X,
            delay: ee,
            fallbackInView: et,
          } = this.props;
          this._unobserveCb = observe(
            this.node,
            this.handleChange,
            {
              threshold: s,
              root: x,
              rootMargin: W,
              trackVisibility: X,
              delay: ee,
            },
            et
          );
        }
        unobserve() {
          this._unobserveCb &&
            (this._unobserveCb(), (this._unobserveCb = null));
        }
        render() {
          let { children: s } = this.props;
          if ("function" == typeof s) {
            let { inView: x, entry: W } = this.state;
            return s({ inView: x, entry: W, ref: this.handleNode });
          }
          let {
            as: x,
            triggerOnce: W,
            threshold: X,
            root: et,
            rootMargin: er,
            onChange: ei,
            skip: eo,
            trackVisibility: ea,
            delay: es,
            initialInView: el,
            fallbackInView: ec,
            ...eu
          } = this.props;
          return ee.createElement(
            x || "div",
            { ref: this.handleNode, ...eu },
            s
          );
        }
      };
      function useInView({
        threshold: s,
        delay: x,
        trackVisibility: W,
        rootMargin: X,
        root: et,
        triggerOnce: er,
        skip: ei,
        initialInView: eo,
        fallbackInView: ea,
        onChange: es,
      } = {}) {
        var el;
        let [ec, eu] = ee.useState(null),
          ed = ee.useRef(),
          [eh, ep] = ee.useState({ inView: !!eo, entry: void 0 });
        (ed.current = es),
          ee.useEffect(() => {
            let ee;
            if (!ei && ec)
              return (
                (ee = observe(
                  ec,
                  (s, x) => {
                    ep({ inView: s, entry: x }),
                      ed.current && ed.current(s, x),
                      x.isIntersecting && er && ee && (ee(), (ee = void 0));
                  },
                  {
                    root: et,
                    rootMargin: X,
                    threshold: s,
                    trackVisibility: W,
                    delay: x,
                  },
                  ea
                )),
                () => {
                  ee && ee();
                }
              );
          }, [
            Array.isArray(s) ? s.toString() : s,
            ec,
            et,
            X,
            er,
            ei,
            W,
            ea,
            x,
          ]);
        let ef = null == (el = eh.entry) ? void 0 : el.target,
          eg = ee.useRef();
        ec ||
          !ef ||
          er ||
          ei ||
          eg.current === ef ||
          ((eg.current = ef), ep({ inView: !!eo, entry: void 0 }));
        let em = [eu, eh.inView, eh.entry];
        return (em.ref = em[0]), (em.inView = em[1]), (em.entry = em[2]), em;
      }
      var ed = W(14954);
      ei.F4`
  from,
  20%,
  53%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    transform: translate3d(0, 0, 0);
  }

  40%,
  43% {
    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, -30px, 0) scaleY(1.1);
  }

  70% {
    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    transform: translate3d(0, -15px, 0) scaleY(1.05);
  }

  80% {
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    transform: translate3d(0, 0, 0) scaleY(0.95);
  }

  90% {
    transform: translate3d(0, -4px, 0) scaleY(1.02);
  }
`,
        ei.F4`
  from,
  50%,
  to {
    opacity: 1;
  }

  25%,
  75% {
    opacity: 0;
  }
`,
        ei.F4`
  0% {
    transform: translateX(0);
  }

  6.5% {
    transform: translateX(-6px) rotateY(-9deg);
  }

  18.5% {
    transform: translateX(5px) rotateY(7deg);
  }

  31.5% {
    transform: translateX(-3px) rotateY(-5deg);
  }

  43.5% {
    transform: translateX(2px) rotateY(3deg);
  }

  50% {
    transform: translateX(0);
  }
`,
        ei.F4`
  0% {
    transform: scale(1);
  }

  14% {
    transform: scale(1.3);
  }

  28% {
    transform: scale(1);
  }

  42% {
    transform: scale(1.3);
  }

  70% {
    transform: scale(1);
  }
`,
        ei.F4`
  from,
  11.1%,
  to {
    transform: translate3d(0, 0, 0);
  }

  22.2% {
    transform: skewX(-12.5deg) skewY(-12.5deg);
  }

  33.3% {
    transform: skewX(6.25deg) skewY(6.25deg);
  }

  44.4% {
    transform: skewX(-3.125deg) skewY(-3.125deg);
  }

  55.5% {
    transform: skewX(1.5625deg) skewY(1.5625deg);
  }

  66.6% {
    transform: skewX(-0.78125deg) skewY(-0.78125deg);
  }

  77.7% {
    transform: skewX(0.390625deg) skewY(0.390625deg);
  }

  88.8% {
    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);
  }
`,
        ei.F4`
  from {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
`,
        ei.F4`
  from {
    transform: scale3d(1, 1, 1);
  }

  30% {
    transform: scale3d(1.25, 0.75, 1);
  }

  40% {
    transform: scale3d(0.75, 1.25, 1);
  }

  50% {
    transform: scale3d(1.15, 0.85, 1);
  }

  65% {
    transform: scale3d(0.95, 1.05, 1);
  }

  75% {
    transform: scale3d(1.05, 0.95, 1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
`,
        ei.F4`
  from,
  to {
    transform: translate3d(0, 0, 0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translate3d(-10px, 0, 0);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translate3d(10px, 0, 0);
  }
`,
        ei.F4`
  from,
  to {
    transform: translate3d(0, 0, 0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translate3d(-10px, 0, 0);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translate3d(10px, 0, 0);
  }
`,
        ei.F4`
  from,
  to {
    transform: translate3d(0, 0, 0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translate3d(0, -10px, 0);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translate3d(0, 10px, 0);
  }
`,
        ei.F4`
  20% {
    transform: rotate3d(0, 0, 1, 15deg);
  }

  40% {
    transform: rotate3d(0, 0, 1, -10deg);
  }

  60% {
    transform: rotate3d(0, 0, 1, 5deg);
  }

  80% {
    transform: rotate3d(0, 0, 1, -5deg);
  }

  to {
    transform: rotate3d(0, 0, 1, 0deg);
  }
`,
        ei.F4`
  from {
    transform: scale3d(1, 1, 1);
  }

  10%,
  20% {
    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);
  }

  30%,
  50%,
  70%,
  90% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }

  40%,
  60%,
  80% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
`,
        ei.F4`
  from {
    transform: translate3d(0, 0, 0);
  }

  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }

  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }

  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }

  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }

  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
`;
      let eh = ei.F4`
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
`,
        ep = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(-100%, 100%, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        ef = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(100%, 100%, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        eg = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        em = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        ew = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        eb = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        ev = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        ey = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        e_ = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(-100%, -100%, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        eC = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(100%, -100%, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        ex = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        eE = ei.F4`
  from {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`;
      function matchIfOrNull(s) {
        var x;
        return (x = () => null), (W) => (W ? s() : x());
      }
      function hideWhen(s) {
        return matchIfOrNull(() => ({ opacity: 0 }))(s);
      }
      let Reveal = (s) => {
          let {
              cascade: x = !1,
              damping: W = 0.5,
              delay: X = 0,
              duration: et = 1e3,
              fraction: eo = 0,
              keyframes: ea = ew,
              triggerOnce: es = !1,
              className: el,
              style: ec,
              childClassName: eh,
              childStyle: ep,
              children: ef,
              onVisibilityChange: eg,
            } = s,
            em = (0, ee.useMemo)(
              () =>
                (function ({
                  duration: s = 1e3,
                  delay: x = 0,
                  timingFunction: W = "ease",
                  keyframes: X = ew,
                  iterationCount: ee = 1,
                }) {
                  return ei.iv`
    animation-duration: ${s}ms;
    animation-timing-function: ${W};
    animation-delay: ${x}ms;
    animation-name: ${X};
    animation-direction: normal;
    animation-fill-mode: both;
    animation-iteration-count: ${ee};

    @media (prefers-reduced-motion: reduce) {
      animation: none;
    }
  `;
                })({ keyframes: ea, duration: et }),
              [et, ea]
            );
          return void 0 == ef
            ? null
            : "string" == typeof ef ||
              "number" == typeof ef ||
              "boolean" == typeof ef
            ? emotion_react_jsx_runtime_browser_esm_jsx(TextReveal, {
                ...s,
                animationStyles: em,
                children: String(ef),
              })
            : (0, ed.isFragment)(ef)
            ? emotion_react_jsx_runtime_browser_esm_jsx(FragmentReveal, {
                ...s,
                animationStyles: em,
              })
            : emotion_react_jsx_runtime_browser_esm_jsx(er, {
                children: ee.Children.map(ef, (er, ea) => {
                  if (!(0, ee.isValidElement)(er)) return null;
                  let ed = X + (x ? ea * et * W : 0);
                  switch (er.type) {
                    case "ol":
                    case "ul":
                      return emotion_react_jsx_runtime_browser_esm_jsx(ei.ms, {
                        children: ({ cx: x }) =>
                          emotion_react_jsx_runtime_browser_esm_jsx(er.type, {
                            ...er.props,
                            className: x(el, er.props.className),
                            style: Object.assign({}, ec, er.props.style),
                            children: emotion_react_jsx_runtime_browser_esm_jsx(
                              Reveal,
                              { ...s, children: er.props.children }
                            ),
                          }),
                      });
                    case "li":
                      return emotion_react_jsx_runtime_browser_esm_jsx(eu, {
                        threshold: eo,
                        triggerOnce: es,
                        onChange: eg,
                        children: ({ inView: s, ref: x }) =>
                          emotion_react_jsx_runtime_browser_esm_jsx(ei.ms, {
                            children: ({ cx: W }) =>
                              emotion_react_jsx_runtime_browser_esm_jsx(
                                er.type,
                                {
                                  ...er.props,
                                  ref: x,
                                  className: W(eh, er.props.className),
                                  css: matchIfOrNull(() => em)(s),
                                  style: Object.assign(
                                    {},
                                    ep,
                                    er.props.style,
                                    hideWhen(!s),
                                    { animationDelay: ed + "ms" }
                                  ),
                                }
                              ),
                          }),
                      });
                    default:
                      return emotion_react_jsx_runtime_browser_esm_jsx(eu, {
                        threshold: eo,
                        triggerOnce: es,
                        onChange: eg,
                        children: ({ inView: s, ref: x }) =>
                          emotion_react_jsx_runtime_browser_esm_jsx("div", {
                            ref: x,
                            className: el,
                            css: matchIfOrNull(() => em)(s),
                            style: Object.assign({}, ec, hideWhen(!s), {
                              animationDelay: ed + "ms",
                            }),
                            children: emotion_react_jsx_runtime_browser_esm_jsx(
                              ei.ms,
                              {
                                children: ({ cx: s }) =>
                                  emotion_react_jsx_runtime_browser_esm_jsx(
                                    er.type,
                                    {
                                      ...er.props,
                                      className: s(eh, er.props.className),
                                      style: Object.assign(
                                        {},
                                        ep,
                                        er.props.style
                                      ),
                                    }
                                  ),
                              }
                            ),
                          }),
                      });
                  }
                }),
              });
        },
        eA = { display: "inline-block", whiteSpace: "pre" },
        TextReveal = (s) => {
          var x, W;
          let {
              animationStyles: X,
              cascade: ee = !1,
              damping: et = 0.5,
              delay: er = 0,
              duration: ei = 1e3,
              fraction: eo = 0,
              triggerOnce: ea = !1,
              className: es,
              style: el,
              children: ec,
              onVisibilityChange: eu,
            } = s,
            { ref: ed, inView: eh } = useInView({
              triggerOnce: ea,
              threshold: eo,
              onChange: eu,
            });
          return ((x = () =>
            emotion_react_jsx_runtime_browser_esm_jsx("div", {
              ref: ed,
              className: es,
              style: Object.assign({}, el, eA),
              children: ec
                .split("")
                .map((s, x) =>
                  emotion_react_jsx_runtime_browser_esm_jsx(
                    "span",
                    {
                      css: matchIfOrNull(() => X)(eh),
                      style: { animationDelay: er + x * ei * et + "ms" },
                      children: s,
                    },
                    x
                  )
                ),
            })),
          (W = () =>
            emotion_react_jsx_runtime_browser_esm_jsx(FragmentReveal, {
              ...s,
              children: ec,
            })),
          (W) => (W ? x() : W()))(ee);
        },
        FragmentReveal = (s) => {
          let {
              animationStyles: x,
              fraction: W = 0,
              triggerOnce: X = !1,
              className: ee,
              style: et,
              children: er,
              onVisibilityChange: ei,
            } = s,
            { ref: eo, inView: ea } = useInView({
              triggerOnce: X,
              threshold: W,
              onChange: ei,
            });
          return emotion_react_jsx_runtime_browser_esm_jsx("div", {
            ref: eo,
            className: ee,
            css: matchIfOrNull(() => x)(ea),
            style: Object.assign({}, et, hideWhen(!ea)),
            children: er,
          });
        };
      ei.F4`
  from,
  20%,
  40%,
  60%,
  80%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  0% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }

  20% {
    transform: scale3d(1.1, 1.1, 1.1);
  }

  40% {
    transform: scale3d(0.9, 0.9, 0.9);
  }

  60% {
    opacity: 1;
    transform: scale3d(1.03, 1.03, 1.03);
  }

  80% {
    transform: scale3d(0.97, 0.97, 0.97);
  }

  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
`,
        ei.F4`
  from,
  60%,
  75%,
  90%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  0% {
    opacity: 0;
    transform: translate3d(0, -3000px, 0) scaleY(3);
  }

  60% {
    opacity: 1;
    transform: translate3d(0, 25px, 0) scaleY(0.9);
  }

  75% {
    transform: translate3d(0, -10px, 0) scaleY(0.95);
  }

  90% {
    transform: translate3d(0, 5px, 0) scaleY(0.985);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
`,
        ei.F4`
  from,
  60%,
  75%,
  90%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  0% {
    opacity: 0;
    transform: translate3d(-3000px, 0, 0) scaleX(3);
  }

  60% {
    opacity: 1;
    transform: translate3d(25px, 0, 0) scaleX(1);
  }

  75% {
    transform: translate3d(-10px, 0, 0) scaleX(0.98);
  }

  90% {
    transform: translate3d(5px, 0, 0) scaleX(0.995);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
`,
        ei.F4`
  from,
  60%,
  75%,
  90%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  from {
    opacity: 0;
    transform: translate3d(3000px, 0, 0) scaleX(3);
  }

  60% {
    opacity: 1;
    transform: translate3d(-25px, 0, 0) scaleX(1);
  }

  75% {
    transform: translate3d(10px, 0, 0) scaleX(0.98);
  }

  90% {
    transform: translate3d(-5px, 0, 0) scaleX(0.995);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
`,
        ei.F4`
  from,
  60%,
  75%,
  90%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  from {
    opacity: 0;
    transform: translate3d(0, 3000px, 0) scaleY(5);
  }

  60% {
    opacity: 1;
    transform: translate3d(0, -20px, 0) scaleY(0.9);
  }

  75% {
    transform: translate3d(0, 10px, 0) scaleY(0.95);
  }

  90% {
    transform: translate3d(0, -5px, 0) scaleY(0.985);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
`,
        ei.F4`
  20% {
    transform: scale3d(0.9, 0.9, 0.9);
  }

  50%,
  55% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1.1);
  }

  to {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
`,
        ei.F4`
  20% {
    transform: translate3d(0, 10px, 0) scaleY(0.985);
  }

  40%,
  45% {
    opacity: 1;
    transform: translate3d(0, -20px, 0) scaleY(0.9);
  }

  to {
    opacity: 0;
    transform: translate3d(0, 2000px, 0) scaleY(3);
  }
`,
        ei.F4`
  20% {
    opacity: 1;
    transform: translate3d(20px, 0, 0) scaleX(0.9);
  }

  to {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0) scaleX(2);
  }
`,
        ei.F4`
  20% {
    opacity: 1;
    transform: translate3d(-20px, 0, 0) scaleX(0.9);
  }

  to {
    opacity: 0;
    transform: translate3d(2000px, 0, 0) scaleX(2);
  }
`,
        ei.F4`
  20% {
    transform: translate3d(0, -10px, 0) scaleY(0.985);
  }

  40%,
  45% {
    opacity: 1;
    transform: translate3d(0, 20px, 0) scaleY(0.9);
  }

  to {
    opacity: 0;
    transform: translate3d(0, -2000px, 0) scaleY(3);
  }
`;
      let eS = ei.F4`
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
`,
        ek = ei.F4`
  from {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(-100%, 100%, 0);
  }
`,
        eT = ei.F4`
  from {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(100%, 100%, 0);
  }
`,
        eI = ei.F4`
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }
`,
        eP = ei.F4`
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }
`,
        eR = ei.F4`
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }
`,
        eN = ei.F4`
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }
`,
        eO = ei.F4`
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }
`,
        eM = ei.F4`
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }
`,
        eD = ei.F4`
  from {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(-100%, -100%, 0);
  }
`,
        eB = ei.F4`
  from {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(100%, -100%, 0);
  }
`,
        eL = ei.F4`
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }
`,
        ej = ei.F4`
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }
`,
        Fade = (s) => {
          let { big: x = !1, direction: W, reverse: X = !1, ...et } = s,
            er = (0, ee.useMemo)(
              () =>
                (function (s, x, W) {
                  switch (W) {
                    case "bottom-left":
                      return x ? ek : ep;
                    case "bottom-right":
                      return x ? eT : ef;
                    case "down":
                      return s ? (x ? eP : em) : x ? eI : eg;
                    case "left":
                      return s ? (x ? eN : eb) : x ? eR : ew;
                    case "right":
                      return s ? (x ? eM : ey) : x ? eO : ev;
                    case "top-left":
                      return x ? eD : e_;
                    case "top-right":
                      return x ? eB : eC;
                    case "up":
                      return s ? (x ? ej : eE) : x ? eL : ex;
                    default:
                      return x ? eS : eh;
                  }
                })(x, X, W),
              [x, W, X]
            );
          return emotion_react_jsx_runtime_browser_esm_jsx(Reveal, {
            keyframes: er,
            ...et,
          });
        };
      ei.F4`
  from {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, -360deg);
    animation-timing-function: ease-out;
  }

  40% {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)
      rotate3d(0, 1, 0, -190deg);
    animation-timing-function: ease-out;
  }

  50% {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)
      rotate3d(0, 1, 0, -170deg);
    animation-timing-function: ease-in;
  }

  80% {
    transform: perspective(400px) scale3d(0.95, 0.95, 0.95) translate3d(0, 0, 0)
      rotate3d(0, 1, 0, 0deg);
    animation-timing-function: ease-in;
  }

  to {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, 0deg);
    animation-timing-function: ease-in;
  }
`,
        ei.F4`
  from {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
  }

  to {
    transform: perspective(400px);
  }
`,
        ei.F4`
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }

  to {
    transform: perspective(400px);
  }
`,
        ei.F4`
  from {
    transform: perspective(400px);
  }

  30% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    opacity: 1;
  }

  to {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    opacity: 0;
  }
`,
        ei.F4`
  from {
    transform: perspective(400px);
  }

  30% {
    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
    opacity: 1;
  }

  to {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    opacity: 0;
  }
`,
        ei.F4`
  0% {
    animation-timing-function: ease-in-out;
  }

  20%,
  60% {
    transform: rotate3d(0, 0, 1, 80deg);
    animation-timing-function: ease-in-out;
  }

  40%,
  80% {
    transform: rotate3d(0, 0, 1, 60deg);
    animation-timing-function: ease-in-out;
    opacity: 1;
  }

  to {
    transform: translate3d(0, 700px, 0);
    opacity: 0;
  }
`,
        ei.F4`
  from {
    opacity: 0;
    transform: scale(0.1) rotate(30deg);
    transform-origin: center bottom;
  }

  50% {
    transform: rotate(-10deg);
  }

  70% {
    transform: rotate(3deg);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
`,
        ei.F4`
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
`,
        ei.F4`
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
  }
`,
        ei.F4`
  from {
    transform: rotate3d(0, 0, 1, -200deg);
    opacity: 0;
  }

  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
`,
        ei.F4`
  from {
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }

  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
`,
        ei.F4`
  from {
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }

  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
`,
        ei.F4`
  from {
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }

  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
`,
        ei.F4`
  from {
    transform: rotate3d(0, 0, 1, -90deg);
    opacity: 0;
  }

  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
`,
        ei.F4`
  from {
    opacity: 1;
  }

  to {
    transform: rotate3d(0, 0, 1, 200deg);
    opacity: 0;
  }
`,
        ei.F4`
  from {
    opacity: 1;
  }

  to {
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }
`,
        ei.F4`
  from {
    opacity: 1;
  }

  to {
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
`,
        ei.F4`
  from {
    opacity: 1;
  }

  to {
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
`,
        ei.F4`
  from {
    opacity: 1;
  }

  to {
    transform: rotate3d(0, 0, 1, 90deg);
    opacity: 0;
  }
`,
        ei.F4`
  from {
    transform: translate3d(0, -100%, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
`,
        ei.F4`
  from {
    transform: translate3d(-100%, 0, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
`,
        ei.F4`
  from {
    transform: translate3d(100%, 0, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
`,
        ei.F4`
  from {
    transform: translate3d(0, 100%, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
`,
        ei.F4`
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(0, 100%, 0);
  }
`,
        ei.F4`
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(-100%, 0, 0);
  }
`,
        ei.F4`
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(100%, 0, 0);
  }
`,
        ei.F4`
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(0, -100%, 0);
  }
`,
        ei.F4`
  from {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }

  50% {
    opacity: 1;
  }
`,
        ei.F4`
  from {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
`,
        ei.F4`
  from {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
`,
        ei.F4`
  from {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
`,
        ei.F4`
  from {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
`,
        ei.F4`
  from {
    opacity: 1;
  }

  50% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }

  to {
    opacity: 0;
  }
`,
        ei.F4`
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  to {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
`,
        ei.F4`
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(42px, 0, 0);
  }

  to {
    opacity: 0;
    transform: scale(0.1) translate3d(-2000px, 0, 0);
  }
`,
        ei.F4`
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(-42px, 0, 0);
  }

  to {
    opacity: 0;
    transform: scale(0.1) translate3d(2000px, 0, 0);
  }
`,
        ei.F4`
  40% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  to {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
`;
      var eU = W(67421),
        e$ = W(39039),
        eF = W(70741),
        ez = W(41664),
        eH = W.n(ez),
        eV = W(66261);
      function Footer() {
        let { t: s } = (0, eU.$G)();
        return (0, X.jsx)("div", {
          className:
            "relative pt-[43px] md:pt-[55px] pb-[26px] md:pb-[103px] bg-[#A7B3BF] text-black",
          children: (0, X.jsx)(Fade, {
            duration: 1e3,
            className: "relative z-10 max-w-[1280px] m-auto",
            children: (0, X.jsxs)("footer", {
              className:
                "relative flex flex-col items-center justify-center w-full m-auto px-2 gap-10",
              children: [
                (0, X.jsxs)("div", {
                  className:
                    "relative flex flex-col lg:flex-row w-full gap-10 items-center justify-center",
                  children: [
                    (0, X.jsxs)("div", {
                      className: "flex flex-row items-center w-auto gap-4",
                      children: [
                        (0, X.jsx)("img", {
                          src: "./images/large-logo.png",
                          className:
                            "w-[114px] h-[127px] lg:w-[128px] lg:h-[141px]",
                          draggable: !1,
                          alt: "logo",
                        }),
                        (0, X.jsx)("span", {
                          className:
                            "label-earth-stroke-shadow text-white text-[56px] lg:text-[64px] normal-case",
                          children: "Panshibi",
                        }),
                      ],
                    }),
                    (0, X.jsx)("img", {
                      src: "./images/characters/overview.png",
                      className:
                        "w-[404px] h-[348px] xl:w-[563px] xl:h-[484px]",
                      draggable: !1,
                      alt: "logo",
                    }),
                  ],
                }),
                (0, X.jsx)("div", {
                  className: "flex items-center gap-10",
                  children: (0, X.jsx)(
                    () =>
                      (0, X.jsxs)(X.Fragment, {
                        children: [
                          (0, X.jsx)(eH(), {
                            href: "https://x.com/Panshibi_",
                            className: "hover:scale-110",
                            target: "_blank",
                            children: (0, X.jsx)(e$.default, {
                              className: "size-6",
                            }),
                          }),
                          (0, X.jsx)(eH(), {
                            href: "https://t.me/panshibi",
                            className: "hover:scale-110",
                            target: "_blank",
                            children: (0, X.jsx)(eF.default, {
                              className: "size-7",
                            }),
                          }),
                        ],
                      }),
                    {}
                  ),
                }),
                (0, X.jsxs)("div", {
                  className:
                    "flex flex-col lg:flex-row items-center gap-2 lg:gap-10",
                  children: [
                    (0, X.jsx)(eH(), {
                      href: "/terms",
                      className: "cursor-pointer",
                      children: s("terms_of_service"),
                    }),
                    (0, X.jsx)(eH(), {
                      href: "/privacy",
                      className: "cursor-pointer",
                      children: s("privacy_policy"),
                    }),
                    (0, X.jsx)(eV.rU, {
                      to: "faqs",
                      className: "cursor-pointer",
                      children: "FAQ",
                    }),
                  ],
                }),
                (0, X.jsx)("span", {
                  className: "text-[16px] text-center max-w-[1024px]",
                  children: s("disclaimer"),
                }),
                (0, X.jsx)("span", {
                  className: "text-[16px]",
                  children: "\xa9Panshibi 2025 all rights reserved",
                }),
              ],
            }),
          }),
        });
      }
    },
    80257: function (s, x, W) {
      "use strict";
      let X;
      W.r(x),
        W.d(x, {
          default: function () {
            return HamburgerMenu;
          },
        });
      var ee,
        et,
        er,
        ei = W(85893),
        eo = W(67294),
        ea = W(52463),
        es = W(66261);
      let el = (0, eo.createContext)(null);
      function useConstant(s) {
        let x = (0, eo.useRef)(null);
        return null === x.current && (x.current = s()), x.current;
      }
      let ec = (0, eo.createContext)({
        transformPagePoint: (s) => s,
        isStatic: !1,
        reducedMotion: "never",
      });
      let PopChildMeasure = class PopChildMeasure extends eo.Component {
        getSnapshotBeforeUpdate(s) {
          let x = this.props.childRef.current;
          if (x && s.isPresent && !this.props.isPresent) {
            let s = this.props.sizeRef.current;
            (s.height = x.offsetHeight || 0),
              (s.width = x.offsetWidth || 0),
              (s.top = x.offsetTop),
              (s.left = x.offsetLeft);
          }
          return null;
        }
        componentDidUpdate() {}
        render() {
          return this.props.children;
        }
      };
      function PopChild({ children: s, isPresent: x }) {
        let W = (0, eo.useId)(),
          X = (0, eo.useRef)(null),
          ee = (0, eo.useRef)({ width: 0, height: 0, top: 0, left: 0 }),
          { nonce: et } = (0, eo.useContext)(ec);
        return (
          (0, eo.useInsertionEffect)(() => {
            let { width: s, height: er, top: ei, left: eo } = ee.current;
            if (x || !X.current || !s || !er) return;
            X.current.dataset.motionPopId = W;
            let ea = document.createElement("style");
            return (
              et && (ea.nonce = et),
              document.head.appendChild(ea),
              ea.sheet &&
                ea.sheet.insertRule(`
          [data-motion-pop-id="${W}"] {
            position: absolute !important;
            width: ${s}px !important;
            height: ${er}px !important;
            top: ${ei}px !important;
            left: ${eo}px !important;
          }
        `),
              () => {
                document.head.removeChild(ea);
              }
            );
          }, [x]),
          (0, ei.jsx)(PopChildMeasure, {
            isPresent: x,
            childRef: X,
            sizeRef: ee,
            children: eo.cloneElement(s, { ref: X }),
          })
        );
      }
      let PresenceChild = ({
        children: s,
        initial: x,
        isPresent: W,
        onExitComplete: X,
        custom: ee,
        presenceAffectsLayout: et,
        mode: er,
      }) => {
        let ea = useConstant(newChildrenMap),
          es = (0, eo.useId)(),
          ec = (0, eo.useCallback)(
            (s) => {
              for (let x of (ea.set(s, !0), ea.values())) if (!x) return;
              X && X();
            },
            [ea, X]
          ),
          eu = (0, eo.useMemo)(
            () => ({
              id: es,
              initial: x,
              isPresent: W,
              custom: ee,
              onExitComplete: ec,
              register: (s) => (ea.set(s, !1), () => ea.delete(s)),
            }),
            et ? [Math.random(), ec] : [W, ec]
          );
        return (
          (0, eo.useMemo)(() => {
            ea.forEach((s, x) => ea.set(x, !1));
          }, [W]),
          eo.useEffect(() => {
            W || ea.size || !X || X();
          }, [W]),
          "popLayout" === er &&
            (s = (0, ei.jsx)(PopChild, { isPresent: W, children: s })),
          (0, ei.jsx)(el.Provider, { value: eu, children: s })
        );
      };
      function newChildrenMap() {
        return new Map();
      }
      let eu = (0, eo.createContext)({}),
        noop = (s) => s,
        getChildKey = (s) => s.key || "";
      function onlyElements(s) {
        let x = [];
        return (
          eo.Children.forEach(s, (s) => {
            (0, eo.isValidElement)(s) && x.push(s);
          }),
          x
        );
      }
      let ed = "undefined" != typeof window,
        eh = ed ? eo.useLayoutEffect : eo.useEffect,
        AnimatePresence = ({
          children: s,
          exitBeforeEnter: x,
          custom: W,
          initial: X = !0,
          onExitComplete: ee,
          presenceAffectsLayout: et = !0,
          mode: er = "sync",
        }) => {
          noop(!x, "Replace exitBeforeEnter with mode='wait'");
          let ea = (0, eo.useMemo)(() => onlyElements(s), [s]),
            es = ea.map(getChildKey),
            el = (0, eo.useRef)(!0),
            ec = (0, eo.useRef)(ea),
            ed = useConstant(() => new Map()),
            [ep, ef] = (0, eo.useState)(ea),
            [eg, em] = (0, eo.useState)(ea);
          eh(() => {
            (el.current = !1), (ec.current = ea);
            for (let s = 0; s < eg.length; s++) {
              let x = getChildKey(eg[s]);
              es.includes(x) ? ed.delete(x) : !0 !== ed.get(x) && ed.set(x, !1);
            }
          }, [eg, es.length, es.join("-")]);
          let ew = [];
          if (ea !== ep) {
            let s = [...ea];
            for (let x = 0; x < eg.length; x++) {
              let W = eg[x],
                X = getChildKey(W);
              es.includes(X) || (s.splice(x, 0, W), ew.push(W));
            }
            "wait" === er && ew.length && (s = ew), em(onlyElements(s)), ef(ea);
            return;
          }
          let { forceRender: eb } = (0, eo.useContext)(eu);
          return (0, ei.jsx)(ei.Fragment, {
            children: eg.map((s) => {
              let x = getChildKey(s),
                eo = ea === eg || es.includes(x);
              return (0, ei.jsx)(
                PresenceChild,
                {
                  isPresent: eo,
                  initial: (!el.current || !!X) && void 0,
                  custom: eo ? void 0 : W,
                  presenceAffectsLayout: et,
                  mode: er,
                  onExitComplete: eo
                    ? void 0
                    : () => {
                        if (!ed.has(x)) return;
                        ed.set(x, !0);
                        let s = !0;
                        ed.forEach((x) => {
                          x || (s = !1);
                        }),
                          s && (null == eb || eb(), em(ec.current), ee && ee());
                      },
                  children: s,
                },
                x
              );
            }),
          });
        };
      function isAnimationControls(s) {
        return (
          null !== s && "object" == typeof s && "function" == typeof s.start
        );
      }
      let isKeyframesTarget = (s) => Array.isArray(s);
      function shallowCompare(s, x) {
        if (!Array.isArray(x)) return !1;
        let W = x.length;
        if (W !== s.length) return !1;
        for (let X = 0; X < W; X++) if (x[X] !== s[X]) return !1;
        return !0;
      }
      function isVariantLabel(s) {
        return "string" == typeof s || Array.isArray(s);
      }
      function getValueState(s) {
        let x = [{}, {}];
        return (
          null == s ||
            s.values.forEach((s, W) => {
              (x[0][W] = s.get()), (x[1][W] = s.getVelocity());
            }),
          x
        );
      }
      function resolveVariantFromProps(s, x, W, X) {
        if ("function" == typeof x) {
          let [ee, et] = getValueState(X);
          x = x(void 0 !== W ? W : s.custom, ee, et);
        }
        if (
          ("string" == typeof x && (x = s.variants && s.variants[x]),
          "function" == typeof x)
        ) {
          let [ee, et] = getValueState(X);
          x = x(void 0 !== W ? W : s.custom, ee, et);
        }
        return x;
      }
      function resolveVariant(s, x, W) {
        let X = s.getProps();
        return resolveVariantFromProps(X, x, void 0 !== W ? W : X.custom, s);
      }
      let ep = [
          "animate",
          "whileInView",
          "whileFocus",
          "whileHover",
          "whileTap",
          "whileDrag",
          "exit",
        ],
        ef = ["initial", ...ep],
        eg = [
          "transformPerspective",
          "x",
          "y",
          "z",
          "translateX",
          "translateY",
          "translateZ",
          "scale",
          "scaleX",
          "scaleY",
          "rotate",
          "rotateX",
          "rotateY",
          "rotateZ",
          "skew",
          "skewX",
          "skewY",
        ],
        em = new Set(eg),
        time_conversion_secondsToMilliseconds = (s) => 1e3 * s,
        millisecondsToSeconds = (s) => s / 1e3,
        ew = { type: "spring", stiffness: 500, damping: 25, restSpeed: 10 },
        criticallyDampedSpring = (s) => ({
          type: "spring",
          stiffness: 550,
          damping: 0 === s ? 2 * Math.sqrt(550) : 30,
          restSpeed: 10,
        }),
        eb = { type: "keyframes", duration: 0.8 },
        ev = { type: "keyframes", ease: [0.25, 0.1, 0.35, 1], duration: 0.3 },
        getDefaultTransition = (s, { keyframes: x }) =>
          x.length > 2
            ? eb
            : em.has(s)
            ? s.startsWith("scale")
              ? criticallyDampedSpring(x[1])
              : ew
            : ev;
      function getValueTransition(s, x) {
        return s ? s[x] || s.default || s : void 0;
      }
      let ey = { skipAnimations: !1, useManualTiming: !1 },
        e_ = { current: !1 },
        isNotNull = (s) => null !== s;
      function getFinalKeyframe(s, { repeat: x, repeatType: W = "loop" }, X) {
        let ee = s.filter(isNotNull),
          et = x && "loop" !== W && x % 2 == 1 ? 0 : ee.length - 1;
        return et && void 0 !== X ? X : ee[et];
      }
      let eC = [
        "read",
        "resolveKeyframes",
        "update",
        "preRender",
        "render",
        "postRender",
      ];
      function createRenderBatcher(s, x) {
        let W = !1,
          X = !0,
          ee = { delta: 0, timestamp: 0, isProcessing: !1 },
          flagRunNextFrame = () => (W = !0),
          et = eC.reduce(
            (s, x) => (
              (s[x] = (function (s) {
                let x = new Set(),
                  W = new Set(),
                  X = !1,
                  ee = !1,
                  et = new WeakSet(),
                  er = { delta: 0, timestamp: 0, isProcessing: !1 };
                function triggerCallback(x) {
                  et.has(x) && (ei.schedule(x), s()), x(er);
                }
                let ei = {
                  schedule: (s, ee = !1, er = !1) => {
                    let ei = er && X,
                      eo = ei ? x : W;
                    return ee && et.add(s), eo.has(s) || eo.add(s), s;
                  },
                  cancel: (s) => {
                    W.delete(s), et.delete(s);
                  },
                  process: (s) => {
                    if (((er = s), X)) {
                      ee = !0;
                      return;
                    }
                    (X = !0),
                      ([x, W] = [W, x]),
                      W.clear(),
                      x.forEach(triggerCallback),
                      (X = !1),
                      ee && ((ee = !1), ei.process(s));
                  },
                };
                return ei;
              })(flagRunNextFrame)),
              s
            ),
            {}
          ),
          {
            read: er,
            resolveKeyframes: ei,
            update: eo,
            preRender: ea,
            render: es,
            postRender: el,
          } = et,
          processBatch = () => {
            let et = ey.useManualTiming ? ee.timestamp : performance.now();
            (W = !1),
              (ee.delta = X
                ? 1e3 / 60
                : Math.max(Math.min(et - ee.timestamp, 40), 1)),
              (ee.timestamp = et),
              (ee.isProcessing = !0),
              er.process(ee),
              ei.process(ee),
              eo.process(ee),
              ea.process(ee),
              es.process(ee),
              el.process(ee),
              (ee.isProcessing = !1),
              W && x && ((X = !1), s(processBatch));
          },
          wake = () => {
            (W = !0), (X = !0), ee.isProcessing || s(processBatch);
          },
          ec = eC.reduce((s, x) => {
            let X = et[x];
            return (
              (s[x] = (s, x = !1, ee = !1) => (
                W || wake(), X.schedule(s, x, ee)
              )),
              s
            );
          }, {});
        return {
          schedule: ec,
          cancel: (s) => {
            for (let x = 0; x < eC.length; x++) et[eC[x]].cancel(s);
          },
          state: ee,
          steps: et,
        };
      }
      let {
          schedule: ex,
          cancel: eE,
          state: eA,
          steps: eS,
        } = createRenderBatcher(
          "undefined" != typeof requestAnimationFrame
            ? requestAnimationFrame
            : noop,
          !0
        ),
        calcBezier = (s, x, W) =>
          (((1 - 3 * W + 3 * x) * s + (3 * W - 6 * x)) * s + 3 * x) * s;
      function cubicBezier(s, x, W, X) {
        if (s === x && W === X) return noop;
        let getTForX = (x) =>
          (function (s, x, W, X, ee) {
            let et, er;
            let ei = 0;
            do
              (et = calcBezier((er = x + (W - x) / 2), X, ee) - s) > 0
                ? (W = er)
                : (x = er);
            while (Math.abs(et) > 1e-7 && ++ei < 12);
            return er;
          })(x, 0, 1, s, W);
        return (s) => (0 === s || 1 === s ? s : calcBezier(getTForX(s), x, X));
      }
      let mirrorEasing = (s) => (x) =>
          x <= 0.5 ? s(2 * x) / 2 : (2 - s(2 * (1 - x))) / 2,
        reverseEasing = (s) => (x) => 1 - s(1 - x),
        ek = cubicBezier(0.33, 1.53, 0.69, 0.99),
        eT = reverseEasing(ek),
        eI = mirrorEasing(eT),
        anticipate = (s) =>
          (s *= 2) < 1 ? 0.5 * eT(s) : 0.5 * (2 - Math.pow(2, -10 * (s - 1))),
        circIn = (s) => 1 - Math.sin(Math.acos(s)),
        eP = reverseEasing(circIn),
        eR = mirrorEasing(circIn),
        isZeroValueString = (s) => /^0[^.\s]+$/u.test(s),
        isNumericalString = (s) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(s),
        checkStringStartsWith = (s) => (x) =>
          "string" == typeof x && x.startsWith(s),
        eN = checkStringStartsWith("--"),
        eO = checkStringStartsWith("var(--"),
        isCSSVariableToken = (s) => {
          let x = eO(s);
          return !!x && eM.test(s.split("/*")[0].trim());
        },
        eM =
          /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu,
        eD = /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u,
        clamp = (s, x, W) => (W > x ? x : W < s ? s : W),
        eB = {
          test: (s) => "number" == typeof s,
          parse: parseFloat,
          transform: (s) => s,
        },
        eL = { ...eB, transform: (s) => clamp(0, 1, s) },
        ej = { ...eB, default: 1 },
        createUnitType = (s) => ({
          test: (x) =>
            "string" == typeof x && x.endsWith(s) && 1 === x.split(" ").length,
          parse: parseFloat,
          transform: (x) => `${x}${s}`,
        }),
        eU = createUnitType("deg"),
        e$ = createUnitType("%"),
        eF = createUnitType("px"),
        ez = createUnitType("vh"),
        eH = createUnitType("vw"),
        eV = {
          ...e$,
          parse: (s) => e$.parse(s) / 100,
          transform: (s) => e$.transform(100 * s),
        },
        eW = new Set([
          "width",
          "height",
          "top",
          "left",
          "right",
          "bottom",
          "x",
          "y",
          "translateX",
          "translateY",
        ]),
        isNumOrPxType = (s) => s === eB || s === eF,
        getPosFromMatrix = (s, x) => parseFloat(s.split(", ")[x]),
        getTranslateFromMatrix =
          (s, x) =>
          (W, { transform: X }) => {
            if ("none" === X || !X) return 0;
            let ee = X.match(/^matrix3d\((.+)\)$/u);
            if (ee) return getPosFromMatrix(ee[1], x);
            {
              let x = X.match(/^matrix\((.+)\)$/u);
              return x ? getPosFromMatrix(x[1], s) : 0;
            }
          },
        eK = new Set(["x", "y", "z"]),
        eZ = eg.filter((s) => !eK.has(s)),
        eG = {
          width: ({ x: s }, { paddingLeft: x = "0", paddingRight: W = "0" }) =>
            s.max - s.min - parseFloat(x) - parseFloat(W),
          height: ({ y: s }, { paddingTop: x = "0", paddingBottom: W = "0" }) =>
            s.max - s.min - parseFloat(x) - parseFloat(W),
          top: (s, { top: x }) => parseFloat(x),
          left: (s, { left: x }) => parseFloat(x),
          bottom: ({ y: s }, { top: x }) => parseFloat(x) + (s.max - s.min),
          right: ({ x: s }, { left: x }) => parseFloat(x) + (s.max - s.min),
          x: getTranslateFromMatrix(4, 13),
          y: getTranslateFromMatrix(5, 14),
        };
      (eG.translateX = eG.x), (eG.translateY = eG.y);
      let testValueType = (s) => (x) => x.test(s),
        eY = [
          eB,
          eF,
          e$,
          eU,
          eH,
          ez,
          { test: (s) => "auto" === s, parse: (s) => s },
        ],
        findDimensionValueType = (s) => eY.find(testValueType(s)),
        eQ = new Set(),
        eJ = !1,
        eX = !1;
      function measureAllKeyframes() {
        if (eX) {
          let s = Array.from(eQ).filter((s) => s.needsMeasurement),
            x = new Set(s.map((s) => s.element)),
            W = new Map();
          x.forEach((s) => {
            let x = (function (s) {
              let x = [];
              return (
                eZ.forEach((W) => {
                  let X = s.getValue(W);
                  void 0 !== X &&
                    (x.push([W, X.get()]),
                    X.set(W.startsWith("scale") ? 1 : 0));
                }),
                x
              );
            })(s);
            x.length && (W.set(s, x), s.render());
          }),
            s.forEach((s) => s.measureInitialState()),
            x.forEach((s) => {
              s.render();
              let x = W.get(s);
              x &&
                x.forEach(([x, W]) => {
                  var X;
                  null === (X = s.getValue(x)) || void 0 === X || X.set(W);
                });
            }),
            s.forEach((s) => s.measureEndState()),
            s.forEach((s) => {
              void 0 !== s.suspendedScrollY &&
                window.scrollTo(0, s.suspendedScrollY);
            });
        }
        (eX = !1), (eJ = !1), eQ.forEach((s) => s.complete()), eQ.clear();
      }
      function readAllKeyframes() {
        eQ.forEach((s) => {
          s.readKeyframes(), s.needsMeasurement && (eX = !0);
        });
      }
      let KeyframeResolver = class KeyframeResolver {
        constructor(s, x, W, X, ee, et = !1) {
          (this.isComplete = !1),
            (this.isAsync = !1),
            (this.needsMeasurement = !1),
            (this.isScheduled = !1),
            (this.unresolvedKeyframes = [...s]),
            (this.onComplete = x),
            (this.name = W),
            (this.motionValue = X),
            (this.element = ee),
            (this.isAsync = et);
        }
        scheduleResolve() {
          (this.isScheduled = !0),
            this.isAsync
              ? (eQ.add(this),
                eJ ||
                  ((eJ = !0),
                  ex.read(readAllKeyframes),
                  ex.resolveKeyframes(measureAllKeyframes)))
              : (this.readKeyframes(), this.complete());
        }
        readKeyframes() {
          let {
            unresolvedKeyframes: s,
            name: x,
            element: W,
            motionValue: X,
          } = this;
          for (let ee = 0; ee < s.length; ee++)
            if (null === s[ee]) {
              if (0 === ee) {
                let ee = null == X ? void 0 : X.get(),
                  et = s[s.length - 1];
                if (void 0 !== ee) s[0] = ee;
                else if (W && x) {
                  let X = W.readValue(x, et);
                  null != X && (s[0] = X);
                }
                void 0 === s[0] && (s[0] = et),
                  X && void 0 === ee && X.set(s[0]);
              } else s[ee] = s[ee - 1];
            }
        }
        setFinalKeyframe() {}
        measureInitialState() {}
        renderEndStyles() {}
        measureEndState() {}
        complete() {
          (this.isComplete = !0),
            this.onComplete(this.unresolvedKeyframes, this.finalKeyframe),
            eQ.delete(this);
        }
        cancel() {
          this.isComplete || ((this.isScheduled = !1), eQ.delete(this));
        }
        resume() {
          this.isComplete || this.scheduleResolve();
        }
      };
      let sanitize = (s) => Math.round(1e5 * s) / 1e5,
        e0 = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu,
        e1 =
          /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu,
        isColorString = (s, x) => (W) =>
          !!(
            ("string" == typeof W && e1.test(W) && W.startsWith(s)) ||
            (x && null != W && Object.prototype.hasOwnProperty.call(W, x))
          ),
        splitColor = (s, x, W) => (X) => {
          if ("string" != typeof X) return X;
          let [ee, et, er, ei] = X.match(e0);
          return {
            [s]: parseFloat(ee),
            [x]: parseFloat(et),
            [W]: parseFloat(er),
            alpha: void 0 !== ei ? parseFloat(ei) : 1,
          };
        },
        clampRgbUnit = (s) => clamp(0, 255, s),
        e2 = { ...eB, transform: (s) => Math.round(clampRgbUnit(s)) },
        e3 = {
          test: isColorString("rgb", "red"),
          parse: splitColor("red", "green", "blue"),
          transform: ({ red: s, green: x, blue: W, alpha: X = 1 }) =>
            "rgba(" +
            e2.transform(s) +
            ", " +
            e2.transform(x) +
            ", " +
            e2.transform(W) +
            ", " +
            sanitize(eL.transform(X)) +
            ")",
        },
        e5 = {
          test: isColorString("#"),
          parse: function (s) {
            let x = "",
              W = "",
              X = "",
              ee = "";
            return (
              s.length > 5
                ? ((x = s.substring(1, 3)),
                  (W = s.substring(3, 5)),
                  (X = s.substring(5, 7)),
                  (ee = s.substring(7, 9)))
                : ((x = s.substring(1, 2)),
                  (W = s.substring(2, 3)),
                  (X = s.substring(3, 4)),
                  (ee = s.substring(4, 5)),
                  (x += x),
                  (W += W),
                  (X += X),
                  (ee += ee)),
              {
                red: parseInt(x, 16),
                green: parseInt(W, 16),
                blue: parseInt(X, 16),
                alpha: ee ? parseInt(ee, 16) / 255 : 1,
              }
            );
          },
          transform: e3.transform,
        },
        e6 = {
          test: isColorString("hsl", "hue"),
          parse: splitColor("hue", "saturation", "lightness"),
          transform: ({ hue: s, saturation: x, lightness: W, alpha: X = 1 }) =>
            "hsla(" +
            Math.round(s) +
            ", " +
            e$.transform(sanitize(x)) +
            ", " +
            e$.transform(sanitize(W)) +
            ", " +
            sanitize(eL.transform(X)) +
            ")",
        },
        e4 = {
          test: (s) => e3.test(s) || e5.test(s) || e6.test(s),
          parse: (s) =>
            e3.test(s) ? e3.parse(s) : e6.test(s) ? e6.parse(s) : e5.parse(s),
          transform: (s) =>
            "string" == typeof s
              ? s
              : s.hasOwnProperty("red")
              ? e3.transform(s)
              : e6.transform(s),
        },
        e8 =
          /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu,
        e9 = "number",
        e7 = "color",
        tt =
          /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
      function analyseComplexValue(s) {
        let x = s.toString(),
          W = [],
          X = { color: [], number: [], var: [] },
          ee = [],
          et = 0,
          er = x.replace(
            tt,
            (s) => (
              e4.test(s)
                ? (X.color.push(et), ee.push(e7), W.push(e4.parse(s)))
                : s.startsWith("var(")
                ? (X.var.push(et), ee.push("var"), W.push(s))
                : (X.number.push(et), ee.push(e9), W.push(parseFloat(s))),
              ++et,
              "${}"
            )
          ),
          ei = er.split("${}");
        return { values: W, split: ei, indexes: X, types: ee };
      }
      function parseComplexValue(s) {
        return analyseComplexValue(s).values;
      }
      function createTransformer(s) {
        let { split: x, types: W } = analyseComplexValue(s),
          X = x.length;
        return (s) => {
          let ee = "";
          for (let et = 0; et < X; et++)
            if (((ee += x[et]), void 0 !== s[et])) {
              let x = W[et];
              x === e9
                ? (ee += sanitize(s[et]))
                : x === e7
                ? (ee += e4.transform(s[et]))
                : (ee += s[et]);
            }
          return ee;
        };
      }
      let convertNumbersToZero = (s) => ("number" == typeof s ? 0 : s),
        tr = {
          test: function (s) {
            var x, W;
            return (
              isNaN(s) &&
              "string" == typeof s &&
              ((null === (x = s.match(e0)) || void 0 === x
                ? void 0
                : x.length) || 0) +
                ((null === (W = s.match(e8)) || void 0 === W
                  ? void 0
                  : W.length) || 0) >
                0
            );
          },
          parse: parseComplexValue,
          createTransformer,
          getAnimatableNone: function (s) {
            let x = parseComplexValue(s),
              W = createTransformer(s);
            return W(x.map(convertNumbersToZero));
          },
        },
        ta = new Set(["brightness", "contrast", "saturate", "opacity"]);
      function applyDefaultFilter(s) {
        let [x, W] = s.slice(0, -1).split("(");
        if ("drop-shadow" === x) return s;
        let [X] = W.match(e0) || [];
        if (!X) return s;
        let ee = W.replace(X, ""),
          et = ta.has(x) ? 1 : 0;
        return X !== W && (et *= 100), x + "(" + et + ee + ")";
      }
      let ts = /\b([a-z-]*)\(.*?\)/gu,
        tl = {
          ...tr,
          getAnimatableNone: (s) => {
            let x = s.match(ts);
            return x ? x.map(applyDefaultFilter).join(" ") : s;
          },
        },
        tc = { ...eB, transform: Math.round },
        tu = {
          borderWidth: eF,
          borderTopWidth: eF,
          borderRightWidth: eF,
          borderBottomWidth: eF,
          borderLeftWidth: eF,
          borderRadius: eF,
          radius: eF,
          borderTopLeftRadius: eF,
          borderTopRightRadius: eF,
          borderBottomRightRadius: eF,
          borderBottomLeftRadius: eF,
          width: eF,
          maxWidth: eF,
          height: eF,
          maxHeight: eF,
          top: eF,
          right: eF,
          bottom: eF,
          left: eF,
          padding: eF,
          paddingTop: eF,
          paddingRight: eF,
          paddingBottom: eF,
          paddingLeft: eF,
          margin: eF,
          marginTop: eF,
          marginRight: eF,
          marginBottom: eF,
          marginLeft: eF,
          backgroundPositionX: eF,
          backgroundPositionY: eF,
          rotate: eU,
          rotateX: eU,
          rotateY: eU,
          rotateZ: eU,
          scale: ej,
          scaleX: ej,
          scaleY: ej,
          scaleZ: ej,
          skew: eU,
          skewX: eU,
          skewY: eU,
          distance: eF,
          translateX: eF,
          translateY: eF,
          translateZ: eF,
          x: eF,
          y: eF,
          z: eF,
          perspective: eF,
          transformPerspective: eF,
          opacity: eL,
          originX: eV,
          originY: eV,
          originZ: eF,
          zIndex: tc,
          size: eF,
          fillOpacity: eL,
          strokeOpacity: eL,
          numOctaves: tc,
        },
        td = {
          ...tu,
          color: e4,
          backgroundColor: e4,
          outlineColor: e4,
          fill: e4,
          stroke: e4,
          borderColor: e4,
          borderTopColor: e4,
          borderRightColor: e4,
          borderBottomColor: e4,
          borderLeftColor: e4,
          filter: tl,
          WebkitFilter: tl,
        },
        getDefaultValueType = (s) => td[s];
      function animatable_none_getAnimatableNone(s, x) {
        let W = getDefaultValueType(s);
        return (
          W !== tl && (W = tr),
          W.getAnimatableNone ? W.getAnimatableNone(x) : void 0
        );
      }
      let th = new Set(["auto", "none", "0"]);
      let DOMKeyframesResolver = class DOMKeyframesResolver extends KeyframeResolver {
        constructor(s, x, W, X, ee) {
          super(s, x, W, X, ee, !0);
        }
        readKeyframes() {
          let { unresolvedKeyframes: s, element: x, name: W } = this;
          if (!x || !x.current) return;
          super.readKeyframes();
          for (let W = 0; W < s.length; W++) {
            let X = s[W];
            if ("string" == typeof X && isCSSVariableToken((X = X.trim()))) {
              let ee = (function getVariableValue(s, x, W = 1) {
                noop(
                  W <= 4,
                  `Max CSS variable fallback depth detected in property "${s}". This may indicate a circular fallback dependency.`
                );
                let [X, ee] = (function (s) {
                  let x = eD.exec(s);
                  if (!x) return [,];
                  let [, W, X, ee] = x;
                  return [`--${null != W ? W : X}`, ee];
                })(s);
                if (!X) return;
                let et = window.getComputedStyle(x).getPropertyValue(X);
                if (et) {
                  let s = et.trim();
                  return isNumericalString(s) ? parseFloat(s) : s;
                }
                return isCSSVariableToken(ee)
                  ? getVariableValue(ee, x, W + 1)
                  : ee;
              })(X, x.current);
              void 0 !== ee && (s[W] = ee),
                W === s.length - 1 && (this.finalKeyframe = X);
            }
          }
          if ((this.resolveNoneKeyframes(), !eW.has(W) || 2 !== s.length))
            return;
          let [X, ee] = s,
            et = findDimensionValueType(X),
            er = findDimensionValueType(ee);
          if (et !== er) {
            if (isNumOrPxType(et) && isNumOrPxType(er))
              for (let x = 0; x < s.length; x++) {
                let W = s[x];
                "string" == typeof W && (s[x] = parseFloat(W));
              }
            else this.needsMeasurement = !0;
          }
        }
        resolveNoneKeyframes() {
          let { unresolvedKeyframes: s, name: x } = this,
            W = [];
          for (let x = 0; x < s.length; x++) {
            var X;
            ("number" == typeof (X = s[x])
              ? 0 === X
              : null === X ||
                "none" === X ||
                "0" === X ||
                isZeroValueString(X)) && W.push(x);
          }
          W.length &&
            (function (s, x, W) {
              let X,
                ee = 0;
              for (; ee < s.length && !X; ) {
                let x = s[ee];
                "string" == typeof x &&
                  !th.has(x) &&
                  analyseComplexValue(x).values.length &&
                  (X = s[ee]),
                  ee++;
              }
              if (X && W)
                for (let ee of x)
                  s[ee] = animatable_none_getAnimatableNone(W, X);
            })(s, W, x);
        }
        measureInitialState() {
          let { element: s, unresolvedKeyframes: x, name: W } = this;
          if (!s || !s.current) return;
          "height" === W && (this.suspendedScrollY = window.pageYOffset),
            (this.measuredOrigin = eG[W](
              s.measureViewportBox(),
              window.getComputedStyle(s.current)
            )),
            (x[0] = this.measuredOrigin);
          let X = x[x.length - 1];
          void 0 !== X && s.getValue(W, X).jump(X, !1);
        }
        measureEndState() {
          var s;
          let { element: x, name: W, unresolvedKeyframes: X } = this;
          if (!x || !x.current) return;
          let ee = x.getValue(W);
          ee && ee.jump(this.measuredOrigin, !1);
          let et = X.length - 1,
            er = X[et];
          (X[et] = eG[W](
            x.measureViewportBox(),
            window.getComputedStyle(x.current)
          )),
            null !== er &&
              void 0 === this.finalKeyframe &&
              (this.finalKeyframe = er),
            (null === (s = this.removedTransforms) || void 0 === s
              ? void 0
              : s.length) &&
              this.removedTransforms.forEach(([s, W]) => {
                x.getValue(s).set(W);
              }),
            this.resolveNoneKeyframes();
        }
      };
      function isGenerator(s) {
        return "function" == typeof s;
      }
      function clearTime() {
        X = void 0;
      }
      let tp = {
          now: () => (
            void 0 === X &&
              tp.set(
                eA.isProcessing || ey.useManualTiming
                  ? eA.timestamp
                  : performance.now()
              ),
            X
          ),
          set: (s) => {
            (X = s), queueMicrotask(clearTime);
          },
        },
        isAnimatable = (s, x) =>
          "zIndex" !== x &&
          !!(
            "number" == typeof s ||
            Array.isArray(s) ||
            ("string" == typeof s &&
              (tr.test(s) || "0" === s) &&
              !s.startsWith("url("))
          );
      let BaseAnimation = class BaseAnimation {
        constructor({
          autoplay: s = !0,
          delay: x = 0,
          type: W = "keyframes",
          repeat: X = 0,
          repeatDelay: ee = 0,
          repeatType: et = "loop",
          ...er
        }) {
          (this.isStopped = !1),
            (this.hasAttemptedResolve = !1),
            (this.createdAt = tp.now()),
            (this.options = {
              autoplay: s,
              delay: x,
              type: W,
              repeat: X,
              repeatDelay: ee,
              repeatType: et,
              ...er,
            }),
            this.updateFinishedPromise();
        }
        calcStartTime() {
          return this.resolvedAt && this.resolvedAt - this.createdAt > 40
            ? this.resolvedAt
            : this.createdAt;
        }
        get resolved() {
          return (
            this._resolved ||
              this.hasAttemptedResolve ||
              (readAllKeyframes(), measureAllKeyframes()),
            this._resolved
          );
        }
        onKeyframesResolved(s, x) {
          (this.resolvedAt = tp.now()), (this.hasAttemptedResolve = !0);
          let {
            name: W,
            type: X,
            velocity: ee,
            delay: et,
            onComplete: er,
            onUpdate: ei,
            isGenerator: eo,
          } = this.options;
          if (
            !eo &&
            !(function (s, x, W, X) {
              let ee = s[0];
              if (null === ee) return !1;
              if ("display" === x || "visibility" === x) return !0;
              let et = s[s.length - 1],
                er = isAnimatable(ee, x),
                ei = isAnimatable(et, x);
              return (
                noop(
                  er === ei,
                  `You are trying to animate ${x} from "${ee}" to "${et}". ${ee} is not an animatable value - to enable this animation set ${ee} to a value animatable to ${et} via the \`style\` property.`
                ),
                !!er &&
                  !!ei &&
                  ((function (s) {
                    let x = s[0];
                    if (1 === s.length) return !0;
                    for (let W = 0; W < s.length; W++)
                      if (s[W] !== x) return !0;
                  })(s) ||
                    (("spring" === W || isGenerator(W)) && X))
              );
            })(s, W, X, ee)
          ) {
            if (e_.current || !et) {
              null == ei || ei(getFinalKeyframe(s, this.options, x)),
                null == er || er(),
                this.resolveFinishedPromise();
              return;
            }
            this.options.duration = 0;
          }
          let ea = this.initPlayback(s, x);
          !1 !== ea &&
            ((this._resolved = { keyframes: s, finalKeyframe: x, ...ea }),
            this.onPostResolved());
        }
        onPostResolved() {}
        then(s, x) {
          return this.currentFinishedPromise.then(s, x);
        }
        updateFinishedPromise() {
          this.currentFinishedPromise = new Promise((s) => {
            this.resolveFinishedPromise = s;
          });
        }
      };
      function calcGeneratorVelocity(s, x, W) {
        var X, ee;
        let et = Math.max(x - 5, 0);
        return (X = W - s(et)), (ee = x - et) ? X * (1e3 / ee) : 0;
      }
      function calcAngularFreq(s, x) {
        return s * Math.sqrt(1 - x * x);
      }
      let tf = ["duration", "bounce"],
        tg = ["stiffness", "damping", "mass"];
      function isSpringType(s, x) {
        return x.some((x) => void 0 !== s[x]);
      }
      function spring({ keyframes: s, restDelta: x, restSpeed: W, ...X }) {
        let ee;
        let et = s[0],
          er = s[s.length - 1],
          ei = { done: !1, value: et },
          {
            stiffness: eo,
            damping: ea,
            mass: es,
            duration: el,
            velocity: ec,
            isResolvedFromDuration: eu,
          } = (function (s) {
            let x = {
              velocity: 0,
              stiffness: 100,
              damping: 10,
              mass: 1,
              isResolvedFromDuration: !1,
              ...s,
            };
            if (!isSpringType(s, tg) && isSpringType(s, tf)) {
              let W = (function ({
                duration: s = 800,
                bounce: x = 0.25,
                velocity: W = 0,
                mass: X = 1,
              }) {
                let ee, et;
                noop(
                  s <= time_conversion_secondsToMilliseconds(10),
                  "Spring duration must be 10 seconds or less"
                );
                let er = 1 - x;
                (er = clamp(0.05, 1, er)),
                  (s = clamp(0.01, 10, millisecondsToSeconds(s))),
                  er < 1
                    ? ((ee = (x) => {
                        let X = x * er,
                          ee = X * s,
                          et = calcAngularFreq(x, er);
                        return 0.001 - ((X - W) / et) * Math.exp(-ee);
                      }),
                      (et = (x) => {
                        let X = x * er,
                          et = X * s,
                          ei = Math.pow(er, 2) * Math.pow(x, 2) * s,
                          eo = calcAngularFreq(Math.pow(x, 2), er),
                          ea = -ee(x) + 0.001 > 0 ? -1 : 1;
                        return (ea * ((et * W + W - ei) * Math.exp(-et))) / eo;
                      }))
                    : ((ee = (x) => {
                        let X = Math.exp(-x * s),
                          ee = (x - W) * s + 1;
                        return -0.001 + X * ee;
                      }),
                      (et = (x) => {
                        let X = Math.exp(-x * s),
                          ee = (W - x) * (s * s);
                        return X * ee;
                      }));
                let ei = 5 / s,
                  eo = (function (s, x, W) {
                    let X = W;
                    for (let W = 1; W < 12; W++) X -= s(X) / x(X);
                    return X;
                  })(ee, et, ei);
                if (((s = time_conversion_secondsToMilliseconds(s)), isNaN(eo)))
                  return { stiffness: 100, damping: 10, duration: s };
                {
                  let x = Math.pow(eo, 2) * X;
                  return {
                    stiffness: x,
                    damping: 2 * er * Math.sqrt(X * x),
                    duration: s,
                  };
                }
              })(s);
              (x = { ...x, ...W, mass: 1 }).isResolvedFromDuration = !0;
            }
            return x;
          })({ ...X, velocity: -millisecondsToSeconds(X.velocity || 0) }),
          ed = ec || 0,
          eh = ea / (2 * Math.sqrt(eo * es)),
          ep = er - et,
          ef = millisecondsToSeconds(Math.sqrt(eo / es)),
          eg = 5 > Math.abs(ep);
        if ((W || (W = eg ? 0.01 : 2), x || (x = eg ? 0.005 : 0.5), eh < 1)) {
          let s = calcAngularFreq(ef, eh);
          ee = (x) => {
            let W = Math.exp(-eh * ef * x);
            return (
              er -
              W *
                (((ed + eh * ef * ep) / s) * Math.sin(s * x) +
                  ep * Math.cos(s * x))
            );
          };
        } else if (1 === eh)
          ee = (s) => er - Math.exp(-ef * s) * (ep + (ed + ef * ep) * s);
        else {
          let s = ef * Math.sqrt(eh * eh - 1);
          ee = (x) => {
            let W = Math.exp(-eh * ef * x),
              X = Math.min(s * x, 300);
            return (
              er -
              (W *
                ((ed + eh * ef * ep) * Math.sinh(X) + s * ep * Math.cosh(X))) /
                s
            );
          };
        }
        return {
          calculatedDuration: (eu && el) || null,
          next: (s) => {
            let X = ee(s);
            if (eu) ei.done = s >= el;
            else {
              let et = 0;
              eh < 1 &&
                (et =
                  0 === s
                    ? time_conversion_secondsToMilliseconds(ed)
                    : calcGeneratorVelocity(ee, s, X));
              let eo = Math.abs(et) <= W,
                ea = Math.abs(er - X) <= x;
              ei.done = eo && ea;
            }
            return (ei.value = ei.done ? er : X), ei;
          },
        };
      }
      function inertia({
        keyframes: s,
        velocity: x = 0,
        power: W = 0.8,
        timeConstant: X = 325,
        bounceDamping: ee = 10,
        bounceStiffness: et = 500,
        modifyTarget: er,
        min: ei,
        max: eo,
        restDelta: ea = 0.5,
        restSpeed: es,
      }) {
        let el, ec;
        let eu = s[0],
          ed = { done: !1, value: eu },
          isOutOfBounds = (s) =>
            (void 0 !== ei && s < ei) || (void 0 !== eo && s > eo),
          nearestBoundary = (s) =>
            void 0 === ei
              ? eo
              : void 0 === eo
              ? ei
              : Math.abs(ei - s) < Math.abs(eo - s)
              ? ei
              : eo,
          eh = W * x,
          ep = eu + eh,
          ef = void 0 === er ? ep : er(ep);
        ef !== ep && (eh = ef - eu);
        let calcDelta = (s) => -eh * Math.exp(-s / X),
          calcLatest = (s) => ef + calcDelta(s),
          applyFriction = (s) => {
            let x = calcDelta(s),
              W = calcLatest(s);
            (ed.done = Math.abs(x) <= ea), (ed.value = ed.done ? ef : W);
          },
          checkCatchBoundary = (s) => {
            isOutOfBounds(ed.value) &&
              ((el = s),
              (ec = spring({
                keyframes: [ed.value, nearestBoundary(ed.value)],
                velocity: calcGeneratorVelocity(calcLatest, s, ed.value),
                damping: ee,
                stiffness: et,
                restDelta: ea,
                restSpeed: es,
              })));
          };
        return (
          checkCatchBoundary(0),
          {
            calculatedDuration: null,
            next: (s) => {
              let x = !1;
              return (ec ||
                void 0 !== el ||
                ((x = !0), applyFriction(s), checkCatchBoundary(s)),
              void 0 !== el && s >= el)
                ? ec.next(s - el)
                : (x || applyFriction(s), ed);
            },
          }
        );
      }
      let tm = cubicBezier(0.42, 0, 1, 1),
        tw = cubicBezier(0, 0, 0.58, 1),
        tb = cubicBezier(0.42, 0, 0.58, 1),
        isEasingArray = (s) => Array.isArray(s) && "number" != typeof s[0],
        isBezierDefinition = (s) => Array.isArray(s) && "number" == typeof s[0],
        tv = {
          linear: noop,
          easeIn: tm,
          easeInOut: tb,
          easeOut: tw,
          circIn: circIn,
          circInOut: eR,
          circOut: eP,
          backIn: eT,
          backInOut: eI,
          backOut: ek,
          anticipate: anticipate,
        },
        easingDefinitionToFunction = (s) => {
          if (isBezierDefinition(s)) {
            noop(
              4 === s.length,
              "Cubic bezier arrays must contain four numerical values."
            );
            let [x, W, X, ee] = s;
            return cubicBezier(x, W, X, ee);
          }
          return "string" == typeof s
            ? (noop(void 0 !== tv[s], `Invalid easing type '${s}'`), tv[s])
            : s;
        },
        combineFunctions = (s, x) => (W) => x(s(W)),
        pipe = (...s) => s.reduce(combineFunctions),
        progress = (s, x, W) => {
          let X = x - s;
          return 0 === X ? 1 : (W - s) / X;
        },
        mixNumber = (s, x, W) => s + (x - s) * W;
      function hueToRgb(s, x, W) {
        return (W < 0 && (W += 1), W > 1 && (W -= 1), W < 1 / 6)
          ? s + (x - s) * 6 * W
          : W < 0.5
          ? x
          : W < 2 / 3
          ? s + (x - s) * (2 / 3 - W) * 6
          : s;
      }
      function mixImmediate(s, x) {
        return (W) => (W > 0 ? x : s);
      }
      let mixLinearColor = (s, x, W) => {
          let X = s * s,
            ee = W * (x * x - X) + X;
          return ee < 0 ? 0 : Math.sqrt(ee);
        },
        ty = [e5, e3, e6],
        getColorType = (s) => ty.find((x) => x.test(s));
      function asRGBA(s) {
        let x = getColorType(s);
        if (
          (noop(
            !!x,
            `'${s}' is not an animatable color. Use the equivalent color code instead.`
          ),
          !x)
        )
          return !1;
        let W = x.parse(s);
        return (
          x === e6 &&
            (W = (function ({ hue: s, saturation: x, lightness: W, alpha: X }) {
              (s /= 360), (W /= 100);
              let ee = 0,
                et = 0,
                er = 0;
              if ((x /= 100)) {
                let X = W < 0.5 ? W * (1 + x) : W + x - W * x,
                  ei = 2 * W - X;
                (ee = hueToRgb(ei, X, s + 1 / 3)),
                  (et = hueToRgb(ei, X, s)),
                  (er = hueToRgb(ei, X, s - 1 / 3));
              } else ee = et = er = W;
              return {
                red: Math.round(255 * ee),
                green: Math.round(255 * et),
                blue: Math.round(255 * er),
                alpha: X,
              };
            })(W)),
          W
        );
      }
      let mixColor = (s, x) => {
          let W = asRGBA(s),
            X = asRGBA(x);
          if (!W || !X) return mixImmediate(s, x);
          let ee = { ...W };
          return (s) => (
            (ee.red = mixLinearColor(W.red, X.red, s)),
            (ee.green = mixLinearColor(W.green, X.green, s)),
            (ee.blue = mixLinearColor(W.blue, X.blue, s)),
            (ee.alpha = mixNumber(W.alpha, X.alpha, s)),
            e3.transform(ee)
          );
        },
        t_ = new Set(["none", "hidden"]);
      function complex_mixNumber(s, x) {
        return (W) => mixNumber(s, x, W);
      }
      function getMixer(s) {
        return "number" == typeof s
          ? complex_mixNumber
          : "string" == typeof s
          ? isCSSVariableToken(s)
            ? mixImmediate
            : e4.test(s)
            ? mixColor
            : mixComplex
          : Array.isArray(s)
          ? mixArray
          : "object" == typeof s
          ? e4.test(s)
            ? mixColor
            : mixObject
          : mixImmediate;
      }
      function mixArray(s, x) {
        let W = [...s],
          X = W.length,
          ee = s.map((s, W) => getMixer(s)(s, x[W]));
        return (s) => {
          for (let x = 0; x < X; x++) W[x] = ee[x](s);
          return W;
        };
      }
      function mixObject(s, x) {
        let W = { ...s, ...x },
          X = {};
        for (let ee in W)
          void 0 !== s[ee] &&
            void 0 !== x[ee] &&
            (X[ee] = getMixer(s[ee])(s[ee], x[ee]));
        return (s) => {
          for (let x in X) W[x] = X[x](s);
          return W;
        };
      }
      let mixComplex = (s, x) => {
        let W = tr.createTransformer(x),
          X = analyseComplexValue(s),
          ee = analyseComplexValue(x),
          et =
            X.indexes.var.length === ee.indexes.var.length &&
            X.indexes.color.length === ee.indexes.color.length &&
            X.indexes.number.length >= ee.indexes.number.length;
        return et
          ? (t_.has(s) && !ee.values.length) || (t_.has(x) && !X.values.length)
            ? t_.has(s)
              ? (W) => (W <= 0 ? s : x)
              : (W) => (W >= 1 ? x : s)
            : pipe(
                mixArray(
                  (function (s, x) {
                    var W;
                    let X = [],
                      ee = { color: 0, var: 0, number: 0 };
                    for (let et = 0; et < x.values.length; et++) {
                      let er = x.types[et],
                        ei = s.indexes[er][ee[er]],
                        eo =
                          null !== (W = s.values[ei]) && void 0 !== W ? W : 0;
                      (X[et] = eo), ee[er]++;
                    }
                    return X;
                  })(X, ee),
                  ee.values
                ),
                W
              )
          : (noop(
              !0,
              `Complex values '${s}' and '${x}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`
            ),
            mixImmediate(s, x));
      };
      function mix(s, x, W) {
        if (
          "number" == typeof s &&
          "number" == typeof x &&
          "number" == typeof W
        )
          return mixNumber(s, x, W);
        let X = getMixer(s);
        return X(s, x);
      }
      function keyframes({
        duration: s = 300,
        keyframes: x,
        times: W,
        ease: X = "easeInOut",
      }) {
        let ee = isEasingArray(X)
            ? X.map(easingDefinitionToFunction)
            : easingDefinitionToFunction(X),
          et = { done: !1, value: x[0] },
          er = (
            W && W.length === x.length
              ? W
              : (function (s) {
                  let x = [0];
                  return (
                    (function (s, x) {
                      let W = s[s.length - 1];
                      for (let X = 1; X <= x; X++) {
                        let ee = progress(0, x, X);
                        s.push(mixNumber(W, 1, ee));
                      }
                    })(x, s.length - 1),
                    x
                  );
                })(x)
          ).map((x) => x * s),
          ei = (function (s, x, { clamp: W = !0, ease: X, mixer: ee } = {}) {
            let et = s.length;
            if (
              (noop(
                et === x.length,
                "Both input and output ranges must be the same length"
              ),
              1 === et)
            )
              return () => x[0];
            if (2 === et && s[0] === s[1]) return () => x[1];
            s[0] > s[et - 1] &&
              ((s = [...s].reverse()), (x = [...x].reverse()));
            let er = (function (s, x, W) {
                let X = [],
                  ee = W || mix,
                  et = s.length - 1;
                for (let W = 0; W < et; W++) {
                  let et = ee(s[W], s[W + 1]);
                  if (x) {
                    let s = Array.isArray(x) ? x[W] || noop : x;
                    et = pipe(s, et);
                  }
                  X.push(et);
                }
                return X;
              })(x, X, ee),
              ei = er.length,
              interpolator = (x) => {
                let W = 0;
                if (ei > 1) for (; W < s.length - 2 && !(x < s[W + 1]); W++);
                let X = progress(s[W], s[W + 1], x);
                return er[W](X);
              };
            return W
              ? (x) => interpolator(clamp(s[0], s[et - 1], x))
              : interpolator;
          })(er, x, {
            ease: Array.isArray(ee)
              ? ee
              : x.map(() => ee || tb).splice(0, x.length - 1),
          });
        return {
          calculatedDuration: s,
          next: (x) => ((et.value = ei(x)), (et.done = x >= s), et),
        };
      }
      let frameloopDriver = (s) => {
          let passTimestamp = ({ timestamp: x }) => s(x);
          return {
            start: () => ex.update(passTimestamp, !0),
            stop: () => eE(passTimestamp),
            now: () => (eA.isProcessing ? eA.timestamp : tp.now()),
          };
        },
        tC = {
          decay: inertia,
          inertia: inertia,
          tween: keyframes,
          keyframes: keyframes,
          spring: spring,
        },
        percentToProgress = (s) => s / 100;
      let MainThreadAnimation = class MainThreadAnimation extends BaseAnimation {
        constructor(s) {
          super(s),
            (this.holdTime = null),
            (this.cancelTime = null),
            (this.currentTime = 0),
            (this.playbackSpeed = 1),
            (this.pendingPlayState = "running"),
            (this.startTime = null),
            (this.state = "idle"),
            (this.stop = () => {
              if (
                (this.resolver.cancel(),
                (this.isStopped = !0),
                "idle" === this.state)
              )
                return;
              this.teardown();
              let { onStop: s } = this.options;
              s && s();
            });
          let {
              name: x,
              motionValue: W,
              element: X,
              keyframes: ee,
            } = this.options,
            et = (null == X ? void 0 : X.KeyframeResolver) || KeyframeResolver;
          (this.resolver = new et(
            ee,
            (s, x) => this.onKeyframesResolved(s, x),
            x,
            W,
            X
          )),
            this.resolver.scheduleResolve();
        }
        initPlayback(s) {
          let x, W;
          let {
              type: X = "keyframes",
              repeat: ee = 0,
              repeatDelay: et = 0,
              repeatType: er,
              velocity: ei = 0,
            } = this.options,
            eo = isGenerator(X) ? X : tC[X] || keyframes;
          eo !== keyframes &&
            "number" != typeof s[0] &&
            ((x = pipe(percentToProgress, mix(s[0], s[1]))), (s = [0, 100]));
          let ea = eo({ ...this.options, keyframes: s });
          "mirror" === er &&
            (W = eo({
              ...this.options,
              keyframes: [...s].reverse(),
              velocity: -ei,
            })),
            null === ea.calculatedDuration &&
              (ea.calculatedDuration = (function (s) {
                let x = 0,
                  W = s.next(x);
                for (; !W.done && x < 2e4; ) (x += 50), (W = s.next(x));
                return x >= 2e4 ? 1 / 0 : x;
              })(ea));
          let { calculatedDuration: es } = ea,
            el = es + et;
          return {
            generator: ea,
            mirroredGenerator: W,
            mapPercentToKeyframes: x,
            calculatedDuration: es,
            resolvedDuration: el,
            totalDuration: el * (ee + 1) - et,
          };
        }
        onPostResolved() {
          let { autoplay: s = !0 } = this.options;
          this.play(),
            "paused" !== this.pendingPlayState && s
              ? (this.state = this.pendingPlayState)
              : this.pause();
        }
        tick(s, x = !1) {
          let { resolved: W } = this;
          if (!W) {
            let { keyframes: s } = this.options;
            return { done: !0, value: s[s.length - 1] };
          }
          let {
            finalKeyframe: X,
            generator: ee,
            mirroredGenerator: et,
            mapPercentToKeyframes: er,
            keyframes: ei,
            calculatedDuration: eo,
            totalDuration: ea,
            resolvedDuration: es,
          } = W;
          if (null === this.startTime) return ee.next(0);
          let {
            delay: el,
            repeat: ec,
            repeatType: eu,
            repeatDelay: ed,
            onUpdate: eh,
          } = this.options;
          this.speed > 0
            ? (this.startTime = Math.min(this.startTime, s))
            : this.speed < 0 &&
              (this.startTime = Math.min(s - ea / this.speed, this.startTime)),
            x
              ? (this.currentTime = s)
              : null !== this.holdTime
              ? (this.currentTime = this.holdTime)
              : (this.currentTime =
                  Math.round(s - this.startTime) * this.speed);
          let ep = this.currentTime - el * (this.speed >= 0 ? 1 : -1),
            ef = this.speed >= 0 ? ep < 0 : ep > ea;
          (this.currentTime = Math.max(ep, 0)),
            "finished" === this.state &&
              null === this.holdTime &&
              (this.currentTime = ea);
          let eg = this.currentTime,
            em = ee;
          if (ec) {
            let s = Math.min(this.currentTime, ea) / es,
              x = Math.floor(s),
              W = s % 1;
            !W && s >= 1 && (W = 1), 1 === W && x--, (x = Math.min(x, ec + 1));
            let X = !!(x % 2);
            X &&
              ("reverse" === eu
                ? ((W = 1 - W), ed && (W -= ed / es))
                : "mirror" === eu && (em = et)),
              (eg = clamp(0, 1, W) * es);
          }
          let ew = ef ? { done: !1, value: ei[0] } : em.next(eg);
          er && (ew.value = er(ew.value));
          let { done: eb } = ew;
          ef ||
            null === eo ||
            (eb =
              this.speed >= 0 ? this.currentTime >= ea : this.currentTime <= 0);
          let ev =
            null === this.holdTime &&
            ("finished" === this.state || ("running" === this.state && eb));
          return (
            ev &&
              void 0 !== X &&
              (ew.value = getFinalKeyframe(ei, this.options, X)),
            eh && eh(ew.value),
            ev && this.finish(),
            ew
          );
        }
        get duration() {
          let { resolved: s } = this;
          return s ? millisecondsToSeconds(s.calculatedDuration) : 0;
        }
        get time() {
          return millisecondsToSeconds(this.currentTime);
        }
        set time(s) {
          (s = time_conversion_secondsToMilliseconds(s)),
            (this.currentTime = s),
            null !== this.holdTime || 0 === this.speed
              ? (this.holdTime = s)
              : this.driver &&
                (this.startTime = this.driver.now() - s / this.speed);
        }
        get speed() {
          return this.playbackSpeed;
        }
        set speed(s) {
          let x = this.playbackSpeed !== s;
          (this.playbackSpeed = s),
            x && (this.time = millisecondsToSeconds(this.currentTime));
        }
        play() {
          if (
            (this.resolver.isScheduled || this.resolver.resume(),
            !this._resolved)
          ) {
            this.pendingPlayState = "running";
            return;
          }
          if (this.isStopped) return;
          let {
            driver: s = frameloopDriver,
            onPlay: x,
            startTime: W,
          } = this.options;
          this.driver || (this.driver = s((s) => this.tick(s))), x && x();
          let X = this.driver.now();
          null !== this.holdTime
            ? (this.startTime = X - this.holdTime)
            : this.startTime
            ? "finished" === this.state && (this.startTime = X)
            : (this.startTime = null != W ? W : this.calcStartTime()),
            "finished" === this.state && this.updateFinishedPromise(),
            (this.cancelTime = this.startTime),
            (this.holdTime = null),
            (this.state = "running"),
            this.driver.start();
        }
        pause() {
          var s;
          if (!this._resolved) {
            this.pendingPlayState = "paused";
            return;
          }
          (this.state = "paused"),
            (this.holdTime =
              null !== (s = this.currentTime) && void 0 !== s ? s : 0);
        }
        complete() {
          "running" !== this.state && this.play(),
            (this.pendingPlayState = this.state = "finished"),
            (this.holdTime = null);
        }
        finish() {
          this.teardown(), (this.state = "finished");
          let { onComplete: s } = this.options;
          s && s();
        }
        cancel() {
          null !== this.cancelTime && this.tick(this.cancelTime),
            this.teardown(),
            this.updateFinishedPromise();
        }
        teardown() {
          (this.state = "idle"),
            this.stopDriver(),
            this.resolveFinishedPromise(),
            this.updateFinishedPromise(),
            (this.startTime = this.cancelTime = null),
            this.resolver.cancel();
        }
        stopDriver() {
          this.driver && (this.driver.stop(), (this.driver = void 0));
        }
        sample(s) {
          return (this.startTime = 0), this.tick(s, !0);
        }
      };
      let tx = new Set(["opacity", "clipPath", "filter", "transform"]),
        generateLinearEasing = (s, x) => {
          let W = "",
            X = Math.max(Math.round(x / 10), 2);
          for (let x = 0; x < X; x++) W += s(progress(0, X - 1, x)) + ", ";
          return `linear(${W.substring(0, W.length - 2)})`;
        };
      function memo(s) {
        let x;
        return () => (void 0 === x && (x = s()), x);
      }
      let tE = { linearEasing: void 0 },
        tA = (function (s, x) {
          let W = memo(s);
          return () => {
            var s;
            return null !== (s = tE[x]) && void 0 !== s ? s : W();
          };
        })(() => {
          try {
            document
              .createElement("div")
              .animate({ opacity: 0 }, { easing: "linear(0, 1)" });
          } catch (s) {
            return !1;
          }
          return !0;
        }, "linearEasing"),
        cubicBezierAsString = ([s, x, W, X]) =>
          `cubic-bezier(${s}, ${x}, ${W}, ${X})`,
        tS = {
          linear: "linear",
          ease: "ease",
          easeIn: "ease-in",
          easeOut: "ease-out",
          easeInOut: "ease-in-out",
          circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),
          circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),
          backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),
          backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),
        };
      function attachTimeline(s, x) {
        (s.timeline = x), (s.onfinish = null);
      }
      let tk = memo(() =>
          Object.hasOwnProperty.call(Element.prototype, "animate")
        ),
        tT = { anticipate: anticipate, backInOut: eI, circInOut: eR };
      let AcceleratedAnimation = class AcceleratedAnimation extends BaseAnimation {
        constructor(s) {
          super(s);
          let {
            name: x,
            motionValue: W,
            element: X,
            keyframes: ee,
          } = this.options;
          (this.resolver = new DOMKeyframesResolver(
            ee,
            (s, x) => this.onKeyframesResolved(s, x),
            x,
            W,
            X
          )),
            this.resolver.scheduleResolve();
        }
        initPlayback(s, x) {
          var W, X;
          let {
            duration: ee = 300,
            times: et,
            ease: er,
            type: ei,
            motionValue: eo,
            name: ea,
            startTime: es,
          } = this.options;
          if (!(null === (W = eo.owner) || void 0 === W ? void 0 : W.current))
            return !1;
          if (
            ("string" == typeof er && tA() && er in tT && (er = tT[er]),
            isGenerator((X = this.options).type) ||
              "spring" === X.type ||
              !(function isWaapiSupportedEasing(s) {
                return !!(
                  ("function" == typeof s && tA()) ||
                  !s ||
                  ("string" == typeof s && (s in tS || tA())) ||
                  isBezierDefinition(s) ||
                  (Array.isArray(s) && s.every(isWaapiSupportedEasing))
                );
              })(X.ease))
          ) {
            let {
                onComplete: x,
                onUpdate: W,
                motionValue: X,
                element: eo,
                ...ea
              } = this.options,
              es = (function (s, x) {
                let W = new MainThreadAnimation({
                    ...x,
                    keyframes: s,
                    repeat: 0,
                    delay: 0,
                    isGenerator: !0,
                  }),
                  X = { done: !1, value: s[0] },
                  ee = [],
                  et = 0;
                for (; !X.done && et < 2e4; )
                  ee.push((X = W.sample(et)).value), (et += 10);
                return {
                  times: void 0,
                  keyframes: ee,
                  duration: et - 10,
                  ease: "linear",
                };
              })(s, ea);
            1 === (s = es.keyframes).length && (s[1] = s[0]),
              (ee = es.duration),
              (et = es.times),
              (er = es.ease),
              (ei = "keyframes");
          }
          let el = (function (
            s,
            x,
            W,
            {
              delay: X = 0,
              duration: ee = 300,
              repeat: et = 0,
              repeatType: er = "loop",
              ease: ei,
              times: eo,
            } = {}
          ) {
            let ea = { [x]: W };
            eo && (ea.offset = eo);
            let es = (function mapEasingToNativeEasing(s, x) {
              if (s)
                return "function" == typeof s && tA()
                  ? generateLinearEasing(s, x)
                  : isBezierDefinition(s)
                  ? cubicBezierAsString(s)
                  : Array.isArray(s)
                  ? s.map((s) => mapEasingToNativeEasing(s, x) || tS.easeOut)
                  : tS[s];
            })(ei, ee);
            return (
              Array.isArray(es) && (ea.easing = es),
              s.animate(ea, {
                delay: X,
                duration: ee,
                easing: Array.isArray(es) ? "linear" : es,
                fill: "both",
                iterations: et + 1,
                direction: "reverse" === er ? "alternate" : "normal",
              })
            );
          })(eo.owner.current, ea, s, {
            ...this.options,
            duration: ee,
            times: et,
            ease: er,
          });
          return (
            (el.startTime = null != es ? es : this.calcStartTime()),
            this.pendingTimeline
              ? (attachTimeline(el, this.pendingTimeline),
                (this.pendingTimeline = void 0))
              : (el.onfinish = () => {
                  let { onComplete: W } = this.options;
                  eo.set(getFinalKeyframe(s, this.options, x)),
                    W && W(),
                    this.cancel(),
                    this.resolveFinishedPromise();
                }),
            {
              animation: el,
              duration: ee,
              times: et,
              type: ei,
              ease: er,
              keyframes: s,
            }
          );
        }
        get duration() {
          let { resolved: s } = this;
          if (!s) return 0;
          let { duration: x } = s;
          return millisecondsToSeconds(x);
        }
        get time() {
          let { resolved: s } = this;
          if (!s) return 0;
          let { animation: x } = s;
          return millisecondsToSeconds(x.currentTime || 0);
        }
        set time(s) {
          let { resolved: x } = this;
          if (!x) return;
          let { animation: W } = x;
          W.currentTime = time_conversion_secondsToMilliseconds(s);
        }
        get speed() {
          let { resolved: s } = this;
          if (!s) return 1;
          let { animation: x } = s;
          return x.playbackRate;
        }
        set speed(s) {
          let { resolved: x } = this;
          if (!x) return;
          let { animation: W } = x;
          W.playbackRate = s;
        }
        get state() {
          let { resolved: s } = this;
          if (!s) return "idle";
          let { animation: x } = s;
          return x.playState;
        }
        get startTime() {
          let { resolved: s } = this;
          if (!s) return null;
          let { animation: x } = s;
          return x.startTime;
        }
        attachTimeline(s) {
          if (this._resolved) {
            let { resolved: x } = this;
            if (!x) return noop;
            let { animation: W } = x;
            attachTimeline(W, s);
          } else this.pendingTimeline = s;
          return noop;
        }
        play() {
          if (this.isStopped) return;
          let { resolved: s } = this;
          if (!s) return;
          let { animation: x } = s;
          "finished" === x.playState && this.updateFinishedPromise(), x.play();
        }
        pause() {
          let { resolved: s } = this;
          if (!s) return;
          let { animation: x } = s;
          x.pause();
        }
        stop() {
          if (
            (this.resolver.cancel(),
            (this.isStopped = !0),
            "idle" === this.state)
          )
            return;
          this.resolveFinishedPromise(), this.updateFinishedPromise();
          let { resolved: s } = this;
          if (!s) return;
          let {
            animation: x,
            keyframes: W,
            duration: X,
            type: ee,
            ease: et,
            times: er,
          } = s;
          if ("idle" === x.playState || "finished" === x.playState) return;
          if (this.time) {
            let {
                motionValue: s,
                onUpdate: x,
                onComplete: ei,
                element: eo,
                ...ea
              } = this.options,
              es = new MainThreadAnimation({
                ...ea,
                keyframes: W,
                duration: X,
                type: ee,
                ease: et,
                times: er,
                isGenerator: !0,
              }),
              el = time_conversion_secondsToMilliseconds(this.time);
            s.setWithVelocity(
              es.sample(el - 10).value,
              es.sample(el).value,
              10
            );
          }
          let { onStop: ei } = this.options;
          ei && ei(), this.cancel();
        }
        complete() {
          let { resolved: s } = this;
          s && s.animation.finish();
        }
        cancel() {
          let { resolved: s } = this;
          s && s.animation.cancel();
        }
        static supports(s) {
          let {
            motionValue: x,
            name: W,
            repeatDelay: X,
            repeatType: ee,
            damping: et,
            type: er,
          } = s;
          return (
            tk() &&
            W &&
            tx.has(W) &&
            x &&
            x.owner &&
            x.owner.current instanceof HTMLElement &&
            !x.owner.getProps().onUpdate &&
            !X &&
            "mirror" !== ee &&
            0 !== et &&
            "inertia" !== er
          );
        }
      };
      let tI = memo(() => void 0 !== window.ScrollTimeline);
      let GroupPlaybackControls = class GroupPlaybackControls {
        constructor(s) {
          (this.stop = () => this.runAll("stop")),
            (this.animations = s.filter(Boolean));
        }
        then(s, x) {
          return Promise.all(this.animations).then(s).catch(x);
        }
        getAll(s) {
          return this.animations[0][s];
        }
        setAll(s, x) {
          for (let W = 0; W < this.animations.length; W++)
            this.animations[W][s] = x;
        }
        attachTimeline(s, x) {
          let W = this.animations.map((W) =>
            tI() && W.attachTimeline ? W.attachTimeline(s) : x(W)
          );
          return () => {
            W.forEach((s, x) => {
              s && s(), this.animations[x].stop();
            });
          };
        }
        get time() {
          return this.getAll("time");
        }
        set time(s) {
          this.setAll("time", s);
        }
        get speed() {
          return this.getAll("speed");
        }
        set speed(s) {
          this.setAll("speed", s);
        }
        get startTime() {
          return this.getAll("startTime");
        }
        get duration() {
          let s = 0;
          for (let x = 0; x < this.animations.length; x++)
            s = Math.max(s, this.animations[x].duration);
          return s;
        }
        runAll(s) {
          this.animations.forEach((x) => x[s]());
        }
        play() {
          this.runAll("play");
        }
        pause() {
          this.runAll("pause");
        }
        cancel() {
          this.runAll("cancel");
        }
        complete() {
          this.runAll("complete");
        }
      };
      let animateMotionValue =
          (s, x, W, X = {}, ee, et) =>
          (er) => {
            let ei = getValueTransition(X, s) || {},
              eo = ei.delay || X.delay || 0,
              { elapsed: ea = 0 } = X;
            ea -= time_conversion_secondsToMilliseconds(eo);
            let es = {
              keyframes: Array.isArray(W) ? W : [null, W],
              ease: "easeOut",
              velocity: x.getVelocity(),
              ...ei,
              delay: -ea,
              onUpdate: (s) => {
                x.set(s), ei.onUpdate && ei.onUpdate(s);
              },
              onComplete: () => {
                er(), ei.onComplete && ei.onComplete();
              },
              name: s,
              motionValue: x,
              element: et ? void 0 : ee,
            };
            !(function ({
              when: s,
              delay: x,
              delayChildren: W,
              staggerChildren: X,
              staggerDirection: ee,
              repeat: et,
              repeatType: er,
              repeatDelay: ei,
              from: eo,
              elapsed: ea,
              ...es
            }) {
              return !!Object.keys(es).length;
            })(ei) && (es = { ...es, ...getDefaultTransition(s, es) }),
              es.duration &&
                (es.duration = time_conversion_secondsToMilliseconds(
                  es.duration
                )),
              es.repeatDelay &&
                (es.repeatDelay = time_conversion_secondsToMilliseconds(
                  es.repeatDelay
                )),
              void 0 !== es.from && (es.keyframes[0] = es.from);
            let el = !1;
            if (
              ((!1 !== es.type && (0 !== es.duration || es.repeatDelay)) ||
                ((es.duration = 0), 0 !== es.delay || (el = !0)),
              (e_.current || ey.skipAnimations) &&
                ((el = !0), (es.duration = 0), (es.delay = 0)),
              el && !et && void 0 !== x.get())
            ) {
              let s = getFinalKeyframe(es.keyframes, ei);
              if (void 0 !== s)
                return (
                  ex.update(() => {
                    es.onUpdate(s), es.onComplete();
                  }),
                  new GroupPlaybackControls([])
                );
            }
            return !et && AcceleratedAnimation.supports(es)
              ? new AcceleratedAnimation(es)
              : new MainThreadAnimation(es);
          },
        isCustomValue = (s) =>
          !!(s && "object" == typeof s && s.mix && s.toValue),
        resolveFinalValueInKeyframes = (s) =>
          isKeyframesTarget(s) ? s[s.length - 1] || 0 : s;
      function addUniqueItem(s, x) {
        -1 === s.indexOf(x) && s.push(x);
      }
      function removeItem(s, x) {
        let W = s.indexOf(x);
        W > -1 && s.splice(W, 1);
      }
      let SubscriptionManager = class SubscriptionManager {
        constructor() {
          this.subscriptions = [];
        }
        add(s) {
          return (
            addUniqueItem(this.subscriptions, s),
            () => removeItem(this.subscriptions, s)
          );
        }
        notify(s, x, W) {
          let X = this.subscriptions.length;
          if (X) {
            if (1 === X) this.subscriptions[0](s, x, W);
            else
              for (let ee = 0; ee < X; ee++) {
                let X = this.subscriptions[ee];
                X && X(s, x, W);
              }
          }
        }
        getSize() {
          return this.subscriptions.length;
        }
        clear() {
          this.subscriptions.length = 0;
        }
      };
      let isFloat = (s) => !isNaN(parseFloat(s)),
        tP = { current: void 0 };
      let MotionValue = class MotionValue {
        constructor(s, x = {}) {
          (this.version = "11.11.11"),
            (this.canTrackVelocity = null),
            (this.events = {}),
            (this.updateAndNotify = (s, x = !0) => {
              let W = tp.now();
              this.updatedAt !== W && this.setPrevFrameValue(),
                (this.prev = this.current),
                this.setCurrent(s),
                this.current !== this.prev &&
                  this.events.change &&
                  this.events.change.notify(this.current),
                x &&
                  this.events.renderRequest &&
                  this.events.renderRequest.notify(this.current);
            }),
            (this.hasAnimated = !1),
            this.setCurrent(s),
            (this.owner = x.owner);
        }
        setCurrent(s) {
          (this.current = s),
            (this.updatedAt = tp.now()),
            null === this.canTrackVelocity &&
              void 0 !== s &&
              (this.canTrackVelocity = isFloat(this.current));
        }
        setPrevFrameValue(s = this.current) {
          (this.prevFrameValue = s), (this.prevUpdatedAt = this.updatedAt);
        }
        onChange(s) {
          return this.on("change", s);
        }
        on(s, x) {
          this.events[s] || (this.events[s] = new SubscriptionManager());
          let W = this.events[s].add(x);
          return "change" === s
            ? () => {
                W(),
                  ex.read(() => {
                    this.events.change.getSize() || this.stop();
                  });
              }
            : W;
        }
        clearListeners() {
          for (let s in this.events) this.events[s].clear();
        }
        attach(s, x) {
          (this.passiveEffect = s), (this.stopPassiveEffect = x);
        }
        set(s, x = !0) {
          x && this.passiveEffect
            ? this.passiveEffect(s, this.updateAndNotify)
            : this.updateAndNotify(s, x);
        }
        setWithVelocity(s, x, W) {
          this.set(x),
            (this.prev = void 0),
            (this.prevFrameValue = s),
            (this.prevUpdatedAt = this.updatedAt - W);
        }
        jump(s, x = !0) {
          this.updateAndNotify(s),
            (this.prev = s),
            (this.prevUpdatedAt = this.prevFrameValue = void 0),
            x && this.stop(),
            this.stopPassiveEffect && this.stopPassiveEffect();
        }
        get() {
          return tP.current && tP.current.push(this), this.current;
        }
        getPrevious() {
          return this.prev;
        }
        getVelocity() {
          var s;
          let x = tp.now();
          if (
            !this.canTrackVelocity ||
            void 0 === this.prevFrameValue ||
            x - this.updatedAt > 30
          )
            return 0;
          let W = Math.min(this.updatedAt - this.prevUpdatedAt, 30);
          return (
            (s = parseFloat(this.current) - parseFloat(this.prevFrameValue)),
            W ? s * (1e3 / W) : 0
          );
        }
        start(s) {
          return (
            this.stop(),
            new Promise((x) => {
              (this.hasAnimated = !0),
                (this.animation = s(x)),
                this.events.animationStart &&
                  this.events.animationStart.notify();
            }).then(() => {
              this.events.animationComplete &&
                this.events.animationComplete.notify(),
                this.clearAnimation();
            })
          );
        }
        stop() {
          this.animation &&
            (this.animation.stop(),
            this.events.animationCancel &&
              this.events.animationCancel.notify()),
            this.clearAnimation();
        }
        isAnimating() {
          return !!this.animation;
        }
        clearAnimation() {
          delete this.animation;
        }
        destroy() {
          this.clearListeners(),
            this.stop(),
            this.stopPassiveEffect && this.stopPassiveEffect();
        }
      };
      function motionValue(s, x) {
        return new MotionValue(s, x);
      }
      let camelToDash = (s) =>
          s.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase(),
        tR = "data-" + camelToDash("framerAppearId"),
        isMotionValue = (s) => !!(s && s.getVelocity);
      function addValueToWillChange(s, x) {
        let W = s.getValue("willChange");
        if (isMotionValue(W) && W.add) return W.add(x);
      }
      function animateTarget(
        s,
        x,
        { delay: W = 0, transitionOverride: X, type: ee } = {}
      ) {
        var et;
        let {
          transition: er = s.getDefaultTransition(),
          transitionEnd: ei,
          ...eo
        } = x;
        X && (er = X);
        let ea = [],
          es = ee && s.animationState && s.animationState.getState()[ee];
        for (let x in eo) {
          let X = s.getValue(
              x,
              null !== (et = s.latestValues[x]) && void 0 !== et ? et : null
            ),
            ee = eo[x];
          if (
            void 0 === ee ||
            (es &&
              (function ({ protectedKeys: s, needsAnimating: x }, W) {
                let X = s.hasOwnProperty(W) && !0 !== x[W];
                return (x[W] = !1), X;
              })(es, x))
          )
            continue;
          let ei = { delay: W, ...getValueTransition(er || {}, x) },
            el = !1;
          if (window.MotionHandoffAnimation) {
            let W = s.props[tR];
            if (W) {
              let s = window.MotionHandoffAnimation(W, x, ex);
              null !== s && ((ei.startTime = s), (el = !0));
            }
          }
          addValueToWillChange(s, x),
            X.start(
              animateMotionValue(
                x,
                X,
                ee,
                s.shouldReduceMotion && em.has(x) ? { type: !1 } : ei,
                s,
                el
              )
            );
          let ec = X.animation;
          ec && ea.push(ec);
        }
        return (
          ei &&
            Promise.all(ea).then(() => {
              ex.update(() => {
                ei &&
                  (function (s, x) {
                    let W = resolveVariant(s, x),
                      {
                        transitionEnd: X = {},
                        transition: ee = {},
                        ...et
                      } = W || {};
                    for (let x in (et = { ...et, ...X })) {
                      let W = resolveFinalValueInKeyframes(et[x]);
                      s.hasValue(x)
                        ? s.getValue(x).set(W)
                        : s.addValue(x, motionValue(W));
                    }
                  })(s, ei);
              });
            }),
          ea
        );
      }
      function animateVariant(s, x, W = {}) {
        var X;
        let ee = resolveVariant(
            s,
            x,
            "exit" === W.type
              ? null === (X = s.presenceContext) || void 0 === X
                ? void 0
                : X.custom
              : void 0
          ),
          { transition: et = s.getDefaultTransition() || {} } = ee || {};
        W.transitionOverride && (et = W.transitionOverride);
        let er = ee
            ? () => Promise.all(animateTarget(s, ee, W))
            : () => Promise.resolve(),
          ei =
            s.variantChildren && s.variantChildren.size
              ? (X = 0) => {
                  let {
                    delayChildren: ee = 0,
                    staggerChildren: er,
                    staggerDirection: ei,
                  } = et;
                  return (function (s, x, W = 0, X = 0, ee = 1, et) {
                    let er = [],
                      ei = (s.variantChildren.size - 1) * X,
                      eo = 1 === ee ? (s = 0) => s * X : (s = 0) => ei - s * X;
                    return (
                      Array.from(s.variantChildren)
                        .sort(sortByTreeOrder)
                        .forEach((s, X) => {
                          s.notify("AnimationStart", x),
                            er.push(
                              animateVariant(s, x, {
                                ...et,
                                delay: W + eo(X),
                              }).then(() => s.notify("AnimationComplete", x))
                            );
                        }),
                      Promise.all(er)
                    );
                  })(s, x, ee + X, er, ei, W);
                }
              : () => Promise.resolve(),
          { when: eo } = et;
        if (!eo) return Promise.all([er(), ei(W.delay)]);
        {
          let [s, x] = "beforeChildren" === eo ? [er, ei] : [ei, er];
          return s().then(() => x());
        }
      }
      function sortByTreeOrder(s, x) {
        return s.sortNodePosition(x);
      }
      let tN = ef.length,
        tO = [...ep].reverse(),
        tM = ep.length;
      function createTypeState(s = !1) {
        return {
          isActive: s,
          protectedKeys: {},
          needsAnimating: {},
          prevResolvedValues: {},
        };
      }
      function createState() {
        return {
          animate: createTypeState(!0),
          whileInView: createTypeState(),
          whileHover: createTypeState(),
          whileTap: createTypeState(),
          whileDrag: createTypeState(),
          whileFocus: createTypeState(),
          exit: createTypeState(),
        };
      }
      let Feature = class Feature {
        constructor(s) {
          (this.isMounted = !1), (this.node = s);
        }
        update() {}
      };
      let tD = 0,
        isPrimaryPointer = (s) =>
          "mouse" === s.pointerType
            ? "number" != typeof s.button || s.button <= 0
            : !1 !== s.isPrimary;
      function extractEventInfo(s, x = "page") {
        return { point: { x: s[`${x}X`], y: s[`${x}Y`] } };
      }
      let addPointerInfo = (s) => (x) =>
        isPrimaryPointer(x) && s(x, extractEventInfo(x));
      function addDomEvent(s, x, W, X = { passive: !0 }) {
        return s.addEventListener(x, W, X), () => s.removeEventListener(x, W);
      }
      function addPointerEvent(s, x, W, X) {
        return addDomEvent(s, x, addPointerInfo(W), X);
      }
      let distance = (s, x) => Math.abs(s - x);
      let PanSession = class PanSession {
        constructor(
          s,
          x,
          {
            transformPagePoint: W,
            contextWindow: X,
            dragSnapToOrigin: ee = !1,
          } = {}
        ) {
          if (
            ((this.startEvent = null),
            (this.lastMoveEvent = null),
            (this.lastMoveEventInfo = null),
            (this.handlers = {}),
            (this.contextWindow = window),
            (this.updatePoint = () => {
              if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
              let s = getPanInfo(this.lastMoveEventInfo, this.history),
                x = null !== this.startEvent,
                W =
                  (function (s, x) {
                    let W = distance(s.x, x.x),
                      X = distance(s.y, x.y);
                    return Math.sqrt(W ** 2 + X ** 2);
                  })(s.offset, { x: 0, y: 0 }) >= 3;
              if (!x && !W) return;
              let { point: X } = s,
                { timestamp: ee } = eA;
              this.history.push({ ...X, timestamp: ee });
              let { onStart: et, onMove: er } = this.handlers;
              x ||
                (et && et(this.lastMoveEvent, s),
                (this.startEvent = this.lastMoveEvent)),
                er && er(this.lastMoveEvent, s);
            }),
            (this.handlePointerMove = (s, x) => {
              (this.lastMoveEvent = s),
                (this.lastMoveEventInfo = transformPoint(
                  x,
                  this.transformPagePoint
                )),
                ex.update(this.updatePoint, !0);
            }),
            (this.handlePointerUp = (s, x) => {
              this.end();
              let {
                onEnd: W,
                onSessionEnd: X,
                resumeAnimation: ee,
              } = this.handlers;
              if (
                (this.dragSnapToOrigin && ee && ee(),
                !(this.lastMoveEvent && this.lastMoveEventInfo))
              )
                return;
              let et = getPanInfo(
                "pointercancel" === s.type
                  ? this.lastMoveEventInfo
                  : transformPoint(x, this.transformPagePoint),
                this.history
              );
              this.startEvent && W && W(s, et), X && X(s, et);
            }),
            !isPrimaryPointer(s))
          )
            return;
          (this.dragSnapToOrigin = ee),
            (this.handlers = x),
            (this.transformPagePoint = W),
            (this.contextWindow = X || window);
          let et = extractEventInfo(s),
            er = transformPoint(et, this.transformPagePoint),
            { point: ei } = er,
            { timestamp: eo } = eA;
          this.history = [{ ...ei, timestamp: eo }];
          let { onSessionStart: ea } = x;
          ea && ea(s, getPanInfo(er, this.history)),
            (this.removeListeners = pipe(
              addPointerEvent(
                this.contextWindow,
                "pointermove",
                this.handlePointerMove
              ),
              addPointerEvent(
                this.contextWindow,
                "pointerup",
                this.handlePointerUp
              ),
              addPointerEvent(
                this.contextWindow,
                "pointercancel",
                this.handlePointerUp
              )
            ));
        }
        updateHandlers(s) {
          this.handlers = s;
        }
        end() {
          this.removeListeners && this.removeListeners(), eE(this.updatePoint);
        }
      };
      function transformPoint(s, x) {
        return x ? { point: x(s.point) } : s;
      }
      function subtractPoint(s, x) {
        return { x: s.x - x.x, y: s.y - x.y };
      }
      function getPanInfo({ point: s }, x) {
        return {
          point: s,
          delta: subtractPoint(s, lastDevicePoint(x)),
          offset: subtractPoint(s, x[0]),
          velocity: (function (s, x) {
            if (s.length < 2) return { x: 0, y: 0 };
            let W = s.length - 1,
              X = null,
              ee = lastDevicePoint(s);
            for (
              ;
              W >= 0 &&
              ((X = s[W]),
              !(
                ee.timestamp - X.timestamp >
                time_conversion_secondsToMilliseconds(0.1)
              ));

            )
              W--;
            if (!X) return { x: 0, y: 0 };
            let et = millisecondsToSeconds(ee.timestamp - X.timestamp);
            if (0 === et) return { x: 0, y: 0 };
            let er = { x: (ee.x - X.x) / et, y: (ee.y - X.y) / et };
            return (
              er.x === 1 / 0 && (er.x = 0), er.y === 1 / 0 && (er.y = 0), er
            );
          })(x, 0),
        };
      }
      function lastDevicePoint(s) {
        return s[s.length - 1];
      }
      function createLock(s) {
        let x = null;
        return () =>
          null === x &&
          ((x = s),
          () => {
            x = null;
          });
      }
      let tB = createLock("dragHorizontal"),
        tL = createLock("dragVertical");
      function getGlobalLock(s) {
        let x = !1;
        if ("y" === s) x = tL();
        else if ("x" === s) x = tB();
        else {
          let s = tB(),
            W = tL();
          s && W
            ? (x = () => {
                s(), W();
              })
            : (s && s(), W && W());
        }
        return x;
      }
      function isDragActive() {
        let s = getGlobalLock(!0);
        return !s || (s(), !1);
      }
      function isRefObject(s) {
        return (
          s &&
          "object" == typeof s &&
          Object.prototype.hasOwnProperty.call(s, "current")
        );
      }
      function calcLength(s) {
        return s.max - s.min;
      }
      function calcAxisDelta(s, x, W, X = 0.5) {
        (s.origin = X),
          (s.originPoint = mixNumber(x.min, x.max, s.origin)),
          (s.scale = calcLength(W) / calcLength(x)),
          (s.translate = mixNumber(W.min, W.max, s.origin) - s.originPoint),
          ((s.scale >= 0.9999 && s.scale <= 1.0001) || isNaN(s.scale)) &&
            (s.scale = 1),
          ((s.translate >= -0.01 && s.translate <= 0.01) ||
            isNaN(s.translate)) &&
            (s.translate = 0);
      }
      function calcBoxDelta(s, x, W, X) {
        calcAxisDelta(s.x, x.x, W.x, X ? X.originX : void 0),
          calcAxisDelta(s.y, x.y, W.y, X ? X.originY : void 0);
      }
      function calcRelativeAxis(s, x, W) {
        (s.min = W.min + x.min), (s.max = s.min + calcLength(x));
      }
      function calcRelativeAxisPosition(s, x, W) {
        (s.min = x.min - W.min), (s.max = s.min + calcLength(x));
      }
      function calcRelativePosition(s, x, W) {
        calcRelativeAxisPosition(s.x, x.x, W.x),
          calcRelativeAxisPosition(s.y, x.y, W.y);
      }
      function calcRelativeAxisConstraints(s, x, W) {
        return {
          min: void 0 !== x ? s.min + x : void 0,
          max: void 0 !== W ? s.max + W - (s.max - s.min) : void 0,
        };
      }
      function calcViewportAxisConstraints(s, x) {
        let W = x.min - s.min,
          X = x.max - s.max;
        return (
          x.max - x.min < s.max - s.min && ([W, X] = [X, W]), { min: W, max: X }
        );
      }
      function resolveAxisElastic(s, x, W) {
        return {
          min: resolvePointElastic(s, x),
          max: resolvePointElastic(s, W),
        };
      }
      function resolvePointElastic(s, x) {
        return "number" == typeof s ? s : s[x] || 0;
      }
      let createAxisDelta = () => ({
          translate: 0,
          scale: 1,
          origin: 0,
          originPoint: 0,
        }),
        createDelta = () => ({ x: createAxisDelta(), y: createAxisDelta() }),
        createAxis = () => ({ min: 0, max: 0 }),
        createBox = () => ({ x: createAxis(), y: createAxis() });
      function eachAxis(s) {
        return [s("x"), s("y")];
      }
      function convertBoundingBoxToBox({
        top: s,
        left: x,
        right: W,
        bottom: X,
      }) {
        return { x: { min: x, max: W }, y: { min: s, max: X } };
      }
      function isIdentityScale(s) {
        return void 0 === s || 1 === s;
      }
      function hasScale({ scale: s, scaleX: x, scaleY: W }) {
        return (
          !isIdentityScale(s) || !isIdentityScale(x) || !isIdentityScale(W)
        );
      }
      function hasTransform(s) {
        return (
          hasScale(s) ||
          has2DTranslate(s) ||
          s.z ||
          s.rotate ||
          s.rotateX ||
          s.rotateY ||
          s.skewX ||
          s.skewY
        );
      }
      function has2DTranslate(s) {
        var x, W;
        return ((x = s.x) && "0%" !== x) || ((W = s.y) && "0%" !== W);
      }
      function applyPointDelta(s, x, W, X, ee) {
        return void 0 !== ee && (s = X + ee * (s - X)), X + W * (s - X) + x;
      }
      function applyAxisDelta(s, x = 0, W = 1, X, ee) {
        (s.min = applyPointDelta(s.min, x, W, X, ee)),
          (s.max = applyPointDelta(s.max, x, W, X, ee));
      }
      function applyBoxDelta(s, { x, y: W }) {
        applyAxisDelta(s.x, x.translate, x.scale, x.originPoint),
          applyAxisDelta(s.y, W.translate, W.scale, W.originPoint);
      }
      function translateAxis(s, x) {
        (s.min = s.min + x), (s.max = s.max + x);
      }
      function transformAxis(s, x, W, X, ee = 0.5) {
        let et = mixNumber(s.min, s.max, ee);
        applyAxisDelta(s, x, W, et, X);
      }
      function transformBox(s, x) {
        transformAxis(s.x, x.x, x.scaleX, x.scale, x.originX),
          transformAxis(s.y, x.y, x.scaleY, x.scale, x.originY);
      }
      function measureViewportBox(s, x) {
        return convertBoundingBoxToBox(
          (function (s, x) {
            if (!x) return s;
            let W = x({ x: s.left, y: s.top }),
              X = x({ x: s.right, y: s.bottom });
            return { top: W.y, left: W.x, bottom: X.y, right: X.x };
          })(s.getBoundingClientRect(), x)
        );
      }
      let getContextWindow = ({ current: s }) =>
          s ? s.ownerDocument.defaultView : null,
        tj = new WeakMap();
      let VisualElementDragControls = class VisualElementDragControls {
        constructor(s) {
          (this.openGlobalLock = null),
            (this.isDragging = !1),
            (this.currentDirection = null),
            (this.originPoint = { x: 0, y: 0 }),
            (this.constraints = !1),
            (this.hasMutatedConstraints = !1),
            (this.elastic = createBox()),
            (this.visualElement = s);
        }
        start(s, { snapToCursor: x = !1 } = {}) {
          let { presenceContext: W } = this.visualElement;
          if (W && !1 === W.isPresent) return;
          let { dragSnapToOrigin: X } = this.getProps();
          this.panSession = new PanSession(
            s,
            {
              onSessionStart: (s) => {
                let { dragSnapToOrigin: W } = this.getProps();
                W ? this.pauseAnimation() : this.stopAnimation(),
                  x && this.snapToCursor(extractEventInfo(s, "page").point);
              },
              onStart: (s, x) => {
                let {
                  drag: W,
                  dragPropagation: X,
                  onDragStart: ee,
                } = this.getProps();
                if (
                  W &&
                  !X &&
                  (this.openGlobalLock && this.openGlobalLock(),
                  (this.openGlobalLock = getGlobalLock(W)),
                  !this.openGlobalLock)
                )
                  return;
                (this.isDragging = !0),
                  (this.currentDirection = null),
                  this.resolveConstraints(),
                  this.visualElement.projection &&
                    ((this.visualElement.projection.isAnimationBlocked = !0),
                    (this.visualElement.projection.target = void 0)),
                  eachAxis((s) => {
                    let x = this.getAxisMotionValue(s).get() || 0;
                    if (e$.test(x)) {
                      let { projection: W } = this.visualElement;
                      if (W && W.layout) {
                        let X = W.layout.layoutBox[s];
                        if (X) {
                          let s = calcLength(X);
                          x = s * (parseFloat(x) / 100);
                        }
                      }
                    }
                    this.originPoint[s] = x;
                  }),
                  ee && ex.postRender(() => ee(s, x)),
                  addValueToWillChange(this.visualElement, "transform");
                let { animationState: et } = this.visualElement;
                et && et.setActive("whileDrag", !0);
              },
              onMove: (s, x) => {
                let {
                  dragPropagation: W,
                  dragDirectionLock: X,
                  onDirectionLock: ee,
                  onDrag: et,
                } = this.getProps();
                if (!W && !this.openGlobalLock) return;
                let { offset: er } = x;
                if (X && null === this.currentDirection) {
                  (this.currentDirection = (function (s, x = 10) {
                    let W = null;
                    return (
                      Math.abs(s.y) > x
                        ? (W = "y")
                        : Math.abs(s.x) > x && (W = "x"),
                      W
                    );
                  })(er)),
                    null !== this.currentDirection &&
                      ee &&
                      ee(this.currentDirection);
                  return;
                }
                this.updateAxis("x", x.point, er),
                  this.updateAxis("y", x.point, er),
                  this.visualElement.render(),
                  et && et(s, x);
              },
              onSessionEnd: (s, x) => this.stop(s, x),
              resumeAnimation: () =>
                eachAxis((s) => {
                  var x;
                  return (
                    "paused" === this.getAnimationState(s) &&
                    (null === (x = this.getAxisMotionValue(s).animation) ||
                    void 0 === x
                      ? void 0
                      : x.play())
                  );
                }),
            },
            {
              transformPagePoint: this.visualElement.getTransformPagePoint(),
              dragSnapToOrigin: X,
              contextWindow: getContextWindow(this.visualElement),
            }
          );
        }
        stop(s, x) {
          let W = this.isDragging;
          if ((this.cancel(), !W)) return;
          let { velocity: X } = x;
          this.startAnimation(X);
          let { onDragEnd: ee } = this.getProps();
          ee && ex.postRender(() => ee(s, x));
        }
        cancel() {
          this.isDragging = !1;
          let { projection: s, animationState: x } = this.visualElement;
          s && (s.isAnimationBlocked = !1),
            this.panSession && this.panSession.end(),
            (this.panSession = void 0);
          let { dragPropagation: W } = this.getProps();
          !W &&
            this.openGlobalLock &&
            (this.openGlobalLock(), (this.openGlobalLock = null)),
            x && x.setActive("whileDrag", !1);
        }
        updateAxis(s, x, W) {
          let { drag: X } = this.getProps();
          if (!W || !shouldDrag(s, X, this.currentDirection)) return;
          let ee = this.getAxisMotionValue(s),
            et = this.originPoint[s] + W[s];
          this.constraints &&
            this.constraints[s] &&
            (et = (function (s, { min: x, max: W }, X) {
              return (
                void 0 !== x && s < x
                  ? (s = X ? mixNumber(x, s, X.min) : Math.max(s, x))
                  : void 0 !== W &&
                    s > W &&
                    (s = X ? mixNumber(W, s, X.max) : Math.min(s, W)),
                s
              );
            })(et, this.constraints[s], this.elastic[s])),
            ee.set(et);
        }
        resolveConstraints() {
          var s;
          let { dragConstraints: x, dragElastic: W } = this.getProps(),
            X =
              this.visualElement.projection &&
              !this.visualElement.projection.layout
                ? this.visualElement.projection.measure(!1)
                : null === (s = this.visualElement.projection) || void 0 === s
                ? void 0
                : s.layout,
            ee = this.constraints;
          x && isRefObject(x)
            ? this.constraints ||
              (this.constraints = this.resolveRefConstraints())
            : x && X
            ? (this.constraints = (function (
                s,
                { top: x, left: W, bottom: X, right: ee }
              ) {
                return {
                  x: calcRelativeAxisConstraints(s.x, W, ee),
                  y: calcRelativeAxisConstraints(s.y, x, X),
                };
              })(X.layoutBox, x))
            : (this.constraints = !1),
            (this.elastic = (function (s = 0.35) {
              return (
                !1 === s ? (s = 0) : !0 === s && (s = 0.35),
                {
                  x: resolveAxisElastic(s, "left", "right"),
                  y: resolveAxisElastic(s, "top", "bottom"),
                }
              );
            })(W)),
            ee !== this.constraints &&
              X &&
              this.constraints &&
              !this.hasMutatedConstraints &&
              eachAxis((s) => {
                !1 !== this.constraints &&
                  this.getAxisMotionValue(s) &&
                  (this.constraints[s] = (function (s, x) {
                    let W = {};
                    return (
                      void 0 !== x.min && (W.min = x.min - s.min),
                      void 0 !== x.max && (W.max = x.max - s.min),
                      W
                    );
                  })(X.layoutBox[s], this.constraints[s]));
              });
        }
        resolveRefConstraints() {
          var s;
          let { dragConstraints: x, onMeasureDragConstraints: W } =
            this.getProps();
          if (!x || !isRefObject(x)) return !1;
          let X = x.current;
          noop(
            null !== X,
            "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop."
          );
          let { projection: ee } = this.visualElement;
          if (!ee || !ee.layout) return !1;
          let et = (function (s, x, W) {
              let X = measureViewportBox(s, W),
                { scroll: ee } = x;
              return (
                ee &&
                  (translateAxis(X.x, ee.offset.x),
                  translateAxis(X.y, ee.offset.y)),
                X
              );
            })(X, ee.root, this.visualElement.getTransformPagePoint()),
            er = {
              x: calcViewportAxisConstraints((s = ee.layout.layoutBox).x, et.x),
              y: calcViewportAxisConstraints(s.y, et.y),
            };
          if (W) {
            let s = W(
              (function ({ x: s, y: x }) {
                return { top: x.min, right: s.max, bottom: x.max, left: s.min };
              })(er)
            );
            (this.hasMutatedConstraints = !!s),
              s && (er = convertBoundingBoxToBox(s));
          }
          return er;
        }
        startAnimation(s) {
          let {
              drag: x,
              dragMomentum: W,
              dragElastic: X,
              dragTransition: ee,
              dragSnapToOrigin: et,
              onDragTransitionEnd: er,
            } = this.getProps(),
            ei = this.constraints || {},
            eo = eachAxis((er) => {
              if (!shouldDrag(er, x, this.currentDirection)) return;
              let eo = (ei && ei[er]) || {};
              et && (eo = { min: 0, max: 0 });
              let ea = {
                type: "inertia",
                velocity: W ? s[er] : 0,
                bounceStiffness: X ? 200 : 1e6,
                bounceDamping: X ? 40 : 1e7,
                timeConstant: 750,
                restDelta: 1,
                restSpeed: 10,
                ...ee,
                ...eo,
              };
              return this.startAxisValueAnimation(er, ea);
            });
          return Promise.all(eo).then(er);
        }
        startAxisValueAnimation(s, x) {
          let W = this.getAxisMotionValue(s);
          return (
            addValueToWillChange(this.visualElement, s),
            W.start(animateMotionValue(s, W, 0, x, this.visualElement, !1))
          );
        }
        stopAnimation() {
          eachAxis((s) => this.getAxisMotionValue(s).stop());
        }
        pauseAnimation() {
          eachAxis((s) => {
            var x;
            return null === (x = this.getAxisMotionValue(s).animation) ||
              void 0 === x
              ? void 0
              : x.pause();
          });
        }
        getAnimationState(s) {
          var x;
          return null === (x = this.getAxisMotionValue(s).animation) ||
            void 0 === x
            ? void 0
            : x.state;
        }
        getAxisMotionValue(s) {
          let x = `_drag${s.toUpperCase()}`,
            W = this.visualElement.getProps(),
            X = W[x];
          return (
            X ||
            this.visualElement.getValue(
              s,
              (W.initial ? W.initial[s] : void 0) || 0
            )
          );
        }
        snapToCursor(s) {
          eachAxis((x) => {
            let { drag: W } = this.getProps();
            if (!shouldDrag(x, W, this.currentDirection)) return;
            let { projection: X } = this.visualElement,
              ee = this.getAxisMotionValue(x);
            if (X && X.layout) {
              let { min: W, max: et } = X.layout.layoutBox[x];
              ee.set(s[x] - mixNumber(W, et, 0.5));
            }
          });
        }
        scalePositionWithinConstraints() {
          if (!this.visualElement.current) return;
          let { drag: s, dragConstraints: x } = this.getProps(),
            { projection: W } = this.visualElement;
          if (!isRefObject(x) || !W || !this.constraints) return;
          this.stopAnimation();
          let X = { x: 0, y: 0 };
          eachAxis((s) => {
            let x = this.getAxisMotionValue(s);
            if (x && !1 !== this.constraints) {
              let W = x.get();
              X[s] = (function (s, x) {
                let W = 0.5,
                  X = calcLength(s),
                  ee = calcLength(x);
                return (
                  ee > X
                    ? (W = progress(x.min, x.max - X, s.min))
                    : X > ee && (W = progress(s.min, s.max - ee, x.min)),
                  clamp(0, 1, W)
                );
              })({ min: W, max: W }, this.constraints[s]);
            }
          });
          let { transformTemplate: ee } = this.visualElement.getProps();
          (this.visualElement.current.style.transform = ee
            ? ee({}, "")
            : "none"),
            W.root && W.root.updateScroll(),
            W.updateLayout(),
            this.resolveConstraints(),
            eachAxis((x) => {
              if (!shouldDrag(x, s, null)) return;
              let W = this.getAxisMotionValue(x),
                { min: ee, max: et } = this.constraints[x];
              W.set(mixNumber(ee, et, X[x]));
            });
        }
        addListeners() {
          if (!this.visualElement.current) return;
          tj.set(this.visualElement, this);
          let s = this.visualElement.current,
            x = addPointerEvent(s, "pointerdown", (s) => {
              let { drag: x, dragListener: W = !0 } = this.getProps();
              x && W && this.start(s);
            }),
            measureDragConstraints = () => {
              let { dragConstraints: s } = this.getProps();
              isRefObject(s) &&
                s.current &&
                (this.constraints = this.resolveRefConstraints());
            },
            { projection: W } = this.visualElement,
            X = W.addEventListener("measure", measureDragConstraints);
          W && !W.layout && (W.root && W.root.updateScroll(), W.updateLayout()),
            ex.read(measureDragConstraints);
          let ee = addDomEvent(window, "resize", () =>
              this.scalePositionWithinConstraints()
            ),
            et = W.addEventListener(
              "didUpdate",
              ({ delta: s, hasLayoutChanged: x }) => {
                this.isDragging &&
                  x &&
                  (eachAxis((x) => {
                    let W = this.getAxisMotionValue(x);
                    W &&
                      ((this.originPoint[x] += s[x].translate),
                      W.set(W.get() + s[x].translate));
                  }),
                  this.visualElement.render());
              }
            );
          return () => {
            ee(), x(), X(), et && et();
          };
        }
        getProps() {
          let s = this.visualElement.getProps(),
            {
              drag: x = !1,
              dragDirectionLock: W = !1,
              dragPropagation: X = !1,
              dragConstraints: ee = !1,
              dragElastic: et = 0.35,
              dragMomentum: er = !0,
            } = s;
          return {
            ...s,
            drag: x,
            dragDirectionLock: W,
            dragPropagation: X,
            dragConstraints: ee,
            dragElastic: et,
            dragMomentum: er,
          };
        }
      };
      function shouldDrag(s, x, W) {
        return (!0 === x || x === s) && (null === W || W === s);
      }
      let asyncHandler = (s) => (x, W) => {
          s && ex.postRender(() => s(x, W));
        },
        tU = (0, eo.createContext)({}),
        t$ = { hasAnimatedSinceResize: !0, hasEverUpdated: !1 };
      function pixelsToPercent(s, x) {
        return x.max === x.min ? 0 : (s / (x.max - x.min)) * 100;
      }
      let tF = {
          correct: (s, x) => {
            if (!x.target) return s;
            if ("string" == typeof s) {
              if (!eF.test(s)) return s;
              s = parseFloat(s);
            }
            let W = pixelsToPercent(s, x.target.x),
              X = pixelsToPercent(s, x.target.y);
            return `${W}% ${X}%`;
          },
        },
        tz = {},
        { schedule: tH, cancel: tq } = createRenderBatcher(queueMicrotask, !1);
      let MeasureLayoutWithContext = class MeasureLayoutWithContext extends eo.Component {
        componentDidMount() {
          let {
              visualElement: s,
              layoutGroup: x,
              switchLayoutGroup: W,
              layoutId: X,
            } = this.props,
            { projection: ee } = s;
          Object.assign(tz, tV),
            ee &&
              (x.group && x.group.add(ee),
              W && W.register && X && W.register(ee),
              ee.root.didUpdate(),
              ee.addEventListener("animationComplete", () => {
                this.safeToRemove();
              }),
              ee.setOptions({
                ...ee.options,
                onExitComplete: () => this.safeToRemove(),
              })),
            (t$.hasEverUpdated = !0);
        }
        getSnapshotBeforeUpdate(s) {
          let {
              layoutDependency: x,
              visualElement: W,
              drag: X,
              isPresent: ee,
            } = this.props,
            et = W.projection;
          return (
            et &&
              ((et.isPresent = ee),
              X || s.layoutDependency !== x || void 0 === x
                ? et.willUpdate()
                : this.safeToRemove(),
              s.isPresent === ee ||
                (ee
                  ? et.promote()
                  : et.relegate() ||
                    ex.postRender(() => {
                      let s = et.getStack();
                      (s && s.members.length) || this.safeToRemove();
                    }))),
            null
          );
        }
        componentDidUpdate() {
          let { projection: s } = this.props.visualElement;
          s &&
            (s.root.didUpdate(),
            tH.postRender(() => {
              !s.currentAnimation && s.isLead() && this.safeToRemove();
            }));
        }
        componentWillUnmount() {
          let {
              visualElement: s,
              layoutGroup: x,
              switchLayoutGroup: W,
            } = this.props,
            { projection: X } = s;
          X &&
            (X.scheduleCheckAfterUnmount(),
            x && x.group && x.group.remove(X),
            W && W.deregister && W.deregister(X));
        }
        safeToRemove() {
          let { safeToRemove: s } = this.props;
          s && s();
        }
        render() {
          return null;
        }
      };
      function MeasureLayout(s) {
        let [x, W] = (function () {
            let s = (0, eo.useContext)(el);
            if (null === s) return [!0, null];
            let { isPresent: x, onExitComplete: W, register: X } = s,
              ee = (0, eo.useId)();
            (0, eo.useEffect)(() => X(ee), []);
            let et = (0, eo.useCallback)(() => W && W(ee), [ee, W]);
            return !x && W ? [!1, et] : [!0];
          })(),
          X = (0, eo.useContext)(eu);
        return (0, ei.jsx)(MeasureLayoutWithContext, {
          ...s,
          layoutGroup: X,
          switchLayoutGroup: (0, eo.useContext)(tU),
          isPresent: x,
          safeToRemove: W,
        });
      }
      let tV = {
          borderRadius: {
            ...tF,
            applyTo: [
              "borderTopLeftRadius",
              "borderTopRightRadius",
              "borderBottomLeftRadius",
              "borderBottomRightRadius",
            ],
          },
          borderTopLeftRadius: tF,
          borderTopRightRadius: tF,
          borderBottomLeftRadius: tF,
          borderBottomRightRadius: tF,
          boxShadow: {
            correct: (s, { treeScale: x, projectionDelta: W }) => {
              let X = tr.parse(s);
              if (X.length > 5) return s;
              let ee = tr.createTransformer(s),
                et = "number" != typeof X[0] ? 1 : 0,
                er = W.x.scale * x.x,
                ei = W.y.scale * x.y;
              (X[0 + et] /= er), (X[1 + et] /= ei);
              let eo = mixNumber(er, ei, 0.5);
              return (
                "number" == typeof X[2 + et] && (X[2 + et] /= eo),
                "number" == typeof X[3 + et] && (X[3 + et] /= eo),
                ee(X)
              );
            },
          },
        },
        tW = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"],
        tK = tW.length,
        asNumber = (s) => ("string" == typeof s ? parseFloat(s) : s),
        isPx = (s) => "number" == typeof s || eF.test(s);
      function getRadius(s, x) {
        return void 0 !== s[x] ? s[x] : s.borderRadius;
      }
      let tZ = compress(0, 0.5, eP),
        tG = compress(0.5, 0.95, noop);
      function compress(s, x, W) {
        return (X) => (X < s ? 0 : X > x ? 1 : W(progress(s, x, X)));
      }
      function copyAxisInto(s, x) {
        (s.min = x.min), (s.max = x.max);
      }
      function copyBoxInto(s, x) {
        copyAxisInto(s.x, x.x), copyAxisInto(s.y, x.y);
      }
      function copyAxisDeltaInto(s, x) {
        (s.translate = x.translate),
          (s.scale = x.scale),
          (s.originPoint = x.originPoint),
          (s.origin = x.origin);
      }
      function removePointDelta(s, x, W, X, ee) {
        return (
          (s -= x),
          (s = X + (1 / W) * (s - X)),
          void 0 !== ee && (s = X + (1 / ee) * (s - X)),
          s
        );
      }
      function removeAxisTransforms(s, x, [W, X, ee], et, er) {
        !(function (s, x = 0, W = 1, X = 0.5, ee, et = s, er = s) {
          if (e$.test(x)) {
            x = parseFloat(x);
            let s = mixNumber(er.min, er.max, x / 100);
            x = s - er.min;
          }
          if ("number" != typeof x) return;
          let ei = mixNumber(et.min, et.max, X);
          s === et && (ei -= x),
            (s.min = removePointDelta(s.min, x, W, ei, ee)),
            (s.max = removePointDelta(s.max, x, W, ei, ee));
        })(s, x[W], x[X], x[ee], x.scale, et, er);
      }
      let tY = ["x", "scaleX", "originX"],
        tQ = ["y", "scaleY", "originY"];
      function removeBoxTransforms(s, x, W, X) {
        removeAxisTransforms(s.x, x, tY, W ? W.x : void 0, X ? X.x : void 0),
          removeAxisTransforms(s.y, x, tQ, W ? W.y : void 0, X ? X.y : void 0);
      }
      function isAxisDeltaZero(s) {
        return 0 === s.translate && 1 === s.scale;
      }
      function isDeltaZero(s) {
        return isAxisDeltaZero(s.x) && isAxisDeltaZero(s.y);
      }
      function axisEquals(s, x) {
        return s.min === x.min && s.max === x.max;
      }
      function axisEqualsRounded(s, x) {
        return (
          Math.round(s.min) === Math.round(x.min) &&
          Math.round(s.max) === Math.round(x.max)
        );
      }
      function boxEqualsRounded(s, x) {
        return axisEqualsRounded(s.x, x.x) && axisEqualsRounded(s.y, x.y);
      }
      function aspectRatio(s) {
        return calcLength(s.x) / calcLength(s.y);
      }
      function axisDeltaEquals(s, x) {
        return (
          s.translate === x.translate &&
          s.scale === x.scale &&
          s.originPoint === x.originPoint
        );
      }
      let NodeStack = class NodeStack {
        constructor() {
          this.members = [];
        }
        add(s) {
          addUniqueItem(this.members, s), s.scheduleRender();
        }
        remove(s) {
          if (
            (removeItem(this.members, s),
            s === this.prevLead && (this.prevLead = void 0),
            s === this.lead)
          ) {
            let s = this.members[this.members.length - 1];
            s && this.promote(s);
          }
        }
        relegate(s) {
          let x;
          let W = this.members.findIndex((x) => s === x);
          if (0 === W) return !1;
          for (let s = W; s >= 0; s--) {
            let W = this.members[s];
            if (!1 !== W.isPresent) {
              x = W;
              break;
            }
          }
          return !!x && (this.promote(x), !0);
        }
        promote(s, x) {
          let W = this.lead;
          if (s !== W && ((this.prevLead = W), (this.lead = s), s.show(), W)) {
            W.instance && W.scheduleRender(),
              s.scheduleRender(),
              (s.resumeFrom = W),
              x && (s.resumeFrom.preserveOpacity = !0),
              W.snapshot &&
                ((s.snapshot = W.snapshot),
                (s.snapshot.latestValues =
                  W.animationValues || W.latestValues)),
              s.root && s.root.isUpdating && (s.isLayoutDirty = !0);
            let { crossfade: X } = s.options;
            !1 === X && W.hide();
          }
        }
        exitAnimationComplete() {
          this.members.forEach((s) => {
            let { options: x, resumingFrom: W } = s;
            x.onExitComplete && x.onExitComplete(),
              W && W.options.onExitComplete && W.options.onExitComplete();
          });
        }
        scheduleRender() {
          this.members.forEach((s) => {
            s.instance && s.scheduleRender(!1);
          });
        }
        removeLeadSnapshot() {
          this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
        }
      };
      let compareByDepth = (s, x) => s.depth - x.depth;
      let FlatTree = class FlatTree {
        constructor() {
          (this.children = []), (this.isDirty = !1);
        }
        add(s) {
          addUniqueItem(this.children, s), (this.isDirty = !0);
        }
        remove(s) {
          removeItem(this.children, s), (this.isDirty = !0);
        }
        forEach(s) {
          this.isDirty && this.children.sort(compareByDepth),
            (this.isDirty = !1),
            this.children.forEach(s);
        }
      };
      function resolveMotionValue(s) {
        let x = isMotionValue(s) ? s.get() : s;
        return isCustomValue(x) ? x.toValue() : x;
      }
      let tJ = {
          type: "projectionFrame",
          totalNodes: 0,
          resolvedTargetDeltas: 0,
          recalculatedProjection: 0,
        },
        tX = "undefined" != typeof window && void 0 !== window.MotionDebug,
        t0 = ["", "X", "Y", "Z"],
        t1 = { visibility: "hidden" },
        t2 = 0;
      function resetDistortingTransform(s, x, W, X) {
        let { latestValues: ee } = x;
        ee[s] && ((W[s] = ee[s]), x.setStaticValue(s, 0), X && (X[s] = 0));
      }
      function createProjectionNode({
        attachResizeListener: s,
        defaultParent: x,
        measureScroll: W,
        checkIsScrollRoot: X,
        resetTransform: ee,
      }) {
        return class {
          constructor(s = {}, W = null == x ? void 0 : x()) {
            (this.id = t2++),
              (this.animationId = 0),
              (this.children = new Set()),
              (this.options = {}),
              (this.isTreeAnimating = !1),
              (this.isAnimationBlocked = !1),
              (this.isLayoutDirty = !1),
              (this.isProjectionDirty = !1),
              (this.isSharedProjectionDirty = !1),
              (this.isTransformDirty = !1),
              (this.updateManuallyBlocked = !1),
              (this.updateBlockedByResize = !1),
              (this.isUpdating = !1),
              (this.isSVG = !1),
              (this.needsReset = !1),
              (this.shouldResetTransform = !1),
              (this.hasCheckedOptimisedAppear = !1),
              (this.treeScale = { x: 1, y: 1 }),
              (this.eventHandlers = new Map()),
              (this.hasTreeAnimated = !1),
              (this.updateScheduled = !1),
              (this.scheduleUpdate = () => this.update()),
              (this.projectionUpdateScheduled = !1),
              (this.checkUpdateFailed = () => {
                this.isUpdating &&
                  ((this.isUpdating = !1), this.clearAllSnapshots());
              }),
              (this.updateProjection = () => {
                (this.projectionUpdateScheduled = !1),
                  tX &&
                    (tJ.totalNodes =
                      tJ.resolvedTargetDeltas =
                      tJ.recalculatedProjection =
                        0),
                  this.nodes.forEach(propagateDirtyNodes),
                  this.nodes.forEach(resolveTargetDelta),
                  this.nodes.forEach(calcProjection),
                  this.nodes.forEach(cleanDirtyNodes),
                  tX && window.MotionDebug.record(tJ);
              }),
              (this.resolvedRelativeTargetAt = 0),
              (this.hasProjected = !1),
              (this.isVisible = !0),
              (this.animationProgress = 0),
              (this.sharedNodes = new Map()),
              (this.latestValues = s),
              (this.root = W ? W.root || W : this),
              (this.path = W ? [...W.path, W] : []),
              (this.parent = W),
              (this.depth = W ? W.depth + 1 : 0);
            for (let s = 0; s < this.path.length; s++)
              this.path[s].shouldResetTransform = !0;
            this.root === this && (this.nodes = new FlatTree());
          }
          addEventListener(s, x) {
            return (
              this.eventHandlers.has(s) ||
                this.eventHandlers.set(s, new SubscriptionManager()),
              this.eventHandlers.get(s).add(x)
            );
          }
          notifyListeners(s, ...x) {
            let W = this.eventHandlers.get(s);
            W && W.notify(...x);
          }
          hasListeners(s) {
            return this.eventHandlers.has(s);
          }
          mount(x, W = this.root.hasTreeAnimated) {
            if (this.instance) return;
            (this.isSVG = x instanceof SVGElement && "svg" !== x.tagName),
              (this.instance = x);
            let { layoutId: X, layout: ee, visualElement: et } = this.options;
            if (
              (et && !et.current && et.mount(x),
              this.root.nodes.add(this),
              this.parent && this.parent.children.add(this),
              W && (ee || X) && (this.isLayoutDirty = !0),
              s)
            ) {
              let W;
              let resizeUnblockUpdate = () =>
                (this.root.updateBlockedByResize = !1);
              s(x, () => {
                (this.root.updateBlockedByResize = !0),
                  W && W(),
                  (W = (function (s, x) {
                    let W = tp.now(),
                      checkElapsed = ({ timestamp: X }) => {
                        let ee = X - W;
                        ee >= x && (eE(checkElapsed), s(ee - x));
                      };
                    return ex.read(checkElapsed, !0), () => eE(checkElapsed);
                  })(resizeUnblockUpdate, 250)),
                  t$.hasAnimatedSinceResize &&
                    ((t$.hasAnimatedSinceResize = !1),
                    this.nodes.forEach(finishAnimation));
              });
            }
            X && this.root.registerSharedNode(X, this),
              !1 !== this.options.animate &&
                et &&
                (X || ee) &&
                this.addEventListener(
                  "didUpdate",
                  ({
                    delta: s,
                    hasLayoutChanged: x,
                    hasRelativeTargetChanged: W,
                    layout: X,
                  }) => {
                    if (this.isTreeAnimationBlocked()) {
                      (this.target = void 0), (this.relativeTarget = void 0);
                      return;
                    }
                    let ee =
                        this.options.transition ||
                        et.getDefaultTransition() ||
                        t3,
                      {
                        onLayoutAnimationStart: er,
                        onLayoutAnimationComplete: ei,
                      } = et.getProps(),
                      eo =
                        !this.targetLayout ||
                        !boxEqualsRounded(this.targetLayout, X) ||
                        W,
                      ea = !x && W;
                    if (
                      this.options.layoutRoot ||
                      (this.resumeFrom && this.resumeFrom.instance) ||
                      ea ||
                      (x && (eo || !this.currentAnimation))
                    ) {
                      this.resumeFrom &&
                        ((this.resumingFrom = this.resumeFrom),
                        (this.resumingFrom.resumingFrom = void 0)),
                        this.setAnimationOrigin(s, ea);
                      let x = {
                        ...getValueTransition(ee, "layout"),
                        onPlay: er,
                        onComplete: ei,
                      };
                      (et.shouldReduceMotion || this.options.layoutRoot) &&
                        ((x.delay = 0), (x.type = !1)),
                        this.startAnimation(x);
                    } else
                      x || finishAnimation(this),
                        this.isLead() &&
                          this.options.onExitComplete &&
                          this.options.onExitComplete();
                    this.targetLayout = X;
                  }
                );
          }
          unmount() {
            this.options.layoutId && this.willUpdate(),
              this.root.nodes.remove(this);
            let s = this.getStack();
            s && s.remove(this),
              this.parent && this.parent.children.delete(this),
              (this.instance = void 0),
              eE(this.updateProjection);
          }
          blockUpdate() {
            this.updateManuallyBlocked = !0;
          }
          unblockUpdate() {
            this.updateManuallyBlocked = !1;
          }
          isUpdateBlocked() {
            return this.updateManuallyBlocked || this.updateBlockedByResize;
          }
          isTreeAnimationBlocked() {
            return (
              this.isAnimationBlocked ||
              (this.parent && this.parent.isTreeAnimationBlocked()) ||
              !1
            );
          }
          startUpdate() {
            !this.isUpdateBlocked() &&
              ((this.isUpdating = !0),
              this.nodes && this.nodes.forEach(resetSkewAndRotation),
              this.animationId++);
          }
          getTransformTemplate() {
            let { visualElement: s } = this.options;
            return s && s.getProps().transformTemplate;
          }
          willUpdate(s = !0) {
            if (
              ((this.root.hasTreeAnimated = !0), this.root.isUpdateBlocked())
            ) {
              this.options.onExitComplete && this.options.onExitComplete();
              return;
            }
            if (
              (window.MotionCancelOptimisedAnimation &&
                !this.hasCheckedOptimisedAppear &&
                (function cancelTreeOptimisedTransformAnimations(s) {
                  if (((s.hasCheckedOptimisedAppear = !0), s.root === s))
                    return;
                  let { visualElement: x } = s.options;
                  if (!x) return;
                  let W = x.props[tR];
                  if (window.MotionHasOptimisedAnimation(W, "transform")) {
                    let { layout: x, layoutId: X } = s.options;
                    window.MotionCancelOptimisedAnimation(
                      W,
                      "transform",
                      ex,
                      !(x || X)
                    );
                  }
                  let { parent: X } = s;
                  X &&
                    !X.hasCheckedOptimisedAppear &&
                    cancelTreeOptimisedTransformAnimations(X);
                })(this),
              this.root.isUpdating || this.root.startUpdate(),
              this.isLayoutDirty)
            )
              return;
            this.isLayoutDirty = !0;
            for (let s = 0; s < this.path.length; s++) {
              let x = this.path[s];
              (x.shouldResetTransform = !0),
                x.updateScroll("snapshot"),
                x.options.layoutRoot && x.willUpdate(!1);
            }
            let { layoutId: x, layout: W } = this.options;
            if (void 0 === x && !W) return;
            let X = this.getTransformTemplate();
            (this.prevTransformTemplateValue = X
              ? X(this.latestValues, "")
              : void 0),
              this.updateSnapshot(),
              s && this.notifyListeners("willUpdate");
          }
          update() {
            this.updateScheduled = !1;
            let s = this.isUpdateBlocked();
            if (s) {
              this.unblockUpdate(),
                this.clearAllSnapshots(),
                this.nodes.forEach(clearMeasurements);
              return;
            }
            this.isUpdating || this.nodes.forEach(clearIsLayoutDirty),
              (this.isUpdating = !1),
              this.nodes.forEach(resetTransformStyle),
              this.nodes.forEach(updateLayout),
              this.nodes.forEach(notifyLayoutUpdate),
              this.clearAllSnapshots();
            let x = tp.now();
            (eA.delta = clamp(0, 1e3 / 60, x - eA.timestamp)),
              (eA.timestamp = x),
              (eA.isProcessing = !0),
              eS.update.process(eA),
              eS.preRender.process(eA),
              eS.render.process(eA),
              (eA.isProcessing = !1);
          }
          didUpdate() {
            this.updateScheduled ||
              ((this.updateScheduled = !0), tH.read(this.scheduleUpdate));
          }
          clearAllSnapshots() {
            this.nodes.forEach(clearSnapshot),
              this.sharedNodes.forEach(removeLeadSnapshots);
          }
          scheduleUpdateProjection() {
            this.projectionUpdateScheduled ||
              ((this.projectionUpdateScheduled = !0),
              ex.preRender(this.updateProjection, !1, !0));
          }
          scheduleCheckAfterUnmount() {
            ex.postRender(() => {
              this.isLayoutDirty
                ? this.root.didUpdate()
                : this.root.checkUpdateFailed();
            });
          }
          updateSnapshot() {
            !this.snapshot && this.instance && (this.snapshot = this.measure());
          }
          updateLayout() {
            if (
              !this.instance ||
              (this.updateScroll(),
              !(this.options.alwaysMeasureLayout && this.isLead()) &&
                !this.isLayoutDirty)
            )
              return;
            if (this.resumeFrom && !this.resumeFrom.instance)
              for (let s = 0; s < this.path.length; s++) {
                let x = this.path[s];
                x.updateScroll();
              }
            let s = this.layout;
            (this.layout = this.measure(!1)),
              (this.layoutCorrected = createBox()),
              (this.isLayoutDirty = !1),
              (this.projectionDelta = void 0),
              this.notifyListeners("measure", this.layout.layoutBox);
            let { visualElement: x } = this.options;
            x &&
              x.notify(
                "LayoutMeasure",
                this.layout.layoutBox,
                s ? s.layoutBox : void 0
              );
          }
          updateScroll(s = "measure") {
            let x = !!(this.options.layoutScroll && this.instance);
            if (
              (this.scroll &&
                this.scroll.animationId === this.root.animationId &&
                this.scroll.phase === s &&
                (x = !1),
              x)
            ) {
              let x = X(this.instance);
              this.scroll = {
                animationId: this.root.animationId,
                phase: s,
                isRoot: x,
                offset: W(this.instance),
                wasRoot: this.scroll ? this.scroll.isRoot : x,
              };
            }
          }
          resetTransform() {
            if (!ee) return;
            let s =
                this.isLayoutDirty ||
                this.shouldResetTransform ||
                this.options.alwaysMeasureLayout,
              x = this.projectionDelta && !isDeltaZero(this.projectionDelta),
              W = this.getTransformTemplate(),
              X = W ? W(this.latestValues, "") : void 0,
              et = X !== this.prevTransformTemplateValue;
            s &&
              (x || hasTransform(this.latestValues) || et) &&
              (ee(this.instance, X),
              (this.shouldResetTransform = !1),
              this.scheduleRender());
          }
          measure(s = !0) {
            var x;
            let W = this.measurePageBox(),
              X = this.removeElementScroll(W);
            return (
              s && (X = this.removeTransform(X)),
              roundAxis((x = X).x),
              roundAxis(x.y),
              {
                animationId: this.root.animationId,
                measuredBox: W,
                layoutBox: X,
                latestValues: {},
                source: this.id,
              }
            );
          }
          measurePageBox() {
            var s;
            let { visualElement: x } = this.options;
            if (!x) return createBox();
            let W = x.measureViewportBox(),
              X =
                (null === (s = this.scroll) || void 0 === s
                  ? void 0
                  : s.wasRoot) || this.path.some(checkNodeWasScrollRoot);
            if (!X) {
              let { scroll: s } = this.root;
              s &&
                (translateAxis(W.x, s.offset.x),
                translateAxis(W.y, s.offset.y));
            }
            return W;
          }
          removeElementScroll(s) {
            var x;
            let W = createBox();
            if (
              (copyBoxInto(W, s),
              null === (x = this.scroll) || void 0 === x ? void 0 : x.wasRoot)
            )
              return W;
            for (let x = 0; x < this.path.length; x++) {
              let X = this.path[x],
                { scroll: ee, options: et } = X;
              X !== this.root &&
                ee &&
                et.layoutScroll &&
                (ee.wasRoot && copyBoxInto(W, s),
                translateAxis(W.x, ee.offset.x),
                translateAxis(W.y, ee.offset.y));
            }
            return W;
          }
          applyTransform(s, x = !1) {
            let W = createBox();
            copyBoxInto(W, s);
            for (let s = 0; s < this.path.length; s++) {
              let X = this.path[s];
              !x &&
                X.options.layoutScroll &&
                X.scroll &&
                X !== X.root &&
                transformBox(W, {
                  x: -X.scroll.offset.x,
                  y: -X.scroll.offset.y,
                }),
                hasTransform(X.latestValues) && transformBox(W, X.latestValues);
            }
            return (
              hasTransform(this.latestValues) &&
                transformBox(W, this.latestValues),
              W
            );
          }
          removeTransform(s) {
            let x = createBox();
            copyBoxInto(x, s);
            for (let s = 0; s < this.path.length; s++) {
              let W = this.path[s];
              if (!W.instance || !hasTransform(W.latestValues)) continue;
              hasScale(W.latestValues) && W.updateSnapshot();
              let X = createBox(),
                ee = W.measurePageBox();
              copyBoxInto(X, ee),
                removeBoxTransforms(
                  x,
                  W.latestValues,
                  W.snapshot ? W.snapshot.layoutBox : void 0,
                  X
                );
            }
            return (
              hasTransform(this.latestValues) &&
                removeBoxTransforms(x, this.latestValues),
              x
            );
          }
          setTargetDelta(s) {
            (this.targetDelta = s),
              this.root.scheduleUpdateProjection(),
              (this.isProjectionDirty = !0);
          }
          setOptions(s) {
            this.options = {
              ...this.options,
              ...s,
              crossfade: void 0 === s.crossfade || s.crossfade,
            };
          }
          clearMeasurements() {
            (this.scroll = void 0),
              (this.layout = void 0),
              (this.snapshot = void 0),
              (this.prevTransformTemplateValue = void 0),
              (this.targetDelta = void 0),
              (this.target = void 0),
              (this.isLayoutDirty = !1);
          }
          forceRelativeParentToResolveTarget() {
            this.relativeParent &&
              this.relativeParent.resolvedRelativeTargetAt !== eA.timestamp &&
              this.relativeParent.resolveTargetDelta(!0);
          }
          resolveTargetDelta(s = !1) {
            var x, W, X, ee;
            let et = this.getLead();
            this.isProjectionDirty ||
              (this.isProjectionDirty = et.isProjectionDirty),
              this.isTransformDirty ||
                (this.isTransformDirty = et.isTransformDirty),
              this.isSharedProjectionDirty ||
                (this.isSharedProjectionDirty = et.isSharedProjectionDirty);
            let er = !!this.resumingFrom || this !== et,
              ei = !(
                s ||
                (er && this.isSharedProjectionDirty) ||
                this.isProjectionDirty ||
                (null === (x = this.parent) || void 0 === x
                  ? void 0
                  : x.isProjectionDirty) ||
                this.attemptToResolveRelativeTarget ||
                this.root.updateBlockedByResize
              );
            if (ei) return;
            let { layout: eo, layoutId: ea } = this.options;
            if (this.layout && (eo || ea)) {
              if (
                ((this.resolvedRelativeTargetAt = eA.timestamp),
                !this.targetDelta && !this.relativeTarget)
              ) {
                let s = this.getClosestProjectingParent();
                s && s.layout && 1 !== this.animationProgress
                  ? ((this.relativeParent = s),
                    this.forceRelativeParentToResolveTarget(),
                    (this.relativeTarget = createBox()),
                    (this.relativeTargetOrigin = createBox()),
                    calcRelativePosition(
                      this.relativeTargetOrigin,
                      this.layout.layoutBox,
                      s.layout.layoutBox
                    ),
                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin))
                  : (this.relativeParent = this.relativeTarget = void 0);
              }
              if (this.relativeTarget || this.targetDelta) {
                if (
                  ((this.target ||
                    ((this.target = createBox()),
                    (this.targetWithTransforms = createBox())),
                  this.relativeTarget &&
                    this.relativeTargetOrigin &&
                    this.relativeParent &&
                    this.relativeParent.target)
                    ? (this.forceRelativeParentToResolveTarget(),
                      (W = this.target),
                      (X = this.relativeTarget),
                      (ee = this.relativeParent.target),
                      calcRelativeAxis(W.x, X.x, ee.x),
                      calcRelativeAxis(W.y, X.y, ee.y))
                    : this.targetDelta
                    ? (this.resumingFrom
                        ? (this.target = this.applyTransform(
                            this.layout.layoutBox
                          ))
                        : copyBoxInto(this.target, this.layout.layoutBox),
                      applyBoxDelta(this.target, this.targetDelta))
                    : copyBoxInto(this.target, this.layout.layoutBox),
                  this.attemptToResolveRelativeTarget)
                ) {
                  this.attemptToResolveRelativeTarget = !1;
                  let s = this.getClosestProjectingParent();
                  s &&
                  !!s.resumingFrom == !!this.resumingFrom &&
                  !s.options.layoutScroll &&
                  s.target &&
                  1 !== this.animationProgress
                    ? ((this.relativeParent = s),
                      this.forceRelativeParentToResolveTarget(),
                      (this.relativeTarget = createBox()),
                      (this.relativeTargetOrigin = createBox()),
                      calcRelativePosition(
                        this.relativeTargetOrigin,
                        this.target,
                        s.target
                      ),
                      copyBoxInto(
                        this.relativeTarget,
                        this.relativeTargetOrigin
                      ))
                    : (this.relativeParent = this.relativeTarget = void 0);
                }
                tX && tJ.resolvedTargetDeltas++;
              }
            }
          }
          getClosestProjectingParent() {
            return !this.parent ||
              hasScale(this.parent.latestValues) ||
              has2DTranslate(this.parent.latestValues)
              ? void 0
              : this.parent.isProjecting()
              ? this.parent
              : this.parent.getClosestProjectingParent();
          }
          isProjecting() {
            return !!(
              (this.relativeTarget ||
                this.targetDelta ||
                this.options.layoutRoot) &&
              this.layout
            );
          }
          calcProjection() {
            var s;
            let x = this.getLead(),
              W = !!this.resumingFrom || this !== x,
              X = !0;
            if (
              ((this.isProjectionDirty ||
                (null === (s = this.parent) || void 0 === s
                  ? void 0
                  : s.isProjectionDirty)) &&
                (X = !1),
              W &&
                (this.isSharedProjectionDirty || this.isTransformDirty) &&
                (X = !1),
              this.resolvedRelativeTargetAt === eA.timestamp && (X = !1),
              X)
            )
              return;
            let { layout: ee, layoutId: et } = this.options;
            if (
              ((this.isTreeAnimating = !!(
                (this.parent && this.parent.isTreeAnimating) ||
                this.currentAnimation ||
                this.pendingAnimation
              )),
              this.isTreeAnimating ||
                (this.targetDelta = this.relativeTarget = void 0),
              !this.layout || !(ee || et))
            )
              return;
            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);
            let er = this.treeScale.x,
              ei = this.treeScale.y;
            !(function (s, x, W, X = !1) {
              let ee, et;
              let er = W.length;
              if (er) {
                x.x = x.y = 1;
                for (let ei = 0; ei < er; ei++) {
                  et = (ee = W[ei]).projectionDelta;
                  let { visualElement: er } = ee.options;
                  (!er ||
                    !er.props.style ||
                    "contents" !== er.props.style.display) &&
                    (X &&
                      ee.options.layoutScroll &&
                      ee.scroll &&
                      ee !== ee.root &&
                      transformBox(s, {
                        x: -ee.scroll.offset.x,
                        y: -ee.scroll.offset.y,
                      }),
                    et &&
                      ((x.x *= et.x.scale),
                      (x.y *= et.y.scale),
                      applyBoxDelta(s, et)),
                    X &&
                      hasTransform(ee.latestValues) &&
                      transformBox(s, ee.latestValues));
                }
                x.x < 1.0000000000001 && x.x > 0.999999999999 && (x.x = 1),
                  x.y < 1.0000000000001 && x.y > 0.999999999999 && (x.y = 1);
              }
            })(this.layoutCorrected, this.treeScale, this.path, W),
              x.layout &&
                !x.target &&
                (1 !== this.treeScale.x || 1 !== this.treeScale.y) &&
                ((x.target = x.layout.layoutBox),
                (x.targetWithTransforms = createBox()));
            let { target: eo } = x;
            if (!eo) {
              this.prevProjectionDelta &&
                (this.createProjectionDeltas(), this.scheduleRender());
              return;
            }
            this.projectionDelta && this.prevProjectionDelta
              ? (copyAxisDeltaInto(
                  this.prevProjectionDelta.x,
                  this.projectionDelta.x
                ),
                copyAxisDeltaInto(
                  this.prevProjectionDelta.y,
                  this.projectionDelta.y
                ))
              : this.createProjectionDeltas(),
              calcBoxDelta(
                this.projectionDelta,
                this.layoutCorrected,
                eo,
                this.latestValues
              ),
              (this.treeScale.x === er &&
                this.treeScale.y === ei &&
                axisDeltaEquals(
                  this.projectionDelta.x,
                  this.prevProjectionDelta.x
                ) &&
                axisDeltaEquals(
                  this.projectionDelta.y,
                  this.prevProjectionDelta.y
                )) ||
                ((this.hasProjected = !0),
                this.scheduleRender(),
                this.notifyListeners("projectionUpdate", eo)),
              tX && tJ.recalculatedProjection++;
          }
          hide() {
            this.isVisible = !1;
          }
          show() {
            this.isVisible = !0;
          }
          scheduleRender(s = !0) {
            var x;
            if (
              (null === (x = this.options.visualElement) ||
                void 0 === x ||
                x.scheduleRender(),
              s)
            ) {
              let s = this.getStack();
              s && s.scheduleRender();
            }
            this.resumingFrom &&
              !this.resumingFrom.instance &&
              (this.resumingFrom = void 0);
          }
          createProjectionDeltas() {
            (this.prevProjectionDelta = createDelta()),
              (this.projectionDelta = createDelta()),
              (this.projectionDeltaWithTransform = createDelta());
          }
          setAnimationOrigin(s, x = !1) {
            let W;
            let X = this.snapshot,
              ee = X ? X.latestValues : {},
              et = { ...this.latestValues },
              er = createDelta();
            (this.relativeParent && this.relativeParent.options.layoutRoot) ||
              (this.relativeTarget = this.relativeTargetOrigin = void 0),
              (this.attemptToResolveRelativeTarget = !x);
            let ei = createBox(),
              eo = X ? X.source : void 0,
              ea = this.layout ? this.layout.source : void 0,
              es = eo !== ea,
              el = this.getStack(),
              ec = !el || el.members.length <= 1,
              eu = !!(
                es &&
                !ec &&
                !0 === this.options.crossfade &&
                !this.path.some(hasOpacityCrossfade)
              );
            (this.animationProgress = 0),
              (this.mixTargetDelta = (x) => {
                let X = x / 1e3;
                if (
                  (mixAxisDelta(er.x, s.x, X),
                  mixAxisDelta(er.y, s.y, X),
                  this.setTargetDelta(er),
                  this.relativeTarget &&
                    this.relativeTargetOrigin &&
                    this.layout &&
                    this.relativeParent &&
                    this.relativeParent.layout)
                ) {
                  var eo, ea, el, ed;
                  calcRelativePosition(
                    ei,
                    this.layout.layoutBox,
                    this.relativeParent.layout.layoutBox
                  ),
                    (el = this.relativeTarget),
                    (ed = this.relativeTargetOrigin),
                    mixAxis(el.x, ed.x, ei.x, X),
                    mixAxis(el.y, ed.y, ei.y, X),
                    W &&
                      ((eo = this.relativeTarget),
                      (ea = W),
                      axisEquals(eo.x, ea.x) && axisEquals(eo.y, ea.y)) &&
                      (this.isProjectionDirty = !1),
                    W || (W = createBox()),
                    copyBoxInto(W, this.relativeTarget);
                }
                es &&
                  ((this.animationValues = et),
                  (function (s, x, W, X, ee, et) {
                    ee
                      ? ((s.opacity = mixNumber(
                          0,
                          void 0 !== W.opacity ? W.opacity : 1,
                          tZ(X)
                        )),
                        (s.opacityExit = mixNumber(
                          void 0 !== x.opacity ? x.opacity : 1,
                          0,
                          tG(X)
                        )))
                      : et &&
                        (s.opacity = mixNumber(
                          void 0 !== x.opacity ? x.opacity : 1,
                          void 0 !== W.opacity ? W.opacity : 1,
                          X
                        ));
                    for (let ee = 0; ee < tK; ee++) {
                      let et = `border${tW[ee]}Radius`,
                        er = getRadius(x, et),
                        ei = getRadius(W, et);
                      if (void 0 === er && void 0 === ei) continue;
                      er || (er = 0), ei || (ei = 0);
                      let eo = 0 === er || 0 === ei || isPx(er) === isPx(ei);
                      eo
                        ? ((s[et] = Math.max(
                            mixNumber(asNumber(er), asNumber(ei), X),
                            0
                          )),
                          (e$.test(ei) || e$.test(er)) && (s[et] += "%"))
                        : (s[et] = ei);
                    }
                    (x.rotate || W.rotate) &&
                      (s.rotate = mixNumber(x.rotate || 0, W.rotate || 0, X));
                  })(et, ee, this.latestValues, X, eu, ec)),
                  this.root.scheduleUpdateProjection(),
                  this.scheduleRender(),
                  (this.animationProgress = X);
              }),
              this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
          }
          startAnimation(s) {
            this.notifyListeners("animationStart"),
              this.currentAnimation && this.currentAnimation.stop(),
              this.resumingFrom &&
                this.resumingFrom.currentAnimation &&
                this.resumingFrom.currentAnimation.stop(),
              this.pendingAnimation &&
                (eE(this.pendingAnimation), (this.pendingAnimation = void 0)),
              (this.pendingAnimation = ex.update(() => {
                (t$.hasAnimatedSinceResize = !0),
                  (this.currentAnimation = (function (s, x, W) {
                    let X = isMotionValue(s) ? s : motionValue(s);
                    return (
                      X.start(animateMotionValue("", X, 1e3, W)), X.animation
                    );
                  })(0, 0, {
                    ...s,
                    onUpdate: (x) => {
                      this.mixTargetDelta(x), s.onUpdate && s.onUpdate(x);
                    },
                    onComplete: () => {
                      s.onComplete && s.onComplete(), this.completeAnimation();
                    },
                  })),
                  this.resumingFrom &&
                    (this.resumingFrom.currentAnimation =
                      this.currentAnimation),
                  (this.pendingAnimation = void 0);
              }));
          }
          completeAnimation() {
            this.resumingFrom &&
              ((this.resumingFrom.currentAnimation = void 0),
              (this.resumingFrom.preserveOpacity = void 0));
            let s = this.getStack();
            s && s.exitAnimationComplete(),
              (this.resumingFrom =
                this.currentAnimation =
                this.animationValues =
                  void 0),
              this.notifyListeners("animationComplete");
          }
          finishAnimation() {
            this.currentAnimation &&
              (this.mixTargetDelta && this.mixTargetDelta(1e3),
              this.currentAnimation.stop()),
              this.completeAnimation();
          }
          applyTransformsToTarget() {
            let s = this.getLead(),
              {
                targetWithTransforms: x,
                target: W,
                layout: X,
                latestValues: ee,
              } = s;
            if (x && W && X) {
              if (
                this !== s &&
                this.layout &&
                X &&
                shouldAnimatePositionOnly(
                  this.options.animationType,
                  this.layout.layoutBox,
                  X.layoutBox
                )
              ) {
                W = this.target || createBox();
                let x = calcLength(this.layout.layoutBox.x);
                (W.x.min = s.target.x.min), (W.x.max = W.x.min + x);
                let X = calcLength(this.layout.layoutBox.y);
                (W.y.min = s.target.y.min), (W.y.max = W.y.min + X);
              }
              copyBoxInto(x, W),
                transformBox(x, ee),
                calcBoxDelta(
                  this.projectionDeltaWithTransform,
                  this.layoutCorrected,
                  x,
                  ee
                );
            }
          }
          registerSharedNode(s, x) {
            this.sharedNodes.has(s) || this.sharedNodes.set(s, new NodeStack());
            let W = this.sharedNodes.get(s);
            W.add(x);
            let X = x.options.initialPromotionConfig;
            x.promote({
              transition: X ? X.transition : void 0,
              preserveFollowOpacity:
                X && X.shouldPreserveFollowOpacity
                  ? X.shouldPreserveFollowOpacity(x)
                  : void 0,
            });
          }
          isLead() {
            let s = this.getStack();
            return !s || s.lead === this;
          }
          getLead() {
            var s;
            let { layoutId: x } = this.options;
            return (
              (x &&
                (null === (s = this.getStack()) || void 0 === s
                  ? void 0
                  : s.lead)) ||
              this
            );
          }
          getPrevLead() {
            var s;
            let { layoutId: x } = this.options;
            return x
              ? null === (s = this.getStack()) || void 0 === s
                ? void 0
                : s.prevLead
              : void 0;
          }
          getStack() {
            let { layoutId: s } = this.options;
            if (s) return this.root.sharedNodes.get(s);
          }
          promote({
            needsReset: s,
            transition: x,
            preserveFollowOpacity: W,
          } = {}) {
            let X = this.getStack();
            X && X.promote(this, W),
              s && ((this.projectionDelta = void 0), (this.needsReset = !0)),
              x && this.setOptions({ transition: x });
          }
          relegate() {
            let s = this.getStack();
            return !!s && s.relegate(this);
          }
          resetSkewAndRotation() {
            let { visualElement: s } = this.options;
            if (!s) return;
            let x = !1,
              { latestValues: W } = s;
            if (
              ((W.z ||
                W.rotate ||
                W.rotateX ||
                W.rotateY ||
                W.rotateZ ||
                W.skewX ||
                W.skewY) &&
                (x = !0),
              !x)
            )
              return;
            let X = {};
            W.z && resetDistortingTransform("z", s, X, this.animationValues);
            for (let x = 0; x < t0.length; x++)
              resetDistortingTransform(
                `rotate${t0[x]}`,
                s,
                X,
                this.animationValues
              ),
                resetDistortingTransform(
                  `skew${t0[x]}`,
                  s,
                  X,
                  this.animationValues
                );
            for (let x in (s.render(), X))
              s.setStaticValue(x, X[x]),
                this.animationValues && (this.animationValues[x] = X[x]);
            s.scheduleRender();
          }
          getProjectionStyles(s) {
            var x, W;
            if (!this.instance || this.isSVG) return;
            if (!this.isVisible) return t1;
            let X = { visibility: "" },
              ee = this.getTransformTemplate();
            if (this.needsReset)
              return (
                (this.needsReset = !1),
                (X.opacity = ""),
                (X.pointerEvents =
                  resolveMotionValue(null == s ? void 0 : s.pointerEvents) ||
                  ""),
                (X.transform = ee ? ee(this.latestValues, "") : "none"),
                X
              );
            let et = this.getLead();
            if (!this.projectionDelta || !this.layout || !et.target) {
              let x = {};
              return (
                this.options.layoutId &&
                  ((x.opacity =
                    void 0 !== this.latestValues.opacity
                      ? this.latestValues.opacity
                      : 1),
                  (x.pointerEvents =
                    resolveMotionValue(null == s ? void 0 : s.pointerEvents) ||
                    "")),
                this.hasProjected &&
                  !hasTransform(this.latestValues) &&
                  ((x.transform = ee ? ee({}, "") : "none"),
                  (this.hasProjected = !1)),
                x
              );
            }
            let er = et.animationValues || et.latestValues;
            this.applyTransformsToTarget(),
              (X.transform = (function (s, x, W) {
                let X = "",
                  ee = s.x.translate / x.x,
                  et = s.y.translate / x.y,
                  er = (null == W ? void 0 : W.z) || 0;
                if (
                  ((ee || et || er) &&
                    (X = `translate3d(${ee}px, ${et}px, ${er}px) `),
                  (1 !== x.x || 1 !== x.y) &&
                    (X += `scale(${1 / x.x}, ${1 / x.y}) `),
                  W)
                ) {
                  let {
                    transformPerspective: s,
                    rotate: x,
                    rotateX: ee,
                    rotateY: et,
                    skewX: er,
                    skewY: ei,
                  } = W;
                  s && (X = `perspective(${s}px) ${X}`),
                    x && (X += `rotate(${x}deg) `),
                    ee && (X += `rotateX(${ee}deg) `),
                    et && (X += `rotateY(${et}deg) `),
                    er && (X += `skewX(${er}deg) `),
                    ei && (X += `skewY(${ei}deg) `);
                }
                let ei = s.x.scale * x.x,
                  eo = s.y.scale * x.y;
                return (
                  (1 !== ei || 1 !== eo) && (X += `scale(${ei}, ${eo})`),
                  X || "none"
                );
              })(this.projectionDeltaWithTransform, this.treeScale, er)),
              ee && (X.transform = ee(er, X.transform));
            let { x: ei, y: eo } = this.projectionDelta;
            for (let s in ((X.transformOrigin = `${100 * ei.origin}% ${
              100 * eo.origin
            }% 0`),
            et.animationValues
              ? (X.opacity =
                  et === this
                    ? null !==
                        (W =
                          null !== (x = er.opacity) && void 0 !== x
                            ? x
                            : this.latestValues.opacity) && void 0 !== W
                      ? W
                      : 1
                    : this.preserveOpacity
                    ? this.latestValues.opacity
                    : er.opacityExit)
              : (X.opacity =
                  et === this
                    ? void 0 !== er.opacity
                      ? er.opacity
                      : ""
                    : void 0 !== er.opacityExit
                    ? er.opacityExit
                    : 0),
            tz)) {
              if (void 0 === er[s]) continue;
              let { correct: x, applyTo: W } = tz[s],
                ee = "none" === X.transform ? er[s] : x(er[s], et);
              if (W) {
                let s = W.length;
                for (let x = 0; x < s; x++) X[W[x]] = ee;
              } else X[s] = ee;
            }
            return (
              this.options.layoutId &&
                (X.pointerEvents =
                  et === this
                    ? resolveMotionValue(
                        null == s ? void 0 : s.pointerEvents
                      ) || ""
                    : "none"),
              X
            );
          }
          clearSnapshot() {
            this.resumeFrom = this.snapshot = void 0;
          }
          resetTree() {
            this.root.nodes.forEach((s) => {
              var x;
              return null === (x = s.currentAnimation) || void 0 === x
                ? void 0
                : x.stop();
            }),
              this.root.nodes.forEach(clearMeasurements),
              this.root.sharedNodes.clear();
          }
        };
      }
      function updateLayout(s) {
        s.updateLayout();
      }
      function notifyLayoutUpdate(s) {
        var x;
        let W =
          (null === (x = s.resumeFrom) || void 0 === x ? void 0 : x.snapshot) ||
          s.snapshot;
        if (s.isLead() && s.layout && W && s.hasListeners("didUpdate")) {
          let { layoutBox: x, measuredBox: X } = s.layout,
            { animationType: ee } = s.options,
            et = W.source !== s.layout.source;
          "size" === ee
            ? eachAxis((s) => {
                let X = et ? W.measuredBox[s] : W.layoutBox[s],
                  ee = calcLength(X);
                (X.min = x[s].min), (X.max = X.min + ee);
              })
            : shouldAnimatePositionOnly(ee, W.layoutBox, x) &&
              eachAxis((X) => {
                let ee = et ? W.measuredBox[X] : W.layoutBox[X],
                  er = calcLength(x[X]);
                (ee.max = ee.min + er),
                  s.relativeTarget &&
                    !s.currentAnimation &&
                    ((s.isProjectionDirty = !0),
                    (s.relativeTarget[X].max = s.relativeTarget[X].min + er));
              });
          let er = createDelta();
          calcBoxDelta(er, x, W.layoutBox);
          let ei = createDelta();
          et
            ? calcBoxDelta(ei, s.applyTransform(X, !0), W.measuredBox)
            : calcBoxDelta(ei, x, W.layoutBox);
          let eo = !isDeltaZero(er),
            ea = !1;
          if (!s.resumeFrom) {
            let X = s.getClosestProjectingParent();
            if (X && !X.resumeFrom) {
              let { snapshot: ee, layout: et } = X;
              if (ee && et) {
                let er = createBox();
                calcRelativePosition(er, W.layoutBox, ee.layoutBox);
                let ei = createBox();
                calcRelativePosition(ei, x, et.layoutBox),
                  boxEqualsRounded(er, ei) || (ea = !0),
                  X.options.layoutRoot &&
                    ((s.relativeTarget = ei),
                    (s.relativeTargetOrigin = er),
                    (s.relativeParent = X));
              }
            }
          }
          s.notifyListeners("didUpdate", {
            layout: x,
            snapshot: W,
            delta: ei,
            layoutDelta: er,
            hasLayoutChanged: eo,
            hasRelativeTargetChanged: ea,
          });
        } else if (s.isLead()) {
          let { onExitComplete: x } = s.options;
          x && x();
        }
        s.options.transition = void 0;
      }
      function propagateDirtyNodes(s) {
        tX && tJ.totalNodes++,
          s.parent &&
            (s.isProjecting() ||
              (s.isProjectionDirty = s.parent.isProjectionDirty),
            s.isSharedProjectionDirty ||
              (s.isSharedProjectionDirty = !!(
                s.isProjectionDirty ||
                s.parent.isProjectionDirty ||
                s.parent.isSharedProjectionDirty
              )),
            s.isTransformDirty ||
              (s.isTransformDirty = s.parent.isTransformDirty));
      }
      function cleanDirtyNodes(s) {
        s.isProjectionDirty =
          s.isSharedProjectionDirty =
          s.isTransformDirty =
            !1;
      }
      function clearSnapshot(s) {
        s.clearSnapshot();
      }
      function clearMeasurements(s) {
        s.clearMeasurements();
      }
      function clearIsLayoutDirty(s) {
        s.isLayoutDirty = !1;
      }
      function resetTransformStyle(s) {
        let { visualElement: x } = s.options;
        x &&
          x.getProps().onBeforeLayoutMeasure &&
          x.notify("BeforeLayoutMeasure"),
          s.resetTransform();
      }
      function finishAnimation(s) {
        s.finishAnimation(),
          (s.targetDelta = s.relativeTarget = s.target = void 0),
          (s.isProjectionDirty = !0);
      }
      function resolveTargetDelta(s) {
        s.resolveTargetDelta();
      }
      function calcProjection(s) {
        s.calcProjection();
      }
      function resetSkewAndRotation(s) {
        s.resetSkewAndRotation();
      }
      function removeLeadSnapshots(s) {
        s.removeLeadSnapshot();
      }
      function mixAxisDelta(s, x, W) {
        (s.translate = mixNumber(x.translate, 0, W)),
          (s.scale = mixNumber(x.scale, 1, W)),
          (s.origin = x.origin),
          (s.originPoint = x.originPoint);
      }
      function mixAxis(s, x, W, X) {
        (s.min = mixNumber(x.min, W.min, X)),
          (s.max = mixNumber(x.max, W.max, X));
      }
      function hasOpacityCrossfade(s) {
        return s.animationValues && void 0 !== s.animationValues.opacityExit;
      }
      let t3 = { duration: 0.45, ease: [0.4, 0, 0.1, 1] },
        userAgentContains = (s) =>
          "undefined" != typeof navigator &&
          navigator.userAgent &&
          navigator.userAgent.toLowerCase().includes(s),
        t5 =
          userAgentContains("applewebkit/") && !userAgentContains("chrome/")
            ? Math.round
            : noop;
      function roundAxis(s) {
        (s.min = t5(s.min)), (s.max = t5(s.max));
      }
      function shouldAnimatePositionOnly(s, x, W) {
        return (
          "position" === s ||
          ("preserve-aspect" === s &&
            !(0.2 >= Math.abs(aspectRatio(x) - aspectRatio(W))))
        );
      }
      function checkNodeWasScrollRoot(s) {
        var x;
        return (
          s !== s.root &&
          (null === (x = s.scroll) || void 0 === x ? void 0 : x.wasRoot)
        );
      }
      let t6 = createProjectionNode({
          attachResizeListener: (s, x) => addDomEvent(s, "resize", x),
          measureScroll: () => ({
            x: document.documentElement.scrollLeft || document.body.scrollLeft,
            y: document.documentElement.scrollTop || document.body.scrollTop,
          }),
          checkIsScrollRoot: () => !0,
        }),
        t4 = { current: void 0 },
        t8 = createProjectionNode({
          measureScroll: (s) => ({ x: s.scrollLeft, y: s.scrollTop }),
          defaultParent: () => {
            if (!t4.current) {
              let s = new t6({});
              s.mount(window),
                s.setOptions({ layoutScroll: !0 }),
                (t4.current = s);
            }
            return t4.current;
          },
          resetTransform: (s, x) => {
            s.style.transform = void 0 !== x ? x : "none";
          },
          checkIsScrollRoot: (s) =>
            "fixed" === window.getComputedStyle(s).position,
        });
      function addHoverEvent(s, x) {
        let W = x ? "pointerenter" : "pointerleave",
          X = x ? "onHoverStart" : "onHoverEnd";
        return addPointerEvent(
          s.current,
          W,
          (W, ee) => {
            if ("touch" === W.pointerType || isDragActive()) return;
            let et = s.getProps();
            s.animationState &&
              et.whileHover &&
              s.animationState.setActive("whileHover", x);
            let er = et[X];
            er && ex.postRender(() => er(W, ee));
          },
          { passive: !s.getProps()[X] }
        );
      }
      let isNodeOrChild = (s, x) =>
        !!x && (s === x || isNodeOrChild(s, x.parentElement));
      function fireSyntheticPointerEvent(s, x) {
        if (!x) return;
        let W = new PointerEvent("pointer" + s);
        x(W, extractEventInfo(W));
      }
      let t9 = new WeakMap(),
        t7 = new WeakMap(),
        fireObserverCallback = (s) => {
          let x = t9.get(s.target);
          x && x(s);
        },
        fireAllObserverCallbacks = (s) => {
          s.forEach(fireObserverCallback);
        },
        re = { some: 0, all: 1 },
        rt = (0, eo.createContext)({}),
        rn = (0, eo.createContext)({ strict: !1 });
      function isControllingVariants(s) {
        return (
          isAnimationControls(s.animate) || ef.some((x) => isVariantLabel(s[x]))
        );
      }
      function isVariantNode(s) {
        return !!(isControllingVariants(s) || s.variants);
      }
      function variantLabelsAsDependency(s) {
        return Array.isArray(s) ? s.join(" ") : s;
      }
      let ro = {
          animation: [
            "animate",
            "variants",
            "whileHover",
            "whileTap",
            "exit",
            "whileInView",
            "whileFocus",
            "whileDrag",
          ],
          exit: ["exit"],
          drag: ["drag", "dragControls"],
          focus: ["whileFocus"],
          hover: ["whileHover", "onHoverStart", "onHoverEnd"],
          tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
          pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
          inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
          layout: ["layout", "layoutId"],
        },
        ra = {};
      for (let s in ro) ra[s] = { isEnabled: (x) => ro[s].some((s) => !!x[s]) };
      let rs = Symbol.for("motionComponentSymbol"),
        rl = [
          "animate",
          "circle",
          "defs",
          "desc",
          "ellipse",
          "g",
          "image",
          "line",
          "filter",
          "marker",
          "mask",
          "metadata",
          "path",
          "pattern",
          "polygon",
          "polyline",
          "rect",
          "stop",
          "switch",
          "symbol",
          "svg",
          "text",
          "tspan",
          "use",
          "view",
        ];
      function isSVGComponent(s) {
        if ("string" != typeof s || s.includes("-"));
        else if (rl.indexOf(s) > -1 || /[A-Z]/u.test(s)) return !0;
        return !1;
      }
      function renderHTML(s, { style: x, vars: W }, X, ee) {
        for (let et in (Object.assign(
          s.style,
          x,
          ee && ee.getProjectionStyles(X)
        ),
        W))
          s.style.setProperty(et, W[et]);
      }
      let rc = new Set([
        "baseFrequency",
        "diffuseConstant",
        "kernelMatrix",
        "kernelUnitLength",
        "keySplines",
        "keyTimes",
        "limitingConeAngle",
        "markerHeight",
        "markerWidth",
        "numOctaves",
        "targetX",
        "targetY",
        "surfaceScale",
        "specularConstant",
        "specularExponent",
        "stdDeviation",
        "tableValues",
        "viewBox",
        "gradientTransform",
        "pathLength",
        "startOffset",
        "textLength",
        "lengthAdjust",
      ]);
      function renderSVG(s, x, W, X) {
        for (let W in (renderHTML(s, x, void 0, X), x.attrs))
          s.setAttribute(rc.has(W) ? W : camelToDash(W), x.attrs[W]);
      }
      function isForcedMotionValue(s, { layout: x, layoutId: W }) {
        return (
          em.has(s) ||
          s.startsWith("origin") ||
          ((x || void 0 !== W) && (!!tz[s] || "opacity" === s))
        );
      }
      function scrapeMotionValuesFromProps(s, x, W) {
        var X;
        let { style: ee } = s,
          et = {};
        for (let er in ee)
          (isMotionValue(ee[er]) ||
            (x.style && isMotionValue(x.style[er])) ||
            isForcedMotionValue(er, s) ||
            (null === (X = null == W ? void 0 : W.getValue(er)) || void 0 === X
              ? void 0
              : X.liveStyle) !== void 0) &&
            (et[er] = ee[er]);
        return et;
      }
      function scrape_motion_values_scrapeMotionValuesFromProps(s, x, W) {
        let X = scrapeMotionValuesFromProps(s, x, W);
        for (let W in s)
          if (isMotionValue(s[W]) || isMotionValue(x[W])) {
            let x =
              -1 !== eg.indexOf(W)
                ? "attr" + W.charAt(0).toUpperCase() + W.substring(1)
                : W;
            X[x] = s[W];
          }
        return X;
      }
      let makeUseVisualState = (s) => (x, W) => {
          let X = (0, eo.useContext)(rt),
            ee = (0, eo.useContext)(el),
            make = () =>
              (function (
                {
                  scrapeMotionValuesFromProps: s,
                  createRenderState: x,
                  onMount: W,
                },
                X,
                ee,
                et
              ) {
                let er = {
                  latestValues: (function (s, x, W, X) {
                    let ee = {},
                      et = X(s, {});
                    for (let s in et) ee[s] = resolveMotionValue(et[s]);
                    let { initial: er, animate: ei } = s,
                      eo = isControllingVariants(s),
                      ea = isVariantNode(s);
                    x &&
                      ea &&
                      !eo &&
                      !1 !== s.inherit &&
                      (void 0 === er && (er = x.initial),
                      void 0 === ei && (ei = x.animate));
                    let es = !!W && !1 === W.initial;
                    es = es || !1 === er;
                    let el = es ? ei : er;
                    if (
                      el &&
                      "boolean" != typeof el &&
                      !isAnimationControls(el)
                    ) {
                      let x = Array.isArray(el) ? el : [el];
                      for (let W = 0; W < x.length; W++) {
                        let X = resolveVariantFromProps(s, x[W]);
                        if (X) {
                          let { transitionEnd: s, transition: x, ...W } = X;
                          for (let s in W) {
                            let x = W[s];
                            if (Array.isArray(x)) {
                              let s = es ? x.length - 1 : 0;
                              x = x[s];
                            }
                            null !== x && (ee[s] = x);
                          }
                          for (let x in s) ee[x] = s[x];
                        }
                      }
                    }
                    return ee;
                  })(X, ee, et, s),
                  renderState: x(),
                };
                return W && (er.mount = (s) => W(X, s, er)), er;
              })(s, x, X, ee);
          return W ? make() : useConstant(make);
        },
        createHtmlRenderState = () => ({
          style: {},
          transform: {},
          transformOrigin: {},
          vars: {},
        }),
        createSvgRenderState = () => ({
          ...createHtmlRenderState(),
          attrs: {},
        }),
        getValueAsType = (s, x) =>
          x && "number" == typeof s ? x.transform(s) : s,
        ru = {
          x: "translateX",
          y: "translateY",
          z: "translateZ",
          transformPerspective: "perspective",
        },
        rd = eg.length;
      function buildHTMLStyles(s, x, W) {
        let { style: X, vars: ee, transformOrigin: et } = s,
          er = !1,
          ei = !1;
        for (let s in x) {
          let W = x[s];
          if (em.has(s)) {
            er = !0;
            continue;
          }
          if (eN(s)) {
            ee[s] = W;
            continue;
          }
          {
            let x = getValueAsType(W, tu[s]);
            s.startsWith("origin") ? ((ei = !0), (et[s] = x)) : (X[s] = x);
          }
        }
        if (
          (!x.transform &&
            (er || W
              ? (X.transform = (function (s, x, W) {
                  let X = "",
                    ee = !0;
                  for (let et = 0; et < rd; et++) {
                    let er = eg[et],
                      ei = s[er];
                    if (void 0 === ei) continue;
                    let eo = !0;
                    if (
                      !(eo =
                        "number" == typeof ei
                          ? ei === (er.startsWith("scale") ? 1 : 0)
                          : 0 === parseFloat(ei)) ||
                      W
                    ) {
                      let s = getValueAsType(ei, tu[er]);
                      if (!eo) {
                        ee = !1;
                        let x = ru[er] || er;
                        X += `${x}(${s}) `;
                      }
                      W && (x[er] = s);
                    }
                  }
                  return (
                    (X = X.trim()),
                    W ? (X = W(x, ee ? "" : X)) : ee && (X = "none"),
                    X
                  );
                })(x, s.transform, W))
              : X.transform && (X.transform = "none")),
          ei)
        ) {
          let { originX: s = "50%", originY: x = "50%", originZ: W = 0 } = et;
          X.transformOrigin = `${s} ${x} ${W}`;
        }
      }
      function transform_origin_calcOrigin(s, x, W) {
        return "string" == typeof s ? s : eF.transform(x + W * s);
      }
      let rh = { offset: "stroke-dashoffset", array: "stroke-dasharray" },
        rp = { offset: "strokeDashoffset", array: "strokeDasharray" };
      function buildSVGAttrs(
        s,
        {
          attrX: x,
          attrY: W,
          attrScale: X,
          originX: ee,
          originY: et,
          pathLength: er,
          pathSpacing: ei = 1,
          pathOffset: eo = 0,
          ...ea
        },
        es,
        el
      ) {
        if ((buildHTMLStyles(s, ea, el), es)) {
          s.style.viewBox && (s.attrs.viewBox = s.style.viewBox);
          return;
        }
        (s.attrs = s.style), (s.style = {});
        let { attrs: ec, style: eu, dimensions: ed } = s;
        ec.transform &&
          (ed && (eu.transform = ec.transform), delete ec.transform),
          ed &&
            (void 0 !== ee || void 0 !== et || eu.transform) &&
            (eu.transformOrigin = (function (s, x, W) {
              let X = transform_origin_calcOrigin(x, s.x, s.width),
                ee = transform_origin_calcOrigin(W, s.y, s.height);
              return `${X} ${ee}`;
            })(ed, void 0 !== ee ? ee : 0.5, void 0 !== et ? et : 0.5)),
          void 0 !== x && (ec.x = x),
          void 0 !== W && (ec.y = W),
          void 0 !== X && (ec.scale = X),
          void 0 !== er &&
            (function (s, x, W = 1, X = 0, ee = !0) {
              s.pathLength = 1;
              let et = ee ? rh : rp;
              s[et.offset] = eF.transform(-X);
              let er = eF.transform(x),
                ei = eF.transform(W);
              s[et.array] = `${er} ${ei}`;
            })(ec, er, ei, eo, !1);
      }
      let isSVGTag = (s) => "string" == typeof s && "svg" === s.toLowerCase(),
        rf = {
          useVisualState: makeUseVisualState({
            scrapeMotionValuesFromProps:
              scrape_motion_values_scrapeMotionValuesFromProps,
            createRenderState: createSvgRenderState,
            onMount: (s, x, { renderState: W, latestValues: X }) => {
              ex.read(() => {
                try {
                  W.dimensions =
                    "function" == typeof x.getBBox
                      ? x.getBBox()
                      : x.getBoundingClientRect();
                } catch (s) {
                  W.dimensions = { x: 0, y: 0, width: 0, height: 0 };
                }
              }),
                ex.render(() => {
                  buildSVGAttrs(W, X, isSVGTag(x.tagName), s.transformTemplate),
                    renderSVG(x, W);
                });
            },
          }),
        },
        rg = {
          useVisualState: makeUseVisualState({
            scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,
            createRenderState: createHtmlRenderState,
          }),
        };
      function copyRawValuesOnly(s, x, W) {
        for (let X in x)
          isMotionValue(x[X]) || isForcedMotionValue(X, W) || (s[X] = x[X]);
      }
      function useHTMLProps(s, x) {
        let W = {},
          X = (function (s, x) {
            let W = s.style || {},
              X = {};
            return (
              copyRawValuesOnly(X, W, s),
              Object.assign(
                X,
                (function ({ transformTemplate: s }, x) {
                  return (0, eo.useMemo)(() => {
                    let W = createHtmlRenderState();
                    return (
                      buildHTMLStyles(W, x, s),
                      Object.assign({}, W.vars, W.style)
                    );
                  }, [x]);
                })(s, x)
              ),
              X
            );
          })(s, x);
        return (
          s.drag &&
            !1 !== s.dragListener &&
            ((W.draggable = !1),
            (X.userSelect = X.WebkitUserSelect = X.WebkitTouchCallout = "none"),
            (X.touchAction =
              !0 === s.drag ? "none" : `pan-${"x" === s.drag ? "y" : "x"}`)),
          void 0 === s.tabIndex &&
            (s.onTap || s.onTapStart || s.whileTap) &&
            (W.tabIndex = 0),
          (W.style = X),
          W
        );
      }
      let rm = new Set([
        "animate",
        "exit",
        "variants",
        "initial",
        "style",
        "values",
        "variants",
        "transition",
        "transformTemplate",
        "custom",
        "inherit",
        "onBeforeLayoutMeasure",
        "onAnimationStart",
        "onAnimationComplete",
        "onUpdate",
        "onDragStart",
        "onDrag",
        "onDragEnd",
        "onMeasureDragConstraints",
        "onDirectionLock",
        "onDragTransitionEnd",
        "_dragX",
        "_dragY",
        "onHoverStart",
        "onHoverEnd",
        "onViewportEnter",
        "onViewportLeave",
        "globalTapTarget",
        "ignoreStrict",
        "viewport",
      ]);
      function isValidMotionProp(s) {
        return (
          s.startsWith("while") ||
          (s.startsWith("drag") && "draggable" !== s) ||
          s.startsWith("layout") ||
          s.startsWith("onTap") ||
          s.startsWith("onPan") ||
          s.startsWith("onLayout") ||
          rm.has(s)
        );
      }
      let shouldForward = (s) => !isValidMotionProp(s);
      try {
        (ee = require("@emotion/is-prop-valid").default) &&
          (shouldForward = (s) =>
            s.startsWith("on") ? !isValidMotionProp(s) : ee(s));
      } catch (s) {}
      function useSVGProps(s, x, W, X) {
        let ee = (0, eo.useMemo)(() => {
          let W = createSvgRenderState();
          return (
            buildSVGAttrs(W, x, isSVGTag(X), s.transformTemplate),
            { ...W.attrs, style: { ...W.style } }
          );
        }, [x]);
        if (s.style) {
          let x = {};
          copyRawValuesOnly(x, s.style, s), (ee.style = { ...x, ...ee.style });
        }
        return ee;
      }
      let rw = { current: null },
        rb = { current: !1 },
        rv = new WeakMap(),
        ry = [...eY, e4, tr],
        findValueType = (s) => ry.find(testValueType(s)),
        r_ = [
          "AnimationStart",
          "AnimationComplete",
          "Update",
          "BeforeLayoutMeasure",
          "LayoutMeasure",
          "LayoutAnimationStart",
          "LayoutAnimationComplete",
        ];
      let VisualElement = class VisualElement {
        scrapeMotionValuesFromProps(s, x, W) {
          return {};
        }
        constructor(
          {
            parent: s,
            props: x,
            presenceContext: W,
            reducedMotionConfig: X,
            blockInitialAnimation: ee,
            visualState: et,
          },
          er = {}
        ) {
          (this.current = null),
            (this.children = new Set()),
            (this.isVariantNode = !1),
            (this.isControllingVariants = !1),
            (this.shouldReduceMotion = null),
            (this.values = new Map()),
            (this.KeyframeResolver = KeyframeResolver),
            (this.features = {}),
            (this.valueSubscriptions = new Map()),
            (this.prevMotionValues = {}),
            (this.events = {}),
            (this.propEventSubscriptions = {}),
            (this.notifyUpdate = () =>
              this.notify("Update", this.latestValues)),
            (this.render = () => {
              this.current &&
                (this.triggerBuild(),
                this.renderInstance(
                  this.current,
                  this.renderState,
                  this.props.style,
                  this.projection
                ));
            }),
            (this.renderScheduledAt = 0),
            (this.scheduleRender = () => {
              let s = tp.now();
              this.renderScheduledAt < s &&
                ((this.renderScheduledAt = s), ex.render(this.render, !1, !0));
            });
          let { latestValues: ei, renderState: eo } = et;
          (this.latestValues = ei),
            (this.baseTarget = { ...ei }),
            (this.initialValues = x.initial ? { ...ei } : {}),
            (this.renderState = eo),
            (this.parent = s),
            (this.props = x),
            (this.presenceContext = W),
            (this.depth = s ? s.depth + 1 : 0),
            (this.reducedMotionConfig = X),
            (this.options = er),
            (this.blockInitialAnimation = !!ee),
            (this.isControllingVariants = isControllingVariants(x)),
            (this.isVariantNode = isVariantNode(x)),
            this.isVariantNode && (this.variantChildren = new Set()),
            (this.manuallyAnimateOnMount = !!(s && s.current));
          let { willChange: ea, ...es } = this.scrapeMotionValuesFromProps(
            x,
            {},
            this
          );
          for (let s in es) {
            let x = es[s];
            void 0 !== ei[s] && isMotionValue(x) && x.set(ei[s], !1);
          }
        }
        mount(s) {
          (this.current = s),
            rv.set(s, this),
            this.projection &&
              !this.projection.instance &&
              this.projection.mount(s),
            this.parent &&
              this.isVariantNode &&
              !this.isControllingVariants &&
              (this.removeFromVariantTree = this.parent.addVariantChild(this)),
            this.values.forEach((s, x) => this.bindToMotionValue(x, s)),
            rb.current ||
              (function () {
                if (((rb.current = !0), ed)) {
                  if (window.matchMedia) {
                    let s = window.matchMedia("(prefers-reduced-motion)"),
                      setReducedMotionPreferences = () =>
                        (rw.current = s.matches);
                    s.addListener(setReducedMotionPreferences),
                      setReducedMotionPreferences();
                  } else rw.current = !1;
                }
              })(),
            (this.shouldReduceMotion =
              "never" !== this.reducedMotionConfig &&
              ("always" === this.reducedMotionConfig || rw.current)),
            this.parent && this.parent.children.add(this),
            this.update(this.props, this.presenceContext);
        }
        unmount() {
          for (let s in (rv.delete(this.current),
          this.projection && this.projection.unmount(),
          eE(this.notifyUpdate),
          eE(this.render),
          this.valueSubscriptions.forEach((s) => s()),
          this.valueSubscriptions.clear(),
          this.removeFromVariantTree && this.removeFromVariantTree(),
          this.parent && this.parent.children.delete(this),
          this.events))
            this.events[s].clear();
          for (let s in this.features) {
            let x = this.features[s];
            x && (x.unmount(), (x.isMounted = !1));
          }
          this.current = null;
        }
        bindToMotionValue(s, x) {
          let W;
          this.valueSubscriptions.has(s) && this.valueSubscriptions.get(s)();
          let X = em.has(s),
            ee = x.on("change", (x) => {
              (this.latestValues[s] = x),
                this.props.onUpdate && ex.preRender(this.notifyUpdate),
                X && this.projection && (this.projection.isTransformDirty = !0);
            }),
            et = x.on("renderRequest", this.scheduleRender);
          window.MotionCheckAppearSync &&
            (W = window.MotionCheckAppearSync(this, s, x)),
            this.valueSubscriptions.set(s, () => {
              ee(), et(), W && W(), x.owner && x.stop();
            });
        }
        sortNodePosition(s) {
          return this.current &&
            this.sortInstanceNodePosition &&
            this.type === s.type
            ? this.sortInstanceNodePosition(this.current, s.current)
            : 0;
        }
        updateFeatures() {
          let s = "animation";
          for (s in ra) {
            let x = ra[s];
            if (!x) continue;
            let { isEnabled: W, Feature: X } = x;
            if (
              (!this.features[s] &&
                X &&
                W(this.props) &&
                (this.features[s] = new X(this)),
              this.features[s])
            ) {
              let x = this.features[s];
              x.isMounted ? x.update() : (x.mount(), (x.isMounted = !0));
            }
          }
        }
        triggerBuild() {
          this.build(this.renderState, this.latestValues, this.props);
        }
        measureViewportBox() {
          return this.current
            ? this.measureInstanceViewportBox(this.current, this.props)
            : createBox();
        }
        getStaticValue(s) {
          return this.latestValues[s];
        }
        setStaticValue(s, x) {
          this.latestValues[s] = x;
        }
        update(s, x) {
          (s.transformTemplate || this.props.transformTemplate) &&
            this.scheduleRender(),
            (this.prevProps = this.props),
            (this.props = s),
            (this.prevPresenceContext = this.presenceContext),
            (this.presenceContext = x);
          for (let x = 0; x < r_.length; x++) {
            let W = r_[x];
            this.propEventSubscriptions[W] &&
              (this.propEventSubscriptions[W](),
              delete this.propEventSubscriptions[W]);
            let X = "on" + W,
              ee = s[X];
            ee && (this.propEventSubscriptions[W] = this.on(W, ee));
          }
          (this.prevMotionValues = (function (s, x, W) {
            for (let X in x) {
              let ee = x[X],
                et = W[X];
              if (isMotionValue(ee)) s.addValue(X, ee);
              else if (isMotionValue(et))
                s.addValue(X, motionValue(ee, { owner: s }));
              else if (et !== ee) {
                if (s.hasValue(X)) {
                  let x = s.getValue(X);
                  !0 === x.liveStyle ? x.jump(ee) : x.hasAnimated || x.set(ee);
                } else {
                  let x = s.getStaticValue(X);
                  s.addValue(
                    X,
                    motionValue(void 0 !== x ? x : ee, { owner: s })
                  );
                }
              }
            }
            for (let X in W) void 0 === x[X] && s.removeValue(X);
            return x;
          })(
            this,
            this.scrapeMotionValuesFromProps(s, this.prevProps, this),
            this.prevMotionValues
          )),
            this.handleChildMotionValue && this.handleChildMotionValue();
        }
        getProps() {
          return this.props;
        }
        getVariant(s) {
          return this.props.variants ? this.props.variants[s] : void 0;
        }
        getDefaultTransition() {
          return this.props.transition;
        }
        getTransformPagePoint() {
          return this.props.transformPagePoint;
        }
        getClosestVariantNode() {
          return this.isVariantNode
            ? this
            : this.parent
            ? this.parent.getClosestVariantNode()
            : void 0;
        }
        addVariantChild(s) {
          let x = this.getClosestVariantNode();
          if (x)
            return (
              x.variantChildren && x.variantChildren.add(s),
              () => x.variantChildren.delete(s)
            );
        }
        addValue(s, x) {
          let W = this.values.get(s);
          x !== W &&
            (W && this.removeValue(s),
            this.bindToMotionValue(s, x),
            this.values.set(s, x),
            (this.latestValues[s] = x.get()));
        }
        removeValue(s) {
          this.values.delete(s);
          let x = this.valueSubscriptions.get(s);
          x && (x(), this.valueSubscriptions.delete(s)),
            delete this.latestValues[s],
            this.removeValueFromRenderState(s, this.renderState);
        }
        hasValue(s) {
          return this.values.has(s);
        }
        getValue(s, x) {
          if (this.props.values && this.props.values[s])
            return this.props.values[s];
          let W = this.values.get(s);
          return (
            void 0 === W &&
              void 0 !== x &&
              ((W = motionValue(null === x ? void 0 : x, { owner: this })),
              this.addValue(s, W)),
            W
          );
        }
        readValue(s, x) {
          var W;
          let X =
            void 0 === this.latestValues[s] && this.current
              ? null !== (W = this.getBaseTargetFromProps(this.props, s)) &&
                void 0 !== W
                ? W
                : this.readValueFromInstance(this.current, s, this.options)
              : this.latestValues[s];
          return (
            null != X &&
              ("string" == typeof X &&
              (isNumericalString(X) || isZeroValueString(X))
                ? (X = parseFloat(X))
                : !findValueType(X) &&
                  tr.test(x) &&
                  (X = animatable_none_getAnimatableNone(s, x)),
              this.setBaseTarget(s, isMotionValue(X) ? X.get() : X)),
            isMotionValue(X) ? X.get() : X
          );
        }
        setBaseTarget(s, x) {
          this.baseTarget[s] = x;
        }
        getBaseTarget(s) {
          var x;
          let W;
          let { initial: X } = this.props;
          if ("string" == typeof X || "object" == typeof X) {
            let ee = resolveVariantFromProps(
              this.props,
              X,
              null === (x = this.presenceContext) || void 0 === x
                ? void 0
                : x.custom
            );
            ee && (W = ee[s]);
          }
          if (X && void 0 !== W) return W;
          let ee = this.getBaseTargetFromProps(this.props, s);
          return void 0 === ee || isMotionValue(ee)
            ? void 0 !== this.initialValues[s] && void 0 === W
              ? void 0
              : this.baseTarget[s]
            : ee;
        }
        on(s, x) {
          return (
            this.events[s] || (this.events[s] = new SubscriptionManager()),
            this.events[s].add(x)
          );
        }
        notify(s, ...x) {
          this.events[s] && this.events[s].notify(...x);
        }
      };
      let DOMVisualElement = class DOMVisualElement extends VisualElement {
        constructor() {
          super(...arguments), (this.KeyframeResolver = DOMKeyframesResolver);
        }
        sortInstanceNodePosition(s, x) {
          return 2 & s.compareDocumentPosition(x) ? 1 : -1;
        }
        getBaseTargetFromProps(s, x) {
          return s.style ? s.style[x] : void 0;
        }
        removeValueFromRenderState(s, { vars: x, style: W }) {
          delete x[s], delete W[s];
        }
      };
      let HTMLVisualElement = class HTMLVisualElement extends DOMVisualElement {
        constructor() {
          super(...arguments),
            (this.type = "html"),
            (this.renderInstance = renderHTML);
        }
        readValueFromInstance(s, x) {
          if (em.has(x)) {
            let s = getDefaultValueType(x);
            return (s && s.default) || 0;
          }
          {
            let W = window.getComputedStyle(s),
              X = (eN(x) ? W.getPropertyValue(x) : W[x]) || 0;
            return "string" == typeof X ? X.trim() : X;
          }
        }
        measureInstanceViewportBox(s, { transformPagePoint: x }) {
          return measureViewportBox(s, x);
        }
        build(s, x, W) {
          buildHTMLStyles(s, x, W.transformTemplate);
        }
        scrapeMotionValuesFromProps(s, x, W) {
          return scrapeMotionValuesFromProps(s, x, W);
        }
        handleChildMotionValue() {
          this.childSubscription &&
            (this.childSubscription(), delete this.childSubscription);
          let { children: s } = this.props;
          isMotionValue(s) &&
            (this.childSubscription = s.on("change", (s) => {
              this.current && (this.current.textContent = `${s}`);
            }));
        }
      };
      let SVGVisualElement = class SVGVisualElement extends DOMVisualElement {
        constructor() {
          super(...arguments),
            (this.type = "svg"),
            (this.isSVGTag = !1),
            (this.measureInstanceViewportBox = createBox);
        }
        getBaseTargetFromProps(s, x) {
          return s[x];
        }
        readValueFromInstance(s, x) {
          if (em.has(x)) {
            let s = getDefaultValueType(x);
            return (s && s.default) || 0;
          }
          return (x = rc.has(x) ? x : camelToDash(x)), s.getAttribute(x);
        }
        scrapeMotionValuesFromProps(s, x, W) {
          return scrape_motion_values_scrapeMotionValuesFromProps(s, x, W);
        }
        build(s, x, W) {
          buildSVGAttrs(s, x, this.isSVGTag, W.transformTemplate);
        }
        renderInstance(s, x, W, X) {
          renderSVG(s, x, W, X);
        }
        mount(s) {
          (this.isSVGTag = isSVGTag(s.tagName)), super.mount(s);
        }
      };
      let rC =
          ((et = {
            animation: {
              Feature: class extends Feature {
                constructor(s) {
                  super(s),
                    s.animationState ||
                      (s.animationState = (function (s) {
                        let animate = (x) =>
                            Promise.all(
                              x.map(({ animation: x, options: W }) =>
                                (function (s, x, W = {}) {
                                  let X;
                                  if (
                                    (s.notify("AnimationStart", x),
                                    Array.isArray(x))
                                  ) {
                                    let ee = x.map((x) =>
                                      animateVariant(s, x, W)
                                    );
                                    X = Promise.all(ee);
                                  } else if ("string" == typeof x)
                                    X = animateVariant(s, x, W);
                                  else {
                                    let ee =
                                      "function" == typeof x
                                        ? resolveVariant(s, x, W.custom)
                                        : x;
                                    X = Promise.all(animateTarget(s, ee, W));
                                  }
                                  return X.then(() => {
                                    s.notify("AnimationComplete", x);
                                  });
                                })(s, x, W)
                              )
                            ),
                          x = createState(),
                          W = !0,
                          buildResolvedTypeValues = (x) => (W, X) => {
                            var ee;
                            let et = resolveVariant(
                              s,
                              X,
                              "exit" === x
                                ? null === (ee = s.presenceContext) ||
                                  void 0 === ee
                                  ? void 0
                                  : ee.custom
                                : void 0
                            );
                            if (et) {
                              let {
                                transition: s,
                                transitionEnd: x,
                                ...X
                              } = et;
                              W = { ...W, ...X, ...x };
                            }
                            return W;
                          };
                        function animateChanges(X) {
                          let { props: ee } = s,
                            et =
                              (function getVariantContext(s) {
                                if (!s) return;
                                if (!s.isControllingVariants) {
                                  let x =
                                    (s.parent && getVariantContext(s.parent)) ||
                                    {};
                                  return (
                                    void 0 !== s.props.initial &&
                                      (x.initial = s.props.initial),
                                    x
                                  );
                                }
                                let x = {};
                                for (let W = 0; W < tN; W++) {
                                  let X = ef[W],
                                    ee = s.props[X];
                                  (isVariantLabel(ee) || !1 === ee) &&
                                    (x[X] = ee);
                                }
                                return x;
                              })(s.parent) || {},
                            er = [],
                            ei = new Set(),
                            eo = {},
                            ea = 1 / 0;
                          for (let el = 0; el < tM; el++) {
                            var es;
                            let ec = tO[el],
                              eu = x[ec],
                              ed = void 0 !== ee[ec] ? ee[ec] : et[ec],
                              eh = isVariantLabel(ed),
                              ep = ec === X ? eu.isActive : null;
                            !1 === ep && (ea = el);
                            let ef = ed === et[ec] && ed !== ee[ec] && eh;
                            if (
                              (ef && W && s.manuallyAnimateOnMount && (ef = !1),
                              (eu.protectedKeys = { ...eo }),
                              (!eu.isActive && null === ep) ||
                                (!ed && !eu.prevProp) ||
                                isAnimationControls(ed) ||
                                "boolean" == typeof ed)
                            )
                              continue;
                            let eg =
                                ((es = eu.prevProp),
                                "string" == typeof ed
                                  ? ed !== es
                                  : !!Array.isArray(ed) &&
                                    !shallowCompare(ed, es)),
                              em =
                                eg ||
                                (ec === X && eu.isActive && !ef && eh) ||
                                (el > ea && eh),
                              ew = !1,
                              eb = Array.isArray(ed) ? ed : [ed],
                              ev = eb.reduce(buildResolvedTypeValues(ec), {});
                            !1 === ep && (ev = {});
                            let { prevResolvedValues: ey = {} } = eu,
                              e_ = { ...ey, ...ev },
                              markToAnimate = (x) => {
                                (em = !0),
                                  ei.has(x) && ((ew = !0), ei.delete(x)),
                                  (eu.needsAnimating[x] = !0);
                                let W = s.getValue(x);
                                W && (W.liveStyle = !1);
                              };
                            for (let s in e_) {
                              let x = ev[s],
                                W = ey[s];
                              if (!eo.hasOwnProperty(s))
                                (
                                  isKeyframesTarget(x) && isKeyframesTarget(W)
                                    ? shallowCompare(x, W)
                                    : x === W
                                )
                                  ? void 0 !== x && ei.has(s)
                                    ? markToAnimate(s)
                                    : (eu.protectedKeys[s] = !0)
                                  : null != x
                                  ? markToAnimate(s)
                                  : ei.add(s);
                            }
                            (eu.prevProp = ed),
                              (eu.prevResolvedValues = ev),
                              eu.isActive && (eo = { ...eo, ...ev }),
                              W && s.blockInitialAnimation && (em = !1);
                            let eC = ef && eg,
                              ex = !eC || ew;
                            em &&
                              ex &&
                              er.push(
                                ...eb.map((s) => ({
                                  animation: s,
                                  options: { type: ec },
                                }))
                              );
                          }
                          if (ei.size) {
                            let x = {};
                            ei.forEach((W) => {
                              let X = s.getBaseTarget(W),
                                ee = s.getValue(W);
                              ee && (ee.liveStyle = !0),
                                (x[W] = null != X ? X : null);
                            }),
                              er.push({ animation: x });
                          }
                          let el = !!er.length;
                          return (
                            W &&
                              (!1 === ee.initial ||
                                ee.initial === ee.animate) &&
                              !s.manuallyAnimateOnMount &&
                              (el = !1),
                            (W = !1),
                            el ? animate(er) : Promise.resolve()
                          );
                        }
                        return {
                          animateChanges,
                          setActive: function (W, X) {
                            var ee;
                            if (x[W].isActive === X) return Promise.resolve();
                            null === (ee = s.variantChildren) ||
                              void 0 === ee ||
                              ee.forEach((s) => {
                                var x;
                                return null === (x = s.animationState) ||
                                  void 0 === x
                                  ? void 0
                                  : x.setActive(W, X);
                              }),
                              (x[W].isActive = X);
                            let et = animateChanges(W);
                            for (let s in x) x[s].protectedKeys = {};
                            return et;
                          },
                          setAnimateFunction: function (x) {
                            animate = x(s);
                          },
                          getState: () => x,
                          reset: () => {
                            (x = createState()), (W = !0);
                          },
                        };
                      })(s));
                }
                updateAnimationControlsSubscription() {
                  let { animate: s } = this.node.getProps();
                  isAnimationControls(s) &&
                    (this.unmountControls = s.subscribe(this.node));
                }
                mount() {
                  this.updateAnimationControlsSubscription();
                }
                update() {
                  let { animate: s } = this.node.getProps(),
                    { animate: x } = this.node.prevProps || {};
                  s !== x && this.updateAnimationControlsSubscription();
                }
                unmount() {
                  var s;
                  this.node.animationState.reset(),
                    null === (s = this.unmountControls) ||
                      void 0 === s ||
                      s.call(this);
                }
              },
            },
            exit: {
              Feature: class extends Feature {
                constructor() {
                  super(...arguments), (this.id = tD++);
                }
                update() {
                  if (!this.node.presenceContext) return;
                  let { isPresent: s, onExitComplete: x } =
                      this.node.presenceContext,
                    { isPresent: W } = this.node.prevPresenceContext || {};
                  if (!this.node.animationState || s === W) return;
                  let X = this.node.animationState.setActive("exit", !s);
                  x && !s && X.then(() => x(this.id));
                }
                mount() {
                  let { register: s } = this.node.presenceContext || {};
                  s && (this.unmount = s(this.id));
                }
                unmount() {}
              },
            },
            inView: {
              Feature: class extends Feature {
                constructor() {
                  super(...arguments),
                    (this.hasEnteredView = !1),
                    (this.isInView = !1);
                }
                startObserver() {
                  this.unmount();
                  let { viewport: s = {} } = this.node.getProps(),
                    { root: x, margin: W, amount: X = "some", once: ee } = s,
                    et = {
                      root: x ? x.current : void 0,
                      rootMargin: W,
                      threshold: "number" == typeof X ? X : re[X],
                    };
                  return (function (s, x, W) {
                    let X = (function ({ root: s, ...x }) {
                      let W = s || document;
                      t7.has(W) || t7.set(W, {});
                      let X = t7.get(W),
                        ee = JSON.stringify(x);
                      return (
                        X[ee] ||
                          (X[ee] = new IntersectionObserver(
                            fireAllObserverCallbacks,
                            { root: s, ...x }
                          )),
                        X[ee]
                      );
                    })(x);
                    return (
                      t9.set(s, W),
                      X.observe(s),
                      () => {
                        t9.delete(s), X.unobserve(s);
                      }
                    );
                  })(this.node.current, et, (s) => {
                    let { isIntersecting: x } = s;
                    if (
                      this.isInView === x ||
                      ((this.isInView = x), ee && !x && this.hasEnteredView)
                    )
                      return;
                    x && (this.hasEnteredView = !0),
                      this.node.animationState &&
                        this.node.animationState.setActive("whileInView", x);
                    let { onViewportEnter: W, onViewportLeave: X } =
                        this.node.getProps(),
                      et = x ? W : X;
                    et && et(s);
                  });
                }
                mount() {
                  this.startObserver();
                }
                update() {
                  if ("undefined" == typeof IntersectionObserver) return;
                  let { props: s, prevProps: x } = this.node,
                    W = ["amount", "margin", "root"].some(
                      (function (
                        { viewport: s = {} },
                        { viewport: x = {} } = {}
                      ) {
                        return (W) => s[W] !== x[W];
                      })(s, x)
                    );
                  W && this.startObserver();
                }
                unmount() {}
              },
            },
            tap: {
              Feature: class extends Feature {
                constructor() {
                  super(...arguments),
                    (this.removeStartListeners = noop),
                    (this.removeEndListeners = noop),
                    (this.removeAccessibleListeners = noop),
                    (this.startPointerPress = (s, x) => {
                      if (this.isPressing) return;
                      this.removeEndListeners();
                      let W = this.node.getProps(),
                        X = addPointerEvent(
                          window,
                          "pointerup",
                          (s, x) => {
                            if (!this.checkPressEnd()) return;
                            let {
                                onTap: W,
                                onTapCancel: X,
                                globalTapTarget: ee,
                              } = this.node.getProps(),
                              et =
                                ee || isNodeOrChild(this.node.current, s.target)
                                  ? W
                                  : X;
                            et && ex.update(() => et(s, x));
                          },
                          { passive: !(W.onTap || W.onPointerUp) }
                        ),
                        ee = addPointerEvent(
                          window,
                          "pointercancel",
                          (s, x) => this.cancelPress(s, x),
                          { passive: !(W.onTapCancel || W.onPointerCancel) }
                        );
                      (this.removeEndListeners = pipe(X, ee)),
                        this.startPress(s, x);
                    }),
                    (this.startAccessiblePress = () => {
                      let s = addDomEvent(this.node.current, "keydown", (s) => {
                          "Enter" !== s.key ||
                            this.isPressing ||
                            (this.removeEndListeners(),
                            (this.removeEndListeners = addDomEvent(
                              this.node.current,
                              "keyup",
                              (s) => {
                                "Enter" === s.key &&
                                  this.checkPressEnd() &&
                                  fireSyntheticPointerEvent("up", (s, x) => {
                                    let { onTap: W } = this.node.getProps();
                                    W && ex.postRender(() => W(s, x));
                                  });
                              }
                            )),
                            fireSyntheticPointerEvent("down", (s, x) => {
                              this.startPress(s, x);
                            }));
                        }),
                        x = addDomEvent(this.node.current, "blur", () => {
                          this.isPressing &&
                            fireSyntheticPointerEvent("cancel", (s, x) =>
                              this.cancelPress(s, x)
                            );
                        });
                      this.removeAccessibleListeners = pipe(s, x);
                    });
                }
                startPress(s, x) {
                  this.isPressing = !0;
                  let { onTapStart: W, whileTap: X } = this.node.getProps();
                  X &&
                    this.node.animationState &&
                    this.node.animationState.setActive("whileTap", !0),
                    W && ex.postRender(() => W(s, x));
                }
                checkPressEnd() {
                  this.removeEndListeners(), (this.isPressing = !1);
                  let s = this.node.getProps();
                  return (
                    s.whileTap &&
                      this.node.animationState &&
                      this.node.animationState.setActive("whileTap", !1),
                    !isDragActive()
                  );
                }
                cancelPress(s, x) {
                  if (!this.checkPressEnd()) return;
                  let { onTapCancel: W } = this.node.getProps();
                  W && ex.postRender(() => W(s, x));
                }
                mount() {
                  let s = this.node.getProps(),
                    x = addPointerEvent(
                      s.globalTapTarget ? window : this.node.current,
                      "pointerdown",
                      this.startPointerPress,
                      { passive: !(s.onTapStart || s.onPointerStart) }
                    ),
                    W = addDomEvent(
                      this.node.current,
                      "focus",
                      this.startAccessiblePress
                    );
                  this.removeStartListeners = pipe(x, W);
                }
                unmount() {
                  this.removeStartListeners(),
                    this.removeEndListeners(),
                    this.removeAccessibleListeners();
                }
              },
            },
            focus: {
              Feature: class extends Feature {
                constructor() {
                  super(...arguments), (this.isActive = !1);
                }
                onFocus() {
                  let s = !1;
                  try {
                    s = this.node.current.matches(":focus-visible");
                  } catch (x) {
                    s = !0;
                  }
                  s &&
                    this.node.animationState &&
                    (this.node.animationState.setActive("whileFocus", !0),
                    (this.isActive = !0));
                }
                onBlur() {
                  this.isActive &&
                    this.node.animationState &&
                    (this.node.animationState.setActive("whileFocus", !1),
                    (this.isActive = !1));
                }
                mount() {
                  this.unmount = pipe(
                    addDomEvent(this.node.current, "focus", () =>
                      this.onFocus()
                    ),
                    addDomEvent(this.node.current, "blur", () => this.onBlur())
                  );
                }
                unmount() {}
              },
            },
            hover: {
              Feature: class extends Feature {
                mount() {
                  this.unmount = pipe(
                    addHoverEvent(this.node, !0),
                    addHoverEvent(this.node, !1)
                  );
                }
                unmount() {}
              },
            },
            pan: {
              Feature: class extends Feature {
                constructor() {
                  super(...arguments), (this.removePointerDownListener = noop);
                }
                onPointerDown(s) {
                  this.session = new PanSession(s, this.createPanHandlers(), {
                    transformPagePoint: this.node.getTransformPagePoint(),
                    contextWindow: getContextWindow(this.node),
                  });
                }
                createPanHandlers() {
                  let {
                    onPanSessionStart: s,
                    onPanStart: x,
                    onPan: W,
                    onPanEnd: X,
                  } = this.node.getProps();
                  return {
                    onSessionStart: asyncHandler(s),
                    onStart: asyncHandler(x),
                    onMove: W,
                    onEnd: (s, x) => {
                      delete this.session, X && ex.postRender(() => X(s, x));
                    },
                  };
                }
                mount() {
                  this.removePointerDownListener = addPointerEvent(
                    this.node.current,
                    "pointerdown",
                    (s) => this.onPointerDown(s)
                  );
                }
                update() {
                  this.session &&
                    this.session.updateHandlers(this.createPanHandlers());
                }
                unmount() {
                  this.removePointerDownListener(),
                    this.session && this.session.end();
                }
              },
            },
            drag: {
              Feature: class extends Feature {
                constructor(s) {
                  super(s),
                    (this.removeGroupControls = noop),
                    (this.removeListeners = noop),
                    (this.controls = new VisualElementDragControls(s));
                }
                mount() {
                  let { dragControls: s } = this.node.getProps();
                  s && (this.removeGroupControls = s.subscribe(this.controls)),
                    (this.removeListeners =
                      this.controls.addListeners() || noop);
                }
                unmount() {
                  this.removeGroupControls(), this.removeListeners();
                }
              },
              ProjectionNode: t8,
              MeasureLayout: MeasureLayout,
            },
            layout: { ProjectionNode: t8, MeasureLayout: MeasureLayout },
          }),
          (er = (s, x) =>
            isSVGComponent(s)
              ? new SVGVisualElement(x)
              : new HTMLVisualElement(x, {
                  allowProjection: s !== eo.Fragment,
                })),
          function (s, { forwardMotionProps: x } = { forwardMotionProps: !1 }) {
            let W = isSVGComponent(s) ? rf : rg,
              X = {
                ...W,
                preloadedFeatures: et,
                useRender: (function (s = !1) {
                  return (x, W, X, { latestValues: ee }, et) => {
                    let er = isSVGComponent(x) ? useSVGProps : useHTMLProps,
                      ei = er(W, ee, et, x),
                      ea = (function (s, x, W) {
                        let X = {};
                        for (let ee in s)
                          ("values" !== ee || "object" != typeof s.values) &&
                            (shouldForward(ee) ||
                              (!0 === W && isValidMotionProp(ee)) ||
                              (!x && !isValidMotionProp(ee)) ||
                              (s.draggable && ee.startsWith("onDrag"))) &&
                            (X[ee] = s[ee]);
                        return X;
                      })(W, "string" == typeof x, s),
                      es = x !== eo.Fragment ? { ...ea, ...ei, ref: X } : {},
                      { children: el } = W,
                      ec = (0, eo.useMemo)(
                        () => (isMotionValue(el) ? el.get() : el),
                        [el]
                      );
                    return (0, eo.createElement)(x, { ...es, children: ec });
                  };
                })(x),
                createVisualElement: er,
                Component: s,
              };
            return (function ({
              preloadedFeatures: s,
              createVisualElement: x,
              useRender: W,
              useVisualState: X,
              Component: ee,
            }) {
              s &&
                (function (s) {
                  for (let x in s) ra[x] = { ...ra[x], ...s[x] };
                })(s);
              let et = (0, eo.forwardRef)(function (s, et) {
                var er;
                let ea;
                let es = {
                    ...(0, eo.useContext)(ec),
                    ...s,
                    layoutId: (function ({ layoutId: s }) {
                      let x = (0, eo.useContext)(eu).id;
                      return x && void 0 !== s ? x + "-" + s : s;
                    })(s),
                  },
                  { isStatic: ep } = es,
                  ef = (function (s) {
                    let { initial: x, animate: W } = (function (s, x) {
                      if (isControllingVariants(s)) {
                        let { initial: x, animate: W } = s;
                        return {
                          initial: !1 === x || isVariantLabel(x) ? x : void 0,
                          animate: isVariantLabel(W) ? W : void 0,
                        };
                      }
                      return !1 !== s.inherit ? x : {};
                    })(s, (0, eo.useContext)(rt));
                    return (0, eo.useMemo)(
                      () => ({ initial: x, animate: W }),
                      [
                        variantLabelsAsDependency(x),
                        variantLabelsAsDependency(W),
                      ]
                    );
                  })(s),
                  eg = X(s, ep);
                if (!ep && ed) {
                  (0, eo.useContext)(rn).strict;
                  let s = (function (s) {
                    let { drag: x, layout: W } = ra;
                    if (!x && !W) return {};
                    let X = { ...x, ...W };
                    return {
                      MeasureLayout:
                        (null == x ? void 0 : x.isEnabled(s)) ||
                        (null == W ? void 0 : W.isEnabled(s))
                          ? X.MeasureLayout
                          : void 0,
                      ProjectionNode: X.ProjectionNode,
                    };
                  })(es);
                  (ea = s.MeasureLayout),
                    (ef.visualElement = (function (s, x, W, X, ee) {
                      var et, er;
                      let { visualElement: ei } = (0, eo.useContext)(rt),
                        ea = (0, eo.useContext)(rn),
                        es = (0, eo.useContext)(el),
                        eu = (0, eo.useContext)(ec).reducedMotion,
                        ed = (0, eo.useRef)();
                      (X = X || ea.renderer),
                        !ed.current &&
                          X &&
                          (ed.current = X(s, {
                            visualState: x,
                            parent: ei,
                            props: W,
                            presenceContext: es,
                            blockInitialAnimation: !!es && !1 === es.initial,
                            reducedMotionConfig: eu,
                          }));
                      let ep = ed.current,
                        ef = (0, eo.useContext)(tU);
                      ep &&
                        !ep.projection &&
                        ee &&
                        ("html" === ep.type || "svg" === ep.type) &&
                        (function (s, x, W, X) {
                          let {
                            layoutId: ee,
                            layout: et,
                            drag: er,
                            dragConstraints: ei,
                            layoutScroll: eo,
                            layoutRoot: ea,
                          } = x;
                          (s.projection = new W(
                            s.latestValues,
                            x["data-framer-portal-id"]
                              ? void 0
                              : (function getClosestProjectingNode(s) {
                                  if (s)
                                    return !1 !== s.options.allowProjection
                                      ? s.projection
                                      : getClosestProjectingNode(s.parent);
                                })(s.parent)
                          )),
                            s.projection.setOptions({
                              layoutId: ee,
                              layout: et,
                              alwaysMeasureLayout:
                                !!er || (ei && isRefObject(ei)),
                              visualElement: s,
                              animationType:
                                "string" == typeof et ? et : "both",
                              initialPromotionConfig: X,
                              layoutScroll: eo,
                              layoutRoot: ea,
                            });
                        })(ed.current, W, ee, ef);
                      let eg = (0, eo.useRef)(!1);
                      (0, eo.useInsertionEffect)(() => {
                        ep && eg.current && ep.update(W, es);
                      });
                      let em = W[tR],
                        ew = (0, eo.useRef)(
                          !!em &&
                            !(null === (et = window.MotionHandoffIsComplete) ||
                            void 0 === et
                              ? void 0
                              : et.call(window, em)) &&
                            (null ===
                              (er = window.MotionHasOptimisedAnimation) ||
                            void 0 === er
                              ? void 0
                              : er.call(window, em))
                        );
                      return (
                        eh(() => {
                          ep &&
                            ((eg.current = !0),
                            (window.MotionIsMounted = !0),
                            ep.updateFeatures(),
                            tH.render(ep.render),
                            ew.current &&
                              ep.animationState &&
                              ep.animationState.animateChanges());
                        }),
                        (0, eo.useEffect)(() => {
                          ep &&
                            (!ew.current &&
                              ep.animationState &&
                              ep.animationState.animateChanges(),
                            ew.current &&
                              (queueMicrotask(() => {
                                var s;
                                null ===
                                  (s = window.MotionHandoffMarkAsComplete) ||
                                  void 0 === s ||
                                  s.call(window, em);
                              }),
                              (ew.current = !1)));
                        }),
                        ep
                      );
                    })(ee, eg, es, x, s.ProjectionNode));
                }
                return (0, ei.jsxs)(rt.Provider, {
                  value: ef,
                  children: [
                    ea && ef.visualElement
                      ? (0, ei.jsx)(ea, {
                          visualElement: ef.visualElement,
                          ...es,
                        })
                      : null,
                    W(
                      ee,
                      s,
                      ((er = ef.visualElement),
                      (0, eo.useCallback)(
                        (s) => {
                          s && eg.mount && eg.mount(s),
                            er && (s ? er.mount(s) : er.unmount()),
                            et &&
                              ("function" == typeof et
                                ? et(s)
                                : isRefObject(et) && (et.current = s));
                        },
                        [er]
                      )),
                      eg,
                      ep,
                      ef.visualElement
                    ),
                  ],
                });
              });
              return (et[rs] = ee), et;
            })(X);
          }),
        rx = (function (s) {
          if ("undefined" == typeof Proxy) return s;
          let x = new Map();
          return new Proxy((...x) => s(...x), {
            get: (W, X) =>
              "create" === X ? s : (x.has(X) || x.set(X, s(X)), x.get(X)),
          });
        })(rC);
      var rE = W(39998),
        rA = W(41664),
        rS = W.n(rA),
        rk = W(80134),
        rT = W(67421),
        rI = W(39039),
        rP = W(70741);
      function HamburgerMenu() {
        let { t: s } = (0, rT.$G)(),
          [x, W] = (0, eo.useState)(!1),
          X = (0, eo.useRef)(null),
          ee = [
            { title: s("home"), href: "overview" },
            { title: s("how_to_buy"), href: "howtobuy" },
            { title: "FAQs", href: "faqs" },
          ];
        return (
          (0, ea.Z)(X, () => W(!1)),
          (0, ei.jsxs)("div", {
            ref: X,
            className: "relative flex items-center gap-4 xl:hidden z-40",
            children: [
              (0, ei.jsx)(rE.default, {
                className: "size-5 cursor-pointer mr-2",
                onClick: () => W(!0),
              }),
              (0, ei.jsx)(AnimatePresence, {
                children:
                  x &&
                  (0, ei.jsxs)(rx.div, {
                    initial: { opacity: 0 },
                    animate: { opacity: 1 },
                    exit: { opacity: 0 },
                    transition: { duration: 0.2 },
                    className:
                      "fixed left-0 shadow-4xl right-0 top-0 py-[5rem] z-50 backdrop-blur-[32px]",
                    children: [
                      (0, ei.jsx)(rx.div, {
                        className:
                          "absolute top-0 right-0 px-8 py-8 z-40 cursor-pointer",
                        onClick: () => W(!1),
                        children: (0, ei.jsxs)("svg", {
                          className: "h-8 w-8 text-white",
                          viewBox: "0 0 24 24",
                          fill: "none",
                          stroke: "currentColor",
                          strokeWidth: "2",
                          strokeLinecap: "round",
                          strokeLinejoin: "round",
                          children: [
                            (0, ei.jsx)("line", {
                              x1: "18",
                              y1: "6",
                              x2: "6",
                              y2: "18",
                            }),
                            (0, ei.jsx)("line", {
                              x1: "6",
                              y1: "6",
                              x2: "18",
                              y2: "18",
                            }),
                          ],
                        }),
                      }),
                      (0, ei.jsxs)("div", {
                        className: "flex flex-col items-center py-2",
                        children: [
                          (0, ei.jsx)("div", {
                            className:
                              "discord size-[80px] md:size-[63px] bg-[#EE89C8]",
                            children: (0, ei.jsx)("img", {
                              src: "./images/logo.png",
                              draggable: !1,
                              alt: "logo",
                            }),
                          }),
                          (0, ei.jsx)("ul", {
                            className: "grid gap-4 mb-8 pl-0",
                            children: ee.map((s, x) =>
                              (0, ei.jsx)(
                                rx.li,
                                {
                                  initial: { scale: 0, opacity: 0 },
                                  animate: { scale: 1, opacity: 1 },
                                  transition: {
                                    type: "spring",
                                    stiffness: 260,
                                    damping: 20,
                                    delay: 0.1 + x / 10,
                                  },
                                  className:
                                    "w-full p-[0.08rem] rounded-xl z-40 uppercase",
                                  children: s.target
                                    ? (0, ei.jsx)(rS(), {
                                        onClick: () => W((s) => !s),
                                        className:
                                          "flex items-center justify-center w-full text-white hover:text-[#9DE2FF] cursor-pointer",
                                        href: s.href,
                                        target: s.target,
                                        children: (0, ei.jsx)("span", {
                                          className:
                                            "flex hover:color-[#9DE2FF] color-white text-lg",
                                          children: s.title,
                                        }),
                                      })
                                    : (0, ei.jsx)(es.rU, {
                                        onClick: () => W((s) => !s),
                                        className:
                                          "flex items-center justify-center w-full text-white hover:text-[#9DE2FF] cursor-pointer",
                                        to: s.href,
                                        children: (0, ei.jsx)("span", {
                                          className:
                                            "flex hover:color-[#9DE2FF] color-white text-lg",
                                          children: s.title,
                                        }),
                                      }),
                                },
                                x
                              )
                            ),
                          }),
                          (0, ei.jsx)(rk.default, {}),
                          (0, ei.jsxs)("div", {
                            className: "flex gap-2 mt-8",
                            children: [
                              (0, ei.jsx)(rS(), {
                                href: "https://x.com/Panshibi_",
                                className: "hover:scale-110",
                                target: "_blank",
                                children: (0, ei.jsx)(rI.default, {
                                  className: "size-6",
                                }),
                              }),
                              (0, ei.jsx)(rS(), {
                                href: "https://t.me/Panshibi",
                                className: "hover:scale-110",
                                target: "_blank",
                                children: (0, ei.jsx)(rP.default, {
                                  className: "size-7",
                                }),
                              }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
              }),
            ],
          })
        );
      }
    },
    15805: function (s, x, W) {
      "use strict";
      W.r(x),
        W.d(x, {
          default: function () {
            return Header;
          },
        });
      var X = W(85893),
        ee = W(67294),
        et = W(66261),
        er = W(80257),
        ei = W(41664),
        eo = W.n(ei),
        ea = W(45450),
        es = W(70741),
        el = W(39039),
        ec = W(92321),
        eu = W(6590),
        ed = W(26623),
        eh = W(86472),
        ep = W(63114),
        ef = W(36609),
        eg = W(67421);
      let em = [
        { flag: "ar", language: "ar", name: "عربي" },
        { flag: "bg", language: "bg", name: "български" },
        { flag: "en", language: "en", name: "English" },
        { flag: "cn", language: "zh-CN", name: "中文（简体）" },
        { flag: "cn", language: "ug-CN", name: "中文（繁體）" },
        { flag: "cz", language: "cs", name: "čeština" },
        { flag: "fr", language: "fr", name: "Fran\xe7ais" },
        { flag: "de", language: "de", name: "Deutsch" },
        { flag: "el", language: "el", name: "ελληνικά" },
        { flag: "hu", language: "hu", name: "magyar" },
        { flag: "id", language: "id", name: "Indonesia" },
        { flag: "it", language: "it", name: "Italiano" },
        { flag: "jp", language: "ja-JP", name: "日本語" },
        { flag: "kr", language: "ko-KR", name: "한국인" },
        { flag: "pl", language: "pl", name: "Polski" },
        { flag: "pt", language: "pt", name: "Portugu\xeas" },
        { flag: "ro", language: "ro", name: "rom\xe2nă" },
        { flag: "ru", language: "ru", name: "Русский" },
        { flag: "sk", language: "sk", name: "slovensk\xfd" },
        { flag: "es", language: "es", name: "Espa\xf1ol" },
        { flag: "th", language: "th", name: "แบบไทย" },
        { flag: "tr", language: "tr", name: "T\xfcrk\xe7e" },
        { flag: "vn", language: "vi-VN", name: "Tiếng Việt" },
      ];
      var ew = W(52463),
        eb = W(58783);
      function Header() {
        let { t: s } = (0, eg.$G)(),
          { address: x, isConnected: W } = (0, ec.m)(),
          [ei, ev] = (0, ee.useState)(!1),
          [ey, e_] = (0, ee.useState)({
            flag: "en",
            language: "en",
            name: "English",
          }),
          eC = (0, ee.useRef)(null),
          onChangeLanguage = (s) => {
            (0, ef.D0)(s.language), e_(s), ev(!1);
          };
        return (
          (0, ee.useEffect)(() => {
            let s = em.filter((s) => s.language === ef.ZP.language);
            s && s.length && e_(s[0]);
          }, []),
          (0, ew.Z)(eC, () => ev(!1)),
          (0, X.jsx)("main", {
            className:
              "relative z-20 mx-4 md:mx-20 py-5 h-32 flex justify-center",
            children: (0, X.jsxs)("div", {
              className:
                "fixed w-[calc(100%-32px)] md:w-[calc(100%-160px)] flex items-center justify-between z-10 gap-2 p-2 bg-white rounded-full border-black border-[3px]",
              children: [
                (0, X.jsxs)(eo(), {
                  href: "/",
                  className: "flex items-center",
                  children: [
                    (0, X.jsx)("div", {
                      className:
                        "discord size-[40px] md:size-[63px] bg-[#EE89C8]",
                      children: (0, X.jsx)("img", {
                        src: "./images/logo.png",
                        draggable: !1,
                        alt: "logo",
                      }),
                    }),
                    (0, X.jsx)("div", {
                      className: "pl-2",
                      children: (0, X.jsx)(ea.default, {
                        width: "112px",
                        height: "36px",
                      }),
                    }),
                  ],
                }),
                (0, X.jsxs)("div", {
                  className:
                    "items-center justify-center text-base hidden xl:flex flex-grow gap-5 px-10 text-center text-black",
                  children: [
                    (0, X.jsx)(eo(), {
                      href: "/",
                      className:
                        "cursor-pointer text-[20px] text-light-white hover:text-pink-400 transition",
                      children: s("home"),
                    }),
                    (0, X.jsx)(et.rU, {
                      to: "howtobuy",
                      className:
                        "cursor-pointer text-[20px] text-light-white hover:text-pink-400 transition",
                      children: s("how_to_buy"),
                    }),
                    (0, X.jsx)(et.rU, {
                      to: "faqs",
                      className:
                        "cursor-pointer text-[20px] text-light-white hover:text-pink-400 transition",
                      children: "FAQs",
                    }),
                  ],
                }),
                (0, X.jsxs)("div", {
                  className: "flex items-center gap-2 md:gap-4 md:flex-row",
                  children: [
                    (0, X.jsxs)("div", {
                      className: "relative",
                      children: [
                        ei &&
                          (0, X.jsx)("div", {
                            className:
                              "absolute flex flex-col right-0 top-8 gray-panel h-[240px] overflow-y-scroll overflow-x-hidden rounded-lg w-[200px] text-black",
                            ref: eC,
                            children: em.map((s) =>
                              (0, X.jsxs)(
                                "div",
                                {
                                  className:
                                    "flex gap-2 px-2 py-1 cursor-pointer",
                                  onClick: () => onChangeLanguage(s),
                                  children: [
                                    (0, X.jsx)("img", {
                                      src: "./images/flags/".concat(
                                        s.flag,
                                        ".svg"
                                      ),
                                      className: "w-6 h-6 rounded-lg",
                                      alt: "flag",
                                    }),
                                    (0, X.jsx)("span", { children: s.name }),
                                  ],
                                },
                                s.language
                              )
                            ),
                          }),
                      ],
                    }),
                    (0, X.jsxs)("div", {
                      className: "hidden lg:flex gap-2 px-4",
                      children: [
                        (0, X.jsx)(eo(), {
                          href: "https://x.com/Panshibi_",
                          className: "hover:scale-110",
                          target: "_blank",
                          children: (0, X.jsx)(el.default, {
                            className: "size-6",
                          }),
                        }),
                        (0, X.jsx)(eo(), {
                          href: "https://t.me/Panshibi",
                          className: "hover:scale-110",
                          target: "_blank",
                          children: (0, X.jsx)(es.default, {
                            className: "size-7",
                          }),
                        }),
                      ],
                    }),
                    (0, X.jsxs)("div", {
                      className:
                        "items-center justify-center cursor-pointer hidden xl:flex",
                      
                      
                      children: [
                        (0, X.jsx)("a", {
                          // onClick: () => windows.href("https://app.uniswap.org"),
                          href: "https://app.uniswap.org",
                          className:
                            "absolute text-[36px] md:text-[28px] label-button",
                          children: "Buy Now"
                        }),
                        (0, X.jsx)(eh.default, {}),
                      ],
                    }),
                    (0, X.jsx)(er.default, {}),
                  ],
                }),
              ],
            }),
          })
        );
      }
    },
    86472: function (s, x, W) {
      "use strict";
      W.r(x),
        W.d(x, {
          default: function () {
            return BuyNowRect;
          },
        });
      var X = W(85893);
      function BuyNowRect(s) {
        return (0, X.jsxs)("svg", {
          width: "245",
          height: "69",
          viewBox: "0 0 245 69",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          ...s,
          children: [
            (0, X.jsx)("rect", {
              x: "1.5",
              y: "1.5",
              width: "242",
              height: "66",
              rx: "33",
              fill: "#EE89C8",
              stroke: "black",
              "stroke-width": "3",
            }),
            (0, X.jsx)("mask", {
              id: "mask0_2003_187",
              maskUnits: "userSpaceOnUse",
              x: "3",
              y: "3",
              width: "239",
              height: "63",
              children: (0, X.jsx)("rect", {
                x: "3",
                y: "3",
                width: "239",
                height: "63",
                rx: "31.5",
                fill: "#EE89C8",
              }),
            }),
            (0, X.jsxs)("g", {
              mask: "url(#mask0_2003_187)",
              children: [
                (0, X.jsx)("path", {
                  "fill-rule": "evenodd",
                  "clip-rule": "evenodd",
                  d: "M7 49C7 54.5 17.5833 67 29.3877 67H111.815H121.482H215.612C227.417 67 238 54.5 238 49C236.372 55.4 222.396 57.3333 215.612 57.5H121.482H111.815H29.3877C22.6035 57.3333 8.62819 55.4 7 49Z",
                  fill: "#DF75B7",
                }),
                (0, X.jsx)("path", {
                  "fill-rule": "evenodd",
                  "clip-rule": "evenodd",
                  d: "M6 21C6 15.5 16.7207 3 28.6784 3H112.176H121.969H217.322C229.279 3 240 15.5 240 21C238.351 14.6 224.194 12.6667 217.322 12.5H121.969H112.176H28.6784C21.8062 12.6667 7.64934 14.6 6 21Z",
                  fill: "#FEA1DB",
                }),
              ],
            }),
            (0, X.jsx)("path", {
              d: "M234 49.5C235.667 47.3333 239 41.3 239 34.5",
              stroke: "black",
              "stroke-linecap": "round",
            }),
            (0, X.jsx)("path", {
              d: "M20.0281 9.84855C17.5817 11.0682 11.9455 15.0363 8.97174 21.1515",
              stroke: "white",
              "stroke-linecap": "round",
            }),
            (0, X.jsx)("path", {
              d: "M31 57.5H91M98 57.5H107.5",
              stroke: "black",
              "stroke-linecap": "round",
            }),
          ],
        });
      }
      W(67294);
    },
    45450: function (s, x, W) {
      "use strict";
      W.r(x),
        W.d(x, {
          default: function () {
            return TitleText;
          },
        });
      var X = W(85893);
      function TitleText(s) {
        return (0, X.jsx)("span", {
          className:
            "label-earth-stroke-shadow text-white text-[32px] normal-case",
          children: "Panshibi",
        });
      }
      W(67294);
    },
    63114: function (s, x, W) {
      "use strict";
      function _tagged_template_literal(s, x) {
        return (
          x || (x = s.slice(0)),
          Object.freeze(
            Object.defineProperties(s, { raw: { value: Object.freeze(x) } })
          )
        );
      }
      W.r(x),
        W.d(x, {
          calculateTokenPrice: function () {
            return calculateTokenPrice;
          },
          copyToClipboard: function () {
            return copyToClipboard;
          },
          default: function () {
            return utils;
          },
          fadeIn: function () {
            return ei;
          },
          fadeInUp: function () {
            return er;
          },
          formatLocalString: function () {
            return formatLocalString;
          },
          getLeftDays: function () {
            return getLeftDays;
          },
          getLeftHours: function () {
            return getLeftHours;
          },
          getLeftMin: function () {
            return getLeftMin;
          },
          getLeftSecond: function () {
            return getLeftSecond;
          },
          shortenAddress: function () {
            return shortenAddress;
          },
        });
      var X = W(70917),
        ee = W(15229),
        et = W(93677);
      function _templateObject() {
        let s = _tagged_template_literal([
          "\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    transform: translateY(40px);\n  }\n  100% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n  }\n",
        ]);
        return (
          (_templateObject = function () {
            return s;
          }),
          s
        );
      }
      function _templateObject1() {
        let s = _tagged_template_literal([
          "\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n",
        ]);
        return (
          (_templateObject1 = function () {
            return s;
          }),
          s
        );
      }
      let er = (0, X.F4)(_templateObject()),
        ei = (0, X.F4)(_templateObject1());
      function utils() {}
      let calculateTokenPrice = (s) => {
          let x = Number((0, ee.b)(s, et.e.tokenDecimal));
          return Number((1 / x).toFixed(3));
        },
        formatLocalString = function (s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 18;
          if (!s) return 0;
          let W = (0, ee.b)(s, x);
          return Number(W).toLocaleString();
        },
        copyToClipboard = (s, x) => {
          if (navigator.clipboard && navigator.permissions)
            navigator.clipboard.writeText(s).then(x);
          else if (document.queryCommandSupported("copy")) {
            let W = document.createElement("textarea");
            (W.value = s),
              document.body.appendChild(W),
              W.select(),
              document.execCommand("copy"),
              document.body.removeChild(W),
              null == x || x();
          }
        };
      function shortenAddress(s) {
        return !s || s.length < 10
          ? s
          : ""
              .concat(s.substring(0, 4), "...")
              .concat(s.substring(s.length - 4, s.length));
      }
      function getLeftDays(s) {
        let x = Math.floor(s / 60 / 60 / 24);
        return x < 10 ? "0".concat(x) : x || "00";
      }
      function getLeftHours(s) {
        let x = Math.floor(s / 60 / 60) % 24;
        return x < 10 ? "0".concat(x) : x || "00";
      }
      function getLeftMin(s) {
        let x = Math.floor(s / 60) % 60;
        return x < 10 ? "0".concat(x) : x || "00";
      }
      function getLeftSecond(s) {
        let x = s % 60;
        return x < 10 ? "0".concat(x) : x || "00";
      }
    },
    27967: function () {},
    76944: function () {},
    77663: function (s) {
      !(function () {
        var x = {
            229: function (s) {
              var x,
                W,
                X,
                ee = (s.exports = {});
              function defaultSetTimout() {
                throw Error("setTimeout has not been defined");
              }
              function defaultClearTimeout() {
                throw Error("clearTimeout has not been defined");
              }
              function runTimeout(s) {
                if (x === setTimeout) return setTimeout(s, 0);
                if ((x === defaultSetTimout || !x) && setTimeout)
                  return (x = setTimeout), setTimeout(s, 0);
                try {
                  return x(s, 0);
                } catch (W) {
                  try {
                    return x.call(null, s, 0);
                  } catch (W) {
                    return x.call(this, s, 0);
                  }
                }
              }
              !(function () {
                try {
                  x =
                    "function" == typeof setTimeout
                      ? setTimeout
                      : defaultSetTimout;
                } catch (s) {
                  x = defaultSetTimout;
                }
                try {
                  W =
                    "function" == typeof clearTimeout
                      ? clearTimeout
                      : defaultClearTimeout;
                } catch (s) {
                  W = defaultClearTimeout;
                }
              })();
              var et = [],
                er = !1,
                ei = -1;
              function cleanUpNextTick() {
                er &&
                  X &&
                  ((er = !1),
                  X.length ? (et = X.concat(et)) : (ei = -1),
                  et.length && drainQueue());
              }
              function drainQueue() {
                if (!er) {
                  var s = runTimeout(cleanUpNextTick);
                  er = !0;
                  for (var x = et.length; x; ) {
                    for (X = et, et = []; ++ei < x; ) X && X[ei].run();
                    (ei = -1), (x = et.length);
                  }
                  (X = null),
                    (er = !1),
                    (function (s) {
                      if (W === clearTimeout) return clearTimeout(s);
                      if ((W === defaultClearTimeout || !W) && clearTimeout)
                        return (W = clearTimeout), clearTimeout(s);
                      try {
                        W(s);
                      } catch (x) {
                        try {
                          return W.call(null, s);
                        } catch (x) {
                          return W.call(this, s);
                        }
                      }
                    })(s);
                }
              }
              function Item(s, x) {
                (this.fun = s), (this.array = x);
              }
              function noop() {}
              (ee.nextTick = function (s) {
                var x = Array(arguments.length - 1);
                if (arguments.length > 1)
                  for (var W = 1; W < arguments.length; W++)
                    x[W - 1] = arguments[W];
                et.push(new Item(s, x)),
                  1 !== et.length || er || runTimeout(drainQueue);
              }),
                (Item.prototype.run = function () {
                  this.fun.apply(null, this.array);
                }),
                (ee.title = "browser"),
                (ee.browser = !0),
                (ee.env = {}),
                (ee.argv = []),
                (ee.version = ""),
                (ee.versions = {}),
                (ee.on = noop),
                (ee.addListener = noop),
                (ee.once = noop),
                (ee.off = noop),
                (ee.removeListener = noop),
                (ee.removeAllListeners = noop),
                (ee.emit = noop),
                (ee.prependListener = noop),
                (ee.prependOnceListener = noop),
                (ee.listeners = function (s) {
                  return [];
                }),
                (ee.binding = function (s) {
                  throw Error("process.binding is not supported");
                }),
                (ee.cwd = function () {
                  return "/";
                }),
                (ee.chdir = function (s) {
                  throw Error("process.chdir is not supported");
                }),
                (ee.umask = function () {
                  return 0;
                });
            },
          },
          W = {};
        function __nccwpck_require__(s) {
          var X = W[s];
          if (void 0 !== X) return X.exports;
          var ee = (W[s] = { exports: {} }),
            et = !0;
          try {
            x[s](ee, ee.exports, __nccwpck_require__), (et = !1);
          } finally {
            et && delete W[s];
          }
          return ee.exports;
        }
        __nccwpck_require__.ab = "//";
        var X = __nccwpck_require__(229);
        s.exports = X;
      })();
    },
    41664: function (s, x, W) {
      s.exports = W(65170);
    },
    92703: function (s, x, W) {
      "use strict";
      var X = W(50414);
      function emptyFunction() {}
      function emptyFunctionWithReset() {}
      (emptyFunctionWithReset.resetWarningCache = emptyFunction),
        (s.exports = function () {
          function shim(s, x, W, ee, et, er) {
            if (er !== X) {
              var ei = Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
              );
              throw ((ei.name = "Invariant Violation"), ei);
            }
          }
          function getShim() {
            return shim;
          }
          shim.isRequired = shim;
          var s = {
            array: shim,
            bigint: shim,
            bool: shim,
            func: shim,
            number: shim,
            object: shim,
            string: shim,
            symbol: shim,
            any: shim,
            arrayOf: getShim,
            element: shim,
            elementType: shim,
            instanceOf: getShim,
            node: shim,
            objectOf: getShim,
            oneOf: getShim,
            oneOfType: getShim,
            shape: getShim,
            exact: getShim,
            checkPropTypes: emptyFunctionWithReset,
            resetWarningCache: emptyFunction,
          };
          return (s.PropTypes = s), s;
        });
    },
    45697: function (s, x, W) {
      s.exports = W(92703)();
    },
    50414: function (s) {
      "use strict";
      s.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    },
    92592: function (s, x, W) {
      let X = W(47138),
        ee = W(95115),
        et = W(6907),
        er = W(93776);
      function renderCanvas(s, x, W, et, er) {
        let ei = [].slice.call(arguments, 1),
          eo = ei.length,
          ea = "function" == typeof ei[eo - 1];
        if (!ea && !X()) throw Error("Callback required as last argument");
        if (ea) {
          if (eo < 2) throw Error("Too few arguments provided");
          2 === eo
            ? ((er = W), (W = x), (x = et = void 0))
            : 3 === eo &&
              (x.getContext && void 0 === er
                ? ((er = et), (et = void 0))
                : ((er = et), (et = W), (W = x), (x = void 0)));
        } else {
          if (eo < 1) throw Error("Too few arguments provided");
          return (
            1 === eo
              ? ((W = x), (x = et = void 0))
              : 2 !== eo || x.getContext || ((et = W), (W = x), (x = void 0)),
            new Promise(function (X, er) {
              try {
                let er = ee.create(W, et);
                X(s(er, x, et));
              } catch (s) {
                er(s);
              }
            })
          );
        }
        try {
          let X = ee.create(W, et);
          er(null, s(X, x, et));
        } catch (s) {
          er(s);
        }
      }
      (x.create = ee.create),
        (x.toCanvas = renderCanvas.bind(null, et.render)),
        (x.toDataURL = renderCanvas.bind(null, et.renderToDataURL)),
        (x.toString = renderCanvas.bind(null, function (s, x, W) {
          return er.render(s, W);
        }));
    },
    47138: function (s) {
      s.exports = function () {
        return (
          "function" == typeof Promise &&
          Promise.prototype &&
          Promise.prototype.then
        );
      };
    },
    21845: function (s, x, W) {
      let X = W(10242).getSymbolSize;
      (x.getRowColCoords = function (s) {
        if (1 === s) return [];
        let x = Math.floor(s / 7) + 2,
          W = X(s),
          ee = 145 === W ? 26 : 2 * Math.ceil((W - 13) / (2 * x - 2)),
          et = [W - 7];
        for (let s = 1; s < x - 1; s++) et[s] = et[s - 1] - ee;
        return et.push(6), et.reverse();
      }),
        (x.getPositions = function (s) {
          let W = [],
            X = x.getRowColCoords(s),
            ee = X.length;
          for (let s = 0; s < ee; s++)
            for (let x = 0; x < ee; x++)
              (0 !== s || 0 !== x) &&
                (0 !== s || x !== ee - 1) &&
                (s !== ee - 1 || 0 !== x) &&
                W.push([X[s], X[x]]);
          return W;
        });
    },
    8260: function (s, x, W) {
      let X = W(76910),
        ee = [
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "P",
          "Q",
          "R",
          "S",
          "T",
          "U",
          "V",
          "W",
          "X",
          "Y",
          "Z",
          " ",
          "$",
          "%",
          "*",
          "+",
          "-",
          ".",
          "/",
          ":",
        ];
      function AlphanumericData(s) {
        (this.mode = X.ALPHANUMERIC), (this.data = s);
      }
      (AlphanumericData.getBitsLength = function (s) {
        return 11 * Math.floor(s / 2) + 6 * (s % 2);
      }),
        (AlphanumericData.prototype.getLength = function () {
          return this.data.length;
        }),
        (AlphanumericData.prototype.getBitsLength = function () {
          return AlphanumericData.getBitsLength(this.data.length);
        }),
        (AlphanumericData.prototype.write = function (s) {
          let x;
          for (x = 0; x + 2 <= this.data.length; x += 2) {
            let W = 45 * ee.indexOf(this.data[x]);
            (W += ee.indexOf(this.data[x + 1])), s.put(W, 11);
          }
          this.data.length % 2 && s.put(ee.indexOf(this.data[x]), 6);
        }),
        (s.exports = AlphanumericData);
    },
    97245: function (s) {
      function BitBuffer() {
        (this.buffer = []), (this.length = 0);
      }
      (BitBuffer.prototype = {
        get: function (s) {
          return ((this.buffer[Math.floor(s / 8)] >>> (7 - (s % 8))) & 1) == 1;
        },
        put: function (s, x) {
          for (let W = 0; W < x; W++)
            this.putBit(((s >>> (x - W - 1)) & 1) == 1);
        },
        getLengthInBits: function () {
          return this.length;
        },
        putBit: function (s) {
          let x = Math.floor(this.length / 8);
          this.buffer.length <= x && this.buffer.push(0),
            s && (this.buffer[x] |= 128 >>> this.length % 8),
            this.length++;
        },
      }),
        (s.exports = BitBuffer);
    },
    73280: function (s) {
      function BitMatrix(s) {
        if (!s || s < 1)
          throw Error("BitMatrix size must be defined and greater than 0");
        (this.size = s),
          (this.data = new Uint8Array(s * s)),
          (this.reservedBit = new Uint8Array(s * s));
      }
      (BitMatrix.prototype.set = function (s, x, W, X) {
        let ee = s * this.size + x;
        (this.data[ee] = W), X && (this.reservedBit[ee] = !0);
      }),
        (BitMatrix.prototype.get = function (s, x) {
          return this.data[s * this.size + x];
        }),
        (BitMatrix.prototype.xor = function (s, x, W) {
          this.data[s * this.size + x] ^= W;
        }),
        (BitMatrix.prototype.isReserved = function (s, x) {
          return this.reservedBit[s * this.size + x];
        }),
        (s.exports = BitMatrix);
    },
    43424: function (s, x, W) {
      let X = W(62378),
        ee = W(76910);
      function ByteData(s) {
        (this.mode = ee.BYTE),
          "string" == typeof s && (s = X(s)),
          (this.data = new Uint8Array(s));
      }
      (ByteData.getBitsLength = function (s) {
        return 8 * s;
      }),
        (ByteData.prototype.getLength = function () {
          return this.data.length;
        }),
        (ByteData.prototype.getBitsLength = function () {
          return ByteData.getBitsLength(this.data.length);
        }),
        (ByteData.prototype.write = function (s) {
          for (let x = 0, W = this.data.length; x < W; x++)
            s.put(this.data[x], 8);
        }),
        (s.exports = ByteData);
    },
    35393: function (s, x, W) {
      let X = W(64908),
        ee = [
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4,
          4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8,
          10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6,
          11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23,
          25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12,
          23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29,
          40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51,
          60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74,
          24, 47, 65, 77, 25, 49, 68, 81,
        ],
        et = [
          7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48,
          72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110,
          160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308,
          104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280,
          408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650,
          224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504,
          750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952,
          1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140,
          1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350,
          1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590,
          1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860,
          2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430,
        ];
      (x.getBlocksCount = function (s, x) {
        switch (x) {
          case X.L:
            return ee[(s - 1) * 4 + 0];
          case X.M:
            return ee[(s - 1) * 4 + 1];
          case X.Q:
            return ee[(s - 1) * 4 + 2];
          case X.H:
            return ee[(s - 1) * 4 + 3];
          default:
            return;
        }
      }),
        (x.getTotalCodewordsCount = function (s, x) {
          switch (x) {
            case X.L:
              return et[(s - 1) * 4 + 0];
            case X.M:
              return et[(s - 1) * 4 + 1];
            case X.Q:
              return et[(s - 1) * 4 + 2];
            case X.H:
              return et[(s - 1) * 4 + 3];
            default:
              return;
          }
        });
    },
    64908: function (s, x) {
      (x.L = { bit: 1 }),
        (x.M = { bit: 0 }),
        (x.Q = { bit: 3 }),
        (x.H = { bit: 2 }),
        (x.isValid = function (s) {
          return s && void 0 !== s.bit && s.bit >= 0 && s.bit < 4;
        }),
        (x.from = function (s, W) {
          if (x.isValid(s)) return s;
          try {
            return (function (s) {
              if ("string" != typeof s) throw Error("Param is not a string");
              let W = s.toLowerCase();
              switch (W) {
                case "l":
                case "low":
                  return x.L;
                case "m":
                case "medium":
                  return x.M;
                case "q":
                case "quartile":
                  return x.Q;
                case "h":
                case "high":
                  return x.H;
                default:
                  throw Error("Unknown EC Level: " + s);
              }
            })(s);
          } catch (s) {
            return W;
          }
        });
    },
    76526: function (s, x, W) {
      let X = W(10242).getSymbolSize;
      x.getPositions = function (s) {
        let x = X(s);
        return [
          [0, 0],
          [x - 7, 0],
          [0, x - 7],
        ];
      };
    },
    61642: function (s, x, W) {
      let X = W(10242),
        ee = X.getBCHDigit(1335);
      x.getEncodedBits = function (s, x) {
        let W = (s.bit << 3) | x,
          et = W << 10;
        for (; X.getBCHDigit(et) - ee >= 0; )
          et ^= 1335 << (X.getBCHDigit(et) - ee);
        return ((W << 10) | et) ^ 21522;
      };
    },
    69729: function (s, x) {
      let W = new Uint8Array(512),
        X = new Uint8Array(256);
      !(function () {
        let s = 1;
        for (let x = 0; x < 255; x++)
          (W[x] = s), (X[s] = x), 256 & (s <<= 1) && (s ^= 285);
        for (let s = 255; s < 512; s++) W[s] = W[s - 255];
      })(),
        (x.log = function (s) {
          if (s < 1) throw Error("log(" + s + ")");
          return X[s];
        }),
        (x.exp = function (s) {
          return W[s];
        }),
        (x.mul = function (s, x) {
          return 0 === s || 0 === x ? 0 : W[X[s] + X[x]];
        });
    },
    35442: function (s, x, W) {
      let X = W(76910),
        ee = W(10242);
      function KanjiData(s) {
        (this.mode = X.KANJI), (this.data = s);
      }
      (KanjiData.getBitsLength = function (s) {
        return 13 * s;
      }),
        (KanjiData.prototype.getLength = function () {
          return this.data.length;
        }),
        (KanjiData.prototype.getBitsLength = function () {
          return KanjiData.getBitsLength(this.data.length);
        }),
        (KanjiData.prototype.write = function (s) {
          let x;
          for (x = 0; x < this.data.length; x++) {
            let W = ee.toSJIS(this.data[x]);
            if (W >= 33088 && W <= 40956) W -= 33088;
            else if (W >= 57408 && W <= 60351) W -= 49472;
            else
              throw Error(
                "Invalid SJIS character: " +
                  this.data[x] +
                  "\nMake sure your charset is UTF-8"
              );
            (W = ((W >>> 8) & 255) * 192 + (255 & W)), s.put(W, 13);
          }
        }),
        (s.exports = KanjiData);
    },
    27126: function (s, x) {
      x.Patterns = {
        PATTERN000: 0,
        PATTERN001: 1,
        PATTERN010: 2,
        PATTERN011: 3,
        PATTERN100: 4,
        PATTERN101: 5,
        PATTERN110: 6,
        PATTERN111: 7,
      };
      let W = { N1: 3, N2: 3, N3: 40, N4: 10 };
      (x.isValid = function (s) {
        return null != s && "" !== s && !isNaN(s) && s >= 0 && s <= 7;
      }),
        (x.from = function (s) {
          return x.isValid(s) ? parseInt(s, 10) : void 0;
        }),
        (x.getPenaltyN1 = function (s) {
          let x = s.size,
            X = 0,
            ee = 0,
            et = 0,
            er = null,
            ei = null;
          for (let eo = 0; eo < x; eo++) {
            (ee = et = 0), (er = ei = null);
            for (let ea = 0; ea < x; ea++) {
              let x = s.get(eo, ea);
              x === er
                ? ee++
                : (ee >= 5 && (X += W.N1 + (ee - 5)), (er = x), (ee = 1)),
                (x = s.get(ea, eo)) === ei
                  ? et++
                  : (et >= 5 && (X += W.N1 + (et - 5)), (ei = x), (et = 1));
            }
            ee >= 5 && (X += W.N1 + (ee - 5)),
              et >= 5 && (X += W.N1 + (et - 5));
          }
          return X;
        }),
        (x.getPenaltyN2 = function (s) {
          let x = s.size,
            X = 0;
          for (let W = 0; W < x - 1; W++)
            for (let ee = 0; ee < x - 1; ee++) {
              let x =
                s.get(W, ee) +
                s.get(W, ee + 1) +
                s.get(W + 1, ee) +
                s.get(W + 1, ee + 1);
              (4 === x || 0 === x) && X++;
            }
          return X * W.N2;
        }),
        (x.getPenaltyN3 = function (s) {
          let x = s.size,
            X = 0,
            ee = 0,
            et = 0;
          for (let W = 0; W < x; W++) {
            ee = et = 0;
            for (let er = 0; er < x; er++)
              (ee = ((ee << 1) & 2047) | s.get(W, er)),
                er >= 10 && (1488 === ee || 93 === ee) && X++,
                (et = ((et << 1) & 2047) | s.get(er, W)),
                er >= 10 && (1488 === et || 93 === et) && X++;
          }
          return X * W.N3;
        }),
        (x.getPenaltyN4 = function (s) {
          let x = 0,
            X = s.data.length;
          for (let W = 0; W < X; W++) x += s.data[W];
          let ee = Math.abs(Math.ceil((100 * x) / X / 5) - 10);
          return ee * W.N4;
        }),
        (x.applyMask = function (s, W) {
          let X = W.size;
          for (let ee = 0; ee < X; ee++)
            for (let et = 0; et < X; et++)
              W.isReserved(et, ee) ||
                W.xor(
                  et,
                  ee,
                  (function (s, W, X) {
                    switch (s) {
                      case x.Patterns.PATTERN000:
                        return (W + X) % 2 == 0;
                      case x.Patterns.PATTERN001:
                        return W % 2 == 0;
                      case x.Patterns.PATTERN010:
                        return X % 3 == 0;
                      case x.Patterns.PATTERN011:
                        return (W + X) % 3 == 0;
                      case x.Patterns.PATTERN100:
                        return (Math.floor(W / 2) + Math.floor(X / 3)) % 2 == 0;
                      case x.Patterns.PATTERN101:
                        return ((W * X) % 2) + ((W * X) % 3) == 0;
                      case x.Patterns.PATTERN110:
                        return (((W * X) % 2) + ((W * X) % 3)) % 2 == 0;
                      case x.Patterns.PATTERN111:
                        return (((W * X) % 3) + ((W + X) % 2)) % 2 == 0;
                      default:
                        throw Error("bad maskPattern:" + s);
                    }
                  })(s, et, ee)
                );
        }),
        (x.getBestMask = function (s, W) {
          let X = Object.keys(x.Patterns).length,
            ee = 0,
            et = 1 / 0;
          for (let er = 0; er < X; er++) {
            W(er), x.applyMask(er, s);
            let X =
              x.getPenaltyN1(s) +
              x.getPenaltyN2(s) +
              x.getPenaltyN3(s) +
              x.getPenaltyN4(s);
            x.applyMask(er, s), X < et && ((et = X), (ee = er));
          }
          return ee;
        });
    },
    76910: function (s, x, W) {
      let X = W(43114),
        ee = W(7007);
      (x.NUMERIC = { id: "Numeric", bit: 1, ccBits: [10, 12, 14] }),
        (x.ALPHANUMERIC = { id: "Alphanumeric", bit: 2, ccBits: [9, 11, 13] }),
        (x.BYTE = { id: "Byte", bit: 4, ccBits: [8, 16, 16] }),
        (x.KANJI = { id: "Kanji", bit: 8, ccBits: [8, 10, 12] }),
        (x.MIXED = { bit: -1 }),
        (x.getCharCountIndicator = function (s, x) {
          if (!s.ccBits) throw Error("Invalid mode: " + s);
          if (!X.isValid(x)) throw Error("Invalid version: " + x);
          return x >= 1 && x < 10
            ? s.ccBits[0]
            : x < 27
            ? s.ccBits[1]
            : s.ccBits[2];
        }),
        (x.getBestModeForData = function (s) {
          return ee.testNumeric(s)
            ? x.NUMERIC
            : ee.testAlphanumeric(s)
            ? x.ALPHANUMERIC
            : ee.testKanji(s)
            ? x.KANJI
            : x.BYTE;
        }),
        (x.toString = function (s) {
          if (s && s.id) return s.id;
          throw Error("Invalid mode");
        }),
        (x.isValid = function (s) {
          return s && s.bit && s.ccBits;
        }),
        (x.from = function (s, W) {
          if (x.isValid(s)) return s;
          try {
            return (function (s) {
              if ("string" != typeof s) throw Error("Param is not a string");
              let W = s.toLowerCase();
              switch (W) {
                case "numeric":
                  return x.NUMERIC;
                case "alphanumeric":
                  return x.ALPHANUMERIC;
                case "kanji":
                  return x.KANJI;
                case "byte":
                  return x.BYTE;
                default:
                  throw Error("Unknown mode: " + s);
              }
            })(s);
          } catch (s) {
            return W;
          }
        });
    },
    41085: function (s, x, W) {
      let X = W(76910);
      function NumericData(s) {
        (this.mode = X.NUMERIC), (this.data = s.toString());
      }
      (NumericData.getBitsLength = function (s) {
        return 10 * Math.floor(s / 3) + (s % 3 ? (s % 3) * 3 + 1 : 0);
      }),
        (NumericData.prototype.getLength = function () {
          return this.data.length;
        }),
        (NumericData.prototype.getBitsLength = function () {
          return NumericData.getBitsLength(this.data.length);
        }),
        (NumericData.prototype.write = function (s) {
          let x, W;
          for (x = 0; x + 3 <= this.data.length; x += 3)
            (W = parseInt(this.data.substr(x, 3), 10)), s.put(W, 10);
          let X = this.data.length - x;
          X > 0 &&
            ((W = parseInt(this.data.substr(x), 10)), s.put(W, 3 * X + 1));
        }),
        (s.exports = NumericData);
    },
    26143: function (s, x, W) {
      let X = W(69729);
      (x.mul = function (s, x) {
        let W = new Uint8Array(s.length + x.length - 1);
        for (let ee = 0; ee < s.length; ee++)
          for (let et = 0; et < x.length; et++)
            W[ee + et] ^= X.mul(s[ee], x[et]);
        return W;
      }),
        (x.mod = function (s, x) {
          let W = new Uint8Array(s);
          for (; W.length - x.length >= 0; ) {
            let s = W[0];
            for (let ee = 0; ee < x.length; ee++) W[ee] ^= X.mul(x[ee], s);
            let ee = 0;
            for (; ee < W.length && 0 === W[ee]; ) ee++;
            W = W.slice(ee);
          }
          return W;
        }),
        (x.generateECPolynomial = function (s) {
          let W = new Uint8Array([1]);
          for (let ee = 0; ee < s; ee++)
            W = x.mul(W, new Uint8Array([1, X.exp(ee)]));
          return W;
        });
    },
    95115: function (s, x, W) {
      let X = W(10242),
        ee = W(64908),
        et = W(97245),
        er = W(73280),
        ei = W(21845),
        eo = W(76526),
        ea = W(27126),
        es = W(35393),
        el = W(52882),
        ec = W(23103),
        eu = W(61642),
        ed = W(76910),
        eh = W(16130);
      function setupFormatInfo(s, x, W) {
        let X, ee;
        let et = s.size,
          er = eu.getEncodedBits(x, W);
        for (X = 0; X < 15; X++)
          (ee = ((er >> X) & 1) == 1),
            X < 6
              ? s.set(X, 8, ee, !0)
              : X < 8
              ? s.set(X + 1, 8, ee, !0)
              : s.set(et - 15 + X, 8, ee, !0),
            X < 8
              ? s.set(8, et - X - 1, ee, !0)
              : X < 9
              ? s.set(8, 15 - X - 1 + 1, ee, !0)
              : s.set(8, 15 - X - 1, ee, !0);
        s.set(et - 8, 8, 1, !0);
      }
      x.create = function (s, x) {
        let W, eu;
        if (void 0 === s || "" === s) throw Error("No input text");
        let ep = ee.M;
        return (
          void 0 !== x &&
            ((ep = ee.from(x.errorCorrectionLevel, ee.M)),
            (W = ec.from(x.version)),
            (eu = ea.from(x.maskPattern)),
            x.toSJISFunc && X.setToSJISFunction(x.toSJISFunc)),
          (function (s, x, W, ee) {
            let eu;
            if (Array.isArray(s)) eu = eh.fromArray(s);
            else if ("string" == typeof s) {
              let X = x;
              if (!X) {
                let x = eh.rawSplit(s);
                X = ec.getBestVersionForData(x, W);
              }
              eu = eh.fromString(s, X || 40);
            } else throw Error("Invalid data");
            let ep = ec.getBestVersionForData(eu, W);
            if (!ep)
              throw Error(
                "The amount of data is too big to be stored in a QR Code"
              );
            if (x) {
              if (x < ep)
                throw Error(
                  "\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " +
                    ep +
                    ".\n"
                );
            } else x = ep;
            let ef = (function (s, x, W) {
                let ee = new et();
                W.forEach(function (x) {
                  ee.put(x.mode.bit, 4),
                    ee.put(x.getLength(), ed.getCharCountIndicator(x.mode, s)),
                    x.write(ee);
                });
                let er = X.getSymbolTotalCodewords(s),
                  ei = es.getTotalCodewordsCount(s, x),
                  eo = (er - ei) * 8;
                for (
                  ee.getLengthInBits() + 4 <= eo && ee.put(0, 4);
                  ee.getLengthInBits() % 8 != 0;

                )
                  ee.putBit(0);
                let ea = (eo - ee.getLengthInBits()) / 8;
                for (let s = 0; s < ea; s++) ee.put(s % 2 ? 17 : 236, 8);
                return (function (s, x, W) {
                  let ee, et;
                  let er = X.getSymbolTotalCodewords(x),
                    ei = es.getTotalCodewordsCount(x, W),
                    eo = er - ei,
                    ea = es.getBlocksCount(x, W),
                    ec = er % ea,
                    eu = ea - ec,
                    ed = Math.floor(er / ea),
                    eh = Math.floor(eo / ea),
                    ep = eh + 1,
                    ef = ed - eh,
                    eg = new el(ef),
                    em = 0,
                    ew = Array(ea),
                    eb = Array(ea),
                    ev = 0,
                    ey = new Uint8Array(s.buffer);
                  for (let s = 0; s < ea; s++) {
                    let x = s < eu ? eh : ep;
                    (ew[s] = ey.slice(em, em + x)),
                      (eb[s] = eg.encode(ew[s])),
                      (em += x),
                      (ev = Math.max(ev, x));
                  }
                  let e_ = new Uint8Array(er),
                    eC = 0;
                  for (ee = 0; ee < ev; ee++)
                    for (et = 0; et < ea; et++)
                      ee < ew[et].length && (e_[eC++] = ew[et][ee]);
                  for (ee = 0; ee < ef; ee++)
                    for (et = 0; et < ea; et++) e_[eC++] = eb[et][ee];
                  return e_;
                })(ee, s, x);
              })(x, W, eu),
              eg = X.getSymbolSize(x),
              em = new er(eg);
            return (
              (function (s, x) {
                let W = s.size,
                  X = eo.getPositions(x);
                for (let x = 0; x < X.length; x++) {
                  let ee = X[x][0],
                    et = X[x][1];
                  for (let x = -1; x <= 7; x++)
                    if (!(ee + x <= -1) && !(W <= ee + x))
                      for (let X = -1; X <= 7; X++)
                        et + X <= -1 ||
                          W <= et + X ||
                          ((x >= 0 && x <= 6 && (0 === X || 6 === X)) ||
                          (X >= 0 && X <= 6 && (0 === x || 6 === x)) ||
                          (x >= 2 && x <= 4 && X >= 2 && X <= 4)
                            ? s.set(ee + x, et + X, !0, !0)
                            : s.set(ee + x, et + X, !1, !0));
                }
              })(em, x),
              (function (s) {
                let x = s.size;
                for (let W = 8; W < x - 8; W++) {
                  let x = W % 2 == 0;
                  s.set(W, 6, x, !0), s.set(6, W, x, !0);
                }
              })(em),
              (function (s, x) {
                let W = ei.getPositions(x);
                for (let x = 0; x < W.length; x++) {
                  let X = W[x][0],
                    ee = W[x][1];
                  for (let x = -2; x <= 2; x++)
                    for (let W = -2; W <= 2; W++)
                      -2 === x ||
                      2 === x ||
                      -2 === W ||
                      2 === W ||
                      (0 === x && 0 === W)
                        ? s.set(X + x, ee + W, !0, !0)
                        : s.set(X + x, ee + W, !1, !0);
                }
              })(em, x),
              setupFormatInfo(em, W, 0),
              x >= 7 &&
                (function (s, x) {
                  let W, X, ee;
                  let et = s.size,
                    er = ec.getEncodedBits(x);
                  for (let x = 0; x < 18; x++)
                    (W = Math.floor(x / 3)),
                      (X = (x % 3) + et - 8 - 3),
                      (ee = ((er >> x) & 1) == 1),
                      s.set(W, X, ee, !0),
                      s.set(X, W, ee, !0);
                })(em, x),
              (function (s, x) {
                let W = s.size,
                  X = -1,
                  ee = W - 1,
                  et = 7,
                  er = 0;
                for (let ei = W - 1; ei > 0; ei -= 2)
                  for (6 === ei && ei--; ; ) {
                    for (let W = 0; W < 2; W++)
                      if (!s.isReserved(ee, ei - W)) {
                        let X = !1;
                        er < x.length && (X = ((x[er] >>> et) & 1) == 1),
                          s.set(ee, ei - W, X),
                          -1 == --et && (er++, (et = 7));
                      }
                    if ((ee += X) < 0 || W <= ee) {
                      (ee -= X), (X = -X);
                      break;
                    }
                  }
              })(em, ef),
              isNaN(ee) &&
                (ee = ea.getBestMask(em, setupFormatInfo.bind(null, em, W))),
              ea.applyMask(ee, em),
              setupFormatInfo(em, W, ee),
              {
                modules: em,
                version: x,
                errorCorrectionLevel: W,
                maskPattern: ee,
                segments: eu,
              }
            );
          })(s, W, ep, eu)
        );
      };
    },
    52882: function (s, x, W) {
      let X = W(26143);
      function ReedSolomonEncoder(s) {
        (this.genPoly = void 0),
          (this.degree = s),
          this.degree && this.initialize(this.degree);
      }
      (ReedSolomonEncoder.prototype.initialize = function (s) {
        (this.degree = s), (this.genPoly = X.generateECPolynomial(this.degree));
      }),
        (ReedSolomonEncoder.prototype.encode = function (s) {
          if (!this.genPoly) throw Error("Encoder not initialized");
          let x = new Uint8Array(s.length + this.degree);
          x.set(s);
          let W = X.mod(x, this.genPoly),
            ee = this.degree - W.length;
          if (ee > 0) {
            let s = new Uint8Array(this.degree);
            return s.set(W, ee), s;
          }
          return W;
        }),
        (s.exports = ReedSolomonEncoder);
    },
    7007: function (s, x) {
      let W = "[0-9]+",
        X =
          "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";
      X = X.replace(/u/g, "\\u");
      let ee = "(?:(?![A-Z0-9 $%*+\\-./:]|" + X + ")(?:.|[\r\n]))+";
      (x.KANJI = RegExp(X, "g")),
        (x.BYTE_KANJI = RegExp("[^A-Z0-9 $%*+\\-./:]+", "g")),
        (x.BYTE = RegExp(ee, "g")),
        (x.NUMERIC = RegExp(W, "g")),
        (x.ALPHANUMERIC = RegExp("[A-Z $%*+\\-./:]+", "g"));
      let et = RegExp("^" + X + "$"),
        er = RegExp("^" + W + "$"),
        ei = RegExp("^[A-Z0-9 $%*+\\-./:]+$");
      (x.testKanji = function (s) {
        return et.test(s);
      }),
        (x.testNumeric = function (s) {
          return er.test(s);
        }),
        (x.testAlphanumeric = function (s) {
          return ei.test(s);
        });
    },
    16130: function (s, x, W) {
      let X = W(76910),
        ee = W(41085),
        et = W(8260),
        er = W(43424),
        ei = W(35442),
        eo = W(7007),
        ea = W(10242),
        es = W(65987);
      function getStringByteLength(s) {
        return unescape(encodeURIComponent(s)).length;
      }
      function getSegments(s, x, W) {
        let X;
        let ee = [];
        for (; null !== (X = s.exec(W)); )
          ee.push({ data: X[0], index: X.index, mode: x, length: X[0].length });
        return ee;
      }
      function getSegmentsFromString(s) {
        let x, W;
        let ee = getSegments(eo.NUMERIC, X.NUMERIC, s),
          et = getSegments(eo.ALPHANUMERIC, X.ALPHANUMERIC, s);
        ea.isKanjiModeEnabled()
          ? ((x = getSegments(eo.BYTE, X.BYTE, s)),
            (W = getSegments(eo.KANJI, X.KANJI, s)))
          : ((x = getSegments(eo.BYTE_KANJI, X.BYTE, s)), (W = []));
        let er = ee.concat(et, x, W);
        return er
          .sort(function (s, x) {
            return s.index - x.index;
          })
          .map(function (s) {
            return { data: s.data, mode: s.mode, length: s.length };
          });
      }
      function getSegmentBitsLength(s, x) {
        switch (x) {
          case X.NUMERIC:
            return ee.getBitsLength(s);
          case X.ALPHANUMERIC:
            return et.getBitsLength(s);
          case X.KANJI:
            return ei.getBitsLength(s);
          case X.BYTE:
            return er.getBitsLength(s);
        }
      }
      function buildSingleSegment(s, x) {
        let W;
        let eo = X.getBestModeForData(s);
        if ((W = X.from(x, eo)) !== X.BYTE && W.bit < eo.bit)
          throw Error(
            '"' +
              s +
              '" cannot be encoded with mode ' +
              X.toString(W) +
              ".\n Suggested mode is: " +
              X.toString(eo)
          );
        switch ((W !== X.KANJI || ea.isKanjiModeEnabled() || (W = X.BYTE), W)) {
          case X.NUMERIC:
            return new ee(s);
          case X.ALPHANUMERIC:
            return new et(s);
          case X.KANJI:
            return new ei(s);
          case X.BYTE:
            return new er(s);
        }
      }
      (x.fromArray = function (s) {
        return s.reduce(function (s, x) {
          return (
            "string" == typeof x
              ? s.push(buildSingleSegment(x, null))
              : x.data && s.push(buildSingleSegment(x.data, x.mode)),
            s
          );
        }, []);
      }),
        (x.fromString = function (s, W) {
          let ee = getSegmentsFromString(s, ea.isKanjiModeEnabled()),
            et = (function (s) {
              let x = [];
              for (let W = 0; W < s.length; W++) {
                let ee = s[W];
                switch (ee.mode) {
                  case X.NUMERIC:
                    x.push([
                      ee,
                      {
                        data: ee.data,
                        mode: X.ALPHANUMERIC,
                        length: ee.length,
                      },
                      { data: ee.data, mode: X.BYTE, length: ee.length },
                    ]);
                    break;
                  case X.ALPHANUMERIC:
                    x.push([
                      ee,
                      { data: ee.data, mode: X.BYTE, length: ee.length },
                    ]);
                    break;
                  case X.KANJI:
                    x.push([
                      ee,
                      {
                        data: ee.data,
                        mode: X.BYTE,
                        length: getStringByteLength(ee.data),
                      },
                    ]);
                    break;
                  case X.BYTE:
                    x.push([
                      {
                        data: ee.data,
                        mode: X.BYTE,
                        length: getStringByteLength(ee.data),
                      },
                    ]);
                }
              }
              return x;
            })(ee),
            er = (function (s, x) {
              let W = {},
                ee = { start: {} },
                et = ["start"];
              for (let er = 0; er < s.length; er++) {
                let ei = s[er],
                  eo = [];
                for (let s = 0; s < ei.length; s++) {
                  let ea = ei[s],
                    es = "" + er + s;
                  eo.push(es),
                    (W[es] = { node: ea, lastCount: 0 }),
                    (ee[es] = {});
                  for (let s = 0; s < et.length; s++) {
                    let er = et[s];
                    W[er] && W[er].node.mode === ea.mode
                      ? ((ee[er][es] =
                          getSegmentBitsLength(
                            W[er].lastCount + ea.length,
                            ea.mode
                          ) - getSegmentBitsLength(W[er].lastCount, ea.mode)),
                        (W[er].lastCount += ea.length))
                      : (W[er] && (W[er].lastCount = ea.length),
                        (ee[er][es] =
                          getSegmentBitsLength(ea.length, ea.mode) +
                          4 +
                          X.getCharCountIndicator(ea.mode, x)));
                  }
                }
                et = eo;
              }
              for (let s = 0; s < et.length; s++) ee[et[s]].end = 0;
              return { map: ee, table: W };
            })(et, W),
            ei = es.find_path(er.map, "start", "end"),
            eo = [];
          for (let s = 1; s < ei.length - 1; s++) eo.push(er.table[ei[s]].node);
          return x.fromArray(
            eo.reduce(function (s, x) {
              let W = s.length - 1 >= 0 ? s[s.length - 1] : null;
              return (
                W && W.mode === x.mode
                  ? (s[s.length - 1].data += x.data)
                  : s.push(x),
                s
              );
            }, [])
          );
        }),
        (x.rawSplit = function (s) {
          return x.fromArray(getSegmentsFromString(s, ea.isKanjiModeEnabled()));
        });
    },
    10242: function (s, x) {
      let W;
      let X = [
        0, 26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581,
        655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706, 1828,
        1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532,
        3706,
      ];
      (x.getSymbolSize = function (s) {
        if (!s) throw Error('"version" cannot be null or undefined');
        if (s < 1 || s > 40)
          throw Error('"version" should be in range from 1 to 40');
        return 4 * s + 17;
      }),
        (x.getSymbolTotalCodewords = function (s) {
          return X[s];
        }),
        (x.getBCHDigit = function (s) {
          let x = 0;
          for (; 0 !== s; ) x++, (s >>>= 1);
          return x;
        }),
        (x.setToSJISFunction = function (s) {
          if ("function" != typeof s)
            throw Error('"toSJISFunc" is not a valid function.');
          W = s;
        }),
        (x.isKanjiModeEnabled = function () {
          return void 0 !== W;
        }),
        (x.toSJIS = function (s) {
          return W(s);
        });
    },
    43114: function (s, x) {
      x.isValid = function (s) {
        return !isNaN(s) && s >= 1 && s <= 40;
      };
    },
    23103: function (s, x, W) {
      let X = W(10242),
        ee = W(35393),
        et = W(64908),
        er = W(76910),
        ei = W(43114),
        eo = X.getBCHDigit(7973);
      function getReservedBitsCount(s, x) {
        return er.getCharCountIndicator(s, x) + 4;
      }
      (x.from = function (s, x) {
        return ei.isValid(s) ? parseInt(s, 10) : x;
      }),
        (x.getCapacity = function (s, x, W) {
          if (!ei.isValid(s)) throw Error("Invalid QR Code version");
          void 0 === W && (W = er.BYTE);
          let et = X.getSymbolTotalCodewords(s),
            eo = ee.getTotalCodewordsCount(s, x),
            ea = (et - eo) * 8;
          if (W === er.MIXED) return ea;
          let es = ea - getReservedBitsCount(W, s);
          switch (W) {
            case er.NUMERIC:
              return Math.floor((es / 10) * 3);
            case er.ALPHANUMERIC:
              return Math.floor((es / 11) * 2);
            case er.KANJI:
              return Math.floor(es / 13);
            case er.BYTE:
            default:
              return Math.floor(es / 8);
          }
        }),
        (x.getBestVersionForData = function (s, W) {
          let X;
          let ee = et.from(W, et.M);
          if (Array.isArray(s)) {
            if (s.length > 1)
              return (function (s, W) {
                for (let X = 1; X <= 40; X++) {
                  let ee = (function (s, x) {
                    let W = 0;
                    return (
                      s.forEach(function (s) {
                        let X = getReservedBitsCount(s.mode, x);
                        W += X + s.getBitsLength();
                      }),
                      W
                    );
                  })(s, X);
                  if (ee <= x.getCapacity(X, W, er.MIXED)) return X;
                }
              })(s, ee);
            if (0 === s.length) return 1;
            X = s[0];
          } else X = s;
          return (function (s, W, X) {
            for (let ee = 1; ee <= 40; ee++)
              if (W <= x.getCapacity(ee, X, s)) return ee;
          })(X.mode, X.getLength(), ee);
        }),
        (x.getEncodedBits = function (s) {
          if (!ei.isValid(s) || s < 7) throw Error("Invalid QR Code version");
          let x = s << 12;
          for (; X.getBCHDigit(x) - eo >= 0; )
            x ^= 7973 << (X.getBCHDigit(x) - eo);
          return (s << 12) | x;
        });
    },
    6907: function (s, x, W) {
      let X = W(89653);
      (x.render = function (s, x, W) {
        var ee;
        let et = W,
          er = x;
        void 0 !== et || (x && x.getContext) || ((et = x), (x = void 0)),
          x ||
            (er = (function () {
              try {
                return document.createElement("canvas");
              } catch (s) {
                throw Error("You need to specify a canvas element");
              }
            })()),
          (et = X.getOptions(et));
        let ei = X.getImageWidth(s.modules.size, et),
          eo = er.getContext("2d"),
          ea = eo.createImageData(ei, ei);
        return (
          X.qrToImageData(ea.data, s, et),
          (ee = er),
          eo.clearRect(0, 0, ee.width, ee.height),
          ee.style || (ee.style = {}),
          (ee.height = ei),
          (ee.width = ei),
          (ee.style.height = ei + "px"),
          (ee.style.width = ei + "px"),
          eo.putImageData(ea, 0, 0),
          er
        );
      }),
        (x.renderToDataURL = function (s, W, X) {
          let ee = X;
          void 0 !== ee || (W && W.getContext) || ((ee = W), (W = void 0)),
            ee || (ee = {});
          let et = x.render(s, W, ee),
            er = ee.type || "image/png",
            ei = ee.rendererOpts || {};
          return et.toDataURL(er, ei.quality);
        });
    },
    93776: function (s, x, W) {
      let X = W(89653);
      function getColorAttrib(s, x) {
        let W = s.a / 255,
          X = x + '="' + s.hex + '"';
        return W < 1
          ? X + " " + x + '-opacity="' + W.toFixed(2).slice(1) + '"'
          : X;
      }
      function svgCmd(s, x, W) {
        let X = s + x;
        return void 0 !== W && (X += " " + W), X;
      }
      x.render = function (s, x, W) {
        let ee = X.getOptions(x),
          et = s.modules.size,
          er = s.modules.data,
          ei = et + 2 * ee.margin,
          eo = ee.color.light.a
            ? "<path " +
              getColorAttrib(ee.color.light, "fill") +
              ' d="M0 0h' +
              ei +
              "v" +
              ei +
              'H0z"/>'
            : "",
          ea =
            "<path " +
            getColorAttrib(ee.color.dark, "stroke") +
            ' d="' +
            (function (s, x, W) {
              let X = "",
                ee = 0,
                et = !1,
                er = 0;
              for (let ei = 0; ei < s.length; ei++) {
                let eo = Math.floor(ei % x),
                  ea = Math.floor(ei / x);
                eo || et || (et = !0),
                  s[ei]
                    ? (er++,
                      (ei > 0 && eo > 0 && s[ei - 1]) ||
                        ((X += et
                          ? svgCmd("M", eo + W, 0.5 + ea + W)
                          : svgCmd("m", ee, 0)),
                        (ee = 0),
                        (et = !1)),
                      (eo + 1 < x && s[ei + 1]) ||
                        ((X += svgCmd("h", er)), (er = 0)))
                    : ee++;
              }
              return X;
            })(er, et, ee.margin) +
            '"/>',
          es = ee.width
            ? 'width="' + ee.width + '" height="' + ee.width + '" '
            : "",
          el =
            '<svg xmlns="http://www.w3.org/2000/svg" ' +
            es +
            ('viewBox="0 0 ' + ei) +
            " " +
            ei +
            '" shape-rendering="crispEdges">' +
            eo +
            ea +
            "</svg>\n";
        return "function" == typeof W && W(null, el), el;
      };
    },
    89653: function (s, x) {
      function hex2rgba(s) {
        if (("number" == typeof s && (s = s.toString()), "string" != typeof s))
          throw Error("Color should be defined as hex string");
        let x = s.slice().replace("#", "").split("");
        if (x.length < 3 || 5 === x.length || x.length > 8)
          throw Error("Invalid hex color: " + s);
        (3 === x.length || 4 === x.length) &&
          (x = Array.prototype.concat.apply(
            [],
            x.map(function (s) {
              return [s, s];
            })
          )),
          6 === x.length && x.push("F", "F");
        let W = parseInt(x.join(""), 16);
        return {
          r: (W >> 24) & 255,
          g: (W >> 16) & 255,
          b: (W >> 8) & 255,
          a: 255 & W,
          hex: "#" + x.slice(0, 6).join(""),
        };
      }
      (x.getOptions = function (s) {
        s || (s = {}), s.color || (s.color = {});
        let x =
            void 0 === s.margin || null === s.margin || s.margin < 0
              ? 4
              : s.margin,
          W = s.width && s.width >= 21 ? s.width : void 0,
          X = s.scale || 4;
        return {
          width: W,
          scale: W ? 4 : X,
          margin: x,
          color: {
            dark: hex2rgba(s.color.dark || "#000000ff"),
            light: hex2rgba(s.color.light || "#ffffffff"),
          },
          type: s.type,
          rendererOpts: s.rendererOpts || {},
        };
      }),
        (x.getScale = function (s, x) {
          return x.width && x.width >= s + 2 * x.margin
            ? x.width / (s + 2 * x.margin)
            : x.scale;
        }),
        (x.getImageWidth = function (s, W) {
          let X = x.getScale(s, W);
          return Math.floor((s + 2 * W.margin) * X);
        }),
        (x.qrToImageData = function (s, W, X) {
          let ee = W.modules.size,
            et = W.modules.data,
            er = x.getScale(ee, X),
            ei = Math.floor((ee + 2 * X.margin) * er),
            eo = X.margin * er,
            ea = [X.color.light, X.color.dark];
          for (let x = 0; x < ei; x++)
            for (let W = 0; W < ei; W++) {
              let es = (x * ei + W) * 4,
                el = X.color.light;
              if (x >= eo && W >= eo && x < ei - eo && W < ei - eo) {
                let s = Math.floor((x - eo) / er),
                  X = Math.floor((W - eo) / er);
                el = ea[et[s * ee + X] ? 1 : 0];
              }
              (s[es++] = el.r),
                (s[es++] = el.g),
                (s[es++] = el.b),
                (s[es] = el.a);
            }
        });
    },
    85346: function (s) {
      "use strict";
      function tryStringify(s) {
        try {
          return JSON.stringify(s);
        } catch (s) {
          return '"[Circular]"';
        }
      }
      s.exports = function (s, x, W) {
        var X = (W && W.stringify) || tryStringify;
        if ("object" == typeof s && null !== s) {
          var ee = x.length + 1;
          if (1 === ee) return s;
          var et = Array(ee);
          et[0] = X(s);
          for (var er = 1; er < ee; er++) et[er] = X(x[er]);
          return et.join(" ");
        }
        if ("string" != typeof s) return s;
        var ei = x.length;
        if (0 === ei) return s;
        for (
          var eo = "", ea = 0, es = -1, el = (s && s.length) || 0, ec = 0;
          ec < el;

        ) {
          if (37 === s.charCodeAt(ec) && ec + 1 < el) {
            switch (((es = es > -1 ? es : 0), s.charCodeAt(ec + 1))) {
              case 100:
              case 102:
                if (ea >= ei || null == x[ea]) break;
                es < ec && (eo += s.slice(es, ec)),
                  (eo += Number(x[ea])),
                  (es = ec + 2),
                  ec++;
                break;
              case 105:
                if (ea >= ei || null == x[ea]) break;
                es < ec && (eo += s.slice(es, ec)),
                  (eo += Math.floor(Number(x[ea]))),
                  (es = ec + 2),
                  ec++;
                break;
              case 79:
              case 111:
              case 106:
                if (ea >= ei || void 0 === x[ea]) break;
                es < ec && (eo += s.slice(es, ec));
                var eu = typeof x[ea];
                if ("string" === eu) {
                  (eo += "'" + x[ea] + "'"), (es = ec + 2), ec++;
                  break;
                }
                if ("function" === eu) {
                  (eo += x[ea].name || "<anonymous>"), (es = ec + 2), ec++;
                  break;
                }
                (eo += X(x[ea])), (es = ec + 2), ec++;
                break;
              case 115:
                if (ea >= ei) break;
                es < ec && (eo += s.slice(es, ec)),
                  (eo += String(x[ea])),
                  (es = ec + 2),
                  ec++;
                break;
              case 37:
                es < ec && (eo += s.slice(es, ec)),
                  (eo += "%"),
                  (es = ec + 2),
                  ec++,
                  ea--;
            }
            ++ea;
          }
          ++ec;
        }
        return -1 === es ? s : (es < el && (eo += s.slice(es)), eo);
      };
    },
    84415: function (s, x) {
      "use strict";
      /**
       * @license React
       * react-is.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */ var W = Symbol.for("react.element"),
        X = Symbol.for("react.portal"),
        ee = Symbol.for("react.fragment"),
        et = Symbol.for("react.strict_mode"),
        er = Symbol.for("react.profiler"),
        ei = Symbol.for("react.provider"),
        eo = Symbol.for("react.context"),
        ea = Symbol.for("react.server_context"),
        es = Symbol.for("react.forward_ref"),
        el = Symbol.for("react.suspense"),
        ec = Symbol.for("react.suspense_list"),
        eu = Symbol.for("react.memo"),
        ed = Symbol.for("react.lazy");
      Symbol.for("react.offscreen"),
        Symbol.for("react.module.reference"),
        (x.isFragment = function (s) {
          return (
            (function (s) {
              if ("object" == typeof s && null !== s) {
                var x = s.$$typeof;
                switch (x) {
                  case W:
                    switch ((s = s.type)) {
                      case ee:
                      case er:
                      case et:
                      case el:
                      case ec:
                        return s;
                      default:
                        switch ((s = s && s.$$typeof)) {
                          case ea:
                          case eo:
                          case es:
                          case ed:
                          case eu:
                          case ei:
                            return s;
                          default:
                            return x;
                        }
                    }
                  case X:
                    return x;
                }
              }
            })(s) === ee
          );
        });
    },
    14954: function (s, x, W) {
      "use strict";
      s.exports = W(84415);
    },
    69921: function (s, x) {
      "use strict";
      /** @license React v16.13.1
       * react-is.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */ var W = "function" == typeof Symbol && Symbol.for,
        X = W ? Symbol.for("react.element") : 60103,
        ee = W ? Symbol.for("react.portal") : 60106,
        et = W ? Symbol.for("react.fragment") : 60107,
        er = W ? Symbol.for("react.strict_mode") : 60108,
        ei = W ? Symbol.for("react.profiler") : 60114,
        eo = W ? Symbol.for("react.provider") : 60109,
        ea = W ? Symbol.for("react.context") : 60110,
        es = W ? Symbol.for("react.async_mode") : 60111,
        el = W ? Symbol.for("react.concurrent_mode") : 60111,
        ec = W ? Symbol.for("react.forward_ref") : 60112,
        eu = W ? Symbol.for("react.suspense") : 60113,
        ed = W ? Symbol.for("react.suspense_list") : 60120,
        eh = W ? Symbol.for("react.memo") : 60115,
        ep = W ? Symbol.for("react.lazy") : 60116,
        ef = W ? Symbol.for("react.block") : 60121,
        eg = W ? Symbol.for("react.fundamental") : 60117,
        em = W ? Symbol.for("react.responder") : 60118,
        ew = W ? Symbol.for("react.scope") : 60119;
      function z(s) {
        if ("object" == typeof s && null !== s) {
          var x = s.$$typeof;
          switch (x) {
            case X:
              switch ((s = s.type)) {
                case es:
                case el:
                case et:
                case ei:
                case er:
                case eu:
                  return s;
                default:
                  switch ((s = s && s.$$typeof)) {
                    case ea:
                    case ec:
                    case ep:
                    case eh:
                    case eo:
                      return s;
                    default:
                      return x;
                  }
              }
            case ee:
              return x;
          }
        }
      }
      function A(s) {
        return z(s) === el;
      }
      (x.AsyncMode = es),
        (x.ConcurrentMode = el),
        (x.ContextConsumer = ea),
        (x.ContextProvider = eo),
        (x.Element = X),
        (x.ForwardRef = ec),
        (x.Fragment = et),
        (x.Lazy = ep),
        (x.Memo = eh),
        (x.Portal = ee),
        (x.Profiler = ei),
        (x.StrictMode = er),
        (x.Suspense = eu),
        (x.isAsyncMode = function (s) {
          return A(s) || z(s) === es;
        }),
        (x.isConcurrentMode = A),
        (x.isContextConsumer = function (s) {
          return z(s) === ea;
        }),
        (x.isContextProvider = function (s) {
          return z(s) === eo;
        }),
        (x.isElement = function (s) {
          return "object" == typeof s && null !== s && s.$$typeof === X;
        }),
        (x.isForwardRef = function (s) {
          return z(s) === ec;
        }),
        (x.isFragment = function (s) {
          return z(s) === et;
        }),
        (x.isLazy = function (s) {
          return z(s) === ep;
        }),
        (x.isMemo = function (s) {
          return z(s) === eh;
        }),
        (x.isPortal = function (s) {
          return z(s) === ee;
        }),
        (x.isProfiler = function (s) {
          return z(s) === ei;
        }),
        (x.isStrictMode = function (s) {
          return z(s) === er;
        }),
        (x.isSuspense = function (s) {
          return z(s) === eu;
        }),
        (x.isValidElementType = function (s) {
          return (
            "string" == typeof s ||
            "function" == typeof s ||
            s === et ||
            s === el ||
            s === ei ||
            s === er ||
            s === eu ||
            s === ed ||
            ("object" == typeof s &&
              null !== s &&
              (s.$$typeof === ep ||
                s.$$typeof === eh ||
                s.$$typeof === eo ||
                s.$$typeof === ea ||
                s.$$typeof === ec ||
                s.$$typeof === eg ||
                s.$$typeof === em ||
                s.$$typeof === ew ||
                s.$$typeof === ef))
          );
        }),
        (x.typeOf = z);
    },
    59864: function (s, x, W) {
      "use strict";
      s.exports = W(69921);
    },
    48477: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X = (function () {
          function defineProperties(s, x) {
            for (var W = 0; W < x.length; W++) {
              var X = x[W];
              (X.enumerable = X.enumerable || !1),
                (X.configurable = !0),
                "value" in X && (X.writable = !0),
                Object.defineProperty(s, X.key, X);
            }
          }
          return function (s, x, W) {
            return (
              x && defineProperties(s.prototype, x),
              W && defineProperties(s, W),
              s
            );
          };
        })(),
        ee = _interopRequireDefault(W(67294)),
        et = _interopRequireDefault(W(31093));
      function _interopRequireDefault(s) {
        return s && s.__esModule ? s : { default: s };
      }
      var er = (function (s) {
        function ButtonElement() {
          return (
            !(function (s, x) {
              if (!(s instanceof x))
                throw TypeError("Cannot call a class as a function");
            })(this, ButtonElement),
            (function (s, x) {
              if (!s)
                throw ReferenceError(
                  "this hasn't been initialised - super() hasn't been called"
                );
              return x && ("object" == typeof x || "function" == typeof x)
                ? x
                : s;
            })(
              this,
              (
                ButtonElement.__proto__ || Object.getPrototypeOf(ButtonElement)
              ).apply(this, arguments)
            )
          );
        }
        return (
          !(function (s, x) {
            if ("function" != typeof x && null !== x)
              throw TypeError(
                "Super expression must either be null or a function, not " +
                  typeof x
              );
            (s.prototype = Object.create(x && x.prototype, {
              constructor: {
                value: s,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              x &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(s, x)
                  : (s.__proto__ = x));
          })(ButtonElement, s),
          X(ButtonElement, [
            {
              key: "render",
              value: function () {
                return ee.default.createElement(
                  "button",
                  this.props,
                  this.props.children
                );
              },
            },
          ]),
          ButtonElement
        );
      })(ee.default.Component);
      x.default = (0, et.default)(er);
    },
    35343: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X =
          Object.assign ||
          function (s) {
            for (var x = 1; x < arguments.length; x++) {
              var W = arguments[x];
              for (var X in W)
                Object.prototype.hasOwnProperty.call(W, X) && (s[X] = W[X]);
            }
            return s;
          },
        ee = (function () {
          function defineProperties(s, x) {
            for (var W = 0; W < x.length; W++) {
              var X = x[W];
              (X.enumerable = X.enumerable || !1),
                (X.configurable = !0),
                "value" in X && (X.writable = !0),
                Object.defineProperty(s, X.key, X);
            }
          }
          return function (s, x, W) {
            return (
              x && defineProperties(s.prototype, x),
              W && defineProperties(s, W),
              s
            );
          };
        })(),
        et = _interopRequireDefault(W(67294)),
        er = _interopRequireDefault(W(18e3)),
        ei = _interopRequireDefault(W(45697));
      function _interopRequireDefault(s) {
        return s && s.__esModule ? s : { default: s };
      }
      var eo = (function (s) {
        function ElementWrapper() {
          return (
            !(function (s, x) {
              if (!(s instanceof x))
                throw TypeError("Cannot call a class as a function");
            })(this, ElementWrapper),
            (function (s, x) {
              if (!s)
                throw ReferenceError(
                  "this hasn't been initialised - super() hasn't been called"
                );
              return x && ("object" == typeof x || "function" == typeof x)
                ? x
                : s;
            })(
              this,
              (
                ElementWrapper.__proto__ ||
                Object.getPrototypeOf(ElementWrapper)
              ).apply(this, arguments)
            )
          );
        }
        return (
          !(function (s, x) {
            if ("function" != typeof x && null !== x)
              throw TypeError(
                "Super expression must either be null or a function, not " +
                  typeof x
              );
            (s.prototype = Object.create(x && x.prototype, {
              constructor: {
                value: s,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              x &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(s, x)
                  : (s.__proto__ = x));
          })(ElementWrapper, s),
          ee(ElementWrapper, [
            {
              key: "render",
              value: function () {
                var s = this,
                  x = X({}, this.props);
                return (
                  delete x.name,
                  x.parentBindings && delete x.parentBindings,
                  et.default.createElement(
                    "div",
                    X({}, x, {
                      ref: function (x) {
                        s.props.parentBindings.domNode = x;
                      },
                    }),
                    this.props.children
                  )
                );
              },
            },
          ]),
          ElementWrapper
        );
      })(et.default.Component);
      (eo.propTypes = { name: ei.default.string, id: ei.default.string }),
        (x.default = (0, er.default)(eo));
    },
    68939: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X = _interopRequireDefault(W(67294)),
        ee = _interopRequireDefault(W(31093));
      function _interopRequireDefault(s) {
        return s && s.__esModule ? s : { default: s };
      }
      function _possibleConstructorReturn(s, x) {
        if (!s)
          throw ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return x && ("object" == typeof x || "function" == typeof x) ? x : s;
      }
      var et = (function (s) {
        function LinkElement() {
          !(function (s, x) {
            if (!(s instanceof x))
              throw TypeError("Cannot call a class as a function");
          })(this, LinkElement);
          for (
            var s, x, W, ee = arguments.length, et = Array(ee), er = 0;
            er < ee;
            er++
          )
            et[er] = arguments[er];
          return (
            (x = W =
              _possibleConstructorReturn(
                this,
                (s =
                  LinkElement.__proto__ ||
                  Object.getPrototypeOf(LinkElement)).call.apply(
                  s,
                  [this].concat(et)
                )
              )),
            (W.render = function () {
              return X.default.createElement("a", W.props, W.props.children);
            }),
            _possibleConstructorReturn(W, x)
          );
        }
        return (
          !(function (s, x) {
            if ("function" != typeof x && null !== x)
              throw TypeError(
                "Super expression must either be null or a function, not " +
                  typeof x
              );
            (s.prototype = Object.create(x && x.prototype, {
              constructor: {
                value: s,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              x &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(s, x)
                  : (s.__proto__ = x));
          })(LinkElement, s),
          LinkElement
        );
      })(X.default.Component);
      x.default = (0, ee.default)(et);
    },
    66261: function (s, x, W) {
      "use strict";
      x.W_ = x.rU = void 0;
      var X = _interopRequireDefault(W(68939)),
        ee = _interopRequireDefault(W(48477)),
        et = _interopRequireDefault(W(35343)),
        er = _interopRequireDefault(W(82628)),
        ei = _interopRequireDefault(W(64592)),
        eo = _interopRequireDefault(W(87606)),
        ea = _interopRequireDefault(W(53200)),
        es = _interopRequireDefault(W(31093)),
        el = _interopRequireDefault(W(18e3)),
        ec = _interopRequireDefault(W(98482));
      function _interopRequireDefault(s) {
        return s && s.__esModule ? s : { default: s };
      }
      (x.rU = X.default),
        ee.default,
        (x.W_ = et.default),
        er.default,
        ei.default,
        eo.default,
        ea.default,
        es.default,
        el.default,
        ec.default,
        X.default,
        ee.default,
        et.default,
        er.default,
        ei.default,
        eo.default,
        ea.default,
        es.default,
        el.default,
        ec.default;
    },
    98482: function (s, x, W) {
      "use strict";
      var X =
          Object.assign ||
          function (s) {
            for (var x = 1; x < arguments.length; x++) {
              var W = arguments[x];
              for (var X in W)
                Object.prototype.hasOwnProperty.call(W, X) && (s[X] = W[X]);
            }
            return s;
          },
        ee = (function () {
          function defineProperties(s, x) {
            for (var W = 0; W < x.length; W++) {
              var X = x[W];
              (X.enumerable = X.enumerable || !1),
                (X.configurable = !0),
                "value" in X && (X.writable = !0),
                Object.defineProperty(s, X.key, X);
            }
          }
          return function (s, x, W) {
            return (
              x && defineProperties(s.prototype, x),
              W && defineProperties(s, W),
              s
            );
          };
        })();
      function _classCallCheck(s, x) {
        if (!(s instanceof x))
          throw TypeError("Cannot call a class as a function");
      }
      function _possibleConstructorReturn(s, x) {
        if (!s)
          throw ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return x && ("object" == typeof x || "function" == typeof x) ? x : s;
      }
      function _inherits(s, x) {
        if ("function" != typeof x && null !== x)
          throw TypeError(
            "Super expression must either be null or a function, not " +
              typeof x
          );
        (s.prototype = Object.create(x && x.prototype, {
          constructor: {
            value: s,
            enumerable: !1,
            writable: !0,
            configurable: !0,
          },
        })),
          x &&
            (Object.setPrototypeOf
              ? Object.setPrototypeOf(s, x)
              : (s.__proto__ = x));
      }
      var et = W(67294);
      W(73935), W(54259);
      var er = W(87606),
        ei = W(82628),
        eo = W(45697),
        ea = W(29678),
        es = {
          to: eo.string.isRequired,
          containerId: eo.string,
          container: eo.object,
          activeClass: eo.string,
          spy: eo.bool,
          smooth: eo.oneOfType([eo.bool, eo.string]),
          offset: eo.number,
          delay: eo.number,
          isDynamic: eo.bool,
          onClick: eo.func,
          duration: eo.oneOfType([eo.number, eo.func]),
          absolute: eo.bool,
          onSetActive: eo.func,
          onSetInactive: eo.func,
          ignoreCancelEvents: eo.bool,
          hashSpy: eo.bool,
          spyThrottle: eo.number,
        };
      s.exports = {
        Scroll: function (s, x) {
          console.warn("Helpers.Scroll is deprecated since v1.7.0");
          var W = x || ei,
            eo = (function (x) {
              function Scroll(s) {
                _classCallCheck(this, Scroll);
                var x = _possibleConstructorReturn(
                  this,
                  (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(
                    this,
                    s
                  )
                );
                return _initialiseProps.call(x), (x.state = { active: !1 }), x;
              }
              return (
                _inherits(Scroll, x),
                ee(Scroll, [
                  {
                    key: "getScrollSpyContainer",
                    value: function () {
                      var s = this.props.containerId,
                        x = this.props.container;
                      return s
                        ? document.getElementById(s)
                        : x && x.nodeType
                        ? x
                        : document;
                    },
                  },
                  {
                    key: "componentDidMount",
                    value: function () {
                      if (this.props.spy || this.props.hashSpy) {
                        var s = this.getScrollSpyContainer();
                        er.isMounted(s) || er.mount(s, this.props.spyThrottle),
                          this.props.hashSpy &&
                            (ea.isMounted() || ea.mount(W),
                            ea.mapContainer(this.props.to, s)),
                          this.props.spy &&
                            er.addStateHandler(this.stateHandler),
                          er.addSpyHandler(this.spyHandler, s),
                          this.setState({ container: s });
                      }
                    },
                  },
                  {
                    key: "componentWillUnmount",
                    value: function () {
                      er.unmount(this.stateHandler, this.spyHandler);
                    },
                  },
                  {
                    key: "render",
                    value: function () {
                      var x = "";
                      x =
                        this.state && this.state.active
                          ? (
                              (this.props.className || "") +
                              " " +
                              (this.props.activeClass || "active")
                            ).trim()
                          : this.props.className;
                      var W = X({}, this.props);
                      for (var ee in es) W.hasOwnProperty(ee) && delete W[ee];
                      return (
                        (W.className = x),
                        (W.onClick = this.handleClick),
                        et.createElement(s, W)
                      );
                    },
                  },
                ]),
                Scroll
              );
            })(et.Component),
            _initialiseProps = function () {
              var s = this;
              (this.scrollTo = function (x, ee) {
                W.scrollTo(x, X({}, s.state, ee));
              }),
                (this.handleClick = function (x) {
                  s.props.onClick && s.props.onClick(x),
                    x.stopPropagation && x.stopPropagation(),
                    x.preventDefault && x.preventDefault(),
                    s.scrollTo(s.props.to, s.props);
                }),
                (this.stateHandler = function () {
                  W.getActiveLink() !== s.props.to &&
                    (null !== s.state &&
                      s.state.active &&
                      s.props.onSetInactive &&
                      s.props.onSetInactive(),
                    s.setState({ active: !1 }));
                }),
                (this.spyHandler = function (x) {
                  var X = s.getScrollSpyContainer();
                  if (!ea.isMounted() || ea.isInitialized()) {
                    var ee = s.props.to,
                      et = null,
                      ei = 0,
                      eo = 0,
                      es = 0;
                    if (
                      (X.getBoundingClientRect &&
                        (es = X.getBoundingClientRect().top),
                      !et || s.props.isDynamic)
                    ) {
                      if (!(et = W.get(ee))) return;
                      var el = et.getBoundingClientRect();
                      eo = (ei = el.top - es + x) + el.height;
                    }
                    var ec = x - s.props.offset,
                      eu = ec >= Math.floor(ei) && ec < Math.floor(eo),
                      ed = ec < Math.floor(ei) || ec >= Math.floor(eo),
                      eh = W.getActiveLink();
                    return ed
                      ? (ee === eh && W.setActiveLink(void 0),
                        s.props.hashSpy &&
                          ea.getHash() === ee &&
                          ea.changeHash(),
                        s.props.spy &&
                          s.state.active &&
                          (s.setState({ active: !1 }),
                          s.props.onSetInactive && s.props.onSetInactive()),
                        er.updateStates())
                      : eu && eh !== ee
                      ? (W.setActiveLink(ee),
                        s.props.hashSpy && ea.changeHash(ee),
                        s.props.spy &&
                          (s.setState({ active: !0 }),
                          s.props.onSetActive && s.props.onSetActive(ee)),
                        er.updateStates())
                      : void 0;
                  }
                });
            };
          return (eo.propTypes = es), (eo.defaultProps = { offset: 0 }), eo;
        },
        Element: function (s) {
          console.warn("Helpers.Element is deprecated since v1.7.0");
          var x = (function (x) {
            function Element(s) {
              _classCallCheck(this, Element);
              var x = _possibleConstructorReturn(
                this,
                (Element.__proto__ || Object.getPrototypeOf(Element)).call(
                  this,
                  s
                )
              );
              return (x.childBindings = { domNode: null }), x;
            }
            return (
              _inherits(Element, x),
              ee(Element, [
                {
                  key: "componentDidMount",
                  value: function () {
                    if ("undefined" == typeof window) return !1;
                    this.registerElems(this.props.name);
                  },
                },
                {
                  key: "componentDidUpdate",
                  value: function (s) {
                    this.props.name !== s.name &&
                      this.registerElems(this.props.name);
                  },
                },
                {
                  key: "componentWillUnmount",
                  value: function () {
                    if ("undefined" == typeof window) return !1;
                    ei.unregister(this.props.name);
                  },
                },
                {
                  key: "registerElems",
                  value: function (s) {
                    ei.register(s, this.childBindings.domNode);
                  },
                },
                {
                  key: "render",
                  value: function () {
                    return et.createElement(
                      s,
                      X({}, this.props, { parentBindings: this.childBindings })
                    );
                  },
                },
              ]),
              Element
            );
          })(et.Component);
          return (x.propTypes = { name: eo.string, id: eo.string }), x;
        },
      };
    },
    53200: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X =
        Object.assign ||
        function (s) {
          for (var x = 1; x < arguments.length; x++) {
            var W = arguments[x];
            for (var X in W)
              Object.prototype.hasOwnProperty.call(W, X) && (s[X] = W[X]);
          }
          return s;
        };
      _interopRequireDefault(W(54259));
      var ee = _interopRequireDefault(W(89765)),
        et = _interopRequireDefault(W(50140)),
        er = _interopRequireDefault(W(64592));
      function _interopRequireDefault(s) {
        return s && s.__esModule ? s : { default: s };
      }
      var getAnimationType = function (s) {
          return ee.default[s.smooth] || ee.default.defaultEasing;
        },
        ei =
          (function () {
            if ("undefined" != typeof window)
              return (
                window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame
              );
          })() ||
          function (s, x, W) {
            window.setTimeout(s, W || 1e3 / 60, new Date().getTime());
          },
        makeData = function () {
          return {
            currentPosition: 0,
            startPosition: 0,
            targetPosition: 0,
            progress: 0,
            duration: 0,
            cancel: !1,
            target: null,
            containerElement: null,
            to: null,
            start: null,
            delta: null,
            percent: null,
            delayTimeout: null,
          };
        },
        currentPositionX = function (s) {
          var x = s.data.containerElement;
          if (x && x !== document && x !== document.body) return x.scrollLeft;
          var W = void 0 !== window.pageXOffset,
            X = "CSS1Compat" === (document.compatMode || "");
          return W
            ? window.pageXOffset
            : X
            ? document.documentElement.scrollLeft
            : document.body.scrollLeft;
        },
        currentPositionY = function (s) {
          var x = s.data.containerElement;
          if (x && x !== document && x !== document.body) return x.scrollTop;
          var W = void 0 !== window.pageXOffset,
            X = "CSS1Compat" === (document.compatMode || "");
          return W
            ? window.pageYOffset
            : X
            ? document.documentElement.scrollTop
            : document.body.scrollTop;
        },
        scrollContainerWidth = function (s) {
          var x = s.data.containerElement;
          if (x && x !== document && x !== document.body)
            return x.scrollWidth - x.offsetWidth;
          var W = document.body,
            X = document.documentElement;
          return Math.max(
            W.scrollWidth,
            W.offsetWidth,
            X.clientWidth,
            X.scrollWidth,
            X.offsetWidth
          );
        },
        scrollContainerHeight = function (s) {
          var x = s.data.containerElement;
          if (x && x !== document && x !== document.body)
            return x.scrollHeight - x.offsetHeight;
          var W = document.body,
            X = document.documentElement;
          return Math.max(
            W.scrollHeight,
            W.offsetHeight,
            X.clientHeight,
            X.scrollHeight,
            X.offsetHeight
          );
        },
        animateScroll = function animateScroll(s, x, W) {
          var X = x.data;
          if (!x.ignoreCancelEvents && X.cancel) {
            er.default.registered.end &&
              er.default.registered.end(X.to, X.target, X.currentPositionY);
            return;
          }
          if (
            ((X.delta = Math.round(X.targetPosition - X.startPosition)),
            null === X.start && (X.start = W),
            (X.progress = W - X.start),
            (X.percent =
              X.progress >= X.duration ? 1 : s(X.progress / X.duration)),
            (X.currentPosition =
              X.startPosition + Math.ceil(X.delta * X.percent)),
            X.containerElement &&
            X.containerElement !== document &&
            X.containerElement !== document.body
              ? x.horizontal
                ? (X.containerElement.scrollLeft = X.currentPosition)
                : (X.containerElement.scrollTop = X.currentPosition)
              : x.horizontal
              ? window.scrollTo(X.currentPosition, 0)
              : window.scrollTo(0, X.currentPosition),
            X.percent < 1)
          ) {
            var ee = animateScroll.bind(null, s, x);
            ei.call(window, ee);
            return;
          }
          er.default.registered.end &&
            er.default.registered.end(X.to, X.target, X.currentPosition);
        },
        setContainer = function (s) {
          s.data.containerElement = s
            ? s.containerId
              ? document.getElementById(s.containerId)
              : s.container && s.container.nodeType
              ? s.container
              : document
            : null;
        },
        animateTopScroll = function (s, x, W, X) {
          if (
            ((x.data = x.data || makeData()),
            window.clearTimeout(x.data.delayTimeout),
            et.default.subscribe(function () {
              x.data.cancel = !0;
            }),
            setContainer(x),
            (x.data.start = null),
            (x.data.cancel = !1),
            (x.data.startPosition = x.horizontal
              ? currentPositionX(x)
              : currentPositionY(x)),
            (x.data.targetPosition = x.absolute ? s : s + x.data.startPosition),
            x.data.startPosition === x.data.targetPosition)
          ) {
            er.default.registered.end &&
              er.default.registered.end(
                x.data.to,
                x.data.target,
                x.data.currentPosition
              );
            return;
          }
          (x.data.delta = Math.round(
            x.data.targetPosition - x.data.startPosition
          )),
            (x.data.duration = (
              "function" == typeof (ee = x.duration)
                ? ee
                : function () {
                    return ee;
                  }
            )(x.data.delta)),
            (x.data.duration = isNaN(parseFloat(x.data.duration))
              ? 1e3
              : parseFloat(x.data.duration)),
            (x.data.to = W),
            (x.data.target = X);
          var ee,
            eo = getAnimationType(x),
            ea = animateScroll.bind(null, eo, x);
          if (x && x.delay > 0) {
            x.data.delayTimeout = window.setTimeout(function () {
              er.default.registered.begin &&
                er.default.registered.begin(x.data.to, x.data.target),
                ei.call(window, ea);
            }, x.delay);
            return;
          }
          er.default.registered.begin &&
            er.default.registered.begin(x.data.to, x.data.target),
            ei.call(window, ea);
        },
        proceedOptions = function (s) {
          return (
            ((s = X({}, s)).data = s.data || makeData()), (s.absolute = !0), s
          );
        };
      x.default = {
        animateTopScroll: animateTopScroll,
        getAnimationType: getAnimationType,
        scrollToTop: function (s) {
          animateTopScroll(0, proceedOptions(s));
        },
        scrollToBottom: function (s) {
          setContainer((s = proceedOptions(s))),
            animateTopScroll(
              s.horizontal ? scrollContainerWidth(s) : scrollContainerHeight(s),
              s
            );
        },
        scrollTo: function (s, x) {
          animateTopScroll(s, proceedOptions(x));
        },
        scrollMore: function (s, x) {
          setContainer((x = proceedOptions(x))),
            animateTopScroll(
              s + (x.horizontal ? currentPositionX(x) : currentPositionY(x)),
              x
            );
        },
      };
    },
    50140: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X = W(55236),
        ee = ["mousedown", "mousewheel", "touchmove", "keydown"];
      x.default = {
        subscribe: function (s) {
          return (
            "undefined" != typeof document &&
            ee.forEach(function (x) {
              return (0, X.addPassiveEventListener)(document, x, s);
            })
          );
        },
      };
    },
    55236: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.addPassiveEventListener = function (s, x, X) {
          var ee = X.name;
          ee || ((ee = x), console.warn("Listener must be a named function.")),
            W.has(x) || W.set(x, new Set());
          var et = W.get(x);
          if (!et.has(ee)) {
            var er = (function () {
              var s = !1;
              try {
                var x = Object.defineProperty({}, "passive", {
                  get: function () {
                    s = !0;
                  },
                });
                window.addEventListener("test", null, x);
              } catch (s) {}
              return s;
            })();
            s.addEventListener(x, X, !!er && { passive: !0 }), et.add(ee);
          }
        }),
        (x.removePassiveEventListener = function (s, x, X) {
          s.removeEventListener(x, X), W.get(x).delete(X.name || x);
        });
      var W = new Map();
    },
    18e3: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X =
          Object.assign ||
          function (s) {
            for (var x = 1; x < arguments.length; x++) {
              var W = arguments[x];
              for (var X in W)
                Object.prototype.hasOwnProperty.call(W, X) && (s[X] = W[X]);
            }
            return s;
          },
        ee = (function () {
          function defineProperties(s, x) {
            for (var W = 0; W < x.length; W++) {
              var X = x[W];
              (X.enumerable = X.enumerable || !1),
                (X.configurable = !0),
                "value" in X && (X.writable = !0),
                Object.defineProperty(s, X.key, X);
            }
          }
          return function (s, x, W) {
            return (
              x && defineProperties(s.prototype, x),
              W && defineProperties(s, W),
              s
            );
          };
        })(),
        et = _interopRequireDefault(W(67294));
      _interopRequireDefault(W(73935));
      var er = _interopRequireDefault(W(82628)),
        ei = _interopRequireDefault(W(45697));
      function _interopRequireDefault(s) {
        return s && s.__esModule ? s : { default: s };
      }
      x.default = function (s) {
        var x = (function (x) {
          function Element(s) {
            !(function (s, x) {
              if (!(s instanceof x))
                throw TypeError("Cannot call a class as a function");
            })(this, Element);
            var x = (function (s, x) {
              if (!s)
                throw ReferenceError(
                  "this hasn't been initialised - super() hasn't been called"
                );
              return x && ("object" == typeof x || "function" == typeof x)
                ? x
                : s;
            })(
              this,
              (Element.__proto__ || Object.getPrototypeOf(Element)).call(
                this,
                s
              )
            );
            return (x.childBindings = { domNode: null }), x;
          }
          return (
            !(function (s, x) {
              if ("function" != typeof x && null !== x)
                throw TypeError(
                  "Super expression must either be null or a function, not " +
                    typeof x
                );
              (s.prototype = Object.create(x && x.prototype, {
                constructor: {
                  value: s,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
                x &&
                  (Object.setPrototypeOf
                    ? Object.setPrototypeOf(s, x)
                    : (s.__proto__ = x));
            })(Element, x),
            ee(Element, [
              {
                key: "componentDidMount",
                value: function () {
                  if ("undefined" == typeof window) return !1;
                  this.registerElems(this.props.name);
                },
              },
              {
                key: "componentDidUpdate",
                value: function (s) {
                  this.props.name !== s.name &&
                    this.registerElems(this.props.name);
                },
              },
              {
                key: "componentWillUnmount",
                value: function () {
                  if ("undefined" == typeof window) return !1;
                  er.default.unregister(this.props.name);
                },
              },
              {
                key: "registerElems",
                value: function (s) {
                  er.default.register(s, this.childBindings.domNode);
                },
              },
              {
                key: "render",
                value: function () {
                  return et.default.createElement(
                    s,
                    X({}, this.props, { parentBindings: this.childBindings })
                  );
                },
              },
            ]),
            Element
          );
        })(et.default.Component);
        return (
          (x.propTypes = { name: ei.default.string, id: ei.default.string }), x
        );
      };
    },
    64592: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var W = {
        registered: {},
        scrollEvent: {
          register: function (s, x) {
            W.registered[s] = x;
          },
          remove: function (s) {
            W.registered[s] = null;
          },
        },
      };
      x.default = W;
    },
    29678: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }), W(55236);
      var X,
        ee = (X = W(54259)) && X.__esModule ? X : { default: X };
      x.default = {
        mountFlag: !1,
        initialized: !1,
        scroller: null,
        containers: {},
        mount: function (s) {
          (this.scroller = s),
            (this.handleHashChange = this.handleHashChange.bind(this)),
            window.addEventListener("hashchange", this.handleHashChange),
            this.initStateFromHash(),
            (this.mountFlag = !0);
        },
        mapContainer: function (s, x) {
          this.containers[s] = x;
        },
        isMounted: function () {
          return this.mountFlag;
        },
        isInitialized: function () {
          return this.initialized;
        },
        initStateFromHash: function () {
          var s = this,
            x = this.getHash();
          x
            ? window.setTimeout(function () {
                s.scrollTo(x, !0), (s.initialized = !0);
              }, 10)
            : (this.initialized = !0);
        },
        scrollTo: function (s, x) {
          var W = this.scroller;
          if (W.get(s) && (x || s !== W.getActiveLink())) {
            var X = this.containers[s] || document;
            W.scrollTo(s, { container: X });
          }
        },
        getHash: function () {
          return ee.default.getHash();
        },
        changeHash: function (s, x) {
          this.isInitialized() &&
            ee.default.getHash() !== s &&
            ee.default.updateHash(s, x);
        },
        handleHashChange: function () {
          this.scrollTo(this.getHash());
        },
        unmount: function () {
          (this.scroller = null),
            (this.containers = null),
            window.removeEventListener("hashchange", this.handleHashChange);
        },
      };
    },
    31093: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X =
          Object.assign ||
          function (s) {
            for (var x = 1; x < arguments.length; x++) {
              var W = arguments[x];
              for (var X in W)
                Object.prototype.hasOwnProperty.call(W, X) && (s[X] = W[X]);
            }
            return s;
          },
        ee = (function () {
          function defineProperties(s, x) {
            for (var W = 0; W < x.length; W++) {
              var X = x[W];
              (X.enumerable = X.enumerable || !1),
                (X.configurable = !0),
                "value" in X && (X.writable = !0),
                Object.defineProperty(s, X.key, X);
            }
          }
          return function (s, x, W) {
            return (
              x && defineProperties(s.prototype, x),
              W && defineProperties(s, W),
              s
            );
          };
        })(),
        et = _interopRequireDefault(W(67294)),
        er = _interopRequireDefault(W(87606)),
        ei = _interopRequireDefault(W(82628)),
        eo = _interopRequireDefault(W(45697)),
        ea = _interopRequireDefault(W(29678));
      function _interopRequireDefault(s) {
        return s && s.__esModule ? s : { default: s };
      }
      var es = {
        to: eo.default.string.isRequired,
        containerId: eo.default.string,
        container: eo.default.object,
        activeClass: eo.default.string,
        activeStyle: eo.default.object,
        spy: eo.default.bool,
        horizontal: eo.default.bool,
        smooth: eo.default.oneOfType([eo.default.bool, eo.default.string]),
        offset: eo.default.number,
        delay: eo.default.number,
        isDynamic: eo.default.bool,
        onClick: eo.default.func,
        duration: eo.default.oneOfType([eo.default.number, eo.default.func]),
        absolute: eo.default.bool,
        onSetActive: eo.default.func,
        onSetInactive: eo.default.func,
        ignoreCancelEvents: eo.default.bool,
        hashSpy: eo.default.bool,
        saveHashHistory: eo.default.bool,
        spyThrottle: eo.default.number,
      };
      x.default = function (s, x) {
        var W = x || ei.default,
          eo = (function (x) {
            function Link(s) {
              !(function (s, x) {
                if (!(s instanceof x))
                  throw TypeError("Cannot call a class as a function");
              })(this, Link);
              var x = (function (s, x) {
                if (!s)
                  throw ReferenceError(
                    "this hasn't been initialised - super() hasn't been called"
                  );
                return x && ("object" == typeof x || "function" == typeof x)
                  ? x
                  : s;
              })(
                this,
                (Link.__proto__ || Object.getPrototypeOf(Link)).call(this, s)
              );
              return _initialiseProps.call(x), (x.state = { active: !1 }), x;
            }
            return (
              !(function (s, x) {
                if ("function" != typeof x && null !== x)
                  throw TypeError(
                    "Super expression must either be null or a function, not " +
                      typeof x
                  );
                (s.prototype = Object.create(x && x.prototype, {
                  constructor: {
                    value: s,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0,
                  },
                })),
                  x &&
                    (Object.setPrototypeOf
                      ? Object.setPrototypeOf(s, x)
                      : (s.__proto__ = x));
              })(Link, x),
              ee(Link, [
                {
                  key: "getScrollSpyContainer",
                  value: function () {
                    var s = this.props.containerId,
                      x = this.props.container;
                    return s && !x
                      ? document.getElementById(s)
                      : x && x.nodeType
                      ? x
                      : document;
                  },
                },
                {
                  key: "componentDidMount",
                  value: function () {
                    if (this.props.spy || this.props.hashSpy) {
                      var s = this.getScrollSpyContainer();
                      er.default.isMounted(s) ||
                        er.default.mount(s, this.props.spyThrottle),
                        this.props.hashSpy &&
                          (ea.default.isMounted() || ea.default.mount(W),
                          ea.default.mapContainer(this.props.to, s)),
                        er.default.addSpyHandler(this.spyHandler, s),
                        this.setState({ container: s });
                    }
                  },
                },
                {
                  key: "componentWillUnmount",
                  value: function () {
                    er.default.unmount(this.stateHandler, this.spyHandler);
                  },
                },
                {
                  key: "render",
                  value: function () {
                    var x = "";
                    x =
                      this.state && this.state.active
                        ? (
                            (this.props.className || "") +
                            " " +
                            (this.props.activeClass || "active")
                          ).trim()
                        : this.props.className;
                    var W = {};
                    W =
                      this.state && this.state.active
                        ? X({}, this.props.style, this.props.activeStyle)
                        : X({}, this.props.style);
                    var ee = X({}, this.props);
                    for (var er in es) ee.hasOwnProperty(er) && delete ee[er];
                    return (
                      (ee.className = x),
                      (ee.style = W),
                      (ee.onClick = this.handleClick),
                      et.default.createElement(s, ee)
                    );
                  },
                },
              ]),
              Link
            );
          })(et.default.PureComponent),
          _initialiseProps = function () {
            var s = this;
            (this.scrollTo = function (x, ee) {
              W.scrollTo(x, X({}, s.state, ee));
            }),
              (this.handleClick = function (x) {
                s.props.onClick && s.props.onClick(x),
                  x.stopPropagation && x.stopPropagation(),
                  x.preventDefault && x.preventDefault(),
                  s.scrollTo(s.props.to, s.props);
              }),
              (this.spyHandler = function (x, X) {
                var ee = s.getScrollSpyContainer();
                if (!ea.default.isMounted() || ea.default.isInitialized()) {
                  var et = s.props.horizontal,
                    er = s.props.to,
                    ei = null,
                    eo = void 0,
                    es = void 0;
                  if (et) {
                    var el = 0,
                      ec = 0,
                      eu = 0;
                    if (
                      (ee.getBoundingClientRect &&
                        (eu = ee.getBoundingClientRect().left),
                      !ei || s.props.isDynamic)
                    ) {
                      if (!(ei = W.get(er))) return;
                      var ed = ei.getBoundingClientRect();
                      ec = (el = ed.left - eu + x) + ed.width;
                    }
                    var eh = x - s.props.offset;
                    (eo = eh >= Math.floor(el) && eh < Math.floor(ec)),
                      (es = eh < Math.floor(el) || eh >= Math.floor(ec));
                  } else {
                    var ep = 0,
                      ef = 0,
                      eg = 0;
                    if (
                      (ee.getBoundingClientRect &&
                        (eg = ee.getBoundingClientRect().top),
                      !ei || s.props.isDynamic)
                    ) {
                      if (!(ei = W.get(er))) return;
                      var em = ei.getBoundingClientRect();
                      ef = (ep = em.top - eg + X) + em.height;
                    }
                    var ew = X - s.props.offset;
                    (eo = ew >= Math.floor(ep) && ew < Math.floor(ef)),
                      (es = ew < Math.floor(ep) || ew >= Math.floor(ef));
                  }
                  var eb = W.getActiveLink();
                  if (es) {
                    if (
                      (er === eb && W.setActiveLink(void 0),
                      s.props.hashSpy && ea.default.getHash() === er)
                    ) {
                      var ev = s.props.saveHashHistory,
                        ey = void 0 !== ev && ev;
                      ea.default.changeHash("", ey);
                    }
                    s.props.spy &&
                      s.state.active &&
                      (s.setState({ active: !1 }),
                      s.props.onSetInactive && s.props.onSetInactive(er, ei));
                  }
                  if (eo && (eb !== er || !1 === s.state.active)) {
                    W.setActiveLink(er);
                    var e_ = s.props.saveHashHistory,
                      eC = void 0 !== e_ && e_;
                    s.props.hashSpy && ea.default.changeHash(er, eC),
                      s.props.spy &&
                        (s.setState({ active: !0 }),
                        s.props.onSetActive && s.props.onSetActive(er, ei));
                  }
                }
              });
          };
        return (eo.propTypes = es), (eo.defaultProps = { offset: 0 }), eo;
      };
    },
    87606: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X,
        ee = (X = W(93096)) && X.__esModule ? X : { default: X },
        et = W(55236),
        eventThrottler = function (s) {
          var x =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 66;
          return (0, ee.default)(s, x);
        },
        er = {
          spyCallbacks: [],
          spySetState: [],
          scrollSpyContainers: [],
          mount: function (s, x) {
            if (s) {
              var W = eventThrottler(function (x) {
                er.scrollHandler(s);
              }, x);
              er.scrollSpyContainers.push(s),
                (0, et.addPassiveEventListener)(s, "scroll", W);
            }
          },
          isMounted: function (s) {
            return -1 !== er.scrollSpyContainers.indexOf(s);
          },
          currentPositionX: function (s) {
            if (s !== document) return s.scrollLeft;
            var x = void 0 !== window.pageYOffset,
              W = "CSS1Compat" === (document.compatMode || "");
            return x
              ? window.pageXOffset
              : W
              ? document.documentElement.scrollLeft
              : document.body.scrollLeft;
          },
          currentPositionY: function (s) {
            if (s !== document) return s.scrollTop;
            var x = void 0 !== window.pageXOffset,
              W = "CSS1Compat" === (document.compatMode || "");
            return x
              ? window.pageYOffset
              : W
              ? document.documentElement.scrollTop
              : document.body.scrollTop;
          },
          scrollHandler: function (s) {
            (
              er.scrollSpyContainers[er.scrollSpyContainers.indexOf(s)]
                .spyCallbacks || []
            ).forEach(function (x) {
              return x(er.currentPositionX(s), er.currentPositionY(s));
            });
          },
          addStateHandler: function (s) {
            er.spySetState.push(s);
          },
          addSpyHandler: function (s, x) {
            var W = er.scrollSpyContainers[er.scrollSpyContainers.indexOf(x)];
            W.spyCallbacks || (W.spyCallbacks = []),
              W.spyCallbacks.push(s),
              s(er.currentPositionX(x), er.currentPositionY(x));
          },
          updateStates: function () {
            er.spySetState.forEach(function (s) {
              return s();
            });
          },
          unmount: function (s, x) {
            er.scrollSpyContainers.forEach(function (s) {
              return (
                s.spyCallbacks &&
                s.spyCallbacks.length &&
                s.spyCallbacks.indexOf(x) > -1 &&
                s.spyCallbacks.splice(s.spyCallbacks.indexOf(x), 1)
              );
            }),
              er.spySetState &&
                er.spySetState.length &&
                er.spySetState.indexOf(s) > -1 &&
                er.spySetState.splice(er.spySetState.indexOf(s), 1),
              document.removeEventListener("scroll", er.scrollHandler);
          },
          update: function () {
            return er.scrollSpyContainers.forEach(function (s) {
              return er.scrollHandler(s);
            });
          },
        };
      x.default = er;
    },
    82628: function (s, x, W) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var X =
          Object.assign ||
          function (s) {
            for (var x = 1; x < arguments.length; x++) {
              var W = arguments[x];
              for (var X in W)
                Object.prototype.hasOwnProperty.call(W, X) && (s[X] = W[X]);
            }
            return s;
          },
        ee = _interopRequireDefault(W(54259)),
        et = _interopRequireDefault(W(53200)),
        er = _interopRequireDefault(W(64592));
      function _interopRequireDefault(s) {
        return s && s.__esModule ? s : { default: s };
      }
      var ei = {},
        eo = void 0;
      x.default = {
        unmount: function () {
          ei = {};
        },
        register: function (s, x) {
          ei[s] = x;
        },
        unregister: function (s) {
          delete ei[s];
        },
        get: function (s) {
          return (
            ei[s] ||
            document.getElementById(s) ||
            document.getElementsByName(s)[0] ||
            document.getElementsByClassName(s)[0]
          );
        },
        setActiveLink: function (s) {
          return (eo = s);
        },
        getActiveLink: function () {
          return eo;
        },
        scrollTo: function (s, x) {
          var W = this.get(s);
          if (!W) {
            console.warn("target Element not found");
            return;
          }
          var ei = (x = X({}, x, { absolute: !1 })).containerId,
            eo = x.container,
            ea = void 0;
          (ea = ei
            ? document.getElementById(ei)
            : eo && eo.nodeType
            ? eo
            : document),
            (x.absolute = !0);
          var es = x.horizontal,
            el = ee.default.scrollOffset(ea, W, es) + (x.offset || 0);
          if (!x.smooth) {
            er.default.registered.begin && er.default.registered.begin(s, W),
              ea === document
                ? x.horizontal
                  ? window.scrollTo(el, 0)
                  : window.scrollTo(0, el)
                : (ea.scrollTop = el),
              er.default.registered.end && er.default.registered.end(s, W);
            return;
          }
          et.default.animateTopScroll(el, x, s, W);
        },
      };
    },
    89765: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 }),
        (x.default = {
          defaultEasing: function (s) {
            return s < 0.5
              ? Math.pow(2 * s, 2) / 2
              : 1 - Math.pow((1 - s) * 2, 2) / 2;
          },
          linear: function (s) {
            return s;
          },
          easeInQuad: function (s) {
            return s * s;
          },
          easeOutQuad: function (s) {
            return s * (2 - s);
          },
          easeInOutQuad: function (s) {
            return s < 0.5 ? 2 * s * s : -1 + (4 - 2 * s) * s;
          },
          easeInCubic: function (s) {
            return s * s * s;
          },
          easeOutCubic: function (s) {
            return --s * s * s + 1;
          },
          easeInOutCubic: function (s) {
            return s < 0.5
              ? 4 * s * s * s
              : (s - 1) * (2 * s - 2) * (2 * s - 2) + 1;
          },
          easeInQuart: function (s) {
            return s * s * s * s;
          },
          easeOutQuart: function (s) {
            return 1 - --s * s * s * s;
          },
          easeInOutQuart: function (s) {
            return s < 0.5 ? 8 * s * s * s * s : 1 - 8 * --s * s * s * s;
          },
          easeInQuint: function (s) {
            return s * s * s * s * s;
          },
          easeOutQuint: function (s) {
            return 1 + --s * s * s * s * s;
          },
          easeInOutQuint: function (s) {
            return s < 0.5
              ? 16 * s * s * s * s * s
              : 1 + 16 * --s * s * s * s * s;
          },
        });
    },
    54259: function (s, x) {
      "use strict";
      Object.defineProperty(x, "__esModule", { value: !0 });
      var getElementOffsetInfoUntil = function (s, x) {
        for (var W = s.offsetTop, X = s.offsetParent; X && !x(X); )
          (W += X.offsetTop), (X = X.offsetParent);
        return { offsetTop: W, offsetParent: X };
      };
      x.default = {
        updateHash: function (s, x) {
          var W = 0 === s.indexOf("#") ? s.substring(1) : s,
            X = W ? "#" + W : "",
            ee = window && window.location,
            et = X ? ee.pathname + ee.search + X : ee.pathname + ee.search;
          x
            ? history.pushState(history.state, "", et)
            : history.replaceState(history.state, "", et);
        },
        getHash: function () {
          return window.location.hash.replace(/^#/, "");
        },
        filterElementInContainer: function (s) {
          return function (x) {
            return s.contains
              ? s != x && s.contains(x)
              : !!(16 & s.compareDocumentPosition(x));
          };
        },
        scrollOffset: function (s, x, W) {
          if (W)
            return s === document
              ? x.getBoundingClientRect().left +
                  (window.scrollX || window.pageXOffset)
              : "static" !== getComputedStyle(s).position
              ? x.offsetLeft
              : x.offsetLeft - s.offsetLeft;
          if (s === document)
            return (
              x.getBoundingClientRect().top +
              (window.scrollY || window.pageYOffset)
            );
          if ("static" !== getComputedStyle(s).position) {
            if (x.offsetParent !== s) {
              var X = getElementOffsetInfoUntil(x, function (x) {
                  return x === s || x === document;
                }),
                ee = X.offsetTop;
              if (X.offsetParent !== s)
                throw Error(
                  "Seems containerElement is not an ancestor of the Element"
                );
              return ee;
            }
            return x.offsetTop;
          }
          if (x.offsetParent === s.offsetParent)
            return x.offsetTop - s.offsetTop;
          var isDocument = function (s) {
            return s === document;
          };
          return (
            getElementOffsetInfoUntil(x, isDocument).offsetTop -
            getElementOffsetInfoUntil(s, isDocument).offsetTop
          );
        },
      };
    },
    52463: function (s, x, W) {
      "use strict";
      W.d(x, {
        Z: function () {
          return esm_useClickAway;
        },
      });
      var X = W(67294),
        ee = ["mousedown", "touchstart"],
        esm_useClickAway = function (s, x, W) {
          void 0 === W && (W = ee);
          var et = (0, X.useRef)(x);
          (0, X.useEffect)(
            function () {
              et.current = x;
            },
            [x]
          ),
            (0, X.useEffect)(
              function () {
                for (
                  var handler = function (x) {
                      var W = s.current;
                      W && !W.contains(x.target) && et.current(x);
                    },
                    x = 0,
                    X = W;
                  x < X.length;
                  x++
                ) {
                  var ee = X[x];
                  !(function (s) {
                    for (var x = [], W = 1; W < arguments.length; W++)
                      x[W - 1] = arguments[W];
                    s && s.addEventListener && s.addEventListener.apply(s, x);
                  })(document, ee, handler);
                }
                return function () {
                  for (var s = 0, x = W; s < x.length; s++) {
                    var X = x[s];
                    !(function (s) {
                      for (var x = [], W = 1; W < arguments.length; W++)
                        x[W - 1] = arguments[W];
                      s &&
                        s.removeEventListener &&
                        s.removeEventListener.apply(s, x);
                    })(document, X, handler);
                  }
                };
              },
              [W, s]
            );
        };
    },
    71739: function (s) {
      s.exports = {
        area: !0,
        base: !0,
        br: !0,
        col: !0,
        embed: !0,
        hr: !0,
        img: !0,
        input: !0,
        link: !0,
        meta: !0,
        param: !0,
        source: !0,
        track: !0,
        wbr: !0,
      };
    },
    94663: function (s, x, W) {
      "use strict";
      /**
       * @license React
       * use-sync-external-store-shim.production.js
       *
       * Copyright (c) Meta Platforms, Inc. and affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */ var X = W(67294),
        ee =
          "function" == typeof Object.is
            ? Object.is
            : function (s, x) {
                return (
                  (s === x && (0 !== s || 1 / s == 1 / x)) || (s != s && x != x)
                );
              },
        et = X.useState,
        er = X.useEffect,
        ei = X.useLayoutEffect,
        eo = X.useDebugValue;
      function checkIfSnapshotChanged(s) {
        var x = s.getSnapshot;
        s = s.value;
        try {
          var W = x();
          return !ee(s, W);
        } catch (s) {
          return !0;
        }
      }
      var ea =
        "undefined" == typeof window ||
        void 0 === window.document ||
        void 0 === window.document.createElement
          ? function (s, x) {
              return x();
            }
          : function (s, x) {
              var W = x(),
                X = et({ inst: { value: W, getSnapshot: x } }),
                ee = X[0].inst,
                ea = X[1];
              return (
                ei(
                  function () {
                    (ee.value = W),
                      (ee.getSnapshot = x),
                      checkIfSnapshotChanged(ee) && ea({ inst: ee });
                  },
                  [s, W, x]
                ),
                er(
                  function () {
                    return (
                      checkIfSnapshotChanged(ee) && ea({ inst: ee }),
                      s(function () {
                        checkIfSnapshotChanged(ee) && ea({ inst: ee });
                      })
                    );
                  },
                  [s]
                ),
                eo(W),
                W
              );
            };
      x.useSyncExternalStore =
        void 0 !== X.useSyncExternalStore ? X.useSyncExternalStore : ea;
    },
    41325: function (s, x, W) {
      "use strict";
      /**
       * @license React
       * use-sync-external-store-shim/with-selector.production.js
       *
       * Copyright (c) Meta Platforms, Inc. and affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */ var X = W(67294),
        ee = W(53076),
        et =
          "function" == typeof Object.is
            ? Object.is
            : function (s, x) {
                return (
                  (s === x && (0 !== s || 1 / s == 1 / x)) || (s != s && x != x)
                );
              },
        er = ee.useSyncExternalStore,
        ei = X.useRef,
        eo = X.useEffect,
        ea = X.useMemo,
        es = X.useDebugValue;
      x.useSyncExternalStoreWithSelector = function (s, x, W, X, ee) {
        var el = ei(null);
        if (null === el.current) {
          var ec = { hasValue: !1, value: null };
          el.current = ec;
        } else ec = el.current;
        var eu = er(
          s,
          (el = ea(
            function () {
              function memoizedSelector(x) {
                if (!ei) {
                  if (
                    ((ei = !0),
                    (s = x),
                    (x = X(x)),
                    void 0 !== ee && ec.hasValue)
                  ) {
                    var W = ec.value;
                    if (ee(W, x)) return (er = W);
                  }
                  return (er = x);
                }
                if (((W = er), et(s, x))) return W;
                var eo = X(x);
                return void 0 !== ee && ee(W, eo)
                  ? ((s = x), W)
                  : ((s = x), (er = eo));
              }
              var s,
                er,
                ei = !1,
                eo = void 0 === W ? null : W;
              return [
                function () {
                  return memoizedSelector(x());
                },
                null === eo
                  ? void 0
                  : function () {
                      return memoizedSelector(eo());
                    },
              ];
            },
            [x, W, X, ee]
          ))[0],
          el[1]
        );
        return (
          eo(
            function () {
              (ec.hasValue = !0), (ec.value = eu);
            },
            [eu]
          ),
          es(eu),
          eu
        );
      };
    },
    53076: function (s, x, W) {
      "use strict";
      s.exports = W(94663);
    },
    810: function (s, x, W) {
      "use strict";
      s.exports = W(41325);
    },
    57026: function (s) {
      "use strict";
      s.exports = function () {
        throw Error(
          "ws does not work in the browser. Browser clients must use the native WebSocket object"
        );
      };
    },
    35883: function () {},
    46601: function () {},
    89214: function () {},
    85568: function () {},
    83154: function (s, x, W) {
      var X;
      if (
        ("function" == typeof fetch &&
          (X =
            void 0 !== W.g && W.g.fetch
              ? W.g.fetch
              : "undefined" != typeof window && window.fetch
              ? window.fetch
              : fetch),
        "undefined" == typeof window)
      ) {
        var ee = X || W(54098);
        ee.default && (ee = ee.default),
          (x.default = ee),
          (s.exports = x.default);
      }
    },
    36559: function (s, x, W) {
      "use strict";
      let X = W(85346);
      s.exports = pino;
      let ee =
        (function () {
          function defd(s) {
            return void 0 !== s && s;
          }
          try {
            if ("undefined" != typeof globalThis) return globalThis;
            return (
              Object.defineProperty(Object.prototype, "globalThis", {
                get: function () {
                  return (
                    delete Object.prototype.globalThis, (this.globalThis = this)
                  );
                },
                configurable: !0,
              }),
              globalThis
            );
          } catch (s) {
            return defd(self) || defd(window) || defd(this) || {};
          }
        })().console || {};
      function pino(s) {
        var x;
        (s = s || {}).browser = s.browser || {};
        let W = s.browser.transmit;
        if (W && "function" != typeof W.send)
          throw Error("pino: transmit option must have a send function");
        let X = s.browser.write || ee;
        s.browser.write && (s.browser.asObject = !0);
        let et = s.serializers || {},
          er = (function (s, x) {
            if (Array.isArray(s)) {
              let x = s.filter(function (s) {
                return "!stdSerializers.err" !== s;
              });
              return x;
            }
            return !0 === s && Object.keys(x);
          })(s.browser.serialize, et),
          ei = s.browser.serialize;
        Array.isArray(s.browser.serialize) &&
          s.browser.serialize.indexOf("!stdSerializers.err") > -1 &&
          (ei = !1),
          "function" == typeof X &&
            (X.error = X.fatal = X.warn = X.info = X.debug = X.trace = X),
          !1 === s.enabled && (s.level = "silent");
        let eo = s.level || "info",
          ea = Object.create(X);
        ea.log || (ea.log = noop),
          Object.defineProperty(ea, "levelVal", {
            get: function () {
              return "silent" === this.level
                ? 1 / 0
                : this.levels.values[this.level];
            },
          }),
          Object.defineProperty(ea, "level", {
            get: function () {
              return this._level;
            },
            set: function (s) {
              if ("silent" !== s && !this.levels.values[s])
                throw Error("unknown level " + s);
              (this._level = s),
                set(es, ea, "error", "log"),
                set(es, ea, "fatal", "error"),
                set(es, ea, "warn", "error"),
                set(es, ea, "info", "log"),
                set(es, ea, "debug", "log"),
                set(es, ea, "trace", "log");
            },
          });
        let es = {
          transmit: W,
          serialize: er,
          asObject: s.browser.asObject,
          levels: ["error", "fatal", "warn", "info", "debug", "trace"],
          timestamp:
            "function" == typeof (x = s).timestamp
              ? x.timestamp
              : !1 === x.timestamp
              ? nullTime
              : epochTime,
        };
        return (
          (ea.levels = pino.levels),
          (ea.level = eo),
          (ea.setMaxListeners =
            ea.getMaxListeners =
            ea.emit =
            ea.addListener =
            ea.on =
            ea.prependListener =
            ea.once =
            ea.prependOnceListener =
            ea.removeListener =
            ea.removeAllListeners =
            ea.listeners =
            ea.listenerCount =
            ea.eventNames =
            ea.write =
            ea.flush =
              noop),
          (ea.serializers = et),
          (ea._serialize = er),
          (ea._stdErrSerialize = ei),
          (ea.child = function (x, X) {
            if (!x) throw Error("missing bindings for child Pino");
            (X = X || {}),
              er && x.serializers && (X.serializers = x.serializers);
            let ee = X.serializers;
            if (er && ee) {
              var ei = Object.assign({}, et, ee),
                eo = !0 === s.browser.serialize ? Object.keys(ei) : er;
              delete x.serializers,
                applySerializers([x], eo, ei, this._stdErrSerialize);
            }
            function Child(s) {
              (this._childLevel = (0 | s._childLevel) + 1),
                (this.error = bind(s, x, "error")),
                (this.fatal = bind(s, x, "fatal")),
                (this.warn = bind(s, x, "warn")),
                (this.info = bind(s, x, "info")),
                (this.debug = bind(s, x, "debug")),
                (this.trace = bind(s, x, "trace")),
                ei && ((this.serializers = ei), (this._serialize = eo)),
                W &&
                  (this._logEvent = createLogEventShape(
                    [].concat(s._logEvent.bindings, x)
                  ));
            }
            return (Child.prototype = this), new Child(this);
          }),
          W && (ea._logEvent = createLogEventShape()),
          ea
        );
      }
      function set(s, x, W, et) {
        let er = Object.getPrototypeOf(x);
        (x[W] =
          x.levelVal > x.levels.values[W]
            ? noop
            : er[W]
            ? er[W]
            : ee[W] || ee[et] || noop),
          (function (s, x, W) {
            if (s.transmit || x[W] !== noop) {
              var et;
              x[W] =
                ((et = x[W]),
                function () {
                  let er = s.timestamp(),
                    ei = Array(arguments.length),
                    eo =
                      Object.getPrototypeOf &&
                      Object.getPrototypeOf(this) === ee
                        ? ee
                        : this;
                  for (var ea = 0; ea < ei.length; ea++) ei[ea] = arguments[ea];
                  if (
                    (s.serialize &&
                      !s.asObject &&
                      applySerializers(
                        ei,
                        this._serialize,
                        this.serializers,
                        this._stdErrSerialize
                      ),
                    s.asObject
                      ? et.call(
                          eo,
                          (function (s, x, W, ee) {
                            s._serialize &&
                              applySerializers(
                                W,
                                s._serialize,
                                s.serializers,
                                s._stdErrSerialize
                              );
                            let et = W.slice(),
                              er = et[0],
                              ei = {};
                            ee && (ei.time = ee),
                              (ei.level = pino.levels.values[x]);
                            let eo = (0 | s._childLevel) + 1;
                            if (
                              (eo < 1 && (eo = 1),
                              null !== er && "object" == typeof er)
                            ) {
                              for (; eo-- && "object" == typeof et[0]; )
                                Object.assign(ei, et.shift());
                              er = et.length ? X(et.shift(), et) : void 0;
                            } else
                              "string" == typeof er && (er = X(et.shift(), et));
                            return void 0 !== er && (ei.msg = er), ei;
                          })(this, W, ei, er)
                        )
                      : et.apply(eo, ei),
                    s.transmit)
                  ) {
                    let X = s.transmit.level || x.level,
                      ee = pino.levels.values[X],
                      et = pino.levels.values[W];
                    if (et < ee) return;
                    (function (s, x, W) {
                      let X = x.send,
                        ee = x.ts,
                        et = x.methodLevel,
                        er = x.methodValue,
                        ei = x.val,
                        eo = s._logEvent.bindings;
                      applySerializers(
                        W,
                        s._serialize || Object.keys(s.serializers),
                        s.serializers,
                        void 0 === s._stdErrSerialize || s._stdErrSerialize
                      ),
                        (s._logEvent.ts = ee),
                        (s._logEvent.messages = W.filter(function (s) {
                          return -1 === eo.indexOf(s);
                        })),
                        (s._logEvent.level.label = et),
                        (s._logEvent.level.value = er),
                        X(et, s._logEvent, ei),
                        (s._logEvent = createLogEventShape(eo));
                    })(
                      this,
                      {
                        ts: er,
                        methodLevel: W,
                        methodValue: et,
                        transmitLevel: X,
                        transmitValue:
                          pino.levels.values[s.transmit.level || x.level],
                        send: s.transmit.send,
                        val: x.levelVal,
                      },
                      ei
                    );
                  }
                });
            }
          })(s, x, W);
      }
      function applySerializers(s, x, W, X) {
        for (let ee in s)
          if (X && s[ee] instanceof Error)
            s[ee] = pino.stdSerializers.err(s[ee]);
          else if ("object" == typeof s[ee] && !Array.isArray(s[ee]))
            for (let X in s[ee])
              x && x.indexOf(X) > -1 && X in W && (s[ee][X] = W[X](s[ee][X]));
      }
      function bind(s, x, W) {
        return function () {
          let X = Array(1 + arguments.length);
          X[0] = x;
          for (var ee = 1; ee < X.length; ee++) X[ee] = arguments[ee - 1];
          return s[W].apply(this, X);
        };
      }
      function createLogEventShape(s) {
        return {
          ts: 0,
          messages: [],
          bindings: s || [],
          level: { label: "", value: 0 },
        };
      }
      function mock() {
        return {};
      }
      function passthrough(s) {
        return s;
      }
      function noop() {}
      function nullTime() {
        return !1;
      }
      function epochTime() {
        return Date.now();
      }
      (pino.levels = {
        values: {
          fatal: 60,
          error: 50,
          warn: 40,
          info: 30,
          debug: 20,
          trace: 10,
        },
        labels: {
          10: "trace",
          20: "debug",
          30: "info",
          40: "warn",
          50: "error",
          60: "fatal",
        },
      }),
        (pino.stdSerializers = {
          mapHttpRequest: mock,
          mapHttpResponse: mock,
          wrapRequestSerializer: passthrough,
          wrapResponseSerializer: passthrough,
          wrapErrorSerializer: passthrough,
          req: mock,
          res: mock,
          err: function (s) {
            let x = {
              type: s.constructor.name,
              msg: s.message,
              stack: s.stack,
            };
            for (let W in s) void 0 === x[W] && (x[W] = s[W]);
            return x;
          },
        }),
        (pino.stdTimeFunctions = Object.assign(
          {},
          {
            nullTime,
            epochTime,
            unixTime: function () {
              return Math.round(Date.now() / 1e3);
            },
            isoTime: function () {
              return new Date(Date.now()).toISOString();
            },
          }
        ));
    },
    74490: function (s, x, W) {
      "use strict";
      W.d(x, {
        bq: function () {
          return ev;
        },
        gY: function () {
          return ey;
        },
        Em: function () {
          return eo;
        },
        kg: function () {
          return eg;
        },
        UE: function () {
          return e_;
        },
        p1: function () {
          return ea;
        },
        C6: function () {
          return ef;
        },
        uB: function () {
          return eC;
        },
        mr: function () {
          return eE;
        },
        uJ: function () {
          return ex;
        },
        Vk: function () {
          return getSafeConnectorIdKey;
        },
        tU: function () {
          return getW3mThemeVariables;
        },
        oL: function () {
          return isReownName;
        },
        $U: function () {
          return isSafe;
        },
      });
      var X = W(27484),
        ee = W(25054),
        et = W(84110),
        er = W(70660);
      X.extend(et), X.extend(er);
      let ei = {
        ...ee,
        name: "en-web3-modal",
        relativeTime: {
          future: "in %s",
          past: "%s ago",
          s: "%d sec",
          m: "1 min",
          mm: "%d min",
          h: "1 hr",
          hh: "%d hrs",
          d: "1 d",
          dd: "%d d",
          M: "1 mo",
          MM: "%d mo",
          y: "1 yr",
          yy: "%d yr",
        },
      };
      X.locale("en-web3-modal", ei);
      let eo = {
          getYear: (s = new Date().toISOString()) => X(s).year(),
          getRelativeDateFromNow: (s) =>
            X(s).locale("en-web3-modal").fromNow(!0),
          formatDate: (s, x = "DD MMM") => X(s).format(x),
        },
        ea = {
          caipNetworkIdToNumber: (s) => (s ? Number(s.split(":")[1]) : void 0),
          parseEvmChainId(s) {
            return "string" == typeof s ? this.caipNetworkIdToNumber(s) : s;
          },
          getNetworksByNamespace: (s, x) =>
            s?.filter((s) => s.chainNamespace === x) || [],
          getFirstNetworkByNamespace(s, x) {
            return this.getNetworksByNamespace(s, x)[0];
          },
        };
      var es = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
        el = Math.ceil,
        ec = Math.floor,
        eu = "[BigNumber Error] ",
        ed = eu + "Number primitive has more than 15 significant digits: ",
        eh = [
          1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13,
        ];
      function bitFloor(s) {
        var x = 0 | s;
        return s > 0 || s === x ? x : x - 1;
      }
      function coeffToString(s) {
        for (var x, W, X = 1, ee = s.length, et = s[0] + ""; X < ee; ) {
          for (W = 14 - (x = s[X++] + "").length; W--; x = "0" + x);
          et += x;
        }
        for (ee = et.length; 48 === et.charCodeAt(--ee); );
        return et.slice(0, ee + 1 || 1);
      }
      function compare(s, x) {
        var W,
          X,
          ee = s.c,
          et = x.c,
          er = s.s,
          ei = x.s,
          eo = s.e,
          ea = x.e;
        if (!er || !ei) return null;
        if (((W = ee && !ee[0]), (X = et && !et[0]), W || X))
          return W ? (X ? 0 : -ei) : er;
        if (er != ei) return er;
        if (((W = er < 0), (X = eo == ea), !ee || !et))
          return X ? 0 : !ee ^ W ? 1 : -1;
        if (!X) return (eo > ea) ^ W ? 1 : -1;
        for (
          er = 0, ei = (eo = ee.length) < (ea = et.length) ? eo : ea;
          er < ei;
          er++
        )
          if (ee[er] != et[er]) return (ee[er] > et[er]) ^ W ? 1 : -1;
        return eo == ea ? 0 : (eo > ea) ^ W ? 1 : -1;
      }
      function intCheck(s, x, W, X) {
        if (s < x || s > W || s !== ec(s))
          throw Error(
            eu +
              (X || "Argument") +
              ("number" == typeof s
                ? s < x || s > W
                  ? " out of range: "
                  : " not an integer: "
                : " not a primitive number: ") +
              String(s)
          );
      }
      function isOdd(s) {
        var x = s.c.length - 1;
        return bitFloor(s.e / 14) == x && s.c[x] % 2 != 0;
      }
      function toExponential(s, x) {
        return (
          (s.length > 1 ? s.charAt(0) + "." + s.slice(1) : s) +
          (x < 0 ? "e" : "e+") +
          x
        );
      }
      function toFixedPoint(s, x, W) {
        var X, ee;
        if (x < 0) {
          for (ee = W + "."; ++x; ee += W);
          s = ee + s;
        } else if (((X = s.length), ++x > X)) {
          for (ee = W, x -= X; --x; ee += W);
          s += ee;
        } else x < X && (s = s.slice(0, x) + "." + s.slice(x));
        return s;
      }
      var ep = (function clone(s) {
        var x,
          W,
          X,
          ee,
          et,
          er,
          ei,
          eo,
          ea,
          ep = (BigNumber.prototype = {
            constructor: BigNumber,
            toString: null,
            valueOf: null,
          }),
          ef = new BigNumber(1),
          eg = 20,
          em = 4,
          ew = -7,
          eb = 21,
          ev = -1e7,
          ey = 1e7,
          e_ = !1,
          eC = 1,
          ex = 0,
          eE = {
            prefix: "",
            groupSize: 3,
            secondaryGroupSize: 0,
            groupSeparator: ",",
            decimalSeparator: ".",
            fractionGroupSize: 0,
            fractionGroupSeparator: "\xa0",
            suffix: "",
          },
          eA = "0123456789abcdefghijklmnopqrstuvwxyz",
          eS = !0;
        function BigNumber(s, x) {
          var W,
            X,
            ee,
            et,
            er,
            ei,
            el,
            eu,
            eh = this;
          if (!(eh instanceof BigNumber)) return new BigNumber(s, x);
          if (null == x) {
            if (s && !0 === s._isBigNumber) {
              (eh.s = s.s),
                !s.c || s.e > ey
                  ? (eh.c = eh.e = null)
                  : s.e < ev
                  ? (eh.c = [(eh.e = 0)])
                  : ((eh.e = s.e), (eh.c = s.c.slice()));
              return;
            }
            if ((ei = "number" == typeof s) && 0 * s == 0) {
              if (((eh.s = 1 / s < 0 ? ((s = -s), -1) : 1), s === ~~s)) {
                for (et = 0, er = s; er >= 10; er /= 10, et++);
                et > ey ? (eh.c = eh.e = null) : ((eh.e = et), (eh.c = [s]));
                return;
              }
              eu = String(s);
            } else {
              if (!es.test((eu = String(s)))) return ea(eh, eu, ei);
              eh.s = 45 == eu.charCodeAt(0) ? ((eu = eu.slice(1)), -1) : 1;
            }
            (et = eu.indexOf(".")) > -1 && (eu = eu.replace(".", "")),
              (er = eu.search(/e/i)) > 0
                ? (et < 0 && (et = er),
                  (et += +eu.slice(er + 1)),
                  (eu = eu.substring(0, er)))
                : et < 0 && (et = eu.length);
          } else {
            if ((intCheck(x, 2, eA.length, "Base"), 10 == x && eS))
              return round((eh = new BigNumber(s)), eg + eh.e + 1, em);
            if (((eu = String(s)), (ei = "number" == typeof s))) {
              if (0 * s != 0) return ea(eh, eu, ei, x);
              if (
                ((eh.s = 1 / s < 0 ? ((eu = eu.slice(1)), -1) : 1),
                BigNumber.DEBUG && eu.replace(/^0\.0*|\./, "").length > 15)
              )
                throw Error(ed + s);
            } else
              eh.s = 45 === eu.charCodeAt(0) ? ((eu = eu.slice(1)), -1) : 1;
            for (W = eA.slice(0, x), et = er = 0, el = eu.length; er < el; er++)
              if (0 > W.indexOf((X = eu.charAt(er)))) {
                if ("." == X) {
                  if (er > et) {
                    et = el;
                    continue;
                  }
                } else if (
                  !ee &&
                  ((eu == eu.toUpperCase() && (eu = eu.toLowerCase())) ||
                    (eu == eu.toLowerCase() && (eu = eu.toUpperCase())))
                ) {
                  (ee = !0), (er = -1), (et = 0);
                  continue;
                }
                return ea(eh, String(s), ei, x);
              }
            (ei = !1),
              (et = (eu = eo(eu, x, 10, eh.s)).indexOf(".")) > -1
                ? (eu = eu.replace(".", ""))
                : (et = eu.length);
          }
          for (er = 0; 48 === eu.charCodeAt(er); er++);
          for (el = eu.length; 48 === eu.charCodeAt(--el); );
          if ((eu = eu.slice(er, ++el))) {
            if (
              ((el -= er),
              ei &&
                BigNumber.DEBUG &&
                el > 15 &&
                (s > 9007199254740991 || s !== ec(s)))
            )
              throw Error(ed + eh.s * s);
            if ((et = et - er - 1) > ey) eh.c = eh.e = null;
            else if (et < ev) eh.c = [(eh.e = 0)];
            else {
              if (
                ((eh.e = et),
                (eh.c = []),
                (er = (et + 1) % 14),
                et < 0 && (er += 14),
                er < el)
              ) {
                for (er && eh.c.push(+eu.slice(0, er)), el -= 14; er < el; )
                  eh.c.push(+eu.slice(er, (er += 14)));
                er = 14 - (eu = eu.slice(er)).length;
              } else er -= el;
              for (; er--; eu += "0");
              eh.c.push(+eu);
            }
          } else eh.c = [(eh.e = 0)];
        }
        function format(s, x, W, X) {
          var ee, et, er, ei, eo;
          if ((null == W ? (W = em) : intCheck(W, 0, 8), !s.c))
            return s.toString();
          if (((ee = s.c[0]), (er = s.e), null == x))
            (eo = coeffToString(s.c)),
              (eo =
                1 == X || (2 == X && (er <= ew || er >= eb))
                  ? toExponential(eo, er)
                  : toFixedPoint(eo, er, "0"));
          else if (
            ((et = (s = round(new BigNumber(s), x, W)).e),
            (ei = (eo = coeffToString(s.c)).length),
            1 == X || (2 == X && (x <= et || et <= ew)))
          ) {
            for (; ei < x; eo += "0", ei++);
            eo = toExponential(eo, et);
          } else if (
            ((x -= er), (eo = toFixedPoint(eo, et, "0")), et + 1 > ei)
          ) {
            if (--x > 0) for (eo += "."; x--; eo += "0");
          } else if ((x += et - ei) > 0)
            for (et + 1 == ei && (eo += "."); x--; eo += "0");
          return s.s < 0 && ee ? "-" + eo : eo;
        }
        function maxOrMin(s, x) {
          for (var W, X, ee = 1, et = new BigNumber(s[0]); ee < s.length; ee++)
            ((X = new BigNumber(s[ee])).s &&
              (W = compare(et, X)) !== x &&
              (0 !== W || et.s !== x)) ||
              (et = X);
          return et;
        }
        function normalise(s, x, W) {
          for (var X = 1, ee = x.length; !x[--ee]; x.pop());
          for (ee = x[0]; ee >= 10; ee /= 10, X++);
          return (
            (W = X + 14 * W - 1) > ey
              ? (s.c = s.e = null)
              : W < ev
              ? (s.c = [(s.e = 0)])
              : ((s.e = W), (s.c = x)),
            s
          );
        }
        function round(s, x, W, X) {
          var ee,
            et,
            er,
            ei,
            eo,
            ea,
            es,
            eu = s.c;
          if (eu) {
            t: {
              for (ee = 1, ei = eu[0]; ei >= 10; ei /= 10, ee++);
              if ((et = x - ee) < 0)
                (et += 14),
                  (er = x),
                  (es = ec(((eo = eu[(ea = 0)]) / eh[ee - er - 1]) % 10));
              else if ((ea = el((et + 1) / 14)) >= eu.length) {
                if (X) {
                  for (; eu.length <= ea; eu.push(0));
                  (eo = es = 0), (ee = 1), (et %= 14), (er = et - 14 + 1);
                } else break t;
              } else {
                for (ee = 1, eo = ei = eu[ea]; ei >= 10; ei /= 10, ee++);
                (et %= 14),
                  (es =
                    (er = et - 14 + ee) < 0
                      ? 0
                      : ec((eo / eh[ee - er - 1]) % 10));
              }
              if (
                ((X =
                  X ||
                  x < 0 ||
                  null != eu[ea + 1] ||
                  (er < 0 ? eo : eo % eh[ee - er - 1])),
                (X =
                  W < 4
                    ? (es || X) && (0 == W || W == (s.s < 0 ? 3 : 2))
                    : es > 5 ||
                      (5 == es &&
                        (4 == W ||
                          X ||
                          (6 == W &&
                            (et > 0
                              ? er > 0
                                ? eo / eh[ee - er]
                                : 0
                              : eu[ea - 1]) %
                              10 &
                              1) ||
                          W == (s.s < 0 ? 8 : 7)))),
                x < 1 || !eu[0])
              )
                return (
                  (eu.length = 0),
                  X
                    ? ((x -= s.e + 1),
                      (eu[0] = eh[(14 - (x % 14)) % 14]),
                      (s.e = -x || 0))
                    : (eu[0] = s.e = 0),
                  s
                );
              if (
                (0 == et
                  ? ((eu.length = ea), (ei = 1), ea--)
                  : ((eu.length = ea + 1),
                    (ei = eh[14 - et]),
                    (eu[ea] =
                      er > 0 ? ec((eo / eh[ee - er]) % eh[er]) * ei : 0)),
                X)
              )
                for (;;) {
                  if (0 == ea) {
                    for (et = 1, er = eu[0]; er >= 10; er /= 10, et++);
                    for (er = eu[0] += ei, ei = 1; er >= 10; er /= 10, ei++);
                    et != ei && (s.e++, 1e14 == eu[0] && (eu[0] = 1));
                    break;
                  }
                  if (((eu[ea] += ei), 1e14 != eu[ea])) break;
                  (eu[ea--] = 0), (ei = 1);
                }
              for (et = eu.length; 0 === eu[--et]; eu.pop());
            }
            s.e > ey ? (s.c = s.e = null) : s.e < ev && (s.c = [(s.e = 0)]);
          }
          return s;
        }
        function valueOf(s) {
          var x,
            W = s.e;
          return null === W
            ? s.toString()
            : ((x = coeffToString(s.c)),
              (x =
                W <= ew || W >= eb
                  ? toExponential(x, W)
                  : toFixedPoint(x, W, "0")),
              s.s < 0 ? "-" + x : x);
        }
        return (
          (BigNumber.clone = clone),
          (BigNumber.ROUND_UP = 0),
          (BigNumber.ROUND_DOWN = 1),
          (BigNumber.ROUND_CEIL = 2),
          (BigNumber.ROUND_FLOOR = 3),
          (BigNumber.ROUND_HALF_UP = 4),
          (BigNumber.ROUND_HALF_DOWN = 5),
          (BigNumber.ROUND_HALF_EVEN = 6),
          (BigNumber.ROUND_HALF_CEIL = 7),
          (BigNumber.ROUND_HALF_FLOOR = 8),
          (BigNumber.EUCLID = 9),
          (BigNumber.config = BigNumber.set =
            function (s) {
              var x, W;
              if (null != s) {
                if ("object" == typeof s) {
                  if (
                    (s.hasOwnProperty((x = "DECIMAL_PLACES")) &&
                      (intCheck((W = s[x]), 0, 1e9, x), (eg = W)),
                    s.hasOwnProperty((x = "ROUNDING_MODE")) &&
                      (intCheck((W = s[x]), 0, 8, x), (em = W)),
                    s.hasOwnProperty((x = "EXPONENTIAL_AT")) &&
                      ((W = s[x]) && W.pop
                        ? (intCheck(W[0], -1e9, 0, x),
                          intCheck(W[1], 0, 1e9, x),
                          (ew = W[0]),
                          (eb = W[1]))
                        : (intCheck(W, -1e9, 1e9, x),
                          (ew = -(eb = W < 0 ? -W : W)))),
                    s.hasOwnProperty((x = "RANGE")))
                  ) {
                    if ((W = s[x]) && W.pop)
                      intCheck(W[0], -1e9, -1, x),
                        intCheck(W[1], 1, 1e9, x),
                        (ev = W[0]),
                        (ey = W[1]);
                    else if ((intCheck(W, -1e9, 1e9, x), W))
                      ev = -(ey = W < 0 ? -W : W);
                    else throw Error(eu + x + " cannot be zero: " + W);
                  }
                  if (s.hasOwnProperty((x = "CRYPTO"))) {
                    if (!!(W = s[x]) === W) {
                      if (W) {
                        if (
                          "undefined" != typeof crypto &&
                          crypto &&
                          (crypto.getRandomValues || crypto.randomBytes)
                        )
                          e_ = W;
                        else
                          throw ((e_ = !W), Error(eu + "crypto unavailable"));
                      } else e_ = W;
                    } else throw Error(eu + x + " not true or false: " + W);
                  }
                  if (
                    (s.hasOwnProperty((x = "MODULO_MODE")) &&
                      (intCheck((W = s[x]), 0, 9, x), (eC = W)),
                    s.hasOwnProperty((x = "POW_PRECISION")) &&
                      (intCheck((W = s[x]), 0, 1e9, x), (ex = W)),
                    s.hasOwnProperty((x = "FORMAT")))
                  ) {
                    if ("object" == typeof (W = s[x])) eE = W;
                    else throw Error(eu + x + " not an object: " + W);
                  }
                  if (s.hasOwnProperty((x = "ALPHABET"))) {
                    if (
                      "string" != typeof (W = s[x]) ||
                      /^.?$|[+\-.\s]|(.).*\1/.test(W)
                    )
                      throw Error(eu + x + " invalid: " + W);
                    (eS = "0123456789" == W.slice(0, 10)), (eA = W);
                  }
                } else throw Error(eu + "Object expected: " + s);
              }
              return {
                DECIMAL_PLACES: eg,
                ROUNDING_MODE: em,
                EXPONENTIAL_AT: [ew, eb],
                RANGE: [ev, ey],
                CRYPTO: e_,
                MODULO_MODE: eC,
                POW_PRECISION: ex,
                FORMAT: eE,
                ALPHABET: eA,
              };
            }),
          (BigNumber.isBigNumber = function (s) {
            if (!s || !0 !== s._isBigNumber) return !1;
            if (!BigNumber.DEBUG) return !0;
            var x,
              W,
              X = s.c,
              ee = s.e,
              et = s.s;
            t: if ("[object Array]" == {}.toString.call(X)) {
              if (
                (1 === et || -1 === et) &&
                ee >= -1e9 &&
                ee <= 1e9 &&
                ee === ec(ee)
              ) {
                if (0 === X[0]) {
                  if (0 === ee && 1 === X.length) return !0;
                  break t;
                }
                if (
                  ((x = (ee + 1) % 14) < 1 && (x += 14),
                  String(X[0]).length == x)
                ) {
                  for (x = 0; x < X.length; x++)
                    if ((W = X[x]) < 0 || W >= 1e14 || W !== ec(W)) break t;
                  if (0 !== W) return !0;
                }
              }
            } else if (
              null === X &&
              null === ee &&
              (null === et || 1 === et || -1 === et)
            )
              return !0;
            throw Error(eu + "Invalid BigNumber: " + s);
          }),
          (BigNumber.maximum = BigNumber.max =
            function () {
              return maxOrMin(arguments, -1);
            }),
          (BigNumber.minimum = BigNumber.min =
            function () {
              return maxOrMin(arguments, 1);
            }),
          (BigNumber.random =
            ((x =
              (9007199254740992 * Math.random()) & 2097151
                ? function () {
                    return ec(9007199254740992 * Math.random());
                  }
                : function () {
                    return (
                      ((1073741824 * Math.random()) | 0) * 8388608 +
                      ((8388608 * Math.random()) | 0)
                    );
                  }),
            function (s) {
              var W,
                X,
                ee,
                et,
                er,
                ei = 0,
                eo = [],
                ea = new BigNumber(ef);
              if (
                (null == s ? (s = eg) : intCheck(s, 0, 1e9),
                (et = el(s / 14)),
                e_)
              ) {
                if (crypto.getRandomValues) {
                  for (
                    W = crypto.getRandomValues(new Uint32Array((et *= 2)));
                    ei < et;

                  )
                    (er = 131072 * W[ei] + (W[ei + 1] >>> 11)) >= 9e15
                      ? ((X = crypto.getRandomValues(new Uint32Array(2))),
                        (W[ei] = X[0]),
                        (W[ei + 1] = X[1]))
                      : (eo.push(er % 1e14), (ei += 2));
                  ei = et / 2;
                } else if (crypto.randomBytes) {
                  for (W = crypto.randomBytes((et *= 7)); ei < et; )
                    (er =
                      (31 & W[ei]) * 281474976710656 +
                      1099511627776 * W[ei + 1] +
                      4294967296 * W[ei + 2] +
                      16777216 * W[ei + 3] +
                      (W[ei + 4] << 16) +
                      (W[ei + 5] << 8) +
                      W[ei + 6]) >= 9e15
                      ? crypto.randomBytes(7).copy(W, ei)
                      : (eo.push(er % 1e14), (ei += 7));
                  ei = et / 7;
                } else throw ((e_ = !1), Error(eu + "crypto unavailable"));
              }
              if (!e_)
                for (; ei < et; ) (er = x()) < 9e15 && (eo[ei++] = er % 1e14);
              for (
                et = eo[--ei],
                  s %= 14,
                  et && s && ((er = eh[14 - s]), (eo[ei] = ec(et / er) * er));
                0 === eo[ei];
                eo.pop(), ei--
              );
              if (ei < 0) eo = [(ee = 0)];
              else {
                for (ee = -1; 0 === eo[0]; eo.splice(0, 1), ee -= 14);
                for (ei = 1, er = eo[0]; er >= 10; er /= 10, ei++);
                ei < 14 && (ee -= 14 - ei);
              }
              return (ea.e = ee), (ea.c = eo), ea;
            })),
          (BigNumber.sum = function () {
            for (
              var s = 1, x = arguments, W = new BigNumber(x[0]);
              s < x.length;

            )
              W = W.plus(x[s++]);
            return W;
          }),
          (eo = (function () {
            var s = "0123456789";
            function toBaseOut(s, x, W, X) {
              for (var ee, et, er = [0], ei = 0, eo = s.length; ei < eo; ) {
                for (et = er.length; et--; er[et] *= x);
                for (
                  er[0] += X.indexOf(s.charAt(ei++)), ee = 0;
                  ee < er.length;
                  ee++
                )
                  er[ee] > W - 1 &&
                    (null == er[ee + 1] && (er[ee + 1] = 0),
                    (er[ee + 1] += (er[ee] / W) | 0),
                    (er[ee] %= W));
              }
              return er.reverse();
            }
            return function (x, W, X, ee, et) {
              var er,
                eo,
                ea,
                es,
                el,
                ec,
                eu,
                ed,
                eh = x.indexOf("."),
                ep = eg,
                ef = em;
              for (
                eh >= 0 &&
                  ((es = ex),
                  (ex = 0),
                  (x = x.replace(".", "")),
                  (ec = (ed = new BigNumber(W)).pow(x.length - eh)),
                  (ex = es),
                  (ed.c = toBaseOut(
                    toFixedPoint(coeffToString(ec.c), ec.e, "0"),
                    10,
                    X,
                    s
                  )),
                  (ed.e = ed.c.length)),
                  ea = es =
                    (eu = toBaseOut(
                      x,
                      W,
                      X,
                      et ? ((er = eA), s) : ((er = s), eA)
                    )).length;
                0 == eu[--es];
                eu.pop()
              );
              if (!eu[0]) return er.charAt(0);
              if (
                (eh < 0
                  ? --ea
                  : ((ec.c = eu),
                    (ec.e = ea),
                    (ec.s = ee),
                    (eu = (ec = ei(ec, ed, ep, ef, X)).c),
                    (el = ec.r),
                    (ea = ec.e)),
                (eh = eu[(eo = ea + ep + 1)]),
                (es = X / 2),
                (el = el || eo < 0 || null != eu[eo + 1]),
                (el =
                  ef < 4
                    ? (null != eh || el) &&
                      (0 == ef || ef == (ec.s < 0 ? 3 : 2))
                    : eh > es ||
                      (eh == es &&
                        (4 == ef ||
                          el ||
                          (6 == ef && 1 & eu[eo - 1]) ||
                          ef == (ec.s < 0 ? 8 : 7)))),
                eo < 1 || !eu[0])
              )
                x = el
                  ? toFixedPoint(er.charAt(1), -ep, er.charAt(0))
                  : er.charAt(0);
              else {
                if (((eu.length = eo), el))
                  for (--X; ++eu[--eo] > X; )
                    (eu[eo] = 0), eo || (++ea, (eu = [1].concat(eu)));
                for (es = eu.length; !eu[--es]; );
                for (eh = 0, x = ""; eh <= es; x += er.charAt(eu[eh++]));
                x = toFixedPoint(x, ea, er.charAt(0));
              }
              return x;
            };
          })()),
          (ei = (function () {
            function multiply(s, x, W) {
              var X,
                ee,
                et,
                er,
                ei = 0,
                eo = s.length,
                ea = x % 1e7,
                es = (x / 1e7) | 0;
              for (s = s.slice(); eo--; )
                (X = es * (et = s[eo] % 1e7) + (er = (s[eo] / 1e7) | 0) * ea),
                  (ei =
                    (((ee = ea * et + (X % 1e7) * 1e7 + ei) / W) | 0) +
                    ((X / 1e7) | 0) +
                    es * er),
                  (s[eo] = ee % W);
              return ei && (s = [ei].concat(s)), s;
            }
            function compare(s, x, W, X) {
              var ee, et;
              if (W != X) et = W > X ? 1 : -1;
              else
                for (ee = et = 0; ee < W; ee++)
                  if (s[ee] != x[ee]) {
                    et = s[ee] > x[ee] ? 1 : -1;
                    break;
                  }
              return et;
            }
            function subtract(s, x, W, X) {
              for (var ee = 0; W--; )
                (s[W] -= ee),
                  (ee = s[W] < x[W] ? 1 : 0),
                  (s[W] = ee * X + s[W] - x[W]);
              for (; !s[0] && s.length > 1; s.splice(0, 1));
            }
            return function (s, x, W, X, ee) {
              var et,
                er,
                ei,
                eo,
                ea,
                es,
                el,
                eu,
                ed,
                eh,
                ep,
                ef,
                eg,
                em,
                ew,
                eb,
                ev,
                ey = s.s == x.s ? 1 : -1,
                e_ = s.c,
                eC = x.c;
              if (!e_ || !e_[0] || !eC || !eC[0])
                return new BigNumber(
                  s.s && x.s && (e_ ? !eC || e_[0] != eC[0] : eC)
                    ? (e_ && 0 == e_[0]) || !eC
                      ? 0 * ey
                      : ey / 0
                    : NaN
                );
              for (
                ed = (eu = new BigNumber(ey)).c = [],
                  ey = W + (er = s.e - x.e) + 1,
                  ee ||
                    ((ee = 1e14),
                    (er = bitFloor(s.e / 14) - bitFloor(x.e / 14)),
                    (ey = (ey / 14) | 0)),
                  ei = 0;
                eC[ei] == (e_[ei] || 0);
                ei++
              );
              if ((eC[ei] > (e_[ei] || 0) && er--, ey < 0))
                ed.push(1), (eo = !0);
              else {
                for (
                  em = e_.length,
                    eb = eC.length,
                    ei = 0,
                    ey += 2,
                    (ea = ec(ee / (eC[0] + 1))) > 1 &&
                      ((eC = multiply(eC, ea, ee)),
                      (e_ = multiply(e_, ea, ee)),
                      (eb = eC.length),
                      (em = e_.length)),
                    eg = eb,
                    ep = (eh = e_.slice(0, eb)).length;
                  ep < eb;
                  eh[ep++] = 0
                );
                (ev = [0].concat((ev = eC.slice()))),
                  (ew = eC[0]),
                  eC[1] >= ee / 2 && ew++;
                do {
                  if (((ea = 0), (et = compare(eC, eh, eb, ep)) < 0)) {
                    if (
                      ((ef = eh[0]),
                      eb != ep && (ef = ef * ee + (eh[1] || 0)),
                      (ea = ec(ef / ew)) > 1)
                    )
                      for (
                        ea >= ee && (ea = ee - 1),
                          el = (es = multiply(eC, ea, ee)).length,
                          ep = eh.length;
                        1 == compare(es, eh, el, ep);

                      )
                        ea--,
                          subtract(es, eb < el ? ev : eC, el, ee),
                          (el = es.length),
                          (et = 1);
                    else
                      0 == ea && (et = ea = 1), (el = (es = eC.slice()).length);
                    if (
                      (el < ep && (es = [0].concat(es)),
                      subtract(eh, es, ep, ee),
                      (ep = eh.length),
                      -1 == et)
                    )
                      for (; 1 > compare(eC, eh, eb, ep); )
                        ea++,
                          subtract(eh, eb < ep ? ev : eC, ep, ee),
                          (ep = eh.length);
                  } else 0 === et && (ea++, (eh = [0]));
                  (ed[ei++] = ea),
                    eh[0]
                      ? (eh[ep++] = e_[eg] || 0)
                      : ((eh = [e_[eg]]), (ep = 1));
                } while ((eg++ < em || null != eh[0]) && ey--);
                (eo = null != eh[0]), ed[0] || ed.splice(0, 1);
              }
              if (1e14 == ee) {
                for (ei = 1, ey = ed[0]; ey >= 10; ey /= 10, ei++);
                round(eu, W + (eu.e = ei + 14 * er - 1) + 1, X, eo);
              } else (eu.e = er), (eu.r = +eo);
              return eu;
            };
          })()),
          (W = /^(-?)0([xbo])(?=\w[\w.]*$)/i),
          (X = /^([^.]+)\.$/),
          (ee = /^\.([^.]+)$/),
          (et = /^-?(Infinity|NaN)$/),
          (er = /^\s*\+(?=[\w.])|^\s+|\s+$/g),
          (ea = function (s, x, ei, eo) {
            var ea,
              es = ei ? x : x.replace(er, "");
            if (et.test(es)) s.s = isNaN(es) ? null : es < 0 ? -1 : 1;
            else {
              if (
                !ei &&
                ((es = es.replace(W, function (s, x, W) {
                  return (
                    (ea = "x" == (W = W.toLowerCase()) ? 16 : "b" == W ? 2 : 8),
                    eo && eo != ea ? s : x
                  );
                })),
                eo &&
                  ((ea = eo), (es = es.replace(X, "$1").replace(ee, "0.$1"))),
                x != es)
              )
                return new BigNumber(es, ea);
              if (BigNumber.DEBUG)
                throw Error(
                  eu + "Not a" + (eo ? " base " + eo : "") + " number: " + x
                );
              s.s = null;
            }
            s.c = s.e = null;
          }),
          (ep.absoluteValue = ep.abs =
            function () {
              var s = new BigNumber(this);
              return s.s < 0 && (s.s = 1), s;
            }),
          (ep.comparedTo = function (s, x) {
            return compare(this, new BigNumber(s, x));
          }),
          (ep.decimalPlaces = ep.dp =
            function (s, x) {
              var W, X, ee;
              if (null != s)
                return (
                  intCheck(s, 0, 1e9),
                  null == x ? (x = em) : intCheck(x, 0, 8),
                  round(new BigNumber(this), s + this.e + 1, x)
                );
              if (!(W = this.c)) return null;
              if (
                ((X = ((ee = W.length - 1) - bitFloor(this.e / 14)) * 14),
                (ee = W[ee]))
              )
                for (; ee % 10 == 0; ee /= 10, X--);
              return X < 0 && (X = 0), X;
            }),
          (ep.dividedBy = ep.div =
            function (s, x) {
              return ei(this, new BigNumber(s, x), eg, em);
            }),
          (ep.dividedToIntegerBy = ep.idiv =
            function (s, x) {
              return ei(this, new BigNumber(s, x), 0, 1);
            }),
          (ep.exponentiatedBy = ep.pow =
            function (s, x) {
              var W,
                X,
                ee,
                et,
                er,
                ei,
                eo,
                ea,
                es,
                ed = this;
              if ((s = new BigNumber(s)).c && !s.isInteger())
                throw Error(eu + "Exponent not an integer: " + valueOf(s));
              if (
                (null != x && (x = new BigNumber(x)),
                (ei = s.e > 14),
                !ed.c ||
                  !ed.c[0] ||
                  (1 == ed.c[0] && !ed.e && 1 == ed.c.length) ||
                  !s.c ||
                  !s.c[0])
              )
                return (
                  (es = new BigNumber(
                    Math.pow(
                      +valueOf(ed),
                      ei ? s.s * (2 - isOdd(s)) : +valueOf(s)
                    )
                  )),
                  x ? es.mod(x) : es
                );
              if (((eo = s.s < 0), x)) {
                if (x.c ? !x.c[0] : !x.s) return new BigNumber(NaN);
                (X = !eo && ed.isInteger() && x.isInteger()) &&
                  (ed = ed.mod(x));
              } else {
                if (
                  s.e > 9 &&
                  (ed.e > 0 ||
                    ed.e < -1 ||
                    (0 == ed.e
                      ? ed.c[0] > 1 || (ei && ed.c[1] >= 24e7)
                      : ed.c[0] < 8e13 || (ei && ed.c[0] <= 9999975e7)))
                )
                  return (
                    (et = ed.s < 0 && isOdd(s) ? -0 : 0),
                    ed.e > -1 && (et = 1 / et),
                    new BigNumber(eo ? 1 / et : et)
                  );
                ex && (et = el(ex / 14 + 2));
              }
              for (
                ei
                  ? ((W = new BigNumber(0.5)), eo && (s.s = 1), (ea = isOdd(s)))
                  : (ea = (ee = Math.abs(+valueOf(s))) % 2),
                  es = new BigNumber(ef);
                ;

              ) {
                if (ea) {
                  if (!(es = es.times(ed)).c) break;
                  et
                    ? es.c.length > et && (es.c.length = et)
                    : X && (es = es.mod(x));
                }
                if (ee) {
                  if (0 === (ee = ec(ee / 2))) break;
                  ea = ee % 2;
                } else if ((round((s = s.times(W)), s.e + 1, 1), s.e > 14))
                  ea = isOdd(s);
                else {
                  if (0 == (ee = +valueOf(s))) break;
                  ea = ee % 2;
                }
                (ed = ed.times(ed)),
                  et
                    ? ed.c && ed.c.length > et && (ed.c.length = et)
                    : X && (ed = ed.mod(x));
              }
              return X
                ? es
                : (eo && (es = ef.div(es)),
                  x ? es.mod(x) : et ? round(es, ex, em, er) : es);
            }),
          (ep.integerValue = function (s) {
            var x = new BigNumber(this);
            return (
              null == s ? (s = em) : intCheck(s, 0, 8), round(x, x.e + 1, s)
            );
          }),
          (ep.isEqualTo = ep.eq =
            function (s, x) {
              return 0 === compare(this, new BigNumber(s, x));
            }),
          (ep.isFinite = function () {
            return !!this.c;
          }),
          (ep.isGreaterThan = ep.gt =
            function (s, x) {
              return compare(this, new BigNumber(s, x)) > 0;
            }),
          (ep.isGreaterThanOrEqualTo = ep.gte =
            function (s, x) {
              return 1 === (x = compare(this, new BigNumber(s, x))) || 0 === x;
            }),
          (ep.isInteger = function () {
            return !!this.c && bitFloor(this.e / 14) > this.c.length - 2;
          }),
          (ep.isLessThan = ep.lt =
            function (s, x) {
              return 0 > compare(this, new BigNumber(s, x));
            }),
          (ep.isLessThanOrEqualTo = ep.lte =
            function (s, x) {
              return -1 === (x = compare(this, new BigNumber(s, x))) || 0 === x;
            }),
          (ep.isNaN = function () {
            return !this.s;
          }),
          (ep.isNegative = function () {
            return this.s < 0;
          }),
          (ep.isPositive = function () {
            return this.s > 0;
          }),
          (ep.isZero = function () {
            return !!this.c && 0 == this.c[0];
          }),
          (ep.minus = function (s, x) {
            var W,
              X,
              ee,
              et,
              er = this.s;
            if (((x = (s = new BigNumber(s, x)).s), !er || !x))
              return new BigNumber(NaN);
            if (er != x) return (s.s = -x), this.plus(s);
            var ei = this.e / 14,
              eo = s.e / 14,
              ea = this.c,
              es = s.c;
            if (!ei || !eo) {
              if (!ea || !es)
                return ea ? ((s.s = -x), s) : new BigNumber(es ? this : NaN);
              if (!ea[0] || !es[0])
                return es[0]
                  ? ((s.s = -x), s)
                  : new BigNumber(ea[0] ? this : 3 == em ? -0 : 0);
            }
            if (
              ((ei = bitFloor(ei)),
              (eo = bitFloor(eo)),
              (ea = ea.slice()),
              (er = ei - eo))
            ) {
              for (
                (et = er < 0)
                  ? ((er = -er), (ee = ea))
                  : ((eo = ei), (ee = es)),
                  ee.reverse(),
                  x = er;
                x--;
                ee.push(0)
              );
              ee.reverse();
            } else
              for (
                X = (et = (er = ea.length) < (x = es.length)) ? er : x,
                  er = x = 0;
                x < X;
                x++
              )
                if (ea[x] != es[x]) {
                  et = ea[x] < es[x];
                  break;
                }
            if (
              (et && ((ee = ea), (ea = es), (es = ee), (s.s = -s.s)),
              (x = (X = es.length) - (W = ea.length)) > 0)
            )
              for (; x--; ea[W++] = 0);
            for (x = 1e14 - 1; X > er; ) {
              if (ea[--X] < es[X]) {
                for (W = X; W && !ea[--W]; ea[W] = x);
                --ea[W], (ea[X] += 1e14);
              }
              ea[X] -= es[X];
            }
            for (; 0 == ea[0]; ea.splice(0, 1), --eo);
            return ea[0]
              ? normalise(s, ea, eo)
              : ((s.s = 3 == em ? -1 : 1), (s.c = [(s.e = 0)]), s);
          }),
          (ep.modulo = ep.mod =
            function (s, x) {
              var W, X;
              return ((s = new BigNumber(s, x)),
              this.c && s.s && (!s.c || s.c[0]))
                ? s.c && (!this.c || this.c[0])
                  ? (9 == eC
                      ? ((X = s.s),
                        (s.s = 1),
                        (W = ei(this, s, 0, 3)),
                        (s.s = X),
                        (W.s *= X))
                      : (W = ei(this, s, 0, eC)),
                    (s = this.minus(W.times(s))).c[0] ||
                      1 != eC ||
                      (s.s = this.s),
                    s)
                  : new BigNumber(this)
                : new BigNumber(NaN);
            }),
          (ep.multipliedBy = ep.times =
            function (s, x) {
              var W,
                X,
                ee,
                et,
                er,
                ei,
                eo,
                ea,
                es,
                el,
                ec,
                eu,
                ed,
                eh = this.c,
                ep = (s = new BigNumber(s, x)).c;
              if (!eh || !ep || !eh[0] || !ep[0])
                return (
                  this.s && s.s && (!eh || eh[0] || ep) && (!ep || ep[0] || eh)
                    ? ((s.s *= this.s),
                      eh && ep ? ((s.c = [0]), (s.e = 0)) : (s.c = s.e = null))
                    : (s.c = s.e = s.s = null),
                  s
                );
              for (
                X = bitFloor(this.e / 14) + bitFloor(s.e / 14),
                  s.s *= this.s,
                  (eo = eh.length) < (el = ep.length) &&
                    ((ed = eh),
                    (eh = ep),
                    (ep = ed),
                    (ee = eo),
                    (eo = el),
                    (el = ee)),
                  ee = eo + el,
                  ed = [];
                ee--;
                ed.push(0)
              );
              for (ee = el; --ee >= 0; ) {
                for (
                  W = 0,
                    ec = ep[ee] % 1e7,
                    eu = (ep[ee] / 1e7) | 0,
                    et = ee + (er = eo);
                  et > ee;

                )
                  (ei =
                    eu * (ea = eh[--er] % 1e7) +
                    (es = (eh[er] / 1e7) | 0) * ec),
                    (W =
                      (((ea = ec * ea + (ei % 1e7) * 1e7 + ed[et] + W) / 1e14) |
                        0) +
                      ((ei / 1e7) | 0) +
                      eu * es),
                    (ed[et--] = ea % 1e14);
                ed[et] = W;
              }
              return W ? ++X : ed.splice(0, 1), normalise(s, ed, X);
            }),
          (ep.negated = function () {
            var s = new BigNumber(this);
            return (s.s = -s.s || null), s;
          }),
          (ep.plus = function (s, x) {
            var W,
              X = this.s;
            if (((x = (s = new BigNumber(s, x)).s), !X || !x))
              return new BigNumber(NaN);
            if (X != x) return (s.s = -x), this.minus(s);
            var ee = this.e / 14,
              et = s.e / 14,
              er = this.c,
              ei = s.c;
            if (!ee || !et) {
              if (!er || !ei) return new BigNumber(X / 0);
              if (!er[0] || !ei[0])
                return ei[0] ? s : new BigNumber(er[0] ? this : 0 * X);
            }
            if (
              ((ee = bitFloor(ee)),
              (et = bitFloor(et)),
              (er = er.slice()),
              (X = ee - et))
            ) {
              for (
                X > 0 ? ((et = ee), (W = ei)) : ((X = -X), (W = er)),
                  W.reverse();
                X--;
                W.push(0)
              );
              W.reverse();
            }
            for (
              (X = er.length) - (x = ei.length) < 0 &&
                ((W = ei), (ei = er), (er = W), (x = X)),
                X = 0;
              x;

            )
              (X = ((er[--x] = er[x] + ei[x] + X) / 1e14) | 0),
                (er[x] = 1e14 === er[x] ? 0 : er[x] % 1e14);
            return X && ((er = [X].concat(er)), ++et), normalise(s, er, et);
          }),
          (ep.precision = ep.sd =
            function (s, x) {
              var W, X, ee;
              if (null != s && !!s !== s)
                return (
                  intCheck(s, 1, 1e9),
                  null == x ? (x = em) : intCheck(x, 0, 8),
                  round(new BigNumber(this), s, x)
                );
              if (!(W = this.c)) return null;
              if (((X = 14 * (ee = W.length - 1) + 1), (ee = W[ee]))) {
                for (; ee % 10 == 0; ee /= 10, X--);
                for (ee = W[0]; ee >= 10; ee /= 10, X++);
              }
              return s && this.e + 1 > X && (X = this.e + 1), X;
            }),
          (ep.shiftedBy = function (s) {
            return (
              intCheck(s, -9007199254740991, 9007199254740991),
              this.times("1e" + s)
            );
          }),
          (ep.squareRoot = ep.sqrt =
            function () {
              var s,
                x,
                W,
                X,
                ee,
                et = this.c,
                er = this.s,
                eo = this.e,
                ea = eg + 4,
                es = new BigNumber("0.5");
              if (1 !== er || !et || !et[0])
                return new BigNumber(
                  !er || (er < 0 && (!et || et[0])) ? NaN : et ? this : 1 / 0
                );
              if (
                (0 == (er = Math.sqrt(+valueOf(this))) || er == 1 / 0
                  ? (((x = coeffToString(et)).length + eo) % 2 == 0 &&
                      (x += "0"),
                    (er = Math.sqrt(+x)),
                    (eo = bitFloor((eo + 1) / 2) - (eo < 0 || eo % 2)),
                    (x =
                      er == 1 / 0
                        ? "5e" + eo
                        : (x = er.toExponential()).slice(
                            0,
                            x.indexOf("e") + 1
                          ) + eo),
                    (W = new BigNumber(x)))
                  : (W = new BigNumber(er + "")),
                W.c[0])
              ) {
                for ((er = (eo = W.e) + ea) < 3 && (er = 0); ; )
                  if (
                    ((ee = W),
                    (W = es.times(ee.plus(ei(this, ee, ea, 1)))),
                    coeffToString(ee.c).slice(0, er) ===
                      (x = coeffToString(W.c)).slice(0, er))
                  ) {
                    if (
                      (W.e < eo && --er,
                      "9999" != (x = x.slice(er - 3, er + 1)) &&
                        (X || "4999" != x))
                    ) {
                      (+x && (+x.slice(1) || "5" != x.charAt(0))) ||
                        (round(W, W.e + eg + 2, 1), (s = !W.times(W).eq(this)));
                      break;
                    }
                    if (
                      !X &&
                      (round(ee, ee.e + eg + 2, 0), ee.times(ee).eq(this))
                    ) {
                      W = ee;
                      break;
                    }
                    (ea += 4), (er += 4), (X = 1);
                  }
              }
              return round(W, W.e + eg + 1, em, s);
            }),
          (ep.toExponential = function (s, x) {
            return (
              null != s && (intCheck(s, 0, 1e9), s++), format(this, s, x, 1)
            );
          }),
          (ep.toFixed = function (s, x) {
            return (
              null != s && (intCheck(s, 0, 1e9), (s = s + this.e + 1)),
              format(this, s, x)
            );
          }),
          (ep.toFormat = function (s, x, W) {
            var X;
            if (null == W)
              null != s && x && "object" == typeof x
                ? ((W = x), (x = null))
                : s && "object" == typeof s
                ? ((W = s), (s = x = null))
                : (W = eE);
            else if ("object" != typeof W)
              throw Error(eu + "Argument not an object: " + W);
            if (((X = this.toFixed(s, x)), this.c)) {
              var ee,
                et = X.split("."),
                er = +W.groupSize,
                ei = +W.secondaryGroupSize,
                eo = W.groupSeparator || "",
                ea = et[0],
                es = et[1],
                el = this.s < 0,
                ec = el ? ea.slice(1) : ea,
                ed = ec.length;
              if (
                (ei && ((ee = er), (er = ei), (ei = ee), (ed -= ee)),
                er > 0 && ed > 0)
              ) {
                for (
                  ee = ed % er || er, ea = ec.substr(0, ee);
                  ee < ed;
                  ee += er
                )
                  ea += eo + ec.substr(ee, er);
                ei > 0 && (ea += eo + ec.slice(ee)), el && (ea = "-" + ea);
              }
              X = es
                ? ea +
                  (W.decimalSeparator || "") +
                  ((ei = +W.fractionGroupSize)
                    ? es.replace(
                        RegExp("\\d{" + ei + "}\\B", "g"),
                        "$&" + (W.fractionGroupSeparator || "")
                      )
                    : es)
                : ea;
            }
            return (W.prefix || "") + X + (W.suffix || "");
          }),
          (ep.toFraction = function (s) {
            var x,
              W,
              X,
              ee,
              et,
              er,
              eo,
              ea,
              es,
              el,
              ec,
              ed,
              ep = this.c;
            if (
              null != s &&
              ((!(eo = new BigNumber(s)).isInteger() && (eo.c || 1 !== eo.s)) ||
                eo.lt(ef))
            )
              throw Error(
                eu +
                  "Argument " +
                  (eo.isInteger() ? "out of range: " : "not an integer: ") +
                  valueOf(eo)
              );
            if (!ep) return new BigNumber(this);
            for (
              x = new BigNumber(ef),
                es = W = new BigNumber(ef),
                X = ea = new BigNumber(ef),
                ed = coeffToString(ep),
                et = x.e = ed.length - this.e - 1,
                x.c[0] = eh[(er = et % 14) < 0 ? 14 + er : er],
                s = !s || eo.comparedTo(x) > 0 ? (et > 0 ? x : es) : eo,
                er = ey,
                ey = 1 / 0,
                eo = new BigNumber(ed),
                ea.c[0] = 0;
              (el = ei(eo, x, 0, 1)),
                1 != (ee = W.plus(el.times(X))).comparedTo(s);

            )
              (W = X),
                (X = ee),
                (es = ea.plus(el.times((ee = es)))),
                (ea = ee),
                (x = eo.minus(el.times((ee = x)))),
                (eo = ee);
            return (
              (ee = ei(s.minus(W), X, 0, 1)),
              (ea = ea.plus(ee.times(es))),
              (W = W.plus(ee.times(X))),
              (ea.s = es.s = this.s),
              (et *= 2),
              (ec =
                1 >
                ei(es, X, et, em)
                  .minus(this)
                  .abs()
                  .comparedTo(ei(ea, W, et, em).minus(this).abs())
                  ? [es, X]
                  : [ea, W]),
              (ey = er),
              ec
            );
          }),
          (ep.toNumber = function () {
            return +valueOf(this);
          }),
          (ep.toPrecision = function (s, x) {
            return null != s && intCheck(s, 1, 1e9), format(this, s, x, 2);
          }),
          (ep.toString = function (s) {
            var x,
              W = this,
              X = W.s,
              ee = W.e;
            return (
              null === ee
                ? X
                  ? ((x = "Infinity"), X < 0 && (x = "-" + x))
                  : (x = "NaN")
                : (null == s
                    ? (x =
                        ee <= ew || ee >= eb
                          ? toExponential(coeffToString(W.c), ee)
                          : toFixedPoint(coeffToString(W.c), ee, "0"))
                    : 10 === s && eS
                    ? (x = toFixedPoint(
                        coeffToString(
                          (W = round(new BigNumber(W), eg + ee + 1, em)).c
                        ),
                        W.e,
                        "0"
                      ))
                    : (intCheck(s, 2, eA.length, "Base"),
                      (x = eo(
                        toFixedPoint(coeffToString(W.c), ee, "0"),
                        10,
                        s,
                        X,
                        !0
                      ))),
                  X < 0 && W.c[0] && (x = "-" + x)),
              x
            );
          }),
          (ep.valueOf = ep.toJSON =
            function () {
              return valueOf(this);
            }),
          (ep._isBigNumber = !0),
          (ep[Symbol.toStringTag] = "BigNumber"),
          (ep[Symbol.for("nodejs.util.inspect.custom")] = ep.valueOf),
          null != s && BigNumber.set(s),
          BigNumber
        );
      })();
      let ef = {
          bigNumber: (s) => new ep(s),
          multiply(s, x) {
            if (void 0 === s || void 0 === x) return ep(0);
            let W = new ep(s),
              X = new ep(x);
            return W.multipliedBy(X);
          },
          formatNumberToLocalString: (s, x = 2) =>
            void 0 === s
              ? "0.00"
              : "number" == typeof s
              ? s.toLocaleString("en-US", {
                  maximumFractionDigits: x,
                  minimumFractionDigits: x,
                })
              : parseFloat(s).toLocaleString("en-US", {
                  maximumFractionDigits: x,
                  minimumFractionDigits: x,
                }),
          parseLocalStringToNumber: (s) =>
            void 0 === s ? 0 : parseFloat(s.replace(/,/gu, "")),
        },
        eg = {
          numericInputKeyDown(s, x, W) {
            let X = s.metaKey || s.ctrlKey,
              ee = s.key,
              et = ee.toLocaleLowerCase(),
              er = "," === ee,
              ei = "." === ee,
              eo = ee >= "0" && ee <= "9";
            X ||
              ("a" !== et && "c" !== et && "v" !== et && "x" !== et) ||
              s.preventDefault(),
              "0" !== x || er || ei || "0" !== ee || s.preventDefault(),
              "0" === x && eo && (W(ee), s.preventDefault()),
              (er || ei) &&
                (x || (W("0."), s.preventDefault()),
                (x?.includes(".") || x?.includes(",")) && s.preventDefault()),
              eo ||
                [
                  "Backspace",
                  "Meta",
                  "Ctrl",
                  "a",
                  "A",
                  "c",
                  "C",
                  "x",
                  "X",
                  "v",
                  "V",
                  "ArrowLeft",
                  "ArrowRight",
                  "Tab",
                ].includes(ee) ||
                ei ||
                er ||
                s.preventDefault();
          },
        },
        em = [
          {
            type: "function",
            name: "transfer",
            stateMutability: "nonpayable",
            inputs: [
              { name: "_to", type: "address" },
              { name: "_value", type: "uint256" },
            ],
            outputs: [{ name: "", type: "bool" }],
          },
          {
            type: "function",
            name: "transferFrom",
            stateMutability: "nonpayable",
            inputs: [
              { name: "_from", type: "address" },
              { name: "_to", type: "address" },
              { name: "_value", type: "uint256" },
            ],
            outputs: [{ name: "", type: "bool" }],
          },
        ],
        ew = [
          {
            type: "function",
            name: "approve",
            stateMutability: "nonpayable",
            inputs: [
              { name: "spender", type: "address" },
              { name: "amount", type: "uint256" },
            ],
            outputs: [{ type: "bool" }],
          },
        ],
        eb = [
          {
            type: "function",
            name: "transfer",
            stateMutability: "nonpayable",
            inputs: [
              { name: "recipient", type: "address" },
              { name: "amount", type: "uint256" },
            ],
            outputs: [],
          },
          {
            type: "function",
            name: "transferFrom",
            stateMutability: "nonpayable",
            inputs: [
              { name: "sender", type: "address" },
              { name: "recipient", type: "address" },
              { name: "amount", type: "uint256" },
            ],
            outputs: [{ name: "", type: "bool" }],
          },
        ],
        ev = {
          WC_NAME_SUFFIX: ".reown.id",
          WC_NAME_SUFFIX_LEGACY: ".wcn.id",
          BLOCKCHAIN_API_RPC_URL: "https://rpc.walletconnect.org",
          PULSE_API_URL: "https://pulse.walletconnect.org",
          W3M_API_URL: "https://api.web3modal.org",
          CONNECTOR_ID: {
            WALLET_CONNECT: "walletConnect",
            INJECTED: "injected",
            WALLET_STANDARD: "announced",
            COINBASE: "coinbaseWallet",
            COINBASE_SDK: "coinbaseWalletSDK",
            SAFE: "safe",
            LEDGER: "ledger",
            EIP6963: "eip6963",
            AUTH: "ID_AUTH",
          },
          CONNECTOR_NAMES: { AUTH: "Auth" },
          AUTH_CONNECTOR_SUPPORTED_CHAINS: ["eip155", "solana"],
          LIMITS: { PENDING_TRANSACTIONS: 99 },
          CHAIN: {
            EVM: "eip155",
            SOLANA: "solana",
            POLKADOT: "polkadot",
            BITCOIN: "bip122",
          },
          CHAIN_NAME_MAP: {
            eip155: "Ethereum",
            solana: "Solana",
            polkadot: "Polkadot",
            bip122: "Bitcoin",
          },
          USDT_CONTRACT_ADDRESSES: [
            "0xdac17f958d2ee523a2206206994597c13d831ec7",
            "0xc2132d05d31c914a87c6611c10748aeb04b58e8f",
            "0x9702230a8ea53601f5cd2dc00fdbc13d4df4a8c7",
            "0x919C1c267BC06a7039e03fcc2eF738525769109c",
            "0x48065fbBE25f71C9282ddf5e1cD6D6A887483D5e",
            "0x55d398326f99059fF775485246999027B3197955",
            "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",
          ],
          HTTP_STATUS_CODES: { SERVICE_UNAVAILABLE: 503, FORBIDDEN: 403 },
          UNSUPPORTED_NETWORK_NAME: "Unknown Network",
        },
        ey = {
          getERC20Abi: (s) =>
            ev.USDT_CONTRACT_ADDRESSES.includes(s) ? eb : em,
          getSwapAbi: () => ew,
        },
        e_ = { URLS: { FAQ: "https://walletconnect.com/faq" } };
      let Emitter = class Emitter {
        on(s, x) {
          Emitter.eventListeners.has(s) ||
            Emitter.eventListeners.set(s, new Set()),
            Emitter.eventListeners.get(s)?.add(x);
        }
        off(s, x) {
          let W = Emitter.eventListeners.get(s);
          W && W.delete(x);
        }
        emit(s, x) {
          let W = Emitter.eventListeners.get(s);
          W && W.forEach((s) => s(x));
        }
        clear(s) {
          Emitter.eventListeners.delete(s);
        }
        clearAll() {
          Emitter.eventListeners.clear();
        }
      };
      Emitter.eventListeners = new Map();
      let eC = {
          validateCaipAddress(s) {
            if (s.split(":")?.length !== 3) throw Error("Invalid CAIP Address");
            return s;
          },
          parseCaipAddress(s) {
            let x = s.split(":");
            if (3 !== x.length) throw Error(`Invalid CAIP-10 address: ${s}`);
            let [W, X, ee] = x;
            if (!W || !X || !ee) throw Error(`Invalid CAIP-10 address: ${s}`);
            return { chainNamespace: W, chainId: X, address: ee };
          },
          parseCaipNetworkId(s) {
            let x = s.split(":");
            if (2 !== x.length) throw Error(`Invalid CAIP-2 network id: ${s}`);
            let [W, X] = x;
            if (!W || !X) throw Error(`Invalid CAIP-2 network id: ${s}`);
            return { chainNamespace: W, chainId: X };
          },
        },
        ex = {
          WALLET_ID: "@appkit/wallet_id",
          WALLET_NAME: "@appkit/wallet_name",
          SOLANA_WALLET: "@appkit/solana_wallet",
          SOLANA_CAIP_CHAIN: "@appkit/solana_caip_chain",
          ACTIVE_CAIP_NETWORK_ID: "@appkit/active_caip_network_id",
          CONNECTED_SOCIAL: "@appkit/connected_social",
          CONNECTED_SOCIAL_USERNAME: "@appkit-wallet/SOCIAL_USERNAME",
          RECENT_WALLETS: "@appkit/recent_wallets",
          DEEPLINK_CHOICE: "WALLETCONNECT_DEEPLINK_CHOICE",
          ACTIVE_NAMESPACE: "@appkit/active_namespace",
          CONNECTED_NAMESPACES: "@appkit/connected_namespaces",
          CONNECTION_STATUS: "@appkit/connection_status",
          SIWX_AUTH_TOKEN: "@appkit/siwx-auth-token",
          SIWX_NONCE_TOKEN: "@appkit/siwx-nonce-token",
        };
      function getSafeConnectorIdKey(s) {
        if (!s) throw Error("Namespace is required for CONNECTED_CONNECTOR_ID");
        return `@appkit/${s}:connected_connector_id`;
      }
      let eE = {
        setItem(s, x) {
          isSafe() && void 0 !== x && localStorage.setItem(s, x);
        },
        getItem(s) {
          if (isSafe()) return localStorage.getItem(s) || void 0;
        },
        removeItem(s) {
          isSafe() && localStorage.removeItem(s);
        },
        clear() {
          isSafe() && localStorage.clear();
        },
      };
      function isSafe() {
        return (
          "undefined" != typeof window && "undefined" != typeof localStorage
        );
      }
      function getW3mThemeVariables(s, x) {
        return "light" === x
          ? {
              "--w3m-accent": s?.["--w3m-accent"] || "hsla(231, 100%, 70%, 1)",
              "--w3m-background": "#fff",
            }
          : {
              "--w3m-accent": s?.["--w3m-accent"] || "hsla(230, 100%, 67%, 1)",
              "--w3m-background": "#121313",
            };
      }
      function isReownName(s) {
        return (
          s?.endsWith(ev.WC_NAME_SUFFIX_LEGACY) ||
          s?.endsWith(ev.WC_NAME_SUFFIX)
        );
      }
    },
    83408: function (s, x, W) {
      "use strict";
      W.d(x, {
        AccountController: function () {
          return et.N;
        },
        AlertController: function () {
          return eD.B;
        },
        ApiController: function () {
          return el.Q;
        },
        WM: function () {
          return eb.W;
        },
        fz: function () {
          return eL;
        },
        Lr: function () {
          return ec.L;
        },
        RY: function () {
          return er.R;
        },
        ConnectionController: function () {
          return eg.l;
        },
        ConnectorController: function () {
          return em.ConnectorController;
        },
        bq: function () {
          return es.bq;
        },
        j1: function () {
          return eS.j;
        },
        a: function () {
          return eM;
        },
        Xs: function () {
          return eC.X;
        },
        IN: function () {
          return X.I;
        },
        ph: function () {
          return ef;
        },
        OptionsController: function () {
          return ey.OptionsController;
        },
        Ie: function () {
          return e_.I;
        },
        RouterController: function () {
          return ee.RouterController;
        },
        wf: function () {
          return eU.w;
        },
        Si: function () {
          return eI;
        },
        SnackController: function () {
          return ew.K;
        },
        MO: function () {
          return ej.M;
        },
        nY: function () {
          return eE.nY;
        },
        ThemeController: function () {
          return ev.u;
        },
        fw: function () {
          return eR;
        },
        sl: function () {
          return ex.s;
        },
      });
      var X = W(99336),
        ee = W(42859),
        et = W(64244),
        er = W(17672),
        ei = W(17832),
        eo = W(73932),
        ea = W(74490),
        es = W(62318),
        el = W(18754),
        ec = W(21310);
      let eu = {
          id: "2b92315d-eab7-5bef-84fa-089a131333f5",
          name: "USD Coin",
          symbol: "USDC",
          networks: [
            {
              name: "ethereum-mainnet",
              display_name: "Ethereum",
              chain_id: "1",
              contract_address: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
            },
            {
              name: "polygon-mainnet",
              display_name: "Polygon",
              chain_id: "137",
              contract_address: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
            },
          ],
        },
        ed = {
          id: "USD",
          payment_method_limits: [
            { id: "card", min: "10.00", max: "7500.00" },
            { id: "ach_bank_account", min: "10.00", max: "25000.00" },
          ],
        },
        eh = {
          providers: es.gy,
          selectedProvider: null,
          error: null,
          purchaseCurrency: eu,
          paymentCurrency: ed,
          purchaseCurrencies: [eu],
          paymentCurrencies: [],
          quotesLoading: !1,
        },
        ep = (0, ei.sj)(eh),
        ef = {
          state: ep,
          subscribe: (s) => (0, ei.Ld)(ep, () => s(ep)),
          subscribeKey: (s, x) => (0, eo.VW)(ep, s, x),
          setSelectedProvider(s) {
            if (s && "meld" === s.name) {
              let x = es.xj,
                W =
                  er.R.state.activeChain === ea.bq.CHAIN.SOLANA
                    ? "SOL"
                    : "USDC",
                X = et.N.state.address ?? "",
                ee = new URL(s.url);
              ee.searchParams.append("publicKey", x),
                ee.searchParams.append("destinationCurrencyCode", W),
                ee.searchParams.append("walletAddress", X),
                (s.url = ee.toString());
            }
            ep.selectedProvider = s;
          },
          setPurchaseCurrency(s) {
            ep.purchaseCurrency = s;
          },
          setPaymentCurrency(s) {
            ep.paymentCurrency = s;
          },
          setPurchaseAmount(s) {
            this.state.purchaseAmount = s;
          },
          setPaymentAmount(s) {
            this.state.paymentAmount = s;
          },
          async getAvailableCurrencies() {
            let s = await ec.L.getOnrampOptions();
            (ep.purchaseCurrencies = s.purchaseCurrencies),
              (ep.paymentCurrencies = s.paymentCurrencies),
              (ep.paymentCurrency = s.paymentCurrencies[0] || ed),
              (ep.purchaseCurrency = s.purchaseCurrencies[0] || eu),
              await el.Q.fetchCurrencyImages(
                s.paymentCurrencies.map((s) => s.id)
              ),
              await el.Q.fetchTokenImages(
                s.purchaseCurrencies.map((s) => s.symbol)
              );
          },
          async getQuote() {
            ep.quotesLoading = !0;
            try {
              let s = await ec.L.getOnrampQuote({
                purchaseCurrency: ep.purchaseCurrency,
                paymentCurrency: ep.paymentCurrency,
                amount: ep.paymentAmount?.toString() || "0",
                network: ep.purchaseCurrency?.symbol,
              });
              return (
                (ep.quotesLoading = !1),
                (ep.purchaseAmount = Number(s?.purchaseAmount.amount)),
                s
              );
            } catch (s) {
              return (ep.error = s.message), (ep.quotesLoading = !1), null;
            } finally {
              ep.quotesLoading = !1;
            }
          },
          resetState() {
            (ep.providers = es.gy),
              (ep.selectedProvider = null),
              (ep.error = null),
              (ep.purchaseCurrency = eu),
              (ep.paymentCurrency = ed),
              (ep.purchaseCurrencies = [eu]),
              (ep.paymentCurrencies = []),
              (ep.paymentAmount = void 0),
              (ep.purchaseAmount = void 0),
              (ep.quotesLoading = !1);
          },
        };
      var eg = W(9169),
        em = W(85956),
        ew = W(32655),
        eb = W(64110),
        ev = W(98138),
        ey = W(91862),
        e_ = W(2977),
        eC = W(70196),
        ex = W(53530),
        eE = W(159),
        eA = W(69406),
        eS = W(11517),
        ek = W(68857);
      let eT = (0, ei.sj)({ loading: !1 }),
        eI = {
          state: eT,
          subscribe: (s) => (0, ei.Ld)(eT, () => s(eT)),
          subscribeKey: (s, x) => (0, eo.VW)(eT, s, x),
          setToken(s) {
            s && (eT.token = (0, ei.iH)(s));
          },
          setTokenAmount(s) {
            eT.sendTokenAmount = s;
          },
          setReceiverAddress(s) {
            eT.receiverAddress = s;
          },
          setReceiverProfileImageUrl(s) {
            eT.receiverProfileImageUrl = s;
          },
          setReceiverProfileName(s) {
            eT.receiverProfileName = s;
          },
          setGasPrice(s) {
            eT.gasPrice = s;
          },
          setGasPriceInUsd(s) {
            eT.gasPriceInUSD = s;
          },
          setNetworkBalanceInUsd(s) {
            eT.networkBalanceInUSD = s;
          },
          setLoading(s) {
            eT.loading = s;
          },
          sendToken() {
            switch (er.R.state.activeCaipNetwork?.chainNamespace) {
              case "eip155":
                this.sendEvmToken();
                return;
              case "solana":
                this.sendSolanaToken();
                return;
              default:
                throw Error("Unsupported chain");
            }
          },
          sendEvmToken() {
            this.state.token?.address &&
            this.state.sendTokenAmount &&
            this.state.receiverAddress
              ? (eC.X.sendEvent({
                  type: "track",
                  event: "SEND_INITIATED",
                  properties: {
                    isSmartAccount:
                      et.N.state.preferredAccountType ===
                      eA.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                    token: this.state.token.address,
                    amount: this.state.sendTokenAmount,
                    network: er.R.state.activeCaipNetwork?.caipNetworkId || "",
                  },
                }),
                this.sendERC20Token({
                  receiverAddress: this.state.receiverAddress,
                  tokenAddress: this.state.token.address,
                  sendTokenAmount: this.state.sendTokenAmount,
                  decimals: this.state.token.quantity.decimals,
                }))
              : this.state.receiverAddress &&
                this.state.sendTokenAmount &&
                this.state.gasPrice &&
                this.state.token?.quantity.decimals &&
                (eC.X.sendEvent({
                  type: "track",
                  event: "SEND_INITIATED",
                  properties: {
                    isSmartAccount:
                      et.N.state.preferredAccountType ===
                      eA.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                    token: this.state.token?.symbol,
                    amount: this.state.sendTokenAmount,
                    network: er.R.state.activeCaipNetwork?.caipNetworkId || "",
                  },
                }),
                this.sendNativeToken({
                  receiverAddress: this.state.receiverAddress,
                  sendTokenAmount: this.state.sendTokenAmount,
                  gasPrice: this.state.gasPrice,
                  decimals: this.state.token.quantity.decimals,
                }));
          },
          async fetchNetworkBalance() {
            let s = await ek.n.getMyTokensWithBalance();
            if (!s) return;
            let x = s.find(
              (s) => s.address === er.R.getActiveNetworkTokenAddress()
            );
            x &&
              (eT.networkBalanceInUSD = x
                ? ea.C6.multiply(x.quantity.numeric, x.price).toString()
                : "0");
          },
          isInsufficientNetworkTokenForGas(s, x) {
            let W = x || "0";
            return (
              !!ea.C6.bigNumber(s).isZero() ||
              ea.C6.bigNumber(ea.C6.bigNumber(W)).isGreaterThan(s)
            );
          },
          hasInsufficientGasFunds() {
            let s = !0;
            return (
              et.N.state.preferredAccountType ===
              eA.y_.ACCOUNT_TYPES.SMART_ACCOUNT
                ? (s = !1)
                : eT.networkBalanceInUSD &&
                  (s = this.isInsufficientNetworkTokenForGas(
                    eT.networkBalanceInUSD,
                    eT.gasPriceInUSD
                  )),
              s
            );
          },
          async sendNativeToken(s) {
            ee.RouterController.pushTransactionStack({
              view: "Account",
              goBack: !1,
            });
            let x = s.receiverAddress,
              W = et.N.state.address,
              X = eg.l.parseUnits(
                s.sendTokenAmount.toString(),
                Number(s.decimals)
              );
            try {
              await eg.l.sendTransaction({
                chainNamespace: "eip155",
                to: x,
                address: W,
                data: "0x",
                value: X ?? BigInt(0),
                gasPrice: s.gasPrice,
              }),
                ew.K.showSuccess("Transaction started"),
                eC.X.sendEvent({
                  type: "track",
                  event: "SEND_SUCCESS",
                  properties: {
                    isSmartAccount:
                      et.N.state.preferredAccountType ===
                      eA.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                    token: this.state.token?.symbol || "",
                    amount: s.sendTokenAmount,
                    network: er.R.state.activeCaipNetwork?.caipNetworkId || "",
                  },
                }),
                this.resetSend();
            } catch (x) {
              eC.X.sendEvent({
                type: "track",
                event: "SEND_ERROR",
                properties: {
                  isSmartAccount:
                    et.N.state.preferredAccountType ===
                    eA.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                  token: this.state.token?.symbol || "",
                  amount: s.sendTokenAmount,
                  network: er.R.state.activeCaipNetwork?.caipNetworkId || "",
                },
              }),
                ew.K.showError("Something went wrong");
            }
          },
          async sendERC20Token(s) {
            ee.RouterController.pushTransactionStack({
              view: "Account",
              goBack: !1,
            });
            let x = eg.l.parseUnits(
              s.sendTokenAmount.toString(),
              Number(s.decimals)
            );
            try {
              if (
                et.N.state.address &&
                s.sendTokenAmount &&
                s.receiverAddress &&
                s.tokenAddress
              ) {
                let W = eS.j.getPlainAddress(s.tokenAddress);
                await eg.l.writeContract({
                  fromAddress: et.N.state.address,
                  tokenAddress: W,
                  args: [s.receiverAddress, x ?? BigInt(0)],
                  method: "transfer",
                  abi: ea.gY.getERC20Abi(W),
                  chainNamespace: "eip155",
                }),
                  ew.K.showSuccess("Transaction started"),
                  this.resetSend();
              }
            } catch (s) {
              ew.K.showError("Something went wrong");
            }
          },
          sendSolanaToken() {
            if (!this.state.sendTokenAmount || !this.state.receiverAddress) {
              ew.K.showError(
                "Please enter a valid amount and receiver address"
              );
              return;
            }
            ee.RouterController.pushTransactionStack({
              view: "Account",
              goBack: !1,
            }),
              eg.l
                .sendTransaction({
                  chainNamespace: "solana",
                  to: this.state.receiverAddress,
                  value: this.state.sendTokenAmount,
                })
                .then(() => {
                  this.resetSend(), et.N.fetchTokenBalance();
                })
                .catch((s) => {
                  ew.K.showError(
                    "Failed to send transaction. Please try again."
                  ),
                    console.error(
                      "SendController:sendToken - failed to send solana transaction",
                      s
                    );
                });
          },
          resetSend() {
            (eT.token = void 0),
              (eT.sendTokenAmount = void 0),
              (eT.receiverAddress = void 0),
              (eT.receiverProfileImageUrl = void 0),
              (eT.receiverProfileName = void 0),
              (eT.loading = !1);
          },
        },
        eP = (0, ei.sj)({
          message: "",
          open: !1,
          triggerRect: { width: 0, height: 0, top: 0, left: 0 },
          variant: "shade",
        }),
        eR = {
          state: eP,
          subscribe: (s) => (0, ei.Ld)(eP, () => s(eP)),
          subscribeKey: (s, x) => (0, eo.VW)(eP, s, x),
          showTooltip({ message: s, triggerRect: x, variant: W }) {
            (eP.open = !0),
              (eP.message = s),
              (eP.triggerRect = x),
              (eP.variant = W);
          },
          hide() {
            (eP.open = !1),
              (eP.message = ""),
              (eP.triggerRect = { width: 0, height: 0, top: 0, left: 0 });
          },
        },
        eN = {
          convertEVMChainIdToCoinType(s) {
            if (s >= 2147483648) throw Error("Invalid chainId");
            return (2147483648 | s) >>> 0;
          },
        },
        eO = (0, ei.sj)({ suggestions: [], loading: !1 }),
        eM = {
          state: eO,
          subscribe: (s) => (0, ei.Ld)(eO, () => s(eO)),
          subscribeKey: (s, x) => (0, eo.VW)(eO, s, x),
          async resolveName(s) {
            try {
              return await ec.L.lookupEnsName(s);
            } catch (s) {
              throw Error(
                s?.reasons?.[0]?.description || "Error resolving name"
              );
            }
          },
          async isNameRegistered(s) {
            try {
              return await ec.L.lookupEnsName(s), !0;
            } catch {
              return !1;
            }
          },
          async getSuggestions(s) {
            try {
              (eO.loading = !0), (eO.suggestions = []);
              let x = await ec.L.getEnsNameSuggestions(s);
              return (
                (eO.suggestions =
                  x.suggestions.map((s) => ({ ...s, name: s.name })) || []),
                eO.suggestions
              );
            } catch (x) {
              let s = this.parseEnsApiError(
                x,
                "Error fetching name suggestions"
              );
              throw Error(s);
            } finally {
              eO.loading = !1;
            }
          },
          async getNamesForAddress(s) {
            try {
              let x = er.R.state.activeCaipNetwork;
              if (!x) return [];
              let W = await ec.L.reverseLookupEnsName({ address: s });
              return W;
            } catch (x) {
              let s = this.parseEnsApiError(
                x,
                "Error fetching names for address"
              );
              throw Error(s);
            }
          },
          async registerName(s) {
            let x = er.R.state.activeCaipNetwork;
            if (!x) throw Error("Network not found");
            let W = et.N.state.address,
              X = em.ConnectorController.getAuthConnector();
            if (!W || !X) throw Error("Address or auth connector not found");
            eO.loading = !0;
            try {
              let X = JSON.stringify({
                name: s,
                attributes: {},
                timestamp: Math.floor(Date.now() / 1e3),
              });
              ee.RouterController.pushTransactionStack({
                view: "RegisterAccountNameSuccess",
                goBack: !1,
                replace: !0,
                onCancel() {
                  eO.loading = !1;
                },
              });
              let er = await eg.l.signMessage(X),
                ei = x.id;
              if (!ei) throw Error("Network not found");
              let eo = eN.convertEVMChainIdToCoinType(Number(ei));
              await ec.L.registerEnsName({
                coinType: eo,
                address: W,
                signature: er,
                message: X,
              }),
                et.N.setProfileName(s, x.chainNamespace),
                ee.RouterController.replace("RegisterAccountNameSuccess");
            } catch (W) {
              let x = this.parseEnsApiError(W, `Error registering name ${s}`);
              throw (
                (ee.RouterController.replace("RegisterAccountName"), Error(x))
              );
            } finally {
              eO.loading = !1;
            }
          },
          validateName: (s) => /^[a-zA-Z0-9-]{4,}$/u.test(s),
          parseEnsApiError: (s, x) => s?.reasons?.[0]?.description || x,
        };
      var eD = W(32913);
      let eB = {
          eip155: "ba0ba0cd-17c6-4806-ad93-f9d174f17900",
          solana: "a1b58899-f671-4276-6a5e-56ca5bd59700",
          polkadot: "",
          bip122: "",
        },
        eL = {
          async fetchWalletImage(s) {
            if (s)
              return (
                await el.Q._fetchWalletImage(s), this.getWalletImageById(s)
              );
          },
          getWalletImageById(s) {
            if (s) return eb.W.state.walletImages[s];
          },
          getWalletImage: (s) =>
            s?.image_url
              ? s?.image_url
              : s?.image_id
              ? eb.W.state.walletImages[s.image_id]
              : void 0,
          getNetworkImage: (s) =>
            s?.assets?.imageUrl
              ? s?.assets?.imageUrl
              : s?.assets?.imageId
              ? eb.W.state.networkImages[s.assets.imageId]
              : void 0,
          getNetworkImageById(s) {
            if (s) return eb.W.state.networkImages[s];
          },
          getConnectorImage: (s) =>
            s?.imageUrl
              ? s.imageUrl
              : s?.imageId
              ? eb.W.state.connectorImages[s.imageId]
              : void 0,
          getChainImage: (s) => eb.W.state.networkImages[eB[s]],
        };
      var ej = W(17231),
        eU = W(50367);
    },
    64244: function (s, x, W) {
      "use strict";
      W.d(x, {
        N: function () {
          return ec;
        },
      });
      var X = W(17832),
        ee = W(62318),
        et = W(11517),
        er = W(68857),
        ei = W(21310),
        eo = W(17672),
        ea = W(32655),
        es = W(159);
      let el = (0, X.sj)({
          currentTab: 0,
          tokenBalance: [],
          smartAccountDeployed: !1,
          addressLabels: new Map(),
          allAccounts: [],
        }),
        ec = {
          state: el,
          replaceState(s) {
            s && Object.assign(el, (0, X.iH)(s));
          },
          subscribe: (s) =>
            eo.R.subscribeChainProp("accountState", (x) => {
              if (x) return s(x);
            }),
          subscribeKey(s, x, W) {
            let X;
            return eo.R.subscribeChainProp(
              "accountState",
              (W) => {
                if (W) {
                  let ee = W[s];
                  X !== ee && ((X = ee), x(ee));
                }
              },
              W
            );
          },
          setStatus(s, x) {
            eo.R.setAccountProp("status", s, x);
          },
          getCaipAddress: (s) => eo.R.getAccountProp("caipAddress", s),
          setCaipAddress(s, x) {
            let W = s ? et.j.getPlainAddress(s) : void 0;
            x === eo.R.state.activeChain && (eo.R.state.activeCaipAddress = s),
              eo.R.setAccountProp("caipAddress", s, x),
              eo.R.setAccountProp("address", W, x);
          },
          setBalance(s, x, W) {
            eo.R.setAccountProp("balance", s, W),
              eo.R.setAccountProp("balanceSymbol", x, W);
          },
          setProfileName(s, x) {
            eo.R.setAccountProp("profileName", s, x);
          },
          setProfileImage(s, x) {
            eo.R.setAccountProp("profileImage", s, x);
          },
          setUser(s) {
            el.user = s;
          },
          setAddressExplorerUrl(s, x) {
            eo.R.setAccountProp("addressExplorerUrl", s, x);
          },
          setSmartAccountDeployed(s, x) {
            eo.R.setAccountProp("smartAccountDeployed", s, x);
          },
          setCurrentTab(s) {
            eo.R.setAccountProp("currentTab", s, eo.R.state.activeChain);
          },
          setTokenBalance(s, x) {
            s && eo.R.setAccountProp("tokenBalance", s, x);
          },
          setShouldUpdateToAddress(s, x) {
            eo.R.setAccountProp("shouldUpdateToAddress", s, x);
          },
          setAllAccounts(s, x) {
            eo.R.setAccountProp("allAccounts", s, x);
          },
          addAddressLabel(s, x, W) {
            let X = eo.R.getAccountProp("addressLabels", W) || new Map();
            X.set(s, x), eo.R.setAccountProp("addressLabels", X, W);
          },
          removeAddressLabel(s, x) {
            let W = eo.R.getAccountProp("addressLabels", x) || new Map();
            W.delete(s), eo.R.setAccountProp("addressLabels", W, x);
          },
          setConnectedWalletInfo(s, x) {
            eo.R.setAccountProp("connectedWalletInfo", s, x, !1);
          },
          setPreferredAccountType(s, x) {
            eo.R.setAccountProp("preferredAccountType", s, x);
          },
          setSocialProvider(s, x) {
            s && eo.R.setAccountProp("socialProvider", s, x);
          },
          setSocialWindow(s, x) {
            eo.R.setAccountProp("socialWindow", s ? (0, X.iH)(s) : void 0, x);
          },
          setFarcasterUrl(s, x) {
            eo.R.setAccountProp("farcasterUrl", s, x);
          },
          async fetchTokenBalance(s) {
            let x = eo.R.state.activeCaipNetwork?.caipNetworkId,
              W = eo.R.state.activeCaipNetwork?.chainNamespace,
              X = eo.R.state.activeCaipAddress,
              ec = X ? et.j.getPlainAddress(X) : void 0;
            if (
              el.lastRetry &&
              !et.j.isAllowedRetry(el.lastRetry, 30 * ee.bq.ONE_SEC_MS)
            )
              return [];
            try {
              if (ec && x && W) {
                let s = await ei.L.getBalance(ec, x),
                  X = s.balances.filter((s) => "0" !== s.quantity.decimals);
                return (
                  this.setTokenBalance(X, W),
                  es.nY.setBalances(er.n.mapBalancesToSwapTokens(s.balances)),
                  (el.lastRetry = void 0),
                  X
                );
              }
            } catch (x) {
              (el.lastRetry = Date.now()),
                s?.(x),
                ea.K.showError("Token Balance Unavailable");
            }
            return [];
          },
          resetAccount(s) {
            eo.R.resetAccount(s);
          },
        };
    },
    32913: function (s, x, W) {
      "use strict";
      W.d(x, {
        B: function () {
          return ei;
        },
      });
      var X = W(17832),
        ee = W(73932),
        et = W(91862);
      let er = (0, X.sj)({ message: "", variant: "info", open: !1 }),
        ei = {
          state: er,
          subscribeKey: (s, x) => (0, ee.VW)(er, s, x),
          open(s, x) {
            let { debug: W } = et.OptionsController.state,
              { shortMessage: X, longMessage: ee } = s;
            W && ((er.message = X), (er.variant = x), (er.open = !0)),
              ee && console.error("function" == typeof ee ? ee() : ee);
          },
          close() {
            (er.open = !1), (er.message = ""), (er.variant = "info");
          },
        };
    },
    18754: function (s, x, W) {
      "use strict";
      W.d(x, {
        Q: function () {
          return ep;
        },
      });
      var X = W(17832),
        ee = W(73932),
        et = W(11517),
        er = W(40305),
        ei = W(17231),
        eo = W(64110),
        ea = W(17672),
        es = W(85956),
        el = W(70196),
        ec = W(91862);
      let eu = et.j.getApiUrl(),
        ed = new er.V({ baseUrl: eu, clientId: null }),
        eh = (0, X.sj)({
          page: 1,
          count: 0,
          featured: [],
          recommended: [],
          wallets: [],
          search: [],
          isAnalyticsEnabled: !1,
          excludedRDNS: [],
        }),
        ep = {
          state: eh,
          subscribeKey: (s, x) => (0, ee.VW)(eh, s, x),
          _getSdkProperties() {
            let {
              projectId: s,
              sdkType: x,
              sdkVersion: W,
            } = ec.OptionsController.state;
            return {
              projectId: s,
              st: x || "appkit",
              sv: W || "html-wagmi-4.2.2",
            };
          },
          _filterOutExtensions: (s) =>
            ec.OptionsController.state.isUniversalProvider
              ? s.filter(
                  (s) => !!(s.mobile_link || s.desktop_link || s.webapp_link)
                )
              : s,
          async _fetchWalletImage(s) {
            let x = `${ed.baseUrl}/getWalletImage/${s}`,
              W = await ed.getBlob({ path: x, params: ep._getSdkProperties() });
            eo.W.setWalletImage(s, URL.createObjectURL(W));
          },
          async _fetchNetworkImage(s) {
            let x = `${ed.baseUrl}/public/getAssetImage/${s}`,
              W = await ed.getBlob({ path: x, params: ep._getSdkProperties() });
            eo.W.setNetworkImage(s, URL.createObjectURL(W));
          },
          async _fetchConnectorImage(s) {
            let x = `${ed.baseUrl}/public/getAssetImage/${s}`,
              W = await ed.getBlob({ path: x, params: ep._getSdkProperties() });
            eo.W.setConnectorImage(s, URL.createObjectURL(W));
          },
          async _fetchCurrencyImage(s) {
            let x = `${ed.baseUrl}/public/getCurrencyImage/${s}`,
              W = await ed.getBlob({ path: x, params: ep._getSdkProperties() });
            eo.W.setCurrencyImage(s, URL.createObjectURL(W));
          },
          async _fetchTokenImage(s) {
            let x = `${ed.baseUrl}/public/getTokenImage/${s}`,
              W = await ed.getBlob({ path: x, params: ep._getSdkProperties() });
            eo.W.setTokenImage(s, URL.createObjectURL(W));
          },
          async fetchNetworkImages() {
            let s = ea.R.getAllRequestedCaipNetworks(),
              x = s?.map(({ assets: s }) => s?.imageId).filter(Boolean);
            x &&
              (await Promise.allSettled(
                x.map((s) => ep._fetchNetworkImage(s))
              ));
          },
          async fetchConnectorImages() {
            let { connectors: s } = es.ConnectorController.state,
              x = s.map(({ imageId: s }) => s).filter(Boolean);
            await Promise.allSettled(x.map((s) => ep._fetchConnectorImage(s)));
          },
          async fetchCurrencyImages(s = []) {
            await Promise.allSettled(s.map((s) => ep._fetchCurrencyImage(s)));
          },
          async fetchTokenImages(s = []) {
            await Promise.allSettled(s.map((s) => ep._fetchTokenImage(s)));
          },
          async fetchFeaturedWallets() {
            let { featuredWalletIds: s } = ec.OptionsController.state;
            if (s?.length) {
              let { data: x } = await ed.get({
                path: "/getWallets",
                params: {
                  ...ep._getSdkProperties(),
                  page: "1",
                  entries: s?.length ? String(s.length) : "4",
                  include: s?.join(","),
                },
              });
              x.sort((x, W) => s.indexOf(x.id) - s.indexOf(W.id));
              let W = x.map((s) => s.image_id).filter(Boolean);
              await Promise.allSettled(W.map((s) => ep._fetchWalletImage(s))),
                (eh.featured = x);
            }
          },
          async fetchRecommendedWallets() {
            try {
              let {
                  includeWalletIds: s,
                  excludeWalletIds: x,
                  featuredWalletIds: W,
                } = ec.OptionsController.state,
                X = [...(x ?? []), ...(W ?? [])].filter(Boolean),
                { data: ee, count: et } = await ed.get({
                  path: "/getWallets",
                  params: {
                    ...ep._getSdkProperties(),
                    page: "1",
                    chains: ea.R.state.activeCaipNetwork?.caipNetworkId,
                    entries: "4",
                    include: s?.join(","),
                    exclude: X?.join(","),
                  },
                }),
                er = ei.M.getRecentWallets(),
                eo = ee.map((s) => s.image_id).filter(Boolean),
                es = er.map((s) => s.image_id).filter(Boolean);
              await Promise.allSettled(
                [...eo, ...es].map((s) => ep._fetchWalletImage(s))
              ),
                (eh.recommended = ee),
                (eh.count = et ?? 0);
            } catch {}
          },
          async fetchWallets({ page: s }) {
            let {
                includeWalletIds: x,
                excludeWalletIds: W,
                featuredWalletIds: X,
              } = ec.OptionsController.state,
              ee = [
                ...eh.recommended.map(({ id: s }) => s),
                ...(W ?? []),
                ...(X ?? []),
              ].filter(Boolean),
              { data: er, count: ei } = await ed.get({
                path: "/getWallets",
                params: {
                  ...ep._getSdkProperties(),
                  page: String(s),
                  entries: "40",
                  chains: ea.R.state.activeCaipNetwork?.caipNetworkId,
                  include: x?.join(","),
                  exclude: ee.join(","),
                },
              }),
              eo = er
                .slice(0, 20)
                .map((s) => s.image_id)
                .filter(Boolean);
            await Promise.allSettled(eo.map((s) => ep._fetchWalletImage(s))),
              (eh.wallets = et.j.uniqueBy(
                [...eh.wallets, ...ep._filterOutExtensions(er)],
                "id"
              )),
              (eh.count = ei > eh.count ? ei : eh.count),
              (eh.page = s);
          },
          async initializeExcludedWalletRdns({ ids: s }) {
            let { data: x } = await ed.get({
              path: "/getWallets",
              params: {
                ...ep._getSdkProperties(),
                page: "1",
                entries: String(s.length),
                chains: ea.R.state.activeCaipNetwork?.caipNetworkId,
                include: s?.join(","),
              },
            });
            x &&
              x.forEach((s) => {
                s?.rdns && eh.excludedRDNS.push(s.rdns);
              });
          },
          async searchWallet({ search: s, badge: x }) {
            let { includeWalletIds: W, excludeWalletIds: X } =
              ec.OptionsController.state;
            eh.search = [];
            let { data: ee } = await ed.get({
              path: "/getWallets",
              params: {
                ...ep._getSdkProperties(),
                page: "1",
                entries: "100",
                search: s?.trim(),
                badge_type: x,
                chains: ea.R.state.activeCaipNetwork?.caipNetworkId,
                include: W?.join(","),
                exclude: X?.join(","),
              },
            });
            el.X.sendEvent({
              type: "track",
              event: "SEARCH_WALLET",
              properties: { badge: x ?? "", search: s ?? "" },
            });
            let er = ee.map((s) => s.image_id).filter(Boolean);
            await Promise.allSettled([
              ...er.map((s) => ep._fetchWalletImage(s)),
              et.j.wait(300),
            ]),
              (eh.search = ep._filterOutExtensions(ee));
          },
          async reFetchWallets() {
            (eh.page = 1),
              (eh.wallets = []),
              await ep.fetchFeaturedWallets(),
              await ep.fetchRecommendedWallets();
          },
          prefetch() {
            let s = [
              ep.fetchFeaturedWallets(),
              ep.fetchRecommendedWallets(),
              ep.fetchNetworkImages(),
              ep.fetchConnectorImages(),
            ];
            ec.OptionsController.state.features?.analytics &&
              s.push(ep.fetchAnalyticsConfig()),
              (eh.prefetchPromise = Promise.race([Promise.allSettled(s)]));
          },
          async fetchAnalyticsConfig() {
            let { isAnalyticsEnabled: s } = await ed.get({
              path: "/getAnalyticsConfig",
              params: ep._getSdkProperties(),
            });
            ec.OptionsController.setFeatures({ analytics: s });
          },
        };
    },
    64110: function (s, x, W) {
      "use strict";
      W.d(x, {
        W: function () {
          return er;
        },
      });
      var X = W(17832),
        ee = W(73932);
      let et = (0, X.sj)({
          walletImages: {},
          networkImages: {},
          chainImages: {},
          connectorImages: {},
          tokenImages: {},
          currencyImages: {},
        }),
        er = {
          state: et,
          subscribeNetworkImages: (s) =>
            (0, X.Ld)(et.networkImages, () => s(et.networkImages)),
          subscribeKey: (s, x) => (0, ee.VW)(et, s, x),
          subscribe: (s) => (0, X.Ld)(et, () => s(et)),
          setWalletImage(s, x) {
            et.walletImages[s] = x;
          },
          setNetworkImage(s, x) {
            et.networkImages[s] = x;
          },
          setChainImage(s, x) {
            et.chainImages[s] = x;
          },
          setConnectorImage(s, x) {
            et.connectorImages = { ...et.connectorImages, [s]: x };
          },
          setTokenImage(s, x) {
            et.tokenImages[s] = x;
          },
          setCurrencyImage(s, x) {
            et.currencyImages[s] = x;
          },
        };
    },
    21310: function (s, x, W) {
      "use strict";
      W.d(x, {
        L: function () {
          return eu;
        },
      });
      var X = W(17832),
        ee = W(62318),
        et = W(11517),
        er = W(40305),
        ei = W(64244),
        eo = W(17672),
        ea = W(91862);
      let es = {
          purchaseCurrencies: [
            {
              id: "2b92315d-eab7-5bef-84fa-089a131333f5",
              name: "USD Coin",
              symbol: "USDC",
              networks: [
                {
                  name: "ethereum-mainnet",
                  display_name: "Ethereum",
                  chain_id: "1",
                  contract_address:
                    "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
                },
                {
                  name: "polygon-mainnet",
                  display_name: "Polygon",
                  chain_id: "137",
                  contract_address:
                    "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
                },
              ],
            },
            {
              id: "2b92315d-eab7-5bef-84fa-089a131333f5",
              name: "Ether",
              symbol: "ETH",
              networks: [
                {
                  name: "ethereum-mainnet",
                  display_name: "Ethereum",
                  chain_id: "1",
                  contract_address:
                    "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
                },
                {
                  name: "polygon-mainnet",
                  display_name: "Polygon",
                  chain_id: "137",
                  contract_address:
                    "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
                },
              ],
            },
          ],
          paymentCurrencies: [
            {
              id: "USD",
              payment_method_limits: [
                { id: "card", min: "10.00", max: "7500.00" },
                { id: "ach_bank_account", min: "10.00", max: "25000.00" },
              ],
            },
            {
              id: "EUR",
              payment_method_limits: [
                { id: "card", min: "10.00", max: "7500.00" },
                { id: "ach_bank_account", min: "10.00", max: "25000.00" },
              ],
            },
          ],
        },
        el = et.j.getBlockchainApiUrl(),
        ec = (0, X.sj)({
          clientId: null,
          api: new er.V({ baseUrl: el, clientId: null }),
          supportedChains: { http: [], ws: [] },
        }),
        eu = {
          state: ec,
          async isNetworkSupported(s) {
            if (!s) return !1;
            try {
              ec.supportedChains.http.length ||
                (await eu.getSupportedNetworks({
                  projectId: ea.OptionsController.state.projectId,
                }));
            } catch (s) {
              return !1;
            }
            return ec.supportedChains.http.includes(s);
          },
          async getSupportedNetworks({ projectId: s }) {
            let x = await ec.api.get({
              path: "v1/supported-chains",
              params: { projectId: s },
            });
            return (ec.supportedChains = x), x;
          },
          async fetchIdentity({ address: s }) {
            let x = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return x
              ? ec.api.get({
                  path: `/v1/identity/${s}`,
                  params: {
                    projectId: ea.OptionsController.state.projectId,
                    sender: eo.R.state.activeCaipAddress
                      ? et.j.getPlainAddress(eo.R.state.activeCaipAddress)
                      : void 0,
                  },
                })
              : { avatar: "", name: "" };
          },
          async fetchTransactions({
            account: s,
            projectId: x,
            cursor: W,
            onramp: X,
            signal: ee,
            cache: et,
            chainId: er,
          }) {
            let ei = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return ei
              ? ec.api.get({
                  path: `/v1/account/${s}/history`,
                  params: { projectId: x, cursor: W, onramp: X, chainId: er },
                  signal: ee,
                  cache: et,
                })
              : { data: [], next: void 0 };
          },
          async fetchSwapQuote({
            projectId: s,
            amount: x,
            userAddress: W,
            from: X,
            to: ee,
            gasPrice: et,
          }) {
            let er = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return er
              ? ec.api.get({
                  path: "/v1/convert/quotes",
                  headers: { "Content-Type": "application/json" },
                  params: {
                    projectId: s,
                    amount: x,
                    userAddress: W,
                    from: X,
                    to: ee,
                    gasPrice: et,
                  },
                })
              : { quotes: [] };
          },
          async fetchSwapTokens({ projectId: s, chainId: x }) {
            let W = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return W
              ? ec.api.get({
                  path: "/v1/convert/tokens",
                  params: { projectId: s, chainId: x },
                })
              : { tokens: [] };
          },
          async fetchTokenPrice({ projectId: s, addresses: x }) {
            let W = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return W
              ? ec.api.post({
                  path: "/v1/fungible/price",
                  body: { projectId: s, currency: "usd", addresses: x },
                  headers: { "Content-Type": "application/json" },
                })
              : { fungibles: [] };
          },
          async fetchSwapAllowance({
            projectId: s,
            tokenAddress: x,
            userAddress: W,
          }) {
            let { sdkType: X, sdkVersion: ee } = ea.OptionsController.state,
              et = await eu.isNetworkSupported(
                eo.R.state.activeCaipNetwork?.caipNetworkId
              );
            return et
              ? ec.api.get({
                  path: "/v1/convert/allowance",
                  params: { projectId: s, tokenAddress: x, userAddress: W },
                  headers: {
                    "Content-Type": "application/json",
                    "x-sdk-type": X,
                    "x-sdk-version": ee || "html-wagmi-4.2.2",
                  },
                })
              : { allowance: "0" };
          },
          async fetchGasPrice({ projectId: s, chainId: x }) {
            let { sdkType: W, sdkVersion: X } = ea.OptionsController.state,
              ee = await eu.isNetworkSupported(
                eo.R.state.activeCaipNetwork?.caipNetworkId
              );
            if (!ee) throw Error("Network not supported for Gas Price");
            return ec.api.get({
              path: "/v1/convert/gas-price",
              headers: {
                "Content-Type": "application/json",
                "x-sdk-type": W,
                "x-sdk-version": X || "html-wagmi-4.2.2",
              },
              params: { projectId: s, chainId: x },
            });
          },
          async generateSwapCalldata({
            amount: s,
            from: x,
            projectId: W,
            to: X,
            userAddress: et,
          }) {
            let er = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            if (!er) throw Error("Network not supported for Swaps");
            return ec.api.post({
              path: "/v1/convert/build-transaction",
              headers: { "Content-Type": "application/json" },
              body: {
                amount: s,
                eip155: { slippage: ee.bq.CONVERT_SLIPPAGE_TOLERANCE },
                from: x,
                projectId: W,
                to: X,
                userAddress: et,
              },
            });
          },
          async generateApproveCalldata({
            from: s,
            projectId: x,
            to: W,
            userAddress: X,
          }) {
            let { sdkType: ee, sdkVersion: et } = ea.OptionsController.state,
              er = await eu.isNetworkSupported(
                eo.R.state.activeCaipNetwork?.caipNetworkId
              );
            if (!er) throw Error("Network not supported for Swaps");
            return ec.api.get({
              path: "/v1/convert/build-approve",
              headers: {
                "Content-Type": "application/json",
                "x-sdk-type": ee,
                "x-sdk-version": et || "html-wagmi-4.2.2",
              },
              params: { projectId: x, userAddress: X, from: s, to: W },
            });
          },
          async getBalance(s, x, W) {
            let { sdkType: X, sdkVersion: ee } = ea.OptionsController.state,
              et = await eu.isNetworkSupported(
                eo.R.state.activeCaipNetwork?.caipNetworkId
              );
            return et
              ? ec.api.get({
                  path: `/v1/account/${s}/balance`,
                  headers: {
                    "x-sdk-type": X,
                    "x-sdk-version": ee || "html-wagmi-4.2.2",
                  },
                  params: {
                    currency: "usd",
                    projectId: ea.OptionsController.state.projectId,
                    chainId: x,
                    forceUpdate: W,
                  },
                })
              : { balances: [] };
          },
          async lookupEnsName(s) {
            let x = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return x
              ? ec.api.get({
                  path: `/v1/profile/account/${s}`,
                  params: {
                    projectId: ea.OptionsController.state.projectId,
                    apiVersion: "2",
                  },
                })
              : { addresses: {}, attributes: [] };
          },
          async reverseLookupEnsName({ address: s }) {
            let x = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return x
              ? ec.api.get({
                  path: `/v1/profile/reverse/${s}`,
                  params: {
                    sender: ei.N.state.address,
                    projectId: ea.OptionsController.state.projectId,
                    apiVersion: "2",
                  },
                })
              : [];
          },
          async getEnsNameSuggestions(s) {
            let x = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return x
              ? ec.api.get({
                  path: `/v1/profile/suggestions/${s}`,
                  params: {
                    projectId: ea.OptionsController.state.projectId,
                    zone: "reown.id",
                  },
                })
              : { suggestions: [] };
          },
          async registerEnsName({
            coinType: s,
            address: x,
            message: W,
            signature: X,
          }) {
            let ee = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return ee
              ? ec.api.post({
                  path: "/v1/profile/account",
                  body: { coin_type: s, address: x, message: W, signature: X },
                  headers: { "Content-Type": "application/json" },
                })
              : { success: !1 };
          },
          async generateOnRampURL({
            destinationWallets: s,
            partnerUserId: x,
            defaultNetwork: W,
            purchaseAmount: X,
            paymentAmount: ee,
          }) {
            let et = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            if (!et) return "";
            let er = await ec.api.post({
              path: "/v1/generators/onrampurl",
              params: { projectId: ea.OptionsController.state.projectId },
              body: {
                destinationWallets: s,
                defaultNetwork: W,
                partnerUserId: x,
                defaultExperience: "buy",
                presetCryptoAmount: X,
                presetFiatAmount: ee,
              },
            });
            return er.url;
          },
          async getOnrampOptions() {
            let s = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            if (!s) return { paymentCurrencies: [], purchaseCurrencies: [] };
            try {
              let s = await ec.api.get({
                path: "/v1/onramp/options",
                params: { projectId: ea.OptionsController.state.projectId },
              });
              return s;
            } catch (s) {
              return es;
            }
          },
          async getOnrampQuote({
            purchaseCurrency: s,
            paymentCurrency: x,
            amount: W,
            network: X,
          }) {
            try {
              let ee = await eu.isNetworkSupported(
                eo.R.state.activeCaipNetwork?.caipNetworkId
              );
              if (!ee) return null;
              let et = await ec.api.post({
                path: "/v1/onramp/quote",
                params: { projectId: ea.OptionsController.state.projectId },
                body: {
                  purchaseCurrency: s,
                  paymentCurrency: x,
                  amount: W,
                  network: X,
                },
              });
              return et;
            } catch (s) {
              return {
                coinbaseFee: { amount: W, currency: x.id },
                networkFee: { amount: W, currency: x.id },
                paymentSubtotal: { amount: W, currency: x.id },
                paymentTotal: { amount: W, currency: x.id },
                purchaseAmount: { amount: W, currency: x.id },
                quoteId: "mocked-quote-id",
              };
            }
          },
          async getSmartSessions(s) {
            let x = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return x
              ? ec.api.get({
                  path: `/v1/sessions/${s}`,
                  params: { projectId: ea.OptionsController.state.projectId },
                })
              : [];
          },
          async revokeSmartSession(s, x, W) {
            let X = await eu.isNetworkSupported(
              eo.R.state.activeCaipNetwork?.caipNetworkId
            );
            return X
              ? ec.api.post({
                  path: `/v1/sessions/${s}/revoke`,
                  params: { projectId: ea.OptionsController.state.projectId },
                  body: { pci: x, signature: W },
                })
              : { success: !1 };
          },
          setClientId(s) {
            (ec.clientId = s),
              (ec.api = new er.V({ baseUrl: el, clientId: s }));
          },
        };
    },
    17672: function (s, x, W) {
      "use strict";
      W.d(x, {
        R: function () {
          return em;
        },
      });
      var X = W(17832),
        ee = W(73932),
        et = W(74490),
        er = W(62318),
        ei = W(11517),
        eo = W(17231),
        ea = W(64244),
        es = W(9169),
        el = W(70196),
        ec = W(99336),
        eu = W(91862),
        ed = W(2977),
        eh = W(42859);
      let ep = {
          currentTab: 0,
          tokenBalance: [],
          smartAccountDeployed: !1,
          addressLabels: new Map(),
          allAccounts: [],
        },
        ef = { supportsAllNetworks: !0, smartAccountEnabledNetworks: [] },
        eg = (0, X.sj)({
          chains: (0, ee.Yr)(),
          activeCaipAddress: void 0,
          activeChain: void 0,
          activeCaipNetwork: void 0,
          noAdapters: !1,
          universalAdapter: {
            networkControllerClient: void 0,
            connectionControllerClient: void 0,
          },
          isSwitchingNamespace: !1,
        }),
        em = {
          state: eg,
          subscribe: (s) =>
            (0, X.Ld)(eg, () => {
              s(eg);
            }),
          subscribeKey: (s, x) => (0, ee.VW)(eg, s, x),
          subscribeChainProp(s, x, W) {
            let ee;
            return (0, X.Ld)(eg.chains, () => {
              let X = W || eg.activeChain;
              if (X) {
                let W = eg.chains.get(X)?.[s];
                ee !== W && ((ee = W), x(W));
              }
            });
          },
          initialize(s, x, W) {
            let { chainId: X, namespace: ee } = eo.M.getActiveNetworkProps(),
              et = x?.find((s) => s.id.toString() === X?.toString()),
              er = s.find((s) => s?.namespace === ee),
              ei = er || s?.[0],
              ea = new Set([...(x?.map((s) => s.chainNamespace) ?? [])]);
            (s?.length !== 0 && ei) || (eg.noAdapters = !0),
              !eg.noAdapters &&
                ((eg.activeChain = ei?.namespace),
                (eg.activeCaipNetwork = et),
                eg.activeChain && ed.I.set({ activeChain: ei?.namespace })),
              ea.forEach((s) => {
                em.state.chains.set(s, {
                  namespace: s,
                  networkState: ef,
                  accountState: ep,
                  caipNetworks: x ?? [],
                  ...W,
                }),
                  this.setRequestedCaipNetworks(
                    x?.filter((x) => x.chainNamespace === s) ?? [],
                    s
                  );
              });
          },
          removeAdapter(s) {
            if (eg.activeChain === s) {
              let x = Array.from(eg.chains.entries()).find(([x]) => x !== s);
              if (x) {
                let s = x[1]?.caipNetworks?.[0];
                s && this.setActiveCaipNetwork(s);
              }
            }
            eg.chains.delete(s);
          },
          addAdapter(
            s,
            { networkControllerClient: x, connectionControllerClient: W },
            X
          ) {
            eg.chains.set(s.namespace, {
              namespace: s.namespace,
              networkState: ef,
              accountState: ep,
              caipNetworks: X,
              connectionControllerClient: W,
              networkControllerClient: x,
            }),
              this.setRequestedCaipNetworks(
                X?.filter((x) => x.chainNamespace === s.namespace) ?? [],
                s.namespace
              );
          },
          setAdapterNetworkState(s, x) {
            let W = eg.chains.get(s);
            W &&
              ((W.networkState = (0, X.iH)({
                ...(W.networkState || ef),
                ...x,
              })),
              eg.chains.set(s, (0, X.iH)(W)));
          },
          setChainAccountData(s, x, W = !0) {
            if (!s)
              throw Error("Chain is required to update chain account data");
            let ee = eg.chains.get(s);
            ee &&
              ((ee.accountState = (0, X.iH)({
                ...(ee.accountState || ep),
                ...x,
              })),
              eg.chains.set(s, ee),
              (1 === eg.chains.size || eg.activeChain === s) &&
                (x.caipAddress && (eg.activeCaipAddress = x.caipAddress),
                ea.N.replaceState(ee.accountState)));
          },
          setAccountProp(s, x, W, X = !0) {
            this.setChainAccountData(W, { [s]: x }, X);
          },
          setActiveNamespace(s) {
            eg.activeChain = s;
            let x = s ? eg.chains.get(s) : void 0,
              W = x?.networkState?.caipNetwork;
            W?.id &&
              s &&
              ((eg.activeCaipAddress = x?.accountState?.caipAddress),
              (eg.activeCaipNetwork = W),
              eo.M.setActiveCaipNetworkId(W?.caipNetworkId),
              ed.I.set({
                activeChain: s,
                selectedNetworkId: W?.caipNetworkId,
              }));
          },
          setActiveCaipNetwork(s) {
            if (!s) return;
            eg.activeChain !== s.chainNamespace &&
              this.setIsSwitchingNamespace(!0);
            let x = eg.chains.get(s.chainNamespace);
            (eg.activeChain = s.chainNamespace),
              (eg.activeCaipNetwork = s),
              x?.accountState?.address
                ? (eg.activeCaipAddress = `${s.chainNamespace}:${s.id}:${x?.accountState?.address}`)
                : (eg.activeCaipAddress = void 0),
              x && ea.N.replaceState(x.accountState),
              ed.I.set({
                activeChain: eg.activeChain,
                selectedNetworkId: eg.activeCaipNetwork?.caipNetworkId,
              }),
              eo.M.setActiveCaipNetworkId(s.caipNetworkId);
            let W = this.checkIfSupportedNetwork(s.chainNamespace);
            W ||
              eu.OptionsController.state.allowUnsupportedChain ||
              this.showUnsupportedChainUI();
          },
          addCaipNetwork(s) {
            if (!s) return;
            let x = eg.chains.get(s.chainNamespace);
            x && x?.caipNetworks?.push(s);
          },
          async switchActiveNetwork(s) {
            let x = em.state.chains.get(em.state.activeChain),
              W = !x?.caipNetworks?.some(
                (s) => s.id === eg.activeCaipNetwork?.id
              );
            W && eh.RouterController.goBack();
            let X = this.getNetworkControllerClient(s.chainNamespace);
            X &&
              (await X.switchCaipNetwork(s),
              el.X.sendEvent({
                type: "track",
                event: "SWITCH_NETWORK",
                properties: { network: s.caipNetworkId },
              }));
          },
          getNetworkControllerClient(s) {
            let x = s || eg.activeChain,
              W = eg.chains.get(x);
            if (!W) throw Error("Chain adapter not found");
            if (!W.networkControllerClient)
              throw Error("NetworkController client not set");
            return W.networkControllerClient;
          },
          getConnectionControllerClient(s) {
            let x = s || eg.activeChain;
            if (!x)
              throw Error(
                "Chain is required to get connection controller client"
              );
            let W = eg.chains.get(x);
            if (!W?.connectionControllerClient)
              throw Error("ConnectionController client not set");
            return W.connectionControllerClient;
          },
          getAccountProp(s, x) {
            let W = eg.activeChain;
            if ((x && (W = x), !W)) return;
            let X = eg.chains.get(W)?.accountState;
            if (X) return X[s];
          },
          getNetworkProp(s, x) {
            let W = eg.chains.get(x)?.networkState;
            if (W) return W[s];
          },
          getRequestedCaipNetworks(s) {
            let x = eg.chains.get(s),
              {
                approvedCaipNetworkIds: W = [],
                requestedCaipNetworks: X = [],
              } = x?.networkState || {},
              ee = ei.j.sortRequestedNetworks(W, X);
            return ee;
          },
          getAllRequestedCaipNetworks() {
            let s = [];
            return (
              eg.chains.forEach((x) => {
                let W = this.getRequestedCaipNetworks(x.namespace);
                s.push(...W);
              }),
              s
            );
          },
          setRequestedCaipNetworks(s, x) {
            this.setAdapterNetworkState(x, { requestedCaipNetworks: s });
          },
          getAllApprovedCaipNetworkIds() {
            let s = [];
            return (
              eg.chains.forEach((x) => {
                let W = this.getApprovedCaipNetworkIds(x.namespace);
                s.push(...W);
              }),
              s
            );
          },
          getActiveCaipNetwork: () => eg.activeCaipNetwork,
          getActiveCaipAddress: () => eg.activeCaipAddress,
          getApprovedCaipNetworkIds(s) {
            let x = eg.chains.get(s),
              W = x?.networkState?.approvedCaipNetworkIds || [];
            return W;
          },
          async setApprovedCaipNetworksData(s) {
            let x = this.getNetworkControllerClient(),
              W = await x?.getApprovedCaipNetworksData();
            this.setAdapterNetworkState(s, {
              approvedCaipNetworkIds: W?.approvedCaipNetworkIds,
              supportsAllNetworks: W?.supportsAllNetworks,
            });
          },
          checkIfSupportedNetwork(s) {
            let x = this.state.activeCaipNetwork,
              W = this.getRequestedCaipNetworks(s);
            return !W.length || W?.some((s) => s.id === x?.id);
          },
          checkIfSupportedChainId(s) {
            if (!this.state.activeChain) return !0;
            let x = this.getRequestedCaipNetworks(this.state.activeChain);
            return x?.some((x) => x.id === s);
          },
          setSmartAccountEnabledNetworks(s, x) {
            this.setAdapterNetworkState(x, { smartAccountEnabledNetworks: s });
          },
          checkIfSmartAccountEnabled() {
            let s = et.p1.caipNetworkIdToNumber(
                eg.activeCaipNetwork?.caipNetworkId
              ),
              x = this.state.activeChain;
            if (!x || !s) return !1;
            let W = this.getNetworkProp("smartAccountEnabledNetworks", x);
            return !!W?.includes(Number(s));
          },
          getActiveNetworkTokenAddress() {
            let s = this.state.activeCaipNetwork?.chainNamespace || "eip155",
              x = this.state.activeCaipNetwork?.id || 1,
              W = er.bq.NATIVE_TOKEN_ADDRESS[s];
            return `${s}:${x}:${W}`;
          },
          showUnsupportedChainUI() {
            ec.I.open({ view: "UnsupportedChain" });
          },
          checkIfNamesSupported() {
            let s = eg.activeCaipNetwork;
            return !!(
              s?.chainNamespace &&
              er.bq.NAMES_SUPPORTED_CHAIN_NAMESPACES.includes(s.chainNamespace)
            );
          },
          resetNetwork(s) {
            this.setAdapterNetworkState(s, {
              approvedCaipNetworkIds: void 0,
              supportsAllNetworks: !0,
              smartAccountEnabledNetworks: [],
            });
          },
          resetAccount(s) {
            if (!s) throw Error("Chain is required to set account prop");
            (this.state.activeCaipAddress = void 0),
              this.setChainAccountData(
                s,
                (0, X.iH)({
                  smartAccountDeployed: !1,
                  currentTab: 0,
                  caipAddress: void 0,
                  address: void 0,
                  balance: void 0,
                  balanceSymbol: void 0,
                  profileName: void 0,
                  profileImage: void 0,
                  addressExplorerUrl: void 0,
                  tokenBalance: [],
                  connectedWalletInfo: void 0,
                  preferredAccountType: void 0,
                  socialProvider: void 0,
                  socialWindow: void 0,
                  farcasterUrl: void 0,
                  provider: void 0,
                  allAccounts: [],
                })
              );
          },
          async disconnect() {
            try {
              let s = await Promise.allSettled(
                Array.from(eg.chains.entries()).map(async ([s, x]) => {
                  try {
                    x.connectionControllerClient?.disconnect &&
                      (await x.connectionControllerClient.disconnect()),
                      this.resetAccount(s),
                      this.resetNetwork(s),
                      eo.M.deleteConnectedConnectorId(s);
                  } catch (x) {
                    throw Error(
                      `Failed to disconnect chain ${s}: ${x.message}`
                    );
                  }
                })
              );
              es.l.resetWcConnection();
              let x = s.filter((s) => "rejected" === s.status);
              if (x.length > 0)
                throw Error(x.map((s) => s.reason.message).join(", "));
              eo.M.deleteConnectedSocialProvider(),
                es.l.resetWcConnection(),
                el.X.sendEvent({ type: "track", event: "DISCONNECT_SUCCESS" });
            } catch (s) {
              console.error(s.message || "Failed to disconnect chains"),
                el.X.sendEvent({
                  type: "track",
                  event: "DISCONNECT_ERROR",
                  properties: {
                    message: s.message || "Failed to disconnect chains",
                  },
                });
            }
          },
          setIsSwitchingNamespace(s) {
            eg.isSwitchingNamespace = s;
          },
          getFirstCaipNetworkSupportsAuthConnector() {
            let s = [];
            if (
              (eg.chains.forEach((x) => {
                et.bq.AUTH_CONNECTOR_SUPPORTED_CHAINS.find(
                  (s) => s === x.namespace
                ) &&
                  x.namespace &&
                  s.push(x.namespace);
              }),
              s.length > 0)
            ) {
              let x = s[0];
              return x ? eg.chains.get(x)?.caipNetworks?.[0] : void 0;
            }
          },
        };
    },
    9169: function (s, x, W) {
      "use strict";
      let X;
      W.d(x, {
        l: function () {
          return ep;
        },
      });
      var ee = W(17832),
        et = W(73932),
        er = W(74490);
      W(69406);
      var ei = W(11517),
        eo = W(50367),
        ea = W(17231),
        es = W(17672),
        el = W(85956),
        ec = W(70196),
        eu = W(99336),
        ed = W(53530);
      let eh = (0, ee.sj)({
          wcError: !1,
          buffering: !1,
          status: "disconnected",
        }),
        ep = {
          state: eh,
          subscribeKey: (s, x) => (0, et.VW)(eh, s, x),
          _getClient: () => eh._client,
          setClient(s) {
            eh._client = (0, ee.iH)(s);
          },
          async connectWalletConnect() {
            let s = [...es.R.state.chains.keys()];
            if (
              (s.forEach((s) => {
                ea.M.setConnectedConnectorId(
                  s,
                  er.bq.CONNECTOR_ID.WALLET_CONNECT
                );
              }),
              ei.j.isTelegram() || (ei.j.isSafari() && ei.j.isIos()))
            ) {
              if (X) {
                await X, (X = void 0);
                return;
              }
              if (!ei.j.isPairingExpired(eh?.wcPairingExpiry)) {
                let s = eh.wcUri;
                eh.wcUri = s;
                return;
              }
              (X = this._getClient()
                ?.connectWalletConnect?.()
                .catch(() => void 0)),
                (this.state.status = "connecting"),
                await X,
                (X = void 0),
                (eh.wcPairingExpiry = void 0),
                (this.state.status = "connected");
            } else await this._getClient()?.connectWalletConnect?.();
          },
          async connectExternal(s, x, W = !0) {
            await this._getClient()?.connectExternal?.(s),
              W && es.R.setActiveNamespace(x);
          },
          async reconnectExternal(s) {
            await this._getClient()?.reconnectExternal?.(s);
            let x = s.chain || es.R.state.activeChain;
            x && ea.M.setConnectedConnectorId(x, s.id);
          },
          async setPreferredAccountType(s) {
            eu.I.setLoading(!0);
            let x = el.ConnectorController.getAuthConnector();
            x &&
              (await x?.provider.setPreferredAccount(s),
              await this.reconnectExternal(x),
              eu.I.setLoading(!1),
              ec.X.sendEvent({
                type: "track",
                event: "SET_PREFERRED_ACCOUNT_TYPE",
                properties: {
                  accountType: s,
                  network: es.R.state.activeCaipNetwork?.caipNetworkId || "",
                },
              }));
          },
          async signMessage(s) {
            return this._getClient()?.signMessage(s);
          },
          parseUnits(s, x) {
            return this._getClient()?.parseUnits(s, x);
          },
          formatUnits(s, x) {
            return this._getClient()?.formatUnits(s, x);
          },
          async sendTransaction(s) {
            return this._getClient()?.sendTransaction(s);
          },
          async getCapabilities(s) {
            return this._getClient()?.getCapabilities(s);
          },
          async grantPermissions(s) {
            return this._getClient()?.grantPermissions(s);
          },
          async estimateGas(s) {
            return this._getClient()?.estimateGas(s);
          },
          async writeContract(s) {
            return this._getClient()?.writeContract(s);
          },
          async getEnsAddress(s) {
            return this._getClient()?.getEnsAddress(s);
          },
          async getEnsAvatar(s) {
            return this._getClient()?.getEnsAvatar(s);
          },
          checkInstalled(s) {
            return this._getClient()?.checkInstalled?.(s) || !1;
          },
          resetWcConnection() {
            (eh.wcUri = void 0),
              (eh.wcPairingExpiry = void 0),
              (eh.wcLinking = void 0),
              (eh.recentWallet = void 0),
              (eh.status = "disconnected"),
              ed.s.resetTransactions(),
              ea.M.deleteWalletConnectDeepLink();
          },
          setUri(s) {
            (eh.wcUri = s), (eh.wcPairingExpiry = ei.j.getPairingExpiry());
          },
          setWcLinking(s) {
            eh.wcLinking = s;
          },
          setWcError(s) {
            (eh.wcError = s), (eh.buffering = !1);
          },
          setRecentWallet(s) {
            eh.recentWallet = s;
          },
          setBuffering(s) {
            eh.buffering = s;
          },
          setStatus(s) {
            eh.status = s;
          },
          async disconnect() {
            try {
              eu.I.setLoading(!0),
                await eo.w.clearSessions(),
                await es.R.disconnect(),
                eu.I.setLoading(!1);
            } catch (s) {
              throw Error("Failed to disconnect");
            }
          },
        };
    },
    85956: function (s, x, W) {
      "use strict";
      W.d(x, {
        ConnectorController: function () {
          return es;
        },
      });
      var X = W(17832),
        ee = W(73932),
        et = W(74490),
        er = W(17672),
        ei = W(91862),
        eo = W(98138);
      let ea = (0, X.sj)({
          allConnectors: [],
          connectors: [],
          activeConnector: void 0,
        }),
        es = {
          state: ea,
          subscribeKey: (s, x) => (0, ee.VW)(ea, s, x),
          setActiveConnector(s) {
            s && (ea.activeConnector = (0, X.iH)(s));
          },
          setConnectors(s) {
            let x = s.filter(
              (s) =>
                !ea.allConnectors.some(
                  (x) =>
                    x.id === s.id &&
                    this.getConnectorName(x.name) ===
                      this.getConnectorName(s.name) &&
                    x.chain === s.chain
                )
            );
            x.forEach((s) => {
              "MULTI_CHAIN" !== s.type && ea.allConnectors.push((0, X.iH)(s));
            }),
              (ea.connectors = this.mergeMultiChainConnectors(
                ea.allConnectors
              ));
          },
          removeAdapter(s) {
            (ea.allConnectors = ea.allConnectors.filter((x) => x.chain !== s)),
              (ea.connectors = this.mergeMultiChainConnectors(
                ea.allConnectors
              ));
          },
          mergeMultiChainConnectors(s) {
            let x = this.generateConnectorMapByName(s),
              W = [];
            return (
              x.forEach((s) => {
                let x = s[0],
                  X = x?.id === et.bq.CONNECTOR_ID.AUTH;
                s.length > 1 && x
                  ? W.push({
                      name: x.name,
                      imageUrl: x.imageUrl,
                      imageId: x.imageId,
                      connectors: [...s],
                      type: X ? "AUTH" : "MULTI_CHAIN",
                      chain: "eip155",
                      id: x?.id || "",
                    })
                  : x && W.push(x);
              }),
              W
            );
          },
          generateConnectorMapByName(s) {
            let x = new Map();
            return (
              s.forEach((s) => {
                let { name: W } = s,
                  X = this.getConnectorName(W);
                if (!X) return;
                let ee = x.get(X) || [],
                  et = ee.find((x) => x.chain === s.chain);
                et || ee.push(s), x.set(X, ee);
              }),
              x
            );
          },
          getConnectorName: (s) => (s && { "Trust Wallet": "Trust" }[s]) || s,
          getUniqueConnectorsByName(s) {
            let x = [];
            return (
              s.forEach((s) => {
                x.find((x) => x.chain === s.chain) || x.push(s);
              }),
              x
            );
          },
          addConnector(s) {
            if (s.id === et.bq.CONNECTOR_ID.AUTH) {
              let x = (0, X.CO)(ei.OptionsController.state),
                W = eo.u.getSnapshot().themeMode,
                ee = eo.u.getSnapshot().themeVariables;
              s?.provider?.syncDappData?.({
                metadata: x.metadata,
                sdkVersion: x.sdkVersion,
                projectId: x.projectId,
                sdkType: x.sdkType,
              }),
                s?.provider?.syncTheme({
                  themeMode: W,
                  themeVariables: ee,
                  w3mThemeVariables: et.tU(ee, W),
                }),
                this.setConnectors([s]);
            } else this.setConnectors([s]);
          },
          getAuthConnector() {
            let s = er.R.state.activeChain,
              x = ea.connectors.find((s) => s.id === et.bq.CONNECTOR_ID.AUTH);
            if (x) {
              if (x?.connectors?.length) {
                let W = x.connectors.find((x) => x.chain === s);
                return W;
              }
              return x;
            }
          },
          getAnnouncedConnectorRdns: () =>
            ea.connectors
              .filter((s) => "ANNOUNCED" === s.type)
              .map((s) => s.info?.rdns),
          getConnectors: () => ea.connectors,
          getConnector: (s, x) =>
            ea.connectors.find((W) => W.explorerId === s || W.info?.rdns === x),
          syncIfAuthConnector(s) {
            if ("ID_AUTH" !== s.id) return;
            let x = (0, X.CO)(ei.OptionsController.state),
              W = eo.u.getSnapshot().themeMode,
              ee = eo.u.getSnapshot().themeVariables;
            s?.provider?.syncDappData?.({
              metadata: x.metadata,
              sdkVersion: x.sdkVersion,
              sdkType: x.sdkType,
              projectId: x.projectId,
            }),
              s.provider.syncTheme({
                themeMode: W,
                themeVariables: ee,
                w3mThemeVariables: (0, et.tU)(ee, W),
              });
          },
        };
    },
    70196: function (s, x, W) {
      "use strict";
      W.d(x, {
        X: function () {
          return eu;
        },
      });
      var X = W(17832),
        ee = W(74490),
        et = W(11517),
        er = W(40305),
        ei = W(32913),
        eo = W(91862);
      let ea = et.j.getAnalyticsUrl(),
        es = new er.V({ baseUrl: ea, clientId: null }),
        el = ["MODAL_CREATED"],
        ec = (0, X.sj)({
          timestamp: Date.now(),
          reportedErrors: {},
          data: { type: "track", event: "MODAL_CREATED" },
        }),
        eu = {
          state: ec,
          subscribe: (s) => (0, X.Ld)(ec, () => s(ec)),
          _getApiHeaders() {
            let {
              projectId: s,
              sdkType: x,
              sdkVersion: W,
            } = eo.OptionsController.state;
            return {
              "x-project-id": s,
              "x-sdk-type": x,
              "x-sdk-version": W || "html-wagmi-4.2.2",
            };
          },
          async _sendAnalyticsEvent(s) {
            try {
              if (el.includes(s.data.event) || "undefined" == typeof window)
                return;
              await es.post({
                path: "/e",
                headers: eu._getApiHeaders(),
                body: {
                  eventId: et.j.getUUID(),
                  url: window.location.href,
                  domain: window.location.hostname,
                  timestamp: s.timestamp,
                  props: s.data,
                },
              }),
                (ec.reportedErrors.FORBIDDEN = !1);
            } catch (x) {
              let s =
                x instanceof Error &&
                x.cause instanceof Response &&
                x.cause.status === ee.bq.HTTP_STATUS_CODES.FORBIDDEN &&
                !ec.reportedErrors.FORBIDDEN;
              s &&
                (ei.B.open(
                  {
                    shortMessage: "Invalid App Configuration",
                    longMessage: `Origin ${
                      (0, ee.$U)() ? window.origin : "uknown"
                    } not found on Allowlist - update configuration on cloud.reown.com`,
                  },
                  "error"
                ),
                (ec.reportedErrors.FORBIDDEN = !0));
            }
          },
          sendEvent(s) {
            (ec.timestamp = Date.now()),
              (ec.data = s),
              eo.OptionsController.state.features?.analytics &&
                eu._sendAnalyticsEvent(ec);
          },
        };
    },
    99336: function (s, x, W) {
      "use strict";
      W.d(x, {
        I: function () {
          return eu;
        },
      });
      var X = W(17832),
        ee = W(73932),
        et = W(11517),
        er = W(18754),
        ei = W(17672),
        eo = W(70196),
        ea = W(91862),
        es = W(2977),
        el = W(42859);
      let ec = (0, X.sj)({ loading: !1, open: !1, shake: !1 }),
        eu = {
          state: ec,
          subscribe: (s) => (0, X.Ld)(ec, () => s(ec)),
          subscribeKey: (s, x) => (0, ee.VW)(ec, s, x),
          async open(s) {
            await er.Q.state.prefetchPromise;
            let x = ei.R.state.activeCaipAddress,
              W = ei.R.state.noAdapters;
            s?.view
              ? el.RouterController.reset(s.view)
              : x
              ? el.RouterController.reset("Account")
              : W && !et.j.isMobile()
              ? el.RouterController.reset("ConnectingWalletConnectBasic")
              : el.RouterController.reset("Connect"),
              (ec.open = !0),
              es.I.set({ open: !0 }),
              eo.X.sendEvent({
                type: "track",
                event: "MODAL_OPEN",
                properties: { connected: !!x },
              });
          },
          close() {
            let s = ea.OptionsController.state.enableEmbedded,
              x = !!ei.R.state.activeCaipAddress;
            (ec.open = !1),
              s
                ? x
                  ? el.RouterController.replace("Account")
                  : el.RouterController.push("Connect")
                : es.I.set({ open: !1 }),
              eo.X.sendEvent({
                type: "track",
                event: "MODAL_CLOSE",
                properties: { connected: x },
              });
          },
          setLoading(s) {
            (ec.loading = s), es.I.set({ loading: s });
          },
          shake() {
            ec.shake ||
              ((ec.shake = !0),
              setTimeout(() => {
                ec.shake = !1;
              }, 500));
          },
        };
    },
    91862: function (s, x, W) {
      "use strict";
      W.d(x, {
        OptionsController: function () {
          return ei;
        },
      });
      var X = W(17832),
        ee = W(73932),
        et = W(62318);
      let er = (0, X.sj)({
          features: et.bq.DEFAULT_FEATURES,
          projectId: "",
          sdkType: "appkit",
          sdkVersion: "html-wagmi-undefined",
          defaultAccountTypes: et.bq.DEFAULT_ACCOUNT_TYPES,
        }),
        ei = {
          state: er,
          subscribeKey: (s, x) => (0, ee.VW)(er, s, x),
          setOptions(s) {
            Object.assign(er, s);
          },
          setFeatures(s) {
            if (!s) return;
            if (!er.features) {
              er.features = et.bq.DEFAULT_FEATURES;
              return;
            }
            let x = { ...er.features, ...s };
            er.features = x;
          },
          setProjectId(s) {
            er.projectId = s;
          },
          setAllWallets(s) {
            er.allWallets = s;
          },
          setIncludeWalletIds(s) {
            er.includeWalletIds = s;
          },
          setExcludeWalletIds(s) {
            er.excludeWalletIds = s;
          },
          setFeaturedWalletIds(s) {
            er.featuredWalletIds = s;
          },
          setTokens(s) {
            er.tokens = s;
          },
          setTermsConditionsUrl(s) {
            er.termsConditionsUrl = s;
          },
          setPrivacyPolicyUrl(s) {
            er.privacyPolicyUrl = s;
          },
          setCustomWallets(s) {
            er.customWallets = s;
          },
          setIsSiweEnabled(s) {
            er.isSiweEnabled = s;
          },
          setIsUniversalProvider(s) {
            er.isUniversalProvider = s;
          },
          setSdkVersion(s) {
            er.sdkVersion = s;
          },
          setMetadata(s) {
            er.metadata = s;
          },
          setDisableAppend(s) {
            er.disableAppend = s;
          },
          setEIP6963Enabled(s) {
            er.enableEIP6963 = s;
          },
          setDebug(s) {
            er.debug = s;
          },
          setEnableWalletConnect(s) {
            er.enableWalletConnect = s;
          },
          setEnableWalletGuide(s) {
            er.enableWalletGuide = s;
          },
          setEnableAuthLogger(s) {
            er.enableAuthLogger = s;
          },
          setEnableWallets(s) {
            er.enableWallets = s;
          },
          setHasMultipleAddresses(s) {
            er.hasMultipleAddresses = s;
          },
          setSIWX(s) {
            er.siwx = s;
          },
          setConnectMethodsOrder(s) {
            er.features = { ...er.features, connectMethodsOrder: s };
          },
          setWalletFeaturesOrder(s) {
            er.features = { ...er.features, walletFeaturesOrder: s };
          },
          setSocialsOrder(s) {
            er.features = { ...er.features, socials: s };
          },
          setCollapseWallets(s) {
            er.features = { ...er.features, collapseWallets: s };
          },
          setEnableEmbedded(s) {
            er.enableEmbedded = s;
          },
          setAllowUnsupportedChain(s) {
            er.allowUnsupportedChain = s;
          },
          setUsingInjectedUniversalProvider(s) {
            er.useInjectedUniversalProvider = s;
          },
          setDefaultAccountTypes(s = {}) {
            Object.entries(s).forEach(([s, x]) => {
              x && (er.defaultAccountTypes[s] = x);
            });
          },
          getSnapshot: () => (0, X.CO)(er),
        };
    },
    2977: function (s, x, W) {
      "use strict";
      W.d(x, {
        I: function () {
          return et;
        },
      });
      var X = W(17832);
      let ee = (0, X.sj)({
          loading: !1,
          open: !1,
          selectedNetworkId: void 0,
          activeChain: void 0,
          initialized: !1,
        }),
        et = {
          state: ee,
          subscribe: (s) => (0, X.Ld)(ee, () => s(ee)),
          set(s) {
            Object.assign(ee, { ...ee, ...s });
          },
        };
    },
    42859: function (s, x, W) {
      "use strict";
      W.d(x, {
        RouterController: function () {
          return el;
        },
      });
      var X = W(17832),
        ee = W(73932),
        et = W(64244),
        er = W(17672),
        ei = W(85956),
        eo = W(99336),
        ea = W(91862);
      let es = (0, X.sj)({
          view: "Connect",
          history: ["Connect"],
          transactionStack: [],
        }),
        el = {
          state: es,
          subscribeKey: (s, x) => (0, ee.VW)(es, s, x),
          pushTransactionStack(s) {
            es.transactionStack.push(s);
          },
          popTransactionStack(s) {
            let x = es.transactionStack.pop();
            if (x) {
              if (s) this.goBack(), x?.onCancel?.();
              else {
                if (x.goBack) this.goBack();
                else if (x.replace) {
                  let s = es.history,
                    x = s.indexOf("ConnectingSiwe");
                  x > 0
                    ? this.goBackToIndex(x - 1)
                    : (eo.I.close(), (es.history = []));
                } else x.view && this.reset(x.view);
                x?.onSuccess?.();
              }
            }
          },
          push(s, x) {
            s !== es.view && ((es.view = s), es.history.push(s), (es.data = x));
          },
          reset(s, x) {
            (es.view = s), (es.history = [s]), (es.data = x);
          },
          replace(s, x) {
            let W = es.history.at(-1),
              X = W === s;
            X ||
              ((es.view = s),
              (es.history[es.history.length - 1] = s),
              (es.data = x));
          },
          goBack() {
            let s =
              !er.R.state.activeCaipAddress &&
              "ConnectingFarcaster" === this.state.view;
            if (
              es.history.length > 1 &&
              !es.history.includes("UnsupportedChain")
            ) {
              es.history.pop();
              let [s] = es.history.slice(-1);
              s && (es.view = s);
            } else eo.I.close();
            setTimeout(() => {
              if (s) {
                et.N.setFarcasterUrl(void 0, er.R.state.activeChain);
                let s = ei.ConnectorController.getAuthConnector();
                s?.provider?.reload();
                let x = (0, X.CO)(ea.OptionsController.state);
                s?.provider?.syncDappData?.({
                  metadata: x.metadata,
                  sdkVersion: x.sdkVersion,
                  projectId: x.projectId,
                  sdkType: x.sdkType,
                });
              }
            }, 100);
          },
          goBackToIndex(s) {
            if (es.history.length > 1) {
              es.history = es.history.slice(0, s + 1);
              let [x] = es.history.slice(-1);
              x && (es.view = x);
            }
          },
        };
    },
    32655: function (s, x, W) {
      "use strict";
      W.d(x, {
        K: function () {
          return eo;
        },
      });
      var X = W(17832),
        ee = W(73932),
        et = W(11517);
      let er = Object.freeze({
          message: "",
          variant: "success",
          svg: void 0,
          open: !1,
          autoClose: !0,
        }),
        ei = (0, X.sj)({ ...er }),
        eo = {
          state: ei,
          subscribeKey: (s, x) => (0, ee.VW)(ei, s, x),
          showLoading(s, x = {}) {
            this._showMessage({ message: s, variant: "loading", ...x });
          },
          showSuccess(s) {
            this._showMessage({ message: s, variant: "success" });
          },
          showSvg(s, x) {
            this._showMessage({ message: s, svg: x });
          },
          showError(s) {
            let x = et.j.parseError(s);
            this._showMessage({ message: x, variant: "error" });
          },
          hide() {
            (ei.message = er.message),
              (ei.variant = er.variant),
              (ei.svg = er.svg),
              (ei.open = er.open),
              (ei.autoClose = er.autoClose);
          },
          _showMessage({
            message: s,
            svg: x,
            variant: W = "success",
            autoClose: X = er.autoClose,
          }) {
            ei.open
              ? ((ei.open = !1),
                setTimeout(() => {
                  (ei.message = s),
                    (ei.variant = W),
                    (ei.svg = x),
                    (ei.open = !0),
                    (ei.autoClose = X);
                }, 150))
              : ((ei.message = s),
                (ei.variant = W),
                (ei.svg = x),
                (ei.open = !0),
                (ei.autoClose = X));
          },
        };
    },
    159: function (s, x, W) {
      "use strict";
      W.d(x, {
        nY: function () {
          return ey;
        },
      });
      var X = W(17832),
        ee = W(73932),
        et = W(74490),
        er = W(69406),
        ei = W(62318),
        eo = W(11517),
        ea = W(17231),
        es = W(68857);
      let el = {
        getGasPriceInEther(s, x) {
          let W = Number(x * s) / 1e18;
          return W;
        },
        getGasPriceInUSD(s, x, W) {
          let X = el.getGasPriceInEther(x, W),
            ee = et.C6.bigNumber(s),
            er = ee.multipliedBy(X);
          return er.toNumber();
        },
        getPriceImpact({
          sourceTokenAmount: s,
          sourceTokenPriceInUSD: x,
          toTokenPriceInUSD: W,
          toTokenAmount: X,
        }) {
          let ee = et.C6.bigNumber(s).multipliedBy(x),
            er = et.C6.bigNumber(X).multipliedBy(W),
            ei = ee.minus(er).dividedBy(ee).multipliedBy(100);
          return ei.toNumber();
        },
        getMaxSlippage(s, x) {
          let W = et.C6.bigNumber(s).dividedBy(100),
            X = et.C6.multiply(x, W);
          return X.toNumber();
        },
        getProviderFee(s, x = 0.0085) {
          let W = et.C6.bigNumber(s).multipliedBy(x);
          return W.toString();
        },
        isInsufficientNetworkTokenForGas(s, x) {
          let W = x || "0";
          return (
            !!et.C6.bigNumber(s).isZero() ||
            et.C6.bigNumber(et.C6.bigNumber(W)).isGreaterThan(s)
          );
        },
        isInsufficientSourceTokenForSwap(s, x, W) {
          let X = W?.find((s) => s.address === x)?.quantity?.numeric,
            ee = et.C6.bigNumber(X || "0").isLessThan(s);
          return ee;
        },
        getToTokenAmount({
          sourceToken: s,
          toToken: x,
          sourceTokenPrice: W,
          toTokenPrice: X,
          sourceTokenAmount: ee,
        }) {
          if ("0" === ee || !s || !x) return "0";
          let er = s.decimals,
            ei = x.decimals;
          if (X <= 0) return "0";
          let eo = et.C6.bigNumber(ee).multipliedBy(0.0085),
            ea = et.C6.bigNumber(ee).minus(eo),
            es = ea.multipliedBy(et.C6.bigNumber(10).pow(er)),
            el = et.C6.bigNumber(W).dividedBy(X),
            ec = er - ei,
            eu = es.multipliedBy(el).dividedBy(et.C6.bigNumber(10).pow(ec)),
            ed = eu.dividedBy(et.C6.bigNumber(10).pow(ei)),
            eh = ed.toFixed(ei).toString();
          return eh;
        },
      };
      var ec = W(64244),
        eu = W(32913),
        ed = W(21310),
        eh = W(17672),
        ep = W(9169),
        ef = W(70196),
        eg = W(91862),
        em = W(42859),
        ew = W(32655);
      let eb = {
          initializing: !1,
          initialized: !1,
          loadingPrices: !1,
          loadingQuote: !1,
          loadingApprovalTransaction: !1,
          loadingBuildTransaction: !1,
          loadingTransaction: !1,
          fetchError: !1,
          approvalTransaction: void 0,
          swapTransaction: void 0,
          transactionError: void 0,
          sourceToken: void 0,
          sourceTokenAmount: "",
          sourceTokenPriceInUSD: 0,
          toToken: void 0,
          toTokenAmount: "",
          toTokenPriceInUSD: 0,
          networkPrice: "0",
          networkBalanceInUSD: "0",
          networkTokenSymbol: "",
          inputError: void 0,
          slippage: ei.bq.CONVERT_SLIPPAGE_TOLERANCE,
          tokens: void 0,
          popularTokens: void 0,
          suggestedTokens: void 0,
          foundTokens: void 0,
          myTokensWithBalance: void 0,
          tokensPriceMap: {},
          gasFee: "0",
          gasPriceInUSD: 0,
          priceImpact: void 0,
          maxSlippage: void 0,
          providerFee: void 0,
        },
        ev = (0, X.sj)(eb),
        ey = {
          state: ev,
          subscribe: (s) => (0, X.Ld)(ev, () => s(ev)),
          subscribeKey: (s, x) => (0, ee.VW)(ev, s, x),
          getParams() {
            let s = eh.R.state.activeCaipAddress,
              x = eh.R.state.activeChain,
              W = eo.j.getPlainAddress(s),
              X = eh.R.getActiveNetworkTokenAddress(),
              ee = ea.M.getConnectedConnectorId(x);
            if (!W) throw Error("No address found to swap the tokens from.");
            let er = !ev.toToken?.address || !ev.toToken?.decimals,
              ei =
                !ev.sourceToken?.address ||
                !ev.sourceToken?.decimals ||
                !et.C6.bigNumber(ev.sourceTokenAmount).isGreaterThan(0),
              es = !ev.sourceTokenAmount;
            return {
              networkAddress: X,
              fromAddress: W,
              fromCaipAddress: s,
              sourceTokenAddress: ev.sourceToken?.address,
              toTokenAddress: ev.toToken?.address,
              toTokenAmount: ev.toTokenAmount,
              toTokenDecimals: ev.toToken?.decimals,
              sourceTokenAmount: ev.sourceTokenAmount,
              sourceTokenDecimals: ev.sourceToken?.decimals,
              invalidToToken: er,
              invalidSourceToken: ei,
              invalidSourceTokenAmount: es,
              availableToSwap: s && !er && !ei && !es,
              isAuthConnector: ee === et.bq.CONNECTOR_ID.AUTH,
            };
          },
          setSourceToken(s) {
            if (!s) {
              (ev.sourceToken = s),
                (ev.sourceTokenAmount = ""),
                (ev.sourceTokenPriceInUSD = 0);
              return;
            }
            (ev.sourceToken = s), this.setTokenPrice(s.address, "sourceToken");
          },
          setSourceTokenAmount(s) {
            ev.sourceTokenAmount = s;
          },
          setToToken(s) {
            if (!s) {
              (ev.toToken = s),
                (ev.toTokenAmount = ""),
                (ev.toTokenPriceInUSD = 0);
              return;
            }
            (ev.toToken = s), this.setTokenPrice(s.address, "toToken");
          },
          setToTokenAmount(s) {
            ev.toTokenAmount = s ? et.C6.formatNumberToLocalString(s, 6) : "";
          },
          async setTokenPrice(s, x) {
            let W = ev.tokensPriceMap[s] || 0;
            W || ((ev.loadingPrices = !0), (W = await this.getAddressPrice(s))),
              "sourceToken" === x
                ? (ev.sourceTokenPriceInUSD = W)
                : "toToken" === x && (ev.toTokenPriceInUSD = W),
              ev.loadingPrices && (ev.loadingPrices = !1),
              this.getParams().availableToSwap && this.swapTokens();
          },
          switchTokens() {
            if (ev.initializing || !ev.initialized) return;
            let s = ev.toToken ? { ...ev.toToken } : void 0,
              x = ev.sourceToken ? { ...ev.sourceToken } : void 0,
              W = s && "" === ev.toTokenAmount ? "1" : ev.toTokenAmount;
            this.setSourceToken(s),
              this.setToToken(x),
              this.setSourceTokenAmount(W),
              this.setToTokenAmount(""),
              this.swapTokens();
          },
          resetState() {
            (ev.myTokensWithBalance = eb.myTokensWithBalance),
              (ev.tokensPriceMap = eb.tokensPriceMap),
              (ev.initialized = eb.initialized),
              (ev.sourceToken = eb.sourceToken),
              (ev.sourceTokenAmount = eb.sourceTokenAmount),
              (ev.sourceTokenPriceInUSD = eb.sourceTokenPriceInUSD),
              (ev.toToken = eb.toToken),
              (ev.toTokenAmount = eb.toTokenAmount),
              (ev.toTokenPriceInUSD = eb.toTokenPriceInUSD),
              (ev.networkPrice = eb.networkPrice),
              (ev.networkTokenSymbol = eb.networkTokenSymbol),
              (ev.networkBalanceInUSD = eb.networkBalanceInUSD),
              (ev.inputError = eb.inputError);
          },
          resetValues() {
            let { networkAddress: s } = this.getParams(),
              x = ev.tokens?.find((x) => x.address === s);
            this.setSourceToken(x), this.setToToken(void 0);
          },
          getApprovalLoadingState: () => ev.loadingApprovalTransaction,
          clearError() {
            ev.transactionError = void 0;
          },
          async initializeState() {
            if (!ev.initializing) {
              if (((ev.initializing = !0), !ev.initialized))
                try {
                  await this.fetchTokens(), (ev.initialized = !0);
                } catch (s) {
                  (ev.initialized = !1),
                    ew.K.showError("Failed to initialize swap"),
                    em.RouterController.goBack();
                }
              ev.initializing = !1;
            }
          },
          async fetchTokens() {
            let { networkAddress: s } = this.getParams();
            await this.getTokenList(),
              await this.getNetworkTokenPrice(),
              await this.getMyTokensWithBalance();
            let x = ev.tokens?.find((x) => x.address === s);
            x &&
              ((ev.networkTokenSymbol = x.symbol),
              this.setSourceToken(x),
              this.setSourceTokenAmount("1"));
          },
          async getTokenList() {
            let s = await es.n.getTokenList();
            (ev.tokens = s),
              (ev.popularTokens = s.sort((s, x) =>
                s.symbol < x.symbol ? -1 : s.symbol > x.symbol ? 1 : 0
              )),
              (ev.suggestedTokens = s.filter(
                (s) => !!ei.bq.SWAP_SUGGESTED_TOKENS.includes(s.symbol),
                {}
              ));
          },
          async getAddressPrice(s) {
            let x = ev.tokensPriceMap[s];
            if (x) return x;
            let W = await ed.L.fetchTokenPrice({
                projectId: eg.OptionsController.state.projectId,
                addresses: [s],
              }),
              X = W?.fungibles || [],
              ee = [...(ev.tokens || []), ...(ev.myTokensWithBalance || [])],
              et = ee?.find((x) => x.address === s)?.symbol,
              er =
                X.find((s) => s.symbol.toLowerCase() === et?.toLowerCase())
                  ?.price || 0,
              ei = parseFloat(er.toString());
            return (ev.tokensPriceMap[s] = ei), ei;
          },
          async getNetworkTokenPrice() {
            let { networkAddress: s } = this.getParams(),
              x = await ed.L.fetchTokenPrice({
                projectId: eg.OptionsController.state.projectId,
                addresses: [s],
              }).catch(
                () => (
                  ew.K.showError("Failed to fetch network token price"),
                  { fungibles: [] }
                )
              ),
              W = x.fungibles?.[0],
              X = W?.price.toString() || "0";
            (ev.tokensPriceMap[s] = parseFloat(X)),
              (ev.networkTokenSymbol = W?.symbol || ""),
              (ev.networkPrice = X);
          },
          async getMyTokensWithBalance(s) {
            let x = await es.n.getMyTokensWithBalance(s);
            x && (await this.getInitialGasPrice(), this.setBalances(x));
          },
          setBalances(s) {
            let { networkAddress: x } = this.getParams(),
              W = eh.R.state.activeCaipNetwork;
            if (!W) return;
            let X = s.find((s) => s.address === x);
            s.forEach((s) => {
              ev.tokensPriceMap[s.address] = s.price || 0;
            }),
              (ev.myTokensWithBalance = s.filter((s) =>
                s.address.startsWith(W.caipNetworkId)
              )),
              (ev.networkBalanceInUSD = X
                ? et.C6.multiply(X.quantity.numeric, X.price).toString()
                : "0");
          },
          async getInitialGasPrice() {
            let s = await es.n.fetchGasPrice();
            if (!s) return { gasPrice: null, gasPriceInUSD: null };
            if (eh.R.state?.activeCaipNetwork?.chainNamespace === "solana")
              return (
                (ev.gasFee = s.standard ?? "0"),
                (ev.gasPriceInUSD = et.C6.multiply(s.standard, ev.networkPrice)
                  .dividedBy(1e9)
                  .toNumber()),
                {
                  gasPrice: BigInt(ev.gasFee),
                  gasPriceInUSD: Number(ev.gasPriceInUSD),
                }
              );
            {
              let x = s.standard ?? "0",
                W = BigInt(x),
                X = BigInt(15e4),
                ee = el.getGasPriceInUSD(ev.networkPrice, X, W);
              return (
                (ev.gasFee = x),
                (ev.gasPriceInUSD = ee),
                { gasPrice: W, gasPriceInUSD: ee }
              );
            }
          },
          async swapTokens() {
            let s = ec.N.state.address,
              x = ev.sourceToken,
              W = ev.toToken,
              X = et.C6.bigNumber(ev.sourceTokenAmount).isGreaterThan(0);
            if (!W || !x || ev.loadingPrices || !X) return;
            ev.loadingQuote = !0;
            let ee = et.C6.bigNumber(ev.sourceTokenAmount)
              .multipliedBy(10 ** x.decimals)
              .integerValue();
            try {
              let X = await ed.L.fetchSwapQuote({
                userAddress: s,
                projectId: eg.OptionsController.state.projectId,
                from: x.address,
                to: W.address,
                gasPrice: ev.gasFee,
                amount: ee.toString(),
              });
              ev.loadingQuote = !1;
              let er = X?.quotes?.[0]?.toAmount;
              if (!er) {
                eu.B.open(
                  {
                    shortMessage: "Incorrect amount",
                    longMessage: "Please enter a valid amount",
                  },
                  "error"
                );
                return;
              }
              let ei = et.C6.bigNumber(er)
                .dividedBy(10 ** W.decimals)
                .toString();
              this.setToTokenAmount(ei);
              let eo = this.hasInsufficientToken(
                ev.sourceTokenAmount,
                x.address
              );
              eo
                ? (ev.inputError = "Insufficient balance")
                : ((ev.inputError = void 0), this.setTransactionDetails());
            } catch (s) {
              (ev.loadingQuote = !1), (ev.inputError = "Insufficient balance");
            }
          },
          async getTransaction() {
            let { fromCaipAddress: s, availableToSwap: x } = this.getParams(),
              W = ev.sourceToken,
              X = ev.toToken;
            if (s && x && W && X && !ev.loadingQuote)
              try {
                let x;
                ev.loadingBuildTransaction = !0;
                let X = await es.n.fetchSwapAllowance({
                  userAddress: s,
                  tokenAddress: W.address,
                  sourceTokenAmount: ev.sourceTokenAmount,
                  sourceTokenDecimals: W.decimals,
                });
                return (
                  (x = X
                    ? await this.createSwapTransaction()
                    : await this.createAllowanceTransaction()),
                  (ev.loadingBuildTransaction = !1),
                  (ev.fetchError = !1),
                  x
                );
              } catch (s) {
                em.RouterController.goBack(),
                  ew.K.showError("Failed to check allowance"),
                  (ev.loadingBuildTransaction = !1),
                  (ev.approvalTransaction = void 0),
                  (ev.swapTransaction = void 0),
                  (ev.fetchError = !0);
                return;
              }
          },
          async createAllowanceTransaction() {
            let {
              fromCaipAddress: s,
              fromAddress: x,
              sourceTokenAddress: W,
              toTokenAddress: X,
            } = this.getParams();
            if (s && X) {
              if (!W)
                throw Error(
                  "createAllowanceTransaction - No source token address found."
                );
              try {
                let ee = await ed.L.generateApproveCalldata({
                    projectId: eg.OptionsController.state.projectId,
                    from: W,
                    to: X,
                    userAddress: s,
                  }),
                  et = await ep.l.estimateGas({
                    address: x,
                    to: eo.j.getPlainAddress(ee.tx.to),
                    data: ee.tx.data,
                  }),
                  er = {
                    data: ee.tx.data,
                    to: eo.j.getPlainAddress(ee.tx.from),
                    gas: et,
                    gasPrice: BigInt(ee.tx.eip155.gasPrice),
                    value: BigInt(ee.tx.value),
                    toAmount: ev.toTokenAmount,
                  };
                return (
                  (ev.swapTransaction = void 0),
                  (ev.approvalTransaction = {
                    data: er.data,
                    to: er.to,
                    gas: er.gas ?? BigInt(0),
                    gasPrice: er.gasPrice,
                    value: er.value,
                    toAmount: er.toAmount,
                  }),
                  {
                    data: er.data,
                    to: er.to,
                    gas: er.gas ?? BigInt(0),
                    gasPrice: er.gasPrice,
                    value: er.value,
                    toAmount: er.toAmount,
                  }
                );
              } catch (s) {
                em.RouterController.goBack(),
                  ew.K.showError("Failed to create approval transaction"),
                  (ev.approvalTransaction = void 0),
                  (ev.swapTransaction = void 0),
                  (ev.fetchError = !0);
                return;
              }
            }
          },
          async createSwapTransaction() {
            let {
                networkAddress: s,
                fromCaipAddress: x,
                sourceTokenAmount: W,
              } = this.getParams(),
              X = ev.sourceToken,
              ee = ev.toToken;
            if (!x || !W || !X || !ee) return;
            let et = ep.l.parseUnits(W, X.decimals)?.toString();
            try {
              let W = await ed.L.generateSwapCalldata({
                  projectId: eg.OptionsController.state.projectId,
                  userAddress: x,
                  from: X.address,
                  to: ee.address,
                  amount: et,
                }),
                er = X.address === s,
                ei = BigInt(W.tx.eip155.gas),
                ea = BigInt(W.tx.eip155.gasPrice),
                es = {
                  data: W.tx.data,
                  to: eo.j.getPlainAddress(W.tx.to),
                  gas: ei,
                  gasPrice: ea,
                  value: er ? BigInt(et ?? "0") : BigInt("0"),
                  toAmount: ev.toTokenAmount,
                };
              return (
                (ev.gasPriceInUSD = el.getGasPriceInUSD(
                  ev.networkPrice,
                  ei,
                  ea
                )),
                (ev.approvalTransaction = void 0),
                (ev.swapTransaction = es),
                es
              );
            } catch (s) {
              em.RouterController.goBack(),
                ew.K.showError("Failed to create transaction"),
                (ev.approvalTransaction = void 0),
                (ev.swapTransaction = void 0),
                (ev.fetchError = !0);
              return;
            }
          },
          async sendTransactionForApproval(s) {
            let { fromAddress: x, isAuthConnector: W } = this.getParams();
            ev.loadingApprovalTransaction = !0;
            let X = "Approve limit increase in your wallet";
            W
              ? em.RouterController.pushTransactionStack({
                  view: null,
                  goBack: !0,
                  onSuccess() {
                    ew.K.showLoading(X);
                  },
                })
              : ew.K.showLoading(X);
            try {
              await ep.l.sendTransaction({
                address: x,
                to: s.to,
                data: s.data,
                gas: s.gas,
                gasPrice: BigInt(s.gasPrice),
                value: s.value,
                chainNamespace: "eip155",
              }),
                await this.swapTokens(),
                await this.getTransaction(),
                (ev.approvalTransaction = void 0),
                (ev.loadingApprovalTransaction = !1);
            } catch (s) {
              (ev.transactionError = s?.shortMessage),
                (ev.loadingApprovalTransaction = !1),
                ew.K.showError(s?.shortMessage || "Transaction error"),
                ef.X.sendEvent({
                  type: "track",
                  event: "SWAP_APPROVAL_ERROR",
                  properties: {
                    message: s?.shortMessage || s?.message || "Unknown",
                    network: eh.R.state.activeCaipNetwork?.caipNetworkId || "",
                    swapFromToken: this.state.sourceToken?.symbol || "",
                    swapToToken: this.state.toToken?.symbol || "",
                    swapFromAmount: this.state.sourceTokenAmount || "",
                    swapToAmount: this.state.toTokenAmount || "",
                    isSmartAccount:
                      ec.N.state.preferredAccountType ===
                      er.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                  },
                });
            }
          },
          async sendTransactionForSwap(s) {
            if (!s) return;
            let {
              fromAddress: x,
              toTokenAmount: W,
              isAuthConnector: X,
            } = this.getParams();
            ev.loadingTransaction = !0;
            let ee = `Swapping ${
                ev.sourceToken?.symbol
              } to ${et.C6.formatNumberToLocalString(W, 3)} ${
                ev.toToken?.symbol
              }`,
              ei = `Swapped ${
                ev.sourceToken?.symbol
              } to ${et.C6.formatNumberToLocalString(W, 3)} ${
                ev.toToken?.symbol
              }`;
            X
              ? em.RouterController.pushTransactionStack({
                  view: "Account",
                  goBack: !1,
                  onSuccess() {
                    ew.K.showLoading(ee), ey.resetState();
                  },
                })
              : ew.K.showLoading("Confirm transaction in your wallet");
            try {
              let W = [ev.sourceToken?.address, ev.toToken?.address].join(","),
                ee = await ep.l.sendTransaction({
                  address: x,
                  to: s.to,
                  data: s.data,
                  gas: s.gas,
                  gasPrice: BigInt(s.gasPrice),
                  value: s.value,
                  chainNamespace: "eip155",
                });
              return (
                (ev.loadingTransaction = !1),
                ew.K.showSuccess(ei),
                ef.X.sendEvent({
                  type: "track",
                  event: "SWAP_SUCCESS",
                  properties: {
                    network: eh.R.state.activeCaipNetwork?.caipNetworkId || "",
                    swapFromToken: this.state.sourceToken?.symbol || "",
                    swapToToken: this.state.toToken?.symbol || "",
                    swapFromAmount: this.state.sourceTokenAmount || "",
                    swapToAmount: this.state.toTokenAmount || "",
                    isSmartAccount:
                      ec.N.state.preferredAccountType ===
                      er.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                  },
                }),
                ey.resetState(),
                X || em.RouterController.replace("Account"),
                ey.getMyTokensWithBalance(W),
                ee
              );
            } catch (s) {
              (ev.transactionError = s?.shortMessage),
                (ev.loadingTransaction = !1),
                ew.K.showError(s?.shortMessage || "Transaction error"),
                ef.X.sendEvent({
                  type: "track",
                  event: "SWAP_ERROR",
                  properties: {
                    message: s?.shortMessage || s?.message || "Unknown",
                    network: eh.R.state.activeCaipNetwork?.caipNetworkId || "",
                    swapFromToken: this.state.sourceToken?.symbol || "",
                    swapToToken: this.state.toToken?.symbol || "",
                    swapFromAmount: this.state.sourceTokenAmount || "",
                    swapToAmount: this.state.toTokenAmount || "",
                    isSmartAccount:
                      ec.N.state.preferredAccountType ===
                      er.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                  },
                });
              return;
            }
          },
          hasInsufficientToken(s, x) {
            let W = el.isInsufficientSourceTokenForSwap(
              s,
              x,
              ev.myTokensWithBalance
            );
            return (
              (ec.N.state.preferredAccountType !==
                er.y_.ACCOUNT_TYPES.SMART_ACCOUNT &&
                el.isInsufficientNetworkTokenForGas(
                  ev.networkBalanceInUSD,
                  ev.gasPriceInUSD
                )) ||
              W
            );
          },
          setTransactionDetails() {
            let { toTokenAddress: s, toTokenDecimals: x } = this.getParams();
            s &&
              x &&
              ((ev.gasPriceInUSD = el.getGasPriceInUSD(
                ev.networkPrice,
                BigInt(ev.gasFee),
                BigInt(15e4)
              )),
              (ev.priceImpact = el.getPriceImpact({
                sourceTokenAmount: ev.sourceTokenAmount,
                sourceTokenPriceInUSD: ev.sourceTokenPriceInUSD,
                toTokenPriceInUSD: ev.toTokenPriceInUSD,
                toTokenAmount: ev.toTokenAmount,
              })),
              (ev.maxSlippage = el.getMaxSlippage(
                ev.slippage,
                ev.toTokenAmount
              )),
              (ev.providerFee = el.getProviderFee(ev.sourceTokenAmount)));
          },
        };
    },
    98138: function (s, x, W) {
      "use strict";
      W.d(x, {
        u: function () {
          return ei;
        },
      });
      var X = W(17832),
        ee = W(74490),
        et = W(85956);
      let er = (0, X.sj)({
          themeMode: "dark",
          themeVariables: {},
          w3mThemeVariables: void 0,
        }),
        ei = {
          state: er,
          subscribe: (s) => (0, X.Ld)(er, () => s(er)),
          setThemeMode(s) {
            er.themeMode = s;
            try {
              let x = et.ConnectorController.getAuthConnector();
              if (x) {
                let W = ei.getSnapshot().themeVariables;
                x.provider.syncTheme({
                  themeMode: s,
                  themeVariables: W,
                  w3mThemeVariables: (0, ee.tU)(W, s),
                });
              }
            } catch {
              console.info("Unable to sync theme to auth connector");
            }
          },
          setThemeVariables(s) {
            er.themeVariables = { ...er.themeVariables, ...s };
            try {
              let s = et.ConnectorController.getAuthConnector();
              if (s) {
                let x = ei.getSnapshot().themeVariables;
                s.provider.syncTheme({
                  themeVariables: x,
                  w3mThemeVariables: (0, ee.tU)(
                    er.themeVariables,
                    er.themeMode
                  ),
                });
              }
            } catch {
              console.info("Unable to sync theme to auth connector");
            }
          },
          getSnapshot: () => (0, X.CO)(er),
        };
    },
    53530: function (s, x, W) {
      "use strict";
      W.d(x, {
        s: function () {
          return ec;
        },
      });
      var X = W(17832),
        ee = W(69406),
        et = W(64244),
        er = W(21310),
        ei = W(17672),
        eo = W(70196),
        ea = W(91862),
        es = W(32655);
      let el = (0, X.sj)({
          transactions: [],
          coinbaseTransactions: {},
          transactionsByYear: {},
          lastNetworkInView: void 0,
          loading: !1,
          empty: !1,
          next: void 0,
        }),
        ec = {
          state: el,
          subscribe: (s) => (0, X.Ld)(el, () => s(el)),
          setLastNetworkInView(s) {
            el.lastNetworkInView = s;
          },
          async fetchTransactions(s, x) {
            let { projectId: W } = ea.OptionsController.state;
            if (!W || !s)
              throw Error(
                "Transactions can't be fetched without a projectId and an accountAddress"
              );
            el.loading = !0;
            try {
              let X = await er.L.fetchTransactions({
                  account: s,
                  projectId: W,
                  cursor: el.next,
                  onramp: x,
                  cache: "coinbase" === x ? "no-cache" : void 0,
                  chainId: ei.R.state.activeCaipNetwork?.caipNetworkId,
                }),
                ee = this.filterSpamTransactions(X.data),
                et = this.filterByConnectedChain(ee),
                eo = [...el.transactions, ...et];
              (el.loading = !1),
                "coinbase" === x
                  ? (el.coinbaseTransactions =
                      this.groupTransactionsByYearAndMonth(
                        el.coinbaseTransactions,
                        X.data
                      ))
                  : ((el.transactions = eo),
                    (el.transactionsByYear =
                      this.groupTransactionsByYearAndMonth(
                        el.transactionsByYear,
                        et
                      ))),
                (el.empty = 0 === eo.length),
                (el.next = X.next ? X.next : void 0);
            } catch (x) {
              eo.X.sendEvent({
                type: "track",
                event: "ERROR_FETCH_TRANSACTIONS",
                properties: {
                  address: s,
                  projectId: W,
                  cursor: el.next,
                  isSmartAccount:
                    et.N.state.preferredAccountType ===
                    ee.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
                },
              }),
                es.K.showError("Failed to fetch transactions"),
                (el.loading = !1),
                (el.empty = !0),
                (el.next = void 0);
            }
          },
          groupTransactionsByYearAndMonth: (s = {}, x = []) => (
            x.forEach((x) => {
              let W = new Date(x.metadata.minedAt).getFullYear(),
                X = new Date(x.metadata.minedAt).getMonth(),
                ee = s[W] ?? {},
                et = ee[X] ?? [],
                er = et.filter((s) => s.id !== x.id);
              s[W] = {
                ...ee,
                [X]: [...er, x].sort(
                  (s, x) =>
                    new Date(x.metadata.minedAt).getTime() -
                    new Date(s.metadata.minedAt).getTime()
                ),
              };
            }),
            s
          ),
          filterSpamTransactions: (s) =>
            s.filter((s) => {
              let x = s.transfers.every(
                (s) => s.nft_info?.flags.is_spam === !0
              );
              return !x;
            }),
          filterByConnectedChain(s) {
            let x = ei.R.state.activeCaipNetwork?.caipNetworkId,
              W = s.filter((s) => s.metadata.chain === x);
            return W;
          },
          clearCursor() {
            el.next = void 0;
          },
          resetTransactions() {
            (el.transactions = []),
              (el.transactionsByYear = {}),
              (el.lastNetworkInView = void 0),
              (el.loading = !1),
              (el.empty = !1),
              (el.next = void 0);
          },
        };
    },
    62318: function (s, x, W) {
      "use strict";
      W.d(x, {
        bq: function () {
          return er;
        },
        gy: function () {
          return ee;
        },
        xj: function () {
          return et;
        },
      });
      let X = "https://secure.walletconnect.org",
        ee = [
          {
            label: "Coinbase",
            name: "coinbase",
            feeRange: "1-2%",
            url: "",
            supportedChains: ["eip155"],
          },
          {
            label: "Meld.io",
            name: "meld",
            feeRange: "1-2%",
            url: "https://meldcrypto.com",
            supportedChains: ["eip155", "solana"],
          },
        ],
        et = "WXETMuFUQmqqybHuRkSgxv:25B8LJHSfpG6LVjR2ytU5Cwh7Z4Sch2ocoU",
        er = {
          FOUR_MINUTES_MS: 24e4,
          TEN_SEC_MS: 1e4,
          FIVE_SEC_MS: 5e3,
          THREE_SEC_MS: 3e3,
          ONE_SEC_MS: 1e3,
          SECURE_SITE: X,
          SECURE_SITE_DASHBOARD: `${X}/dashboard`,
          SECURE_SITE_FAVICON: `${X}/images/favicon.png`,
          RESTRICTED_TIMEZONES: [
            "ASIA/SHANGHAI",
            "ASIA/URUMQI",
            "ASIA/CHONGQING",
            "ASIA/HARBIN",
            "ASIA/KASHGAR",
            "ASIA/MACAU",
            "ASIA/HONG_KONG",
            "ASIA/MACAO",
            "ASIA/BEIJING",
            "ASIA/HARBIN",
          ],
          WC_COINBASE_PAY_SDK_CHAINS: [
            "ethereum",
            "arbitrum",
            "polygon",
            "avalanche-c-chain",
            "optimism",
            "celo",
            "base",
          ],
          WC_COINBASE_PAY_SDK_FALLBACK_CHAIN: "ethereum",
          WC_COINBASE_PAY_SDK_CHAIN_NAME_MAP: {
            Ethereum: "ethereum",
            "Arbitrum One": "arbitrum",
            Polygon: "polygon",
            Avalanche: "avalanche-c-chain",
            "OP Mainnet": "optimism",
            Celo: "celo",
            Base: "base",
          },
          WC_COINBASE_ONRAMP_APP_ID: "bf18c88d-495a-463b-b249-0b9d3656cf5e",
          SWAP_SUGGESTED_TOKENS: [
            "ETH",
            "UNI",
            "1INCH",
            "AAVE",
            "SOL",
            "ADA",
            "AVAX",
            "DOT",
            "LINK",
            "NITRO",
            "GAIA",
            "MILK",
            "TRX",
            "NEAR",
            "GNO",
            "WBTC",
            "DAI",
            "WETH",
            "USDC",
            "USDT",
            "ARB",
            "BAL",
            "BICO",
            "CRV",
            "ENS",
            "MATIC",
            "OP",
          ],
          SWAP_POPULAR_TOKENS: [
            "ETH",
            "UNI",
            "1INCH",
            "AAVE",
            "SOL",
            "ADA",
            "AVAX",
            "DOT",
            "LINK",
            "NITRO",
            "GAIA",
            "MILK",
            "TRX",
            "NEAR",
            "GNO",
            "WBTC",
            "DAI",
            "WETH",
            "USDC",
            "USDT",
            "ARB",
            "BAL",
            "BICO",
            "CRV",
            "ENS",
            "MATIC",
            "OP",
            "METAL",
            "DAI",
            "CHAMP",
            "WOLF",
            "SALE",
            "BAL",
            "BUSD",
            "MUST",
            "BTCpx",
            "ROUTE",
            "HEX",
            "WELT",
            "amDAI",
            "VSQ",
            "VISION",
            "AURUM",
            "pSP",
            "SNX",
            "VC",
            "LINK",
            "CHP",
            "amUSDT",
            "SPHERE",
            "FOX",
            "GIDDY",
            "GFC",
            "OMEN",
            "OX_OLD",
            "DE",
            "WNT",
          ],
          BALANCE_SUPPORTED_CHAINS: ["eip155", "solana"],
          SWAP_SUPPORTED_NETWORKS: [
            "eip155:1",
            "eip155:42161",
            "eip155:10",
            "eip155:324",
            "eip155:8453",
            "eip155:56",
            "eip155:137",
            "eip155:100",
            "eip155:43114",
            "eip155:250",
            "eip155:8217",
            "eip155:1313161554",
          ],
          NAMES_SUPPORTED_CHAIN_NAMESPACES: ["eip155"],
          ONRAMP_SUPPORTED_CHAIN_NAMESPACES: ["eip155", "solana"],
          ACTIVITY_ENABLED_CHAIN_NAMESPACES: ["eip155", "solana"],
          NATIVE_TOKEN_ADDRESS: {
            eip155: "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
            solana: "So11111111111111111111111111111111111111111",
            polkadot: "0x",
            bip122: "0x",
          },
          CONVERT_SLIPPAGE_TOLERANCE: 1,
          CONNECT_LABELS: { MOBILE: "Open and continue in a new browser tab" },
          DEFAULT_FEATURES: {
            swaps: !0,
            onramp: !0,
            receive: !0,
            send: !0,
            email: !0,
            emailShowWallets: !0,
            socials: [
              "google",
              "x",
              "discord",
              "farcaster",
              "github",
              "apple",
              "facebook",
            ],
            history: !0,
            analytics: !0,
            allWallets: !0,
            legalCheckbox: !1,
            smartSessions: !1,
            collapseWallets: !1,
            walletFeaturesOrder: ["onramp", "swaps", "receive", "send"],
            connectMethodsOrder: void 0,
          },
          DEFAULT_ACCOUNT_TYPES: {
            bip122: "payment",
            eip155: "smartAccount",
            polkadot: "eoa",
            solana: "eoa",
          },
        };
    },
    11517: function (s, x, W) {
      "use strict";
      W.d(x, {
        j: function () {
          return et;
        },
      });
      var X = W(74490),
        ee = W(62318);
      let et = {
        isMobile() {
          return (
            !!this.isClient() &&
            !!(
              window.matchMedia("(pointer:coarse)").matches ||
              /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(
                navigator.userAgent
              )
            )
          );
        },
        checkCaipNetwork: (s, x = "") =>
          s?.caipNetworkId.toLocaleLowerCase().includes(x.toLowerCase()),
        isAndroid() {
          if (!this.isMobile()) return !1;
          let s = window.navigator.userAgent.toLowerCase();
          return et.isMobile() && s.includes("android");
        },
        isIos() {
          if (!this.isMobile()) return !1;
          let s = window.navigator.userAgent.toLowerCase();
          return s.includes("iphone") || s.includes("ipad");
        },
        isSafari() {
          if (!this.isClient()) return !1;
          let s = window.navigator.userAgent.toLowerCase();
          return s.includes("safari");
        },
        isClient: () => "undefined" != typeof window,
        isPairingExpired: (s) => !s || s - Date.now() <= ee.bq.TEN_SEC_MS,
        isAllowedRetry: (s, x = ee.bq.ONE_SEC_MS) => Date.now() - s >= x,
        copyToClopboard(s) {
          navigator.clipboard.writeText(s);
        },
        isIframe() {
          try {
            return window.self !== window.top;
          } catch (s) {
            return !1;
          }
        },
        getPairingExpiry: () => Date.now() + ee.bq.FOUR_MINUTES_MS,
        getNetworkId: (s) => s?.split(":")[1],
        getPlainAddress: (s) => s?.split(":")[2],
        wait: async (s) =>
          new Promise((x) => {
            setTimeout(x, s);
          }),
        debounce(s, x = 500) {
          let W;
          return (...X) => {
            W && clearTimeout(W),
              (W = setTimeout(function () {
                s(...X);
              }, x));
          };
        },
        isHttpUrl: (s) => s.startsWith("http://") || s.startsWith("https://"),
        formatNativeUrl(s, x) {
          if (et.isHttpUrl(s)) return this.formatUniversalUrl(s, x);
          let W = s;
          W.includes("://") ||
            ((W = s.replaceAll("/", "").replaceAll(":", "")), (W = `${W}://`)),
            W.endsWith("/") || (W = `${W}/`),
            this.isTelegram() &&
              this.isAndroid() &&
              (x = encodeURIComponent(x));
          let X = encodeURIComponent(x);
          return { redirect: `${W}wc?uri=${X}`, href: W };
        },
        formatUniversalUrl(s, x) {
          if (!et.isHttpUrl(s)) return this.formatNativeUrl(s, x);
          let W = s;
          W.endsWith("/") || (W = `${W}/`);
          let X = encodeURIComponent(x);
          return { redirect: `${W}wc?uri=${X}`, href: W };
        },
        getOpenTargetForPlatform(s) {
          return this.isTelegram() ? "_blank" : s;
        },
        openHref(s, x, W) {
          window.open(
            s,
            this.getOpenTargetForPlatform(x),
            W || "noreferrer noopener"
          );
        },
        returnOpenHref(s, x, W) {
          return window.open(
            s,
            this.getOpenTargetForPlatform(x),
            W || "noreferrer noopener"
          );
        },
        isTelegram: () =>
          "undefined" != typeof window &&
          (!!window.TelegramWebviewProxy ||
            !!window.Telegram ||
            !!window.TelegramWebviewProxyProto),
        async preloadImage(s) {
          let x = new Promise((x, W) => {
            let X = new Image();
            (X.onload = x),
              (X.onerror = W),
              (X.crossOrigin = "anonymous"),
              (X.src = s);
          });
          return Promise.race([x, et.wait(2e3)]);
        },
        formatBalance(s, x) {
          let W = "0.000";
          if ("string" == typeof s) {
            let x = Number(s);
            if (x) {
              let s = Math.floor(1e3 * x) / 1e3;
              s && (W = s.toString());
            }
          }
          return `${W}${x ? ` ${x}` : ""}`;
        },
        formatBalance2(s, x) {
          let W;
          if ("0" === s) W = "0";
          else if ("string" == typeof s) {
            let x = Number(s);
            x && (W = x.toString().match(/^-?\d+(?:\.\d{0,3})?/u)?.[0]);
          }
          return { value: W ?? "0", rest: "0" === W ? "000" : "", symbol: x };
        },
        getApiUrl: () => X.bq.W3M_API_URL,
        getBlockchainApiUrl: () => X.bq.BLOCKCHAIN_API_RPC_URL,
        getAnalyticsUrl: () => X.bq.PULSE_API_URL,
        getUUID: () =>
          crypto?.randomUUID
            ? crypto.randomUUID()
            : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu, (s) => {
                let x = (16 * Math.random()) | 0;
                return ("x" === s ? x : (3 & x) | 8).toString(16);
              }),
        parseError: (s) =>
          "string" == typeof s
            ? s
            : "string" == typeof s?.issues?.[0]?.message
            ? s.issues[0].message
            : s instanceof Error
            ? s.message
            : "Unknown error",
        sortRequestedNetworks(s, x = []) {
          let W = {};
          return (
            x &&
              s &&
              (s.forEach((s, x) => {
                W[s] = x;
              }),
              x.sort((s, x) => {
                let X = W[s.id],
                  ee = W[x.id];
                return void 0 !== X && void 0 !== ee
                  ? X - ee
                  : void 0 !== X
                  ? -1
                  : void 0 !== ee
                  ? 1
                  : 0;
              })),
            x
          );
        },
        calculateBalance(s) {
          let x = 0;
          for (let W of s) x += W.value ?? 0;
          return x;
        },
        formatTokenBalance(s) {
          let x = s.toFixed(2),
            [W, X] = x.split(".");
          return { dollars: W, pennies: X };
        },
        isAddress(s, x = "eip155") {
          switch (x) {
            case "eip155":
              if (
                /^(?:0x)?[0-9a-f]{40}$/iu.test(s) &&
                (/^(?:0x)?[0-9a-f]{40}$/iu.test(s) ||
                  /^(?:0x)?[0-9A-F]{40}$/iu.test(s))
              )
                return !0;
              return !1;
            case "solana":
              return /[1-9A-HJ-NP-Za-km-z]{32,44}$/iu.test(s);
            default:
              return !1;
          }
        },
        uniqueBy(s, x) {
          let W = new Set();
          return s.filter((s) => {
            let X = s[x];
            return !W.has(X) && (W.add(X), !0);
          });
        },
        generateSdkVersion(s, x, W) {
          let X = 0 === s.length,
            ee = X ? "universal" : s.map((s) => s.adapterType).join(",");
          return `${x}-${ee}-${W}`;
        },
        createAccount: (s, x, W, X, ee) => ({
          namespace: s,
          address: x,
          type: W,
          publicKey: X,
          path: ee,
        }),
        isCaipAddress(s) {
          if ("string" != typeof s) return !1;
          let x = s.split(":"),
            W = x[0];
          return 3 === x.filter(Boolean).length && W in X.bq.CHAIN_NAME_MAP;
        },
      };
    },
    40305: function (s, x, W) {
      "use strict";
      async function fetchData(...s) {
        let x = await fetch(...s);
        if (!x.ok) {
          let s = Error(`HTTP status code: ${x.status}`, { cause: x });
          throw s;
        }
        return x;
      }
      W.d(x, {
        V: function () {
          return FetchUtil;
        },
      });
      let FetchUtil = class FetchUtil {
        constructor({ baseUrl: s, clientId: x }) {
          (this.baseUrl = s), (this.clientId = x);
        }
        async get({ headers: s, signal: x, cache: W, ...X }) {
          let ee = this.createUrl(X),
            et = await fetchData(ee, {
              method: "GET",
              headers: s,
              signal: x,
              cache: W,
            });
          return et.json();
        }
        async getBlob({ headers: s, signal: x, ...W }) {
          let X = this.createUrl(W),
            ee = await fetchData(X, { method: "GET", headers: s, signal: x });
          return ee.blob();
        }
        async post({ body: s, headers: x, signal: W, ...X }) {
          let ee = this.createUrl(X),
            et = await fetchData(ee, {
              method: "POST",
              headers: x,
              body: s ? JSON.stringify(s) : void 0,
              signal: W,
            });
          return et.json();
        }
        async put({ body: s, headers: x, signal: W, ...X }) {
          let ee = this.createUrl(X),
            et = await fetchData(ee, {
              method: "PUT",
              headers: x,
              body: s ? JSON.stringify(s) : void 0,
              signal: W,
            });
          return et.json();
        }
        async delete({ body: s, headers: x, signal: W, ...X }) {
          let ee = this.createUrl(X),
            et = await fetchData(ee, {
              method: "DELETE",
              headers: x,
              body: s ? JSON.stringify(s) : void 0,
              signal: W,
            });
          return et.json();
        }
        createUrl({ path: s, params: x }) {
          let W = new URL(s, this.baseUrl);
          return (
            x &&
              Object.entries(x).forEach(([s, x]) => {
                x && W.searchParams.append(s, x);
              }),
            this.clientId && W.searchParams.append("clientId", this.clientId),
            W
          );
        }
      };
    },
    50367: function (s, x, W) {
      "use strict";
      W.d(x, {
        w: function () {
          return eh;
        },
      }),
        W(47367);
      var X = W(74490),
        ee = W(69406),
        et = W(64244),
        er = W(17672),
        ei = W(9169),
        eo = W(70196),
        ea = W(99336),
        es = W(91862),
        el = W(42859),
        ec = W(32655),
        eu = W(11517),
        ed = W(17231);
      let eh = {
        getSIWX: () => es.OptionsController.state.siwx,
        async initializeIfEnabled() {
          let s = es.OptionsController.state.siwx,
            x = er.R.getActiveCaipAddress();
          if (!(s && x)) return;
          let [W, X, ee] = x.split(":");
          if (er.R.checkIfSupportedNetwork(W))
            try {
              let x = await s.getSessions(`${W}:${X}`, ee);
              if (x.length) return;
              await ea.I.open({ view: "SIWXSignMessage" });
            } catch (s) {
              console.error("SIWXUtil:initializeIfEnabled", s),
                eo.X.sendEvent({
                  type: "track",
                  event: "SIWX_AUTH_ERROR",
                  properties: this.getSIWXEventProperties(),
                }),
                await ei.l._getClient()?.disconnect().catch(console.error),
                el.RouterController.reset("Connect"),
                ec.K.showError(
                  "A problem occurred while trying initialize authentication"
                );
            }
        },
        async requestSignMessage() {
          let s = es.OptionsController.state.siwx,
            x = eu.j.getPlainAddress(er.R.getActiveCaipAddress()),
            W = er.R.getActiveCaipNetwork(),
            ee = ei.l._getClient();
          if (!s) throw Error("SIWX is not enabled");
          if (!x) throw Error("No ActiveCaipAddress found");
          if (!W) throw Error("No ActiveCaipNetwork or client found");
          if (!ee) throw Error("No ConnectionController client found");
          try {
            let et = await s.createMessage({
                chainId: W.caipNetworkId,
                accountAddress: x,
              }),
              er = et.toString(),
              ei = ed.M.getConnectedConnectorId(W.chainNamespace);
            ei === X.bq.CONNECTOR_ID.AUTH &&
              el.RouterController.pushTransactionStack({
                view: null,
                goBack: !1,
                replace: !0,
              });
            let es = await ee.signMessage(er);
            await s.addSession({ data: et, message: er, signature: es }),
              ea.I.close(),
              eo.X.sendEvent({
                type: "track",
                event: "SIWX_AUTH_SUCCESS",
                properties: this.getSIWXEventProperties(),
              });
          } catch (x) {
            let s = this.getSIWXEventProperties();
            (ea.I.state.open &&
              "ApproveTransaction" !== el.RouterController.state.view) ||
              (await ea.I.open({ view: "SIWXSignMessage" })),
              s.isSmartAccount
                ? ec.K.showError(
                    "This application might not support Smart Accounts"
                  )
                : ec.K.showError("Signature declined"),
              eo.X.sendEvent({
                type: "track",
                event: "SIWX_AUTH_ERROR",
                properties: s,
              }),
              console.error("SWIXUtil:requestSignMessage", x);
          }
        },
        async cancelSignMessage() {
          try {
            let s = this.getSIWX(),
              x = s?.getRequired?.();
            x ? await ei.l.disconnect() : ea.I.close(),
              el.RouterController.reset("Connect"),
              eo.X.sendEvent({
                event: "CLICK_CANCEL_SIWX",
                type: "track",
                properties: this.getSIWXEventProperties(),
              });
          } catch (s) {
            console.error("SIWXUtil:cancelSignMessage", s);
          }
        },
        async getSessions() {
          let s = es.OptionsController.state.siwx,
            x = eu.j.getPlainAddress(er.R.getActiveCaipAddress()),
            W = er.R.getActiveCaipNetwork();
          return s && x && W ? s.getSessions(W.caipNetworkId, x) : [];
        },
        async isSIWXCloseDisabled() {
          let s = this.getSIWX();
          if (s) {
            let x = "ApproveTransaction" === el.RouterController.state.view,
              W = "SIWXSignMessage" === el.RouterController.state.view;
            if (x || W)
              return (
                s.getRequired?.() && 0 === (await this.getSessions()).length
              );
          }
          return !1;
        },
        async universalProviderAuthenticate({
          universalProvider: s,
          chains: x,
          methods: W,
        }) {
          let X = eh.getSIWX(),
            ee = new Set(x.map((s) => s.split(":")[0]));
          if (!X || 1 !== ee.size || !ee.has("eip155")) return !1;
          let ei = await X.createMessage({
              chainId: er.R.getActiveCaipNetwork()?.caipNetworkId || "",
              accountAddress: "",
            }),
            ea = await s.authenticate({
              nonce: ei.nonce,
              domain: ei.domain,
              uri: ei.uri,
              exp: ei.expirationTime,
              iat: ei.issuedAt,
              nbf: ei.notBefore,
              requestId: ei.requestId,
              version: ei.version,
              resources: ei.resources,
              statement: ei.statement,
              chainId: ei.chainId,
              methods: W,
              chains: [ei.chainId, ...x.filter((s) => s !== ei.chainId)],
            });
          if (
            (ec.K.showLoading("Authenticating...", { autoClose: !1 }),
            et.N.setConnectedWalletInfo(
              {
                ...ea.session.peer.metadata,
                name: ea.session.peer.metadata.name,
                icon: ea.session.peer.metadata.icons?.[0],
              },
              Array.from(ee)[0]
            ),
            ea?.auths?.length)
          ) {
            let x = ea.auths.map((x) => {
              let W = s.client.formatAuthMessage({
                request: x.p,
                iss: x.p.iss,
              });
              return {
                data: {
                  ...x.p,
                  accountAddress: x.p.iss.split(":").slice(-1).join(""),
                  chainId: x.p.iss.split(":").slice(2, 4).join(":"),
                  uri: x.p.aud,
                  version: x.p.version || ei.version,
                  expirationTime: x.p.exp,
                  issuedAt: x.p.iat,
                  notBefore: x.p.nbf,
                },
                message: W,
                signature: x.s.s,
                cacao: x,
              };
            });
            try {
              await X.setSessions(x),
                eo.X.sendEvent({
                  type: "track",
                  event: "SIWX_AUTH_SUCCESS",
                  properties: eh.getSIWXEventProperties(),
                });
            } catch (x) {
              throw (
                (console.error(
                  "SIWX:universalProviderAuth - failed to set sessions",
                  x
                ),
                eo.X.sendEvent({
                  type: "track",
                  event: "SIWX_AUTH_ERROR",
                  properties: eh.getSIWXEventProperties(),
                }),
                await s.disconnect().catch(console.error),
                x)
              );
            } finally {
              ec.K.hide();
            }
          }
          return !0;
        },
        getSIWXEventProperties: () => ({
          network: er.R.state.activeCaipNetwork?.caipNetworkId || "",
          isSmartAccount:
            et.N.state.preferredAccountType ===
            ee.y_.ACCOUNT_TYPES.SMART_ACCOUNT,
        }),
        async clearSessions() {
          let s = this.getSIWX();
          s && (await s.setSessions([]));
        },
      };
    },
    17231: function (s, x, W) {
      "use strict";
      W.d(x, {
        M: function () {
          return ee;
        },
      });
      var X = W(74490);
      let ee = {
        getActiveNetworkProps() {
          let s = ee.getActiveNamespace(),
            x = ee.getActiveCaipNetworkId(),
            W = x ? x.split(":")[1] : void 0,
            X = W ? (isNaN(Number(W)) ? W : Number(W)) : void 0;
          return { namespace: s, caipNetworkId: x, chainId: X };
        },
        setWalletConnectDeepLink({ name: s, href: x }) {
          try {
            X.mr.setItem(
              X.uJ.DEEPLINK_CHOICE,
              JSON.stringify({ href: x, name: s })
            );
          } catch {
            console.info("Unable to set WalletConnect deep link");
          }
        },
        getWalletConnectDeepLink() {
          try {
            let s = X.mr.getItem(X.uJ.DEEPLINK_CHOICE);
            if (s) return JSON.parse(s);
          } catch {
            console.info("Unable to get WalletConnect deep link");
          }
        },
        deleteWalletConnectDeepLink() {
          try {
            X.mr.removeItem(X.uJ.DEEPLINK_CHOICE);
          } catch {
            console.info("Unable to delete WalletConnect deep link");
          }
        },
        setActiveNamespace(s) {
          try {
            X.mr.setItem(X.uJ.ACTIVE_NAMESPACE, s);
          } catch {
            console.info("Unable to set active namespace");
          }
        },
        setActiveCaipNetworkId(s) {
          try {
            X.mr.setItem(X.uJ.ACTIVE_CAIP_NETWORK_ID, s),
              ee.setActiveNamespace(s.split(":")[0]);
          } catch {
            console.info("Unable to set active caip network id");
          }
        },
        getActiveCaipNetworkId() {
          try {
            return X.mr.getItem(X.uJ.ACTIVE_CAIP_NETWORK_ID);
          } catch {
            console.info("Unable to get active caip network id");
            return;
          }
        },
        deleteActiveCaipNetworkId() {
          try {
            X.mr.removeItem(X.uJ.ACTIVE_CAIP_NETWORK_ID);
          } catch {
            console.info("Unable to delete active caip network id");
          }
        },
        deleteConnectedConnectorId(s) {
          try {
            let x = (0, X.Vk)(s);
            X.mr.removeItem(x);
          } catch {
            console.info("Unable to delete connected connector id");
          }
        },
        setAppKitRecent(s) {
          try {
            let x = ee.getRecentWallets(),
              W = x.find((x) => x.id === s.id);
            W ||
              (x.unshift(s),
              x.length > 2 && x.pop(),
              X.mr.setItem(X.uJ.RECENT_WALLETS, JSON.stringify(x)));
          } catch {
            console.info("Unable to set AppKit recent");
          }
        },
        getRecentWallets() {
          try {
            let s = X.mr.getItem(X.uJ.RECENT_WALLETS);
            return s ? JSON.parse(s) : [];
          } catch {
            console.info("Unable to get AppKit recent");
          }
          return [];
        },
        setConnectedConnectorId(s, x) {
          try {
            let W = (0, X.Vk)(s);
            X.mr.setItem(W, x);
          } catch {
            console.info("Unable to set Connected Connector Id");
          }
        },
        getActiveNamespace() {
          try {
            let s = X.mr.getItem(X.uJ.ACTIVE_NAMESPACE);
            return s;
          } catch {
            console.info("Unable to get active namespace");
          }
        },
        getConnectedConnectorId(s) {
          if (s)
            try {
              let x = (0, X.Vk)(s);
              return X.mr.getItem(x);
            } catch (x) {
              console.info(
                "Unable to get connected connector id in namespace ",
                s
              );
            }
        },
        setConnectedSocialProvider(s) {
          try {
            X.mr.setItem(X.uJ.CONNECTED_SOCIAL, s);
          } catch {
            console.info("Unable to set connected social provider");
          }
        },
        getConnectedSocialProvider() {
          try {
            return X.mr.getItem(X.uJ.CONNECTED_SOCIAL);
          } catch {
            console.info("Unable to get connected social provider");
          }
        },
        deleteConnectedSocialProvider() {
          try {
            X.mr.removeItem(X.uJ.CONNECTED_SOCIAL);
          } catch {
            console.info("Unable to delete connected social provider");
          }
        },
        getConnectedSocialUsername() {
          try {
            return X.mr.getItem(X.uJ.CONNECTED_SOCIAL_USERNAME);
          } catch {
            console.info("Unable to get connected social username");
          }
        },
        getStoredActiveCaipNetworkId() {
          let s = X.mr.getItem(X.uJ.ACTIVE_CAIP_NETWORK_ID),
            x = s?.split(":")?.[1];
          return x;
        },
        setConnectionStatus(s) {
          try {
            X.mr.setItem(X.uJ.CONNECTION_STATUS, s);
          } catch {
            console.info("Unable to set connection status");
          }
        },
        getConnectionStatus() {
          try {
            return X.mr.getItem(X.uJ.CONNECTION_STATUS);
          } catch {
            return;
          }
        },
        getConnectedNamespaces() {
          try {
            let s = X.mr.getItem(X.uJ.CONNECTED_NAMESPACES);
            if (!s?.length) return [];
            return s.split(",");
          } catch {
            return [];
          }
        },
        setConnectedNamespaces(s) {
          try {
            let x = Array.from(new Set(s));
            X.mr.setItem(X.uJ.CONNECTED_NAMESPACES, x.join(","));
          } catch {
            console.info("Unable to set namespaces in storage");
          }
        },
        addConnectedNamespace(s) {
          try {
            let x = ee.getConnectedNamespaces();
            x.includes(s) || (x.push(s), ee.setConnectedNamespaces(x));
          } catch {
            console.info("Unable to add connected namespace");
          }
        },
        removeConnectedNamespace(s) {
          try {
            let x = ee.getConnectedNamespaces(),
              W = x.indexOf(s);
            W > -1 && (x.splice(W, 1), ee.setConnectedNamespaces(x));
          } catch {
            console.info("Unable to remove connected namespace");
          }
        },
      };
    },
    68857: function (s, x, W) {
      "use strict";
      W.d(x, {
        n: function () {
          return eo;
        },
      });
      var X = W(64244),
        ee = W(21310),
        et = W(17672),
        er = W(9169),
        ei = W(91862);
      let eo = {
        async getTokenList() {
          let s = et.R.state.activeCaipNetwork,
            x = await ee.L.fetchSwapTokens({
              chainId: s?.caipNetworkId,
              projectId: ei.OptionsController.state.projectId,
            }),
            W =
              x?.tokens?.map((s) => ({
                ...s,
                eip2612: !1,
                quantity: { decimals: "0", numeric: "0" },
                price: 0,
                value: 0,
              })) || [];
          return W;
        },
        async fetchGasPrice() {
          let s = ei.OptionsController.state.projectId,
            x = et.R.state.activeCaipNetwork;
          if (!x) return null;
          try {
            if ("solana" === x.chainNamespace) {
              let s = (
                await er.l?.estimateGas({ chainNamespace: "solana" })
              )?.toString();
              return { standard: s, fast: s, instant: s };
            }
            return await ee.L.fetchGasPrice({
              projectId: s,
              chainId: x.caipNetworkId,
            });
          } catch {
            return null;
          }
        },
        async fetchSwapAllowance({
          tokenAddress: s,
          userAddress: x,
          sourceTokenAmount: W,
          sourceTokenDecimals: X,
        }) {
          let et = ei.OptionsController.state.projectId,
            eo = await ee.L.fetchSwapAllowance({
              projectId: et,
              tokenAddress: s,
              userAddress: x,
            });
          if (eo?.allowance && W && X) {
            let s = er.l.parseUnits(W, X) || 0,
              x = BigInt(eo.allowance) >= s;
            return x;
          }
          return !1;
        },
        async getMyTokensWithBalance(s) {
          let x = X.N.state.address,
            W = et.R.state.activeCaipNetwork;
          if (!x || !W) return [];
          let er = await ee.L.getBalance(x, W.caipNetworkId, s),
            ei = er.balances.filter((s) => "0" !== s.quantity.decimals);
          return (
            X.N.setTokenBalance(ei, et.R.state.activeChain),
            this.mapBalancesToSwapTokens(ei)
          );
        },
        mapBalancesToSwapTokens: (s) =>
          s?.map((s) => ({
            ...s,
            address: s?.address
              ? s.address
              : et.R.getActiveNetworkTokenAddress(),
            decimals: parseInt(s.quantity.decimals, 10),
            logoUri: s.iconUrl,
            eip2612: !1,
          })) || [],
      };
    },
    11846: function (s, x, W) {
      "use strict";
      var X = W(48764);
      "undefined" == typeof window ||
        (window.Buffer || (window.Buffer = X.Buffer),
        window.global || (window.global = window),
        window.process || (window.process = {}),
        window.process?.env || (window.process = { env: {} }));
    },
    46083: function (s, x, W) {
      "use strict";
      let X, ee, et;
      W.r(x),
        W.d(x, {
          MathUtil: function () {
            return nq;
          },
          TransactionUtil: function () {
            return nK;
          },
          UiHelperUtil: function () {
            return rh;
          },
          WuiAccountButton: function () {
            return ry;
          },
          WuiAlertBar: function () {
            return iB;
          },
          WuiAllWalletsImage: function () {
            return rE;
          },
          WuiAvatar: function () {
            return rm;
          },
          WuiBalance: function () {
            return i9;
          },
          WuiBanner: function () {
            return nu;
          },
          WuiBannerImg: function () {
            return nh;
          },
          WuiButton: function () {
            return rI;
          },
          WuiCard: function () {
            return ep;
          },
          WuiCardSelect: function () {
            return rj;
          },
          WuiCardSelectLoader: function () {
            return rN;
          },
          WuiCertifiedSwitch: function () {
            return nU;
          },
          WuiCheckBox: function () {
            return nD;
          },
          WuiChip: function () {
            return r$;
          },
          WuiChipButton: function () {
            return na;
          },
          WuiCompatibleNetwork: function () {
            return nl;
          },
          WuiConnectButton: function () {
            return rz;
          },
          WuiCtaButton: function () {
            return rq;
          },
          WuiDetailsGroup: function () {
            return rW;
          },
          WuiDetailsGroupItem: function () {
            return rZ;
          },
          WuiDropdownMenu: function () {
            return rY;
          },
          WuiEmailInput: function () {
            return r1;
          },
          WuiEnsInput: function () {
            return r3;
          },
          WuiFlex: function () {
            return rf;
          },
          WuiGrid: function () {
            return nF;
          },
          WuiIcon: function () {
            return tO;
          },
          WuiIconBox: function () {
            return rb;
          },
          WuiIconButton: function () {
            return nk;
          },
          WuiIconLink: function () {
            return r6;
          },
          WuiImage: function () {
            return tD;
          },
          WuiInputAmount: function () {
            return ny;
          },
          WuiInputElement: function () {
            return r8;
          },
          WuiInputNumeric: function () {
            return r7;
          },
          WuiInputText: function () {
            return rX;
          },
          WuiLink: function () {
            return ir;
          },
          WuiListAccordion: function () {
            return iJ;
          },
          WuiListAccount: function () {
            return nA;
          },
          WuiListButton: function () {
            return nI;
          },
          WuiListContent: function () {
            return i0;
          },
          WuiListDescription: function () {
            return nm;
          },
          WuiListItem: function () {
            return ia;
          },
          WuiListNetwork: function () {
            return i2;
          },
          WuiListSocial: function () {
            return nR;
          },
          WuiListToken: function () {
            return nf;
          },
          WuiListWallet: function () {
            return iw;
          },
          WuiListWalletTransaction: function () {
            return i5;
          },
          WuiLoadingHexagon: function () {
            return tL;
          },
          WuiLoadingSpinner: function () {
            return tU;
          },
          WuiLoadingThumbnail: function () {
            return tF;
          },
          WuiLogo: function () {
            return iv;
          },
          WuiLogoSelect: function () {
            return i_;
          },
          WuiNetworkButton: function () {
            return ix;
          },
          WuiNetworkImage: function () {
            return rB;
          },
          WuiNoticeCard: function () {
            return iY;
          },
          WuiOtp: function () {
            return iA;
          },
          WuiPreviewItem: function () {
            return nC;
          },
          WuiProfileButton: function () {
            return nt;
          },
          WuiProfileButtonV2: function () {
            return nn;
          },
          WuiPromo: function () {
            return i4;
          },
          WuiQrCode: function () {
            return iI;
          },
          WuiSearchBar: function () {
            return iR;
          },
          WuiSelect: function () {
            return nO;
          },
          WuiSeparator: function () {
            return nH;
          },
          WuiShimmer: function () {
            return tH;
          },
          WuiSnackbar: function () {
            return iO;
          },
          WuiSwitch: function () {
            return nL;
          },
          WuiTabs: function () {
            return ij;
          },
          WuiTag: function () {
            return ig;
          },
          WuiText: function () {
            return tW;
          },
          WuiTokenButton: function () {
            return i$;
          },
          WuiTokenListItem: function () {
            return iq;
          },
          WuiTooltip: function () {
            return iz;
          },
          WuiTransactionListItem: function () {
            return iu;
          },
          WuiTransactionListItemLoader: function () {
            return ih;
          },
          WuiTransactionVisual: function () {
            return il;
          },
          WuiVisual: function () {
            return ru;
          },
          WuiVisualThumbnail: function () {
            return iW;
          },
          WuiWalletButton: function () {
            return iZ;
          },
          WuiWalletImage: function () {
            return rC;
          },
          customElement: function () {
            return customElement;
          },
          initializeTheming: function () {
            return initializeTheming;
          },
          setColorTheme: function () {
            return setColorTheme;
          },
          setThemeVariables: function () {
            return setThemeVariables;
          },
          swapInputMaskBottomSvg: function () {
            return ea;
          },
          swapInputMaskTopSvg: function () {
            return es;
          },
        });
      var er,
        ei,
        eo = W(52284);
      let ea = eo.YP`<svg class="input_mask" width="328" height="100" viewBox="0 0 328 100" fill="none">
  <mask id="path-1-inside-1_18299_4189">
    <path
      class="input_mask__border"
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M138.008 0H40C21.1438 0 11.7157 0 5.85786 5.85786C0 11.7157 0 21.1438 0 40V60C0 78.8562 0 88.2843 5.85786 94.1421C11.7157 100 21.1438 100 40 100H288C306.856 100 316.284 100 322.142 94.1421C328 88.2843 328 78.8562 328 60V40C328 21.1438 328 11.7157 322.142 5.85786C316.284 0 306.856 0 288 0H189.992C189.958 4.89122 189.786 7.76279 188.914 10.1564C187.095 15.1562 183.156 19.0947 178.156 20.9145C175.174 22 171.449 22 164 22C156.551 22 152.826 22 149.844 20.9145C144.844 19.0947 140.905 15.1562 139.086 10.1564C138.214 7.76279 138.042 4.89122 138.008 0Z"
    />
  </mask>
  <path
    class="input_mask__background"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M138.008 0H40C21.1438 0 11.7157 0 5.85786 5.85786C0 11.7157 0 21.1438 0 40V60C0 78.8562 0 88.2843 5.85786 94.1421C11.7157 100 21.1438 100 40 100H288C306.856 100 316.284 100 322.142 94.1421C328 88.2843 328 78.8562 328 60V40C328 21.1438 328 11.7157 322.142 5.85786C316.284 0 306.856 0 288 0H189.992C189.958 4.89122 189.786 7.76279 188.914 10.1564C187.095 15.1562 183.156 19.0947 178.156 20.9145C175.174 22 171.449 22 164 22C156.551 22 152.826 22 149.844 20.9145C144.844 19.0947 140.905 15.1562 139.086 10.1564C138.214 7.76279 138.042 4.89122 138.008 0Z"
  />
  <path
    class="input_mask__border"
    d="M138.008 0L139.008 -0.00694413L139.001 -1H138.008V0ZM322.142 94.1421L322.849 94.8492H322.849L322.142 94.1421ZM322.142 5.85786L322.849 5.15076L322.849 5.15076L322.142 5.85786ZM189.992 0V-1H188.999L188.992 -0.00694413L189.992 0ZM188.914 10.1564L189.854 10.4984V10.4984L188.914 10.1564ZM178.156 20.9145L177.814 19.9748V19.9748L178.156 20.9145ZM149.844 20.9145L150.186 19.9748V19.9748L149.844 20.9145ZM139.086 10.1564L138.146 10.4984V10.4984L139.086 10.1564ZM40 1H138.008V-1H40V1ZM6.56497 6.56497C9.27713 3.85281 12.8524 2.44064 18.1878 1.72332C23.552 1.00212 30.5436 1 40 1V-1C30.6002 -1 23.4497 -1.00212 17.9213 -0.25885C12.3641 0.488292 8.29646 2.00506 5.15076 5.15076L6.56497 6.56497ZM1 40C1 30.5436 1.00212 23.552 1.72332 18.1878C2.44064 12.8524 3.85281 9.27713 6.56497 6.56497L5.15076 5.15076C2.00506 8.29646 0.488292 12.3641 -0.25885 17.9213C-1.00212 23.4497 -1 30.6002 -1 40H1ZM1 60V40H-1V60H1ZM6.56497 93.435C3.85281 90.7229 2.44064 87.1476 1.72332 81.8122C1.00212 76.448 1 69.4564 1 60H-1C-1 69.3998 -1.00212 76.5503 -0.25885 82.0787C0.488292 87.6358 2.00506 91.7035 5.15076 94.8492L6.56497 93.435ZM40 99C30.5436 99 23.552 98.9979 18.1878 98.2767C12.8524 97.5594 9.27713 96.1472 6.56497 93.435L5.15076 94.8492C8.29646 97.9949 12.3641 99.5117 17.9213 100.259C23.4497 101.002 30.6002 101 40 101V99ZM288 99H40V101H288V99ZM321.435 93.435C318.723 96.1472 315.148 97.5594 309.812 98.2767C304.448 98.9979 297.456 99 288 99V101C297.4 101 304.55 101.002 310.079 100.259C315.636 99.5117 319.704 97.9949 322.849 94.8492L321.435 93.435ZM327 60C327 69.4564 326.998 76.448 326.277 81.8122C325.559 87.1476 324.147 90.7229 321.435 93.435L322.849 94.8492C325.995 91.7035 327.512 87.6358 328.259 82.0787C329.002 76.5503 329 69.3998 329 60H327ZM327 40V60H329V40H327ZM321.435 6.56497C324.147 9.27713 325.559 12.8524 326.277 18.1878C326.998 23.552 327 30.5436 327 40H329C329 30.6002 329.002 23.4497 328.259 17.9213C327.512 12.3642 325.995 8.29646 322.849 5.15076L321.435 6.56497ZM288 1C297.456 1 304.448 1.00212 309.812 1.72332C315.148 2.44064 318.723 3.85281 321.435 6.56497L322.849 5.15076C319.704 2.00506 315.636 0.488292 310.079 -0.25885C304.55 -1.00212 297.4 -1 288 -1V1ZM189.992 1H288V-1H189.992V1ZM188.992 -0.00694413C188.958 4.90792 188.778 7.60788 187.975 9.81434L189.854 10.4984C190.793 7.9177 190.958 4.87452 190.992 0.00694413L188.992 -0.00694413ZM187.975 9.81434C186.256 14.5364 182.536 18.2561 177.814 19.9748L178.498 21.8542C183.776 19.9333 187.933 15.7759 189.854 10.4984L187.975 9.81434ZM177.814 19.9748C175.039 20.9848 171.536 21 164 21V23C171.362 23 175.308 23.0152 178.498 21.8542L177.814 19.9748ZM164 21C156.464 21 152.961 20.9848 150.186 19.9748L149.502 21.8542C152.692 23.0152 156.638 23 164 23V21ZM150.186 19.9748C145.464 18.2561 141.744 14.5364 140.025 9.81434L138.146 10.4984C140.067 15.7759 144.224 19.9333 149.502 21.8542L150.186 19.9748ZM140.025 9.81434C139.222 7.60788 139.042 4.90792 139.008 -0.00694413L137.008 0.00694413C137.042 4.87452 137.207 7.9177 138.146 10.4984L140.025 9.81434Z"
    mask="url(#path-1-inside-1_18299_4189)"
  />
</svg>`,
        es = eo.YP`<svg class="input_mask" width="328" height="100" viewBox="0 0 328 100" fill="none">
  <mask id="path-1-inside-1_18299_4168">
    <path
      class="input_mask__border"
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M5.85786 5.85786C0 11.7157 0 21.1438 0 40V60C0 78.8562 0 88.2843 5.85786 94.1421C11.7157 100 21.1438 100 40 100H138.008C138.042 95.1088 138.214 92.2372 139.086 89.8436C140.905 84.8438 144.844 80.9053 149.844 79.0855C152.826 78 156.551 78 164 78C171.449 78 175.174 78 178.156 79.0855C183.156 80.9053 187.095 84.8438 188.914 89.8436C189.786 92.2372 189.958 95.1088 189.992 100H288C306.856 100 316.284 100 322.142 94.1421C328 88.2843 328 78.8562 328 60V40C328 21.1438 328 11.7157 322.142 5.85786C316.284 0 306.856 0 288 0H40C21.1438 0 11.7157 0 5.85786 5.85786Z"
    />
  </mask>
  <path
    class="input_mask__background"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M5.85786 5.85786C0 11.7157 0 21.1438 0 40V60C0 78.8562 0 88.2843 5.85786 94.1421C11.7157 100 21.1438 100 40 100H138.008C138.042 95.1088 138.214 92.2372 139.086 89.8436C140.905 84.8438 144.844 80.9053 149.844 79.0855C152.826 78 156.551 78 164 78C171.449 78 175.174 78 178.156 79.0855C183.156 80.9053 187.095 84.8438 188.914 89.8436C189.786 92.2372 189.958 95.1088 189.992 100H288C306.856 100 316.284 100 322.142 94.1421C328 88.2843 328 78.8562 328 60V40C328 21.1438 328 11.7157 322.142 5.85786C316.284 0 306.856 0 288 0H40C21.1438 0 11.7157 0 5.85786 5.85786Z"
  />
  <path
    class="input_mask__border"
    d="M138.008 100V101H139.001L139.008 100.007L138.008 100ZM139.086 89.8436L138.146 89.5016L139.086 89.8436ZM149.844 79.0855L150.186 80.0252L149.844 79.0855ZM178.156 79.0855L177.814 80.0252L178.156 79.0855ZM188.914 89.8436L189.854 89.5016L188.914 89.8436ZM189.992 100L188.992 100.007L188.999 101H189.992V100ZM322.142 94.1421L322.849 94.8492H322.849L322.142 94.1421ZM322.142 5.85786L322.849 5.15076L322.849 5.15076L322.142 5.85786ZM1 40C1 30.5436 1.00212 23.552 1.72332 18.1878C2.44064 12.8524 3.85281 9.27713 6.56497 6.56497L5.15076 5.15076C2.00506 8.29646 0.488292 12.3641 -0.25885 17.9213C-1.00212 23.4497 -1 30.6002 -1 40H1ZM1 60V40H-1V60H1ZM6.56497 93.435C3.85281 90.7229 2.44064 87.1476 1.72332 81.8122C1.00212 76.448 1 69.4564 1 60H-1C-1 69.3998 -1.00212 76.5503 -0.25885 82.0787C0.488292 87.6358 2.00506 91.7035 5.15076 94.8492L6.56497 93.435ZM40 99C30.5436 99 23.552 98.9979 18.1878 98.2767C12.8524 97.5594 9.27713 96.1472 6.56497 93.435L5.15076 94.8492C8.29646 97.9949 12.3641 99.5117 17.9213 100.259C23.4497 101.002 30.6002 101 40 101V99ZM138.008 99H40V101H138.008V99ZM139.008 100.007C139.042 95.0921 139.222 92.3921 140.025 90.1857L138.146 89.5016C137.207 92.0823 137.042 95.1255 137.008 99.9931L139.008 100.007ZM140.025 90.1857C141.744 85.4636 145.464 81.7439 150.186 80.0252L149.502 78.1458C144.224 80.0667 140.067 84.2241 138.146 89.5016L140.025 90.1857ZM150.186 80.0252C152.961 79.0152 156.464 79 164 79V77C156.638 77 152.692 76.9848 149.502 78.1458L150.186 80.0252ZM164 79C171.536 79 175.039 79.0152 177.814 80.0252L178.498 78.1458C175.308 76.9848 171.362 77 164 77V79ZM177.814 80.0252C182.536 81.7439 186.256 85.4636 187.975 90.1857L189.854 89.5016C187.933 84.2241 183.776 80.0667 178.498 78.1458L177.814 80.0252ZM187.975 90.1857C188.778 92.3921 188.958 95.0921 188.992 100.007L190.992 99.9931C190.958 95.1255 190.793 92.0823 189.854 89.5016L187.975 90.1857ZM288 99H189.992V101H288V99ZM321.435 93.435C318.723 96.1472 315.148 97.5594 309.812 98.2767C304.448 98.9979 297.456 99 288 99V101C297.4 101 304.55 101.002 310.079 100.259C315.636 99.5117 319.704 97.9949 322.849 94.8492L321.435 93.435ZM327 60C327 69.4564 326.998 76.448 326.277 81.8122C325.559 87.1476 324.147 90.7229 321.435 93.435L322.849 94.8492C325.995 91.7035 327.512 87.6358 328.259 82.0787C329.002 76.5503 329 69.3998 329 60H327ZM327 40V60H329V40H327ZM321.435 6.56497C324.147 9.27713 325.559 12.8524 326.277 18.1878C326.998 23.552 327 30.5436 327 40H329C329 30.6002 329.002 23.4497 328.259 17.9213C327.512 12.3642 325.995 8.29646 322.849 5.15076L321.435 6.56497ZM288 1C297.456 1 304.448 1.00212 309.812 1.72332C315.148 2.44064 318.723 3.85281 321.435 6.56497L322.849 5.15076C319.704 2.00506 315.636 0.488292 310.079 -0.25885C304.55 -1.00212 297.4 -1 288 -1V1ZM40 1H288V-1H40V1ZM6.56497 6.56497C9.27713 3.85281 12.8524 2.44064 18.1878 1.72332C23.552 1.00212 30.5436 1 40 1V-1C30.6002 -1 23.4497 -1.00212 17.9213 -0.25885C12.3641 0.488292 8.29646 2.00506 5.15076 5.15076L6.56497 6.56497Z"
    mask="url(#path-1-inside-1_18299_4168)"
  />
</svg>`;
      var el = W(74490);
      function initializeTheming(s, x) {
        (X = document.createElement("style")),
          (ee = document.createElement("style")),
          (et = document.createElement("style")),
          (X.textContent = createRootStyles(s).core.cssText),
          (ee.textContent = createRootStyles(s).dark.cssText),
          (et.textContent = createRootStyles(s).light.cssText),
          document.head.appendChild(X),
          document.head.appendChild(ee),
          document.head.appendChild(et),
          setColorTheme(x);
      }
      function setColorTheme(s) {
        ee &&
          et &&
          ("light" === s
            ? (ee.removeAttribute("media"), (et.media = "enabled"))
            : (et.removeAttribute("media"), (ee.media = "enabled")));
      }
      function setThemeVariables(s) {
        X &&
          ee &&
          et &&
          ((X.textContent = createRootStyles(s).core.cssText),
          (ee.textContent = createRootStyles(s).dark.cssText),
          (et.textContent = createRootStyles(s).light.cssText));
      }
      function createRootStyles(s) {
        return {
          core: eo.iv`
      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
      @keyframes w3m-shake {
        0% {
          transform: scale(1) rotate(0deg);
        }
        20% {
          transform: scale(1) rotate(-1deg);
        }
        40% {
          transform: scale(1) rotate(1.5deg);
        }
        60% {
          transform: scale(1) rotate(-1.5deg);
        }
        80% {
          transform: scale(1) rotate(1deg);
        }
        100% {
          transform: scale(1) rotate(0deg);
        }
      }
      @keyframes w3m-iframe-fade-out {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
        }
      }
      @keyframes w3m-iframe-zoom-in {
        0% {
          transform: translateY(50px);
          opacity: 0;
        }
        100% {
          transform: translateY(0px);
          opacity: 1;
        }
      }
      @keyframes w3m-iframe-zoom-in-mobile {
        0% {
          transform: scale(0.95);
          opacity: 0;
        }
        100% {
          transform: scale(1);
          opacity: 1;
        }
      }
      :root {
        --w3m-modal-width: 360px;
        --w3m-color-mix-strength: ${(0, eo.$m)(
          s?.["--w3m-color-mix-strength"]
            ? `${s["--w3m-color-mix-strength"]}%`
            : "0%"
        )};
        --w3m-font-family: ${(0, eo.$m)(
          s?.["--w3m-font-family"] ||
            "Inter, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;"
        )};
        --w3m-font-size-master: ${(0, eo.$m)(
          s?.["--w3m-font-size-master"] || "10px"
        )};
        --w3m-border-radius-master: ${(0, eo.$m)(
          s?.["--w3m-border-radius-master"] || "4px"
        )};
        --w3m-z-index: ${(0, eo.$m)(s?.["--w3m-z-index"] || 999)};

        --wui-font-family: var(--w3m-font-family);

        --wui-font-size-mini: calc(var(--w3m-font-size-master) * 0.8);
        --wui-font-size-micro: var(--w3m-font-size-master);
        --wui-font-size-tiny: calc(var(--w3m-font-size-master) * 1.2);
        --wui-font-size-small: calc(var(--w3m-font-size-master) * 1.4);
        --wui-font-size-paragraph: calc(var(--w3m-font-size-master) * 1.6);
        --wui-font-size-medium: calc(var(--w3m-font-size-master) * 1.8);
        --wui-font-size-large: calc(var(--w3m-font-size-master) * 2);
        --wui-font-size-title-6: calc(var(--w3m-font-size-master) * 2.2);
        --wui-font-size-medium-title: calc(var(--w3m-font-size-master) * 2.4);
        --wui-font-size-2xl: calc(var(--w3m-font-size-master) * 4);

        --wui-border-radius-5xs: var(--w3m-border-radius-master);
        --wui-border-radius-4xs: calc(var(--w3m-border-radius-master) * 1.5);
        --wui-border-radius-3xs: calc(var(--w3m-border-radius-master) * 2);
        --wui-border-radius-xxs: calc(var(--w3m-border-radius-master) * 3);
        --wui-border-radius-xs: calc(var(--w3m-border-radius-master) * 4);
        --wui-border-radius-s: calc(var(--w3m-border-radius-master) * 5);
        --wui-border-radius-m: calc(var(--w3m-border-radius-master) * 7);
        --wui-border-radius-l: calc(var(--w3m-border-radius-master) * 9);
        --wui-border-radius-3xl: calc(var(--w3m-border-radius-master) * 20);

        --wui-font-weight-light: 400;
        --wui-font-weight-regular: 500;
        --wui-font-weight-medium: 600;
        --wui-font-weight-bold: 700;

        --wui-letter-spacing-2xl: -1.6px;
        --wui-letter-spacing-medium-title: -0.96px;
        --wui-letter-spacing-title-6: -0.88px;
        --wui-letter-spacing-large: -0.8px;
        --wui-letter-spacing-medium: -0.72px;
        --wui-letter-spacing-paragraph: -0.64px;
        --wui-letter-spacing-small: -0.56px;
        --wui-letter-spacing-tiny: -0.48px;
        --wui-letter-spacing-micro: -0.2px;
        --wui-letter-spacing-mini: -0.16px;

        --wui-spacing-0: 0px;
        --wui-spacing-4xs: 2px;
        --wui-spacing-3xs: 4px;
        --wui-spacing-xxs: 6px;
        --wui-spacing-2xs: 7px;
        --wui-spacing-xs: 8px;
        --wui-spacing-1xs: 10px;
        --wui-spacing-s: 12px;
        --wui-spacing-m: 14px;
        --wui-spacing-l: 16px;
        --wui-spacing-2l: 18px;
        --wui-spacing-xl: 20px;
        --wui-spacing-xxl: 24px;
        --wui-spacing-2xl: 32px;
        --wui-spacing-3xl: 40px;
        --wui-spacing-4xl: 90px;
        --wui-spacing-5xl: 95px;

        --wui-icon-box-size-xxs: 14px;
        --wui-icon-box-size-xs: 20px;
        --wui-icon-box-size-sm: 24px;
        --wui-icon-box-size-md: 32px;
        --wui-icon-box-size-mdl: 36px;
        --wui-icon-box-size-lg: 40px;
        --wui-icon-box-size-2lg: 48px;
        --wui-icon-box-size-xl: 64px;

        --wui-icon-size-inherit: inherit;
        --wui-icon-size-xxs: 10px;
        --wui-icon-size-xs: 12px;
        --wui-icon-size-sm: 14px;
        --wui-icon-size-md: 16px;
        --wui-icon-size-mdl: 18px;
        --wui-icon-size-lg: 20px;
        --wui-icon-size-xl: 24px;
        --wui-icon-size-xxl: 28px;

        --wui-wallet-image-size-inherit: inherit;
        --wui-wallet-image-size-sm: 40px;
        --wui-wallet-image-size-md: 56px;
        --wui-wallet-image-size-lg: 80px;

        --wui-visual-size-size-inherit: inherit;
        --wui-visual-size-sm: 40px;
        --wui-visual-size-md: 55px;
        --wui-visual-size-lg: 80px;

        --wui-box-size-md: 100px;
        --wui-box-size-lg: 120px;

        --wui-ease-out-power-2: cubic-bezier(0, 0, 0.22, 1);
        --wui-ease-out-power-1: cubic-bezier(0, 0, 0.55, 1);

        --wui-ease-in-power-3: cubic-bezier(0.66, 0, 1, 1);
        --wui-ease-in-power-2: cubic-bezier(0.45, 0, 1, 1);
        --wui-ease-in-power-1: cubic-bezier(0.3, 0, 1, 1);

        --wui-ease-inout-power-1: cubic-bezier(0.45, 0, 0.55, 1);

        --wui-duration-lg: 200ms;
        --wui-duration-md: 125ms;
        --wui-duration-sm: 75ms;

        --wui-path-network-sm: path(
          'M15.4 2.1a5.21 5.21 0 0 1 5.2 0l11.61 6.7a5.21 5.21 0 0 1 2.61 4.52v13.4c0 1.87-1 3.59-2.6 4.52l-11.61 6.7c-1.62.93-3.6.93-5.22 0l-11.6-6.7a5.21 5.21 0 0 1-2.61-4.51v-13.4c0-1.87 1-3.6 2.6-4.52L15.4 2.1Z'
        );

        --wui-path-network-md: path(
          'M43.4605 10.7248L28.0485 1.61089C25.5438 0.129705 22.4562 0.129705 19.9515 1.61088L4.53951 10.7248C2.03626 12.2051 0.5 14.9365 0.5 17.886V36.1139C0.5 39.0635 2.03626 41.7949 4.53951 43.2752L19.9515 52.3891C22.4562 53.8703 25.5438 53.8703 28.0485 52.3891L43.4605 43.2752C45.9637 41.7949 47.5 39.0635 47.5 36.114V17.8861C47.5 14.9365 45.9637 12.2051 43.4605 10.7248Z'
        );

        --wui-path-network-lg: path(
          'M78.3244 18.926L50.1808 2.45078C45.7376 -0.150261 40.2624 -0.150262 35.8192 2.45078L7.6756 18.926C3.23322 21.5266 0.5 26.3301 0.5 31.5248V64.4752C0.5 69.6699 3.23322 74.4734 7.6756 77.074L35.8192 93.5492C40.2624 96.1503 45.7376 96.1503 50.1808 93.5492L78.3244 77.074C82.7668 74.4734 85.5 69.6699 85.5 64.4752V31.5248C85.5 26.3301 82.7668 21.5266 78.3244 18.926Z'
        );

        --wui-width-network-sm: 36px;
        --wui-width-network-md: 48px;
        --wui-width-network-lg: 86px;

        --wui-height-network-sm: 40px;
        --wui-height-network-md: 54px;
        --wui-height-network-lg: 96px;

        --wui-icon-size-network-xs: 12px;
        --wui-icon-size-network-sm: 16px;
        --wui-icon-size-network-md: 24px;
        --wui-icon-size-network-lg: 42px;

        --wui-color-inherit: inherit;

        --wui-color-inverse-100: #fff;
        --wui-color-inverse-000: #000;

        --wui-cover: rgba(20, 20, 20, 0.8);

        --wui-color-modal-bg: var(--wui-color-modal-bg-base);

        --wui-color-accent-100: var(--wui-color-accent-base-100);
        --wui-color-accent-090: var(--wui-color-accent-base-090);
        --wui-color-accent-080: var(--wui-color-accent-base-080);

        --wui-color-success-100: var(--wui-color-success-base-100);
        --wui-color-success-125: var(--wui-color-success-base-125);

        --wui-color-warning-100: var(--wui-color-warning-base-100);

        --wui-color-error-100: var(--wui-color-error-base-100);
        --wui-color-error-125: var(--wui-color-error-base-125);

        --wui-color-blue-100: var(--wui-color-blue-base-100);
        --wui-color-blue-90: var(--wui-color-blue-base-90);

        --wui-icon-box-bg-error-100: var(--wui-icon-box-bg-error-base-100);
        --wui-icon-box-bg-blue-100: var(--wui-icon-box-bg-blue-base-100);
        --wui-icon-box-bg-success-100: var(--wui-icon-box-bg-success-base-100);
        --wui-icon-box-bg-inverse-100: var(--wui-icon-box-bg-inverse-base-100);

        --wui-all-wallets-bg-100: var(--wui-all-wallets-bg-100);

        --wui-avatar-border: var(--wui-avatar-border-base);

        --wui-thumbnail-border: var(--wui-thumbnail-border-base);

        --wui-wallet-button-bg: var(--wui-wallet-button-bg-base);

        --wui-box-shadow-blue: var(--wui-color-accent-glass-020);
      }

      @supports (background: color-mix(in srgb, white 50%, black)) {
        :root {
          --wui-color-modal-bg: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-modal-bg-base)
          );

          --wui-box-shadow-blue: color-mix(in srgb, var(--wui-color-accent-100) 20%, transparent);

          --wui-color-accent-100: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 100%,
            transparent
          );
          --wui-color-accent-090: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 90%,
            transparent
          );
          --wui-color-accent-080: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 80%,
            transparent
          );
          --wui-color-accent-glass-090: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 90%,
            transparent
          );
          --wui-color-accent-glass-080: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 80%,
            transparent
          );
          --wui-color-accent-glass-020: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 20%,
            transparent
          );
          --wui-color-accent-glass-015: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 15%,
            transparent
          );
          --wui-color-accent-glass-010: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 10%,
            transparent
          );
          --wui-color-accent-glass-005: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 5%,
            transparent
          );
          --wui-color-accent-002: color-mix(
            in srgb,
            var(--wui-color-accent-base-100) 2%,
            transparent
          );

          --wui-color-fg-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-100)
          );
          --wui-color-fg-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-125)
          );
          --wui-color-fg-150: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-150)
          );
          --wui-color-fg-175: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-175)
          );
          --wui-color-fg-200: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-200)
          );
          --wui-color-fg-225: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-225)
          );
          --wui-color-fg-250: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-250)
          );
          --wui-color-fg-275: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-275)
          );
          --wui-color-fg-300: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-300)
          );
          --wui-color-fg-325: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-325)
          );
          --wui-color-fg-350: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-fg-350)
          );

          --wui-color-bg-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-100)
          );
          --wui-color-bg-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-125)
          );
          --wui-color-bg-150: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-150)
          );
          --wui-color-bg-175: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-175)
          );
          --wui-color-bg-200: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-200)
          );
          --wui-color-bg-225: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-225)
          );
          --wui-color-bg-250: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-250)
          );
          --wui-color-bg-275: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-275)
          );
          --wui-color-bg-300: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-300)
          );
          --wui-color-bg-325: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-325)
          );
          --wui-color-bg-350: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-bg-350)
          );

          --wui-color-success-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-success-base-100)
          );
          --wui-color-success-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-success-base-125)
          );

          --wui-color-warning-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-warning-base-100)
          );

          --wui-color-error-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-error-base-100)
          );
          --wui-color-blue-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-blue-base-100)
          );
          --wui-color-blue-90: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-blue-base-90)
          );
          --wui-color-error-125: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-color-error-base-125)
          );

          --wui-icon-box-bg-error-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-error-base-100)
          );
          --wui-icon-box-bg-accent-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-blue-base-100)
          );
          --wui-icon-box-bg-success-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-success-base-100)
          );
          --wui-icon-box-bg-inverse-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-icon-box-bg-inverse-base-100)
          );

          --wui-all-wallets-bg-100: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-all-wallets-bg-100)
          );

          --wui-avatar-border: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-avatar-border-base)
          );

          --wui-thumbnail-border: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-thumbnail-border-base)
          );

          --wui-wallet-button-bg: color-mix(
            in srgb,
            var(--w3m-color-mix) var(--w3m-color-mix-strength),
            var(--wui-wallet-button-bg-base)
          );
        }
      }
    `,
          light: eo.iv`
      :root {
        --w3m-color-mix: ${(0, eo.$m)(s?.["--w3m-color-mix"] || "#fff")};
        --w3m-accent: ${(0, eo.$m)((0, el.tU)(s, "dark")["--w3m-accent"])};
        --w3m-default: #fff;

        --wui-color-modal-bg-base: ${(0, eo.$m)(
          (0, el.tU)(s, "dark")["--w3m-background"]
        )};
        --wui-color-accent-base-100: var(--w3m-accent);

        --wui-color-blueberry-100: hsla(230, 100%, 67%, 1);
        --wui-color-blueberry-090: hsla(231, 76%, 61%, 1);
        --wui-color-blueberry-080: hsla(230, 59%, 55%, 1);
        --wui-color-blueberry-050: hsla(231, 100%, 70%, 0.1);

        --wui-color-fg-100: #e4e7e7;
        --wui-color-fg-125: #d0d5d5;
        --wui-color-fg-150: #a8b1b1;
        --wui-color-fg-175: #a8b0b0;
        --wui-color-fg-200: #949e9e;
        --wui-color-fg-225: #868f8f;
        --wui-color-fg-250: #788080;
        --wui-color-fg-275: #788181;
        --wui-color-fg-300: #6e7777;
        --wui-color-fg-325: #9a9a9a;
        --wui-color-fg-350: #363636;

        --wui-color-bg-100: #141414;
        --wui-color-bg-125: #191a1a;
        --wui-color-bg-150: #1e1f1f;
        --wui-color-bg-175: #222525;
        --wui-color-bg-200: #272a2a;
        --wui-color-bg-225: #2c3030;
        --wui-color-bg-250: #313535;
        --wui-color-bg-275: #363b3b;
        --wui-color-bg-300: #3b4040;
        --wui-color-bg-325: #252525;
        --wui-color-bg-350: #ffffff;

        --wui-color-success-base-100: #26d962;
        --wui-color-success-base-125: #30a46b;

        --wui-color-warning-base-100: #f3a13f;

        --wui-color-error-base-100: #f25a67;
        --wui-color-error-base-125: #df4a34;

        --wui-color-blue-base-100: rgba(102, 125, 255, 1);
        --wui-color-blue-base-90: rgba(102, 125, 255, 0.9);

        --wui-color-success-glass-001: rgba(38, 217, 98, 0.01);
        --wui-color-success-glass-002: rgba(38, 217, 98, 0.02);
        --wui-color-success-glass-005: rgba(38, 217, 98, 0.05);
        --wui-color-success-glass-010: rgba(38, 217, 98, 0.1);
        --wui-color-success-glass-015: rgba(38, 217, 98, 0.15);
        --wui-color-success-glass-020: rgba(38, 217, 98, 0.2);
        --wui-color-success-glass-025: rgba(38, 217, 98, 0.25);
        --wui-color-success-glass-030: rgba(38, 217, 98, 0.3);
        --wui-color-success-glass-060: rgba(38, 217, 98, 0.6);
        --wui-color-success-glass-080: rgba(38, 217, 98, 0.8);

        --wui-color-success-glass-reown-020: rgba(48, 164, 107, 0.2);

        --wui-color-warning-glass-reown-020: rgba(243, 161, 63, 0.2);

        --wui-color-error-glass-001: rgba(242, 90, 103, 0.01);
        --wui-color-error-glass-002: rgba(242, 90, 103, 0.02);
        --wui-color-error-glass-005: rgba(242, 90, 103, 0.05);
        --wui-color-error-glass-010: rgba(242, 90, 103, 0.1);
        --wui-color-error-glass-015: rgba(242, 90, 103, 0.15);
        --wui-color-error-glass-020: rgba(242, 90, 103, 0.2);
        --wui-color-error-glass-025: rgba(242, 90, 103, 0.25);
        --wui-color-error-glass-030: rgba(242, 90, 103, 0.3);
        --wui-color-error-glass-060: rgba(242, 90, 103, 0.6);
        --wui-color-error-glass-080: rgba(242, 90, 103, 0.8);

        --wui-color-error-glass-reown-020: rgba(223, 74, 52, 0.2);

        --wui-color-gray-glass-001: rgba(255, 255, 255, 0.01);
        --wui-color-gray-glass-002: rgba(255, 255, 255, 0.02);
        --wui-color-gray-glass-005: rgba(255, 255, 255, 0.05);
        --wui-color-gray-glass-010: rgba(255, 255, 255, 0.1);
        --wui-color-gray-glass-015: rgba(255, 255, 255, 0.15);
        --wui-color-gray-glass-020: rgba(255, 255, 255, 0.2);
        --wui-color-gray-glass-025: rgba(255, 255, 255, 0.25);
        --wui-color-gray-glass-030: rgba(255, 255, 255, 0.3);
        --wui-color-gray-glass-060: rgba(255, 255, 255, 0.6);
        --wui-color-gray-glass-080: rgba(255, 255, 255, 0.8);
        --wui-color-gray-glass-090: rgba(255, 255, 255, 0.9);

        --wui-color-dark-glass-100: rgba(42, 42, 42, 1);

        --wui-icon-box-bg-error-base-100: #3c2426;
        --wui-icon-box-bg-blue-base-100: #20303f;
        --wui-icon-box-bg-success-base-100: #1f3a28;
        --wui-icon-box-bg-inverse-base-100: #243240;

        --wui-all-wallets-bg-100: #222b35;

        --wui-avatar-border-base: #252525;

        --wui-thumbnail-border-base: #252525;

        --wui-wallet-button-bg-base: var(--wui-color-bg-125);

        --w3m-card-embedded-shadow-color: rgb(17 17 18 / 25%);
      }
    `,
          dark: eo.iv`
      :root {
        --w3m-color-mix: ${(0, eo.$m)(s?.["--w3m-color-mix"] || "#000")};
        --w3m-accent: ${(0, eo.$m)((0, el.tU)(s, "light")["--w3m-accent"])};
        --w3m-default: #000;

        --wui-color-modal-bg-base: ${(0, eo.$m)(
          (0, el.tU)(s, "light")["--w3m-background"]
        )};
        --wui-color-accent-base-100: var(--w3m-accent);

        --wui-color-blueberry-100: hsla(231, 100%, 70%, 1);
        --wui-color-blueberry-090: hsla(231, 97%, 72%, 1);
        --wui-color-blueberry-080: hsla(231, 92%, 74%, 1);

        --wui-color-fg-100: #141414;
        --wui-color-fg-125: #2d3131;
        --wui-color-fg-150: #474d4d;
        --wui-color-fg-175: #636d6d;
        --wui-color-fg-200: #798686;
        --wui-color-fg-225: #828f8f;
        --wui-color-fg-250: #8b9797;
        --wui-color-fg-275: #95a0a0;
        --wui-color-fg-300: #9ea9a9;
        --wui-color-fg-325: #9a9a9a;
        --wui-color-fg-350: #d0d0d0;

        --wui-color-bg-100: #ffffff;
        --wui-color-bg-125: #f5fafa;
        --wui-color-bg-150: #f3f8f8;
        --wui-color-bg-175: #eef4f4;
        --wui-color-bg-200: #eaf1f1;
        --wui-color-bg-225: #e5eded;
        --wui-color-bg-250: #e1e9e9;
        --wui-color-bg-275: #dce7e7;
        --wui-color-bg-300: #d8e3e3;
        --wui-color-bg-325: #f3f3f3;
        --wui-color-bg-350: #202020;

        --wui-color-success-base-100: #26b562;
        --wui-color-success-base-125: #30a46b;

        --wui-color-warning-base-100: #f3a13f;

        --wui-color-error-base-100: #f05142;
        --wui-color-error-base-125: #df4a34;

        --wui-color-blue-base-100: rgba(102, 125, 255, 1);
        --wui-color-blue-base-90: rgba(102, 125, 255, 0.9);

        --wui-color-success-glass-001: rgba(38, 181, 98, 0.01);
        --wui-color-success-glass-002: rgba(38, 181, 98, 0.02);
        --wui-color-success-glass-005: rgba(38, 181, 98, 0.05);
        --wui-color-success-glass-010: rgba(38, 181, 98, 0.1);
        --wui-color-success-glass-015: rgba(38, 181, 98, 0.15);
        --wui-color-success-glass-020: rgba(38, 181, 98, 0.2);
        --wui-color-success-glass-025: rgba(38, 181, 98, 0.25);
        --wui-color-success-glass-030: rgba(38, 181, 98, 0.3);
        --wui-color-success-glass-060: rgba(38, 181, 98, 0.6);
        --wui-color-success-glass-080: rgba(38, 181, 98, 0.8);

        --wui-color-success-glass-reown-020: rgba(48, 164, 107, 0.2);

        --wui-color-warning-glass-reown-020: rgba(243, 161, 63, 0.2);

        --wui-color-error-glass-001: rgba(240, 81, 66, 0.01);
        --wui-color-error-glass-002: rgba(240, 81, 66, 0.02);
        --wui-color-error-glass-005: rgba(240, 81, 66, 0.05);
        --wui-color-error-glass-010: rgba(240, 81, 66, 0.1);
        --wui-color-error-glass-015: rgba(240, 81, 66, 0.15);
        --wui-color-error-glass-020: rgba(240, 81, 66, 0.2);
        --wui-color-error-glass-025: rgba(240, 81, 66, 0.25);
        --wui-color-error-glass-030: rgba(240, 81, 66, 0.3);
        --wui-color-error-glass-060: rgba(240, 81, 66, 0.6);
        --wui-color-error-glass-080: rgba(240, 81, 66, 0.8);

        --wui-color-error-glass-reown-020: rgba(223, 74, 52, 0.2);

        --wui-icon-box-bg-error-base-100: #f4dfdd;
        --wui-icon-box-bg-blue-base-100: #d9ecfb;
        --wui-icon-box-bg-success-base-100: #daf0e4;
        --wui-icon-box-bg-inverse-base-100: #dcecfc;

        --wui-all-wallets-bg-100: #e8f1fa;

        --wui-avatar-border-base: #f3f4f4;

        --wui-thumbnail-border-base: #eaefef;

        --wui-wallet-button-bg-base: var(--wui-color-bg-125);

        --wui-color-gray-glass-001: rgba(0, 0, 0, 0.01);
        --wui-color-gray-glass-002: rgba(0, 0, 0, 0.02);
        --wui-color-gray-glass-005: rgba(0, 0, 0, 0.05);
        --wui-color-gray-glass-010: rgba(0, 0, 0, 0.1);
        --wui-color-gray-glass-015: rgba(0, 0, 0, 0.15);
        --wui-color-gray-glass-020: rgba(0, 0, 0, 0.2);
        --wui-color-gray-glass-025: rgba(0, 0, 0, 0.25);
        --wui-color-gray-glass-030: rgba(0, 0, 0, 0.3);
        --wui-color-gray-glass-060: rgba(0, 0, 0, 0.6);
        --wui-color-gray-glass-080: rgba(0, 0, 0, 0.8);
        --wui-color-gray-glass-090: rgba(0, 0, 0, 0.9);

        --wui-color-dark-glass-100: rgba(233, 233, 233, 1);

        --w3m-card-embedded-shadow-color: rgb(224 225 233 / 25%);
      }
    `,
        };
      }
      let ec = eo.iv`
  *,
  *::after,
  *::before,
  :host {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-style: normal;
    text-rendering: optimizeSpeed;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-tap-highlight-color: transparent;
    font-family: var(--wui-font-family);
    backface-visibility: hidden;
  }
`,
        eu = eo.iv`
  button,
  a {
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    transition:
      color var(--wui-duration-lg) var(--wui-ease-out-power-1),
      background-color var(--wui-duration-lg) var(--wui-ease-out-power-1),
      border var(--wui-duration-lg) var(--wui-ease-out-power-1),
      border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1),
      box-shadow var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: background-color, color, border, box-shadow, border-radius;
    outline: none;
    border: none;
    column-gap: var(--wui-spacing-3xs);
    background-color: transparent;
    text-decoration: none;
  }

  wui-flex {
    transition: border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: border-radius;
  }

  button:disabled > wui-wallet-image,
  button:disabled > wui-all-wallets-image,
  button:disabled > wui-network-image,
  button:disabled > wui-image,
  button:disabled > wui-transaction-visual,
  button:disabled > wui-logo {
    filter: grayscale(1);
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-gray-glass-005);
    }

    button:active:enabled {
      background-color: var(--wui-color-gray-glass-010);
    }
  }

  button:disabled > wui-icon-box {
    opacity: 0.5;
  }

  input {
    border: none;
    outline: none;
    appearance: none;
  }
`,
        ed = eo.iv`
  .wui-color-inherit {
    color: var(--wui-color-inherit);
  }

  .wui-color-accent-100 {
    color: var(--wui-color-accent-100);
  }

  .wui-color-error-100 {
    color: var(--wui-color-error-100);
  }

  .wui-color-blue-100 {
    color: var(--wui-color-blue-100);
  }

  .wui-color-blue-90 {
    color: var(--wui-color-blue-90);
  }

  .wui-color-error-125 {
    color: var(--wui-color-error-125);
  }

  .wui-color-success-100 {
    color: var(--wui-color-success-100);
  }

  .wui-color-success-125 {
    color: var(--wui-color-success-125);
  }

  .wui-color-inverse-100 {
    color: var(--wui-color-inverse-100);
  }

  .wui-color-inverse-000 {
    color: var(--wui-color-inverse-000);
  }

  .wui-color-fg-100 {
    color: var(--wui-color-fg-100);
  }

  .wui-color-fg-200 {
    color: var(--wui-color-fg-200);
  }

  .wui-color-fg-300 {
    color: var(--wui-color-fg-300);
  }

  .wui-color-fg-325 {
    color: var(--wui-color-fg-325);
  }

  .wui-color-fg-350 {
    color: var(--wui-color-fg-350);
  }

  .wui-bg-color-inherit {
    background-color: var(--wui-color-inherit);
  }

  .wui-bg-color-blue-100 {
    background-color: var(--wui-color-accent-100);
  }

  .wui-bg-color-error-100 {
    background-color: var(--wui-color-error-100);
  }

  .wui-bg-color-error-125 {
    background-color: var(--wui-color-error-125);
  }

  .wui-bg-color-success-100 {
    background-color: var(--wui-color-success-100);
  }

  .wui-bg-color-success-125 {
    background-color: var(--wui-color-success-100);
  }

  .wui-bg-color-inverse-100 {
    background-color: var(--wui-color-inverse-100);
  }

  .wui-bg-color-inverse-000 {
    background-color: var(--wui-color-inverse-000);
  }

  .wui-bg-color-fg-100 {
    background-color: var(--wui-color-fg-100);
  }

  .wui-bg-color-fg-200 {
    background-color: var(--wui-color-fg-200);
  }

  .wui-bg-color-fg-300 {
    background-color: var(--wui-color-fg-300);
  }

  .wui-color-fg-325 {
    background-color: var(--wui-color-fg-325);
  }

  .wui-color-fg-350 {
    background-color: var(--wui-color-fg-350);
  }
`;
      function customElement(s) {
        return function (x) {
          return "function" == typeof x
            ? (customElements.get(s) || customElements.define(s, x), x)
            : (function (s, x) {
                let { kind: W, elements: X } = x;
                return {
                  kind: W,
                  elements: X,
                  finisher(x) {
                    customElements.get(s) || customElements.define(s, x);
                  },
                };
              })(s, x);
        };
      }
      var eh = eo.iv`
  :host {
    display: block;
    border-radius: clamp(0px, var(--wui-border-radius-l), 44px);
    box-shadow: 0 0 0 1px var(--wui-color-gray-glass-005);
    background-color: var(--wui-color-modal-bg);
    overflow: hidden;
  }

  :host([data-embedded='true']) {
    box-shadow:
      0 0 0 1px var(--wui-color-gray-glass-005),
      0px 4px 12px 4px var(--w3m-card-embedded-shadow-color);
  }
`;
      let ep = class extends eo.oi {
        render() {
          return eo.dy`<slot></slot>`;
        }
      };
      (ep.styles = [ec, eh]),
        (ep = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([customElement("wui-card")], ep));
      var ef = W(59662);
      let eg = eo.YP`<svg
  width="14"
  height="14"
  viewBox="0 0 14 14"
  fill="none"
  xmlns="http://www.w3.org/2000/svg"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M7.0023 0.875C7.48571 0.875 7.8776 1.26675 7.8776 1.75V6.125H12.2541C12.7375 6.125 13.1294 6.51675 13.1294 7C13.1294 7.48325 12.7375 7.875 12.2541 7.875H7.8776V12.25C7.8776 12.7332 7.48571 13.125 7.0023 13.125C6.51889 13.125 6.12701 12.7332 6.12701 12.25V7.875H1.75054C1.26713 7.875 0.875244 7.48325 0.875244 7C0.875244 6.51675 1.26713 6.125 1.75054 6.125H6.12701V1.75C6.12701 1.26675 6.51889 0.875 7.0023 0.875Z"
    fill="#667dff"
  /></svg
>`,
        em = eo.YP`<svg fill="none" viewBox="0 0 24 24">
  <path
    style="fill: var(--wui-color-accent-100);"
    d="M10.2 6.6a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0ZM21 6.6a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0ZM10.2 17.4a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0ZM21 17.4a3.6 3.6 0 1 1-7.2 0 3.6 3.6 0 0 1 7.2 0Z"
  />
</svg>`,
        ew = eo.YP`
<svg width="36" height="36">
  <path
    d="M28.724 0H7.271A7.269 7.269 0 0 0 0 7.272v21.46A7.268 7.268 0 0 0 7.271 36H28.73A7.272 7.272 0 0 0 36 28.728V7.272A7.275 7.275 0 0 0 28.724 0Z"
    fill="url(#a)"
  />
  <path
    d="m17.845 8.271.729-1.26a1.64 1.64 0 1 1 2.843 1.638l-7.023 12.159h5.08c1.646 0 2.569 1.935 1.853 3.276H6.434a1.632 1.632 0 0 1-1.638-1.638c0-.909.73-1.638 1.638-1.638h4.176l5.345-9.265-1.67-2.898a1.642 1.642 0 0 1 2.844-1.638l.716 1.264Zm-6.317 17.5-1.575 2.732a1.64 1.64 0 1 1-2.844-1.638l1.17-2.025c1.323-.41 2.398-.095 3.249.931Zm13.56-4.954h4.262c.909 0 1.638.729 1.638 1.638 0 .909-.73 1.638-1.638 1.638h-2.367l1.597 2.772c.45.788.185 1.782-.602 2.241a1.642 1.642 0 0 1-2.241-.603c-2.69-4.666-4.711-8.159-6.052-10.485-1.372-2.367-.391-4.743.576-5.549 1.075 1.846 2.682 4.631 4.828 8.348Z"
    fill="#fff"
  />
  <defs>
    <linearGradient id="a" x1="18" y1="0" x2="18" y2="36" gradientUnits="userSpaceOnUse">
      <stop stop-color="#18BFFB" />
      <stop offset="1" stop-color="#2072F3" />
    </linearGradient>
  </defs>
</svg>`,
        eb = eo.YP`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#000" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M28.77 23.3c-.69 1.99-2.75 5.52-4.87 5.56-1.4.03-1.86-.84-3.46-.84-1.61 0-2.12.81-3.45.86-2.25.1-5.72-5.1-5.72-9.62 0-4.15 2.9-6.2 5.42-6.25 1.36-.02 2.64.92 3.47.92.83 0 2.38-1.13 4.02-.97.68.03 2.6.28 3.84 2.08-3.27 2.14-2.76 6.61.75 8.25ZM24.2 7.88c-2.47.1-4.49 2.69-4.2 4.84 2.28.17 4.47-2.39 4.2-4.84Z"
        />
      </g>
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`,
        ev = eo.YP`<svg
  fill="none"
  viewBox="0 0 21 20"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M10.5 2.42908C6.31875 2.42908 2.92859 5.81989 2.92859 10.0034C2.92859 14.1869 6.31875 17.5777 10.5 17.5777C14.6813 17.5777 18.0714 14.1869 18.0714 10.0034C18.0714 5.81989 14.6813 2.42908 10.5 2.42908ZM0.928589 10.0034C0.928589 4.71596 5.21355 0.429077 10.5 0.429077C15.7865 0.429077 20.0714 4.71596 20.0714 10.0034C20.0714 15.2908 15.7865 19.5777 10.5 19.5777C5.21355 19.5777 0.928589 15.2908 0.928589 10.0034ZM10.5 5.75003C11.0523 5.75003 11.5 6.19774 11.5 6.75003L11.5 10.8343L12.7929 9.54137C13.1834 9.15085 13.8166 9.15085 14.2071 9.54137C14.5976 9.9319 14.5976 10.5651 14.2071 10.9556L11.2071 13.9556C10.8166 14.3461 10.1834 14.3461 9.79291 13.9556L6.79291 10.9556C6.40239 10.5651 6.40239 9.9319 6.79291 9.54137C7.18343 9.15085 7.8166 9.15085 8.20712 9.54137L9.50002 10.8343L9.50002 6.75003C9.50002 6.19774 9.94773 5.75003 10.5 5.75003Z"
    clip-rule="evenodd"
  /></svg
>`,
        ey = eo.YP`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M7 1.99a1 1 0 0 1 1 1v7.58l2.46-2.46a1 1 0 0 1 1.41 1.42L7.7 13.69a1 1 0 0 1-1.41 0L2.12 9.53A1 1 0 0 1 3.54 8.1L6 10.57V3a1 1 0 0 1 1-1Z"
    clip-rule="evenodd"
  />
</svg>`,
        e_ = eo.YP`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M13 7.99a1 1 0 0 1-1 1H4.4l2.46 2.46a1 1 0 1 1-1.41 1.41L1.29 8.7a1 1 0 0 1 0-1.41L5.46 3.1a1 1 0 0 1 1.41 1.42L4.41 6.99H12a1 1 0 0 1 1 1Z"
    clip-rule="evenodd"
  />
</svg>`,
        eC = eo.YP`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M1 7.99a1 1 0 0 1 1-1h7.58L7.12 4.53A1 1 0 1 1 8.54 3.1l4.16 4.17a1 1 0 0 1 0 1.41l-4.16 4.17a1 1 0 1 1-1.42-1.41l2.46-2.46H2a1 1 0 0 1-1-1Z"
    clip-rule="evenodd"
  />
</svg>`,
        ex = eo.YP`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M7 13.99a1 1 0 0 1-1-1V5.4L3.54 7.86a1 1 0 0 1-1.42-1.41L6.3 2.28a1 1 0 0 1 1.41 0l4.17 4.17a1 1 0 1 1-1.41 1.41L8 5.4v7.59a1 1 0 0 1-1 1Z"
    clip-rule="evenodd"
  />
</svg>`,
        eE = eo.YP`<svg
  xmlns="http://www.w3.org/2000/svg"
  width="12"
  height="13"
  viewBox="0 0 12 13"
  fill="none"
>
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M5.61391 1.57124C5.85142 1.42873 6.14813 1.42873 6.38564 1.57124L11.0793 4.38749C11.9179 4.89067 11.5612 6.17864 10.5832 6.17864H9.96398V10.0358H10.2854C10.6996 10.0358 11.0354 10.3716 11.0354 10.7858C11.0354 11.2 10.6996 11.5358 10.2854 11.5358H1.71416C1.29995 11.5358 0.964172 11.2 0.964172 10.7858C0.964172 10.3716 1.29995 10.0358 1.71416 10.0358H2.03558L2.03558 6.17864H1.41637C0.438389 6.17864 0.0816547 4.89066 0.920263 4.38749L5.61391 1.57124ZM3.53554 6.17864V10.0358H5.24979V6.17864H3.53554ZM6.74976 6.17864V10.0358H8.46401V6.17864H6.74976ZM8.64913 4.67864H3.35043L5.99978 3.089L8.64913 4.67864Z"
    fill="currentColor"
  /></svg
>`,
        eA = eo.YP`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4 6.4a1 1 0 0 1-.46.89 6.98 6.98 0 0 0 .38 6.18A7 7 0 0 0 16.46 7.3a1 1 0 0 1-.47-.92 7 7 0 0 0-12 .03Zm-2.02-.5a9 9 0 1 1 16.03 8.2A9 9 0 0 1 1.98 5.9Z"
    clip-rule="evenodd"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.03 8.63c-1.46-.3-2.72-.75-3.6-1.35l-.02-.01-.14-.11a1 1 0 0 1 1.2-1.6l.1.08c.6.4 1.52.74 2.69 1 .16-.99.39-1.88.67-2.65.3-.79.68-1.5 1.15-2.02A2.58 2.58 0 0 1 9.99 1c.8 0 1.45.44 1.92.97.47.52.84 1.23 1.14 2.02.29.77.52 1.66.68 2.64a8 8 0 0 0 2.7-1l.26-.18h.48a1 1 0 0 1 .12 2c-.86.51-2.01.91-3.34 1.18a22.24 22.24 0 0 1-.03 3.19c1.45.29 2.7.73 3.58 1.31a1 1 0 0 1-1.1 1.68c-.6-.4-1.56-.76-2.75-1-.15.8-.36 1.55-.6 2.2-.3.79-.67 1.5-1.14 2.02-.47.53-1.12.97-1.92.97-.8 0-1.45-.44-1.91-.97a6.51 6.51 0 0 1-1.15-2.02c-.24-.65-.44-1.4-.6-2.2-1.18.24-2.13.6-2.73.99a1 1 0 1 1-1.1-1.67c.88-.58 2.12-1.03 3.57-1.31a22.03 22.03 0 0 1-.04-3.2Zm2.2-1.7c.15-.86.34-1.61.58-2.24.24-.65.51-1.12.76-1.4.25-.28.4-.29.42-.29.03 0 .17.01.42.3.25.27.52.74.77 1.4.23.62.43 1.37.57 2.22a19.96 19.96 0 0 1-3.52 0Zm-.18 4.6a20.1 20.1 0 0 1-.03-2.62 21.95 21.95 0 0 0 3.94 0 20.4 20.4 0 0 1-.03 2.63 21.97 21.97 0 0 0-3.88 0Zm.27 2c.13.66.3 1.26.49 1.78.24.65.51 1.12.76 1.4.25.28.4.29.42.29.03 0 .17-.01.42-.3.25-.27.52-.74.77-1.4.19-.5.36-1.1.49-1.78a20.03 20.03 0 0 0-3.35 0Z"
    clip-rule="evenodd"
  />
</svg>`,
        eS = eo.YP`<svg
  xmlns="http://www.w3.org/2000/svg"
  width="12"
  height="13"
  viewBox="0 0 12 13"
  fill="none"
>
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M4.16072 2C4.17367 2 4.18665 2 4.19968 2L7.83857 2C8.36772 1.99998 8.82398 1.99996 9.19518 2.04018C9.5895 2.0829 9.97577 2.17811 10.3221 2.42971C10.5131 2.56849 10.6811 2.73647 10.8198 2.92749C11.0714 3.27379 11.1666 3.66007 11.2094 4.0544C11.2496 4.42561 11.2496 4.88188 11.2495 5.41105V7.58896C11.2496 8.11812 11.2496 8.57439 11.2094 8.94561C11.1666 9.33994 11.0714 9.72621 10.8198 10.0725C10.6811 10.2635 10.5131 10.4315 10.3221 10.5703C9.97577 10.8219 9.5895 10.9171 9.19518 10.9598C8.82398 11 8.36772 11 7.83856 11H4.16073C3.63157 11 3.17531 11 2.80411 10.9598C2.40979 10.9171 2.02352 10.8219 1.67722 10.5703C1.48621 10.4315 1.31824 10.2635 1.17946 10.0725C0.927858 9.72621 0.832652 9.33994 0.78993 8.94561C0.749713 8.5744 0.749733 8.11813 0.749757 7.58896L0.749758 5.45C0.749758 5.43697 0.749758 5.42399 0.749757 5.41104C0.749733 4.88188 0.749713 4.42561 0.78993 4.0544C0.832652 3.66007 0.927858 3.27379 1.17946 2.92749C1.31824 2.73647 1.48621 2.56849 1.67722 2.42971C2.02352 2.17811 2.40979 2.0829 2.80411 2.04018C3.17531 1.99996 3.63157 1.99998 4.16072 2ZM2.96567 3.53145C2.69897 3.56034 2.60687 3.60837 2.55888 3.64324C2.49521 3.6895 2.43922 3.74549 2.39296 3.80916C2.35809 3.85715 2.31007 3.94926 2.28117 4.21597C2.26629 4.35335 2.25844 4.51311 2.25431 4.70832H9.74498C9.74085 4.51311 9.733 4.35335 9.71812 4.21597C9.68922 3.94926 9.6412 3.85715 9.60633 3.80916C9.56007 3.74549 9.50408 3.6895 9.44041 3.64324C9.39242 3.60837 9.30031 3.56034 9.03362 3.53145C8.75288 3.50103 8.37876 3.5 7.79961 3.5H4.19968C3.62053 3.5 3.24641 3.50103 2.96567 3.53145ZM9.74956 6.20832H2.24973V7.55C2.24973 8.12917 2.25076 8.5033 2.28117 8.78404C2.31007 9.05074 2.35809 9.14285 2.39296 9.19084C2.43922 9.25451 2.49521 9.31051 2.55888 9.35677C2.60687 9.39163 2.69897 9.43966 2.96567 9.46856C3.24641 9.49897 3.62053 9.5 4.19968 9.5H7.79961C8.37876 9.5 8.75288 9.49897 9.03362 9.46856C9.30032 9.43966 9.39242 9.39163 9.44041 9.35677C9.50408 9.31051 9.56007 9.25451 9.60633 9.19084C9.6412 9.14285 9.68922 9.05075 9.71812 8.78404C9.74854 8.5033 9.74956 8.12917 9.74956 7.55V6.20832ZM6.74963 8C6.74963 7.58579 7.08541 7.25 7.49961 7.25H8.2496C8.6638 7.25 8.99958 7.58579 8.99958 8C8.99958 8.41422 8.6638 8.75 8.2496 8.75H7.49961C7.08541 8.75 6.74963 8.41422 6.74963 8Z"
    fill="currentColor"
  /></svg
>`,
        ek = eo.YP`<svg fill="none" viewBox="0 0 14 14">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M12.9576 2.23383C13.3807 2.58873 13.4361 3.21947 13.0812 3.64263L6.37159 11.6426C6.19161 11.8572 5.92989 11.9865 5.65009 11.999C5.3703 12.0115 5.09808 11.9062 4.89965 11.7085L0.979321 7.80331C0.588042 7.41354 0.586817 6.78038 0.976585 6.3891C1.36635 5.99782 1.99952 5.99659 2.3908 6.38636L5.53928 9.52268L11.5488 2.35742C11.9037 1.93426 12.5344 1.87893 12.9576 2.23383Z"
    clip-rule="evenodd"
  />
</svg>`,
        eT = eo.YP`<svg
  width="28"
  height="28"
  viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M25.5297 4.92733C26.1221 5.4242 26.1996 6.30724 25.7027 6.89966L12.2836 22.8997C12.0316 23.2001 11.6652 23.3811 11.2735 23.3986C10.8817 23.4161 10.5006 23.2686 10.2228 22.9919L2.38218 15.1815C1.83439 14.6358 1.83268 13.7494 2.37835 13.2016C2.92403 12.6538 3.81046 12.6521 4.35825 13.1978L11.1183 19.9317L23.5573 5.10036C24.0542 4.50794 24.9372 4.43047 25.5297 4.92733Z"
    fill="currentColor"/>
</svg>
`,
        eI = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M1.46 4.96a1 1 0 0 1 1.41 0L8 10.09l5.13-5.13a1 1 0 1 1 1.41 1.41l-5.83 5.84a1 1 0 0 1-1.42 0L1.46 6.37a1 1 0 0 1 0-1.41Z"
    clip-rule="evenodd"
  />
</svg>`,
        eP = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M11.04 1.46a1 1 0 0 1 0 1.41L5.91 8l5.13 5.13a1 1 0 1 1-1.41 1.41L3.79 8.71a1 1 0 0 1 0-1.42l5.84-5.83a1 1 0 0 1 1.41 0Z"
    clip-rule="evenodd"
  />
</svg>`,
        eR = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4.96 14.54a1 1 0 0 1 0-1.41L10.09 8 4.96 2.87a1 1 0 0 1 1.41-1.41l5.84 5.83a1 1 0 0 1 0 1.42l-5.84 5.83a1 1 0 0 1-1.41 0Z"
    clip-rule="evenodd"
  />
</svg>`,
        eN = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M14.54 11.04a1 1 0 0 1-1.41 0L8 5.92l-5.13 5.12a1 1 0 1 1-1.41-1.41l5.83-5.84a1 1 0 0 1 1.42 0l5.83 5.84a1 1 0 0 1 0 1.41Z"
    clip-rule="evenodd"
  />
</svg>`,
        eO = eo.YP`<svg width="36" height="36" fill="none">
  <path
    fill="#fff"
    fill-opacity=".05"
    d="M0 14.94c0-5.55 0-8.326 1.182-10.4a9 9 0 0 1 3.359-3.358C6.614 0 9.389 0 14.94 0h6.12c5.55 0 8.326 0 10.4 1.182a9 9 0 0 1 3.358 3.359C36 6.614 36 9.389 36 14.94v6.12c0 5.55 0 8.326-1.182 10.4a9 9 0 0 1-3.359 3.358C29.386 36 26.611 36 21.06 36h-6.12c-5.55 0-8.326 0-10.4-1.182a9 9 0 0 1-3.358-3.359C0 29.386 0 26.611 0 21.06v-6.12Z"
  />
  <path
    stroke="#fff"
    stroke-opacity=".05"
    d="M14.94.5h6.12c2.785 0 4.84 0 6.46.146 1.612.144 2.743.43 3.691.97a8.5 8.5 0 0 1 3.172 3.173c.541.948.826 2.08.971 3.692.145 1.62.146 3.675.146 6.459v6.12c0 2.785 0 4.84-.146 6.46-.145 1.612-.43 2.743-.97 3.691a8.5 8.5 0 0 1-3.173 3.172c-.948.541-2.08.826-3.692.971-1.62.145-3.674.146-6.459.146h-6.12c-2.784 0-4.84 0-6.46-.146-1.612-.145-2.743-.43-3.691-.97a8.5 8.5 0 0 1-3.172-3.173c-.541-.948-.827-2.08-.971-3.692C.5 25.9.5 23.845.5 21.06v-6.12c0-2.784 0-4.84.146-6.46.144-1.612.43-2.743.97-3.691A8.5 8.5 0 0 1 4.79 1.617C5.737 1.076 6.869.79 8.48.646 10.1.5 12.156.5 14.94.5Z"
  />
  <path
    fill="url(#a)"
    d="M17.998 10.8h12.469a14.397 14.397 0 0 0-24.938.001l6.234 10.798.006-.001a7.19 7.19 0 0 1 6.23-10.799Z"
  />
  <path
    fill="url(#b)"
    d="m24.237 21.598-6.234 10.798A14.397 14.397 0 0 0 30.47 10.798H18.002l-.002.006a7.191 7.191 0 0 1 6.237 10.794Z"
  />
  <path
    fill="url(#c)"
    d="M11.765 21.601 5.531 10.803A14.396 14.396 0 0 0 18.001 32.4l6.235-10.798-.004-.004a7.19 7.19 0 0 1-12.466.004Z"
  />
  <path fill="#fff" d="M18 25.2a7.2 7.2 0 1 0 0-14.4 7.2 7.2 0 0 0 0 14.4Z" />
  <path fill="#1A73E8" d="M18 23.7a5.7 5.7 0 1 0 0-11.4 5.7 5.7 0 0 0 0 11.4Z" />
  <defs>
    <linearGradient
      id="a"
      x1="6.294"
      x2="41.1"
      y1="5.995"
      y2="5.995"
      gradientUnits="userSpaceOnUse"
    >
      <stop stop-color="#D93025" />
      <stop offset="1" stop-color="#EA4335" />
    </linearGradient>
    <linearGradient
      id="b"
      x1="20.953"
      x2="37.194"
      y1="32.143"
      y2="2.701"
      gradientUnits="userSpaceOnUse"
    >
      <stop stop-color="#FCC934" />
      <stop offset="1" stop-color="#FBBC04" />
    </linearGradient>
    <linearGradient
      id="c"
      x1="25.873"
      x2="9.632"
      y1="31.2"
      y2="1.759"
      gradientUnits="userSpaceOnUse"
    >
      <stop stop-color="#1E8E3E" />
      <stop offset="1" stop-color="#34A853" />
    </linearGradient>
  </defs>
</svg>`,
        eM = eo.YP`<svg width="14" height="14" viewBox="0 0 14 14" fill="none">
  <path 
    fill-rule="evenodd" 
    clip-rule="evenodd" 
    d="M7.00235 2C4.24 2 2.00067 4.23858 2.00067 7C2.00067 9.76142 4.24 12 7.00235 12C9.7647 12 12.004 9.76142 12.004 7C12.004 4.23858 9.7647 2 7.00235 2ZM0 7C0 3.13401 3.13506 0 7.00235 0C10.8696 0 14.0047 3.13401 14.0047 7C14.0047 10.866 10.8696 14 7.00235 14C3.13506 14 0 10.866 0 7ZM7.00235 3C7.55482 3 8.00269 3.44771 8.00269 4V6.58579L9.85327 8.43575C10.2439 8.82627 10.2439 9.45944 9.85327 9.84996C9.46262 10.2405 8.82924 10.2405 8.43858 9.84996L6.29501 7.70711C6.10741 7.51957 6.00201 7.26522 6.00201 7V4C6.00201 3.44771 6.44988 3 7.00235 3Z" 
    fill="currentColor"
  />
</svg>`,
        eD = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M2.54 2.54a1 1 0 0 1 1.42 0L8 6.6l4.04-4.05a1 1 0 1 1 1.42 1.42L9.4 8l4.05 4.04a1 1 0 0 1-1.42 1.42L8 9.4l-4.04 4.05a1 1 0 0 1-1.42-1.42L6.6 8 2.54 3.96a1 1 0 0 1 0-1.42Z"
    clip-rule="evenodd"
  />
</svg>`,
        eB = eo.YP`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M10 3a7 7 0 0 0-6.85 8.44l8.29-8.3C10.97 3.06 10.49 3 10 3Zm3.49.93-9.56 9.56c.32.55.71 1.06 1.16 1.5L15 5.1a7.03 7.03 0 0 0-1.5-1.16Zm2.7 2.8-9.46 9.46a7 7 0 0 0 9.46-9.46ZM1.99 5.9A9 9 0 1 1 18 14.09 9 9 0 0 1 1.98 5.91Z"
    clip-rule="evenodd"
  />
</svg>`,
        eL = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M8 2a6 6 0 1 0 0 12A6 6 0 0 0 8 2ZM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm10.66-2.65a1 1 0 0 1 .23 1.06L9.83 9.24a1 1 0 0 1-.59.58l-2.83 1.06A1 1 0 0 1 5.13 9.6l1.06-2.82a1 1 0 0 1 .58-.59L9.6 5.12a1 1 0 0 1 1.06.23ZM7.9 7.89l-.13.35.35-.13.12-.35-.34.13Z"
    clip-rule="evenodd"
  />
</svg>`,
        ej = eo.YP`<svg
  xmlns="http://www.w3.org/2000/svg"
  width="16"
  height="16"
  viewBox="0 0 16 16"
  fill="none"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M9.21498 1.28565H10.5944C11.1458 1.28562 11.6246 1.2856 12.0182 1.32093C12.4353 1.35836 12.853 1.44155 13.2486 1.66724C13.7005 1.92498 14.0749 2.29935 14.3326 2.75122C14.5583 3.14689 14.6415 3.56456 14.6789 3.9817C14.7143 4.37531 14.7142 4.85403 14.7142 5.40545V6.78489C14.7142 7.33631 14.7143 7.81503 14.6789 8.20865C14.6415 8.62578 14.5583 9.04345 14.3326 9.43912C14.0749 9.89099 13.7005 10.2654 13.2486 10.5231C12.853 10.7488 12.4353 10.832 12.0182 10.8694C11.7003 10.8979 11.3269 10.9034 10.9045 10.9045C10.9034 11.3269 10.8979 11.7003 10.8694 12.0182C10.832 12.4353 10.7488 12.853 10.5231 13.2486C10.2654 13.7005 9.89099 14.0749 9.43912 14.3326C9.04345 14.5583 8.62578 14.6415 8.20865 14.6789C7.81503 14.7143 7.33631 14.7142 6.78489 14.7142H5.40545C4.85403 14.7142 4.37531 14.7143 3.9817 14.6789C3.56456 14.6415 3.14689 14.5583 2.75122 14.3326C2.29935 14.0749 1.92498 13.7005 1.66724 13.2486C1.44155 12.853 1.35836 12.4353 1.32093 12.0182C1.2856 11.6246 1.28562 11.1458 1.28565 10.5944V9.21498C1.28562 8.66356 1.2856 8.18484 1.32093 7.79122C1.35836 7.37409 1.44155 6.95642 1.66724 6.56074C1.92498 6.10887 2.29935 5.73451 2.75122 5.47677C3.14689 5.25108 3.56456 5.16789 3.9817 5.13045C4.2996 5.10192 4.67301 5.09645 5.09541 5.09541C5.09645 4.67302 5.10192 4.2996 5.13045 3.9817C5.16789 3.56456 5.25108 3.14689 5.47676 2.75122C5.73451 2.29935 6.10887 1.92498 6.56074 1.66724C6.95642 1.44155 7.37409 1.35836 7.79122 1.32093C8.18484 1.2856 8.66356 1.28562 9.21498 1.28565ZM5.09541 7.09552C4.68397 7.09667 4.39263 7.10161 4.16046 7.12245C3.88053 7.14757 3.78516 7.18949 3.74214 7.21403C3.60139 7.29431 3.48478 7.41091 3.4045 7.55166C3.37997 7.59468 3.33804 7.69005 3.31292 7.96999C3.28659 8.26345 3.28565 8.65147 3.28565 9.25708V10.5523C3.28565 11.1579 3.28659 11.5459 3.31292 11.8394C3.33804 12.1193 3.37997 12.2147 3.4045 12.2577C3.48478 12.3985 3.60139 12.5151 3.74214 12.5954C3.78516 12.6199 3.88053 12.6618 4.16046 12.6869C4.45393 12.7133 4.84195 12.7142 5.44755 12.7142H6.74279C7.3484 12.7142 7.73641 12.7133 8.02988 12.6869C8.30981 12.6618 8.40518 12.6199 8.44821 12.5954C8.58895 12.5151 8.70556 12.3985 8.78584 12.2577C8.81038 12.2147 8.8523 12.1193 8.87742 11.8394C8.89825 11.6072 8.90319 11.3159 8.90435 10.9045C8.48219 10.9034 8.10898 10.8979 7.79122 10.8694C7.37409 10.832 6.95641 10.7488 6.56074 10.5231C6.10887 10.2654 5.73451 9.89099 5.47676 9.43912C5.25108 9.04345 5.16789 8.62578 5.13045 8.20865C5.10194 7.89089 5.09645 7.51767 5.09541 7.09552ZM7.96999 3.31292C7.69005 3.33804 7.59468 3.37997 7.55166 3.4045C7.41091 3.48478 7.29431 3.60139 7.21403 3.74214C7.18949 3.78516 7.14757 3.88053 7.12245 4.16046C7.09611 4.45393 7.09517 4.84195 7.09517 5.44755V6.74279C7.09517 7.3484 7.09611 7.73641 7.12245 8.02988C7.14757 8.30981 7.18949 8.40518 7.21403 8.4482C7.29431 8.58895 7.41091 8.70556 7.55166 8.78584C7.59468 8.81038 7.69005 8.8523 7.96999 8.87742C8.26345 8.90376 8.65147 8.9047 9.25708 8.9047H10.5523C11.1579 8.9047 11.5459 8.90376 11.8394 8.87742C12.1193 8.8523 12.2147 8.81038 12.2577 8.78584C12.3985 8.70556 12.5151 8.58895 12.5954 8.4482C12.6199 8.40518 12.6618 8.30981 12.6869 8.02988C12.7133 7.73641 12.7142 7.3484 12.7142 6.74279V5.44755C12.7142 4.84195 12.7133 4.45393 12.6869 4.16046C12.6618 3.88053 12.6199 3.78516 12.5954 3.74214C12.5151 3.60139 12.3985 3.48478 12.2577 3.4045C12.2147 3.37997 12.1193 3.33804 11.8394 3.31292C11.5459 3.28659 11.1579 3.28565 10.5523 3.28565H9.25708C8.65147 3.28565 8.26345 3.28659 7.96999 3.31292Z"
    fill="#788181"
  /></svg
>`,
        eU = eo.YP`<svg fill="none" viewBox="0 0 14 6">
  <path style="fill: var(--wui-color-bg-150);" d="M0 1h14L9.21 5.12a3.31 3.31 0 0 1-4.49 0L0 1Z" />
  <path
    style="stroke: var(--wui-color-inverse-100);"
    stroke-opacity=".05"
    d="M1.33 1.5h11.32L8.88 4.75l-.01.01a2.81 2.81 0 0 1-3.8 0l-.02-.01L1.33 1.5Z"
  />
  <path
    style="fill: var(--wui-color-bg-150);"
    d="M1.25.71h11.5L9.21 3.88a3.31 3.31 0 0 1-4.49 0L1.25.71Z"
  />
</svg> `,
        e$ = eo.YP` <svg fill="none" viewBox="0 0 13 4">
  <path fill="currentColor" d="M.5 0h12L8.9 3.13a3.76 3.76 0 0 1-4.8 0L.5 0Z" />
</svg>`,
        eF = eo.YP`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M13.66 2H6.34c-1.07 0-1.96 0-2.68.08-.74.08-1.42.25-2.01.68a4 4 0 0 0-.89.89c-.43.6-.6 1.27-.68 2.01C0 6.38 0 7.26 0 8.34v.89c0 1.07 0 1.96.08 2.68.08.74.25 1.42.68 2.01a4 4 0 0 0 .89.89c.6.43 1.27.6 2.01.68a27 27 0 0 0 2.68.08h7.32a27 27 0 0 0 2.68-.08 4.03 4.03 0 0 0 2.01-.68 4 4 0 0 0 .89-.89c.43-.6.6-1.27.68-2.01.08-.72.08-1.6.08-2.68v-.89c0-1.07 0-1.96-.08-2.68a4.04 4.04 0 0 0-.68-2.01 4 4 0 0 0-.89-.89c-.6-.43-1.27-.6-2.01-.68C15.62 2 14.74 2 13.66 2ZM2.82 4.38c.2-.14.48-.25 1.06-.31C4.48 4 5.25 4 6.4 4h7.2c1.15 0 1.93 0 2.52.07.58.06.86.17 1.06.31a2 2 0 0 1 .44.44c.14.2.25.48.31 1.06.07.6.07 1.37.07 2.52v.77c0 1.15 0 1.93-.07 2.52-.06.58-.17.86-.31 1.06a2 2 0 0 1-.44.44c-.2.14-.48.25-1.06.32-.6.06-1.37.06-2.52.06H6.4c-1.15 0-1.93 0-2.52-.06-.58-.07-.86-.18-1.06-.32a2 2 0 0 1-.44-.44c-.14-.2-.25-.48-.31-1.06C2 11.1 2 10.32 2 9.17V8.4c0-1.15 0-1.93.07-2.52.06-.58.17-.86.31-1.06a2 2 0 0 1 .44-.44Z"
    clip-rule="evenodd"
  />
  <path fill="currentColor" d="M6.14 17.57a1 1 0 1 0 0 2h7.72a1 1 0 1 0 0-2H6.14Z" />
</svg>`,
        ez = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.07 1h.57a1 1 0 0 1 0 2h-.52c-.98 0-1.64 0-2.14.06-.48.05-.7.14-.84.24-.13.1-.25.22-.34.35-.1.14-.2.35-.25.83-.05.5-.05 1.16-.05 2.15v2.74c0 .99 0 1.65.05 2.15.05.48.14.7.25.83.1.14.2.25.34.35.14.1.36.2.84.25.5.05 1.16.05 2.14.05h.52a1 1 0 0 1 0 2h-.57c-.92 0-1.69 0-2.3-.07a3.6 3.6 0 0 1-1.8-.61c-.3-.22-.57-.49-.8-.8a3.6 3.6 0 0 1-.6-1.79C.5 11.11.5 10.35.5 9.43V6.58c0-.92 0-1.7.06-2.31a3.6 3.6 0 0 1 .62-1.8c.22-.3.48-.57.79-.79a3.6 3.6 0 0 1 1.8-.61C4.37 1 5.14 1 6.06 1ZM9.5 3a1 1 0 0 1 1.42 0l4.28 4.3a1 1 0 0 1 0 1.4L10.93 13a1 1 0 0 1-1.42-1.42L12.1 9H6.8a1 1 0 1 1 0-2h5.3L9.51 4.42a1 1 0 0 1 0-1.41Z"
    clip-rule="evenodd"
  />
</svg>`,
        eH = eo.YP`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#5865F2" />
      <path
        fill="#fff"
        fill-rule="evenodd"
        d="M25.71 28.15C30.25 28 32 25.02 32 25.02c0-6.61-2.96-11.98-2.96-11.98-2.96-2.22-5.77-2.15-5.77-2.15l-.29.32c3.5 1.07 5.12 2.61 5.12 2.61a16.75 16.75 0 0 0-10.34-1.93l-.35.04a15.43 15.43 0 0 0-5.88 1.9s1.71-1.63 5.4-2.7l-.2-.24s-2.81-.07-5.77 2.15c0 0-2.96 5.37-2.96 11.98 0 0 1.73 2.98 6.27 3.13l1.37-1.7c-2.6-.79-3.6-2.43-3.6-2.43l.58.35.09.06.08.04.02.01.08.05a17.25 17.25 0 0 0 4.52 1.58 14.4 14.4 0 0 0 8.3-.86c.72-.27 1.52-.66 2.37-1.21 0 0-1.03 1.68-3.72 2.44.61.78 1.35 1.67 1.35 1.67Zm-9.55-9.6c-1.17 0-2.1 1.03-2.1 2.28 0 1.25.95 2.28 2.1 2.28 1.17 0 2.1-1.03 2.1-2.28.01-1.25-.93-2.28-2.1-2.28Zm7.5 0c-1.17 0-2.1 1.03-2.1 2.28 0 1.25.95 2.28 2.1 2.28 1.17 0 2.1-1.03 2.1-2.28 0-1.25-.93-2.28-2.1-2.28Z"
        clip-rule="evenodd"
      />
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
  </defs>
</svg>`,
        eV = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    d="M4.25 7a.63.63 0 0 0-.63.63v3.97c0 .28-.2.51-.47.54l-.75.07a.93.93 0 0 1-.9-.47A7.51 7.51 0 0 1 5.54.92a7.5 7.5 0 0 1 9.54 4.62c.12.35.06.72-.16 1-.74.97-1.68 1.78-2.6 2.44V4.44a.64.64 0 0 0-.63-.64h-1.06c-.35 0-.63.3-.63.64v5.5c0 .23-.12.42-.32.5l-.52.23V6.05c0-.36-.3-.64-.64-.64H7.45c-.35 0-.64.3-.64.64v4.97c0 .25-.17.46-.4.52a5.8 5.8 0 0 0-.45.11v-4c0-.36-.3-.65-.64-.65H4.25ZM14.07 12.4A7.49 7.49 0 0 1 3.6 14.08c4.09-.58 9.14-2.5 11.87-6.6v.03a7.56 7.56 0 0 1-1.41 4.91Z"
  />
</svg>`,
        eW = eo.YP`<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0162 11.6312L9.55059 2.13937C9.39228 1.86862 9.16584 1.64405 8.8938 1.48798C8.62176 1.33192 8.3136 1.2498 7.99997 1.2498C7.68634 1.2498 7.37817 1.33192 7.10613 1.48798C6.83409 1.64405 6.60765 1.86862 6.44934 2.13937L0.983716 11.6312C0.830104 11.894 0.749146 12.1928 0.749146 12.4972C0.749146 12.8015 0.830104 13.1004 0.983716 13.3631C1.14027 13.6352 1.3664 13.8608 1.63889 14.0166C1.91139 14.1725 2.22044 14.253 2.53434 14.25H13.4656C13.7793 14.2528 14.0881 14.1721 14.3603 14.0163C14.6326 13.8604 14.8585 13.635 15.015 13.3631C15.1688 13.1005 15.2499 12.8017 15.2502 12.4973C15.2504 12.193 15.1696 11.8941 15.0162 11.6312ZM13.7162 12.6125C13.6908 12.6558 13.6541 12.6914 13.6101 12.7157C13.5661 12.7399 13.5164 12.7517 13.4662 12.75H2.53434C2.48415 12.7517 2.43442 12.7399 2.39042 12.7157C2.34641 12.6914 2.30976 12.6558 2.28434 12.6125C2.26278 12.5774 2.25137 12.5371 2.25137 12.4959C2.25137 12.4548 2.26278 12.4144 2.28434 12.3794L7.74997 2.88749C7.77703 2.84583 7.81408 2.8116 7.85774 2.7879C7.9014 2.7642 7.95029 2.75178 7.99997 2.75178C8.04964 2.75178 8.09854 2.7642 8.1422 2.7879C8.18586 2.8116 8.2229 2.84583 8.24997 2.88749L13.715 12.3794C13.7367 12.4143 13.7483 12.4546 13.7486 12.4958C13.7488 12.5369 13.7376 12.5773 13.7162 12.6125ZM7.24997 8.49999V6.49999C7.24997 6.30108 7.32898 6.11031 7.46964 5.96966C7.61029 5.82901 7.80105 5.74999 7.99997 5.74999C8.19888 5.74999 8.38964 5.82901 8.5303 5.96966C8.67095 6.11031 8.74997 6.30108 8.74997 6.49999V8.49999C8.74997 8.6989 8.67095 8.88967 8.5303 9.03032C8.38964 9.17097 8.19888 9.24999 7.99997 9.24999C7.80105 9.24999 7.61029 9.17097 7.46964 9.03032C7.32898 8.88967 7.24997 8.6989 7.24997 8.49999ZM8.99997 11C8.99997 11.1978 8.94132 11.3911 8.83144 11.5556C8.72155 11.72 8.56538 11.8482 8.38265 11.9239C8.19992 11.9996 7.99886 12.0194 7.80488 11.9808C7.6109 11.9422 7.43271 11.847 7.29286 11.7071C7.15301 11.5672 7.05777 11.3891 7.01918 11.1951C6.9806 11.0011 7.0004 10.8 7.07609 10.6173C7.15177 10.4346 7.27995 10.2784 7.4444 10.1685C7.60885 10.0586 7.80219 9.99999 7.99997 9.99999C8.26518 9.99999 8.51954 10.1053 8.70707 10.2929C8.89461 10.4804 8.99997 10.7348 8.99997 11Z" fill="currentColor"/>
</svg>
`,
        eK = eo.YP`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.71 2.99a.57.57 0 0 0-.57.57 1 1 0 0 1-1 1c-.58 0-.96 0-1.24.03-.27.03-.37.07-.42.1a.97.97 0 0 0-.36.35c-.04.08-.09.21-.11.67a2.57 2.57 0 0 1 0 5.13c.02.45.07.6.11.66.09.15.21.28.36.36.07.04.21.1.67.12a2.57 2.57 0 0 1 5.12 0c.46-.03.6-.08.67-.12a.97.97 0 0 0 .36-.36c.03-.04.07-.14.1-.41.02-.29.03-.66.03-1.24a1 1 0 0 1 1-1 .57.57 0 0 0 0-1.15 1 1 0 0 1-1-1c0-.58 0-.95-.03-1.24a1.04 1.04 0 0 0-.1-.42.97.97 0 0 0-.36-.36 1.04 1.04 0 0 0-.42-.1c-.28-.02-.65-.02-1.24-.02a1 1 0 0 1-1-1 .57.57 0 0 0-.57-.57ZM5.15 13.98a1 1 0 0 0 .99-1v-.78a.57.57 0 0 1 1.14 0v.78a1 1 0 0 0 .99 1H8.36a66.26 66.26 0 0 0 .73 0 3.78 3.78 0 0 0 1.84-.38c.46-.26.85-.64 1.1-1.1.23-.4.32-.8.36-1.22.02-.2.03-.4.03-.63a2.57 2.57 0 0 0 0-4.75c0-.23-.01-.44-.03-.63a2.96 2.96 0 0 0-.35-1.22 2.97 2.97 0 0 0-1.1-1.1c-.4-.22-.8-.31-1.22-.35a8.7 8.7 0 0 0-.64-.04 2.57 2.57 0 0 0-4.74 0c-.23 0-.44.02-.63.04-.42.04-.83.13-1.22.35-.46.26-.84.64-1.1 1.1-.33.57-.37 1.2-.39 1.84a21.39 21.39 0 0 0 0 .72v.1a1 1 0 0 0 1 .99h.78a.57.57 0 0 1 0 1.15h-.77a1 1 0 0 0-1 .98v.1a63.87 63.87 0 0 0 0 .73c0 .64.05 1.27.38 1.83.26.47.64.85 1.1 1.11.56.32 1.2.37 1.84.38a20.93 20.93 0 0 0 .72 0h.1Z"
    clip-rule="evenodd"
  />
</svg>`,
        eZ = eo.YP`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.74 3.99a1 1 0 0 1 1-1H11a1 1 0 0 1 1 1v6.26a1 1 0 0 1-2 0V6.4l-6.3 6.3a1 1 0 0 1-1.4-1.42l6.29-6.3H4.74a1 1 0 0 1-1-1Z"
    clip-rule="evenodd"
  />
</svg>`,
        eG = eo.YP`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#1877F2" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M26 12.38h-2.89c-.92 0-1.61.38-1.61 1.34v1.66H26l-.36 4.5H21.5v12H17v-12h-3v-4.5h3V12.5c0-3.03 1.6-4.62 5.2-4.62H26v4.5Z"
        />
      </g>
    </g>
    <path
      fill="#1877F2"
      d="M40 20a20 20 0 1 0-23.13 19.76V25.78H11.8V20h5.07v-4.4c0-5.02 3-7.79 7.56-7.79 2.19 0 4.48.4 4.48.4v4.91h-2.53c-2.48 0-3.25 1.55-3.25 3.13V20h5.54l-.88 5.78h-4.66v13.98A20 20 0 0 0 40 20Z"
    />
    <path
      fill="#fff"
      d="m27.79 25.78.88-5.78h-5.55v-3.75c0-1.58.78-3.13 3.26-3.13h2.53V8.2s-2.3-.39-4.48-.39c-4.57 0-7.55 2.77-7.55 7.78V20H11.8v5.78h5.07v13.98a20.15 20.15 0 0 0 6.25 0V25.78h4.67Z"
    />
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`,
        eY = eo.YP`<svg style="border-radius: 9999px; overflow: hidden;"  fill="none" viewBox="0 0 1000 1000">
  <rect width="1000" height="1000" rx="9999" ry="9999" fill="#855DCD"/>
  <path fill="#855DCD" d="M0 0h1000v1000H0V0Z" />
  <path
    fill="#fff"
    d="M320 248h354v504h-51.96V521.13h-.5c-5.76-63.8-59.31-113.81-124.54-113.81s-118.78 50-124.53 113.81h-.5V752H320V248Z"
  />
  <path
    fill="#fff"
    d="m225 320 21.16 71.46h17.9v289.09a16.29 16.29 0 0 0-16.28 16.24v19.49h-3.25a16.3 16.3 0 0 0-16.28 16.24V752h182.26v-19.48a16.22 16.22 0 0 0-16.28-16.24h-3.25v-19.5a16.22 16.22 0 0 0-16.28-16.23h-19.52V320H225Zm400.3 360.55a16.3 16.3 0 0 0-15.04 10.02 16.2 16.2 0 0 0-1.24 6.22v19.49h-3.25a16.29 16.29 0 0 0-16.27 16.24V752h182.24v-19.48a16.23 16.23 0 0 0-16.27-16.24h-3.25v-19.5a16.2 16.2 0 0 0-10.04-15 16.3 16.3 0 0 0-6.23-1.23v-289.1h17.9L775 320H644.82v360.55H625.3Z"
  />
</svg>`,
        eQ = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M0 3a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H1a1 1 0 0 1-1-1Zm2.63 5.25a1 1 0 0 1 1-1h8.75a1 1 0 1 1 0 2H3.63a1 1 0 0 1-1-1Zm2.62 5.25a1 1 0 0 1 1-1h3.5a1 1 0 0 1 0 2h-3.5a1 1 0 0 1-1-1Z"
    clip-rule="evenodd"
  />
</svg>`,
        eJ = eo.YP`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#1B1F23" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M8 19.89a12 12 0 1 1 15.8 11.38c-.6.12-.8-.26-.8-.57v-3.3c0-1.12-.4-1.85-.82-2.22 2.67-.3 5.48-1.31 5.48-5.92 0-1.31-.47-2.38-1.24-3.22.13-.3.54-1.52-.12-3.18 0 0-1-.32-3.3 1.23a11.54 11.54 0 0 0-6 0c-2.3-1.55-3.3-1.23-3.3-1.23a4.32 4.32 0 0 0-.12 3.18 4.64 4.64 0 0 0-1.24 3.22c0 4.6 2.8 5.63 5.47 5.93-.34.3-.65.83-.76 1.6-.69.31-2.42.84-3.5-1 0 0-.63-1.15-1.83-1.23 0 0-1.18-.02-.09.73 0 0 .8.37 1.34 1.76 0 0 .7 2.14 4.03 1.41v2.24c0 .31-.2.68-.8.57A12 12 0 0 1 8 19.9Z"
        />
      </g>
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`,
        eX = eo.YP`<svg fill="none" viewBox="0 0 40 40">
  <path
    fill="#4285F4"
    d="M32.74 20.3c0-.93-.08-1.81-.24-2.66H20.26v5.03h7a6 6 0 0 1-2.62 3.91v3.28h4.22c2.46-2.27 3.88-5.6 3.88-9.56Z"
  />
  <path
    fill="#34A853"
    d="M20.26 33a12.4 12.4 0 0 0 8.6-3.14l-4.22-3.28a7.74 7.74 0 0 1-4.38 1.26 7.76 7.76 0 0 1-7.28-5.36H8.65v3.36A12.99 12.99 0 0 0 20.26 33Z"
  />
  <path
    fill="#FBBC05"
    d="M12.98 22.47a7.79 7.79 0 0 1 0-4.94v-3.36H8.65a12.84 12.84 0 0 0 0 11.66l3.37-2.63.96-.73Z"
  />
  <path
    fill="#EA4335"
    d="M20.26 12.18a7.1 7.1 0 0 1 4.98 1.93l3.72-3.72A12.47 12.47 0 0 0 20.26 7c-5.08 0-9.47 2.92-11.6 7.17l4.32 3.36a7.76 7.76 0 0 1 7.28-5.35Z"
  />
</svg>`,
        e0 = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    d="M8.51 5.66a.83.83 0 0 0-.57-.2.83.83 0 0 0-.52.28.8.8 0 0 0-.25.52 1 1 0 0 1-2 0c0-.75.34-1.43.81-1.91a2.75 2.75 0 0 1 4.78 1.92c0 1.24-.8 1.86-1.25 2.2l-.04.03c-.47.36-.5.43-.5.65a1 1 0 1 1-2 0c0-1.25.8-1.86 1.24-2.2l.04-.04c.47-.36.5-.43.5-.65 0-.3-.1-.49-.24-.6ZM9.12 11.87a1.13 1.13 0 1 1-2.25 0 1.13 1.13 0 0 1 2.25 0Z"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6a6 6 0 1 0 0 12A6 6 0 0 0 8 2Z"
    clip-rule="evenodd"
  />
</svg>`,
        e1 = eo.YP`<svg
 xmlns="http://www.w3.org/2000/svg"
 width="28"
 height="28"
 viewBox="0 0 28 28"
 fill="none">
  <path
    fill="#949E9E"
    fill-rule="evenodd"
    d="M7.974 2.975h12.052c1.248 0 2.296 0 3.143.092.89.096 1.723.307 2.461.844a4.9 4.9 0 0 1 1.084 1.084c.537.738.748 1.57.844 2.461.092.847.092 1.895.092 3.143v6.802c0 1.248 0 2.296-.092 3.143-.096.89-.307 1.723-.844 2.461a4.9 4.9 0 0 1-1.084 1.084c-.738.537-1.57.748-2.461.844-.847.092-1.895.092-3.143.092H7.974c-1.247 0-2.296 0-3.143-.092-.89-.096-1.723-.307-2.461-.844a4.901 4.901 0 0 1-1.084-1.084c-.537-.738-.748-1.571-.844-2.461C.35 19.697.35 18.649.35 17.4v-6.802c0-1.248 0-2.296.092-3.143.096-.89.307-1.723.844-2.461A4.9 4.9 0 0 1 2.37 3.91c.738-.537 1.571-.748 2.461-.844.847-.092 1.895-.092 3.143-.092ZM5.133 5.85c-.652.071-.936.194-1.117.326a2.1 2.1 0 0 0-.465.465c-.132.181-.255.465-.325 1.117-.074.678-.076 1.573-.076 2.917v6.65c0 1.344.002 2.239.076 2.917.07.652.193.936.325 1.117a2.1 2.1 0 0 0 .465.465c.181.132.465.255 1.117.326.678.073 1.574.075 2.917.075h11.9c1.344 0 2.239-.002 2.917-.075.652-.071.936-.194 1.117-.326.179-.13.335-.286.465-.465.132-.181.255-.465.326-1.117.073-.678.075-1.573.075-2.917v-6.65c0-1.344-.002-2.239-.075-2.917-.071-.652-.194-.936-.326-1.117a2.1 2.1 0 0 0-.465-.465c-.181-.132-.465-.255-1.117-.326-.678-.073-1.573-.075-2.917-.075H8.05c-1.343 0-2.239.002-2.917.075Zm.467 7.275a3.15 3.15 0 1 1 6.3 0 3.15 3.15 0 0 1-6.3 0Zm8.75-1.75a1.4 1.4 0 0 1 1.4-1.4h3.5a1.4 1.4 0 0 1 0 2.8h-3.5a1.4 1.4 0 0 1-1.4-1.4Zm0 5.25a1.4 1.4 0 0 1 1.4-1.4H21a1.4 1.4 0 1 1 0 2.8h-5.25a1.4 1.4 0 0 1-1.4-1.4Z"
    clip-rule="evenodd"/>
</svg>`,
        e2 = eo.YP`<svg width="14" height="14" viewBox="0 0 14 14" fill="none">
  <path d="M4.98926 3.73932C4.2989 3.73932 3.73926 4.29896 3.73926 4.98932C3.73926 5.67968 4.2989 6.23932 4.98926 6.23932C5.67962 6.23932 6.23926 5.67968 6.23926 4.98932C6.23926 4.29896 5.67962 3.73932 4.98926 3.73932Z" fill="currentColor"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M7.60497 0.500001H6.39504C5.41068 0.499977 4.59185 0.499958 3.93178 0.571471C3.24075 0.64634 2.60613 0.809093 2.04581 1.21619C1.72745 1.44749 1.44749 1.72745 1.21619 2.04581C0.809093 2.60613 0.64634 3.24075 0.571471 3.93178C0.499958 4.59185 0.499977 5.41065 0.500001 6.39501V7.57815C0.499998 8.37476 0.499995 9.05726 0.534869 9.62725C0.570123 10.2034 0.644114 10.7419 0.828442 11.2302C0.925651 11.4877 1.05235 11.7287 1.21619 11.9542C1.44749 12.2726 1.72745 12.5525 2.04581 12.7838C2.60613 13.1909 3.24075 13.3537 3.93178 13.4285C4.59185 13.5001 5.41066 13.5 6.39503 13.5H7.60496C8.58933 13.5 9.40815 13.5001 10.0682 13.4285C10.7593 13.3537 11.3939 13.1909 11.9542 12.7838C12.2726 12.5525 12.5525 12.2726 12.7838 11.9542C13.1909 11.3939 13.3537 10.7593 13.4285 10.0682C13.5 9.40816 13.5 8.58935 13.5 7.60497V6.39505C13.5 5.41068 13.5 4.59185 13.4285 3.93178C13.3537 3.24075 13.1909 2.60613 12.7838 2.04581C12.5525 1.72745 12.2726 1.44749 11.9542 1.21619C11.3939 0.809093 10.7593 0.64634 10.0682 0.571471C9.40816 0.499958 8.58933 0.499977 7.60497 0.500001ZM3.22138 2.83422C3.38394 2.71612 3.62634 2.61627 4.14721 2.55984C4.68679 2.50138 5.39655 2.5 6.45 2.5H7.55C8.60345 2.5 9.31322 2.50138 9.8528 2.55984C10.3737 2.61627 10.6161 2.71612 10.7786 2.83422C10.9272 2.94216 11.0578 3.07281 11.1658 3.22138C11.2839 3.38394 11.3837 3.62634 11.4402 4.14721C11.4986 4.68679 11.5 5.39655 11.5 6.45V6.49703C10.9674 6.11617 10.386 5.84936 9.74213 5.81948C8.40536 5.75745 7.3556 6.73051 6.40509 7.84229C6.33236 7.92737 6.27406 7.98735 6.22971 8.02911L6.1919 8.00514L6.17483 7.99427C6.09523 7.94353 5.98115 7.87083 5.85596 7.80302C5.56887 7.64752 5.18012 7.4921 4.68105 7.4921C4.66697 7.4921 4.6529 7.49239 4.63884 7.49299C3.79163 7.52878 3.09922 8.1106 2.62901 8.55472C2.58751 8.59392 2.54594 8.6339 2.50435 8.6745C2.50011 8.34653 2.5 7.97569 2.5 7.55V6.45C2.5 5.39655 2.50138 4.68679 2.55984 4.14721C2.61627 3.62634 2.71612 3.38394 2.83422 3.22138C2.94216 3.07281 3.07281 2.94216 3.22138 2.83422ZM10.3703 8.14825C10.6798 8.37526 11.043 8.71839 11.4832 9.20889C11.4744 9.44992 11.4608 9.662 11.4402 9.8528C11.3837 10.3737 11.2839 10.6161 11.1658 10.7786C11.0578 10.9272 10.9272 11.0578 10.7786 11.1658C10.6161 11.2839 10.3737 11.3837 9.8528 11.4402C9.31322 11.4986 8.60345 11.5 7.55 11.5H6.45C5.39655 11.5 4.68679 11.4986 4.14721 11.4402C3.62634 11.3837 3.38394 11.2839 3.22138 11.1658C3.15484 11.1174 3.0919 11.0645 3.03298 11.0075C3.10126 10.9356 3.16806 10.8649 3.23317 10.7959L3.29772 10.7276C3.55763 10.4525 3.78639 10.2126 4.00232 10.0087C4.22016 9.80294 4.39412 9.66364 4.53524 9.57742C4.63352 9.51738 4.69022 9.49897 4.71275 9.49345C4.76387 9.49804 4.81803 9.51537 4.90343 9.56162C4.96409 9.59447 5.02355 9.63225 5.11802 9.69238L5.12363 9.69595C5.20522 9.74789 5.32771 9.82587 5.46078 9.89278C5.76529 10.0459 6.21427 10.186 6.74977 10.0158C7.21485 9.86796 7.59367 9.52979 7.92525 9.14195C8.91377 7.98571 9.38267 7.80495 9.64941 7.81733C9.7858 7.82366 10.0101 7.884 10.3703 8.14825Z" fill="currentColor"/>
</svg>`,
        e3 = eo.YP`<svg fill="none" viewBox="0 0 14 15">
  <path
    fill="currentColor"
    d="M6 10.49a1 1 0 1 0 2 0v-2a1 1 0 0 0-2 0v2ZM7 4.49a1 1 0 1 0 0 2 1 1 0 0 0 0-2Z"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M7 14.99a7 7 0 1 0 0-14 7 7 0 0 0 0 14Zm5-7a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z"
    clip-rule="evenodd"
  />
</svg>`,
        e5 = eo.YP`<svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.125 6.875C9.125 6.57833 9.21298 6.28832 9.3778 6.04165C9.54262 5.79497 9.77689 5.60271 10.051 5.48918C10.3251 5.37565 10.6267 5.34594 10.9176 5.40382C11.2086 5.4617 11.4759 5.60456 11.6857 5.81434C11.8954 6.02412 12.0383 6.29139 12.0962 6.58236C12.1541 6.87334 12.1244 7.17494 12.0108 7.44903C11.8973 7.72311 11.705 7.95738 11.4584 8.1222C11.2117 8.28703 10.9217 8.375 10.625 8.375C10.2272 8.375 9.84565 8.21696 9.56434 7.93566C9.28304 7.65436 9.125 7.27282 9.125 6.875ZM21.125 11C21.125 13.0025 20.5312 14.9601 19.4186 16.6251C18.3061 18.2902 16.7248 19.5879 14.8747 20.3543C13.0246 21.1206 10.9888 21.3211 9.02471 20.9305C7.06066 20.5398 5.25656 19.5755 3.84055 18.1595C2.42454 16.7435 1.46023 14.9393 1.06955 12.9753C0.678878 11.0112 0.879387 8.97543 1.64572 7.12533C2.41206 5.27523 3.70981 3.69392 5.37486 2.58137C7.0399 1.46882 8.99747 0.875 11 0.875C13.6844 0.877978 16.258 1.94567 18.1562 3.84383C20.0543 5.74199 21.122 8.3156 21.125 11ZM18.875 11C18.875 9.44247 18.4131 7.91992 17.5478 6.62488C16.6825 5.32985 15.4526 4.32049 14.0136 3.72445C12.5747 3.12841 10.9913 2.97246 9.46367 3.27632C7.93607 3.58017 6.53288 4.3302 5.43154 5.43153C4.3302 6.53287 3.58018 7.93606 3.27632 9.46366C2.97246 10.9913 3.12841 12.5747 3.72445 14.0136C4.32049 15.4526 5.32985 16.6825 6.62489 17.5478C7.91993 18.4131 9.44248 18.875 11 18.875C13.0879 18.8728 15.0896 18.0424 16.566 16.566C18.0424 15.0896 18.8728 13.0879 18.875 11ZM12.125 14.4387V11.375C12.125 10.8777 11.9275 10.4008 11.5758 10.0492C11.2242 9.69754 10.7473 9.5 10.25 9.5C9.98433 9.4996 9.72708 9.59325 9.52383 9.76435C9.32058 9.93544 9.18444 10.173 9.13952 10.4348C9.09461 10.6967 9.14381 10.966 9.27843 11.195C9.41304 11.4241 9.62438 11.5981 9.875 11.6863V14.75C9.875 15.2473 10.0725 15.7242 10.4242 16.0758C10.7758 16.4275 11.2527 16.625 11.75 16.625C12.0157 16.6254 12.2729 16.5318 12.4762 16.3607C12.6794 16.1896 12.8156 15.952 12.8605 15.6902C12.9054 15.4283 12.8562 15.159 12.7216 14.93C12.587 14.7009 12.3756 14.5269 12.125 14.4387Z" fill="currentColor"/>
</svg>`,
        e6 = eo.YP`<svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M5.00177 1.78569C3.8179 1.78569 2.85819 2.74508 2.85819 3.92855C2.85819 4.52287 3.09928 5.05956 3.49077 5.4485L3.5005 5.45817C3.64381 5.60054 3.76515 5.72108 3.85631 5.81845C3.93747 5.90512 4.05255 6.03218 4.12889 6.1805C4.16999 6.26034 4.19 6.30843 4.21768 6.39385C4.22145 6.40546 4.22499 6.41703 4.22833 6.42855H5.77521C5.77854 6.41703 5.78208 6.40547 5.78585 6.39385C5.81353 6.30843 5.83354 6.26034 5.87464 6.1805C5.95098 6.03218 6.06606 5.90512 6.14722 5.81845C6.23839 5.72108 6.35973 5.60053 6.50304 5.45816L6.51276 5.4485C6.90425 5.05956 7.14534 4.52287 7.14534 3.92855C7.14534 2.74508 6.18563 1.78569 5.00177 1.78569ZM5.71629 7.85712H4.28724C4.28724 8.21403 4.28876 8.40985 4.30703 8.54571C4.30727 8.54748 4.30751 8.54921 4.30774 8.55091C4.30944 8.55115 4.31118 8.55138 4.31295 8.55162C4.44884 8.56989 4.64474 8.5714 5.00177 8.5714C5.3588 8.5714 5.55469 8.56989 5.69059 8.55162C5.69236 8.55138 5.69409 8.55115 5.69579 8.55091C5.69603 8.54921 5.69627 8.54748 5.6965 8.54571C5.71477 8.40985 5.71629 8.21403 5.71629 7.85712ZM2.85819 7.14283C2.85819 6.9948 2.85796 6.91114 2.8548 6.85032C2.85461 6.84656 2.85441 6.84309 2.85421 6.83988C2.84393 6.8282 2.83047 6.81334 2.81301 6.79469C2.74172 6.71856 2.63908 6.61643 2.48342 6.46178C1.83307 5.81566 1.42914 4.91859 1.42914 3.92855C1.42914 1.9561 3.02866 0.357117 5.00177 0.357117C6.97487 0.357117 8.57439 1.9561 8.57439 3.92855C8.57439 4.91859 8.17047 5.81566 7.52012 6.46178C7.36445 6.61643 7.26182 6.71856 7.19053 6.79469C7.17306 6.81334 7.1596 6.8282 7.14932 6.83988C7.14912 6.84309 7.14892 6.84656 7.14873 6.85032C7.14557 6.91114 7.14534 6.9948 7.14534 7.14283V7.85712C7.14534 7.87009 7.14535 7.88304 7.14535 7.89598C7.14541 8.19889 7.14547 8.49326 7.11281 8.73606C7.076 9.00978 6.98631 9.32212 6.72678 9.58156C6.46726 9.841 6.15481 9.93065 5.881 9.96745C5.63813 10.0001 5.34365 10 5.04064 9.99998C5.0277 9.99998 5.01474 9.99998 5.00177 9.99998C4.98879 9.99998 4.97583 9.99998 4.96289 9.99998C4.65988 10 4.36541 10.0001 4.12253 9.96745C3.84872 9.93065 3.53628 9.841 3.27675 9.58156C3.01722 9.32212 2.92753 9.00978 2.89072 8.73606C2.85807 8.49326 2.85812 8.19889 2.85818 7.89598C2.85819 7.88304 2.85819 7.87008 2.85819 7.85712V7.14283ZM7.1243 6.86977C7.12366 6.87069 7.1233 6.87116 7.12327 6.87119C7.12323 6.87123 7.12356 6.87076 7.1243 6.86977ZM2.88027 6.8712C2.88025 6.87119 2.87988 6.8707 2.87921 6.86975C2.87995 6.87072 2.88028 6.8712 2.88027 6.8712Z" fill="#949E9E"/>
</svg>`,
        e4 = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4.83 1.34h6.34c.68 0 1.26 0 1.73.04.5.05.97.15 1.42.4.52.3.95.72 1.24 1.24.26.45.35.92.4 1.42.04.47.04 1.05.04 1.73v3.71c0 .69 0 1.26-.04 1.74-.05.5-.14.97-.4 1.41-.3.52-.72.95-1.24 1.25-.45.25-.92.35-1.42.4-.47.03-1.05.03-1.73.03H4.83c-.68 0-1.26 0-1.73-.04-.5-.04-.97-.14-1.42-.4-.52-.29-.95-.72-1.24-1.24a3.39 3.39 0 0 1-.4-1.41A20.9 20.9 0 0 1 0 9.88v-3.7c0-.7 0-1.27.04-1.74.05-.5.14-.97.4-1.42.3-.52.72-.95 1.24-1.24.45-.25.92-.35 1.42-.4.47-.04 1.05-.04 1.73-.04ZM3.28 3.38c-.36.03-.51.08-.6.14-.21.11-.39.29-.5.5a.8.8 0 0 0-.08.19l5.16 3.44c.45.3 1.03.3 1.48 0L13.9 4.2a.79.79 0 0 0-.08-.2c-.11-.2-.29-.38-.5-.5-.09-.05-.24-.1-.6-.13-.37-.04-.86-.04-1.6-.04H4.88c-.73 0-1.22 0-1.6.04ZM14 6.54 9.85 9.31a3.33 3.33 0 0 1-3.7 0L2 6.54v3.3c0 .74 0 1.22.03 1.6.04.36.1.5.15.6.11.2.29.38.5.5.09.05.24.1.6.14.37.03.86.03 1.6.03h6.25c.73 0 1.22 0 1.6-.03.35-.03.5-.09.6-.14.2-.12.38-.3.5-.5.05-.1.1-.24.14-.6.03-.38.03-.86.03-1.6v-3.3Z"
    clip-rule="evenodd"
  />
</svg>`,
        e8 = eo.YP`<svg fill="none" viewBox="0 0 20 20">
  <path fill="currentColor" d="M10.81 5.81a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z" />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3 4.75A4.75 4.75 0 0 1 7.75 0h4.5A4.75 4.75 0 0 1 17 4.75v10.5A4.75 4.75 0 0 1 12.25 20h-4.5A4.75 4.75 0 0 1 3 15.25V4.75ZM7.75 2A2.75 2.75 0 0 0 5 4.75v10.5A2.75 2.75 0 0 0 7.75 18h4.5A2.75 2.75 0 0 0 15 15.25V4.75A2.75 2.75 0 0 0 12.25 2h-4.5Z"
    clip-rule="evenodd"
  />
</svg>`,
        e9 = eo.YP`<svg fill="none" viewBox="0 0 41 40">
  <path
    style="fill: var(--wui-color-fg-100);"
    fill-opacity=".05"
    d="M.6 20a20 20 0 1 1 40 0 20 20 0 0 1-40 0Z"
  />
  <path
    fill="#949E9E"
    d="M15.6 20.31a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0ZM23.1 20.31a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0ZM28.1 22.81a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"
  />
</svg>`,
        e7 = eo.YP`<svg fill="none" viewBox="0 0 22 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M16.32 13.62a3.14 3.14 0 1 1-.99 1.72l-1.6-.93a3.83 3.83 0 0 1-3.71 1 3.66 3.66 0 0 1-1.74-1l-1.6.94a3.14 3.14 0 1 1-1-1.73l1.6-.94a3.7 3.7 0 0 1 0-2 3.81 3.81 0 0 1 1.8-2.33c.29-.17.6-.3.92-.38V6.1a3.14 3.14 0 1 1 2 0l-.01.02v1.85H12a3.82 3.82 0 0 1 2.33 1.8 3.7 3.7 0 0 1 .39 2.91l1.6.93ZM2.6 16.54a1.14 1.14 0 0 0 1.98-1.14 1.14 1.14 0 0 0-1.98 1.14ZM11 2.01a1.14 1.14 0 1 0 0 2.28 1.14 1.14 0 0 0 0-2.28Zm1.68 10.45c.08-.19.14-.38.16-.58v-.05l.02-.13v-.13a1.92 1.92 0 0 0-.24-.8l-.11-.15a1.89 1.89 0 0 0-.74-.6 1.86 1.86 0 0 0-.77-.17h-.19a1.97 1.97 0 0 0-.89.34 1.98 1.98 0 0 0-.61.74 1.99 1.99 0 0 0-.16.9v.05a1.87 1.87 0 0 0 .24.74l.1.15c.12.16.26.3.42.42l.16.1.13.07.04.02a1.84 1.84 0 0 0 .76.17h.17a2 2 0 0 0 .91-.35 1.78 1.78 0 0 0 .52-.58l.03-.05a.84.84 0 0 0 .05-.11Zm5.15 4.5a1.14 1.14 0 0 0 1.14-1.97 1.13 1.13 0 0 0-1.55.41c-.32.55-.13 1.25.41 1.56Z"
    clip-rule="evenodd"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M4.63 9.43a1.5 1.5 0 1 0 1.5-2.6 1.5 1.5 0 0 0-1.5 2.6Zm.32-1.55a.5.5 0 0 1 .68-.19.5.5 0 0 1 .18.68.5.5 0 0 1-.68.19.5.5 0 0 1-.18-.68ZM17.94 8.88a1.5 1.5 0 1 1-2.6-1.5 1.5 1.5 0 1 1 2.6 1.5ZM16.9 7.69a.5.5 0 0 0-.68.19.5.5 0 0 0 .18.68.5.5 0 0 0 .68-.19.5.5 0 0 0-.18-.68ZM9.75 17.75a1.5 1.5 0 1 1 2.6 1.5 1.5 1.5 0 1 1-2.6-1.5Zm1.05 1.18a.5.5 0 0 0 .68-.18.5.5 0 0 0-.18-.68.5.5 0 0 0-.68.18.5.5 0 0 0 .18.68Z"
    clip-rule="evenodd"
  />
</svg>`,
        tt = eo.YP`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M9.13 1h1.71c1.46 0 2.63 0 3.56.1.97.1 1.8.33 2.53.85a5 5 0 0 1 1.1 1.11c.53.73.75 1.56.86 2.53.1.93.1 2.1.1 3.55v1.72c0 1.45 0 2.62-.1 3.55-.1.97-.33 1.8-.86 2.53a5 5 0 0 1-1.1 1.1c-.73.53-1.56.75-2.53.86-.93.1-2.1.1-3.55.1H9.13c-1.45 0-2.62 0-3.56-.1-.96-.1-1.8-.33-2.52-.85a5 5 0 0 1-1.1-1.11 5.05 5.05 0 0 1-.86-2.53c-.1-.93-.1-2.1-.1-3.55V9.14c0-1.45 0-2.62.1-3.55.1-.97.33-1.8.85-2.53a5 5 0 0 1 1.1-1.1 5.05 5.05 0 0 1 2.53-.86C6.51 1 7.67 1 9.13 1ZM5.79 3.09a3.1 3.1 0 0 0-1.57.48 3 3 0 0 0-.66.67c-.24.32-.4.77-.48 1.56-.1.82-.1 1.88-.1 3.4v1.6c0 1.15 0 2.04.05 2.76l.41-.42c.5-.5.93-.92 1.32-1.24.41-.33.86-.6 1.43-.7a3 3 0 0 1 .94 0c.35.06.66.2.95.37a17.11 17.11 0 0 0 .8.45c.1-.08.2-.2.41-.4l.04-.03a27 27 0 0 1 1.95-1.84 4.03 4.03 0 0 1 1.91-.94 4 4 0 0 1 1.25 0c.73.11 1.33.46 1.91.94l.64.55V9.2c0-1.52 0-2.58-.1-3.4a3.1 3.1 0 0 0-.48-1.56 3 3 0 0 0-.66-.67 3.1 3.1 0 0 0-1.56-.48C13.37 3 12.3 3 10.79 3h-1.6c-1.52 0-2.59 0-3.4.09Zm11.18 10-.04-.05a26.24 26.24 0 0 0-1.83-1.74c-.45-.36-.73-.48-.97-.52a2 2 0 0 0-.63 0c-.24.04-.51.16-.97.52-.46.38-1.01.93-1.83 1.74l-.02.02c-.17.18-.34.34-.49.47a2.04 2.04 0 0 1-1.08.5 1.97 1.97 0 0 1-1.25-.27l-.79-.46-.02-.02a.65.65 0 0 0-.24-.1 1 1 0 0 0-.31 0c-.08.02-.21.06-.49.28-.3.24-.65.59-1.2 1.14l-.56.56-.65.66a3 3 0 0 0 .62.6c.33.24.77.4 1.57.49.81.09 1.88.09 3.4.09h1.6c1.52 0 2.58 0 3.4-.09a3.1 3.1 0 0 0 1.56-.48 3 3 0 0 0 .66-.67c.24-.32.4-.77.49-1.56l.07-1.12Zm-8.02-1.03ZM4.99 7a2 2 0 1 1 4 0 2 2 0 0 1-4 0Z"
    clip-rule="evenodd"
  />
</svg>`,
        tr = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M8 0a1 1 0 0 1 1 1v5.38a1 1 0 0 1-2 0V1a1 1 0 0 1 1-1ZM5.26 2.6a1 1 0 0 1-.28 1.39 5.46 5.46 0 1 0 6.04 0 1 1 0 1 1 1.1-1.67 7.46 7.46 0 1 1-8.25 0 1 1 0 0 1 1.4.28Z"
    clip-rule="evenodd"
  />
</svg>`,
        ta = eo.YP` <svg
  width="36"
  height="36"
  fill="none"
>
  <path
    d="M0 8a8 8 0 0 1 8-8h20a8 8 0 0 1 8 8v20a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8V8Z"
    fill="#fff"
    fill-opacity=".05"
  />
  <path
    d="m18.262 17.513-8.944 9.49v.01a2.417 2.417 0 0 0 3.56 1.452l.026-.017 10.061-5.803-4.703-5.132Z"
    fill="#EA4335"
  />
  <path
    d="m27.307 15.9-.008-.008-4.342-2.52-4.896 4.36 4.913 4.912 4.325-2.494a2.42 2.42 0 0 0 .008-4.25Z"
    fill="#FBBC04"
  />
  <path
    d="M9.318 8.997c-.05.202-.084.403-.084.622V26.39c0 .218.025.42.084.621l9.246-9.247-9.246-8.768Z"
    fill="#4285F4"
  />
  <path
    d="m18.33 18 4.627-4.628-10.053-5.828a2.427 2.427 0 0 0-3.586 1.444L18.329 18Z"
    fill="#34A853"
  />
  <path
    d="M8 .5h20A7.5 7.5 0 0 1 35.5 8v20a7.5 7.5 0 0 1-7.5 7.5H8A7.5 7.5 0 0 1 .5 28V8A7.5 7.5 0 0 1 8 .5Z"
    stroke="#fff"
    stroke-opacity=".05"
  />
</svg>`,
        ts = eo.YP`<svg
  width="13"
  height="12"
  viewBox="0 0 13 12"
  fill="none"
>
  <path
    fill="currentColor"
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M0.794373 5.99982C0.794373 5.52643 1.17812 5.14268 1.6515 5.14268H5.643V1.15109C5.643 0.677701 6.02675 0.293946 6.50012 0.293945C6.9735 0.293946 7.35725 0.677701 7.35725 1.15109V5.14268H11.3488C11.8221 5.14268 12.2059 5.52643 12.2059 5.99982C12.2059 6.47321 11.8221 6.85696 11.3488 6.85696H7.35725V10.8486C7.35725 11.3219 6.9735 11.7057 6.50012 11.7057C6.02675 11.7057 5.643 11.3219 5.643 10.8486V6.85696H1.6515C1.17812 6.85696 0.794373 6.47321 0.794373 5.99982Z"
  /></svg
>`,
        tl = eo.YP`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    d="M3 6a3 3 0 0 1 3-3h1a1 1 0 1 0 0-2H6a5 5 0 0 0-5 5v1a1 1 0 0 0 2 0V6ZM13 1a1 1 0 1 0 0 2h1a3 3 0 0 1 3 3v1a1 1 0 1 0 2 0V6a5 5 0 0 0-5-5h-1ZM3 13a1 1 0 1 0-2 0v1a5 5 0 0 0 5 5h1a1 1 0 1 0 0-2H6a3 3 0 0 1-3-3v-1ZM19 13a1 1 0 1 0-2 0v1a3 3 0 0 1-3 3h-1a1 1 0 1 0 0 2h1.01a5 5 0 0 0 5-5v-1ZM5.3 6.36c-.04.2-.04.43-.04.89s0 .7.05.89c.14.52.54.92 1.06 1.06.19.05.42.05.89.05.46 0 .7 0 .88-.05A1.5 1.5 0 0 0 9.2 8.14c.06-.2.06-.43.06-.89s0-.7-.06-.89A1.5 1.5 0 0 0 8.14 5.3c-.19-.05-.42-.05-.88-.05-.47 0-.7 0-.9.05a1.5 1.5 0 0 0-1.05 1.06ZM10.8 6.36c-.04.2-.04.43-.04.89s0 .7.05.89c.14.52.54.92 1.06 1.06.19.05.42.05.89.05.46 0 .7 0 .88-.05a1.5 1.5 0 0 0 1.06-1.06c.06-.2.06-.43.06-.89s0-.7-.06-.89a1.5 1.5 0 0 0-1.06-1.06c-.19-.05-.42-.05-.88-.05-.47 0-.7 0-.9.05a1.5 1.5 0 0 0-1.05 1.06ZM5.26 12.75c0-.46 0-.7.05-.89a1.5 1.5 0 0 1 1.06-1.06c.19-.05.42-.05.89-.05.46 0 .7 0 .88.05.52.14.93.54 1.06 1.06.06.2.06.43.06.89s0 .7-.06.89a1.5 1.5 0 0 1-1.06 1.06c-.19.05-.42.05-.88.05-.47 0-.7 0-.9-.05a1.5 1.5 0 0 1-1.05-1.06c-.05-.2-.05-.43-.05-.89ZM10.8 11.86c-.04.2-.04.43-.04.89s0 .7.05.89c.14.52.54.92 1.06 1.06.19.05.42.05.89.05.46 0 .7 0 .88-.05a1.5 1.5 0 0 0 1.06-1.06c.06-.2.06-.43.06-.89s0-.7-.06-.89a1.5 1.5 0 0 0-1.06-1.06c-.19-.05-.42-.05-.88-.05-.47 0-.7 0-.9.05a1.5 1.5 0 0 0-1.05 1.06Z"
  />
</svg>`,
        tc = eo.YP`<svg
  fill="none"
  viewBox="0 0 21 20"
>
  <path
    fill="currentColor"
    d="M8.8071 0.292893C9.19763 0.683417 9.19763 1.31658 8.8071 1.70711L6.91421 3.6H11.8404C14.3368 3.6 16.5533 5.1975 17.3427 7.56588L17.4487 7.88377C17.6233 8.40772 17.3402 8.97404 16.8162 9.14868C16.2923 9.32333 15.726 9.04017 15.5513 8.51623L15.4453 8.19834C14.9281 6.64664 13.476 5.6 11.8404 5.6H6.91421L8.8071 7.49289C9.19763 7.88342 9.19763 8.51658 8.8071 8.90711C8.41658 9.29763 7.78341 9.29763 7.39289 8.90711L3.79289 5.30711C3.40236 4.91658 3.40236 4.28342 3.79289 3.89289L7.39289 0.292893C7.78341 -0.0976311 8.41658 -0.0976311 8.8071 0.292893ZM4.18377 10.8513C4.70771 10.6767 5.27403 10.9598 5.44868 11.4838L5.55464 11.8017C6.07188 13.3534 7.52401 14.4 9.15964 14.4L14.0858 14.4L12.1929 12.5071C11.8024 12.1166 11.8024 11.4834 12.1929 11.0929C12.5834 10.7024 13.2166 10.7024 13.6071 11.0929L17.2071 14.6929C17.5976 15.0834 17.5976 15.7166 17.2071 16.1071L13.6071 19.7071C13.2166 20.0976 12.5834 20.0976 12.1929 19.7071C11.8024 19.3166 11.8024 18.6834 12.1929 18.2929L14.0858 16.4L9.15964 16.4C6.66314 16.4 4.44674 14.8025 3.65728 12.4341L3.55131 12.1162C3.37667 11.5923 3.65983 11.026 4.18377 10.8513Z"
  /></svg
>`,
        tu = eo.YP`<svg fill="none" viewBox="0 0 14 16">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.94 1.04a1 1 0 0 1 .7 1.23l-.48 1.68a5.85 5.85 0 0 1 8.53 4.32 5.86 5.86 0 0 1-11.4 2.56 1 1 0 0 1 1.9-.57 3.86 3.86 0 1 0 1.83-4.5l1.87.53a1 1 0 0 1-.55 1.92l-4.1-1.15a1 1 0 0 1-.69-1.23l1.16-4.1a1 1 0 0 1 1.23-.7Z"
    clip-rule="evenodd"
  />
</svg>`,
        td = eo.YP`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M9.36 4.21a5.14 5.14 0 1 0 0 10.29 5.14 5.14 0 0 0 0-10.29ZM1.64 9.36a7.71 7.71 0 1 1 14 4.47l2.52 2.5a1.29 1.29 0 1 1-1.82 1.83l-2.51-2.51A7.71 7.71 0 0 1 1.65 9.36Z"
    clip-rule="evenodd"
  />
</svg>`,
        th = eo.YP`<svg fill="none" viewBox="0 0 21 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M14.3808 4.34812C13.72 4.47798 12.8501 4.7587 11.5748 5.17296L9.00869 6.00646C6.90631 6.68935 5.40679 7.17779 4.38121 7.63178C3.87166 7.85734 3.5351 8.05091 3.32022 8.22035C3.11183 8.38466 3.07011 8.48486 3.05969 8.51817C2.98058 8.77103 2.98009 9.04195 3.05831 9.29509C3.06861 9.32844 3.10998 9.42878 3.31777 9.59384C3.53205 9.76404 3.86792 9.95881 4.37667 10.1862C5.29287 10.5957 6.58844 11.0341 8.35529 11.6164L10.8876 8.59854C11.2426 8.17547 11.8733 8.12028 12.2964 8.47528C12.7195 8.83029 12.7746 9.46104 12.4196 9.88412L9.88738 12.9019C10.7676 14.5408 11.4244 15.7406 11.9867 16.5718C12.299 17.0333 12.5491 17.3303 12.7539 17.5117C12.9526 17.6877 13.0586 17.711 13.0932 17.7154C13.3561 17.7484 13.6228 17.7009 13.8581 17.5791C13.8891 17.563 13.9805 17.5046 14.1061 17.2708C14.2357 17.0298 14.3679 16.6647 14.5015 16.1237C14.7705 15.0349 14.9912 13.4733 15.2986 11.2843L15.6738 8.61249C15.8603 7.28456 15.9857 6.37917 15.9989 5.7059C16.012 5.03702 15.9047 4.8056 15.8145 4.69183C15.7044 4.55297 15.5673 4.43792 15.4114 4.35365C15.2837 4.28459 15.0372 4.2191 14.3808 4.34812ZM7.99373 13.603C6.11919 12.9864 4.6304 12.4902 3.5606 12.0121C2.98683 11.7557 2.4778 11.4808 2.07383 11.1599C1.66337 10.8339 1.31312 10.4217 1.14744 9.88551C0.949667 9.24541 0.950886 8.56035 1.15094 7.92096C1.31852 7.38534 1.67024 6.97442 2.08185 6.64985C2.48697 6.33041 2.99697 6.05734 3.57166 5.80295C4.70309 5.3021 6.30179 4.78283 8.32903 4.12437L11.0196 3.25042C12.2166 2.86159 13.2017 2.54158 13.9951 2.38566C14.8065 2.22618 15.6202 2.19289 16.3627 2.59437C16.7568 2.80747 17.1035 3.09839 17.3818 3.4495C17.9062 4.111 18.0147 4.91815 17.9985 5.74496C17.9827 6.55332 17.8386 7.57903 17.6636 8.82534L17.2701 11.6268C16.9737 13.7376 16.7399 15.4022 16.4432 16.6034C16.2924 17.2135 16.1121 17.7632 15.8678 18.2176C15.6197 18.6794 15.2761 19.0971 14.7777 19.3551C14.1827 19.6632 13.5083 19.7833 12.8436 19.6997C12.2867 19.6297 11.82 19.3563 11.4277 19.0087C11.0415 18.6666 10.6824 18.213 10.3302 17.6925C9.67361 16.722 8.92648 15.342 7.99373 13.603Z"
    clip-rule="evenodd"
  />
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="21"
    height="20"
    viewBox="0 0 21 20"
    fill="none"
  ></svg></svg
>`,
        tp = eo.YP`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M6.76.3a1 1 0 0 1 0 1.4L4.07 4.4h9a1 1 0 1 1 0 2h-9l2.69 2.68a1 1 0 1 1-1.42 1.42L.95 6.09a1 1 0 0 1 0-1.4l4.4-4.4a1 1 0 0 1 1.4 0Zm6.49 9.21a1 1 0 0 1 1.41 0l4.39 4.4a1 1 0 0 1 0 1.4l-4.39 4.4a1 1 0 0 1-1.41-1.42l2.68-2.68h-9a1 1 0 0 1 0-2h9l-2.68-2.68a1 1 0 0 1 0-1.42Z"
    clip-rule="evenodd"
  />
</svg>`,
        tf = eo.YP`<svg width="10" height="10" viewBox="0 0 10 10">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.77986 0.566631C4.0589 0.845577 4.0589 1.29784 3.77986 1.57678L3.08261 2.2738H6.34184C6.73647 2.2738 7.05637 2.5936 7.05637 2.98808C7.05637 3.38257 6.73647 3.70237 6.34184 3.70237H3.08261L3.77986 4.39938C4.0589 4.67833 4.0589 5.13059 3.77986 5.40954C3.50082 5.68848 3.04841 5.68848 2.76937 5.40954L0.852346 3.49316C0.573306 3.21421 0.573306 2.76195 0.852346 2.48301L2.76937 0.566631C3.04841 0.287685 3.50082 0.287685 3.77986 0.566631ZM6.22 4.59102C6.49904 4.31208 6.95145 4.31208 7.23049 4.59102L9.14751 6.5074C9.42655 6.78634 9.42655 7.23861 9.14751 7.51755L7.23049 9.43393C6.95145 9.71287 6.49904 9.71287 6.22 9.43393C5.94096 9.15498 5.94096 8.70272 6.22 8.42377L6.91725 7.72676L3.65802 7.72676C3.26339 7.72676 2.94349 7.40696 2.94349 7.01247C2.94349 6.61798 3.26339 6.29819 3.65802 6.29819L6.91725 6.29819L6.22 5.60117C5.94096 5.32223 5.94096 4.86997 6.22 4.59102Z"
    clip-rule="evenodd"
  />
</svg>`,
        tg = eo.YP`<svg
  width="14"
  height="14"
  viewBox="0 0 14 14"
  fill="none"
  xmlns="http://www.w3.org/2000/svg"
>
  <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M13.7306 3.24213C14.0725 3.58384 14.0725 4.13786 13.7306 4.47957L10.7418 7.46737C10.4 7.80908 9.84581 7.80908 9.50399 7.46737C9.16216 7.12567 9.16216 6.57165 9.50399 6.22994L10.9986 4.73585H5.34082C4.85741 4.73585 4.46553 4.3441 4.46553 3.86085C4.46553 3.3776 4.85741 2.98585 5.34082 2.98585L10.9986 2.98585L9.50399 1.49177C9.16216 1.15006 9.16216 0.596037 9.50399 0.254328C9.84581 -0.0873803 10.4 -0.0873803 10.7418 0.254328L13.7306 3.24213ZM9.52515 10.1352C9.52515 10.6185 9.13327 11.0102 8.64986 11.0102L2.9921 11.0102L4.48669 12.5043C4.82852 12.846 4.82852 13.4001 4.48669 13.7418C4.14487 14.0835 3.59066 14.0835 3.24884 13.7418L0.26003 10.754C0.0958806 10.5899 0.0036621 10.3673 0.00366211 10.1352C0.00366212 9.90318 0.0958806 9.68062 0.26003 9.51652L3.24884 6.52872C3.59066 6.18701 4.14487 6.18701 4.48669 6.52872C4.82851 6.87043 4.82851 7.42445 4.48669 7.76616L2.9921 9.26024L8.64986 9.26024C9.13327 9.26024 9.52515 9.65199 9.52515 10.1352Z"
    fill="currentColor"
  />
</svg>

`,
        tm = eo.YP`<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
  <path 
    fill="currentColor"
    fill-rule="evenodd" 
    clip-rule="evenodd" 
    d="M8.3071 0.292893C8.69763 0.683417 8.69763 1.31658 8.3071 1.70711L6.41421 3.6H11.3404C13.8368 3.6 16.0533 5.1975 16.8427 7.56588L16.9487 7.88377C17.1233 8.40772 16.8402 8.97404 16.3162 9.14868C15.7923 9.32333 15.226 9.04017 15.0513 8.51623L14.9453 8.19834C14.4281 6.64664 12.976 5.6 11.3404 5.6H6.41421L8.3071 7.49289C8.69763 7.88342 8.69763 8.51658 8.3071 8.90711C7.91658 9.29763 7.28341 9.29763 6.89289 8.90711L3.29289 5.30711C2.90236 4.91658 2.90236 4.28342 3.29289 3.89289L6.89289 0.292893C7.28341 -0.0976311 7.91658 -0.0976311 8.3071 0.292893ZM3.68377 10.8513C4.20771 10.6767 4.77403 10.9598 4.94868 11.4838L5.05464 11.8017C5.57188 13.3534 7.024 14.4 8.65964 14.4L13.5858 14.4L11.6929 12.5071C11.3024 12.1166 11.3024 11.4834 11.6929 11.0929C12.0834 10.7024 12.7166 10.7024 13.1071 11.0929L16.7071 14.6929C17.0976 15.0834 17.0976 15.7166 16.7071 16.1071L13.1071 19.7071C12.7166 20.0976 12.0834 20.0976 11.6929 19.7071C11.3024 19.3166 11.3024 18.6834 11.6929 18.2929L13.5858 16.4L8.65964 16.4C6.16314 16.4 3.94674 14.8025 3.15728 12.4341L3.05131 12.1162C2.87667 11.5923 3.15983 11.026 3.68377 10.8513Z" 
  />
</svg>`,
        tw = eo.YP`<svg fill="none" viewBox="0 0 14 14">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M3.48 2.18a1 1 0 0 1 1.41 0l2.68 2.68a1 1 0 1 1-1.41 1.42l-.98-.98v4.56a1 1 0 0 1-2 0V5.3l-.97.98A1 1 0 0 1 .79 4.86l2.69-2.68Zm6.34 2.93a1 1 0 0 1 1 1v4.56l.97-.98a1 1 0 1 1 1.42 1.42l-2.69 2.68a1 1 0 0 1-1.41 0l-2.68-2.68a1 1 0 0 1 1.41-1.42l.98.98V6.1a1 1 0 0 1 1-1Z"
    clip-rule="evenodd"
  />
</svg>`,
        tb = eo.YP`<svg width="32" height="32" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
  <g clip-path="url(#a)">
    <path fill="url(#b)" d="M0 0h32v32H0z"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M7.034 15.252c4.975-2.167 8.293-3.596 9.953-4.287 4.74-1.971 5.725-2.314 6.366-2.325.142-.002.457.033.662.198.172.14.22.33.243.463.022.132.05.435.028.671-.257 2.7-1.368 9.248-1.933 12.27-.24 1.28-.71 1.708-1.167 1.75-.99.091-1.743-.655-2.703-1.284-1.502-.985-2.351-1.598-3.81-2.558-1.684-1.11-.592-1.721.368-2.718.252-.261 4.619-4.233 4.703-4.594.01-.045.02-.213-.08-.301-.1-.09-.246-.059-.353-.035-.15.034-2.55 1.62-7.198 4.758-.682.468-1.298.696-1.851.684-.61-.013-1.782-.344-2.653-.628-1.069-.347-1.918-.53-1.845-1.12.039-.308.462-.623 1.27-.944Z" fill="#fff"/>
  </g>
  <path d="M.5 16C.5 7.44 7.44.5 16 .5 24.56.5 31.5 7.44 31.5 16c0 8.56-6.94 15.5-15.5 15.5C7.44 31.5.5 24.56.5 16Z" stroke="#141414" stroke-opacity=".05"/>
  <defs>
    <linearGradient id="b" x1="1600" y1="0" x2="1600" y2="3176.27" gradientUnits="userSpaceOnUse">
      <stop stop-color="#2AABEE"/>
      <stop offset="1" stop-color="#229ED9"/>
    </linearGradient>
    <clipPath id="a">
      <path d="M0 16C0 7.163 7.163 0 16 0s16 7.163 16 16-7.163 16-16 16S0 24.837 0 16Z" fill="#fff"/>
    </clipPath>
  </defs>
</svg>`,
        tv = eo.YP`<svg width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M7 3.71875C6.0335 3.71875 5.25 2.93525 5.25 1.96875C5.25 1.00225 6.0335 0.21875 7 0.21875C7.9665 0.21875 8.75 1.00225 8.75 1.96875C8.75 2.93525 7.9665 3.71875 7 3.71875Z" fill="#949E9E"/>
  <path d="M7 8.96875C6.0335 8.96875 5.25 8.18525 5.25 7.21875C5.25 6.25225 6.0335 5.46875 7 5.46875C7.9665 5.46875 8.75 6.25225 8.75 7.21875C8.75 8.18525 7.9665 8.96875 7 8.96875Z" fill="#949E9E"/>
  <path d="M5.25 12.4688C5.25 13.4352 6.0335 14.2187 7 14.2187C7.9665 14.2187 8.75 13.4352 8.75 12.4688C8.75 11.5023 7.9665 10.7188 7 10.7188C6.0335 10.7188 5.25 11.5023 5.25 12.4688Z" fill="#949E9E"/>
</svg>`,
        ty = eo.YP`<svg fill="none" viewBox="0 0 40 40">
  <g clip-path="url(#a)">
    <g clip-path="url(#b)">
      <circle cx="20" cy="19.89" r="20" fill="#5A3E85" />
      <g clip-path="url(#c)">
        <path
          fill="#fff"
          d="M18.22 25.7 20 23.91h3.34l2.1-2.1v-6.68H15.4v8.78h2.82v1.77Zm3.87-8.16h1.25v3.66H22.1v-3.66Zm-3.34 0H20v3.66h-1.25v-3.66ZM20 7.9a12 12 0 1 0 0 24 12 12 0 0 0 0-24Zm6.69 14.56-3.66 3.66h-2.72l-1.77 1.78h-1.88V26.1H13.3v-9.82l.94-2.4H26.7v8.56Z"
        />
      </g>
    </g>
  </g>
  <defs>
    <clipPath id="a"><rect width="40" height="40" fill="#fff" rx="20" /></clipPath>
    <clipPath id="b"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    <clipPath id="c"><path fill="#fff" d="M8 7.89h24v24H8z" /></clipPath>
  </defs>
</svg>`,
        t_ = eo.YP`<svg fill="none" viewBox="0 0 16 16">
  <path
    fill="currentColor"
    d="m14.36 4.74.01.42c0 4.34-3.3 9.34-9.34 9.34A9.3 9.3 0 0 1 0 13.03a6.6 6.6 0 0 0 4.86-1.36 3.29 3.29 0 0 1-3.07-2.28c.5.1 1 .07 1.48-.06A3.28 3.28 0 0 1 .64 6.11v-.04c.46.26.97.4 1.49.41A3.29 3.29 0 0 1 1.11 2.1a9.32 9.32 0 0 0 6.77 3.43 3.28 3.28 0 0 1 5.6-3 6.59 6.59 0 0 0 2.08-.8 3.3 3.3 0 0 1-1.45 1.82A6.53 6.53 0 0 0 16 3.04c-.44.66-1 1.23-1.64 1.7Z"
  />
</svg>`,
        tC = eo.YP`<svg fill="none" viewBox="0 0 14 14">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="m4.1 12.43-.45-.78-.93-.2a1.65 1.65 0 0 1-1.31-1.8l.1-.86-.61-.71a1.65 1.65 0 0 1 0-2.16l.6-.7-.09-.85c-.1-.86.47-1.64 1.3-1.81l.94-.2.45-.78A1.65 1.65 0 0 1 6.23.9l.77.36.78-.36c.77-.36 1.69-.07 2.12.66l.47.8.91.2c.84.17 1.4.95 1.31 1.8l-.1.86.6.7c.54.62.54 1.54.01 2.16l-.6.71.09.86c.1.85-.47 1.63-1.3 1.8l-.92.2-.47.79a1.65 1.65 0 0 1-2.12.66L7 12.74l-.77.36c-.78.35-1.7.07-2.13-.67Zm5.74-6.9a1 1 0 1 0-1.68-1.07L6.32 7.3l-.55-.66a1 1 0 0 0-1.54 1.28l1.43 1.71a1 1 0 0 0 1.61-.1l2.57-4Z"
    clip-rule="evenodd"
  />
</svg>`,
        tx = eo.YP`<svg fill="none" viewBox="0 0 28 28">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M18.1 4.76c-.42-.73-1.33-1.01-2.09-.66l-1.42.66c-.37.18-.8.18-1.18 0l-1.4-.65a1.63 1.63 0 0 0-2.1.66l-.84 1.45c-.2.34-.53.59-.92.67l-1.7.35c-.83.17-1.39.94-1.3 1.78l.19 1.56c.04.39-.08.78-.33 1.07l-1.12 1.3c-.52.6-.52 1.5 0 2.11L5 16.38c.25.3.37.68.33 1.06l-.18 1.57c-.1.83.46 1.6 1.28 1.78l1.7.35c.4.08.73.32.93.66l.84 1.43a1.63 1.63 0 0 0 2.09.66l1.41-.66c.37-.17.8-.17 1.18 0l1.43.67c.76.35 1.66.07 2.08-.65l.86-1.45c.2-.34.54-.58.92-.66l1.68-.35A1.63 1.63 0 0 0 22.84 19l-.18-1.57a1.4 1.4 0 0 1 .33-1.06l1.12-1.32c.52-.6.52-1.5 0-2.11l-1.12-1.3a1.4 1.4 0 0 1-.33-1.07l.18-1.57c.1-.83-.46-1.6-1.28-1.77l-1.68-.35a1.4 1.4 0 0 1-.92-.66l-.86-1.47Zm-3.27-3.2a4.43 4.43 0 0 1 5.69 1.78l.54.93 1.07.22a4.43 4.43 0 0 1 3.5 4.84l-.11.96.7.83a4.43 4.43 0 0 1 .02 5.76l-.72.85.1.96a4.43 4.43 0 0 1-3.5 4.84l-1.06.22-.54.92a4.43 4.43 0 0 1-5.68 1.77l-.84-.4-.82.39a4.43 4.43 0 0 1-5.7-1.79l-.51-.89-1.09-.22a4.43 4.43 0 0 1-3.5-4.84l.1-.96-.72-.85a4.43 4.43 0 0 1 .01-5.76l.71-.83-.1-.95a4.43 4.43 0 0 1 3.5-4.84l1.08-.23.53-.9a4.43 4.43 0 0 1 5.7-1.8l.81.38.83-.39ZM18.2 9.4c.65.42.84 1.28.42 1.93l-4.4 6.87a1.4 1.4 0 0 1-2.26.14L9.5 15.39a1.4 1.4 0 0 1 2.15-1.8l1.23 1.48 3.38-5.26a1.4 1.4 0 0 1 1.93-.42Z"
    clip-rule="evenodd"
  />
</svg>`,
        tE = eo.YP`
  <svg fill="none" viewBox="0 0 48 44">
    <path
      style="fill: var(--wui-color-bg-300);"
      d="M4.56 8.64c-1.23 1.68-1.23 4.08-1.23 8.88v8.96c0 4.8 0 7.2 1.23 8.88.39.55.87 1.02 1.41 1.42C7.65 38 10.05 38 14.85 38h14.3c4.8 0 7.2 0 8.88-1.22a6.4 6.4 0 0 0 1.41-1.42c.83-1.14 1.1-2.6 1.19-4.92a6.4 6.4 0 0 0 5.16-4.65c.21-.81.21-1.8.21-3.79 0-1.98 0-2.98-.22-3.79a6.4 6.4 0 0 0-5.15-4.65c-.1-2.32-.36-3.78-1.19-4.92a6.4 6.4 0 0 0-1.41-1.42C36.35 6 33.95 6 29.15 6h-14.3c-4.8 0-7.2 0-8.88 1.22a6.4 6.4 0 0 0-1.41 1.42Z"
    />
    <path
      style="fill: var(--wui-color-fg-200);"
      fill-rule="evenodd"
      d="M2.27 11.33a6.4 6.4 0 0 1 6.4-6.4h26.66a6.4 6.4 0 0 1 6.4 6.4v1.7a6.4 6.4 0 0 1 5.34 6.3v5.34a6.4 6.4 0 0 1-5.34 6.3v1.7a6.4 6.4 0 0 1-6.4 6.4H8.67a6.4 6.4 0 0 1-6.4-6.4V11.33ZM39.6 31.07h-6.93a9.07 9.07 0 1 1 0-18.14h6.93v-1.6a4.27 4.27 0 0 0-4.27-4.26H8.67a4.27 4.27 0 0 0-4.27 4.26v21.34a4.27 4.27 0 0 0 4.27 4.26h26.66a4.27 4.27 0 0 0 4.27-4.26v-1.6Zm-6.93-16a6.93 6.93 0 0 0 0 13.86h8a4.27 4.27 0 0 0 4.26-4.26v-5.34a4.27 4.27 0 0 0-4.26-4.26h-8Z"
      clip-rule="evenodd"
    />
  </svg>
`,
        tA = eo.YP`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M0 5.5c0-1.8 1.46-3.25 3.25-3.25H14.5c1.8 0 3.25 1.46 3.25 3.25v.28A3.25 3.25 0 0 1 20 8.88v2.24c0 1.45-.94 2.68-2.25 3.1v.28c0 1.8-1.46 3.25-3.25 3.25H3.25A3.25 3.25 0 0 1 0 14.5v-9Zm15.75 8.88h-2.38a4.38 4.38 0 0 1 0-8.76h2.38V5.5c0-.69-.56-1.25-1.25-1.25H3.25C2.56 4.25 2 4.81 2 5.5v9c0 .69.56 1.25 1.25 1.25H14.5c.69 0 1.25-.56 1.25-1.25v-.13Zm-2.38-6.76a2.37 2.37 0 1 0 0 4.75h3.38c.69 0 1.25-.55 1.25-1.24V8.87c0-.69-.56-1.24-1.25-1.24h-3.38Z"
    clip-rule="evenodd"
  />
</svg>`,
        tS = eo.YP`<svg fill="none" viewBox="0 0 96 67">
  <path
    fill="currentColor"
    d="M25.32 18.8a32.56 32.56 0 0 1 45.36 0l1.5 1.47c.63.62.63 1.61 0 2.22l-5.15 5.05c-.31.3-.82.3-1.14 0l-2.07-2.03a22.71 22.71 0 0 0-31.64 0l-2.22 2.18c-.31.3-.82.3-1.14 0l-5.15-5.05a1.55 1.55 0 0 1 0-2.22l1.65-1.62Zm56.02 10.44 4.59 4.5c.63.6.63 1.6 0 2.21l-20.7 20.26c-.62.61-1.63.61-2.26 0L48.28 41.83a.4.4 0 0 0-.56 0L33.03 56.21c-.63.61-1.64.61-2.27 0L10.07 35.95a1.55 1.55 0 0 1 0-2.22l4.59-4.5a1.63 1.63 0 0 1 2.27 0L31.6 43.63a.4.4 0 0 0 .57 0l14.69-14.38a1.63 1.63 0 0 1 2.26 0l14.69 14.38a.4.4 0 0 0 .57 0l14.68-14.38a1.63 1.63 0 0 1 2.27 0Z"
  />
  <path
    stroke="#000"
    stroke-opacity=".1"
    d="M25.67 19.15a32.06 32.06 0 0 1 44.66 0l1.5 1.48c.43.42.43 1.09 0 1.5l-5.15 5.05a.31.31 0 0 1-.44 0l-2.07-2.03a23.21 23.21 0 0 0-32.34 0l-2.22 2.18a.31.31 0 0 1-.44 0l-5.15-5.05a1.05 1.05 0 0 1 0-1.5l1.65-1.63ZM81 29.6l4.6 4.5c.42.41.42 1.09 0 1.5l-20.7 20.26c-.43.43-1.14.43-1.57 0L48.63 41.47a.9.9 0 0 0-1.26 0L32.68 55.85c-.43.43-1.14.43-1.57 0L10.42 35.6a1.05 1.05 0 0 1 0-1.5l4.59-4.5a1.13 1.13 0 0 1 1.57 0l14.68 14.38a.9.9 0 0 0 1.27 0l-.35-.35.35.35L47.22 29.6a1.13 1.13 0 0 1 1.56 0l14.7 14.38a.9.9 0 0 0 1.26 0L79.42 29.6a1.13 1.13 0 0 1 1.57 0Z"
  />
</svg>`,
        tk = eo.YP`
<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_22274_4692)">
<path d="M0 6.64C0 4.17295 0 2.93942 0.525474 2.01817C0.880399 1.39592 1.39592 0.880399 2.01817 0.525474C2.93942 0 4.17295 0 6.64 0H9.36C11.8271 0 13.0606 0 13.9818 0.525474C14.6041 0.880399 15.1196 1.39592 15.4745 2.01817C16 2.93942 16 4.17295 16 6.64V9.36C16 11.8271 16 13.0606 15.4745 13.9818C15.1196 14.6041 14.6041 15.1196 13.9818 15.4745C13.0606 16 11.8271 16 9.36 16H6.64C4.17295 16 2.93942 16 2.01817 15.4745C1.39592 15.1196 0.880399 14.6041 0.525474 13.9818C0 13.0606 0 11.8271 0 9.36V6.64Z" fill="#C7B994"/>
<path d="M4.49038 5.76609C6.42869 3.86833 9.5713 3.86833 11.5096 5.76609L11.7429 5.99449C11.8398 6.08938 11.8398 6.24323 11.7429 6.33811L10.9449 7.11942C10.8964 7.16686 10.8179 7.16686 10.7694 7.11942L10.4484 6.80512C9.09617 5.48119 6.90381 5.48119 5.5516 6.80512L5.20782 7.14171C5.15936 7.18915 5.08079 7.18915 5.03234 7.14171L4.23434 6.3604C4.13742 6.26552 4.13742 6.11167 4.23434 6.01678L4.49038 5.76609ZM13.1599 7.38192L13.8702 8.07729C13.9671 8.17217 13.9671 8.32602 13.8702 8.4209L10.6677 11.5564C10.5708 11.6513 10.4137 11.6513 10.3168 11.5564L8.04388 9.33105C8.01965 9.30733 7.98037 9.30733 7.95614 9.33105L5.6833 11.5564C5.58638 11.6513 5.42925 11.6513 5.33234 11.5564L2.12982 8.42087C2.0329 8.32598 2.0329 8.17213 2.12982 8.07724L2.84004 7.38188C2.93695 7.28699 3.09408 7.28699 3.191 7.38188L5.46392 9.60726C5.48815 9.63098 5.52743 9.63098 5.55166 9.60726L7.82447 7.38188C7.92138 7.28699 8.07851 7.28699 8.17543 7.38187L10.4484 9.60726C10.4726 9.63098 10.5119 9.63098 10.5361 9.60726L12.809 7.38192C12.9059 7.28703 13.063 7.28703 13.1599 7.38192Z" fill="#202020"/>
</g>
<defs>
<clipPath id="clip0_22274_4692">
<path d="M0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8Z" fill="white"/>
</clipPath>
</defs>
</svg>
`,
        tT = eo.YP`
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<circle cx="11" cy="11" r="11" transform="matrix(-1 0 0 1 23 1)" fill="#202020"/>
<circle cx="11" cy="11" r="11.5" transform="matrix(-1 0 0 1 23 1)" stroke="#C7B994" stroke-opacity="0.7"/>
<path d="M15.4523 11.0686L16.7472 9.78167C13.8205 6.87297 10.1838 6.87297 7.25708 9.78167L8.55201 11.0686C10.7779 8.85645 13.2279 8.85645 15.4538 11.0686H15.4523Z" fill="#C7B994"/>
<path d="M15.0199 14.067L12 11.0656L8.98 14.067L5.96004 11.0656L4.66663 12.3511L8.98 16.6393L12 13.638L15.0199 16.6393L19.3333 12.3511L18.0399 11.0656L15.0199 14.067Z" fill="#C7B994"/>
</svg>
`,
        tI = eo.YP`<svg fill="none" viewBox="0 0 20 20">
  <path
    fill="currentColor"
    d="M11 6.67a1 1 0 1 0-2 0v2.66a1 1 0 0 0 2 0V6.67ZM10 14.5a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z"
  />
  <path
    fill="currentColor"
    fill-rule="evenodd"
    d="M10 1a9 9 0 1 0 0 18 9 9 0 0 0 0-18Zm-7 9a7 7 0 1 1 14 0 7 7 0 0 1-14 0Z"
    clip-rule="evenodd"
  />
</svg>`,
        tP = eo.YP`<svg fill="none" viewBox="0 0 41 40">
  <g clip-path="url(#a)">
    <path fill="#000" d="M.8 0h40v40H.8z" />
    <path
      fill="#fff"
      d="m22.63 18.46 7.14-8.3h-1.69l-6.2 7.2-4.96-7.2H11.2l7.5 10.9-7.5 8.71h1.7l6.55-7.61 5.23 7.61h5.72l-7.77-11.31Zm-9.13-7.03h2.6l11.98 17.13h-2.6L13.5 11.43Z"
    />
  </g>
  <defs>
    <clipPath id="a"><path fill="#fff" d="M.8 20a20 20 0 1 1 40 0 20 20 0 0 1-40 0Z" /></clipPath>
  </defs>
</svg>`;
      var tR = eo.iv`
  :host {
    display: flex;
    aspect-ratio: 1 / 1;
    color: var(--local-color);
    width: var(--local-width);
  }

  svg {
    width: inherit;
    height: inherit;
    object-fit: contain;
    object-position: center;
  }
`,
        wui_icon_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let tN = {
          add: eg,
          allWallets: em,
          arrowBottomCircle: ev,
          appStore: ew,
          apple: eb,
          arrowBottom: ey,
          arrowLeft: e_,
          arrowRight: eC,
          arrowTop: ex,
          bank: eE,
          browser: eA,
          card: eS,
          checkmark: eT,
          checkmarkBold: ek,
          chevronBottom: eI,
          chevronLeft: eP,
          chevronRight: eR,
          chevronTop: eN,
          chromeStore: eO,
          clock: eM,
          close: eD,
          compass: eL,
          coinPlaceholder: eB,
          copy: ej,
          cursor: e$,
          cursorTransparent: eU,
          desktop: eF,
          disconnect: ez,
          discord: eH,
          etherscan: eV,
          extension: eK,
          externalLink: eZ,
          facebook: eG,
          farcaster: eY,
          filters: eQ,
          github: eJ,
          google: eX,
          helpCircle: e0,
          image: e2,
          id: e1,
          infoCircle: e3,
          lightbulb: e6,
          mail: e4,
          mobile: e8,
          more: e9,
          networkPlaceholder: e7,
          nftPlaceholder: tt,
          off: tr,
          playStore: ta,
          plus: ts,
          qrCode: tl,
          recycleHorizontal: tc,
          refresh: tu,
          search: td,
          send: th,
          swapHorizontal: tp,
          swapHorizontalMedium: tg,
          swapHorizontalBold: tf,
          swapHorizontalRoundedBold: tm,
          swapVertical: tw,
          telegram: tb,
          threeDots: tv,
          twitch: ty,
          twitter: tP,
          twitterIcon: t_,
          verify: tx,
          verifyFilled: tC,
          wallet: tA,
          walletConnect: tS,
          walletConnectLightBrown: tk,
          walletConnectBrown: tT,
          walletPlaceholder: tE,
          warningCircle: tI,
          x: tP,
          info: e5,
          exclamationTriangle: eW,
        },
        tO = class extends eo.oi {
          constructor() {
            super(...arguments),
              (this.size = "md"),
              (this.name = "copy"),
              (this.color = "fg-300");
          }
          render() {
            return (
              (this.style.cssText = `
      --local-color: var(--wui-color-${this.color});
      --local-width: var(--wui-icon-size-${this.size});
    `),
              eo.dy`${tN[this.name]}`
            );
          }
        };
      (tO.styles = [ec, ed, tR]),
        wui_icon_decorate([(0, ef.Cb)()], tO.prototype, "size", void 0),
        wui_icon_decorate([(0, ef.Cb)()], tO.prototype, "name", void 0),
        wui_icon_decorate([(0, ef.Cb)()], tO.prototype, "color", void 0),
        (tO = wui_icon_decorate([customElement("wui-icon")], tO));
      var tM = eo.iv`
  :host {
    display: block;
    width: var(--local-width);
    height: var(--local-height);
  }

  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center center;
    border-radius: inherit;
  }
`,
        wui_image_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let tD = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.src = "./path/to/image.jpg"),
            (this.alt = "Image"),
            (this.size = void 0);
        }
        render() {
          return (
            (this.style.cssText = `
      --local-width: ${
        this.size ? `var(--wui-icon-size-${this.size});` : "100%"
      };
      --local-height: ${
        this.size ? `var(--wui-icon-size-${this.size});` : "100%"
      };
      `),
            eo.dy`<img src=${this.src} alt=${this.alt} @error=${this.handleImageError} />`
          );
        }
        handleImageError() {
          this.dispatchEvent(
            new CustomEvent("onLoadError", { bubbles: !0, composed: !0 })
          );
        }
      };
      (tD.styles = [ec, ed, tM]),
        wui_image_decorate([(0, ef.Cb)()], tD.prototype, "src", void 0),
        wui_image_decorate([(0, ef.Cb)()], tD.prototype, "alt", void 0),
        wui_image_decorate([(0, ef.Cb)()], tD.prototype, "size", void 0),
        (tD = wui_image_decorate([customElement("wui-image")], tD));
      var tB = eo.iv`
  :host {
    display: block;
    width: var(--wui-box-size-lg);
    height: var(--wui-box-size-lg);
  }

  svg {
    width: var(--wui-box-size-lg);
    height: var(--wui-box-size-lg);
    fill: none;
    stroke: transparent;
    stroke-linecap: round;
  }

  use {
    stroke: var(--wui-color-accent-100);
    stroke-width: 2px;
    stroke-dasharray: 54, 118;
    stroke-dashoffset: 172;
    animation: dash 1s linear infinite;
  }

  @keyframes dash {
    to {
      stroke-dashoffset: 0px;
    }
  }
`;
      let tL = class extends eo.oi {
        render() {
          return eo.dy`
      <svg viewBox="0 0 54 59">
        <path
          id="wui-loader-path"
          d="M17.22 5.295c3.877-2.277 5.737-3.363 7.72-3.726a11.44 11.44 0 0 1 4.12 0c1.983.363 3.844 1.45 7.72 3.726l6.065 3.562c3.876 2.276 5.731 3.372 7.032 4.938a11.896 11.896 0 0 1 2.06 3.63c.683 1.928.688 4.11.688 8.663v7.124c0 4.553-.005 6.735-.688 8.664a11.896 11.896 0 0 1-2.06 3.63c-1.3 1.565-3.156 2.66-7.032 4.937l-6.065 3.563c-3.877 2.276-5.737 3.362-7.72 3.725a11.46 11.46 0 0 1-4.12 0c-1.983-.363-3.844-1.449-7.72-3.726l-6.065-3.562c-3.876-2.276-5.731-3.372-7.032-4.938a11.885 11.885 0 0 1-2.06-3.63c-.682-1.928-.688-4.11-.688-8.663v-7.124c0-4.553.006-6.735.688-8.664a11.885 11.885 0 0 1 2.06-3.63c1.3-1.565 3.156-2.66 7.032-4.937l6.065-3.562Z"
        />
        <use xlink:href="#wui-loader-path"></use>
      </svg>
    `;
        }
      };
      (tL.styles = [ec, tB]),
        (tL = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([customElement("wui-loading-hexagon")], tL));
      var tj = eo.iv`
  :host {
    display: flex;
  }

  :host([data-size='sm']) > svg {
    width: 12px;
    height: 12px;
  }

  :host([data-size='md']) > svg {
    width: 16px;
    height: 16px;
  }

  :host([data-size='lg']) > svg {
    width: 24px;
    height: 24px;
  }

  :host([data-size='xl']) > svg {
    width: 32px;
    height: 32px;
  }

  svg {
    animation: rotate 2s linear infinite;
  }

  circle {
    fill: none;
    stroke: var(--local-color);
    stroke-width: 4px;
    stroke-dasharray: 1, 124;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
  }

  :host([data-size='md']) > svg > circle {
    stroke-width: 6px;
  }

  :host([data-size='sm']) > svg > circle {
    stroke-width: 8px;
  }

  @keyframes rotate {
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes dash {
    0% {
      stroke-dasharray: 1, 124;
      stroke-dashoffset: 0;
    }

    50% {
      stroke-dasharray: 90, 124;
      stroke-dashoffset: -35;
    }

    100% {
      stroke-dashoffset: -125;
    }
  }
`,
        wui_loading_spinner_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let tU = class extends eo.oi {
        constructor() {
          super(...arguments), (this.color = "accent-100"), (this.size = "lg");
        }
        render() {
          return (
            (this.style.cssText = `--local-color: ${
              "inherit" === this.color
                ? "inherit"
                : `var(--wui-color-${this.color})`
            }`),
            (this.dataset.size = this.size),
            eo.dy`<svg viewBox="25 25 50 50">
      <circle r="20" cy="50" cx="50"></circle>
    </svg>`
          );
        }
      };
      (tU.styles = [ec, tj]),
        wui_loading_spinner_decorate(
          [(0, ef.Cb)()],
          tU.prototype,
          "color",
          void 0
        ),
        wui_loading_spinner_decorate(
          [(0, ef.Cb)()],
          tU.prototype,
          "size",
          void 0
        ),
        (tU = wui_loading_spinner_decorate(
          [customElement("wui-loading-spinner")],
          tU
        ));
      var t$ = eo.iv`
  :host {
    display: block;
    width: var(--wui-box-size-md);
    height: var(--wui-box-size-md);
  }

  svg {
    width: var(--wui-box-size-md);
    height: var(--wui-box-size-md);
  }

  rect {
    fill: none;
    stroke: var(--wui-color-accent-100);
    stroke-width: 4px;
    stroke-linecap: round;
    animation: dash 1s linear infinite;
  }

  @keyframes dash {
    to {
      stroke-dashoffset: 0px;
    }
  }
`,
        wui_loading_thumbnail_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let tF = class extends eo.oi {
        constructor() {
          super(...arguments), (this.radius = 36);
        }
        render() {
          return this.svgLoaderTemplate();
        }
        svgLoaderTemplate() {
          let s = this.radius > 50 ? 50 : this.radius,
            x = 36 - s;
          return eo.dy`
      <svg viewBox="0 0 110 110" width="110" height="110">
        <rect
          x="2"
          y="2"
          width="106"
          height="106"
          rx=${s}
          stroke-dasharray="${116 + x} ${245 + x}"
          stroke-dashoffset=${360 + 1.75 * x}
        />
      </svg>
    `;
        }
      };
      (tF.styles = [ec, t$]),
        wui_loading_thumbnail_decorate(
          [(0, ef.Cb)({ type: Number })],
          tF.prototype,
          "radius",
          void 0
        ),
        (tF = wui_loading_thumbnail_decorate(
          [customElement("wui-loading-thumbnail")],
          tF
        ));
      var tz = eo.iv`
  :host {
    display: block;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
    background: linear-gradient(
      120deg,
      var(--wui-color-bg-200) 5%,
      var(--wui-color-bg-200) 48%,
      var(--wui-color-bg-300) 55%,
      var(--wui-color-bg-300) 60%,
      var(--wui-color-bg-300) calc(60% + 10px),
      var(--wui-color-bg-200) calc(60% + 12px),
      var(--wui-color-bg-200) 100%
    );
    background-size: 250%;
    animation: shimmer 3s linear infinite reverse;
  }

  :host([variant='light']) {
    background: linear-gradient(
      120deg,
      var(--wui-color-bg-150) 5%,
      var(--wui-color-bg-150) 48%,
      var(--wui-color-bg-200) 55%,
      var(--wui-color-bg-200) 60%,
      var(--wui-color-bg-200) calc(60% + 10px),
      var(--wui-color-bg-150) calc(60% + 12px),
      var(--wui-color-bg-150) 100%
    );
    background-size: 250%;
  }

  @keyframes shimmer {
    from {
      background-position: -250% 0;
    }
    to {
      background-position: 250% 0;
    }
  }
`,
        wui_shimmer_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let tH = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.width = ""),
            (this.height = ""),
            (this.borderRadius = "m"),
            (this.variant = "default");
        }
        render() {
          return (
            (this.style.cssText = `
      width: ${this.width};
      height: ${this.height};
      border-radius: clamp(0px,var(--wui-border-radius-${this.borderRadius}), 40px);
    `),
            eo.dy`<slot></slot>`
          );
        }
      };
      (tH.styles = [tz]),
        wui_shimmer_decorate([(0, ef.Cb)()], tH.prototype, "width", void 0),
        wui_shimmer_decorate([(0, ef.Cb)()], tH.prototype, "height", void 0),
        wui_shimmer_decorate(
          [(0, ef.Cb)()],
          tH.prototype,
          "borderRadius",
          void 0
        ),
        wui_shimmer_decorate([(0, ef.Cb)()], tH.prototype, "variant", void 0),
        (tH = wui_shimmer_decorate([customElement("wui-shimmer")], tH));
      var tq = W(31364),
        tV = eo.iv`
  :host {
    display: inline-flex !important;
  }

  slot {
    width: 100%;
    display: inline-block;
    font-style: normal;
    font-family: var(--wui-font-family);
    font-feature-settings:
      'tnum' on,
      'lnum' on,
      'case' on;
    line-height: 130%;
    font-weight: var(--wui-font-weight-regular);
    overflow: inherit;
    text-overflow: inherit;
    text-align: var(--local-align);
    color: var(--local-color);
  }

  .wui-line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }

  .wui-line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  .wui-font-medium-400 {
    font-size: var(--wui-font-size-medium);
    font-weight: var(--wui-font-weight-light);
    letter-spacing: var(--wui-letter-spacing-medium);
  }

  .wui-font-medium-600 {
    font-size: var(--wui-font-size-medium);
    letter-spacing: var(--wui-letter-spacing-medium);
  }

  .wui-font-title-600 {
    font-size: var(--wui-font-size-title);
    letter-spacing: var(--wui-letter-spacing-title);
  }

  .wui-font-title-6-600 {
    font-size: var(--wui-font-size-title-6);
    letter-spacing: var(--wui-letter-spacing-title-6);
  }

  .wui-font-mini-700 {
    font-size: var(--wui-font-size-mini);
    letter-spacing: var(--wui-letter-spacing-mini);
    text-transform: uppercase;
  }

  .wui-font-large-500,
  .wui-font-large-600,
  .wui-font-large-700 {
    font-size: var(--wui-font-size-large);
    letter-spacing: var(--wui-letter-spacing-large);
  }

  .wui-font-2xl-500,
  .wui-font-2xl-600,
  .wui-font-2xl-700 {
    font-size: var(--wui-font-size-2xl);
    letter-spacing: var(--wui-letter-spacing-2xl);
  }

  .wui-font-paragraph-400,
  .wui-font-paragraph-500,
  .wui-font-paragraph-600,
  .wui-font-paragraph-700 {
    font-size: var(--wui-font-size-paragraph);
    letter-spacing: var(--wui-letter-spacing-paragraph);
  }

  .wui-font-small-400,
  .wui-font-small-500,
  .wui-font-small-600 {
    font-size: var(--wui-font-size-small);
    letter-spacing: var(--wui-letter-spacing-small);
  }

  .wui-font-tiny-400,
  .wui-font-tiny-500,
  .wui-font-tiny-600 {
    font-size: var(--wui-font-size-tiny);
    letter-spacing: var(--wui-letter-spacing-tiny);
  }

  .wui-font-micro-700,
  .wui-font-micro-600 {
    font-size: var(--wui-font-size-micro);
    letter-spacing: var(--wui-letter-spacing-micro);
    text-transform: uppercase;
  }

  .wui-font-tiny-400,
  .wui-font-small-400,
  .wui-font-medium-400,
  .wui-font-paragraph-400 {
    font-weight: var(--wui-font-weight-light);
  }

  .wui-font-large-700,
  .wui-font-paragraph-700,
  .wui-font-micro-700,
  .wui-font-mini-700 {
    font-weight: var(--wui-font-weight-bold);
  }

  .wui-font-medium-600,
  .wui-font-medium-title-600,
  .wui-font-title-6-600,
  .wui-font-large-600,
  .wui-font-paragraph-600,
  .wui-font-small-600,
  .wui-font-tiny-600,
  .wui-font-micro-600 {
    font-weight: var(--wui-font-weight-medium);
  }

  :host([disabled]) {
    opacity: 0.4;
  }
`,
        wui_text_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let tW = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.variant = "paragraph-500"),
            (this.color = "fg-300"),
            (this.align = "left"),
            (this.lineClamp = void 0);
        }
        render() {
          let s = {
            [`wui-font-${this.variant}`]: !0,
            [`wui-color-${this.color}`]: !0,
            [`wui-line-clamp-${this.lineClamp}`]: !!this.lineClamp,
          };
          return (
            (this.style.cssText = `
      --local-align: ${this.align};
      --local-color: var(--wui-color-${this.color});
    `),
            eo.dy`<slot class=${(0, tq.$)(s)}></slot>`
          );
        }
      };
      (tW.styles = [ec, tV]),
        wui_text_decorate([(0, ef.Cb)()], tW.prototype, "variant", void 0),
        wui_text_decorate([(0, ef.Cb)()], tW.prototype, "color", void 0),
        wui_text_decorate([(0, ef.Cb)()], tW.prototype, "align", void 0),
        wui_text_decorate([(0, ef.Cb)()], tW.prototype, "lineClamp", void 0),
        (tW = wui_text_decorate([customElement("wui-text")], tW));
      let tK = eo.YP`<svg fill="none" viewBox="0 0 60 60">
  <rect width="60" height="60" fill="#1DC956" rx="30" />
  <circle cx="30" cy="30" r="3" fill="#fff" />
  <path
    fill="#2BEE6C"
    stroke="#fff"
    stroke-width="2"
    d="m45.32 17.9-.88-.42.88.42.02-.05c.1-.2.21-.44.26-.7l-.82-.15.82.16a2 2 0 0 0-.24-1.4c-.13-.23-.32-.42-.47-.57a8.42 8.42 0 0 1-.04-.04l-.04-.04a2.9 2.9 0 0 0-.56-.47l-.51.86.5-.86a2 2 0 0 0-1.4-.24c-.26.05-.5.16-.69.26l-.05.02-15.05 7.25-.1.05c-1.14.55-1.85.89-2.46 1.37a7 7 0 0 0-1.13 1.14c-.5.6-.83 1.32-1.38 2.45l-.05.11-7.25 15.05-.02.05c-.1.2-.21.43-.26.69a2 2 0 0 0 .24 1.4l.85-.5-.85.5c.13.23.32.42.47.57l.04.04.04.04c.15.15.34.34.56.47a2 2 0 0 0 1.41.24l-.2-.98.2.98c.25-.05.5-.17.69-.26l.05-.02-.42-.87.42.87 15.05-7.25.1-.05c1.14-.55 1.85-.89 2.46-1.38a7 7 0 0 0 1.13-1.13 12.87 12.87 0 0 0 1.43-2.56l7.25-15.05Z"
  />
  <path
    fill="#1DC956"
    d="M33.38 32.72 30.7 29.3 15.86 44.14l.2.2a1 1 0 0 0 1.14.2l15.1-7.27a3 3 0 0 0 1.08-4.55Z"
  />
  <path
    fill="#86F999"
    d="m26.62 27.28 2.67 3.43 14.85-14.85-.2-.2a1 1 0 0 0-1.14-.2l-15.1 7.27a3 3 0 0 0-1.08 4.55Z"
  />
  <circle cx="30" cy="30" r="3" fill="#fff" transform="rotate(45 30 30)" />
  <rect width="59" height="59" x=".5" y=".5" stroke="#062B2B" stroke-opacity=".1" rx="29.5" />
</svg> `,
        tZ = eo.YP`<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none">
  <g clip-path="url(#clip0_187_29)">
    <path d="M1.18187e-05 15.8055C1.18187e-05 9.8015 -5.19442e-07 6.91338 1.69991e-08 0C4.5 3.72236e-05 9.62249 0 16.5 0L23.5 4.31399e-05C29.9349 4.31399e-05 35.5 0.000206332 40 3.73468e-05C40 2.77754 40 9.36708 40 15.8055V22.8364C40 29.2647 40 33.7962 40 40C31.5 40 29.8337 40 23.4 40H16.6C10.5092 40 6.50004 40 4.04289e-05 40C3.05176e-05 32.2453 1.18187e-05 29.6382 1.18187e-05 22.8364V15.8055Z" fill="#0052FF"/>
    <path d="M20.0236 26.5C16.4342 26.5 13.5236 23.5931 13.5236 20C13.5236 16.4069 16.4342 13.5 20.0236 13.5C23.2411 13.5 25.9134 15.8472 26.4261 18.9167H32.9731C32.4206 12.2433 26.8342 7 20.02 7C12.8411 7 7.02002 12.8211 7.02002 20C7.02002 27.1789 12.8411 33 20.02 33C26.8342 33 32.4206 27.7567 32.9731 21.0833H26.4225C25.9061 24.1528 23.2411 26.5 20.0236 26.5Z" fill="white"/>
  </g>
  <defs>
    <clipPath id="clip0_187_29">
      <rect width="40" height="40" fill="white"/>
    </clipPath>
  </defs>
</svg>`,
        tG = eo.YP`<svg viewBox="0 0 60 60" fill="none">
  <g clip-path="url(#clip0_7734_50402)">
    <path
      d="M0 24.9C0 15.6485 0 11.0228 1.97053 7.56812C3.3015 5.23468 5.23468 3.3015 7.56812 1.97053C11.0228 0 15.6485 0 24.9 0H35.1C44.3514 0 48.9772 0 52.4319 1.97053C54.7653 3.3015 56.6985 5.23468 58.0295 7.56812C60 11.0228 60 15.6485 60 24.9V35.1C60 44.3514 60 48.9772 58.0295 52.4319C56.6985 54.7653 54.7653 56.6985 52.4319 58.0295C48.9772 60 44.3514 60 35.1 60H24.9C15.6485 60 11.0228 60 7.56812 58.0295C5.23468 56.6985 3.3015 54.7653 1.97053 52.4319C0 48.9772 0 44.3514 0 35.1V24.9Z"
      fill="#EB8B47"
    />
    <path
      d="M0.5 24.9C0.5 20.2652 0.50047 16.8221 0.744315 14.105C0.987552 11.3946 1.46987 9.45504 2.40484 7.81585C3.69145 5.56019 5.56019 3.69145 7.81585 2.40484C9.45504 1.46987 11.3946 0.987552 14.105 0.744315C16.8221 0.50047 20.2652 0.5 24.9 0.5H35.1C39.7348 0.5 43.1779 0.50047 45.895 0.744315C48.6054 0.987552 50.545 1.46987 52.1841 2.40484C54.4398 3.69145 56.3086 5.56019 57.5952 7.81585C58.5301 9.45504 59.0124 11.3946 59.2557 14.105C59.4995 16.8221 59.5 20.2652 59.5 24.9V35.1C59.5 39.7348 59.4995 43.1779 59.2557 45.895C59.0124 48.6054 58.5301 50.545 57.5952 52.1841C56.3086 54.4398 54.4398 56.3086 52.1841 57.5952C50.545 58.5301 48.6054 59.0124 45.895 59.2557C43.1779 59.4995 39.7348 59.5 35.1 59.5H24.9C20.2652 59.5 16.8221 59.4995 14.105 59.2557C11.3946 59.0124 9.45504 58.5301 7.81585 57.5952C5.56019 56.3086 3.69145 54.4398 2.40484 52.1841C1.46987 50.545 0.987552 48.6054 0.744315 45.895C0.50047 43.1779 0.5 39.7348 0.5 35.1V24.9Z"
      stroke="#062B2B"
      stroke-opacity="0.1"
    />
    <path
      d="M19 52C24.5228 52 29 47.5228 29 42C29 36.4772 24.5228 32 19 32C13.4772 32 9 36.4772 9 42C9 47.5228 13.4772 52 19 52Z"
      fill="#FF974C"
      stroke="white"
      stroke-width="2"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M42.8437 8.3264C42.4507 7.70891 41.5493 7.70891 41.1564 8.32641L28.978 27.4638C28.5544 28.1295 29.0326 29.0007 29.8217 29.0007H54.1783C54.9674 29.0007 55.4456 28.1295 55.022 27.4638L42.8437 8.3264Z"
      fill="white"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M42.3348 11.6456C42.659 11.7608 42.9061 12.1492 43.4005 12.926L50.7332 24.4488C51.2952 25.332 51.5763 25.7737 51.5254 26.1382C51.4915 26.3808 51.3698 26.6026 51.1833 26.7614C50.9031 27 50.3796 27 49.3327 27H34.6673C33.6204 27 33.0969 27 32.8167 26.7614C32.6302 26.6026 32.5085 26.3808 32.4746 26.1382C32.4237 25.7737 32.7048 25.332 33.2669 24.4488L40.5995 12.926C41.0939 12.1492 41.341 11.7608 41.6652 11.6456C41.8818 11.5687 42.1182 11.5687 42.3348 11.6456ZM35.0001 26.999C38.8661 26.999 42.0001 23.865 42.0001 19.999C42.0001 23.865 45.1341 26.999 49.0001 26.999H35.0001Z"
      fill="#FF974C"
    />
    <path
      d="M10.1061 9.35712C9.9973 9.67775 9.99867 10.0388 9.99978 10.3323C9.99989 10.3611 10 10.3893 10 10.4167V25.5833C10 25.6107 9.99989 25.6389 9.99978 25.6677C9.99867 25.9612 9.9973 26.3222 10.1061 26.6429C10.306 27.2317 10.7683 27.694 11.3571 27.8939C11.6777 28.0027 12.0388 28.0013 12.3323 28.0002C12.3611 28.0001 12.3893 28 12.4167 28H19C24.5228 28 29 23.5228 29 18C29 12.4772 24.5228 8 19 8H12.4167C12.3893 8 12.3611 7.99989 12.3323 7.99978C12.0388 7.99867 11.6778 7.9973 11.3571 8.10614C10.7683 8.306 10.306 8.76834 10.1061 9.35712Z"
      fill="#FF974C"
      stroke="white"
      stroke-width="2"
    />
    <circle cx="19" cy="18" r="4" fill="#EB8B47" stroke="white" stroke-width="2" />
    <circle cx="19" cy="42" r="4" fill="#EB8B47" stroke="white" stroke-width="2" />
  </g>
  <defs>
    <clipPath id="clip0_7734_50402">
      <rect width="60" height="60" fill="white" />
    </clipPath>
  </defs>
</svg> `,
        tY = eo.YP`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <path
      fill="#1DC956"
      d="M0 25.01c0-9.25 0-13.88 1.97-17.33a15 15 0 0 1 5.6-5.6C11.02.11 15.65.11 24.9.11h10.2c9.25 0 13.88 0 17.33 1.97a15 15 0 0 1 5.6 5.6C60 11.13 60 15.76 60 25v10.2c0 9.25 0 13.88-1.97 17.33a15 15 0 0 1-5.6 5.6c-3.45 1.97-8.08 1.97-17.33 1.97H24.9c-9.25 0-13.88 0-17.33-1.97a15 15 0 0 1-5.6-5.6C0 49.1 0 44.46 0 35.21v-10.2Z"
    />
    <path
      fill="#2BEE6C"
      d="M16.1 60c-3.82-.18-6.4-.64-8.53-1.86a15 15 0 0 1-5.6-5.6C.55 50.06.16 46.97.04 41.98L4.2 40.6a4 4 0 0 0 2.48-2.39l4.65-12.4a2 2 0 0 1 2.5-1.2l2.53.84a2 2 0 0 0 2.43-1l2.96-5.94a2 2 0 0 1 3.7.32l3.78 12.58a2 2 0 0 0 3.03 1.09l3.34-2.23a2 2 0 0 0 .65-.7l5.3-9.72a2 2 0 0 1 1.42-1.01l4.14-.69a2 2 0 0 1 1.6.44l3.9 3.24a2 2 0 0 0 2.7-.12l4.62-4.63c.08 2.2.08 4.8.08 7.93v10.2c0 9.25 0 13.88-1.97 17.33a15 15 0 0 1-5.6 5.6c-2.13 1.22-4.7 1.68-8.54 1.86H16.11Z"
    />
    <path
      fill="#fff"
      d="m.07 43.03-.05-2.1 3.85-1.28a3 3 0 0 0 1.86-1.79l4.66-12.4a3 3 0 0 1 3.75-1.8l2.53.84a1 1 0 0 0 1.21-.5l2.97-5.94a3 3 0 0 1 5.56.48l3.77 12.58a1 1 0 0 0 1.51.55l3.34-2.23a1 1 0 0 0 .33-.35l5.3-9.71a3 3 0 0 1 2.14-1.53l4.13-.69a3 3 0 0 1 2.41.66l3.9 3.24a1 1 0 0 0 1.34-.06l5.28-5.28c.05.85.08 1.75.1 2.73L56 22.41a3 3 0 0 1-4.04.19l-3.9-3.25a1 1 0 0 0-.8-.21l-4.13.69a1 1 0 0 0-.72.5l-5.3 9.72a3 3 0 0 1-.97 1.05l-3.34 2.23a3 3 0 0 1-4.53-1.63l-3.78-12.58a1 1 0 0 0-1.85-.16l-2.97 5.94a3 3 0 0 1-3.63 1.5l-2.53-.84a1 1 0 0 0-1.25.6l-4.65 12.4a5 5 0 0 1-3.1 3L.07 43.02Z"
    />
    <path
      fill="#fff"
      fill-rule="evenodd"
      d="M49.5 19a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z"
      clip-rule="evenodd"
    />
    <path fill="#fff" d="M45 .28v59.66l-2 .1V.19c.7.02 1.37.05 2 .1Z" />
    <path fill="#2BEE6C" d="M47.5 19a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z" />
    <path
      stroke="#fff"
      stroke-opacity=".1"
      d="M.5 25.01c0-4.63 0-8.08.24-10.8.25-2.7.73-4.64 1.66-6.28a14.5 14.5 0 0 1 5.42-5.41C9.46 1.58 11.39 1.1 14.1.85A133 133 0 0 1 24.9.61h10.2c4.63 0 8.08 0 10.8.24 2.7.25 4.65.73 6.28 1.67a14.5 14.5 0 0 1 5.42 5.4c.93 1.65 1.41 3.58 1.66 6.3.24 2.71.24 6.16.24 10.79v10.2c0 4.64 0 8.08-.24 10.8-.25 2.7-.73 4.65-1.66 6.28a14.5 14.5 0 0 1-5.42 5.42c-1.63.93-3.57 1.41-6.28 1.66-2.72.24-6.17.24-10.8.24H24.9c-4.63 0-8.08 0-10.8-.24-2.7-.25-4.64-.73-6.28-1.66a14.5 14.5 0 0 1-5.42-5.42C1.47 50.66 1 48.72.74 46.01A133 133 0 0 1 .5 35.2v-10.2Z"
    />
  </g>
  <defs>
    <clipPath id="a"><path fill="#fff" d="M0 0h60v60H0z" /></clipPath>
  </defs>
</svg>`,
        tQ = eo.YP`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <rect width="60" height="60" fill="#C653C6" rx="30" />
    <path
      fill="#E87DE8"
      d="M57.98.01v19.5a4.09 4.09 0 0 0-2.63 2.29L50.7 34.2a2 2 0 0 1-2.5 1.2l-2.53-.84a2 2 0 0 0-2.42 1l-2.97 5.94a2 2 0 0 1-3.7-.32L32.8 28.6a2 2 0 0 0-3.02-1.09l-3.35 2.23a2 2 0 0 0-.64.7l-5.3 9.72a2 2 0 0 1-1.43 1.01l-4.13.69a2 2 0 0 1-1.61-.44l-3.9-3.24a2 2 0 0 0-2.69.12L2.1 42.93.02 43V.01h57.96Z"
    />
    <path
      fill="#fff"
      d="m61.95 16.94.05 2.1-3.85 1.28a3 3 0 0 0-1.86 1.79l-4.65 12.4a3 3 0 0 1-3.76 1.8l-2.53-.84a1 1 0 0 0-1.2.5l-2.98 5.94a3 3 0 0 1-5.55-.48l-3.78-12.58a1 1 0 0 0-1.5-.55l-3.35 2.23a1 1 0 0 0-.32.35l-5.3 9.72a3 3 0 0 1-2.14 1.52l-4.14.69a3 3 0 0 1-2.41-.66l-3.9-3.24a1 1 0 0 0-1.34.06l-5.28 5.28c-.05-.84-.08-1.75-.1-2.73l3.97-3.96a3 3 0 0 1 4.04-.19l3.89 3.25a1 1 0 0 0 .8.21l4.14-.68a1 1 0 0 0 .71-.51l5.3-9.71a3 3 0 0 1 .97-1.06l3.34-2.23a3 3 0 0 1 4.54 1.63l3.77 12.58a1 1 0 0 0 1.86.16l2.96-5.93a3 3 0 0 1 3.64-1.5l2.52.83a1 1 0 0 0 1.25-.6l4.66-12.4a5 5 0 0 1 3.1-2.99l4.43-1.48Z"
    />
    <path
      fill="#fff"
      fill-rule="evenodd"
      d="M35.5 27a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z"
      clip-rule="evenodd"
    />
    <path fill="#fff" d="M31 0v60h-2V0h2Z" />
    <path fill="#E87DE8" d="M33.5 27a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z" />
  </g>
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="29.5" />
  <defs>
    <clipPath id="a"><rect width="60" height="60" fill="#fff" rx="30" /></clipPath>
  </defs>
</svg> `,
        tJ = eo.YP`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <rect width="60" height="60" fill="#987DE8" rx="30" />
    <path
      fill="#fff"
      fill-rule="evenodd"
      d="m15.48 28.37 11.97-19.3a3 3 0 0 1 5.1 0l11.97 19.3a6 6 0 0 1 .9 3.14v.03a6 6 0 0 1-1.16 3.56L33.23 50.2a4 4 0 0 1-6.46 0L15.73 35.1a6 6 0 0 1-1.15-3.54v-.03a6 6 0 0 1 .9-3.16Z"
      clip-rule="evenodd"
    />
    <path
      fill="#643CDD"
      d="M30.84 10.11a1 1 0 0 0-.84-.46V24.5l12.6 5.53a2 2 0 0 0-.28-1.4L30.84 10.11Z"
    />
    <path
      fill="#BDADEB"
      d="M30 9.65a1 1 0 0 0-.85.46L17.66 28.64a2 2 0 0 0-.26 1.39L30 24.5V9.65Z"
    />
    <path
      fill="#643CDD"
      d="M30 50.54a1 1 0 0 0 .8-.4l11.24-15.38c.3-.44-.2-1-.66-.73l-9.89 5.68a3 3 0 0 1-1.5.4v10.43Z"
    />
    <path
      fill="#BDADEB"
      d="m17.97 34.76 11.22 15.37c.2.28.5.41.8.41V40.11a3 3 0 0 1-1.49-.4l-9.88-5.68c-.47-.27-.97.3-.65.73Z"
    />
    <path
      fill="#401AB3"
      d="M42.6 30.03 30 24.5v13.14a3 3 0 0 0 1.5-.4l10.14-5.83a2 2 0 0 0 .95-1.38Z"
    />
    <path
      fill="#7C5AE2"
      d="M30 37.64V24.46l-12.6 5.57a2 2 0 0 0 .97 1.39l10.13 5.82a3 3 0 0 0 1.5.4Z"
    />
  </g>
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="29.5" />
  <defs>
    <clipPath id="a"><rect width="60" height="60" fill="#fff" rx="30" /></clipPath>
  </defs>
</svg> `,
        tX = eo.YP`<svg width="64" height="64" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
  <rect width="64" height="64" rx="30" fill="#1DC956"/>
  <rect x="0.5" y="0.5" width="63" height="63" rx="29.5" stroke="#141414" stroke-opacity="0.1"/>
  <path d="M32.4053 19.8031C35.3901 19.8031 38.0431 20.8349 40.1619 22.8247L45.9656 17.0211C42.4465 13.7416 37.8773 11.7333 32.4053 11.7333C24.4829 11.7333 17.6475 16.2841 14.3127 22.9168L21.056 28.1493C22.6589 23.359 27.136 19.8031 32.4053 19.8031Z" fill="#1DC956" stroke="white" stroke-width="2" stroke-linejoin="round"/>
  <path d="M32.4053 52.2667C37.8773 52.2667 42.465 50.4611 45.8182 47.3658L39.2407 42.2623C37.4351 43.4783 35.1321 44.2153 32.4053 44.2153C27.136 44.2153 22.6589 40.6594 21.056 35.8691L14.3127 41.1016C17.6475 47.7159 24.4829 52.2667 32.4053 52.2667Z" fill="#2BEE6C"/>
  <path d="M21.056 35.8507L19.5636 36.993L14.3127 41.0832M39.2407 42.2623L45.8182 47.3658C42.465 50.4611 37.8773 52.2667 32.4053 52.2667C24.4829 52.2667 17.6475 47.7159 14.3127 41.1016L21.056 35.8691C22.6589 40.6594 27.136 44.2153 32.4053 44.2153C35.1321 44.2153 37.4351 43.4783 39.2407 42.2623Z" stroke="white" stroke-width="2" stroke-linejoin="round"/>
  <path d="M51.8613 32.4606C51.8613 31.0235 51.7323 29.6417 51.4928 28.3151H32.4053V36.1638H43.3124C42.8334 38.688 41.3963 40.8252 39.2407 42.2623L45.8181 47.3658C49.6503 43.8283 51.8613 38.6327 51.8613 32.4606Z" fill="#1FAD7E" stroke="white" stroke-width="2" stroke-linejoin="round"/>
  <path d="M21.056 35.8507C20.6507 34.6347 20.4111 33.345 20.4111 32C20.4111 30.655 20.6507 29.3653 21.056 28.1493L14.3127 22.9169C12.9309 25.6437 12.1387 28.7205 12.1387 32C12.1387 35.2795 12.9309 38.3564 14.3127 41.0831L19.5636 36.993L21.056 35.8507Z" fill="#86F999"/>
  <path d="M21.056 35.8691L14.3127 41.1016M21.056 35.8507C20.6507 34.6347 20.4111 33.345 20.4111 32C20.4111 30.655 20.6507 29.3653 21.056 28.1493L14.3127 22.9169C12.9309 25.6437 12.1387 28.7205 12.1387 32C12.1387 35.2795 12.9309 38.3564 14.3127 41.0831L19.5636 36.993L21.056 35.8507Z" stroke="white" stroke-width="2" stroke-linejoin="round"/>
</svg>
`,
        t0 = eo.YP`<svg fill="none" viewBox="0 0 60 60">
  <rect width="60" height="60" fill="#1DC956" rx="3" />
  <path
    fill="#1FAD7E"
    stroke="#fff"
    stroke-width="2"
    d="m30.49 29.13-.49-.27-.49.27-12.77 7.1-.05.02c-.86.48-1.58.88-2.1 1.24-.54.37-1.04.81-1.28 1.45a3 3 0 0 0 0 2.12c.24.63.74 1.08 1.27 1.45.53.36 1.25.76 2.11 1.24l.05.03 6.33 3.51.17.1c2.33 1.3 3.72 2.06 5.22 2.32a9 9 0 0 0 3.08 0c1.5-.26 2.9-1.03 5.22-2.32l.18-.1 6.32-3.51.05-.03a26.9 26.9 0 0 0 2.1-1.24 3.21 3.21 0 0 0 1.28-1.45l-.94-.35.94.35a3 3 0 0 0 0-2.12l-.94.35.94-.35a3.21 3.21 0 0 0-1.27-1.45c-.53-.36-1.25-.76-2.11-1.24l-.05-.03-12.77-7.1Z"
  />
  <path
    fill="#2BEE6C"
    stroke="#fff"
    stroke-width="2"
    d="m30.49 19.13-.49-.27-.49.27-12.77 7.1-.05.02c-.86.48-1.58.88-2.1 1.24-.54.37-1.04.81-1.28 1.45a3 3 0 0 0 0 2.12c.24.63.74 1.08 1.27 1.45.53.36 1.25.76 2.11 1.24l.05.03 6.33 3.51.17.1c2.33 1.3 3.72 2.06 5.22 2.32a9 9 0 0 0 3.08 0c1.5-.26 2.9-1.03 5.22-2.32l.18-.1 6.32-3.51.05-.03a26.9 26.9 0 0 0 2.1-1.24 3.21 3.21 0 0 0 1.28-1.45l-.94-.35.94.35a3 3 0 0 0 0-2.12l-.94.35.94-.35a3.21 3.21 0 0 0-1.27-1.45c-.53-.36-1.25-.76-2.11-1.24l-.05-.03-12.77-7.1Z"
  />
  <path
    fill="#86F999"
    stroke="#fff"
    stroke-width="2"
    d="m46.69 21.06-.94-.35.94.35a3 3 0 0 0 0-2.12l-.94.35.94-.35a3.21 3.21 0 0 0-1.27-1.45c-.53-.36-1.25-.76-2.11-1.24l-.05-.03-6.32-3.51-.18-.1c-2.33-1.3-3.72-2.06-5.22-2.33a9 9 0 0 0-3.08 0c-1.5.27-2.9 1.04-5.22 2.33l-.17.1-6.33 3.51-.05.03c-.86.48-1.58.88-2.1 1.24-.54.37-1.04.81-1.28 1.45a3 3 0 0 0 0 2.12c.24.63.74 1.08 1.27 1.45.53.36 1.25.76 2.11 1.24l.05.03 6.33 3.51.17.1c2.33 1.3 3.72 2.06 5.22 2.32a9 9 0 0 0 3.08 0c1.5-.26 2.9-1.03 5.22-2.32l.18-.1 6.32-3.51.05-.03a26.9 26.9 0 0 0 2.1-1.24 3.21 3.21 0 0 0 1.28-1.45Z"
  />
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="2.5" />
</svg>`,
        t1 = eo.YP`<svg width="64" height="64" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
  <g clip-path="url(#clip0_241_31636)">
    <path d="M0 26.5595C0 16.6913 0 11.7572 2.1019 8.07217C3.5216 5.58318 5.58366 3.52111 8.07266 2.10141C11.7577 -0.000488281 16.6918 -0.000488281 26.56 -0.000488281H37.44C47.3082 -0.000488281 52.2423 -0.000488281 55.9273 2.10141C58.4163 3.52111 60.4784 5.58318 61.8981 8.07217C64 11.7572 64 16.6913 64 26.5595V37.4395C64 47.3077 64 52.2418 61.8981 55.9269C60.4784 58.4159 58.4163 60.4779 55.9273 61.8976C52.2423 63.9995 47.3082 63.9995 37.44 63.9995H26.56C16.6918 63.9995 11.7577 63.9995 8.07266 61.8976C5.58366 60.4779 3.5216 58.4159 2.1019 55.9269C0 52.2418 0 47.3077 0 37.4395V26.5595Z" fill="#794CFF"/>
    <path d="M0.5 26.5595C0.5 21.6163 0.50047 17.942 0.760736 15.0418C1.02039 12.1485 1.53555 10.0742 2.53621 8.3199C3.91155 5.90869 5.90917 3.91106 8.32039 2.53572C10.0747 1.53506 12.1489 1.01991 15.0423 0.760247C17.9425 0.499981 21.6168 0.499512 26.56 0.499512H37.44C42.3832 0.499512 46.0575 0.499981 48.9577 0.760247C51.8511 1.01991 53.9253 1.53506 55.6796 2.53572C58.0908 3.91106 60.0885 5.90869 61.4638 8.3199C62.4645 10.0742 62.9796 12.1485 63.2393 15.0418C63.4995 17.942 63.5 21.6163 63.5 26.5595V37.4395C63.5 42.3827 63.4995 46.057 63.2393 48.9572C62.9796 51.8506 62.4645 53.9248 61.4638 55.6791C60.0885 58.0903 58.0908 60.088 55.6796 61.4633C53.9253 62.464 51.8511 62.9791 48.9577 63.2388C46.0575 63.499 42.3832 63.4995 37.44 63.4995H26.56C21.6168 63.4995 17.9425 63.499 15.0423 63.2388C12.1489 62.9791 10.0747 62.464 8.32039 61.4633C5.90917 60.088 3.91155 58.0903 2.53621 55.6791C1.53555 53.9248 1.02039 51.8506 0.760736 48.9572C0.50047 46.057 0.5 42.3827 0.5 37.4395V26.5595Z" stroke="#141414" stroke-opacity="0.1"/>
    <path d="M40 39.4595C44.7824 36.693 48 31.5222 48 25.6C48 16.7634 40.8366 9.59998 32 9.59998C23.1634 9.59998 16 16.7634 16 25.6C16 31.5222 19.2176 36.693 24 39.4595V45.8144H40V39.4595Z" fill="#906EF7"/>
    <path d="M24 49.9689C24 51.8192 24 52.7444 24.3941 53.4353C24.6603 53.902 25.0469 54.2886 25.5136 54.5548C26.2046 54.9489 27.1297 54.9489 28.98 54.9489H35.02C36.8703 54.9489 37.7954 54.9489 38.4864 54.5548C38.9531 54.2886 39.3397 53.902 39.6059 53.4353C40 52.7444 40 51.8192 40 49.9689V45.8144H24V49.9689Z" fill="#906EF7"/>
    <path d="M24 45.8144V39.4595C19.2176 36.693 16 31.5222 16 25.6C16 16.7634 23.1634 9.59998 32 9.59998C40.8366 9.59998 48 16.7634 48 25.6C48 31.5222 44.7824 36.693 40 39.4595V45.8144M24 45.8144H40M24 45.8144V49.9689C24 51.8192 24 52.7444 24.3941 53.4353C24.6603 53.902 25.0469 54.2886 25.5136 54.5548C26.2046 54.9489 27.1297 54.9489 28.98 54.9489H35.02C36.8703 54.9489 37.7954 54.9489 38.4864 54.5548C38.9531 54.2886 39.3397 53.902 39.6059 53.4353C40 52.7444 40 51.8192 40 49.9689V45.8144" stroke="white" stroke-width="2" stroke-linejoin="round"/>
    <path d="M24 49.9689C24 51.8192 24 52.7444 24.3941 53.4353C24.6603 53.902 25.0469 54.2886 25.5136 54.5548C26.2046 54.9489 27.1297 54.9489 28.98 54.9489H35.02C36.8703 54.9489 37.7954 54.9489 38.4864 54.5548C38.9531 54.2886 39.3397 53.902 39.6059 53.4353C40 52.7444 40 51.8192 40 49.9689V45.8144H24V49.9689Z" fill="#643CDD" stroke="white" stroke-width="2" stroke-linejoin="round"/>
    <path d="M29.6735 26.9101V29.1109H34.0753V26.9101C34.0753 25.6945 35.0607 24.7092 36.2762 24.7092C37.4917 24.7092 38.4771 25.6945 38.4771 26.9101C38.4771 28.1256 37.4917 29.1109 36.2762 29.1109H34.0753H29.6735H27.4726C26.2571 29.1109 25.2717 28.1256 25.2717 26.9101C25.2717 25.6945 26.2571 24.7092 27.4726 24.7092C28.6881 24.7092 29.6735 25.6945 29.6735 26.9101Z" fill="#906EF7"/>
    <path d="M29.6735 45.3183V26.9101C29.6735 25.6945 28.6881 24.7092 27.4726 24.7092V24.7092C26.2571 24.7092 25.2717 25.6945 25.2717 26.9101V26.9101C25.2717 28.1256 26.2571 29.1109 27.4726 29.1109H36.2762C37.4917 29.1109 38.4771 28.1256 38.4771 26.9101V26.9101C38.4771 25.6945 37.4917 24.7092 36.2762 24.7092V24.7092C35.0607 24.7092 34.0753 25.6945 34.0753 26.9101V45.3183" stroke="white" stroke-width="2" stroke-linejoin="round"/>
  </g>
  <defs>
    <clipPath id="clip0_241_31636">
      <rect width="64" height="64" fill="white"/>
    </clipPath>
  </defs>
</svg>
`,
        t2 = eo.YP`<svg fill="none" viewBox="0 0 60 60">
  <rect width="60" height="60" fill="#C653C6" rx="3" />
  <path
    fill="#fff"
    d="M20.03 15.22C20 15.6 20 16.07 20 17v2.8c0 1.14 0 1.7-.2 2.12-.15.31-.3.5-.58.71-.37.28-1.06.42-2.43.7-.59.12-1.11.29-1.6.51a9 9 0 0 0-4.35 4.36C10 30 10 32.34 10 37c0 4.66 0 7 .84 8.8a9 9 0 0 0 4.36 4.36C17 51 19.34 51 24 51h12c4.66 0 7 0 8.8-.84a9 9 0 0 0 4.36-4.36C50 44 50 41.66 50 37c0-4.66 0-7-.84-8.8a9 9 0 0 0-4.36-4.36c-.48-.22-1-.39-1.6-.5-1.36-.29-2.05-.43-2.42-.7-.27-.22-.43-.4-.58-.72-.2-.42-.2-.98-.2-2.11V17c0-.93 0-1.4-.03-1.78a9 9 0 0 0-8.19-8.19C31.4 7 30.93 7 30 7s-1.4 0-1.78.03a9 9 0 0 0-8.19 8.19Z"
  />
  <path
    fill="#E87DE8"
    d="M22 17c0-.93 0-1.4.04-1.78a7 7 0 0 1 6.18-6.18C28.6 9 29.07 9 30 9s1.4 0 1.78.04a7 7 0 0 1 6.18 6.18c.04.39.04.85.04 1.78v4.5a1.5 1.5 0 0 1-3 0V17c0-.93 0-1.4-.08-1.78a4 4 0 0 0-3.14-3.14C31.39 12 30.93 12 30 12s-1.4 0-1.78.08a4 4 0 0 0-3.14 3.14c-.08.39-.08.85-.08 1.78v4.5a1.5 1.5 0 0 1-3 0V17Z"
  />
  <path
    fill="#E87DE8"
    fill-rule="evenodd"
    d="M12 36.62c0-4.32 0-6.48.92-8.09a7 7 0 0 1 2.61-2.61C17.14 25 19.3 25 23.62 25h6.86c.46 0 .7 0 .9.02 2.73.22 4.37 2.43 4.62 4.98.27-2.7 2.11-5 5.02-5A6.98 6.98 0 0 1 48 31.98v5.4c0 4.32 0 6.48-.92 8.09a7 7 0 0 1-2.61 2.61c-1.61.92-3.77.92-8.09.92h-5.86c-.46 0-.7 0-.9-.02-2.73-.22-4.37-2.43-4.62-4.98-.26 2.58-1.94 4.82-4.71 4.99l-.7.01c-.55 0-.82 0-1.05-.02a7 7 0 0 1-6.52-6.52c-.02-.23-.02-.5-.02-1.05v-4.79Zm21.24-.27a4 4 0 1 0-6.48 0 31.28 31.28 0 0 1 1.57 2.23c.17.4.17.81.17 1.24V42.5a1.5 1.5 0 0 0 3 0V39.82c0-.43 0-.85.17-1.24.09-.2.58-.87 1.57-2.23Z"
    clip-rule="evenodd"
  />
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="2.5" />
</svg>`,
        t3 = eo.YP`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <path
      fill="#EB8B47"
      d="M0 24.9c0-9.25 0-13.88 1.97-17.33a15 15 0 0 1 5.6-5.6C11.02 0 15.65 0 24.9 0h10.2c9.25 0 13.88 0 17.33 1.97a15 15 0 0 1 5.6 5.6C60 11.02 60 15.65 60 24.9v10.2c0 9.25 0 13.88-1.97 17.33a15 15 0 0 1-5.6 5.6C48.98 60 44.35 60 35.1 60H24.9c-9.25 0-13.88 0-17.33-1.97a15 15 0 0 1-5.6-5.6C0 48.98 0 44.35 0 35.1V24.9Z"
    />
    <path
      stroke="#062B2B"
      stroke-opacity=".1"
      d="M.5 24.9c0-4.64 0-8.08.24-10.8.25-2.7.73-4.65 1.66-6.28A14.5 14.5 0 0 1 7.82 2.4C9.46 1.47 11.39 1 14.1.74A133 133 0 0 1 24.9.5h10.2c4.63 0 8.08 0 10.8.24 2.7.25 4.65.73 6.28 1.66a14.5 14.5 0 0 1 5.42 5.42c.93 1.63 1.41 3.57 1.66 6.28.24 2.72.24 6.16.24 10.8v10.2c0 4.63 0 8.08-.24 10.8-.25 2.7-.73 4.64-1.66 6.28a14.5 14.5 0 0 1-5.42 5.41c-1.63.94-3.57 1.42-6.28 1.67-2.72.24-6.17.24-10.8.24H24.9c-4.63 0-8.08 0-10.8-.24-2.7-.25-4.64-.73-6.28-1.67a14.5 14.5 0 0 1-5.42-5.4C1.47 50.53 1 48.6.74 45.88A133 133 0 0 1 .5 35.1V24.9Z"
    />
    <path
      fill="#FF974C"
      stroke="#fff"
      stroke-width="2"
      d="M39.2 29.2a13 13 0 1 0-18.4 0l1.3 1.28a12.82 12.82 0 0 1 2.1 2.39 6 6 0 0 1 .6 1.47c.2.76.2 1.56.2 3.17v11.24c0 1.08 0 1.61.13 2.12a4 4 0 0 0 .41.98c.26.45.64.83 1.4 1.6l.3.29c.65.65.98.98 1.36 1.09.26.07.54.07.8 0 .38-.11.7-.44 1.36-1.1l3.48-3.47c.65-.65.98-.98 1.09-1.36a1.5 1.5 0 0 0 0-.8c-.1-.38-.44-.7-1.1-1.36l-.47-.48c-.65-.65-.98-.98-1.09-1.36a1.5 1.5 0 0 1 0-.8c.1-.38.44-.7 1.1-1.36l.47-.48c.65-.65.98-.98 1.09-1.36a1.5 1.5 0 0 0 0-.8c-.1-.38-.44-.7-1.1-1.36l-.48-.5c-.65-.64-.98-.97-1.08-1.35a1.5 1.5 0 0 1 0-.79c.1-.38.42-.7 1.06-1.36l5.46-5.55Z"
    />
    <circle cx="30" cy="17" r="4" fill="#EB8B47" stroke="#fff" stroke-width="2" />
  </g>
  <defs>
    <clipPath id="a"><path fill="#fff" d="M0 0h60v60H0z" /></clipPath>
  </defs>
</svg> `,
        t5 = eo.YP`<svg width="40" height="42" viewBox="0 0 40 42" fill="none">
<path opacity="0.7" d="M19.9526 41.9076L7.3877 34.655V26.1226L19.9526 33.3751V41.9076Z" fill="url(#paint0_linear_2113_32117)"/>
<path opacity="0.7" d="M19.9521 41.9076L32.5171 34.655V26.1226L19.9521 33.3751V41.9076Z" fill="url(#paint1_linear_2113_32117)"/>
<path opacity="0.7" d="M39.9095 7.34521V21.8562L32.5166 26.1225V11.6114L39.9095 7.34521Z" fill="url(#paint2_linear_2113_32117)"/>
<path d="M39.9099 7.34536L27.345 0.0927734L19.9521 4.359L32.5171 11.6116L39.9099 7.34536Z" fill="url(#paint3_linear_2113_32117)"/>
<path d="M0 7.34536L12.5649 0.0927734L19.9519 4.359L7.387 11.6116L0 7.34536Z" fill="#F969D3"/>
<path opacity="0.7" d="M0 7.34521V21.8562L7.387 26.1225V11.6114L0 7.34521Z" fill="url(#paint4_linear_2113_32117)"/>
<defs>
<linearGradient id="paint0_linear_2113_32117" x1="18.6099" y1="41.8335" x2="7.73529" y2="8.31842" gradientUnits="userSpaceOnUse">
<stop stop-color="#E98ADA"/>
<stop offset="1" stop-color="#7E4DBD"/>
</linearGradient>
<linearGradient id="paint1_linear_2113_32117" x1="26.2346" y1="26.1226" x2="26.2346" y2="41.9076" gradientUnits="userSpaceOnUse">
<stop stop-color="#719DED"/>
<stop offset="1" stop-color="#2545BE"/>
</linearGradient>
<linearGradient id="paint2_linear_2113_32117" x1="36.213" y1="7.34521" x2="36.213" y2="26.1225" gradientUnits="userSpaceOnUse">
<stop stop-color="#93EBFF"/>
<stop offset="1" stop-color="#197DDB"/>
</linearGradient>
<linearGradient id="paint3_linear_2113_32117" x1="29.931" y1="0.0927734" x2="38.2156" y2="14.8448" gradientUnits="userSpaceOnUse">
<stop stop-color="#F969D3"/>
<stop offset="1" stop-color="#4F51C0"/>
</linearGradient>
<linearGradient id="paint4_linear_2113_32117" x1="18.1251" y1="44.2539" x2="-7.06792" y2="15.2763" gradientUnits="userSpaceOnUse">
<stop stop-color="#E98ADA"/>
<stop offset="1" stop-color="#7E4DBD"/>
</linearGradient>
</defs>
</svg>`,
        t6 = eo.YP`
  <svg width="40" height="40" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#a)">
      <path
        d="M0 16.6c0-6.168 0-9.251 1.314-11.555a10 10 0 0 1 3.731-3.731C7.35 0 10.432 0 16.6 0h6.8c6.168 0 9.252 0 11.555 1.314a10 10 0 0 1 3.731 3.731C40 7.35 40 10.432 40 16.6v6.8c0 6.168 0 9.252-1.314 11.555a10 10 0 0 1-3.731 3.731C32.652 40 29.568 40 23.4 40h-6.8c-6.168 0-9.251 0-11.555-1.314a10 10 0 0 1-3.731-3.731C0 32.652 0 29.568 0 23.4v-6.8Z"
        fill="#7D00FF"
      />
      <path
        d="M.5 16.6c0-3.093 0-5.38.162-7.182.161-1.795.48-3.061 1.086-4.125a9.5 9.5 0 0 1 3.545-3.545C6.357 1.141 7.623.823 9.418.662 11.221.5 13.508.5 16.6.5h6.8c3.093 0 5.38 0 7.182.162 1.795.161 3.062.48 4.125 1.086a9.5 9.5 0 0 1 3.545 3.545c.607 1.064.925 2.33 1.086 4.125.161 1.803.162 4.09.162 7.182v6.8c0 3.093 0 5.38-.162 7.182-.161 1.795-.48 3.062-1.086 4.125a9.5 9.5 0 0 1-3.545 3.545c-1.063.607-2.33.925-4.125 1.086-1.803.161-4.09.162-7.182.162h-6.8c-3.093 0-5.38 0-7.182-.162-1.795-.161-3.061-.48-4.125-1.086a9.5 9.5 0 0 1-3.545-3.545c-.607-1.063-.925-2.33-1.086-4.125C.5 28.779.5 26.492.5 23.4v-6.8Z"
        stroke="#fff"
        stroke-opacity=".05"
      />
      <path
        d="M28.306 15.381a3.69 3.69 0 1 0 0-7.381 3.69 3.69 0 0 0 0 7.381ZM16.987 32a8.991 8.991 0 1 1 .016-17.983A8.991 8.991 0 0 1 16.988 32Z"
        fill="#fff"
      />
    </g>
    <defs>
      <clipPath id="a"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    </defs>
  </svg>
`,
        t4 = eo.YP`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <rect width="60" height="60" fill="#00ACE6" rx="30" />
    <circle cx="64" cy="39" r="50" fill="#1AC6FF" stroke="#fff" stroke-width="2" />
    <circle cx="78" cy="30" r="50" fill="#4DD2FF" stroke="#fff" stroke-width="2" />
    <circle cx="72" cy="15" r="35" fill="#80DFFF" stroke="#fff" stroke-width="2" />
    <circle cx="34" cy="-17" r="45" stroke="#fff" stroke-width="2" />
    <circle cx="34" cy="-5" r="50" stroke="#fff" stroke-width="2" />
    <circle cx="30" cy="45" r="4" fill="#4DD2FF" stroke="#fff" stroke-width="2" />
    <circle cx="39.5" cy="27.5" r="4" fill="#80DFFF" stroke="#fff" stroke-width="2" />
    <circle cx="16" cy="24" r="4" fill="#19C6FF" stroke="#fff" stroke-width="2" />
  </g>
  <rect width="59" height="59" x=".5" y=".5" stroke="#062B2B" stroke-opacity=".1" rx="29.5" />
  <defs>
    <clipPath id="a"><rect width="60" height="60" fill="#fff" rx="30" /></clipPath>
  </defs>
</svg>`,
        t8 = eo.YP`<svg fill="none" viewBox="0 0 60 60">
  <g clip-path="url(#a)">
    <rect width="60" height="60" fill="#C653C6" rx="3" />
    <path
      fill="#E87DE8"
      stroke="#fff"
      stroke-width="2"
      d="M52.1 47.34c0-4.24-1.44-9.55-5.9-12.4a2.86 2.86 0 0 0-1.6-3.89v-.82c0-1.19-.52-2.26-1.35-3a4.74 4.74 0 0 0-2.4-6.26v-5.5a11.31 11.31 0 1 0-22.63 0v2.15a3.34 3.34 0 0 0-1.18 5.05 4.74 4.74 0 0 0-.68 6.44A5.22 5.22 0 0 0 14 35.92c-3.06 4.13-6.1 8.3-6.1 15.64 0 2.67.37 4.86.74 6.39a20.3 20.3 0 0 0 .73 2.39l.02.04v.01l.92-.39-.92.4.26.6h38.26l.3-.49-.87-.51.86.5.02-.01.03-.07a16.32 16.32 0 0 0 .57-1.05c.36-.72.85-1.74 1.33-2.96a25.51 25.51 0 0 0 1.94-9.07Z"
    />
    <path
      fill="#fff"
      fill-rule="evenodd"
      d="M26.5 29.5c-3-.5-5.5-3-5.5-7v-7c0-.47 0-.7.03-.9a3 3 0 0 1 2.58-2.57c.2-.03.42-.03.89-.03 2 0 2.5-2.5 2.5-2.5s0 2.5 2.5 2.5c1.4 0 2.1 0 2.65.23a3 3 0 0 1 1.62 1.62c.23.55.23 1.25.23 2.65v6c0 4-3 7-6.5 7 1.35.23 4 0 6.5-2v9.53C34 38.5 31.5 40 28 40s-6-1.5-6-2.97L24 34l2.5 1.5v-6ZM26 47h4.5c2.5 0 3 4 3 5.5h-3l-1-1.5H26v-4Zm-6.25 5.5H24V57h-8c0-1 1-4.5 3.75-4.5Z"
      clip-rule="evenodd"
    />
  </g>
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="2.5" />
  <defs>
    <clipPath id="a"><rect width="60" height="60" fill="#fff" rx="3" /></clipPath>
  </defs>
</svg> `,
        t9 = eo.YP`<svg fill="none" viewBox="0 0 60 60">
  <rect width="60" height="60" fill="#794CFF" rx="3" />
  <path
    fill="#987DE8"
    stroke="#fff"
    stroke-width="2"
    d="M33 22.5v-1H16v5H8.5V36H13v-5h3v7.5h17V31h1v7.5h17v-17H34v5h-1v-4Z"
  />
  <path fill="#fff" d="M37.5 25h10v10h-10z" />
  <path fill="#4019B2" d="M42.5 25h5v10h-5z" />
  <path fill="#fff" d="M19.5 25h10v10h-10z" />
  <path fill="#4019B2" d="M24.5 25h5v10h-5z" />
  <path fill="#fff" d="M12 30.5h4V37h-4v-6.5Z" />
  <rect width="59" height="59" x=".5" y=".5" stroke="#fff" stroke-opacity=".1" rx="2.5" />
</svg>`,
        t7 = eo.YP`<svg width="60" height="60" viewBox="0 0 60 60" fill="none">
<g clip-path="url(#clip0_13859_31161)">
  <path d="M0 24.8995C0 15.6481 0 11.0223 1.97053 7.56763C3.3015 5.2342 5.23468 3.30101 7.56812 1.97004C11.0228 -0.000488281 15.6485 -0.000488281 24.9 -0.000488281H35.1C44.3514 -0.000488281 48.9772 -0.000488281 52.4319 1.97004C54.7653 3.30101 56.6985 5.2342 58.0295 7.56763C60 11.0223 60 15.6481 60 24.8995V35.0995C60 44.351 60 48.9767 58.0295 52.4314C56.6985 54.7648 54.7653 56.698 52.4319 58.029C48.9772 59.9995 44.3514 59.9995 35.1 59.9995H24.9C15.6485 59.9995 11.0228 59.9995 7.56812 58.029C5.23468 56.698 3.3015 54.7648 1.97053 52.4314C0 48.9767 0 44.351 0 35.0995V24.8995Z" fill="#EB8B47"/>
  <path d="M0.5 24.8995C0.5 20.2647 0.50047 16.8216 0.744315 14.1045C0.987552 11.3941 1.46987 9.45455 2.40484 7.81536C3.69145 5.55971 5.56019 3.69096 7.81585 2.40435C9.45504 1.46938 11.3946 0.987064 14.105 0.743826C16.8221 0.499981 20.2652 0.499512 24.9 0.499512H35.1C39.7348 0.499512 43.1779 0.499981 45.895 0.743826C48.6054 0.987064 50.545 1.46938 52.1841 2.40435C54.4398 3.69096 56.3086 5.55971 57.5952 7.81536C58.5301 9.45455 59.0124 11.3941 59.2557 14.1045C59.4995 16.8216 59.5 20.2647 59.5 24.8995V35.0995C59.5 39.7343 59.4995 43.1774 59.2557 45.8945C59.0124 48.6049 58.5301 50.5445 57.5952 52.1837C56.3086 54.4393 54.4398 56.3081 52.1841 57.5947C50.545 58.5296 48.6054 59.012 45.895 59.2552C43.1779 59.499 39.7348 59.4995 35.1 59.4995H24.9C20.2652 59.4995 16.8221 59.499 14.105 59.2552C11.3946 59.012 9.45504 58.5296 7.81585 57.5947C5.56019 56.3081 3.69145 54.4393 2.40484 52.1837C1.46987 50.5445 0.987552 48.6049 0.744315 45.8945C0.50047 43.1774 0.5 39.7343 0.5 35.0995V24.8995Z" stroke="#141414" stroke-opacity="0.1"/>
  <path d="M13 26.0335C13 21.7838 13 19.659 14.0822 18.1694C14.4318 17.6883 14.8548 17.2653 15.3359 16.9157C16.8255 15.8335 18.9503 15.8335 23.2 15.8335H36.8C41.0497 15.8335 43.1745 15.8335 44.6641 16.9157C45.1452 17.2653 45.5682 17.6883 45.9178 18.1694C47 19.659 47 21.7838 47 26.0335V33.9668C47 38.2165 47 40.3414 45.9178 41.831C45.5682 42.312 45.1452 42.7351 44.6641 43.0846C43.1745 44.1668 41.0497 44.1668 36.8 44.1668H23.2C18.9503 44.1668 16.8255 44.1668 15.3359 43.0846C14.8548 42.7351 14.4318 42.312 14.0822 41.831C13 40.3414 13 38.2165 13 33.9668V26.0335Z" fill="#FF974C" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  <path d="M39.5 36.667H36.6666" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/>
  <path d="M45.2 23.0645H14.8C14.0501 23.0645 13.6751 23.0645 13.4122 23.2554C13.3273 23.3171 13.2527 23.3918 13.191 23.4767C13 23.7395 13 24.1145 13 24.8645V27.2645C13 28.0144 13 28.3894 13.191 28.6522C13.2527 28.7371 13.3273 28.8118 13.4122 28.8735C13.6751 29.0645 14.0501 29.0645 14.8 29.0645H45.2C45.9499 29.0645 46.3249 29.0645 46.5878 28.8735C46.6727 28.8118 46.7473 28.7371 46.809 28.6522C47 28.3894 47 28.0144 47 27.2645V24.8645C47 24.1145 47 23.7395 46.809 23.4767C46.7473 23.3918 46.6727 23.3171 46.5878 23.2554C46.3249 23.0645 45.9499 23.0645 45.2 23.0645Z" fill="white" fill-opacity="0.4" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</g>
<defs>
  <clipPath id="clip0_13859_31161">
    <rect width="60" height="60" fill="white"/>
  </clipPath>
</defs>
</svg>`,
        re = eo.YP`
  <svg width="40" height="40" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#a)">
      <path
        d="M0 16.6c0-6.168 0-9.251 1.314-11.555a10 10 0 0 1 3.731-3.731C7.35 0 10.432 0 16.6 0h6.8c6.168 0 9.252 0 11.555 1.314a10 10 0 0 1 3.731 3.731C40 7.35 40 10.432 40 16.6v6.8c0 6.168 0 9.252-1.314 11.555a10 10 0 0 1-3.731 3.731C32.652 40 29.568 40 23.4 40h-6.8c-6.168 0-9.251 0-11.555-1.314a10 10 0 0 1-3.731-3.731C0 32.652 0 29.568 0 23.4v-6.8Z"
        fill="#fff"
      />
      <path
        d="M.5 16.6c0-3.093 0-5.38.162-7.182.161-1.795.48-3.061 1.086-4.125a9.5 9.5 0 0 1 3.545-3.545C6.357 1.141 7.623.823 9.418.662 11.221.5 13.508.5 16.6.5h6.8c3.093 0 5.38 0 7.182.162 1.795.161 3.062.48 4.125 1.086a9.5 9.5 0 0 1 3.545 3.545c.607 1.064.925 2.33 1.086 4.125.161 1.803.162 4.09.162 7.182v6.8c0 3.093 0 5.38-.162 7.182-.161 1.795-.48 3.062-1.086 4.125a9.5 9.5 0 0 1-3.545 3.545c-1.063.607-2.33.925-4.125 1.086-1.803.161-4.09.162-7.182.162h-6.8c-3.093 0-5.38 0-7.182-.162-1.795-.161-3.061-.48-4.125-1.086a9.5 9.5 0 0 1-3.545-3.545c-.607-1.063-.925-2.33-1.086-4.125C.5 28.779.5 26.492.5 23.4v-6.8Z"
        stroke="#fff"
        stroke-opacity=".05"
      />
      <path
        d="M18.606 12.642a.781.781 0 0 0-.771.66l-1.281 8.125a.78.78 0 0 1 .77-.66h3.755a7.668 7.668 0 0 0 7.57-6.49 6.26 6.26 0 0 0 .075-.843c-.96-.504-2.089-.792-3.325-.792h-6.793Z"
        fill="#001C64"
      />
      <path
        d="M28.724 13.434c-.006.282-.03.564-.075.843a7.668 7.668 0 0 1-7.57 6.491h-3.754a.78.78 0 0 0-.771.66l-1.916 12.15a.634.634 0 0 0 .626.734h4.075a.781.781 0 0 0 .77-.66l1.074-6.807a.781.781 0 0 1 .772-.66h2.4a7.668 7.668 0 0 0 7.57-6.491c.415-2.651-.92-5.064-3.201-6.26Z"
        fill="#0070E0"
      />
      <path
        d="M13.977 7.226a.78.78 0 0 0-.771.658l-3.198 20.277a.634.634 0 0 0 .626.733h4.742l1.178-7.467 1.281-8.125a.782.782 0 0 1 .771-.66H25.4c1.237 0 2.364.289 3.325.792.065-3.4-2.74-6.208-6.599-6.208h-8.148Z"
        fill="#003087"
      />
    </g>
    <defs>
      <clipPath id="a"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    </defs>
  </svg>
`,
        rt = eo.YP`<svg width="64" height="64" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
  <g clip-path="url(#clip0_241_31635)">
    <path d="M0 26.5595C0 16.6913 0 11.7572 2.1019 8.07217C3.5216 5.58317 5.58366 3.52111 8.07266 2.10141C11.7577 -0.000488281 16.6918 -0.000488281 26.56 -0.000488281H37.44C47.3082 -0.000488281 52.2423 -0.000488281 55.9273 2.10141C58.4163 3.52111 60.4784 5.58317 61.8981 8.07217C64 11.7572 64 16.6913 64 26.5595V37.4395C64 47.3077 64 52.2418 61.8981 55.9268C60.4784 58.4158 58.4163 60.4779 55.9273 61.8976C52.2423 63.9995 47.3082 63.9995 37.44 63.9995H26.56C16.6918 63.9995 11.7577 63.9995 8.07266 61.8976C5.58366 60.4779 3.5216 58.4158 2.1019 55.9268C0 52.2418 0 47.3077 0 37.4395V26.5595Z" fill="#EB8B47"/>
    <path d="M0.5 26.5595C0.5 21.6163 0.50047 17.942 0.760736 15.0418C1.02039 12.1485 1.53555 10.0742 2.53621 8.3199C3.91155 5.90869 5.90917 3.91106 8.32039 2.53572C10.0747 1.53506 12.1489 1.01991 15.0423 0.760247C17.9425 0.499981 21.6168 0.499512 26.56 0.499512H37.44C42.3832 0.499512 46.0575 0.499981 48.9577 0.760247C51.8511 1.01991 53.9253 1.53506 55.6796 2.53572C58.0908 3.91106 60.0885 5.90869 61.4638 8.3199C62.4645 10.0742 62.9796 12.1485 63.2393 15.0418C63.4995 17.942 63.5 21.6163 63.5 26.5595V37.4395C63.5 42.3827 63.4995 46.057 63.2393 48.9572C62.9796 51.8506 62.4645 53.9248 61.4638 55.6791C60.0885 58.0903 58.0908 60.088 55.6796 61.4633C53.9253 62.464 51.8511 62.9791 48.9577 63.2388C46.0575 63.499 42.3832 63.4995 37.44 63.4995H26.56C21.6168 63.4995 17.9425 63.499 15.0423 63.2388C12.1489 62.9791 10.0747 62.464 8.32039 61.4633C5.90917 60.088 3.91155 58.0903 2.53621 55.6791C1.53555 53.9248 1.02039 51.8506 0.760736 48.9572C0.50047 46.057 0.5 42.3827 0.5 37.4395V26.5595Z" stroke="#141414" stroke-opacity="0.1"/>
    <path d="M28.1042 49.2329L13.1024 51.2077L15.0772 36.2059L37.1015 14.1815C39.2441 12.039 40.3154 10.9677 41.5718 10.624C42.4205 10.3918 43.3159 10.3918 44.1645 10.624C45.421 10.9677 46.4922 12.039 48.6348 14.1815L50.1286 15.6753C52.2711 17.8179 53.3424 18.8891 53.6861 20.1456C53.9183 20.9942 53.9183 21.8896 53.6861 22.7383C53.3424 23.9947 52.2711 25.066 50.1286 27.2086L28.1042 49.2329Z" fill="#FF974C" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M38.5962 20.5376L22.4199 36.7139" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M43.7727 25.714L27.5964 41.8903" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M22.3703 36.7635C19.3258 39.808 16.0198 36.6395 16.2616 35.0324" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M27.5466 41.9399C24.5034 44.9831 28.155 48.7098 29.2738 48.0475" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M27.5468 41.9398C23.428 46.0586 18.2516 40.8822 22.3704 36.7634" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M15.8191 50.5214C15.4711 49.5823 14.728 48.8392 13.7889 48.4912" stroke="#E4E7E7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M49.2862 29.5805L34.7275 15.0219" stroke="#E4E7E7" stroke-width="2" stroke-linejoin="round"/>
  </g>
  <defs>
    <clipPath id="clip0_241_31635">
      <rect width="64" height="64" fill="white"/>
    </clipPath>
  </defs>
</svg>
`,
        rn = eo.YP`<svg
  viewBox="0 0 60 60"
  fill="none"
>
  <g clip-path="url(#1)">
    <rect width="60" height="60" rx="30" fill="#00ACE6" />
    <path
      d="M59 73C59 89.0163 46.0163 102 30 102C13.9837 102 1 89.0163 1 73C1 56.9837 12 44 30 44C48 44 59 56.9837 59 73Z"
      fill="#1AC6FF"
      stroke="white"
      stroke-width="2"
    />
    <path
      d="M18.6904 19.9015C19.6264 15.3286 23.3466 11.8445 27.9708 11.2096C29.3231 11.024 30.6751 11.0238 32.0289 11.2096C36.6532 11.8445 40.3733 15.3286 41.3094 19.9015C41.4868 20.7681 41.6309 21.6509 41.7492 22.5271C41.8811 23.5041 41.8811 24.4944 41.7492 25.4715C41.6309 26.3476 41.4868 27.2304 41.3094 28.097C40.3733 32.6699 36.6532 36.154 32.0289 36.7889C30.6772 36.9744 29.3216 36.9743 27.9708 36.7889C23.3466 36.154 19.6264 32.6699 18.6904 28.097C18.513 27.2304 18.3689 26.3476 18.2506 25.4715C18.1186 24.4944 18.1186 23.5041 18.2506 22.5271C18.3689 21.6509 18.513 20.7681 18.6904 19.9015Z"
      fill="#1AC6FF"
      stroke="white"
      stroke-width="2"
    />
    <circle cx="24.5" cy="23.5" r="1.5" fill="white" />
    <circle cx="35.5" cy="23.5" r="1.5" fill="white" />
    <path
      d="M31 20L28 28H32"
      stroke="white"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
  </g>
  <rect x="0.5" y="0.5" width="59" height="59" rx="29.5" stroke="white" stroke-opacity="0.1" />
  <defs>
    <clipPath id="1">
      <rect width="60" height="60" rx="30" fill="white" />
    </clipPath>
  </defs>
</svg> `,
        ro = eo.YP`<svg fill="none" viewBox="0 0 80 80">
  <g clip-path="url(#a)">
    <path fill="url(#b)" d="M40 80a40 40 0 1 0 0-80 40 40 0 0 0 0 80Z" />
    <path
      stroke="#fff"
      stroke-opacity=".1"
      d="M79.5 40a39.5 39.5 0 1 1-79 0 39.5 39.5 0 0 1 79 0Z"
    />
    <path
      fill="#fff"
      d="m62.62 51.54-7.54 7.91a1.75 1.75 0 0 1-1.29.55H18.02a.9.9 0 0 1-.8-.52.84.84 0 0 1 .16-.92l7.55-7.92a1.75 1.75 0 0 1 1.28-.55h35.77a.87.87 0 0 1 .8.52.84.84 0 0 1-.16.93Zm-7.54-15.95a1.75 1.75 0 0 0-1.29-.54H18.02a.89.89 0 0 0-.8.51.84.84 0 0 0 .16.93l7.55 7.92a1.75 1.75 0 0 0 1.28.54h35.77a.89.89 0 0 0 .8-.51.84.84 0 0 0-.16-.93l-7.54-7.92ZM18.02 29.9h35.77a1.79 1.79 0 0 0 1.29-.54l7.54-7.92a.85.85 0 0 0 .16-.93.87.87 0 0 0-.8-.51H26.21a1.79 1.79 0 0 0-1.28.54l-7.55 7.92a.85.85 0 0 0-.16.93.89.89 0 0 0 .8.52Z"
    />
  </g>
  <defs>
    <linearGradient id="b" x1="6.75" x2="80.68" y1="81.91" y2="7.37" gradientUnits="userSpaceOnUse">
      <stop offset=".08" stop-color="#9945FF" />
      <stop offset=".3" stop-color="#8752F3" />
      <stop offset=".5" stop-color="#5497D5" />
      <stop offset=".6" stop-color="#43B4CA" />
      <stop offset=".72" stop-color="#28E0B9" />
      <stop offset=".97" stop-color="#19FB9B" />
    </linearGradient>
    <clipPath id="a"><path fill="#fff" d="M0 0h80v80H0z" /></clipPath>
  </defs>
</svg> `,
        ra = eo.YP`
  <svg width="40" height="40" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#a)">
      <path
        d="M0 16.6c0-6.168 0-9.251 1.314-11.555a10 10 0 0 1 3.731-3.731C7.35 0 10.432 0 16.6 0h6.8c6.168 0 9.252 0 11.555 1.314a10 10 0 0 1 3.731 3.731C40 7.35 40 10.432 40 16.6v6.8c0 6.168 0 9.252-1.314 11.555a10 10 0 0 1-3.731 3.731C32.652 40 29.568 40 23.4 40h-6.8c-6.168 0-9.251 0-11.555-1.314a10 10 0 0 1-3.731-3.731C0 32.652 0 29.568 0 23.4v-6.8Z"
        fill="#635BFF"
      />
      <path
        d="M.5 16.6c0-3.093 0-5.38.162-7.182.161-1.795.48-3.061 1.086-4.125a9.5 9.5 0 0 1 3.545-3.545C6.357 1.141 7.623.823 9.418.662 11.221.5 13.508.5 16.6.5h6.8c3.093 0 5.38 0 7.182.162 1.795.161 3.062.48 4.125 1.086a9.5 9.5 0 0 1 3.545 3.545c.607 1.064.925 2.33 1.086 4.125.161 1.803.162 4.09.162 7.182v6.8c0 3.093 0 5.38-.162 7.182-.161 1.795-.48 3.062-1.086 4.125a9.5 9.5 0 0 1-3.545 3.545c-1.063.607-2.33.925-4.125 1.086-1.803.161-4.09.162-7.182.162h-6.8c-3.093 0-5.38 0-7.182-.162-1.795-.161-3.061-.48-4.125-1.086a9.5 9.5 0 0 1-3.545-3.545c-.607-1.063-.925-2.33-1.086-4.125C.5 28.779.5 26.492.5 23.4v-6.8Z"
        stroke="#fff"
        stroke-opacity=".05"
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M18.299 15.147c0-1.028.844-1.424 2.242-1.424 2.004 0 4.536.607 6.54 1.688V9.213C24.892 8.343 22.73 8 20.541 8c-5.354 0-8.915 2.796-8.915 7.464 0 7.279 10.022 6.118 10.022 9.257 0 1.213-1.055 1.609-2.531 1.609-2.19 0-4.985-.897-7.2-2.11v6.277a18.283 18.283 0 0 0 7.2 1.503c5.485 0 9.257-2.716 9.257-7.437-.027-7.86-10.075-6.462-10.075-9.416Z"
        fill="#fff"
      />
    </g>
    <defs>
      <clipPath id="a"><path fill="#fff" d="M0 0h40v40H0z" /></clipPath>
    </defs>
  </svg>
`,
        rs = eo.YP`<svg viewBox="0 0 60 60" fill="none">
  <g clip-path="url(#1)">
    <path
      d="M0 24.9C0 15.6485 0 11.0228 1.97053 7.56812C3.3015 5.23468 5.23468 3.3015 7.56812 1.97053C11.0228 0 15.6485 0 24.9 0H35.1C44.3514 0 48.9772 0 52.4319 1.97053C54.7653 3.3015 56.6985 5.23468 58.0295 7.56812C60 11.0228 60 15.6485 60 24.9V35.1C60 44.3514 60 48.9772 58.0295 52.4319C56.6985 54.7653 54.7653 56.6985 52.4319 58.0295C48.9772 60 44.3514 60 35.1 60H24.9C15.6485 60 11.0228 60 7.56812 58.0295C5.23468 56.6985 3.3015 54.7653 1.97053 52.4319C0 48.9772 0 44.3514 0 35.1V24.9Z"
      fill="#794CFF"
    />
    <path
      d="M0.5 24.9C0.5 20.2652 0.50047 16.8221 0.744315 14.105C0.987552 11.3946 1.46987 9.45504 2.40484 7.81585C3.69145 5.56019 5.56019 3.69145 7.81585 2.40484C9.45504 1.46987 11.3946 0.987552 14.105 0.744315C16.8221 0.50047 20.2652 0.5 24.9 0.5H35.1C39.7348 0.5 43.1779 0.50047 45.895 0.744315C48.6054 0.987552 50.545 1.46987 52.1841 2.40484C54.4398 3.69145 56.3086 5.56019 57.5952 7.81585C58.5301 9.45504 59.0124 11.3946 59.2557 14.105C59.4995 16.8221 59.5 20.2652 59.5 24.9V35.1C59.5 39.7348 59.4995 43.1779 59.2557 45.895C59.0124 48.6054 58.5301 50.545 57.5952 52.1841C56.3086 54.4398 54.4398 56.3086 52.1841 57.5952C50.545 58.5301 48.6054 59.0124 45.895 59.2557C43.1779 59.4995 39.7348 59.5 35.1 59.5H24.9C20.2652 59.5 16.8221 59.4995 14.105 59.2557C11.3946 59.0124 9.45504 58.5301 7.81585 57.5952C5.56019 56.3086 3.69145 54.4398 2.40484 52.1841C1.46987 50.545 0.987552 48.6054 0.744315 45.895C0.50047 43.1779 0.5 39.7348 0.5 35.1V24.9Z"
      stroke="#062B2B"
      stroke-opacity="0.1"
    />
    <path
      d="M35.1403 31.5016C35.1193 30.9637 35.388 30.4558 35.8446 30.1707C36.1207 29.9982 36.4761 29.8473 36.7921 29.7685C37.3143 29.6382 37.8664 29.7977 38.2386 30.1864C38.8507 30.8257 39.3004 31.6836 39.8033 32.408C40.2796 33.0942 41.4695 33.2512 41.9687 32.5047C42.4839 31.7341 42.9405 30.8229 43.572 30.1399C43.9375 29.7447 44.4866 29.5756 45.0111 29.6967C45.3283 29.7701 45.6863 29.9147 45.9655 30.0823C46.4269 30.3595 46.7045 30.8626 46.6928 31.4008C46.6731 32.3083 46.3764 33.2571 46.2158 34.1473C46.061 35.0048 46.9045 35.8337 47.7592 35.664C48.6464 35.4878 49.5899 35.1747 50.497 35.1391C51.0348 35.1181 51.5427 35.3868 51.8279 35.8433C52.0004 36.1195 52.1513 36.4749 52.2301 36.7908C52.3604 37.3131 52.2009 37.8651 51.8121 38.2374C51.1729 38.8495 50.3151 39.2991 49.5908 39.8019C48.9046 40.2782 48.7473 41.4683 49.4939 41.9675C50.2644 42.4827 51.1757 42.9393 51.8587 43.5708C52.2539 43.9362 52.423 44.4854 52.3018 45.0099C52.2285 45.3271 52.0839 45.6851 51.9162 45.9642C51.6391 46.4257 51.1359 46.7032 50.5978 46.6916C49.6903 46.6719 48.7417 46.3753 47.8516 46.2146C46.9939 46.0598 46.1648 46.9035 46.3346 47.7583C46.5108 48.6454 46.8239 49.5888 46.8594 50.4958C46.8805 51.0336 46.6117 51.5415 46.1552 51.8267C45.879 51.9992 45.5236 52.15 45.2077 52.2289C44.6854 52.3592 44.1334 52.1997 43.7611 51.8109C43.1491 51.1718 42.6996 50.314 42.1968 49.5897C41.7203 48.9034 40.5301 48.7463 40.0309 49.493C39.5157 50.2634 39.0592 51.1746 38.4278 51.8574C38.0623 52.2527 37.5132 52.4218 36.9887 52.3006C36.6715 52.2273 36.3135 52.0826 36.0343 51.915C35.5729 51.6379 35.2953 51.1347 35.307 50.5966C35.3267 49.6891 35.6233 48.7405 35.7839 47.8505C35.9388 46.9928 35.0951 46.1636 34.2402 46.3334C33.3531 46.5096 32.4098 46.8227 31.5028 46.8582C30.9649 46.8793 30.457 46.6105 30.1719 46.154C29.9994 45.8778 29.8485 45.5224 29.7697 45.2065C29.6394 44.6842 29.7989 44.1322 30.1877 43.7599C30.8269 43.1479 31.6847 42.6982 32.4091 42.1954C33.0954 41.7189 33.2522 40.5289 32.5056 40.0297C31.7351 39.5145 30.824 39.058 30.1411 38.4265C29.7459 38.0611 29.5768 37.5119 29.698 36.9875C29.7713 36.6702 29.9159 36.3122 30.0836 36.0331C30.3607 35.5717 30.8638 35.2941 31.402 35.3058C32.3095 35.3255 33.2583 35.6221 34.1485 35.7828C35.006 35.9376 35.8349 35.094 35.6652 34.2393C35.489 33.3521 35.1759 32.4087 35.1403 31.5016Z"
      fill="#906EF7"
      stroke="white"
      stroke-width="2"
    />
    <path
      d="M20.7706 8.22357C20.9036 7.51411 21.5231 7 22.2449 7H23.7551C24.4769 7 25.0964 7.51411 25.2294 8.22357C25.5051 9.69403 25.4829 11.6321 27.1202 12.2606C27.3092 12.3331 27.4958 12.4105 27.6798 12.4926C29.2818 13.2072 30.6374 11.8199 31.8721 10.9752C32.4678 10.5676 33.2694 10.6421 33.7798 11.1525L34.8477 12.2204C35.3581 12.7308 35.4326 13.5323 35.025 14.128C34.1802 15.3627 32.7931 16.7183 33.5077 18.3202C33.5898 18.5043 33.6672 18.6909 33.7398 18.88C34.3683 20.5171 36.3061 20.4949 37.7764 20.7706C38.4859 20.9036 39 21.5231 39 22.2449V23.7551C39 24.4769 38.4859 25.0964 37.7764 25.2294C36.3061 25.5051 34.3685 25.483 33.7401 27.1201C33.6675 27.3093 33.59 27.4961 33.5079 27.6803C32.7934 29.282 34.1803 30.6374 35.025 31.8719C35.4326 32.4677 35.3581 33.2692 34.8477 33.7796L33.7798 34.8475C33.2694 35.3579 32.4678 35.4324 31.8721 35.0248C30.6376 34.1801 29.2823 32.7934 27.6806 33.508C27.4962 33.5903 27.3093 33.6678 27.12 33.7405C25.483 34.3688 25.5051 36.3062 25.2294 37.7764C25.0964 38.4859 24.4769 39 23.7551 39H22.2449C21.5231 39 20.9036 38.4859 20.7706 37.7764C20.4949 36.3062 20.517 34.3688 18.88 33.7405C18.6908 33.6678 18.5039 33.5903 18.3196 33.5081C16.7179 32.7936 15.3625 34.1804 14.1279 35.0251C13.5322 35.4327 12.7307 35.3582 12.2203 34.8478L11.1524 33.7799C10.642 33.2695 10.5675 32.4679 10.9751 31.8722C11.8198 30.6376 13.2067 29.2822 12.4922 27.6804C12.41 27.4962 12.3325 27.3093 12.2599 27.1201C11.6315 25.483 9.69392 25.5051 8.22357 25.2294C7.51411 25.0964 7 24.4769 7 23.7551V22.2449C7 21.5231 7.51411 20.9036 8.22357 20.7706C9.69394 20.4949 11.6317 20.5171 12.2602 18.88C12.3328 18.6909 12.4103 18.5042 12.4924 18.3201C13.207 16.7181 11.8198 15.3625 10.975 14.1278C10.5674 13.5321 10.6419 12.7305 11.1523 12.2201L12.2202 11.1522C12.7306 10.6418 13.5322 10.5673 14.1279 10.9749C15.3626 11.8197 16.7184 13.2071 18.3204 12.4925C18.5044 12.4105 18.6909 12.3331 18.8799 12.2606C20.5171 11.6321 20.4949 9.69403 20.7706 8.22357Z"
      fill="#906EF7"
      stroke="white"
      stroke-width="2"
    />
    <circle cx="23" cy="23" r="6" fill="#794CFF" stroke="white" stroke-width="2" />
    <circle cx="41" cy="41" r="4" fill="#794CFF" stroke="white" stroke-width="2" />
  </g>
  <defs>
    <clipPath id="1">
      <rect width="60" height="60" fill="white" />
    </clipPath>
  </defs>
</svg> `;
      var rl = eo.iv`
  :host {
    display: block;
    width: var(--local-size);
    height: var(--local-size);
  }

  :host svg {
    width: 100%;
    height: 100%;
  }
`,
        wui_visual_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rc = {
          browser: tK,
          dao: tG,
          defi: tY,
          defiAlt: tQ,
          eth: tJ,
          layers: t0,
          lock: t2,
          login: t3,
          network: t4,
          nft: t8,
          noun: t9,
          profile: rn,
          system: rs,
          coinbase: tZ,
          meld: t5,
          onrampCard: t7,
          moonpay: t6,
          stripe: ra,
          paypal: re,
          google: tX,
          pencil: rt,
          lightbulb: t1,
          solana: ro,
        },
        ru = class extends eo.oi {
          constructor() {
            super(...arguments), (this.name = "browser"), (this.size = "md");
          }
          render() {
            return (
              (this.style.cssText = `
       --local-size: var(--wui-visual-size-${this.size});
   `),
              eo.dy`${rc[this.name]}`
            );
          }
        };
      (ru.styles = [ec, rl]),
        wui_visual_decorate([(0, ef.Cb)()], ru.prototype, "name", void 0),
        wui_visual_decorate([(0, ef.Cb)()], ru.prototype, "size", void 0),
        (ru = wui_visual_decorate([customElement("wui-visual")], ru));
      var rd = W(35592);
      let rh = {
        getSpacingStyles: (s, x) =>
          Array.isArray(s)
            ? s[x]
              ? `var(--wui-spacing-${s[x]})`
              : void 0
            : "string" == typeof s
            ? `var(--wui-spacing-${s})`
            : void 0,
        getFormattedDate: (s) =>
          new Intl.DateTimeFormat("en-US", {
            month: "short",
            day: "numeric",
          }).format(s),
        getHostName(s) {
          try {
            let x = new URL(s);
            return x.hostname;
          } catch (s) {
            return "";
          }
        },
        getTruncateString: ({
          string: s,
          charsStart: x,
          charsEnd: W,
          truncate: X,
        }) =>
          s.length <= x + W
            ? s
            : "end" === X
            ? `${s.substring(0, x)}...`
            : "start" === X
            ? `...${s.substring(s.length - W)}`
            : `${s.substring(0, Math.floor(x))}...${s.substring(
                s.length - Math.floor(W)
              )}`,
        generateAvatarColors(s) {
          let x = s
              .toLowerCase()
              .replace(/^0x/iu, "")
              .replace(/[^a-f0-9]/gu, ""),
            W = x.substring(0, 6).padEnd(6, "0"),
            X = this.hexToRgb(W),
            ee = getComputedStyle(document.documentElement).getPropertyValue(
              "--w3m-border-radius-master"
            ),
            et = Number(ee?.replace("px", "")),
            er = 100 - 3 * et,
            ei = `${er}% ${er}% at 65% 40%`,
            eo = [];
          for (let s = 0; s < 5; s += 1) {
            let x = this.tintColor(X, 0.15 * s);
            eo.push(`rgb(${x[0]}, ${x[1]}, ${x[2]})`);
          }
          return `
    --local-color-1: ${eo[0]};
    --local-color-2: ${eo[1]};
    --local-color-3: ${eo[2]};
    --local-color-4: ${eo[3]};
    --local-color-5: ${eo[4]};
    --local-radial-circle: ${ei}
   `;
        },
        hexToRgb(s) {
          let x = parseInt(s, 16);
          return [(x >> 16) & 255, (x >> 8) & 255, 255 & x];
        },
        tintColor(s, x) {
          let [W, X, ee] = s;
          return [
            Math.round(W + (255 - W) * x),
            Math.round(X + (255 - X) * x),
            Math.round(ee + (255 - ee) * x),
          ];
        },
        isNumber: (s) => /^[0-9]+$/u.test(s),
        getColorTheme: (s) =>
          s ||
          ("undefined" != typeof window && window.matchMedia
            ? window.matchMedia("(prefers-color-scheme: dark)").matches
              ? "dark"
              : "light"
            : "dark"),
        splitBalance(s) {
          let x = s.split(".");
          return 2 === x.length ? [x[0], x[1]] : ["0", "00"];
        },
        roundNumber(s, x, W) {
          let X = s.toString().length >= x ? Number(s).toFixed(W) : s;
          return X;
        },
        formatNumberToLocalString: (s, x = 2) =>
          void 0 === s
            ? "0.00"
            : "number" == typeof s
            ? s.toLocaleString("en-US", {
                maximumFractionDigits: x,
                minimumFractionDigits: x,
              })
            : parseFloat(s).toLocaleString("en-US", {
                maximumFractionDigits: x,
                minimumFractionDigits: x,
              }),
      };
      var rp = eo.iv`
  :host {
    display: flex;
    width: inherit;
    height: inherit;
  }
`,
        wui_flex_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rf = class extends eo.oi {
        render() {
          return (
            (this.style.cssText = `
      flex-direction: ${this.flexDirection};
      flex-wrap: ${this.flexWrap};
      flex-basis: ${this.flexBasis};
      flex-grow: ${this.flexGrow};
      flex-shrink: ${this.flexShrink};
      align-items: ${this.alignItems};
      justify-content: ${this.justifyContent};
      column-gap: ${this.columnGap && `var(--wui-spacing-${this.columnGap})`};
      row-gap: ${this.rowGap && `var(--wui-spacing-${this.rowGap})`};
      gap: ${this.gap && `var(--wui-spacing-${this.gap})`};
      padding-top: ${this.padding && rh.getSpacingStyles(this.padding, 0)};
      padding-right: ${this.padding && rh.getSpacingStyles(this.padding, 1)};
      padding-bottom: ${this.padding && rh.getSpacingStyles(this.padding, 2)};
      padding-left: ${this.padding && rh.getSpacingStyles(this.padding, 3)};
      margin-top: ${this.margin && rh.getSpacingStyles(this.margin, 0)};
      margin-right: ${this.margin && rh.getSpacingStyles(this.margin, 1)};
      margin-bottom: ${this.margin && rh.getSpacingStyles(this.margin, 2)};
      margin-left: ${this.margin && rh.getSpacingStyles(this.margin, 3)};
    `),
            eo.dy`<slot></slot>`
          );
        }
      };
      (rf.styles = [ec, rp]),
        wui_flex_decorate(
          [(0, ef.Cb)()],
          rf.prototype,
          "flexDirection",
          void 0
        ),
        wui_flex_decorate([(0, ef.Cb)()], rf.prototype, "flexWrap", void 0),
        wui_flex_decorate([(0, ef.Cb)()], rf.prototype, "flexBasis", void 0),
        wui_flex_decorate([(0, ef.Cb)()], rf.prototype, "flexGrow", void 0),
        wui_flex_decorate([(0, ef.Cb)()], rf.prototype, "flexShrink", void 0),
        wui_flex_decorate([(0, ef.Cb)()], rf.prototype, "alignItems", void 0),
        wui_flex_decorate(
          [(0, ef.Cb)()],
          rf.prototype,
          "justifyContent",
          void 0
        ),
        wui_flex_decorate([(0, ef.Cb)()], rf.prototype, "columnGap", void 0),
        wui_flex_decorate([(0, ef.Cb)()], rf.prototype, "rowGap", void 0),
        wui_flex_decorate([(0, ef.Cb)()], rf.prototype, "gap", void 0),
        wui_flex_decorate([(0, ef.Cb)()], rf.prototype, "padding", void 0),
        wui_flex_decorate([(0, ef.Cb)()], rf.prototype, "margin", void 0),
        (rf = wui_flex_decorate([customElement("wui-flex")], rf));
      var rg = eo.iv`
  :host {
    display: block;
    width: var(--local-width);
    height: var(--local-height);
    border-radius: var(--wui-border-radius-3xl);
    box-shadow: 0 0 0 8px var(--wui-color-gray-glass-005);
    overflow: hidden;
    position: relative;
  }

  :host([data-variant='generated']) {
    --mixed-local-color-1: var(--local-color-1);
    --mixed-local-color-2: var(--local-color-2);
    --mixed-local-color-3: var(--local-color-3);
    --mixed-local-color-4: var(--local-color-4);
    --mixed-local-color-5: var(--local-color-5);
  }

  @supports (background: color-mix(in srgb, white 50%, black)) {
    :host([data-variant='generated']) {
      --mixed-local-color-1: color-mix(
        in srgb,
        var(--w3m-color-mix) var(--w3m-color-mix-strength),
        var(--local-color-1)
      );
      --mixed-local-color-2: color-mix(
        in srgb,
        var(--w3m-color-mix) var(--w3m-color-mix-strength),
        var(--local-color-2)
      );
      --mixed-local-color-3: color-mix(
        in srgb,
        var(--w3m-color-mix) var(--w3m-color-mix-strength),
        var(--local-color-3)
      );
      --mixed-local-color-4: color-mix(
        in srgb,
        var(--w3m-color-mix) var(--w3m-color-mix-strength),
        var(--local-color-4)
      );
      --mixed-local-color-5: color-mix(
        in srgb,
        var(--w3m-color-mix) var(--w3m-color-mix-strength),
        var(--local-color-5)
      );
    }
  }

  :host([data-variant='generated']) {
    box-shadow: 0 0 0 8px var(--wui-color-gray-glass-005);
    background: radial-gradient(
      var(--local-radial-circle),
      #fff 0.52%,
      var(--mixed-local-color-5) 31.25%,
      var(--mixed-local-color-3) 51.56%,
      var(--mixed-local-color-2) 65.63%,
      var(--mixed-local-color-1) 82.29%,
      var(--mixed-local-color-4) 100%
    );
  }

  :host([data-variant='default']) {
    box-shadow: 0 0 0 8px var(--wui-color-gray-glass-005);
    background: radial-gradient(
      75.29% 75.29% at 64.96% 24.36%,
      #fff 0.52%,
      #f5ccfc 31.25%,
      #dba4f5 51.56%,
      #9a8ee8 65.63%,
      #6493da 82.29%,
      #6ebdea 100%
    );
  }
`,
        wui_avatar_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rm = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.imageSrc = void 0),
            (this.alt = void 0),
            (this.address = void 0),
            (this.size = "xl");
        }
        render() {
          return (
            (this.style.cssText = `
    --local-width: var(--wui-icon-box-size-${this.size});
    --local-height: var(--wui-icon-box-size-${this.size});
    `),
            eo.dy`${this.visualTemplate()}`
          );
        }
        visualTemplate() {
          if (this.imageSrc)
            return (
              (this.dataset.variant = "image"),
              eo.dy`<wui-image src=${this.imageSrc} alt=${
                this.alt ?? "avatar"
              }></wui-image>`
            );
          if (this.address) {
            this.dataset.variant = "generated";
            let s = rh.generateAvatarColors(this.address);
            return (
              (this.style.cssText += `
 ${s}`),
              null
            );
          }
          return (this.dataset.variant = "default"), null;
        }
      };
      (rm.styles = [ec, rg]),
        wui_avatar_decorate([(0, ef.Cb)()], rm.prototype, "imageSrc", void 0),
        wui_avatar_decorate([(0, ef.Cb)()], rm.prototype, "alt", void 0),
        wui_avatar_decorate([(0, ef.Cb)()], rm.prototype, "address", void 0),
        wui_avatar_decorate([(0, ef.Cb)()], rm.prototype, "size", void 0),
        (rm = wui_avatar_decorate([customElement("wui-avatar")], rm));
      var rw = eo.iv`
  :host {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    position: relative;
    overflow: hidden;
    background-color: var(--wui-color-gray-glass-020);
    border-radius: var(--local-border-radius);
    border: var(--local-border);
    box-sizing: content-box;
    width: var(--local-size);
    height: var(--local-size);
    min-height: var(--local-size);
    min-width: var(--local-size);
  }

  @supports (background: color-mix(in srgb, white 50%, black)) {
    :host {
      background-color: color-mix(in srgb, var(--local-bg-value) var(--local-bg-mix), transparent);
    }
  }
`,
        wui_icon_box_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rb = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.size = "md"),
            (this.backgroundColor = "accent-100"),
            (this.iconColor = "accent-100"),
            (this.background = "transparent"),
            (this.border = !1),
            (this.borderColor = "wui-color-bg-125"),
            (this.icon = "copy");
        }
        render() {
          let s = this.iconSize || this.size,
            x = "lg" === this.size,
            W = "xl" === this.size,
            X = "gray" === this.background,
            ee = "opaque" === this.background,
            et =
              ("accent-100" === this.backgroundColor && ee) ||
              ("success-100" === this.backgroundColor && ee) ||
              ("error-100" === this.backgroundColor && ee) ||
              ("inverse-100" === this.backgroundColor && ee),
            er = `var(--wui-color-${this.backgroundColor})`;
          return (
            et
              ? (er = `var(--wui-icon-box-bg-${this.backgroundColor})`)
              : X && (er = `var(--wui-color-gray-${this.backgroundColor})`),
            (this.style.cssText = `
       --local-bg-value: ${er};
       --local-bg-mix: ${et || X ? "100%" : x ? "12%" : "16%"};
       --local-border-radius: var(--wui-border-radius-${
         x ? "xxs" : W ? "s" : "3xl"
       });
       --local-size: var(--wui-icon-box-size-${this.size});
       --local-border: ${
         "wui-color-bg-125" === this.borderColor ? "2px" : "1px"
       } solid ${this.border ? `var(--${this.borderColor})` : "transparent"}
   `),
            eo.dy` <wui-icon color=${this.iconColor} size=${s} name=${this.icon}></wui-icon> `
          );
        }
      };
      (rb.styles = [ec, eu, rw]),
        wui_icon_box_decorate([(0, ef.Cb)()], rb.prototype, "size", void 0),
        wui_icon_box_decorate(
          [(0, ef.Cb)()],
          rb.prototype,
          "backgroundColor",
          void 0
        ),
        wui_icon_box_decorate(
          [(0, ef.Cb)()],
          rb.prototype,
          "iconColor",
          void 0
        ),
        wui_icon_box_decorate([(0, ef.Cb)()], rb.prototype, "iconSize", void 0),
        wui_icon_box_decorate(
          [(0, ef.Cb)()],
          rb.prototype,
          "background",
          void 0
        ),
        wui_icon_box_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rb.prototype,
          "border",
          void 0
        ),
        wui_icon_box_decorate(
          [(0, ef.Cb)()],
          rb.prototype,
          "borderColor",
          void 0
        ),
        wui_icon_box_decorate([(0, ef.Cb)()], rb.prototype, "icon", void 0),
        (rb = wui_icon_box_decorate([customElement("wui-icon-box")], rb));
      var rv = eo.iv`
  :host {
    display: block;
  }

  button {
    border-radius: var(--wui-border-radius-3xl);
    background: var(--wui-color-gray-glass-002);
    display: flex;
    gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-3xs) var(--wui-spacing-xs) var(--wui-spacing-3xs)
      var(--wui-spacing-xs);
    border: 1px solid var(--wui-color-gray-glass-005);
  }

  button:disabled {
    background: var(--wui-color-gray-glass-015);
  }

  button:disabled > wui-text {
    color: var(--wui-color-gray-glass-015);
  }

  button:disabled > wui-flex > wui-text {
    color: var(--wui-color-gray-glass-015);
  }

  button:disabled > wui-image,
  button:disabled > wui-flex > wui-avatar {
    filter: grayscale(1);
  }

  button:has(wui-image) {
    padding: var(--wui-spacing-3xs) var(--wui-spacing-3xs) var(--wui-spacing-3xs)
      var(--wui-spacing-xs);
  }

  wui-text {
    color: var(--wui-color-fg-100);
  }

  wui-flex > wui-text {
    color: var(--wui-color-fg-200);
  }

  wui-image,
  wui-icon-box {
    border-radius: var(--wui-border-radius-3xl);
    width: 24px;
    height: 24px;
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
  }

  wui-flex {
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-005);
    background: var(--wui-color-gray-glass-005);
    padding: 4px var(--wui-spacing-m) 4px var(--wui-spacing-xxs);
  }

  button.local-no-balance {
    border-radius: 0px;
    border: none;
    background: transparent;
  }

  wui-avatar {
    width: 20px;
    height: 20px;
    box-shadow: 0 0 0 2px var(--wui-color-accent-glass-010);
  }

  @media (max-width: 500px) {
    button {
      gap: 0px;
      padding: var(--wui-spacing-3xs) var(--wui-spacing-xs) !important;
      height: 32px;
    }
    wui-image,
    wui-icon-box,
    button > wui-text {
      visibility: hidden;
      width: 0px;
      height: 0px;
    }
    button {
      border-radius: 0px;
      border: none;
      background: transparent;
      padding: 0px;
    }
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled > wui-flex > wui-text {
      color: var(--wui-color-fg-175);
    }

    button:active:enabled > wui-flex > wui-text {
      color: var(--wui-color-fg-175);
    }
  }
`,
        wui_account_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ry = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.networkSrc = void 0),
            (this.avatarSrc = void 0),
            (this.balance = void 0),
            (this.isUnsupportedChain = void 0),
            (this.disabled = !1),
            (this.loading = !1),
            (this.address = ""),
            (this.profileName = ""),
            (this.charsStart = 4),
            (this.charsEnd = 6);
        }
        render() {
          return eo.dy`
      <button
        ?disabled=${this.disabled}
        class=${(0, rd.o)(this.balance ? void 0 : "local-no-balance")}
      >
        ${this.balanceTemplate()}
        <wui-flex gap="xxs" alignItems="center">
          <wui-avatar
            .imageSrc=${this.avatarSrc}
            alt=${this.address}
            address=${this.address}
          ></wui-avatar>
          <wui-text variant="paragraph-600" color="inherit">
            ${
              this.address
                ? rh.getTruncateString({
                    string: this.profileName || this.address,
                    charsStart: this.profileName ? 18 : this.charsStart,
                    charsEnd: this.profileName ? 0 : this.charsEnd,
                    truncate: this.profileName ? "end" : "middle",
                  })
                : null
            }
          </wui-text>
        </wui-flex>
      </button>
    `;
        }
        balanceTemplate() {
          if (this.isUnsupportedChain)
            return eo.dy` <wui-icon-box
          size="sm"
          iconColor="error-100"
          backgroundColor="error-100"
          icon="warningCircle"
        ></wui-icon-box>
        <wui-text variant="paragraph-600" color="inherit"> Switch Network</wui-text>`;
          if (this.balance) {
            let s = this.networkSrc
                ? eo.dy`<wui-image src=${this.networkSrc}></wui-image>`
                : eo.dy`
            <wui-icon-box
              size="sm"
              iconColor="fg-200"
              backgroundColor="fg-300"
              icon="networkPlaceholder"
            ></wui-icon-box>
          `,
              x = this.loading
                ? eo.dy`<wui-loading-spinner size="md" color="fg-200"></wui-loading-spinner>`
                : eo.dy`<wui-text variant="paragraph-600" color="inherit"> ${this.balance}</wui-text>`;
            return eo.dy`${s} ${x}`;
          }
          return null;
        }
      };
      (ry.styles = [ec, eu, rv]),
        wui_account_button_decorate(
          [(0, ef.Cb)()],
          ry.prototype,
          "networkSrc",
          void 0
        ),
        wui_account_button_decorate(
          [(0, ef.Cb)()],
          ry.prototype,
          "avatarSrc",
          void 0
        ),
        wui_account_button_decorate(
          [(0, ef.Cb)()],
          ry.prototype,
          "balance",
          void 0
        ),
        wui_account_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ry.prototype,
          "isUnsupportedChain",
          void 0
        ),
        wui_account_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ry.prototype,
          "disabled",
          void 0
        ),
        wui_account_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ry.prototype,
          "loading",
          void 0
        ),
        wui_account_button_decorate(
          [(0, ef.Cb)()],
          ry.prototype,
          "address",
          void 0
        ),
        wui_account_button_decorate(
          [(0, ef.Cb)()],
          ry.prototype,
          "profileName",
          void 0
        ),
        wui_account_button_decorate(
          [(0, ef.Cb)()],
          ry.prototype,
          "charsStart",
          void 0
        ),
        wui_account_button_decorate(
          [(0, ef.Cb)()],
          ry.prototype,
          "charsEnd",
          void 0
        ),
        (ry = wui_account_button_decorate(
          [customElement("wui-account-button")],
          ry
        ));
      var r_ = eo.iv`
  :host {
    position: relative;
    background-color: var(--wui-color-gray-glass-002);
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--local-size);
    height: var(--local-size);
    border-radius: inherit;
    border-radius: var(--local-border-radius);
  }

  :host > wui-flex {
    overflow: hidden;
    border-radius: inherit;
    border-radius: var(--local-border-radius);
  }

  :host::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    border: 1px solid var(--wui-color-gray-glass-010);
    pointer-events: none;
  }

  :host([name='Extension'])::after {
    border: 1px solid var(--wui-color-accent-glass-010);
  }

  :host([data-wallet-icon='allWallets']) {
    background-color: var(--wui-all-wallets-bg-100);
  }

  :host([data-wallet-icon='allWallets'])::after {
    border: 1px solid var(--wui-color-accent-glass-010);
  }

  wui-icon[data-parent-size='inherit'] {
    width: 75%;
    height: 75%;
    align-items: center;
  }

  wui-icon[data-parent-size='sm'] {
    width: 18px;
    height: 18px;
  }

  wui-icon[data-parent-size='md'] {
    width: 24px;
    height: 24px;
  }

  wui-icon[data-parent-size='lg'] {
    width: 42px;
    height: 42px;
  }

  wui-icon[data-parent-size='full'] {
    width: 100%;
    height: 100%;
  }

  :host > wui-icon-box {
    position: absolute;
    overflow: hidden;
    right: -1px;
    bottom: -2px;
    z-index: 1;
    border: 2px solid var(--wui-color-bg-150, #1e1f1f);
    padding: 1px;
  }
`,
        wui_wallet_image_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rC = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.size = "md"),
            (this.name = ""),
            (this.installed = !1),
            (this.badgeSize = "xs");
        }
        render() {
          let s = "xxs";
          return (
            (s = "lg" === this.size ? "m" : "md" === this.size ? "xs" : "xxs"),
            (this.style.cssText = `
       --local-border-radius: var(--wui-border-radius-${s});
       --local-size: var(--wui-wallet-image-size-${this.size});
   `),
            this.walletIcon && (this.dataset.walletIcon = this.walletIcon),
            eo.dy`
      <wui-flex justifyContent="center" alignItems="center"> ${this.templateVisual()} </wui-flex>
    `
          );
        }
        templateVisual() {
          return this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc} alt=${this.name}></wui-image>`
            : this.walletIcon
            ? eo.dy`<wui-icon
        data-parent-size="md"
        size="md"
        color="inherit"
        name=${this.walletIcon}
      ></wui-icon>`
            : eo.dy`<wui-icon
      data-parent-size=${this.size}
      size="inherit"
      color="inherit"
      name="walletPlaceholder"
    ></wui-icon>`;
        }
      };
      (rC.styles = [eu, ec, r_]),
        wui_wallet_image_decorate([(0, ef.Cb)()], rC.prototype, "size", void 0),
        wui_wallet_image_decorate([(0, ef.Cb)()], rC.prototype, "name", void 0),
        wui_wallet_image_decorate(
          [(0, ef.Cb)()],
          rC.prototype,
          "imageSrc",
          void 0
        ),
        wui_wallet_image_decorate(
          [(0, ef.Cb)()],
          rC.prototype,
          "walletIcon",
          void 0
        ),
        wui_wallet_image_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rC.prototype,
          "installed",
          void 0
        ),
        wui_wallet_image_decorate(
          [(0, ef.Cb)()],
          rC.prototype,
          "badgeSize",
          void 0
        ),
        (rC = wui_wallet_image_decorate(
          [customElement("wui-wallet-image")],
          rC
        ));
      var rx = eo.iv`
  :host {
    position: relative;
    border-radius: var(--wui-border-radius-xxs);
    width: 40px;
    height: 40px;
    overflow: hidden;
    background: var(--wui-color-gray-glass-002);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: var(--wui-spacing-4xs);
    padding: 3.75px !important;
  }

  :host::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    border: 1px solid var(--wui-color-gray-glass-010);
    pointer-events: none;
  }

  :host > wui-wallet-image {
    width: 14px;
    height: 14px;
    border-radius: var(--wui-border-radius-5xs);
  }

  :host > wui-flex {
    padding: 2px;
    position: fixed;
    overflow: hidden;
    left: 34px;
    bottom: 8px;
    background: var(--dark-background-150, #1e1f1f);
    border-radius: 50%;
    z-index: 2;
    display: flex;
  }
`,
        wui_all_wallets_image_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rE = class extends eo.oi {
        constructor() {
          super(...arguments), (this.walletImages = []);
        }
        render() {
          let s = this.walletImages.length < 4;
          return eo.dy`${this.walletImages.slice(0, 4).map(
            ({ src: s, walletName: x }) => eo.dy`
            <wui-wallet-image
              size="inherit"
              imageSrc=${s}
              name=${(0, rd.o)(x)}
            ></wui-wallet-image>
          `
          )}
      ${
        s
          ? [...Array(4 - this.walletImages.length)].map(
              () =>
                eo.dy` <wui-wallet-image size="inherit" name=""></wui-wallet-image>`
            )
          : null
      }
      <wui-flex>
        <wui-icon-box
          size="xxs"
          iconSize="xxs"
          iconcolor="success-100"
          backgroundcolor="success-100"
          icon="checkmark"
          background="opaque"
        ></wui-icon-box>
      </wui-flex>`;
        }
      };
      (rE.styles = [ec, rx]),
        wui_all_wallets_image_decorate(
          [(0, ef.Cb)({ type: Array })],
          rE.prototype,
          "walletImages",
          void 0
        ),
        (rE = wui_all_wallets_image_decorate(
          [customElement("wui-all-wallets-image")],
          rE
        ));
      var rA = eo.iv`
  :host {
    width: var(--local-width);
    position: relative;
  }

  button {
    border: none;
    border-radius: var(--local-border-radius);
    width: var(--local-width);
    white-space: nowrap;
  }

  /* -- Sizes --------------------------------------------------- */
  button[data-size='md'] {
    padding: 8.2px var(--wui-spacing-l) 9px var(--wui-spacing-l);
    height: 36px;
  }

  button[data-size='md'][data-icon-left='true'][data-icon-right='false'] {
    padding: 8.2px var(--wui-spacing-l) 9px var(--wui-spacing-s);
  }

  button[data-size='md'][data-icon-right='true'][data-icon-left='false'] {
    padding: 8.2px var(--wui-spacing-s) 9px var(--wui-spacing-l);
  }

  button[data-size='lg'] {
    padding: var(--wui-spacing-m) var(--wui-spacing-2l);
    height: 48px;
  }

  /* -- Variants --------------------------------------------------------- */
  button[data-variant='main'] {
    background-color: var(--wui-color-accent-100);
    color: var(--wui-color-inverse-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='inverse'] {
    background-color: var(--wui-color-inverse-100);
    color: var(--wui-color-inverse-000);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='accent'] {
    background-color: var(--wui-color-accent-glass-010);
    color: var(--wui-color-accent-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  button[data-variant='accent-error'] {
    background: var(--wui-color-error-glass-015);
    color: var(--wui-color-error-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-error-glass-010);
  }

  button[data-variant='accent-success'] {
    background: var(--wui-color-success-glass-015);
    color: var(--wui-color-success-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-success-glass-010);
  }

  button[data-variant='neutral'] {
    background: transparent;
    color: var(--wui-color-fg-100);
    border: none;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  /* -- Focus states --------------------------------------------------- */
  button[data-variant='main']:focus-visible:enabled {
    background-color: var(--wui-color-accent-090);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0 0 0 4px var(--wui-color-accent-glass-020);
  }
  button[data-variant='inverse']:focus-visible:enabled {
    background-color: var(--wui-color-inverse-100);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-gray-glass-010),
      0 0 0 4px var(--wui-color-accent-glass-020);
  }
  button[data-variant='accent']:focus-visible:enabled {
    background-color: var(--wui-color-accent-glass-010);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0 0 0 4px var(--wui-color-accent-glass-020);
  }
  button[data-variant='accent-error']:focus-visible:enabled {
    background: var(--wui-color-error-glass-015);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-error-100),
      0 0 0 4px var(--wui-color-error-glass-020);
  }
  button[data-variant='accent-success']:focus-visible:enabled {
    background: var(--wui-color-success-glass-015);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-success-100),
      0 0 0 4px var(--wui-color-success-glass-020);
  }
  button[data-variant='neutral']:focus-visible:enabled {
    background: var(--wui-color-gray-glass-005);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-gray-glass-010),
      0 0 0 4px var(--wui-color-gray-glass-002);
  }

  /* -- Hover & Active states ----------------------------------------------------------- */
  @media (hover: hover) and (pointer: fine) {
    button[data-variant='main']:hover:enabled {
      background-color: var(--wui-color-accent-090);
    }

    button[data-variant='main']:active:enabled {
      background-color: var(--wui-color-accent-080);
    }

    button[data-variant='accent']:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }

    button[data-variant='accent']:active:enabled {
      background-color: var(--wui-color-accent-glass-020);
    }

    button[data-variant='accent-error']:hover:enabled {
      background: var(--wui-color-error-glass-020);
      color: var(--wui-color-error-100);
    }

    button[data-variant='accent-error']:active:enabled {
      background: var(--wui-color-error-glass-030);
      color: var(--wui-color-error-100);
    }

    button[data-variant='accent-success']:hover:enabled {
      background: var(--wui-color-success-glass-020);
      color: var(--wui-color-success-100);
    }

    button[data-variant='accent-success']:active:enabled {
      background: var(--wui-color-success-glass-030);
      color: var(--wui-color-success-100);
    }

    button[data-variant='neutral']:hover:enabled {
      background: var(--wui-color-gray-glass-002);
    }

    button[data-variant='neutral']:active:enabled {
      background: var(--wui-color-gray-glass-005);
    }

    button[data-size='lg'][data-icon-left='true'][data-icon-right='false'] {
      padding-left: var(--wui-spacing-m);
    }

    button[data-size='lg'][data-icon-right='true'][data-icon-left='false'] {
      padding-right: var(--wui-spacing-m);
    }
  }

  /* -- Disabled state --------------------------------------------------- */
  button:disabled {
    background-color: var(--wui-color-gray-glass-002);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    color: var(--wui-color-gray-glass-020);
    cursor: not-allowed;
  }

  button > wui-text {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    opacity: var(--local-opacity-100);
  }

  ::slotted(*) {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    opacity: var(--local-opacity-100);
  }

  wui-loading-spinner {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    opacity: var(--local-opacity-000);
  }
`,
        wui_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rS = {
          main: "inverse-100",
          inverse: "inverse-000",
          accent: "accent-100",
          "accent-error": "error-100",
          "accent-success": "success-100",
          neutral: "fg-100",
          disabled: "gray-glass-020",
        },
        rk = { lg: "paragraph-600", md: "small-600" },
        rT = { lg: "md", md: "md" },
        rI = class extends eo.oi {
          constructor() {
            super(...arguments),
              (this.size = "lg"),
              (this.disabled = !1),
              (this.fullWidth = !1),
              (this.loading = !1),
              (this.variant = "main"),
              (this.hasIconLeft = !1),
              (this.hasIconRight = !1),
              (this.borderRadius = "m");
          }
          render() {
            this.style.cssText = `
    --local-width: ${this.fullWidth ? "100%" : "auto"};
    --local-opacity-100: ${this.loading ? 0 : 1};
    --local-opacity-000: ${this.loading ? 1 : 0};
    --local-border-radius: var(--wui-border-radius-${this.borderRadius});
    `;
            let s = this.textVariant ?? rk[this.size];
            return eo.dy`
      <button
        data-variant=${this.variant}
        data-icon-left=${this.hasIconLeft}
        data-icon-right=${this.hasIconRight}
        data-size=${this.size}
        ?disabled=${this.disabled}
        ontouchstart
      >
        ${this.loadingTemplate()}
        <slot name="iconLeft" @slotchange=${() =>
          this.handleSlotLeftChange()}></slot>
        <wui-text variant=${s} color="inherit">
          <slot></slot>
        </wui-text>
        <slot name="iconRight" @slotchange=${() =>
          this.handleSlotRightChange()}></slot>
      </button>
    `;
          }
          handleSlotLeftChange() {
            this.hasIconLeft = !0;
          }
          handleSlotRightChange() {
            this.hasIconRight = !0;
          }
          loadingTemplate() {
            if (this.loading) {
              let s = rT[this.size],
                x = this.disabled ? rS.disabled : rS[this.variant];
              return eo.dy`<wui-loading-spinner color=${x} size=${s}></wui-loading-spinner>`;
            }
            return eo.dy``;
          }
        };
      (rI.styles = [ec, eu, rA]),
        wui_button_decorate([(0, ef.Cb)()], rI.prototype, "size", void 0),
        wui_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rI.prototype,
          "disabled",
          void 0
        ),
        wui_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rI.prototype,
          "fullWidth",
          void 0
        ),
        wui_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rI.prototype,
          "loading",
          void 0
        ),
        wui_button_decorate([(0, ef.Cb)()], rI.prototype, "variant", void 0),
        wui_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rI.prototype,
          "hasIconLeft",
          void 0
        ),
        wui_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rI.prototype,
          "hasIconRight",
          void 0
        ),
        wui_button_decorate(
          [(0, ef.Cb)()],
          rI.prototype,
          "borderRadius",
          void 0
        ),
        wui_button_decorate(
          [(0, ef.Cb)()],
          rI.prototype,
          "textVariant",
          void 0
        ),
        (rI = wui_button_decorate([customElement("wui-button")], rI));
      let rP = eo.YP`<svg  viewBox="0 0 48 54" fill="none">
  <path
    d="M43.4605 10.7248L28.0485 1.61089C25.5438 0.129705 22.4562 0.129705 19.9515 1.61088L4.53951 10.7248C2.03626 12.2051 0.5 14.9365 0.5 17.886V36.1139C0.5 39.0635 2.03626 41.7949 4.53951 43.2752L19.9515 52.3891C22.4562 53.8703 25.5438 53.8703 28.0485 52.3891L43.4605 43.2752C45.9637 41.7949 47.5 39.0635 47.5 36.114V17.8861C47.5 14.9365 45.9637 12.2051 43.4605 10.7248Z"
  />
</svg>`;
      var rR = eo.iv`
  :host {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 104px;
    row-gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-xs) 10px;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: clamp(0px, var(--wui-border-radius-xs), 20px);
    position: relative;
  }

  wui-shimmer[data-type='network'] {
    border: none;
    -webkit-clip-path: var(--wui-path-network);
    clip-path: var(--wui-path-network);
  }

  svg {
    position: absolute;
    width: 48px;
    height: 54px;
    z-index: 1;
  }

  svg > path {
    stroke: var(--wui-color-gray-glass-010);
    stroke-width: 1px;
  }

  @media (max-width: 350px) {
    :host {
      width: 100%;
    }
  }
`,
        wui_card_select_loader_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rN = class extends eo.oi {
        constructor() {
          super(...arguments), (this.type = "wallet");
        }
        render() {
          return eo.dy`
      ${this.shimmerTemplate()}
      <wui-shimmer width="56px" height="20px" borderRadius="xs"></wui-shimmer>
    `;
        }
        shimmerTemplate() {
          return "network" === this.type
            ? eo.dy` <wui-shimmer
          data-type=${this.type}
          width="48px"
          height="54px"
          borderRadius="xs"
        ></wui-shimmer>
        ${rP}`
            : eo.dy`<wui-shimmer width="56px" height="56px" borderRadius="xs"></wui-shimmer>`;
        }
      };
      (rN.styles = [ec, eu, rR]),
        wui_card_select_loader_decorate(
          [(0, ef.Cb)()],
          rN.prototype,
          "type",
          void 0
        ),
        (rN = wui_card_select_loader_decorate(
          [customElement("wui-card-select-loader")],
          rN
        ));
      let rO = eo.YP`<svg width="86" height="96" fill="none">
  <path
    d="M78.3244 18.926L50.1808 2.45078C45.7376 -0.150261 40.2624 -0.150262 35.8192 2.45078L7.6756 18.926C3.23322 21.5266 0.5 26.3301 0.5 31.5248V64.4752C0.5 69.6699 3.23322 74.4734 7.6756 77.074L35.8192 93.5492C40.2624 96.1503 45.7376 96.1503 50.1808 93.5492L78.3244 77.074C82.7668 74.4734 85.5 69.6699 85.5 64.4752V31.5248C85.5 26.3301 82.7668 21.5266 78.3244 18.926Z"
  />
</svg>`,
        rM = eo.YP`
  <svg fill="none" viewBox="0 0 36 40">
    <path
      d="M15.4 2.1a5.21 5.21 0 0 1 5.2 0l11.61 6.7a5.21 5.21 0 0 1 2.61 4.52v13.4c0 1.87-1 3.59-2.6 4.52l-11.61 6.7c-1.62.93-3.6.93-5.22 0l-11.6-6.7a5.21 5.21 0 0 1-2.61-4.51v-13.4c0-1.87 1-3.6 2.6-4.52L15.4 2.1Z"
    />
  </svg>
`;
      var rD = eo.iv`
  :host {
    position: relative;
    border-radius: inherit;
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--local-width);
    height: var(--local-height);
  }

  :host([data-round='true']) {
    background: var(--wui-color-gray-glass-002);
    border-radius: 100%;
    outline: 1px solid var(--wui-color-gray-glass-005);
  }

  svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    fill: var(--wui-color-gray-glass-002);
  }

  svg > path {
    stroke: var(--local-stroke);
  }

  wui-image {
    width: 100%;
    height: 100%;
    -webkit-clip-path: var(--local-path);
    clip-path: var(--local-path);
    background: var(--wui-color-gray-glass-002);
  }

  wui-icon {
    transform: translateY(-5%);
    width: var(--local-icon-size);
    height: var(--local-icon-size);
  }
`,
        wui_network_image_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rB = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.size = "md"),
            (this.name = "uknown"),
            (this.networkImagesBySize = { sm: rM, md: rP, lg: rO }),
            (this.selected = !1),
            (this.round = !1);
        }
        render() {
          return (
            this.round
              ? ((this.dataset.round = "true"),
                (this.style.cssText = `
      --local-width: var(--wui-spacing-3xl);
      --local-height: var(--wui-spacing-3xl);
      --local-icon-size: var(--wui-spacing-l);
    `))
              : (this.style.cssText = `

      --local-path: var(--wui-path-network-${this.size});
      --local-width:  var(--wui-width-network-${this.size});
      --local-height:  var(--wui-height-network-${this.size});
      --local-icon-size:  var(--wui-icon-size-network-${this.size});
    `),
            eo.dy`${this.templateVisual()} ${this.svgTemplate()} `
          );
        }
        svgTemplate() {
          return this.round ? null : this.networkImagesBySize[this.size];
        }
        templateVisual() {
          return this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc} alt=${this.name}></wui-image>`
            : eo.dy`<wui-icon size="inherit" color="fg-200" name="networkPlaceholder"></wui-icon>`;
        }
      };
      (rB.styles = [ec, rD]),
        wui_network_image_decorate(
          [(0, ef.Cb)()],
          rB.prototype,
          "size",
          void 0
        ),
        wui_network_image_decorate(
          [(0, ef.Cb)()],
          rB.prototype,
          "name",
          void 0
        ),
        wui_network_image_decorate(
          [(0, ef.Cb)({ type: Object })],
          rB.prototype,
          "networkImagesBySize",
          void 0
        ),
        wui_network_image_decorate(
          [(0, ef.Cb)()],
          rB.prototype,
          "imageSrc",
          void 0
        ),
        wui_network_image_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rB.prototype,
          "selected",
          void 0
        ),
        wui_network_image_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rB.prototype,
          "round",
          void 0
        ),
        (rB = wui_network_image_decorate(
          [customElement("wui-network-image")],
          rB
        ));
      var rL = eo.iv`
  button {
    flex-direction: column;
    width: 76px;
    row-gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-xs) var(--wui-spacing-0);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: clamp(0px, var(--wui-border-radius-xs), 20px);
  }

  button > wui-text {
    color: var(--wui-color-fg-100);
    max-width: var(--wui-icon-box-size-xl);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    justify-content: center;
  }

  button:disabled > wui-text {
    color: var(--wui-color-gray-glass-015);
  }

  [data-selected='true'] {
    background-color: var(--wui-color-accent-glass-020);
  }

  @media (hover: hover) and (pointer: fine) {
    [data-selected='true']:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }
  }

  [data-selected='true']:active:enabled {
    background-color: var(--wui-color-accent-glass-010);
  }
`,
        wui_card_select_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rj = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.name = "Unknown"),
            (this.type = "wallet"),
            (this.imageSrc = void 0),
            (this.disabled = !1),
            (this.selected = !1),
            (this.installed = !1);
        }
        render() {
          return eo.dy`
      <button data-selected=${(0, rd.o)(this.selected)} ?disabled=${
            this.disabled
          } ontouchstart>
        ${this.imageTemplate()}
        <wui-text variant="tiny-500" color=${
          this.selected ? "accent-100" : "inherit"
        }>
          ${this.name}
        </wui-text>
      </button>
    `;
        }
        imageTemplate() {
          return "network" === this.type
            ? eo.dy`
        <wui-network-image
          .selected=${this.selected}
          imageSrc=${(0, rd.o)(this.imageSrc)}
          name=${this.name}
        >
        </wui-network-image>
      `
            : eo.dy`
      <wui-wallet-image
        size="md"
        imageSrc=${(0, rd.o)(this.imageSrc)}
        name=${this.name}
        .installed=${this.installed}
        badgeSize="sm"
      >
      </wui-wallet-image>
    `;
        }
      };
      (rj.styles = [ec, eu, rL]),
        wui_card_select_decorate([(0, ef.Cb)()], rj.prototype, "name", void 0),
        wui_card_select_decorate([(0, ef.Cb)()], rj.prototype, "type", void 0),
        wui_card_select_decorate(
          [(0, ef.Cb)()],
          rj.prototype,
          "imageSrc",
          void 0
        ),
        wui_card_select_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rj.prototype,
          "disabled",
          void 0
        ),
        wui_card_select_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rj.prototype,
          "selected",
          void 0
        ),
        wui_card_select_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rj.prototype,
          "installed",
          void 0
        ),
        (rj = wui_card_select_decorate([customElement("wui-card-select")], rj));
      var rU = eo.iv`
  a {
    border: 1px solid var(--wui-color-gray-glass-010);
    border-radius: var(--wui-border-radius-3xl);
  }

  wui-image {
    border-radius: var(--wui-border-radius-3xl);
    overflow: hidden;
  }

  a.disabled > wui-icon:not(.image-icon),
  a.disabled > wui-image {
    filter: grayscale(1);
  }

  a[data-variant='fill'] {
    color: var(--wui-color-inverse-100);
    background-color: var(--wui-color-accent-100);
  }

  a[data-variant='shade'],
  a[data-variant='shadeSmall'] {
    background-color: transparent;
    background-color: var(--wui-color-gray-glass-010);
    color: var(--wui-color-fg-200);
  }

  a[data-variant='success'] {
    column-gap: var(--wui-spacing-xxs);
    border: 1px solid var(--wui-color-success-glass-010);
    background-color: var(--wui-color-success-glass-010);
    color: var(--wui-color-success-100);
  }

  a[data-variant='error'] {
    column-gap: var(--wui-spacing-xxs);
    border: 1px solid var(--wui-color-error-glass-010);
    background-color: var(--wui-color-error-glass-010);
    color: var(--wui-color-error-100);
  }

  a[data-variant='transparent'] {
    column-gap: var(--wui-spacing-xxs);
    background-color: transparent;
    color: var(--wui-color-fg-150);
  }

  a[data-variant='transparent'],
  a[data-variant='success'],
  a[data-variant='shadeSmall'],
  a[data-variant='error'] {
    padding: 7px var(--wui-spacing-s) 7px 10px;
  }

  a[data-variant='transparent']:has(wui-text:first-child),
  a[data-variant='success']:has(wui-text:first-child),
  a[data-variant='shadeSmall']:has(wui-text:first-child),
  a[data-variant='error']:has(wui-text:first-child) {
    padding: 7px var(--wui-spacing-s);
  }

  a[data-variant='fill'],
  a[data-variant='shade'] {
    column-gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-xxs) var(--wui-spacing-m) var(--wui-spacing-xxs)
      var(--wui-spacing-xs);
  }

  a[data-variant='fill']:has(wui-text:first-child),
  a[data-variant='shade']:has(wui-text:first-child) {
    padding: 9px var(--wui-spacing-m) 9px var(--wui-spacing-m);
  }

  a[data-variant='fill'] > wui-image,
  a[data-variant='shade'] > wui-image {
    width: 24px;
    height: 24px;
  }

  a[data-variant='fill'] > wui-image {
    box-shadow: inset 0 0 0 1px var(--wui-color-accent-090);
  }

  a[data-variant='shade'] > wui-image,
  a[data-variant='shadeSmall'] > wui-image {
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  a[data-variant='fill'] > wui-icon:not(.image-icon),
  a[data-variant='shade'] > wui-icon:not(.image-icon) {
    width: 14px;
    height: 14px;
  }

  a[data-variant='transparent'] > wui-image,
  a[data-variant='success'] > wui-image,
  a[data-variant='shadeSmall'] > wui-image,
  a[data-variant='error'] > wui-image {
    width: 14px;
    height: 14px;
  }

  a[data-variant='transparent'] > wui-icon:not(.image-icon),
  a[data-variant='success'] > wui-icon:not(.image-icon),
  a[data-variant='shadeSmall'] > wui-icon:not(.image-icon),
  a[data-variant='error'] > wui-icon:not(.image-icon) {
    width: 12px;
    height: 12px;
  }

  a[data-variant='fill']:focus-visible {
    background-color: var(--wui-color-accent-090);
  }

  a[data-variant='shade']:focus-visible,
  a[data-variant='shadeSmall']:focus-visible {
    background-color: var(--wui-color-gray-glass-015);
  }

  a[data-variant='transparent']:focus-visible {
    background-color: var(--wui-color-gray-glass-005);
  }

  a[data-variant='success']:focus-visible {
    background-color: var(--wui-color-success-glass-015);
  }

  a[data-variant='error']:focus-visible {
    background-color: var(--wui-color-error-glass-015);
  }

  a.disabled {
    color: var(--wui-color-gray-glass-015);
    background-color: var(--wui-color-gray-glass-015);
    pointer-events: none;
  }

  @media (hover: hover) and (pointer: fine) {
    a[data-variant='fill']:hover {
      background-color: var(--wui-color-accent-090);
    }

    a[data-variant='shade']:hover,
    a[data-variant='shadeSmall']:hover {
      background-color: var(--wui-color-gray-glass-015);
    }

    a[data-variant='transparent']:hover {
      background-color: var(--wui-color-gray-glass-005);
    }

    a[data-variant='success']:hover {
      background-color: var(--wui-color-success-glass-015);
    }

    a[data-variant='error']:hover {
      background-color: var(--wui-color-error-glass-015);
    }
  }

  a[data-variant='fill']:active {
    background-color: var(--wui-color-accent-080);
  }

  a[data-variant='shade']:active,
  a[data-variant='shadeSmall']:active {
    background-color: var(--wui-color-gray-glass-020);
  }

  a[data-variant='transparent']:active {
    background-color: var(--wui-color-gray-glass-010);
  }

  a[data-variant='success']:active {
    background-color: var(--wui-color-success-glass-020);
  }

  a[data-variant='error']:active {
    background-color: var(--wui-color-error-glass-020);
  }
`,
        wui_chip_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r$ = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.variant = "fill"),
            (this.imageSrc = void 0),
            (this.imageIcon = void 0),
            (this.imageIconSize = "md"),
            (this.disabled = !1),
            (this.icon = "externalLink"),
            (this.href = ""),
            (this.text = void 0);
        }
        render() {
          let s =
            "success" === this.variant ||
            "transparent" === this.variant ||
            "shadeSmall" === this.variant;
          return eo.dy`
      <a
        rel="noreferrer"
        target="_blank"
        href=${this.href}
        class=${this.disabled ? "disabled" : ""}
        data-variant=${this.variant}
      >
        ${this.imageTemplate()}
        <wui-text variant=${s ? "small-600" : "paragraph-600"} color="inherit">
          ${this.title ? this.title : rh.getHostName(this.href)}
        </wui-text>
        <wui-icon name=${this.icon} color="inherit" size="inherit"></wui-icon>
      </a>
    `;
        }
        imageTemplate() {
          return this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc}></wui-image>`
            : this.imageIcon
            ? eo.dy`<wui-icon
        name=${this.imageIcon}
        color="inherit"
        size=${this.imageIconSize}
        class="image-icon"
      ></wui-icon>`
            : null;
        }
      };
      (r$.styles = [ec, eu, rU]),
        wui_chip_decorate([(0, ef.Cb)()], r$.prototype, "variant", void 0),
        wui_chip_decorate([(0, ef.Cb)()], r$.prototype, "imageSrc", void 0),
        wui_chip_decorate([(0, ef.Cb)()], r$.prototype, "imageIcon", void 0),
        wui_chip_decorate(
          [(0, ef.Cb)()],
          r$.prototype,
          "imageIconSize",
          void 0
        ),
        wui_chip_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          r$.prototype,
          "disabled",
          void 0
        ),
        wui_chip_decorate([(0, ef.Cb)()], r$.prototype, "icon", void 0),
        wui_chip_decorate([(0, ef.Cb)()], r$.prototype, "href", void 0),
        wui_chip_decorate([(0, ef.Cb)()], r$.prototype, "text", void 0),
        (r$ = wui_chip_decorate([customElement("wui-chip")], r$));
      var rF = eo.iv`
  :host {
    position: relative;
    display: block;
  }

  button {
    background: var(--wui-color-accent-100);
    border: 1px solid var(--wui-color-gray-glass-010);
    border-radius: var(--wui-border-radius-m);
    gap: var(--wui-spacing-xs);
  }

  button.loading {
    background: var(--wui-color-gray-glass-010);
    border: 1px solid var(--wui-color-gray-glass-010);
    pointer-events: none;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-015);
    border: 1px solid var(--wui-color-gray-glass-010);
  }

  button:disabled > wui-text {
    color: var(--wui-color-gray-glass-015);
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-accent-090);
    }

    button:active:enabled {
      background-color: var(--wui-color-accent-080);
    }
  }

  button:focus-visible {
    border: 1px solid var(--wui-color-gray-glass-010);
    background-color: var(--wui-color-accent-090);
    -webkit-box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
    -moz-box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
    box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
  }

  button[data-size='sm'] {
    padding: 6.75px 10px 7.25px;
  }

  ::slotted(*) {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    opacity: var(--local-opacity-100);
  }

  button > wui-text {
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
    opacity: var(--local-opacity-100);
    color: var(--wui-color-inverse-100);
  }

  button[data-size='md'] {
    padding: 9px var(--wui-spacing-l) 9px var(--wui-spacing-l);
  }

  button[data-size='md'] + wui-text {
    padding-left: var(--wui-spacing-3xs);
  }

  @media (max-width: 500px) {
    button[data-size='md'] {
      height: 32px;
      padding: 5px 12px;
    }

    button[data-size='md'] > wui-text > slot {
      font-size: 14px !important;
    }
  }

  wui-loading-spinner {
    width: 14px;
    height: 14px;
  }

  wui-loading-spinner::slotted(svg) {
    width: 10px !important;
    height: 10px !important;
  }

  button[data-size='sm'] > wui-loading-spinner {
    width: 12px;
    height: 12px;
  }
`,
        wui_connect_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rz = class extends eo.oi {
        constructor() {
          super(...arguments), (this.size = "md"), (this.loading = !1);
        }
        render() {
          let s = "md" === this.size ? "paragraph-600" : "small-600";
          return eo.dy`
      <button data-size=${this.size} ?disabled=${this.loading} ontouchstart>
        ${this.loadingTemplate()}
        <wui-text variant=${s} color=${this.loading ? "accent-100" : "inherit"}>
          <slot></slot>
        </wui-text>
      </button>
    `;
        }
        loadingTemplate() {
          return this.loading
            ? eo.dy`<wui-loading-spinner size=${this.size} color="accent-100"></wui-loading-spinner>`
            : null;
        }
      };
      (rz.styles = [ec, eu, rF]),
        wui_connect_button_decorate(
          [(0, ef.Cb)()],
          rz.prototype,
          "size",
          void 0
        ),
        wui_connect_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rz.prototype,
          "loading",
          void 0
        ),
        (rz = wui_connect_button_decorate(
          [customElement("wui-connect-button")],
          rz
        ));
      var rH = eo.iv`
  wui-flex {
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
  }
`,
        wui_cta_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rq = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.disabled = !1),
            (this.label = ""),
            (this.buttonLabel = "");
        }
        render() {
          return eo.dy`
      <wui-flex
        justifyContent="space-between"
        alignItems="center"
        .padding=${["1xs", "2l", "1xs", "2l"]}
      >
        <wui-text variant="paragraph-500" color="fg-200">${
          this.label
        }</wui-text>
        <wui-chip-button size="sm" variant="shade" text=${
          this.buttonLabel
        } icon="chevronRight">
        </wui-chip-button>
      </wui-flex>
    `;
        }
      };
      (rq.styles = [ec, eu, rH]),
        wui_cta_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rq.prototype,
          "disabled",
          void 0
        ),
        wui_cta_button_decorate([(0, ef.Cb)()], rq.prototype, "label", void 0),
        wui_cta_button_decorate(
          [(0, ef.Cb)()],
          rq.prototype,
          "buttonLabel",
          void 0
        ),
        (rq = wui_cta_button_decorate([customElement("wui-cta-button")], rq));
      var rV = eo.iv`
  :host {
    display: block;
    padding: var(--wui-spacing-l) var(--wui-spacing-m);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    width: 100%;
  }
`;
      let rW = class extends eo.oi {
        render() {
          return eo.dy`
      <wui-flex gap="xl" flexDirection="column" justifyContent="space-between" alignItems="center">
        <slot></slot>
      </wui-flex>
    `;
        }
      };
      (rW.styles = [ec, eu, rV]),
        (rW = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([customElement("wui-details-group")], rW));
      var rK = eo.iv`
  :host {
    display: flex;
    flex-direction: row;
    gap: var(--wui-spacing-l);
    width: 100%;
    border-radius: var(--wui-border-radius-xs);
  }
`,
        wui_details_group_item_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rZ = class extends eo.oi {
        constructor() {
          super(...arguments), (this.name = "");
        }
        render() {
          return eo.dy`
      <wui-flex justifyContent="space-between" alignItems="center">
        <wui-text variant="paragraph-500" color="fg-200">${this.name}</wui-text>
        <wui-flex gap="xs" alignItems="center">
          <slot></slot>
        </wui-flex>
      </wui-flex>
    `;
        }
      };
      (rZ.styles = [ec, eu, rK]),
        wui_details_group_item_decorate(
          [(0, ef.Cb)()],
          rZ.prototype,
          "name",
          void 0
        ),
        (rZ = wui_details_group_item_decorate(
          [customElement("wui-details-group-item")],
          rZ
        ));
      var rG = eo.iv`
  :host {
    z-index: calc(var(--w3m-z-index) + 1);
    width: 200px;
    padding: var(--wui-spacing-3xs);
    align-items: center;
    display: inherit;
    border-radius: var(--wui-border-radius-xs);
    border: 1px solid var(--wui-color-gray-glass-002);
    background: var(--wui-color-fg-base-125);
    /* Dark/Elevation/L */
    box-shadow:
      0px 8px 22px -6px rgba(0, 0, 0, 0.12),
      0px 14px 64px -4px rgba(0, 0, 0, 0.12);
  }
`,
        wui_dropdown_menu_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rY = class extends eo.oi {
        constructor() {
          super(...arguments), (this.actions = []), (this.isOpen = !1);
        }
        render() {
          return this.isOpen
            ? eo.dy`
      <wui-flex flexDirection="column" gap="4xs">
        ${this.actions.map(
          (s) => eo.dy`
            <wui-list-item
              icon=${s.icon}
              iconSize="sm"
              variant="icon"
              @click=${s.onClick}
            >
              <wui-text variant="small-400" color="fg-100">${s.label}</wui-text>
            </wui-list-item>
          `
        )}
      </wui-flex>
    `
            : null;
        }
      };
      (rY.styles = [ec, eu, rG]),
        wui_dropdown_menu_decorate(
          [(0, ef.Cb)({ type: Array })],
          rY.prototype,
          "actions",
          void 0
        ),
        wui_dropdown_menu_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rY.prototype,
          "isOpen",
          void 0
        ),
        (rY = wui_dropdown_menu_decorate(
          [customElement("wui-dropdown-menu")],
          rY
        ));
      var rQ = W(69178),
        rJ = eo.iv`
  :host {
    position: relative;
    width: 100%;
    display: inline-block;
    color: var(--wui-color-fg-275);
  }

  input {
    width: 100%;
    border-radius: var(--wui-border-radius-xs);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    background: var(--wui-color-gray-glass-002);
    font-size: var(--wui-font-size-paragraph);
    letter-spacing: var(--wui-letter-spacing-paragraph);
    color: var(--wui-color-fg-100);
    transition:
      background-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      border-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      box-shadow var(--wui-ease-inout-power-1) var(--wui-duration-md);
    will-change: background-color, border-color, box-shadow;
    caret-color: var(--wui-color-accent-100);
  }

  input:disabled {
    cursor: not-allowed;
    border: 1px solid var(--wui-color-gray-glass-010);
  }

  input:disabled::placeholder,
  input:disabled + wui-icon {
    color: var(--wui-color-fg-300);
  }

  input::placeholder {
    color: var(--wui-color-fg-275);
  }

  input:focus:enabled {
    background-color: var(--wui-color-gray-glass-005);
    -webkit-box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0px 0px 0px 4px var(--wui-box-shadow-blue);
    -moz-box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0px 0px 0px 4px var(--wui-box-shadow-blue);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0px 0px 0px 4px var(--wui-box-shadow-blue);
  }

  input:hover:enabled {
    background-color: var(--wui-color-gray-glass-005);
  }

  wui-icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
  }

  .wui-size-sm {
    padding: 9px var(--wui-spacing-m) 10px var(--wui-spacing-s);
  }

  wui-icon + .wui-size-sm {
    padding: 9px var(--wui-spacing-m) 10px 36px;
  }

  wui-icon[data-input='sm'] {
    left: var(--wui-spacing-s);
  }

  .wui-size-md {
    padding: 15px var(--wui-spacing-m) var(--wui-spacing-l) var(--wui-spacing-m);
  }

  wui-icon + .wui-size-md,
  wui-loading-spinner + .wui-size-md {
    padding: 10.5px var(--wui-spacing-3xl) 10.5px var(--wui-spacing-3xl);
  }

  wui-icon[data-input='md'] {
    left: var(--wui-spacing-l);
  }

  .wui-size-lg {
    padding: var(--wui-spacing-s) var(--wui-spacing-s) var(--wui-spacing-s) var(--wui-spacing-l);
    letter-spacing: var(--wui-letter-spacing-medium-title);
    font-size: var(--wui-font-size-medium-title);
    font-weight: var(--wui-font-weight-light);
    line-height: 130%;
    color: var(--wui-color-fg-100);
    height: 64px;
  }

  .wui-padding-right-xs {
    padding-right: var(--wui-spacing-xs);
  }

  .wui-padding-right-s {
    padding-right: var(--wui-spacing-s);
  }

  .wui-padding-right-m {
    padding-right: var(--wui-spacing-m);
  }

  .wui-padding-right-l {
    padding-right: var(--wui-spacing-l);
  }

  .wui-padding-right-xl {
    padding-right: var(--wui-spacing-xl);
  }

  .wui-padding-right-2xl {
    padding-right: var(--wui-spacing-2xl);
  }

  .wui-padding-right-3xl {
    padding-right: var(--wui-spacing-3xl);
  }

  .wui-padding-right-4xl {
    padding-right: var(--wui-spacing-4xl);
  }

  .wui-padding-right-5xl {
    padding-right: var(--wui-spacing-5xl);
  }

  wui-icon + .wui-size-lg,
  wui-loading-spinner + .wui-size-lg {
    padding-left: 50px;
  }

  wui-icon[data-input='lg'] {
    left: var(--wui-spacing-l);
  }

  .wui-size-mdl {
    padding: 17.25px var(--wui-spacing-m) 17.25px var(--wui-spacing-m);
  }
  wui-icon + .wui-size-mdl,
  wui-loading-spinner + .wui-size-mdl {
    padding: 17.25px var(--wui-spacing-3xl) 17.25px 40px;
  }
  wui-icon[data-input='mdl'] {
    left: var(--wui-spacing-m);
  }

  input:placeholder-shown ~ ::slotted(wui-input-element),
  input:placeholder-shown ~ ::slotted(wui-icon) {
    opacity: 0;
    pointer-events: none;
  }

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type='number'] {
    -moz-appearance: textfield;
  }

  ::slotted(wui-input-element),
  ::slotted(wui-icon) {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }

  ::slotted(wui-input-element) {
    right: var(--wui-spacing-m);
  }

  ::slotted(wui-icon) {
    right: 0px;
  }
`,
        wui_input_text_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let rX = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.inputElementRef = (0, rQ.V)()),
            (this.size = "md"),
            (this.disabled = !1),
            (this.placeholder = ""),
            (this.type = "text"),
            (this.value = "");
        }
        render() {
          let s = `wui-padding-right-${this.inputRightPadding}`,
            x = `wui-size-${this.size}`,
            W = { [x]: !0, [s]: !!this.inputRightPadding };
          return eo.dy`${this.templateIcon()}
      <input
        data-testid="wui-input-text"
        ${(0, rQ.i)(this.inputElementRef)}
        class=${(0, tq.$)(W)}
        type=${this.type}
        enterkeyhint=${(0, rd.o)(this.enterKeyHint)}
        ?disabled=${this.disabled}
        placeholder=${this.placeholder}
        @input=${this.dispatchInputChangeEvent.bind(this)}
        .value=${this.value || ""}
        tabindex=${(0, rd.o)(this.tabIdx)}
      />
      <slot></slot>`;
        }
        templateIcon() {
          return this.icon
            ? eo.dy`<wui-icon
        data-input=${this.size}
        size=${this.size}
        color="inherit"
        name=${this.icon}
      ></wui-icon>`
            : null;
        }
        dispatchInputChangeEvent() {
          this.dispatchEvent(
            new CustomEvent("inputChange", {
              detail: this.inputElementRef.value?.value,
              bubbles: !0,
              composed: !0,
            })
          );
        }
      };
      (rX.styles = [ec, eu, rJ]),
        wui_input_text_decorate([(0, ef.Cb)()], rX.prototype, "size", void 0),
        wui_input_text_decorate([(0, ef.Cb)()], rX.prototype, "icon", void 0),
        wui_input_text_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          rX.prototype,
          "disabled",
          void 0
        ),
        wui_input_text_decorate(
          [(0, ef.Cb)()],
          rX.prototype,
          "placeholder",
          void 0
        ),
        wui_input_text_decorate([(0, ef.Cb)()], rX.prototype, "type", void 0),
        wui_input_text_decorate(
          [(0, ef.Cb)()],
          rX.prototype,
          "keyHint",
          void 0
        ),
        wui_input_text_decorate([(0, ef.Cb)()], rX.prototype, "value", void 0),
        wui_input_text_decorate(
          [(0, ef.Cb)()],
          rX.prototype,
          "inputRightPadding",
          void 0
        ),
        wui_input_text_decorate([(0, ef.Cb)()], rX.prototype, "tabIdx", void 0),
        (rX = wui_input_text_decorate([customElement("wui-input-text")], rX));
      var r0 = eo.iv`
  :host {
    position: relative;
    display: inline-block;
  }

  wui-text {
    margin: var(--wui-spacing-xxs) var(--wui-spacing-m) var(--wui-spacing-0) var(--wui-spacing-m);
  }
`,
        wui_email_input_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r1 = class extends eo.oi {
        constructor() {
          super(...arguments), (this.disabled = !1);
        }
        render() {
          return eo.dy`
      <wui-input-text
        type="email"
        placeholder="Email"
        icon="mail"
        size="mdl"
        .disabled=${this.disabled}
        .value=${this.value}
        data-testid="wui-email-input"
        tabIdx=${(0, rd.o)(this.tabIdx)}
      ></wui-input-text>
      ${this.templateError()}
    `;
        }
        templateError() {
          return this.errorMessage
            ? eo.dy`<wui-text variant="tiny-500" color="error-100">${this.errorMessage}</wui-text>`
            : null;
        }
      };
      (r1.styles = [ec, r0]),
        wui_email_input_decorate(
          [(0, ef.Cb)()],
          r1.prototype,
          "errorMessage",
          void 0
        ),
        wui_email_input_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          r1.prototype,
          "disabled",
          void 0
        ),
        wui_email_input_decorate([(0, ef.Cb)()], r1.prototype, "value", void 0),
        wui_email_input_decorate(
          [(0, ef.Cb)()],
          r1.prototype,
          "tabIdx",
          void 0
        ),
        (r1 = wui_email_input_decorate([customElement("wui-email-input")], r1));
      var r2 = eo.iv`
  :host {
    position: relative;
    width: 100%;
    display: inline-block;
    color: var(--wui-color-fg-275);
  }

  .error {
    margin: var(--wui-spacing-xxs) var(--wui-spacing-m) var(--wui-spacing-0) var(--wui-spacing-m);
  }

  .base-name {
    position: absolute;
    right: 45px;
    top: 15px;
    text-align: right;
  }
`,
        wui_ens_input_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r3 = class extends eo.oi {
        constructor() {
          super(...arguments), (this.disabled = !1), (this.loading = !1);
        }
        render() {
          return eo.dy`
      <wui-input-text
        value=${(0, rd.o)(this.value)}
        ?disabled=${this.disabled}
        .value=${this.value || ""}
        data-testid="wui-ens-input"
        inputRightPadding="5xl"
      >
        ${this.baseNameTemplate()} ${this.errorTemplate()}${this.loadingTemplate()}
      </wui-input-text>
    `;
        }
        baseNameTemplate() {
          return eo.dy`<wui-text variant="paragraph-400" color="fg-200" class="base-name">
      ${el.bq.WC_NAME_SUFFIX}
    </wui-text>`;
        }
        loadingTemplate() {
          return this.loading
            ? eo.dy`<wui-loading-spinner size="md" color="accent-100"></wui-loading-spinner>`
            : null;
        }
        errorTemplate() {
          return this.errorMessage
            ? eo.dy`<wui-text variant="tiny-500" color="error-100" class="error"
        >${this.errorMessage}</wui-text
      >`
            : null;
        }
      };
      (r3.styles = [ec, r2]),
        wui_ens_input_decorate(
          [(0, ef.Cb)()],
          r3.prototype,
          "errorMessage",
          void 0
        ),
        wui_ens_input_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          r3.prototype,
          "disabled",
          void 0
        ),
        wui_ens_input_decorate([(0, ef.Cb)()], r3.prototype, "value", void 0),
        wui_ens_input_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          r3.prototype,
          "loading",
          void 0
        ),
        (r3 = wui_ens_input_decorate([customElement("wui-ens-input")], r3));
      var r5 = eo.iv`
  button {
    border-radius: var(--local-border-radius);
    color: var(--wui-color-fg-100);
    padding: var(--local-padding);
  }

  @media (max-width: 700px) {
    button {
      padding: var(--wui-spacing-s);
    }
  }

  button > wui-icon {
    pointer-events: none;
  }

  button:disabled > wui-icon {
    color: var(--wui-color-bg-300) !important;
  }

  button:disabled {
    background-color: transparent;
  }
`,
        wui_icon_link_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r6 = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.size = "md"),
            (this.disabled = !1),
            (this.icon = "copy"),
            (this.iconColor = "inherit");
        }
        render() {
          let s =
              "lg" === this.size
                ? "--wui-border-radius-xs"
                : "--wui-border-radius-xxs",
            x = "lg" === this.size ? "--wui-spacing-1xs" : "--wui-spacing-2xs";
          return (
            (this.style.cssText = `
    --local-border-radius: var(${s});
    --local-padding: var(${x});
`),
            eo.dy`
      <button ?disabled=${this.disabled} ontouchstart>
        <wui-icon color=${this.iconColor} size=${this.size} name=${this.icon}></wui-icon>
      </button>
    `
          );
        }
      };
      (r6.styles = [ec, eu, ed, r5]),
        wui_icon_link_decorate([(0, ef.Cb)()], r6.prototype, "size", void 0),
        wui_icon_link_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          r6.prototype,
          "disabled",
          void 0
        ),
        wui_icon_link_decorate([(0, ef.Cb)()], r6.prototype, "icon", void 0),
        wui_icon_link_decorate(
          [(0, ef.Cb)()],
          r6.prototype,
          "iconColor",
          void 0
        ),
        (r6 = wui_icon_link_decorate([customElement("wui-icon-link")], r6));
      var r4 = eo.iv`
  button {
    background-color: var(--wui-color-fg-300);
    border-radius: var(--wui-border-radius-4xs);
    width: 16px;
    height: 16px;
  }

  button:disabled {
    background-color: var(--wui-color-bg-300);
  }

  wui-icon {
    color: var(--wui-color-bg-200) !important;
  }

  button:focus-visible {
    background-color: var(--wui-color-fg-250);
    border: 1px solid var(--wui-color-accent-100);
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-fg-250);
    }

    button:active:enabled {
      background-color: var(--wui-color-fg-225);
    }
  }
`,
        wui_input_element_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r8 = class extends eo.oi {
        constructor() {
          super(...arguments), (this.icon = "copy");
        }
        render() {
          return eo.dy`
      <button>
        <wui-icon color="inherit" size="xxs" name=${this.icon}></wui-icon>
      </button>
    `;
        }
      };
      (r8.styles = [ec, eu, r4]),
        wui_input_element_decorate(
          [(0, ef.Cb)()],
          r8.prototype,
          "icon",
          void 0
        ),
        (r8 = wui_input_element_decorate(
          [customElement("wui-input-element")],
          r8
        ));
      var r9 = eo.iv`
  :host {
    position: relative;
    display: inline-block;
  }

  input {
    width: 50px;
    height: 50px;
    background: var(--wui-color-gray-glass-010);
    border-radius: var(--wui-border-radius-xs);
    border: 1px solid var(--wui-color-gray-glass-005);
    font-family: var(--wui-font-family);
    font-size: var(--wui-font-size-large);
    font-weight: var(--wui-font-weight-regular);
    letter-spacing: var(--wui-letter-spacing-large);
    text-align: center;
    color: var(--wui-color-fg-100);
    caret-color: var(--wui-color-accent-100);
    transition:
      background-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      border-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      box-shadow var(--wui-ease-inout-power-1) var(--wui-duration-md);
    will-change: background-color, border-color, box-shadow;
    box-sizing: border-box;
    -webkit-appearance: none;
    -moz-appearance: textfield;
    padding: 0px;
  }

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type='number'] {
    -moz-appearance: textfield;
  }

  input:disabled {
    cursor: not-allowed;
    border: 1px solid var(--wui-color-gray-glass-010);
    background: var(--wui-color-gray-glass-005);
  }

  input:focus:enabled {
    background-color: var(--wui-color-gray-glass-015);
    border: 1px solid var(--wui-color-accent-100);
    -webkit-box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
    -moz-box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
    box-shadow: 0px 0px 0px 4px var(--wui-box-shadow-blue);
  }

  @media (hover: hover) and (pointer: fine) {
    input:hover:enabled {
      background-color: var(--wui-color-gray-glass-015);
    }
  }
`,
        wui_input_numeric_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let r7 = class extends eo.oi {
        constructor() {
          super(...arguments), (this.disabled = !1), (this.value = "");
        }
        render() {
          return eo.dy`<input
      type="number"
      maxlength="1"
      inputmode="numeric"
      autofocus
      ?disabled=${this.disabled}
      value=${this.value}
    /> `;
        }
      };
      (r7.styles = [ec, eu, r9]),
        wui_input_numeric_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          r7.prototype,
          "disabled",
          void 0
        ),
        wui_input_numeric_decorate(
          [(0, ef.Cb)({ type: String })],
          r7.prototype,
          "value",
          void 0
        ),
        (r7 = wui_input_numeric_decorate(
          [customElement("wui-input-numeric")],
          r7
        ));
      var it = eo.iv`
  button {
    padding: var(--wui-spacing-4xs) var(--wui-spacing-xxs);
    border-radius: var(--wui-border-radius-3xs);
    background-color: transparent;
    color: var(--wui-color-accent-100);
  }

  button:disabled {
    background-color: transparent;
    color: var(--wui-color-gray-glass-015);
  }

  button:hover {
    background-color: var(--wui-color-gray-glass-005);
  }
`,
        wui_link_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ir = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.tabIdx = void 0),
            (this.disabled = !1),
            (this.color = "inherit");
        }
        render() {
          return eo.dy`
      <button ?disabled=${this.disabled} tabindex=${(0, rd.o)(
            this.tabIdx
          )} ontouchstart>
        <slot name="iconLeft"></slot>
        <wui-text variant="small-600" color=${this.color}>
          <slot></slot>
        </wui-text>
        <slot name="iconRight"></slot>
      </button>
    `;
        }
      };
      (ir.styles = [ec, eu, it]),
        wui_link_decorate([(0, ef.Cb)()], ir.prototype, "tabIdx", void 0),
        wui_link_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ir.prototype,
          "disabled",
          void 0
        ),
        wui_link_decorate([(0, ef.Cb)()], ir.prototype, "color", void 0),
        (ir = wui_link_decorate([customElement("wui-link")], ir));
      var io = eo.iv`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 11px 18px 11px var(--wui-spacing-s);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
    transition:
      color var(--wui-ease-out-power-1) var(--wui-duration-md),
      background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: color, background-color;
  }

  button[data-iconvariant='square'],
  button[data-iconvariant='square-blue'] {
    padding: 6px 18px 6px 9px;
  }

  button > wui-flex {
    flex: 1;
  }

  button > wui-image {
    width: 32px;
    height: 32px;
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
    border-radius: var(--wui-border-radius-3xl);
  }

  button > wui-icon {
    width: 36px;
    height: 36px;
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: opacity;
  }

  button > wui-icon-box[data-variant='blue'] {
    box-shadow: 0 0 0 2px var(--wui-color-accent-glass-005);
  }

  button > wui-icon-box[data-variant='overlay'] {
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
  }

  button > wui-icon-box[data-variant='square-blue'] {
    border-radius: var(--wui-border-radius-3xs);
    position: relative;
    border: none;
    width: 36px;
    height: 36px;
  }

  button > wui-icon-box[data-variant='square-blue']::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    border: 1px solid var(--wui-color-accent-glass-010);
    pointer-events: none;
  }

  button > wui-icon:last-child {
    width: 14px;
    height: 14px;
  }

  button:disabled {
    color: var(--wui-color-gray-glass-020);
  }

  button[data-loading='true'] > wui-icon {
    opacity: 0;
  }

  wui-loading-spinner {
    position: absolute;
    right: 18px;
    top: 50%;
    transform: translateY(-50%);
  }
`,
        wui_list_item_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ia = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.tabIdx = void 0),
            (this.variant = "icon"),
            (this.disabled = !1),
            (this.imageSrc = void 0),
            (this.alt = void 0),
            (this.chevron = !1),
            (this.loading = !1);
        }
        render() {
          return eo.dy`
      <button
        ?disabled=${!!this.loading || !!this.disabled}
        data-loading=${this.loading}
        data-iconvariant=${(0, rd.o)(this.iconVariant)}
        tabindex=${(0, rd.o)(this.tabIdx)}
        ontouchstart
      >
        ${this.loadingTemplate()} ${this.visualTemplate()}
        <wui-flex gap="3xs">
          <slot></slot>
        </wui-flex>
        ${this.chevronTemplate()}
      </button>
    `;
        }
        visualTemplate() {
          if ("image" === this.variant && this.imageSrc)
            return eo.dy`<wui-image src=${this.imageSrc} alt=${
              this.alt ?? "list item"
            }></wui-image>`;
          if (
            "square" === this.iconVariant &&
            this.icon &&
            "icon" === this.variant
          )
            return eo.dy`<wui-icon name=${this.icon}></wui-icon>`;
          if ("icon" === this.variant && this.icon && this.iconVariant) {
            let s = ["blue", "square-blue"].includes(this.iconVariant)
                ? "accent-100"
                : "fg-200",
              x = "square-blue" === this.iconVariant ? "mdl" : "md",
              W = this.iconSize ? this.iconSize : x;
            return eo.dy`
        <wui-icon-box
          data-variant=${this.iconVariant}
          icon=${this.icon}
          iconSize=${W}
          background="transparent"
          iconColor=${s}
          backgroundColor=${s}
          size=${x}
        ></wui-icon-box>
      `;
          }
          return null;
        }
        loadingTemplate() {
          return this.loading
            ? eo.dy`<wui-loading-spinner color="fg-300"></wui-loading-spinner>`
            : eo.dy``;
        }
        chevronTemplate() {
          return this.chevron
            ? eo.dy`<wui-icon size="inherit" color="fg-200" name="chevronRight"></wui-icon>`
            : null;
        }
      };
      (ia.styles = [ec, eu, io]),
        wui_list_item_decorate([(0, ef.Cb)()], ia.prototype, "icon", void 0),
        wui_list_item_decorate(
          [(0, ef.Cb)()],
          ia.prototype,
          "iconSize",
          void 0
        ),
        wui_list_item_decorate([(0, ef.Cb)()], ia.prototype, "tabIdx", void 0),
        wui_list_item_decorate([(0, ef.Cb)()], ia.prototype, "variant", void 0),
        wui_list_item_decorate(
          [(0, ef.Cb)()],
          ia.prototype,
          "iconVariant",
          void 0
        ),
        wui_list_item_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ia.prototype,
          "disabled",
          void 0
        ),
        wui_list_item_decorate(
          [(0, ef.Cb)()],
          ia.prototype,
          "imageSrc",
          void 0
        ),
        wui_list_item_decorate([(0, ef.Cb)()], ia.prototype, "alt", void 0),
        wui_list_item_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ia.prototype,
          "chevron",
          void 0
        ),
        wui_list_item_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ia.prototype,
          "loading",
          void 0
        ),
        (ia = wui_list_item_decorate([customElement("wui-list-item")], ia)),
        ((er = ei || (ei = {})).approve = "approved"),
        (er.bought = "bought"),
        (er.borrow = "borrowed"),
        (er.burn = "burnt"),
        (er.cancel = "canceled"),
        (er.claim = "claimed"),
        (er.deploy = "deployed"),
        (er.deposit = "deposited"),
        (er.execute = "executed"),
        (er.mint = "minted"),
        (er.receive = "received"),
        (er.repay = "repaid"),
        (er.send = "sent"),
        (er.sell = "sold"),
        (er.stake = "staked"),
        (er.trade = "swapped"),
        (er.unstake = "unstaked"),
        (er.withdraw = "withdrawn");
      var is = eo.iv`
  :host > wui-flex {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 40px;
    height: 40px;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
    background-color: var(--wui-color-gray-glass-005);
  }

  :host > wui-flex wui-image {
    display: block;
  }

  :host > wui-flex,
  :host > wui-flex wui-image,
  .swap-images-container,
  .swap-images-container.nft,
  wui-image.nft {
    border-top-left-radius: var(--local-left-border-radius);
    border-top-right-radius: var(--local-right-border-radius);
    border-bottom-left-radius: var(--local-left-border-radius);
    border-bottom-right-radius: var(--local-right-border-radius);
  }

  wui-icon {
    width: 20px;
    height: 20px;
  }

  wui-icon-box {
    position: absolute;
    right: 0;
    bottom: 0;
    transform: translate(20%, 20%);
  }

  .swap-images-container {
    position: relative;
    width: 40px;
    height: 40px;
    overflow: hidden;
  }

  .swap-images-container wui-image:first-child {
    position: absolute;
    width: 40px;
    height: 40px;
    top: 0;
    left: 0%;
    clip-path: inset(0px calc(50% + 2px) 0px 0%);
  }

  .swap-images-container wui-image:last-child {
    clip-path: inset(0px 0px 0px calc(50% + 2px));
  }
`,
        wui_transaction_visual_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let il = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.images = []),
            (this.secondImage = { type: void 0, url: "" });
        }
        render() {
          let [s, x] = this.images,
            W = s?.type === "NFT",
            X = x?.url ? "NFT" === x.type : W;
          return (
            (this.style.cssText = `
    --local-left-border-radius: ${
      W ? "var(--wui-border-radius-xxs)" : "var(--wui-border-radius-s)"
    };
    --local-right-border-radius: ${
      X ? "var(--wui-border-radius-xxs)" : "var(--wui-border-radius-s)"
    };
    `),
            eo.dy`<wui-flex> ${this.templateVisual()} ${this.templateIcon()} </wui-flex>`
          );
        }
        templateVisual() {
          let [s, x] = this.images,
            W = s?.type,
            X = 2 === this.images.length;
          return X && (s?.url || x?.url)
            ? eo.dy`<div class="swap-images-container">
        ${
          s?.url
            ? eo.dy`<wui-image src=${s.url} alt="Transaction image"></wui-image>`
            : null
        }
        ${
          x?.url
            ? eo.dy`<wui-image src=${x.url} alt="Transaction image"></wui-image>`
            : null
        }
      </div>`
            : s?.url
            ? eo.dy`<wui-image src=${s.url} alt="Transaction image"></wui-image>`
            : "NFT" === W
            ? eo.dy`<wui-icon size="inherit" color="fg-200" name="nftPlaceholder"></wui-icon>`
            : eo.dy`<wui-icon size="inherit" color="fg-200" name="coinPlaceholder"></wui-icon>`;
        }
        templateIcon() {
          let s,
            x = "accent-100";
          return ((s = this.getIcon()),
          this.status && (x = this.getStatusColor()),
          s)
            ? eo.dy`
      <wui-icon-box
        size="xxs"
        iconColor=${x}
        backgroundColor=${x}
        background="opaque"
        icon=${s}
        ?border=${!0}
        borderColor="wui-color-bg-125"
      ></wui-icon-box>
    `
            : null;
        }
        getDirectionIcon() {
          switch (this.direction) {
            case "in":
              return "arrowBottom";
            case "out":
              return "arrowTop";
            default:
              return;
          }
        }
        getIcon() {
          return this.onlyDirectionIcon
            ? this.getDirectionIcon()
            : "trade" === this.type
            ? "swapHorizontalBold"
            : "approve" === this.type
            ? "checkmark"
            : "cancel" === this.type
            ? "close"
            : this.getDirectionIcon();
        }
        getStatusColor() {
          switch (this.status) {
            case "confirmed":
              return "success-100";
            case "failed":
              return "error-100";
            case "pending":
              return "inverse-100";
            default:
              return "accent-100";
          }
        }
      };
      (il.styles = [is]),
        wui_transaction_visual_decorate(
          [(0, ef.Cb)()],
          il.prototype,
          "type",
          void 0
        ),
        wui_transaction_visual_decorate(
          [(0, ef.Cb)()],
          il.prototype,
          "status",
          void 0
        ),
        wui_transaction_visual_decorate(
          [(0, ef.Cb)()],
          il.prototype,
          "direction",
          void 0
        ),
        wui_transaction_visual_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          il.prototype,
          "onlyDirectionIcon",
          void 0
        ),
        wui_transaction_visual_decorate(
          [(0, ef.Cb)({ type: Array })],
          il.prototype,
          "images",
          void 0
        ),
        wui_transaction_visual_decorate(
          [(0, ef.Cb)({ type: Object })],
          il.prototype,
          "secondImage",
          void 0
        ),
        (il = wui_transaction_visual_decorate(
          [customElement("wui-transaction-visual")],
          il
        ));
      var ic = eo.iv`
  :host > wui-flex:first-child {
    align-items: center;
    column-gap: var(--wui-spacing-s);
    padding: 6.5px var(--wui-spacing-xs) 6.5px var(--wui-spacing-xs);
    width: 100%;
  }

  :host > wui-flex:first-child wui-text:nth-child(1) {
    text-transform: capitalize;
  }

  wui-transaction-visual {
    width: 40px;
    height: 40px;
  }

  wui-flex {
    flex: 1;
  }

  :host wui-flex wui-flex {
    overflow: hidden;
  }

  :host .description-container wui-text span {
    word-break: break-all;
  }

  :host .description-container wui-text {
    overflow: hidden;
  }

  :host .description-separator-icon {
    margin: 0px 6px;
  }

  :host wui-text > span {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
`,
        wui_transaction_list_item_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iu = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.type = "approve"),
            (this.onlyDirectionIcon = !1),
            (this.images = []),
            (this.price = []),
            (this.amount = []),
            (this.symbol = []);
        }
        render() {
          return eo.dy`
      <wui-flex>
        <wui-transaction-visual
          .status=${this.status}
          direction=${(0, rd.o)(this.direction)}
          type=${this.type}
          onlyDirectionIcon=${(0, rd.o)(this.onlyDirectionIcon)}
          .images=${this.images}
        ></wui-transaction-visual>
        <wui-flex flexDirection="column" gap="3xs">
          <wui-text variant="paragraph-600" color="fg-100">
            ${ei[this.type] || this.type}
          </wui-text>
          <wui-flex class="description-container">
            ${this.templateDescription()} ${this.templateSecondDescription()}
          </wui-flex>
        </wui-flex>
        <wui-text variant="micro-700" color="fg-300"><span>${
          this.date
        }</span></wui-text>
      </wui-flex>
    `;
        }
        templateDescription() {
          let s = this.descriptions?.[0];
          return s
            ? eo.dy`
          <wui-text variant="small-500" color="fg-200">
            <span>${s}</span>
          </wui-text>
        `
            : null;
        }
        templateSecondDescription() {
          let s = this.descriptions?.[1];
          return s
            ? eo.dy`
          <wui-icon class="description-separator-icon" size="xxs" name="arrowRight"></wui-icon>
          <wui-text variant="small-400" color="fg-200">
            <span>${s}</span>
          </wui-text>
        `
            : null;
        }
      };
      (iu.styles = [ec, ic]),
        wui_transaction_list_item_decorate(
          [(0, ef.Cb)()],
          iu.prototype,
          "type",
          void 0
        ),
        wui_transaction_list_item_decorate(
          [(0, ef.Cb)({ type: Array })],
          iu.prototype,
          "descriptions",
          void 0
        ),
        wui_transaction_list_item_decorate(
          [(0, ef.Cb)()],
          iu.prototype,
          "date",
          void 0
        ),
        wui_transaction_list_item_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iu.prototype,
          "onlyDirectionIcon",
          void 0
        ),
        wui_transaction_list_item_decorate(
          [(0, ef.Cb)()],
          iu.prototype,
          "status",
          void 0
        ),
        wui_transaction_list_item_decorate(
          [(0, ef.Cb)()],
          iu.prototype,
          "direction",
          void 0
        ),
        wui_transaction_list_item_decorate(
          [(0, ef.Cb)({ type: Array })],
          iu.prototype,
          "images",
          void 0
        ),
        wui_transaction_list_item_decorate(
          [(0, ef.Cb)({ type: Array })],
          iu.prototype,
          "price",
          void 0
        ),
        wui_transaction_list_item_decorate(
          [(0, ef.Cb)({ type: Array })],
          iu.prototype,
          "amount",
          void 0
        ),
        wui_transaction_list_item_decorate(
          [(0, ef.Cb)({ type: Array })],
          iu.prototype,
          "symbol",
          void 0
        ),
        (iu = wui_transaction_list_item_decorate(
          [customElement("wui-transaction-list-item")],
          iu
        ));
      var id = eo.iv`
  :host > wui-flex:first-child {
    column-gap: var(--wui-spacing-s);
    padding: 7px var(--wui-spacing-l) 7px var(--wui-spacing-xs);
    width: 100%;
  }

  wui-flex {
    display: flex;
    flex: 1;
  }
`;
      let ih = class extends eo.oi {
        render() {
          return eo.dy`
      <wui-flex alignItems="center">
        <wui-shimmer width="40px" height="40px"></wui-shimmer>
        <wui-flex flexDirection="column" gap="2xs">
          <wui-shimmer width="72px" height="16px" borderRadius="4xs"></wui-shimmer>
          <wui-shimmer width="148px" height="14px" borderRadius="4xs"></wui-shimmer>
        </wui-flex>
        <wui-shimmer width="24px" height="12px" borderRadius="5xs"></wui-shimmer>
      </wui-flex>
    `;
        }
      };
      (ih.styles = [ec, id]),
        (ih = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([customElement("wui-transaction-list-item-loader")], ih));
      var ip = eo.iv`
  :host {
    display: flex;
    justify-content: center;
    align-items: center;
    height: var(--wui-spacing-m);
    padding: 0 var(--wui-spacing-3xs) !important;
    border-radius: var(--wui-border-radius-5xs);
    transition:
      border-radius var(--wui-duration-lg) var(--wui-ease-out-power-1),
      background-color var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: border-radius, background-color;
  }

  :host > wui-text {
    transform: translateY(5%);
  }

  :host([data-variant='main']) {
    background-color: var(--wui-color-accent-glass-015);
    color: var(--wui-color-accent-100);
  }

  :host([data-variant='shade']) {
    background-color: var(--wui-color-gray-glass-010);
    color: var(--wui-color-fg-200);
  }

  :host([data-variant='success']) {
    background-color: var(--wui-icon-box-bg-success-100);
    color: var(--wui-color-success-100);
  }

  :host([data-variant='error']) {
    background-color: var(--wui-icon-box-bg-error-100);
    color: var(--wui-color-error-100);
  }

  :host([data-size='lg']) {
    padding: 11px 5px !important;
  }

  :host([data-size='lg']) > wui-text {
    transform: translateY(2%);
  }
`,
        wui_tag_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ig = class extends eo.oi {
        constructor() {
          super(...arguments), (this.variant = "main"), (this.size = "lg");
        }
        render() {
          (this.dataset.variant = this.variant),
            (this.dataset.size = this.size);
          let s = "md" === this.size ? "mini-700" : "micro-700";
          return eo.dy`
      <wui-text data-variant=${this.variant} variant=${s} color="inherit">
        <slot></slot>
      </wui-text>
    `;
        }
      };
      (ig.styles = [ec, ip]),
        wui_tag_decorate([(0, ef.Cb)()], ig.prototype, "variant", void 0),
        wui_tag_decorate([(0, ef.Cb)()], ig.prototype, "size", void 0),
        (ig = wui_tag_decorate([customElement("wui-tag")], ig));
      var im = eo.iv`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 7px var(--wui-spacing-l) 7px var(--wui-spacing-xs);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-100);
  }

  button > wui-text:nth-child(2) {
    display: flex;
    flex: 1;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-015);
    color: var(--wui-color-gray-glass-015);
  }

  button:disabled > wui-tag {
    background-color: var(--wui-color-gray-glass-010);
    color: var(--wui-color-fg-300);
  }

  wui-icon {
    color: var(--wui-color-fg-200) !important;
  }
`,
        wui_list_wallet_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iw = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.walletImages = []),
            (this.imageSrc = ""),
            (this.name = ""),
            (this.tabIdx = void 0),
            (this.installed = !1),
            (this.disabled = !1),
            (this.showAllWallets = !1);
        }
        render() {
          return eo.dy`
      <button ?disabled=${this.disabled} tabindex=${(0, rd.o)(
            this.tabIdx
          )} ontouchstart>
        ${this.templateAllWallets()} ${this.templateWalletImage()}
        <wui-text variant="paragraph-500" color="inherit">${
          this.name
        }</wui-text>
        ${this.templateStatus()}
      </button>
    `;
        }
        templateAllWallets() {
          return this.showAllWallets && this.imageSrc
            ? eo.dy` <wui-all-wallets-image .imageeSrc=${this.imageSrc}> </wui-all-wallets-image> `
            : this.showAllWallets && this.walletIcon
            ? eo.dy` <wui-wallet-image .walletIcon=${this.walletIcon} size="sm"> </wui-wallet-image> `
            : null;
        }
        templateWalletImage() {
          return !this.showAllWallets && this.imageSrc
            ? eo.dy`<wui-wallet-image
        size="sm"
        imageSrc=${this.imageSrc}
        name=${this.name}
        .installed=${this.installed}
      ></wui-wallet-image>`
            : this.showAllWallets || this.imageSrc
            ? null
            : eo.dy`<wui-wallet-image size="sm" name=${this.name}></wui-wallet-image>`;
        }
        templateStatus() {
          return this.tagLabel && this.tagVariant
            ? eo.dy`<wui-tag variant=${this.tagVariant}>${this.tagLabel}</wui-tag>`
            : this.icon
            ? eo.dy`<wui-icon color="inherit" size="sm" name=${this.icon}></wui-icon>`
            : null;
        }
      };
      (iw.styles = [ec, eu, im]),
        wui_list_wallet_decorate(
          [(0, ef.Cb)({ type: Array })],
          iw.prototype,
          "walletImages",
          void 0
        ),
        wui_list_wallet_decorate(
          [(0, ef.Cb)()],
          iw.prototype,
          "imageSrc",
          void 0
        ),
        wui_list_wallet_decorate([(0, ef.Cb)()], iw.prototype, "name", void 0),
        wui_list_wallet_decorate(
          [(0, ef.Cb)()],
          iw.prototype,
          "tagLabel",
          void 0
        ),
        wui_list_wallet_decorate(
          [(0, ef.Cb)()],
          iw.prototype,
          "tagVariant",
          void 0
        ),
        wui_list_wallet_decorate([(0, ef.Cb)()], iw.prototype, "icon", void 0),
        wui_list_wallet_decorate(
          [(0, ef.Cb)()],
          iw.prototype,
          "walletIcon",
          void 0
        ),
        wui_list_wallet_decorate(
          [(0, ef.Cb)()],
          iw.prototype,
          "tabIdx",
          void 0
        ),
        wui_list_wallet_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iw.prototype,
          "installed",
          void 0
        ),
        wui_list_wallet_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iw.prototype,
          "disabled",
          void 0
        ),
        wui_list_wallet_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iw.prototype,
          "showAllWallets",
          void 0
        ),
        (iw = wui_list_wallet_decorate([customElement("wui-list-wallet")], iw));
      var ib = eo.iv`
  :host {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-005);
    overflow: hidden;
  }

  wui-icon {
    width: 100%;
    height: 100%;
  }
`,
        wui_logo_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iv = class extends eo.oi {
        constructor() {
          super(...arguments), (this.logo = "google");
        }
        render() {
          return eo.dy`<wui-icon color="inherit" size="inherit" name=${this.logo}></wui-icon> `;
        }
      };
      (iv.styles = [ec, ib]),
        wui_logo_decorate([(0, ef.Cb)()], iv.prototype, "logo", void 0),
        (iv = wui_logo_decorate([customElement("wui-logo")], iv));
      var iy = eo.iv`
  :host {
    display: block;
    width: 100%;
  }

  button {
    width: 100%;
    height: 56px;
    background: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
  }
`,
        wui_logo_select_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i_ = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.logo = "google"),
            (this.disabled = !1),
            (this.tabIdx = void 0);
        }
        render() {
          return eo.dy`
      <button ?disabled=${this.disabled} tabindex=${(0, rd.o)(
            this.tabIdx
          )} ontouchstart>
        <wui-logo logo=${this.logo}></wui-logo>
      </button>
    `;
        }
      };
      (i_.styles = [ec, eu, iy]),
        wui_logo_select_decorate([(0, ef.Cb)()], i_.prototype, "logo", void 0),
        wui_logo_select_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          i_.prototype,
          "disabled",
          void 0
        ),
        wui_logo_select_decorate(
          [(0, ef.Cb)()],
          i_.prototype,
          "tabIdx",
          void 0
        ),
        (i_ = wui_logo_select_decorate([customElement("wui-logo-select")], i_));
      var iC = eo.iv`
  :host {
    display: block;
  }

  button {
    border-radius: var(--wui-border-radius-3xl);
    display: flex;
    gap: var(--wui-spacing-xs);
    padding: var(--wui-spacing-2xs) var(--wui-spacing-s) var(--wui-spacing-2xs)
      var(--wui-spacing-xs);
    border: 1px solid var(--wui-color-gray-glass-010);
    background-color: var(--wui-color-gray-glass-005);
    color: var(--wui-color-fg-100);
  }

  button:disabled {
    border: 1px solid var(--wui-color-gray-glass-005);
    background-color: var(--wui-color-gray-glass-015);
    color: var(--wui-color-gray-glass-015);
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-gray-glass-010);
    }

    button:active:enabled {
      background-color: var(--wui-color-gray-glass-015);
    }
  }

  wui-image,
  wui-icon-box {
    border-radius: var(--wui-border-radius-3xl);
    width: 24px;
    height: 24px;
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-005);
  }
`,
        wui_network_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ix = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.imageSrc = void 0),
            (this.isUnsupportedChain = void 0),
            (this.disabled = !1);
        }
        render() {
          return eo.dy`
      <button data-testid="wui-network-button" ?disabled=${this.disabled}>
        ${this.visualTemplate()}
        <wui-text variant="paragraph-600" color="inherit">
          <slot></slot>
        </wui-text>
      </button>
    `;
        }
        visualTemplate() {
          return this.isUnsupportedChain
            ? eo.dy`
        <wui-icon-box
          size="sm"
          iconColor="error-100"
          backgroundColor="error-100"
          icon="warningCircle"
        ></wui-icon-box>
      `
            : this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc}></wui-image>`
            : eo.dy`
      <wui-icon-box
        size="sm"
        iconColor="inverse-100"
        backgroundColor="fg-100"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `;
        }
      };
      (ix.styles = [ec, eu, iC]),
        wui_network_button_decorate(
          [(0, ef.Cb)()],
          ix.prototype,
          "imageSrc",
          void 0
        ),
        wui_network_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ix.prototype,
          "isUnsupportedChain",
          void 0
        ),
        wui_network_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ix.prototype,
          "disabled",
          void 0
        ),
        (ix = wui_network_button_decorate(
          [customElement("wui-network-button")],
          ix
        ));
      var iE = eo.iv`
  :host {
    position: relative;
    display: block;
  }
`,
        wui_otp_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iA = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.length = 6),
            (this.otp = ""),
            (this.values = Array.from({ length: this.length }).map(() => "")),
            (this.numerics = []),
            (this.shouldInputBeEnabled = (s) => {
              let x = this.values.slice(0, s);
              return x.every((s) => "" !== s);
            }),
            (this.handleKeyDown = (s, x) => {
              let W = s.target,
                X = this.getInputElement(W);
              if (!X) return;
              ["ArrowLeft", "ArrowRight", "Shift", "Delete"].includes(s.key) &&
                s.preventDefault();
              let ee = X.selectionStart;
              switch (s.key) {
                case "ArrowLeft":
                  ee && X.setSelectionRange(ee + 1, ee + 1),
                    this.focusInputField("prev", x);
                  break;
                case "ArrowRight":
                case "Shift":
                  this.focusInputField("next", x);
                  break;
                case "Delete":
                case "Backspace":
                  "" === X.value
                    ? this.focusInputField("prev", x)
                    : this.updateInput(X, x, "");
              }
            }),
            (this.focusInputField = (s, x) => {
              if ("next" === s) {
                let s = x + 1;
                if (!this.shouldInputBeEnabled(s)) return;
                let W = this.numerics[s < this.length ? s : x],
                  X = W ? this.getInputElement(W) : void 0;
                X && ((X.disabled = !1), X.focus());
              }
              if ("prev" === s) {
                let s = x - 1,
                  W = this.numerics[s > -1 ? s : x],
                  X = W ? this.getInputElement(W) : void 0;
                X && X.focus();
              }
            });
        }
        firstUpdated() {
          this.otp && (this.values = this.otp.split(""));
          let s = this.shadowRoot?.querySelectorAll("wui-input-numeric");
          s && (this.numerics = Array.from(s)), this.numerics[0]?.focus();
        }
        render() {
          return eo.dy`
      <wui-flex gap="xxs" data-testid="wui-otp-input">
        ${Array.from({ length: this.length }).map(
          (s, x) => eo.dy`
            <wui-input-numeric
              @input=${(s) => this.handleInput(s, x)}
              @click=${(s) => this.selectInput(s)}
              @keydown=${(s) => this.handleKeyDown(s, x)}
              .disabled=${!this.shouldInputBeEnabled(x)}
              .value=${this.values[x] || ""}
            >
            </wui-input-numeric>
          `
        )}
      </wui-flex>
    `;
        }
        updateInput(s, x, W) {
          let X = this.numerics[x],
            ee = s || (X ? this.getInputElement(X) : void 0);
          ee &&
            ((ee.value = W),
            (this.values = this.values.map((s, X) => (X === x ? W : s))));
        }
        selectInput(s) {
          let x = s.target;
          if (x) {
            let s = this.getInputElement(x);
            s?.select();
          }
        }
        handleInput(s, x) {
          let W = s.target,
            X = this.getInputElement(W);
          if (X) {
            let W = X.value;
            if ("insertFromPaste" === s.inputType) this.handlePaste(X, W, x);
            else {
              let ee = rh.isNumber(W);
              ee && s.data
                ? (this.updateInput(X, x, s.data),
                  this.focusInputField("next", x))
                : this.updateInput(X, x, "");
            }
          }
          this.dispatchInputChangeEvent();
        }
        handlePaste(s, x, W) {
          let X = x[0],
            ee = X && rh.isNumber(X);
          if (ee) {
            this.updateInput(s, W, X);
            let ee = x.substring(1);
            if (W + 1 < this.length && ee.length) {
              let s = this.numerics[W + 1],
                x = s ? this.getInputElement(s) : void 0;
              x && this.handlePaste(x, ee, W + 1);
            } else this.focusInputField("next", W);
          } else this.updateInput(s, W, "");
        }
        getInputElement(s) {
          return s.shadowRoot?.querySelector("input")
            ? s.shadowRoot.querySelector("input")
            : null;
        }
        dispatchInputChangeEvent() {
          let s = this.values.join("");
          this.dispatchEvent(
            new CustomEvent("inputChange", {
              detail: s,
              bubbles: !0,
              composed: !0,
            })
          );
        }
      };
      (iA.styles = [ec, iE]),
        wui_otp_decorate(
          [(0, ef.Cb)({ type: Number })],
          iA.prototype,
          "length",
          void 0
        ),
        wui_otp_decorate(
          [(0, ef.Cb)({ type: String })],
          iA.prototype,
          "otp",
          void 0
        ),
        wui_otp_decorate([(0, ef.SB)()], iA.prototype, "values", void 0),
        (iA = wui_otp_decorate([customElement("wui-otp")], iA));
      var iS = W(92592);
      function isAdjecentDots(s, x, W) {
        return s !== x && (s - x < 0 ? x - s : s - x) <= W + 0.1;
      }
      let ik = {
        generate({ uri: s, size: x, logoSize: W, dotColor: X = "#141414" }) {
          let ee = [],
            et = (function (s, x) {
              let W = Array.prototype.slice.call(
                  iS.create(s, { errorCorrectionLevel: "Q" }).modules.data,
                  0
                ),
                X = Math.sqrt(W.length);
              return W.reduce(
                (s, x, W) =>
                  (W % X == 0 ? s.push([x]) : s[s.length - 1].push(x)) && s,
                []
              );
            })(s, 0),
            er = x / et.length,
            ei = [
              { x: 0, y: 0 },
              { x: 1, y: 0 },
              { x: 0, y: 1 },
            ];
          ei.forEach(({ x: s, y: x }) => {
            let W = (et.length - 7) * er * s,
              ea = (et.length - 7) * er * x;
            for (let s = 0; s < ei.length; s += 1) {
              let x = er * (7 - 2 * s);
              ee.push(eo.YP`
            <rect
              fill=${2 === s ? X : "transparent"}
              width=${0 === s ? x - 5 : x}
              rx= ${0 === s ? (x - 5) * 0.45 : 0.45 * x}
              ry= ${0 === s ? (x - 5) * 0.45 : 0.45 * x}
              stroke=${X}
              stroke-width=${0 === s ? 5 : 0}
              height=${0 === s ? x - 5 : x}
              x= ${0 === s ? ea + er * s + 2.5 : ea + er * s}
              y= ${0 === s ? W + er * s + 2.5 : W + er * s}
            />
          `);
            }
          });
          let ea = Math.floor((W + 25) / er),
            es = et.length / 2 - ea / 2,
            el = et.length / 2 + ea / 2 - 1,
            ec = [];
          et.forEach((s, x) => {
            s.forEach((s, W) => {
              if (
                et[x][W] &&
                !(
                  (x < 7 && W < 7) ||
                  (x > et.length - 8 && W < 7) ||
                  (x < 7 && W > et.length - 8)
                ) &&
                !(x > es && x < el && W > es && W < el)
              ) {
                let s = x * er + er / 2,
                  X = W * er + er / 2;
                ec.push([s, X]);
              }
            });
          });
          let eu = {};
          return (
            ec.forEach(([s, x]) => {
              eu[s] ? eu[s]?.push(x) : (eu[s] = [x]);
            }),
            Object.entries(eu)
              .map(([s, x]) => {
                let W = x.filter((s) =>
                  x.every((x) => !isAdjecentDots(s, x, er))
                );
                return [Number(s), W];
              })
              .forEach(([s, x]) => {
                x.forEach((x) => {
                  ee.push(
                    eo.YP`<circle cx=${s} cy=${x} fill=${X} r=${er / 2.5} />`
                  );
                });
              }),
            Object.entries(eu)
              .filter(([s, x]) => x.length > 1)
              .map(([s, x]) => {
                let W = x.filter((s) =>
                  x.some((x) => isAdjecentDots(s, x, er))
                );
                return [Number(s), W];
              })
              .map(([s, x]) => {
                x.sort((s, x) => (s < x ? -1 : 1));
                let W = [];
                for (let s of x) {
                  let x = W.find((x) =>
                    x.some((x) => isAdjecentDots(s, x, er))
                  );
                  x ? x.push(s) : W.push([s]);
                }
                return [s, W.map((s) => [s[0], s[s.length - 1]])];
              })
              .forEach(([s, x]) => {
                x.forEach(([x, W]) => {
                  ee.push(eo.YP`
              <line
                x1=${s}
                x2=${s}
                y1=${x}
                y2=${W}
                stroke=${X}
                stroke-width=${er / 1.25}
                stroke-linecap="round"
              />
            `);
                });
              }),
            ee
          );
        },
      };
      var iT = eo.iv`
  :host {
    position: relative;
    user-select: none;
    display: block;
    overflow: hidden;
    aspect-ratio: 1 / 1;
    width: var(--local-size);
  }

  :host([data-theme='dark']) {
    border-radius: clamp(0px, var(--wui-border-radius-l), 40px);
    background-color: var(--wui-color-inverse-100);
    padding: var(--wui-spacing-l);
  }

  :host([data-theme='light']) {
    box-shadow: 0 0 0 1px var(--wui-color-bg-125);
    background-color: var(--wui-color-bg-125);
  }

  :host([data-clear='true']) > wui-icon {
    display: none;
  }

  svg:first-child,
  wui-image,
  wui-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateY(-50%) translateX(-50%);
  }

  wui-image {
    width: 25%;
    height: 25%;
    border-radius: var(--wui-border-radius-xs);
  }

  wui-icon {
    width: 100%;
    height: 100%;
    color: var(--local-icon-color) !important;
    transform: translateY(-50%) translateX(-50%) scale(0.25);
  }
`,
        wui_qr_code_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iI = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.uri = ""),
            (this.size = 0),
            (this.theme = "dark"),
            (this.imageSrc = void 0),
            (this.alt = void 0),
            (this.arenaClear = void 0),
            (this.farcaster = void 0);
        }
        render() {
          return (
            (this.dataset.theme = this.theme),
            (this.dataset.clear = String(this.arenaClear)),
            (this.style.cssText = `
     --local-size: ${this.size}px;
     --local-icon-color: ${this.color ?? "#3396ff"}
    `),
            eo.dy`${this.templateVisual()} ${this.templateSvg()}`
          );
        }
        templateSvg() {
          let s = "light" === this.theme ? this.size : this.size - 32;
          return eo.YP`
      <svg height=${s} width=${s}>
        ${ik.generate({
          uri: this.uri,
          size: s,
          logoSize: this.arenaClear ? 0 : s / 4,
          dotColor: this.color,
        })}
      </svg>
    `;
        }
        templateVisual() {
          return this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc} alt=${
                this.alt ?? "logo"
              }></wui-image>`
            : this.farcaster
            ? eo.dy`<wui-icon
        class="farcaster"
        size="inherit"
        color="inherit"
        name="farcaster"
      ></wui-icon>`
            : eo.dy`<wui-icon size="inherit" color="inherit" name="walletConnect"></wui-icon>`;
        }
      };
      (iI.styles = [ec, iT]),
        wui_qr_code_decorate([(0, ef.Cb)()], iI.prototype, "uri", void 0),
        wui_qr_code_decorate(
          [(0, ef.Cb)({ type: Number })],
          iI.prototype,
          "size",
          void 0
        ),
        wui_qr_code_decorate([(0, ef.Cb)()], iI.prototype, "theme", void 0),
        wui_qr_code_decorate([(0, ef.Cb)()], iI.prototype, "imageSrc", void 0),
        wui_qr_code_decorate([(0, ef.Cb)()], iI.prototype, "alt", void 0),
        wui_qr_code_decorate([(0, ef.Cb)()], iI.prototype, "color", void 0),
        wui_qr_code_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iI.prototype,
          "arenaClear",
          void 0
        ),
        wui_qr_code_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iI.prototype,
          "farcaster",
          void 0
        ),
        (iI = wui_qr_code_decorate([customElement("wui-qr-code")], iI));
      var iP = eo.iv`
  :host {
    position: relative;
    display: inline-block;
    width: 100%;
  }
`;
      let iR = class extends eo.oi {
        constructor() {
          super(...arguments), (this.inputComponentRef = (0, rQ.V)());
        }
        render() {
          return eo.dy`
      <wui-input-text
        ${(0, rQ.i)(this.inputComponentRef)}
        placeholder="Search wallet"
        icon="search"
        type="search"
        enterKeyHint="search"
        size="sm"
      >
        <wui-input-element @click=${
          this.clearValue
        } icon="close"></wui-input-element>
      </wui-input-text>
    `;
        }
        clearValue() {
          let s = this.inputComponentRef.value,
            x = s?.inputElementRef.value;
          x && ((x.value = ""), x.focus(), x.dispatchEvent(new Event("input")));
        }
      };
      (iR.styles = [ec, iP]),
        (iR = (function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        })([customElement("wui-search-bar")], iR));
      var iN = eo.iv`
  :host {
    display: flex;
    column-gap: var(--wui-spacing-s);
    align-items: center;
    padding: var(--wui-spacing-xs) var(--wui-spacing-m) var(--wui-spacing-xs) var(--wui-spacing-xs);
    border-radius: var(--wui-border-radius-s);
    border: 1px solid var(--wui-color-gray-glass-005);
    box-sizing: border-box;
    background-color: var(--wui-color-bg-175);
    box-shadow:
      0px 14px 64px -4px rgba(0, 0, 0, 0.15),
      0px 8px 22px -6px rgba(0, 0, 0, 0.15);

    max-width: 300px;
  }

  :host wui-loading-spinner {
    margin-left: var(--wui-spacing-3xs);
  }
`,
        wui_snackbar_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iO = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.backgroundColor = "accent-100"),
            (this.iconColor = "accent-100"),
            (this.icon = "checkmark"),
            (this.message = ""),
            (this.loading = !1),
            (this.iconType = "default");
        }
        render() {
          return eo.dy`
      ${this.templateIcon()}
      <wui-text variant="paragraph-500" color="fg-100" data-testid="wui-snackbar-message"
        >${this.message}</wui-text
      >
    `;
        }
        templateIcon() {
          return this.loading
            ? eo.dy`<wui-loading-spinner size="md" color="accent-100"></wui-loading-spinner>`
            : "default" === this.iconType
            ? eo.dy`<wui-icon size="xl" color=${this.iconColor} name=${this.icon}></wui-icon>`
            : eo.dy`<wui-icon-box
      size="sm"
      iconSize="xs"
      iconColor=${this.iconColor}
      backgroundColor=${this.backgroundColor}
      icon=${this.icon}
      background="opaque"
    ></wui-icon-box>`;
        }
      };
      (iO.styles = [ec, iN]),
        wui_snackbar_decorate(
          [(0, ef.Cb)()],
          iO.prototype,
          "backgroundColor",
          void 0
        ),
        wui_snackbar_decorate(
          [(0, ef.Cb)()],
          iO.prototype,
          "iconColor",
          void 0
        ),
        wui_snackbar_decorate([(0, ef.Cb)()], iO.prototype, "icon", void 0),
        wui_snackbar_decorate([(0, ef.Cb)()], iO.prototype, "message", void 0),
        wui_snackbar_decorate([(0, ef.Cb)()], iO.prototype, "loading", void 0),
        wui_snackbar_decorate([(0, ef.Cb)()], iO.prototype, "iconType", void 0),
        (iO = wui_snackbar_decorate([customElement("wui-snackbar")], iO));
      var iM = W(83408),
        iD = eo.iv`
  :host {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-s);
    border: 1px solid var(--wui-color-dark-glass-100);
    box-sizing: border-box;
    background-color: var(--wui-color-bg-325);
    box-shadow: 0px 0px 16px 0px rgba(0, 0, 0, 0.25);
  }

  wui-flex {
    width: 100%;
  }

  wui-text {
    word-break: break-word;
    flex: 1;
  }

  .close {
    cursor: pointer;
  }

  .icon-box {
    height: 40px;
    width: 40px;
    border-radius: var(--wui-border-radius-3xs);
    background-color: var(--local-icon-bg-value);
  }
`,
        wui_alertbar_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iB = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.message = ""),
            (this.backgroundColor = "accent-100"),
            (this.iconColor = "accent-100"),
            (this.icon = "info");
        }
        render() {
          return (
            (this.style.cssText = `
      --local-icon-bg-value: var(--wui-color-${this.backgroundColor});
   `),
            eo.dy`
      <wui-flex flexDirection="row" justifyContent="space-between" alignItems="center">
        <wui-flex columnGap="xs" flexDirection="row" alignItems="center">
          <wui-flex
            flexDirection="row"
            alignItems="center"
            justifyContent="center"
            class="icon-box"
          >
            <wui-icon color=${this.iconColor} size="md" name=${this.icon}></wui-icon>
          </wui-flex>
          <wui-text variant="small-500" color="bg-350" data-testid="wui-alertbar-text"
            >${this.message}</wui-text
          >
        </wui-flex>
        <wui-icon
          class="close"
          color="bg-350"
          size="sm"
          name="close"
          @click=${this.onClose}
        ></wui-icon>
      </wui-flex>
    `
          );
        }
        onClose() {
          iM.AlertController.close();
        }
      };
      (iB.styles = [ec, iD]),
        wui_alertbar_decorate([(0, ef.Cb)()], iB.prototype, "message", void 0),
        wui_alertbar_decorate(
          [(0, ef.Cb)()],
          iB.prototype,
          "backgroundColor",
          void 0
        ),
        wui_alertbar_decorate(
          [(0, ef.Cb)()],
          iB.prototype,
          "iconColor",
          void 0
        ),
        wui_alertbar_decorate([(0, ef.Cb)()], iB.prototype, "icon", void 0),
        (iB = wui_alertbar_decorate([customElement("wui-alertbar")], iB));
      var iL = eo.iv`
  :host {
    display: inline-flex;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-3xl);
    padding: var(--wui-spacing-3xs);
    position: relative;
    height: 36px;
    min-height: 36px;
    overflow: hidden;
  }

  :host::before {
    content: '';
    position: absolute;
    pointer-events: none;
    top: 4px;
    left: 4px;
    display: block;
    width: var(--local-tab-width);
    height: 28px;
    border-radius: var(--wui-border-radius-3xl);
    background-color: var(--wui-color-gray-glass-002);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    transform: translateX(calc(var(--local-tab) * var(--local-tab-width)));
    transition: transform var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color, opacity;
  }

  :host([data-type='flex'])::before {
    left: 3px;
    transform: translateX(calc((var(--local-tab) * 34px) + (var(--local-tab) * 4px)));
  }

  :host([data-type='flex']) {
    display: flex;
    padding: 0px 0px 0px 12px;
    gap: 4px;
  }

  :host([data-type='flex']) > button > wui-text {
    position: absolute;
    left: 18px;
    opacity: 0;
  }

  button[data-active='true'] > wui-icon,
  button[data-active='true'] > wui-text {
    color: var(--wui-color-fg-100);
  }

  button[data-active='false'] > wui-icon,
  button[data-active='false'] > wui-text {
    color: var(--wui-color-fg-200);
  }

  button[data-active='true']:disabled,
  button[data-active='false']:disabled {
    background-color: transparent;
    opacity: 0.5;
    cursor: not-allowed;
  }

  button[data-active='true']:disabled > wui-text {
    color: var(--wui-color-fg-200);
  }

  button[data-active='false']:disabled > wui-text {
    color: var(--wui-color-fg-300);
  }

  button > wui-icon,
  button > wui-text {
    pointer-events: none;
    transition: color var(--wui-e ase-out-power-1) var(--wui-duration-md);
    will-change: color;
  }

  button {
    width: var(--local-tab-width);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color;
  }

  :host([data-type='flex']) > button {
    width: 34px;
    position: relative;
    display: flex;
    justify-content: flex-start;
  }

  button:hover:enabled,
  button:active:enabled {
    background-color: transparent !important;
  }

  button:hover:enabled > wui-icon,
  button:active:enabled > wui-icon {
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-lg);
    color: var(--wui-color-fg-125);
  }

  button:hover:enabled > wui-text,
  button:active:enabled > wui-text {
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-lg);
    color: var(--wui-color-fg-125);
  }

  button {
    border-radius: var(--wui-border-radius-3xl);
  }
`,
        wui_tabs_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ij = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.tabs = []),
            (this.onTabChange = () => null),
            (this.buttons = []),
            (this.disabled = !1),
            (this.localTabWidth = "100px"),
            (this.activeTab = 0),
            (this.isDense = !1);
        }
        render() {
          return (
            (this.isDense = this.tabs.length > 3),
            (this.style.cssText = `
      --local-tab: ${this.activeTab};
      --local-tab-width: ${this.localTabWidth};
    `),
            (this.dataset.type = this.isDense ? "flex" : "block"),
            this.tabs.map((s, x) => {
              let W = x === this.activeTab;
              return eo.dy`
        <button
          ?disabled=${this.disabled}
          @click=${() => this.onTabClick(x)}
          data-active=${W}
          data-testid="tab-${s.label?.toLowerCase()}"
        >
          ${this.iconTemplate(s)}
          <wui-text variant="small-600" color="inherit"> ${s.label} </wui-text>
        </button>
      `;
            })
          );
        }
        firstUpdated() {
          this.shadowRoot &&
            this.isDense &&
            ((this.buttons = [...this.shadowRoot.querySelectorAll("button")]),
            setTimeout(() => {
              this.animateTabs(0, !0);
            }, 0));
        }
        iconTemplate(s) {
          return s.icon
            ? eo.dy`<wui-icon size="xs" color="inherit" name=${s.icon}></wui-icon>`
            : null;
        }
        onTabClick(s) {
          this.buttons && this.animateTabs(s, !1),
            (this.activeTab = s),
            this.onTabChange(s);
        }
        animateTabs(s, x) {
          let W = this.buttons[this.activeTab],
            X = this.buttons[s],
            ee = W?.querySelector("wui-text"),
            et = X?.querySelector("wui-text"),
            er = X?.getBoundingClientRect(),
            ei = et?.getBoundingClientRect();
          W &&
            ee &&
            !x &&
            s !== this.activeTab &&
            (ee.animate([{ opacity: 0 }], {
              duration: 50,
              easing: "ease",
              fill: "forwards",
            }),
            W.animate([{ width: "34px" }], {
              duration: 500,
              easing: "ease",
              fill: "forwards",
            })),
            X &&
              er &&
              ei &&
              et &&
              (s !== this.activeTab || x) &&
              ((this.localTabWidth = `${
                Math.round(er.width + ei.width) + 6
              }px`),
              X.animate([{ width: `${er.width + ei.width}px` }], {
                duration: x ? 0 : 500,
                fill: "forwards",
                easing: "ease",
              }),
              et.animate([{ opacity: 1 }], {
                duration: x ? 0 : 125,
                delay: x ? 0 : 200,
                fill: "forwards",
                easing: "ease",
              }));
        }
      };
      (ij.styles = [ec, eu, iL]),
        wui_tabs_decorate(
          [(0, ef.Cb)({ type: Array })],
          ij.prototype,
          "tabs",
          void 0
        ),
        wui_tabs_decorate([(0, ef.Cb)()], ij.prototype, "onTabChange", void 0),
        wui_tabs_decorate(
          [(0, ef.Cb)({ type: Array })],
          ij.prototype,
          "buttons",
          void 0
        ),
        wui_tabs_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ij.prototype,
          "disabled",
          void 0
        ),
        wui_tabs_decorate(
          [(0, ef.Cb)()],
          ij.prototype,
          "localTabWidth",
          void 0
        ),
        wui_tabs_decorate([(0, ef.SB)()], ij.prototype, "activeTab", void 0),
        wui_tabs_decorate([(0, ef.SB)()], ij.prototype, "isDense", void 0),
        (ij = wui_tabs_decorate([customElement("wui-tabs")], ij));
      var iU = eo.iv`
  :host {
    display: block;
  }

  :host > button {
    gap: var(--wui-spacing-xxs);
    padding: var(--wui-spacing-xs);
    padding-right: var(--wui-spacing-1xs);
    height: 40px;
    border-radius: var(--wui-border-radius-l);
    background: var(--wui-color-gray-glass-002);
    border-width: 0px;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
  }

  :host > button wui-image {
    width: 24px;
    height: 24px;
    border-radius: var(--wui-border-radius-s);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }
`,
        wui_token_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i$ = class extends eo.oi {
        constructor() {
          super(...arguments), (this.text = "");
        }
        render() {
          return eo.dy`
      <button ontouchstart>
        ${this.tokenTemplate()}
        <wui-text variant="paragraph-600" color="fg-100">${this.text}</wui-text>
      </button>
    `;
        }
        tokenTemplate() {
          return this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc}></wui-image>`
            : eo.dy`
      <wui-icon-box
        size="sm"
        iconColor="fg-200"
        backgroundColor="fg-300"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `;
        }
      };
      (i$.styles = [ec, eu, iU]),
        wui_token_button_decorate(
          [(0, ef.Cb)()],
          i$.prototype,
          "imageSrc",
          void 0
        ),
        wui_token_button_decorate([(0, ef.Cb)()], i$.prototype, "text", void 0),
        (i$ = wui_token_button_decorate(
          [customElement("wui-token-button")],
          i$
        ));
      var iF = eo.iv`
  :host {
    display: block;
    padding: 9px var(--wui-spacing-s) 10px var(--wui-spacing-s);
    border-radius: var(--wui-border-radius-xxs);

    color: var(--wui-color-bg-100);
    position: relative;
  }

  :host([data-variant='shade']) {
    background-color: var(--wui-color-bg-150);
    border: 1px solid var(--wui-color-gray-glass-005);
  }

  :host([data-variant='shade']) > wui-text {
    color: var(--wui-color-fg-150);
  }

  :host([data-variant='fill']) {
    background-color: var(--wui-color-fg-100);
    border: none;
  }

  wui-icon {
    position: absolute;
    width: 12px !important;
    height: 4px !important;
  }

  wui-icon[data-placement='top'] {
    bottom: 0px;
    left: 50%;
    transform: translate(-50%, 95%);
  }

  wui-icon[data-placement='bottom'] {
    top: 0;
    left: 50%;
    transform: translate(-50%, -95%) rotate(180deg);
  }

  wui-icon[data-placement='right'] {
    top: 50%;
    left: 0;
    transform: translate(-65%, -50%) rotate(90deg);
  }

  wui-icon[data-placement='left'] {
    top: 50%;
    right: 0%;
    transform: translate(65%, -50%) rotate(270deg);
  }
`,
        wui_tooltip_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iz = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.placement = "top"),
            (this.variant = "fill"),
            (this.message = "");
        }
        render() {
          return (
            (this.dataset.variant = this.variant),
            eo.dy`<wui-icon
        data-placement=${this.placement}
        color="fg-100"
        size="inherit"
        name=${"fill" === this.variant ? "cursor" : "cursorTransparent"}
      ></wui-icon>
      <wui-text color="inherit" variant="small-500">${this.message}</wui-text>`
          );
        }
      };
      (iz.styles = [ec, eu, iF]),
        wui_tooltip_decorate([(0, ef.Cb)()], iz.prototype, "placement", void 0),
        wui_tooltip_decorate([(0, ef.Cb)()], iz.prototype, "variant", void 0),
        wui_tooltip_decorate([(0, ef.Cb)()], iz.prototype, "message", void 0),
        (iz = wui_tooltip_decorate([customElement("wui-tooltip")], iz));
      var iH = eo.iv`
  :host {
    height: 60px;
    min-height: 60px;
  }

  :host > wui-flex {
    cursor: pointer;
    height: 100%;
    display: flex;
    column-gap: var(--wui-spacing-s);
    padding: var(--wui-spacing-xs);
    padding-right: var(--wui-spacing-l);
    width: 100%;
    background-color: transparent;
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
    transition:
      background-color var(--wui-ease-out-power-1) var(--wui-duration-lg),
      opacity var(--wui-ease-out-power-1) var(--wui-duration-lg);
    will-change: background-color, opacity;
  }

  @media (hover: hover) and (pointer: fine) {
    :host > wui-flex:hover {
      background-color: var(--wui-color-gray-glass-002);
    }

    :host > wui-flex:active {
      background-color: var(--wui-color-gray-glass-005);
    }
  }

  :host([disabled]) > wui-flex {
    opacity: 0.6;
  }

  :host([disabled]) > wui-flex:hover {
    background-color: transparent;
  }

  :host > wui-flex > wui-flex {
    flex: 1;
  }

  :host > wui-flex > wui-image,
  :host > wui-flex > .token-item-image-placeholder {
    width: 40px;
    max-width: 40px;
    height: 40px;
    border-radius: var(--wui-border-radius-3xl);
    position: relative;
  }

  :host > wui-flex > .token-item-image-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  :host > wui-flex > wui-image::after,
  :host > wui-flex > .token-item-image-placeholder::after {
    position: absolute;
    content: '';
    inset: 0;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
    border-radius: var(--wui-border-radius-l);
  }

  button > wui-icon-box[data-variant='square-blue'] {
    border-radius: var(--wui-border-radius-3xs);
    position: relative;
    border: none;
    width: 36px;
    height: 36px;
  }
`,
        wui_token_list_item_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iq = class extends eo.oi {
        constructor() {
          super(),
            (this.observer = new IntersectionObserver(() => void 0)),
            (this.imageSrc = void 0),
            (this.name = void 0),
            (this.symbol = void 0),
            (this.price = void 0),
            (this.amount = void 0),
            (this.visible = !1),
            (this.imageError = !1),
            (this.observer = new IntersectionObserver(
              (s) => {
                s.forEach((s) => {
                  s.isIntersecting ? (this.visible = !0) : (this.visible = !1);
                });
              },
              { threshold: 0.1 }
            ));
        }
        firstUpdated() {
          this.observer.observe(this);
        }
        disconnectedCallback() {
          this.observer.disconnect();
        }
        render() {
          if (!this.visible) return null;
          let s =
            this.amount && this.price
              ? el.C6.multiply(this.price, this.amount)?.toFixed(3)
              : null;
          return eo.dy`
      <wui-flex alignItems="center">
        ${this.visualTemplate()}
        <wui-flex flexDirection="column" gap="3xs">
          <wui-flex justifyContent="space-between">
            <wui-text variant="paragraph-500" color="fg-100" lineClamp="1">${
              this.name
            }</wui-text>
            ${
              s
                ? eo.dy`
                  <wui-text variant="paragraph-500" color="fg-100">
                    $${rh.formatNumberToLocalString(s, 3)}
                  </wui-text>
                `
                : null
            }
          </wui-flex>
          <wui-flex justifyContent="space-between">
            <wui-text variant="small-400" color="fg-200" lineClamp="1">${
              this.symbol
            }</wui-text>
            ${
              this.amount
                ? eo.dy`<wui-text variant="small-400" color="fg-200">
                  ${rh.formatNumberToLocalString(this.amount, 4)}
                </wui-text>`
                : null
            }
          </wui-flex>
        </wui-flex>
      </wui-flex>
    `;
        }
        visualTemplate() {
          return this.imageError
            ? eo.dy`<wui-flex class="token-item-image-placeholder">
        <wui-icon name="image" color="inherit"></wui-icon>
      </wui-flex>`
            : this.imageSrc
            ? eo.dy`<wui-image
        width="40"
        height="40"
        src=${this.imageSrc}
        @onLoadError=${this.imageLoadError}
      ></wui-image>`
            : null;
        }
        imageLoadError() {
          this.imageError = !0;
        }
      };
      (iq.styles = [ec, eu, iH]),
        wui_token_list_item_decorate(
          [(0, ef.Cb)()],
          iq.prototype,
          "imageSrc",
          void 0
        ),
        wui_token_list_item_decorate(
          [(0, ef.Cb)()],
          iq.prototype,
          "name",
          void 0
        ),
        wui_token_list_item_decorate(
          [(0, ef.Cb)()],
          iq.prototype,
          "symbol",
          void 0
        ),
        wui_token_list_item_decorate(
          [(0, ef.Cb)()],
          iq.prototype,
          "price",
          void 0
        ),
        wui_token_list_item_decorate(
          [(0, ef.Cb)()],
          iq.prototype,
          "amount",
          void 0
        ),
        wui_token_list_item_decorate(
          [(0, ef.SB)()],
          iq.prototype,
          "visible",
          void 0
        ),
        wui_token_list_item_decorate(
          [(0, ef.SB)()],
          iq.prototype,
          "imageError",
          void 0
        ),
        (iq = wui_token_list_item_decorate(
          [customElement("wui-token-list-item")],
          iq
        ));
      var iV = eo.iv`
  :host {
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--wui-icon-box-size-xl);
    height: var(--wui-icon-box-size-xl);
    box-shadow: 0 0 0 8px var(--wui-thumbnail-border);
    border-radius: var(--local-border-radius);
    overflow: hidden;
  }

  wui-icon {
    width: 32px;
    height: 32px;
  }
`,
        wui_visual_thumbnail_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iW = class extends eo.oi {
        render() {
          return (
            (this.style.cssText = `--local-border-radius: ${
              this.borderRadiusFull ? "1000px" : "20px"
            }; background-color: var(--wui-color-modal-bg);`),
            eo.dy`${this.templateVisual()}`
          );
        }
        templateVisual() {
          return this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc} alt=${
                this.alt ?? ""
              }></wui-image>`
            : eo.dy`<wui-icon
      data-parent-size="md"
      size="inherit"
      color="inherit"
      name="walletPlaceholder"
    ></wui-icon>`;
        }
      };
      (iW.styles = [ec, iV]),
        wui_visual_thumbnail_decorate(
          [(0, ef.Cb)()],
          iW.prototype,
          "imageSrc",
          void 0
        ),
        wui_visual_thumbnail_decorate(
          [(0, ef.Cb)()],
          iW.prototype,
          "alt",
          void 0
        ),
        wui_visual_thumbnail_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iW.prototype,
          "borderRadiusFull",
          void 0
        ),
        (iW = wui_visual_thumbnail_decorate(
          [customElement("wui-visual-thumbnail")],
          iW
        ));
      var iK = eo.iv`
  @keyframes shake {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(3px);
    }
    50% {
      transform: translateX(-3px);
    }
    75% {
      transform: translateX(3px);
    }
    100% {
      transform: translateX(0);
    }
  }

  :host > button {
    min-width: 40px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    background-color: var(--wui-wallet-button-bg);
    column-gap: var(--wui-spacing-2xs);
    border-radius: var(--wui-border-radius-s);
    border: 1px solid var(--wui-color-gray-glass-002);
    height: var(--wui-spacing-3xl);
    padding: var(--wui-spacing-xs) var(--wui-spacing-m) var(--wui-spacing-xs) var(--wui-spacing-xs);
    box-shadow:
      0px 8px 22px -6px var(--wui-color-gray-glass-010),
      0px 14px 64px -4px var(--wui-color-gray-glass-010);
  }

  :host > button > wui-text {
    text-transform: capitalize;
  }

  :host > button > wui-image {
    height: 24px;
    width: 24px;
    border-radius: var(--wui-border-radius-s);
  }

  :host([data-error='true']) > button {
    animation: shake 250ms cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  }

  /* -- Disabled state --------------------------------------------------- */
  :host > button:disabled {
    cursor: default;
  }

  :host > button:disabled > wui-icon {
    filter: grayscale(1);
  }
`,
        wui_wallet_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iZ = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.imageSrc = ""),
            (this.name = ""),
            (this.walletConnect = !1),
            (this.loading = !1),
            (this.error = !1),
            (this.disabled = !1),
            (this.shake = !1);
        }
        render() {
          return (
            (this.dataset.error = `${this.error}`),
            eo.dy`
      <button ?disabled=${this.disabled} ontouchstart>
        ${this.leftViewTemplate()} ${this.rightViewTemplate()}
      </button>
    `
          );
        }
        leftViewTemplate() {
          return this.error
            ? eo.dy`<wui-icon-box
        icon="warningCircle"
        iconColor="error-100"
        backgroundColor="error-100"
        size="sm"
        iconSize="xs"
      ></wui-icon-box>`
            : this.loading
            ? eo.dy`<wui-loading-spinner size="md" color="fg-100"></wui-loading-spinner>`
            : this.icon
            ? eo.dy`<wui-icon size="xl" color="inherit" name=${this.icon}></wui-icon>`
            : this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc} alt=${this.name}></wui-image>`
            : eo.dy`<wui-icon size="xl" color="fg-100" name="walletPlaceholder"></wui-icon>`;
        }
        rightViewTemplate() {
          return eo.dy`
      <wui-text variant="paragraph-500" color="fg-100">${
        this.name || "Unknown"
      } </wui-text>
    `;
        }
      };
      (iZ.styles = [ec, eu, iK]),
        wui_wallet_button_decorate(
          [(0, ef.Cb)()],
          iZ.prototype,
          "imageSrc",
          void 0
        ),
        wui_wallet_button_decorate(
          [(0, ef.Cb)()],
          iZ.prototype,
          "name",
          void 0
        ),
        wui_wallet_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iZ.prototype,
          "walletConnect",
          void 0
        ),
        wui_wallet_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iZ.prototype,
          "icon",
          void 0
        ),
        wui_wallet_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iZ.prototype,
          "loading",
          void 0
        ),
        wui_wallet_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iZ.prototype,
          "error",
          void 0
        ),
        wui_wallet_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iZ.prototype,
          "disabled",
          void 0
        ),
        wui_wallet_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          iZ.prototype,
          "shake",
          void 0
        ),
        (iZ = wui_wallet_button_decorate(
          [customElement("wui-wallet-button")],
          iZ
        ));
      var iG = eo.iv`
  :host {
    display: block;
  }

  button {
    width: 100%;
    display: block;
    padding-top: var(--wui-spacing-l);
    padding-bottom: var(--wui-spacing-l);
    padding-left: var(--wui-spacing-s);
    padding-right: var(--wui-spacing-2l);
    border-radius: var(--wui-border-radius-s);
    background-color: var(--wui-color-accent-glass-010);
  }

  button:hover {
    background-color: var(--wui-color-accent-glass-015) !important;
  }

  button:active {
    background-color: var(--wui-color-accent-glass-020) !important;
  }
`,
        wui_notice_card_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iY = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.label = ""),
            (this.description = ""),
            (this.icon = "wallet");
        }
        render() {
          return eo.dy`
      <button>
        <wui-flex gap="m" alignItems="center" justifyContent="space-between">
          <wui-icon-box
            size="lg"
            iconcolor="accent-100"
            backgroundcolor="accent-100"
            icon=${this.icon}
            background="transparent"
          ></wui-icon-box>

          <wui-flex flexDirection="column" gap="3xs">
            <wui-text variant="paragraph-500" color="fg-100">${this.label}</wui-text>
            <wui-text variant="small-400" color="fg-200">${this.description}</wui-text>
          </wui-flex>

          <wui-icon size="md" color="fg-200" name="chevronRight"></wui-icon>
        </wui-flex>
      </button>
    `;
        }
      };
      (iY.styles = [ec, eu, iG]),
        wui_notice_card_decorate([(0, ef.Cb)()], iY.prototype, "label", void 0),
        wui_notice_card_decorate(
          [(0, ef.Cb)()],
          iY.prototype,
          "description",
          void 0
        ),
        wui_notice_card_decorate([(0, ef.Cb)()], iY.prototype, "icon", void 0),
        (iY = wui_notice_card_decorate([customElement("wui-notice-card")], iY));
      var iQ = eo.iv`
  button {
    height: auto;
    position: relative;
    flex-direction: column;
    gap: var(--wui-spacing-s);
    padding: 17px 18px 17px var(--wui-spacing-m);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
  }

  .overflowedContent {
    width: 100%;
    overflow: hidden;
  }

  .overflowedContent[data-active='false']:after {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to top, var(--wui-color-bg-150), transparent);
    border-bottom-left-radius: var(--wui-border-radius-xs);
    border-bottom-right-radius: var(--wui-border-radius-xs);
  }

  .heightContent {
    max-height: 100px;
  }

  pre {
    text-align: left;
    white-space: pre-wrap;
    height: auto;
    overflow-x: auto;
    overflow-wrap: anywhere;
  }
`,
        wui_list_accordion_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let iJ = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.textTitle = ""),
            (this.overflowedContent = ""),
            (this.toggled = !1),
            (this.enableAccordion = !1),
            (this.scrollElement = void 0),
            (this.scrollHeightElement = 0);
        }
        updated(s) {
          super.updated(s),
            (s.has("textTitle") || s.has("overflowedContent")) &&
              setTimeout(() => {
                this.checkHeight();
              }, 1);
        }
        checkHeight() {
          this.updateComplete.then(() => {
            let s = this.shadowRoot?.querySelector(".heightContent"),
              x = this.shadowRoot?.querySelector(".textContent");
            if (s && x) {
              this.scrollElement = s;
              let W = x?.scrollHeight;
              W &&
                W > 100 &&
                ((this.enableAccordion = !0),
                (this.scrollHeightElement = W),
                this.requestUpdate());
            }
          });
        }
        render() {
          return eo.dy`
      <button ontouchstart @click=${() => this.onClick()}>
        <wui-flex justifyContent="space-between" alignItems="center">
          <wui-text variant="paragraph-500" color="fg-100">${
            this.textTitle
          }</wui-text>
          ${this.chevronTemplate()}
        </wui-flex>
        <div
          data-active=${!this.enableAccordion || !!this.toggled}
          class="overflowedContent"
        >
          <div class="heightContent">
            <wui-text class="textContent" variant="paragraph-400" color="fg-200">
              <pre>${this.overflowedContent}</pre>
            </wui-text>
          </div>
        </div>
      </button>
    `;
        }
        onClick() {
          let s = this.shadowRoot?.querySelector("wui-icon");
          this.enableAccordion &&
            ((this.toggled = !this.toggled),
            this.requestUpdate(),
            this.scrollElement &&
              this.scrollElement.animate(
                [
                  {
                    maxHeight: this.toggled
                      ? "100px"
                      : `${this.scrollHeightElement}px`,
                  },
                  {
                    maxHeight: this.toggled
                      ? `${this.scrollHeightElement}px`
                      : "100px",
                  },
                ],
                { duration: 300, fill: "forwards", easing: "ease" }
              ),
            s &&
              s.animate(
                [
                  {
                    transform: this.toggled ? "rotate(0deg)" : "rotate(180deg)",
                  },
                  {
                    transform: this.toggled ? "rotate(180deg)" : "rotate(0deg)",
                  },
                ],
                { duration: 300, fill: "forwards", easing: "ease" }
              ));
        }
        chevronTemplate() {
          return this.enableAccordion
            ? eo.dy` <wui-icon color="fg-100" size="sm" name="chevronBottom"></wui-icon>`
            : null;
        }
      };
      (iJ.styles = [ec, eu, iQ]),
        wui_list_accordion_decorate(
          [(0, ef.Cb)()],
          iJ.prototype,
          "textTitle",
          void 0
        ),
        wui_list_accordion_decorate(
          [(0, ef.Cb)()],
          iJ.prototype,
          "overflowedContent",
          void 0
        ),
        (iJ = wui_list_accordion_decorate(
          [customElement("wui-list-accordion")],
          iJ
        ));
      var iX = eo.iv`
  :host {
    display: flex;
    column-gap: var(--wui-spacing-s);
    padding: 17px 18px 17px var(--wui-spacing-m);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
  }

  wui-image {
    width: var(--wui-icon-size-lg);
    height: var(--wui-icon-size-lg);
    border-radius: var(--wui-border-radius-3xl);
  }

  wui-icon {
    width: var(--wui-icon-size-lg);
    height: var(--wui-icon-size-lg);
  }
`,
        wui_list_content_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i0 = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.imageSrc = void 0),
            (this.textTitle = ""),
            (this.textValue = void 0);
        }
        render() {
          return eo.dy`
      <wui-flex justifyContent="space-between" alignItems="center">
        <wui-text variant="paragraph-500" color=${
          this.textValue ? "fg-200" : "fg-100"
        }>
          ${this.textTitle}
        </wui-text>
        ${this.templateContent()}
      </wui-flex>
    `;
        }
        templateContent() {
          return this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc} alt=${this.textTitle}></wui-image>`
            : this.textValue
            ? eo.dy` <wui-text variant="paragraph-400" color="fg-100"> ${this.textValue} </wui-text>`
            : eo.dy`<wui-icon size="inherit" color="fg-200" name="networkPlaceholder"></wui-icon>`;
        }
      };
      (i0.styles = [ec, eu, iX]),
        wui_list_content_decorate(
          [(0, ef.Cb)()],
          i0.prototype,
          "imageSrc",
          void 0
        ),
        wui_list_content_decorate(
          [(0, ef.Cb)()],
          i0.prototype,
          "textTitle",
          void 0
        ),
        wui_list_content_decorate(
          [(0, ef.Cb)()],
          i0.prototype,
          "textValue",
          void 0
        ),
        (i0 = wui_list_content_decorate(
          [customElement("wui-list-content")],
          i0
        ));
      var i1 = eo.iv`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 7px var(--wui-spacing-l) 7px var(--wui-spacing-xs);
    width: 100%;
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-md);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-100);
  }

  button > wui-text:nth-child(2) {
    display: flex;
    flex: 1;
  }

  button[data-transparent='true'] {
    pointer-events: none;
    background-color: transparent;
  }

  button:hover {
    background-color: var(--wui-color-gray-glass-002);
  }

  button:active {
    background-color: var(--wui-color-gray-glass-005);
  }

  wui-image {
    width: var(--wui-spacing-3xl);
    height: var(--wui-spacing-3xl);
    border-radius: 100%;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-002);
    opacity: 0.5;
    cursor: not-allowed;
  }

  button:disabled > wui-tag {
    background-color: var(--wui-color-gray-glass-010);
    color: var(--wui-color-fg-300);
  }
`,
        wui_list_network_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i2 = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.imageSrc = ""),
            (this.name = ""),
            (this.disabled = !1),
            (this.selected = !1),
            (this.transparent = !1);
        }
        render() {
          return eo.dy`
      <button data-transparent=${this.transparent} ?disabled=${
            this.disabled
          } ontouchstart>
        <wui-flex gap="s" alignItems="center">
          ${this.templateNetworkImage()}
          <wui-text variant="paragraph-500" color="inherit">${
            this.name
          }</wui-text></wui-flex
        >
        ${this.checkmarkTemplate()}
      </button>
    `;
        }
        checkmarkTemplate() {
          return this.selected
            ? eo.dy`<wui-icon size="sm" color="accent-100" name="checkmarkBold"></wui-icon>`
            : null;
        }
        templateNetworkImage() {
          return this.imageSrc
            ? eo.dy`<wui-image size="sm" src=${this.imageSrc} name=${this.name}></wui-image>`
            : this.imageSrc
            ? null
            : eo.dy`<wui-network-image
        ?round=${!0}
        size="md"
        name=${this.name}
      ></wui-network-image>`;
        }
      };
      (i2.styles = [ec, eu, i1]),
        wui_list_network_decorate(
          [(0, ef.Cb)()],
          i2.prototype,
          "imageSrc",
          void 0
        ),
        wui_list_network_decorate([(0, ef.Cb)()], i2.prototype, "name", void 0),
        wui_list_network_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          i2.prototype,
          "disabled",
          void 0
        ),
        wui_list_network_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          i2.prototype,
          "selected",
          void 0
        ),
        wui_list_network_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          i2.prototype,
          "transparent",
          void 0
        ),
        (i2 = wui_list_network_decorate(
          [customElement("wui-list-network")],
          i2
        ));
      var i3 = eo.iv`
  :host {
    display: flex;
    flex-direction: column;
    gap: var(--wui-spacing-l);
    padding: 17px 18px 17px var(--wui-spacing-m);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-250);
  }

  wui-image {
    width: var(--wui-icon-size-lg);
    height: var(--wui-icon-size-lg);
    border-radius: var(--wui-border-radius-3xl);
  }

  wui-icon {
    width: var(--wui-icon-size-lg);
    height: var(--wui-icon-size-lg);
  }
`,
        wui_list_wallet_transaction_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i5 = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.amount = ""),
            (this.networkCurreny = ""),
            (this.networkImageUrl = ""),
            (this.receiverAddress = ""),
            (this.addressExplorerUrl = "");
        }
        render() {
          return eo.dy`
      <wui-flex justifyContent="space-between" alignItems="center">
        <wui-text variant="paragraph-500" color="fg-200">Sending</wui-text>
        <wui-flex gap="xs" alignItems="center">
          <wui-text variant="paragraph-400" color="fg-100">
            ${this.amount} ${this.networkCurreny}
          </wui-text>
          ${this.templateNetworkVisual()}
        </wui-flex>
      </wui-flex>
      <wui-flex justifyContent="space-between" alignItems="center">
        <wui-text variant="paragraph-500" color="fg-200">To</wui-text>
        <wui-chip
          icon="externalLink"
          variant="shadeSmall"
          href=${this.addressExplorerUrl}
          title=${this.receiverAddress}
        ></wui-chip>
      </wui-flex>
    `;
        }
        templateNetworkVisual() {
          return this.networkImageUrl
            ? eo.dy`<wui-image src=${this.networkImageUrl} alt="Network Image"></wui-image>`
            : eo.dy`<wui-icon size="inherit" color="fg-200" name="networkPlaceholder"></wui-icon>`;
        }
      };
      (i5.styles = [ec, eu, i3]),
        wui_list_wallet_transaction_decorate(
          [(0, ef.Cb)()],
          i5.prototype,
          "amount",
          void 0
        ),
        wui_list_wallet_transaction_decorate(
          [(0, ef.Cb)()],
          i5.prototype,
          "networkCurreny",
          void 0
        ),
        wui_list_wallet_transaction_decorate(
          [(0, ef.Cb)()],
          i5.prototype,
          "networkImageUrl",
          void 0
        ),
        wui_list_wallet_transaction_decorate(
          [(0, ef.Cb)()],
          i5.prototype,
          "receiverAddress",
          void 0
        ),
        wui_list_wallet_transaction_decorate(
          [(0, ef.Cb)()],
          i5.prototype,
          "addressExplorerUrl",
          void 0
        ),
        (i5 = wui_list_wallet_transaction_decorate(
          [customElement("wui-list-wallet-transaction")],
          i5
        ));
      var i6 = eo.iv`
  button {
    display: flex;
    gap: var(--wui-spacing-3xs);
    align-items: center;
    padding: 6.25px var(--wui-spacing-xs) 7.25px var(--wui-spacing-s);
    background-color: var(--wui-color-gray-glass-090);
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-060);
    transition: background-color var(--wui-duration-md) var(--wui-ease-inout-power-1);
    will-change: background-color;
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-gray-glass-080);
    }

    button:active:enabled {
      background-color: var(--wui-color-gray-glass-060);
    }
  }
`,
        wui_promo_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i4 = class extends eo.oi {
        constructor() {
          super(...arguments), (this.text = "");
        }
        render() {
          return eo.dy`<button ontouchstart>
      <wui-text variant="small-600" color="bg-100">${this.text}</wui-text>
      <wui-icon color="bg-100" size="xs" name="arrowRight"></wui-icon>
    </button>`;
        }
      };
      (i4.styles = [ec, eu, i6]),
        wui_promo_decorate([(0, ef.Cb)()], i4.prototype, "text", void 0),
        (i4 = wui_promo_decorate([customElement("wui-promo")], i4));
      var i8 = eo.iv`
  span {
    font-weight: 500;
    font-size: 40px;
    color: var(--wui-color-fg-100);
    line-height: 130%; /* 52px */
    letter-spacing: -1.6px;
    text-align: center;
  }

  .pennies {
    color: var(--wui-color-fg-200);
  }
`,
        wui_balance_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let i9 = class extends eo.oi {
        constructor() {
          super(...arguments), (this.dollars = "0"), (this.pennies = "00");
        }
        render() {
          return eo.dy`<span>$${this.dollars}<span class="pennies">.${this.pennies}</span></span>`;
        }
      };
      (i9.styles = [ec, i8]),
        wui_balance_decorate([(0, ef.Cb)()], i9.prototype, "dollars", void 0),
        wui_balance_decorate([(0, ef.Cb)()], i9.prototype, "pennies", void 0),
        (i9 = wui_balance_decorate([customElement("wui-balance")], i9));
      var i7 = eo.iv`
  button {
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-002);
    padding: var(--wui-spacing-xs) var(--wui-spacing-s) var(--wui-spacing-xs) var(--wui-spacing-xs);
    position: relative;
  }

  wui-avatar {
    width: 32px;
    height: 32px;
    box-shadow: 0 0 0 0;
    outline: 3px solid var(--wui-color-gray-glass-005);
  }

  wui-icon-box,
  wui-image {
    width: 16px;
    height: 16px;
    border-radius: var(--wui-border-radius-3xl);
    position: absolute;
    left: 26px;
    top: 24px;
  }

  wui-image {
    outline: 2px solid var(--wui-color-bg-125);
  }

  wui-icon-box {
    outline: 2px solid var(--wui-color-bg-200);
    background-color: var(--wui-color-bg-250);
  }
`,
        wui_profile_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nt = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.networkSrc = void 0),
            (this.avatarSrc = void 0),
            (this.profileName = ""),
            (this.address = ""),
            (this.icon = "chevronBottom");
        }
        render() {
          return eo.dy`<button ontouchstart data-testid="wui-profile-button">
      <wui-flex gap="xs" alignItems="center">
        <wui-avatar
          .imageSrc=${this.avatarSrc}
          alt=${this.address}
          address=${this.address}
        ></wui-avatar>
        ${this.networkImageTemplate()}
        <wui-flex gap="xs" alignItems="center">
          <wui-text variant="large-600" color="fg-100">
            ${rh.getTruncateString({
              string: this.profileName || this.address,
              charsStart: this.profileName ? 18 : 4,
              charsEnd: this.profileName ? 0 : 4,
              truncate: this.profileName ? "end" : "middle",
            })}
          </wui-text>
          <wui-icon size="sm" color="fg-200" name=${this.icon}></wui-icon>
        </wui-flex>
      </wui-flex>
    </button>`;
        }
        networkImageTemplate() {
          return this.networkSrc
            ? eo.dy`<wui-image src=${this.networkSrc}></wui-image>`
            : eo.dy`
      <wui-icon-box
        size="xxs"
        iconColor="fg-200"
        backgroundColor="bg-100"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `;
        }
      };
      (nt.styles = [ec, eu, i7]),
        wui_profile_button_decorate(
          [(0, ef.Cb)()],
          nt.prototype,
          "networkSrc",
          void 0
        ),
        wui_profile_button_decorate(
          [(0, ef.Cb)()],
          nt.prototype,
          "avatarSrc",
          void 0
        ),
        wui_profile_button_decorate(
          [(0, ef.Cb)()],
          nt.prototype,
          "profileName",
          void 0
        ),
        wui_profile_button_decorate(
          [(0, ef.Cb)()],
          nt.prototype,
          "address",
          void 0
        ),
        wui_profile_button_decorate(
          [(0, ef.Cb)()],
          nt.prototype,
          "icon",
          void 0
        ),
        (nt = wui_profile_button_decorate(
          [customElement("wui-profile-button")],
          nt
        ));
      var nr = eo.iv`
  button {
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-002);
    padding: var(--wui-spacing-xs) var(--wui-spacing-s) var(--wui-spacing-xs) var(--wui-spacing-xs);
    position: relative;
  }

  wui-avatar {
    width: 32px;
    height: 32px;
    box-shadow: 0 0 0 0;
    outline: 3px solid var(--wui-color-gray-glass-005);
  }

  wui-icon-box,
  wui-image {
    width: 16px;
    height: 16px;
    border-radius: var(--wui-border-radius-3xl);
    position: absolute;
    left: 26px;
    top: 24px;
  }

  wui-image {
    outline: 2px solid var(--wui-color-bg-125);
  }

  wui-icon-box {
    outline: 2px solid var(--wui-color-bg-200);
    background-color: var(--wui-color-bg-250);
  }
`,
        wui_profile_button_v2_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nn = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.avatarSrc = void 0),
            (this.profileName = ""),
            (this.address = ""),
            (this.icon = "mail");
        }
        render() {
          let s = iM.RY.state.activeChain,
            x = iM.MO.getConnectedConnectorId(s),
            W = x === el.bq.CONNECTOR_ID.AUTH;
          return eo.dy`<button ontouchstart data-testid="wui-profile-button" @click=${
            this.handleClick
          }>
      <wui-flex gap="xs" alignItems="center">
        <wui-avatar
          .imageSrc=${this.avatarSrc}
          alt=${this.address}
          address=${this.address}
        ></wui-avatar>
        ${W ? this.getIconTemplate(this.icon) : ""}
        <wui-flex gap="xs" alignItems="center">
          <wui-text variant="large-600" color="fg-100">
            ${rh.getTruncateString({
              string: this.profileName || this.address,
              charsStart: this.profileName ? 18 : 4,
              charsEnd: this.profileName ? 0 : 4,
              truncate: this.profileName ? "end" : "middle",
            })}
          </wui-text>
          <wui-icon size="sm" color="fg-200" name="copy" id="copy-address"></wui-icon>
        </wui-flex>
      </wui-flex>
    </button>`;
        }
        handleClick(s) {
          if (
            s.target instanceof HTMLElement &&
            "copy-address" === s.target.id
          ) {
            this.onCopyClick?.(s);
            return;
          }
          this.onProfileClick?.(s);
        }
        getIconTemplate(s) {
          return eo.dy`
      <wui-icon-box
        size="xxs"
        iconColor="fg-200"
        backgroundColor="bg-100"
        icon="${s || "networkPlaceholder"}"
      ></wui-icon-box>
    `;
        }
      };
      (nn.styles = [ec, eu, nr]),
        wui_profile_button_v2_decorate(
          [(0, ef.Cb)()],
          nn.prototype,
          "avatarSrc",
          void 0
        ),
        wui_profile_button_v2_decorate(
          [(0, ef.Cb)()],
          nn.prototype,
          "profileName",
          void 0
        ),
        wui_profile_button_v2_decorate(
          [(0, ef.Cb)()],
          nn.prototype,
          "address",
          void 0
        ),
        wui_profile_button_v2_decorate(
          [(0, ef.Cb)()],
          nn.prototype,
          "icon",
          void 0
        ),
        wui_profile_button_v2_decorate(
          [(0, ef.Cb)()],
          nn.prototype,
          "onProfileClick",
          void 0
        ),
        wui_profile_button_v2_decorate(
          [(0, ef.Cb)()],
          nn.prototype,
          "onCopyClick",
          void 0
        ),
        (nn = wui_profile_button_v2_decorate(
          [customElement("wui-profile-button-v2")],
          nn
        ));
      var no = eo.iv`
  button {
    border: none;
    border-radius: var(--wui-border-radius-3xl);
  }

  button[data-variant='main'] {
    background-color: var(--wui-color-accent-100);
    color: var(--wui-color-inverse-100);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='accent'] {
    background-color: var(--wui-color-accent-glass-010);
    color: var(--wui-color-accent-100);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
  }

  button[data-variant='gray'] {
    background-color: transparent;
    color: var(--wui-color-fg-200);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-variant='shade'] {
    background-color: transparent;
    color: var(--wui-color-accent-100);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  button[data-size='sm'] {
    height: 32px;
    padding: 0 var(--wui-spacing-s);
  }

  button[data-size='md'] {
    height: 40px;
    padding: 0 var(--wui-spacing-l);
  }

  button[data-size='sm'] > wui-image {
    width: 16px;
    height: 16px;
  }

  button[data-size='md'] > wui-image {
    width: 24px;
    height: 24px;
  }

  button[data-size='sm'] > wui-icon {
    width: 12px;
    height: 12px;
  }

  button[data-size='md'] > wui-icon {
    width: 14px;
    height: 14px;
  }

  wui-image {
    border-radius: var(--wui-border-radius-3xl);
    overflow: hidden;
  }

  button.disabled > wui-icon,
  button.disabled > wui-image {
    filter: grayscale(1);
  }

  button[data-variant='main'] > wui-image {
    box-shadow: inset 0 0 0 1px var(--wui-color-accent-090);
  }

  button[data-variant='shade'] > wui-image,
  button[data-variant='gray'] > wui-image {
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }

  @media (hover: hover) and (pointer: fine) {
    button[data-variant='main']:focus-visible {
      background-color: var(--wui-color-accent-090);
    }

    button[data-variant='main']:hover:enabled {
      background-color: var(--wui-color-accent-090);
    }

    button[data-variant='main']:active:enabled {
      background-color: var(--wui-color-accent-080);
    }

    button[data-variant='accent']:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }

    button[data-variant='accent']:active:enabled {
      background-color: var(--wui-color-accent-glass-020);
    }

    button[data-variant='shade']:focus-visible,
    button[data-variant='gray']:focus-visible,
    button[data-variant='shade']:hover,
    button[data-variant='gray']:hover {
      background-color: var(--wui-color-gray-glass-002);
    }

    button[data-variant='gray']:active,
    button[data-variant='shade']:active {
      background-color: var(--wui-color-gray-glass-005);
    }
  }

  button.disabled {
    color: var(--wui-color-gray-glass-020);
    background-color: var(--wui-color-gray-glass-002);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    pointer-events: none;
  }
`,
        wui_chip_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let na = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.variant = "accent"),
            (this.imageSrc = ""),
            (this.disabled = !1),
            (this.icon = "externalLink"),
            (this.size = "md"),
            (this.text = "");
        }
        render() {
          let s = "sm" === this.size ? "small-600" : "paragraph-600";
          return eo.dy`
      <button
        class=${this.disabled ? "disabled" : ""}
        data-variant=${this.variant}
        data-size=${this.size}
      >
        ${
          this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc}></wui-image>`
            : null
        }
        <wui-text variant=${s} color="inherit"> ${this.text} </wui-text>
        <wui-icon name=${this.icon} color="inherit" size="inherit"></wui-icon>
      </button>
    `;
        }
      };
      (na.styles = [ec, eu, no]),
        wui_chip_button_decorate(
          [(0, ef.Cb)()],
          na.prototype,
          "variant",
          void 0
        ),
        wui_chip_button_decorate(
          [(0, ef.Cb)()],
          na.prototype,
          "imageSrc",
          void 0
        ),
        wui_chip_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          na.prototype,
          "disabled",
          void 0
        ),
        wui_chip_button_decorate([(0, ef.Cb)()], na.prototype, "icon", void 0),
        wui_chip_button_decorate([(0, ef.Cb)()], na.prototype, "size", void 0),
        wui_chip_button_decorate([(0, ef.Cb)()], na.prototype, "text", void 0),
        (na = wui_chip_button_decorate([customElement("wui-chip-button")], na));
      var ns = eo.iv`
  button {
    display: flex;
    gap: var(--wui-spacing-xl);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xxs);
    padding: var(--wui-spacing-m) var(--wui-spacing-s);
  }

  wui-text {
    width: 100%;
  }

  wui-flex {
    width: auto;
  }

  .network-icon {
    width: var(--wui-spacing-2l);
    height: var(--wui-spacing-2l);
    border-radius: calc(var(--wui-spacing-2l) / 2);
    overflow: hidden;
    box-shadow:
      0 0 0 3px var(--wui-color-gray-glass-002),
      0 0 0 3px var(--wui-color-modal-bg);
  }
`,
        wui_compatible_network_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nl = class extends eo.oi {
        constructor() {
          super(...arguments), (this.networkImages = [""]), (this.text = "");
        }
        render() {
          return eo.dy`
      <button ontouchstart>
        <wui-text variant="small-400" color="fg-200">${this.text}</wui-text>
        <wui-flex gap="3xs" alignItems="center">
          ${this.networksTemplate()}
          <wui-icon name="chevronRight" size="sm" color="fg-200"></wui-icon>
        </wui-flex>
      </button>
    `;
        }
        networksTemplate() {
          let s = this.networkImages.slice(0, 5);
          return eo.dy` <wui-flex class="networks">
      ${s?.map(
        (s) =>
          eo.dy` <wui-flex class="network-icon"> <wui-image src=${s}></wui-image> </wui-flex>`
      )}
    </wui-flex>`;
        }
      };
      (nl.styles = [ec, eu, ns]),
        wui_compatible_network_decorate(
          [(0, ef.Cb)({ type: Array })],
          nl.prototype,
          "networkImages",
          void 0
        ),
        wui_compatible_network_decorate(
          [(0, ef.Cb)()],
          nl.prototype,
          "text",
          void 0
        ),
        (nl = wui_compatible_network_decorate(
          [customElement("wui-compatible-network")],
          nl
        ));
      var nc = eo.iv`
  wui-flex {
    width: 100%;
    background-color: var(--wui-color-gray-glass-005);
    border-radius: var(--wui-border-radius-s);
    padding: var(--wui-spacing-1xs) var(--wui-spacing-s) var(--wui-spacing-1xs)
      var(--wui-spacing-1xs);
  }
`,
        wui_banner_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nu = class extends eo.oi {
        constructor() {
          super(...arguments), (this.icon = "externalLink"), (this.text = "");
        }
        render() {
          return eo.dy`
      <wui-flex gap="1xs" alignItems="center">
        <wui-icon-box
          size="sm"
          iconcolor="fg-200"
          backgroundcolor="fg-200"
          icon=${this.icon}
          background="transparent"
        ></wui-icon-box>
        <wui-text variant="small-400" color="fg-200">${this.text}</wui-text>
      </wui-flex>
    `;
        }
      };
      (nu.styles = [ec, eu, nc]),
        wui_banner_decorate([(0, ef.Cb)()], nu.prototype, "icon", void 0),
        wui_banner_decorate([(0, ef.Cb)()], nu.prototype, "text", void 0),
        (nu = wui_banner_decorate([customElement("wui-banner")], nu));
      var nd = eo.iv`
  wui-flex {
    width: 100%;
    background-color: var(--wui-color-gray-glass-005);
    border-radius: var(--wui-border-radius-m);
    padding: var(--wui-spacing-1xs) var(--wui-spacing-s) var(--wui-spacing-1xs)
      var(--wui-spacing-1xs);
  }
`,
        wui_banner_img_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nh = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.imageSrc = ""),
            (this.text = ""),
            (this.size = "");
        }
        render() {
          return eo.dy`
      <wui-flex gap="1xs" alignItems="center">
        <wui-avatar size=${this.size} imageSrc=${this.imageSrc}></wui-avatar>
        <wui-text variant="small-400" color="fg-200">${this.text}</wui-text>
      </wui-flex>
    `;
        }
      };
      (nh.styles = [ec, eu, nd]),
        wui_banner_img_decorate(
          [(0, ef.Cb)()],
          nh.prototype,
          "imageSrc",
          void 0
        ),
        wui_banner_img_decorate([(0, ef.Cb)()], nh.prototype, "text", void 0),
        wui_banner_img_decorate([(0, ef.Cb)()], nh.prototype, "size", void 0),
        (nh = wui_banner_img_decorate([customElement("wui-banner-img")], nh));
      var np = eo.iv`
  button {
    padding: 6.5px var(--wui-spacing-l) 6.5px var(--wui-spacing-xs);
    display: flex;
    justify-content: space-between;
    width: 100%;
    border-radius: var(--wui-border-radius-xs);
    background-color: var(--wui-color-gray-glass-002);
  }

  button[data-clickable='false'] {
    pointer-events: none;
    background-color: transparent;
  }

  wui-image,
  wui-icon {
    width: var(--wui-spacing-3xl);
    height: var(--wui-spacing-3xl);
  }

  wui-image {
    border-radius: var(--wui-border-radius-3xl);
  }
`,
        wui_list_token_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nf = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.tokenName = ""),
            (this.tokenImageUrl = ""),
            (this.tokenValue = 0),
            (this.tokenAmount = "0.0"),
            (this.tokenCurrency = ""),
            (this.clickable = !1);
        }
        render() {
          return eo.dy`
      <button data-clickable=${String(this.clickable)} ontouchstart>
        <wui-flex gap="s" alignItems="center">
          ${this.visualTemplate()}
          <wui-flex flexDirection="column" justifyContent="spaceBetween">
            <wui-text variant="paragraph-500" color="fg-100">${
              this.tokenName
            }</wui-text>
            <wui-text variant="small-400" color="fg-200">
              ${rh.formatNumberToLocalString(this.tokenAmount, 4)} ${
            this.tokenCurrency
          }
            </wui-text>
          </wui-flex>
        </wui-flex>
        <wui-text variant="paragraph-500" color="fg-100">$${this.tokenValue.toFixed(
          2
        )}</wui-text>
      </button>
    `;
        }
        visualTemplate() {
          return this.tokenName && this.tokenImageUrl
            ? eo.dy`<wui-image alt=${this.tokenName} src=${this.tokenImageUrl}></wui-image>`
            : eo.dy`<wui-icon name="coinPlaceholder" color="fg-100"></wui-icon>`;
        }
      };
      (nf.styles = [ec, eu, np]),
        wui_list_token_decorate(
          [(0, ef.Cb)()],
          nf.prototype,
          "tokenName",
          void 0
        ),
        wui_list_token_decorate(
          [(0, ef.Cb)()],
          nf.prototype,
          "tokenImageUrl",
          void 0
        ),
        wui_list_token_decorate(
          [(0, ef.Cb)({ type: Number })],
          nf.prototype,
          "tokenValue",
          void 0
        ),
        wui_list_token_decorate(
          [(0, ef.Cb)()],
          nf.prototype,
          "tokenAmount",
          void 0
        ),
        wui_list_token_decorate(
          [(0, ef.Cb)()],
          nf.prototype,
          "tokenCurrency",
          void 0
        ),
        wui_list_token_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          nf.prototype,
          "clickable",
          void 0
        ),
        (nf = wui_list_token_decorate([customElement("wui-list-token")], nf));
      var ng = eo.iv`
  button {
    width: 100%;
    display: flex;
    gap: var(--wui-spacing-s);
    align-items: center;
    justify-content: flex-start;
    padding: var(--wui-spacing-s) var(--wui-spacing-m) var(--wui-spacing-s) var(--wui-spacing-s);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
  }

  wui-icon-box {
    width: var(--wui-spacing-2xl);
    height: var(--wui-spacing-2xl);
  }

  wui-flex {
    width: auto;
  }
`,
        wui_list_description_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nm = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.icon = "card"),
            (this.text = ""),
            (this.description = ""),
            (this.tag = void 0),
            (this.iconBackgroundColor = "accent-100"),
            (this.iconColor = "accent-100"),
            (this.disabled = !1);
        }
        render() {
          return eo.dy`
      <button ontouchstart ?disabled=${this.disabled}>
        <wui-icon-box
          iconColor=${this.iconColor}
          backgroundColor=${this.iconBackgroundColor}
          size="inherit"
          icon=${this.icon}
          iconSize="md"
        ></wui-icon-box>
        <wui-flex flexDirection="column" justifyContent="spaceBetween">
          ${this.titleTemplate()}
          <wui-text variant="small-400" color="fg-200"> ${
            this.description
          }</wui-text></wui-flex
        >
      </button>
    `;
        }
        titleTemplate() {
          return this.tag
            ? eo.dy` <wui-flex alignItems="center" gap="xxs"
        ><wui-text variant="paragraph-500" color="fg-100">${this.text}</wui-text
        ><wui-tag tagType="main" size="md">${this.tag}</wui-tag>
      </wui-flex>`
            : eo.dy`<wui-text variant="paragraph-500" color="fg-100">${this.text}</wui-text>`;
        }
      };
      (nm.styles = [ec, eu, ng]),
        wui_list_description_decorate(
          [(0, ef.Cb)()],
          nm.prototype,
          "icon",
          void 0
        ),
        wui_list_description_decorate(
          [(0, ef.Cb)()],
          nm.prototype,
          "text",
          void 0
        ),
        wui_list_description_decorate(
          [(0, ef.Cb)()],
          nm.prototype,
          "description",
          void 0
        ),
        wui_list_description_decorate(
          [(0, ef.Cb)()],
          nm.prototype,
          "tag",
          void 0
        ),
        wui_list_description_decorate(
          [(0, ef.Cb)()],
          nm.prototype,
          "iconBackgroundColor",
          void 0
        ),
        wui_list_description_decorate(
          [(0, ef.Cb)()],
          nm.prototype,
          "iconColor",
          void 0
        ),
        wui_list_description_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          nm.prototype,
          "disabled",
          void 0
        ),
        (nm = wui_list_description_decorate(
          [customElement("wui-list-description")],
          nm
        ));
      let nw = /[.*+?^${}()|[\]\\]/gu,
        nb = /[0-9,.]/u;
      var nv = eo.iv`
  :host {
    position: relative;
    display: inline-block;
  }

  input {
    background: transparent;
    width: 100%;
    height: auto;
    font-family: var(--wui-font-family);
    color: var(--wui-color-fg-100);

    font-feature-settings: 'case' on;
    font-size: 32px;
    font-weight: var(--wui-font-weight-light);
    caret-color: var(--wui-color-accent-100);
    line-height: 130%;
    letter-spacing: -1.28px;
    box-sizing: border-box;
    -webkit-appearance: none;
    -moz-appearance: textfield;
    padding: 0px;
  }

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input::placeholder {
    color: var(--wui-color-fg-275);
  }
`,
        wui_input_amount_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let ny = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.inputElementRef = (0, rQ.V)()),
            (this.disabled = !1),
            (this.value = ""),
            (this.placeholder = "0");
        }
        render() {
          return (
            this.inputElementRef?.value &&
              this.value &&
              (this.inputElementRef.value.value = this.value),
            eo.dy`<input
      ${(0, rQ.i)(this.inputElementRef)}
      type="text"
      inputmode="decimal"
      pattern="[0-9,.]*"
      placeholder=${this.placeholder}
      ?disabled=${this.disabled}
      autofocus
      value=${this.value ?? ""}
      @input=${this.dispatchInputChangeEvent.bind(this)}
    /> `
          );
        }
        dispatchInputChangeEvent(s) {
          let x = s.data;
          if (x && this.inputElementRef?.value) {
            if ("," === x) {
              let s = this.inputElementRef.value.value.replace(",", ".");
              (this.inputElementRef.value.value = s),
                (this.value = `${this.value}${s}`);
            } else
              nb.test(x) ||
                (this.inputElementRef.value.value = this.value.replace(
                  RegExp(x.replace(nw, "\\$&"), "gu"),
                  ""
                ));
          }
          this.dispatchEvent(
            new CustomEvent("inputChange", {
              detail: this.inputElementRef.value?.value,
              bubbles: !0,
              composed: !0,
            })
          );
        }
      };
      (ny.styles = [ec, eu, nv]),
        wui_input_amount_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          ny.prototype,
          "disabled",
          void 0
        ),
        wui_input_amount_decorate(
          [(0, ef.Cb)({ type: String })],
          ny.prototype,
          "value",
          void 0
        ),
        wui_input_amount_decorate(
          [(0, ef.Cb)({ type: String })],
          ny.prototype,
          "placeholder",
          void 0
        ),
        (ny = wui_input_amount_decorate(
          [customElement("wui-input-amount")],
          ny
        ));
      var n_ = eo.iv`
  :host {
    display: flex;
    gap: var(--wui-spacing-xs);
    border-radius: var(--wui-border-radius-3xl);
    border: 1px solid var(--wui-color-gray-glass-002);
    background: var(--wui-color-gray-glass-002);
    padding: var(--wui-spacing-2xs) var(--wui-spacing-xs) var(--wui-spacing-2xs)
      var(--wui-spacing-s);
    align-items: center;
  }

  wui-avatar,
  wui-icon,
  wui-image {
    width: 32px;
    height: 32px;
    border: 1px solid var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-3xl);
    box-shadow: 0 0 0 2px var(--wui-color-gray-glass-002);
  }
`,
        wui_preview_item_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nC = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.text = ""),
            (this.address = ""),
            (this.isAddress = !1);
        }
        render() {
          return eo.dy`<wui-text variant="large-500" color="fg-100">${
            this.text
          }</wui-text>
      ${this.imageTemplate()}`;
        }
        imageTemplate() {
          return this.isAddress
            ? eo.dy`<wui-avatar address=${this.address} .imageSrc=${this.imageSrc}></wui-avatar>`
            : this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc}></wui-image>`
            : eo.dy`<wui-icon size="inherit" color="fg-200" name="networkPlaceholder"></wui-icon>`;
        }
      };
      (nC.styles = [ec, eu, n_]),
        wui_preview_item_decorate([(0, ef.Cb)()], nC.prototype, "text", void 0),
        wui_preview_item_decorate(
          [(0, ef.Cb)()],
          nC.prototype,
          "address",
          void 0
        ),
        wui_preview_item_decorate(
          [(0, ef.Cb)()],
          nC.prototype,
          "imageSrc",
          void 0
        ),
        wui_preview_item_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          nC.prototype,
          "isAddress",
          void 0
        ),
        (nC = wui_preview_item_decorate(
          [customElement("wui-preview-item")],
          nC
        ));
      var nx = W(69406),
        nE = eo.iv`
  button {
    padding: 6.5px var(--wui-spacing-l) 6.5px var(--wui-spacing-xs);
    display: flex;
    justify-content: space-between;
    width: 100%;
    border-radius: var(--wui-border-radius-xs);
    background-color: var(--wui-color-gray-glass-002);
  }

  button[data-clickable='false'] {
    pointer-events: none;
    background-color: transparent;
  }

  wui-image {
    width: var(--wui-spacing-3xl);
    height: var(--wui-spacing-3xl);
    border-radius: var(--wui-border-radius-3xl);
  }

  wui-avatar {
    width: var(--wui-spacing-3xl);
    height: var(--wui-spacing-3xl);
    box-shadow: 0 0 0 0;
  }
  .address {
    color: var(--wui-color-fg-base-100);
  }
  .address-description {
    text-transform: capitalize;
    color: var(--wui-color-fg-base-200);
  }

  wui-icon-box {
    position: relative;
    right: 15px;
    top: 15px;
    border: 2px solid var(--wui-color-bg-150);
    background-color: var(--wui-color-bg-125);
  }
`,
        wui_list_account_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nA = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.accountAddress = ""),
            (this.accountType = ""),
            (this.labels = iM.AccountController.state.addressLabels),
            (this.caipNetwork = iM.RY.state.activeCaipNetwork),
            (this.socialProvider = iM.MO.getConnectedSocialProvider()),
            (this.balance = 0),
            (this.fetchingBalance = !0),
            (this.shouldShowIcon = !1),
            (this.selected = !1);
        }
        connectedCallback() {
          super.connectedCallback(),
            iM.Lr.getBalance(
              this.accountAddress,
              this.caipNetwork?.caipNetworkId
            )
              .then((s) => {
                let x = this.balance;
                s.balances.length > 0 &&
                  (x = s.balances.reduce((s, x) => s + (x?.value || 0), 0)),
                  (this.balance = x),
                  (this.fetchingBalance = !1),
                  this.requestUpdate();
              })
              .catch(() => {
                (this.fetchingBalance = !1), this.requestUpdate();
              });
        }
        render() {
          let s = this.getLabel(),
            x = iM.RY.state.activeChain,
            W = iM.MO.getConnectedConnectorId(x);
          return (
            (this.shouldShowIcon = W === el.bq.CONNECTOR_ID.AUTH),
            eo.dy`
      <wui-flex
        flexDirection="row"
        justifyContent="space-between"
        .padding=${["0", "0", "s", "1xs"]}
      >
        <wui-flex gap="md" alignItems="center">
          <wui-avatar address=${this.accountAddress}></wui-avatar>
          ${
            this.shouldShowIcon
              ? eo.dy`<wui-icon-box
                size="sm"
                iconcolor="fg-200"
                backgroundcolor="fg-300"
                icon=${
                  this.accountType === nx.y_.ACCOUNT_TYPES.EOA
                    ? this.socialProvider ?? "mail"
                    : "lightbulb"
                }
                background="fg-300"
              ></wui-icon-box>`
              : eo.dy`<wui-flex .padding="${["0", "0", "0", "s"]}"></wui-flex>`
          }
          <wui-flex flexDirection="column">
            <wui-text class="address" variant="paragraph-500" color="fg-100"
              >${rh.getTruncateString({
                string: this.accountAddress,
                charsStart: 4,
                charsEnd: 6,
                truncate: "middle",
              })}</wui-text
            >
            <wui-text class="address-description" variant="small-400">${s}</wui-text></wui-flex
          >
        </wui-flex>
        <wui-flex gap="s" alignItems="center">
          <slot name="action"></slot>
          ${
            this.fetchingBalance
              ? eo.dy`<wui-loading-spinner size="sm" color="accent-100"></wui-loading-spinner>`
              : eo.dy` <wui-text variant="small-400">$${this.balance.toFixed(
                  2
                )}</wui-text>`
          }
        </wui-flex>
      </wui-flex>
    `
          );
        }
        getLabel() {
          let s = this.labels?.get(this.accountAddress),
            x = iM.RY.state.activeChain,
            W = iM.MO.getConnectedConnectorId(x);
          return (
            s || W !== el.bq.CONNECTOR_ID.AUTH
              ? s || (s = "EOA")
              : (s = `${
                  "eoa" === this.accountType
                    ? this.socialProvider ?? "Email"
                    : "Smart"
                } Account`),
            s
          );
        }
      };
      (nA.styles = [ec, eu, nE]),
        wui_list_account_decorate(
          [(0, ef.Cb)()],
          nA.prototype,
          "accountAddress",
          void 0
        ),
        wui_list_account_decorate(
          [(0, ef.Cb)()],
          nA.prototype,
          "accountType",
          void 0
        ),
        wui_list_account_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          nA.prototype,
          "selected",
          void 0
        ),
        wui_list_account_decorate(
          [(0, ef.Cb)({ type: Function })],
          nA.prototype,
          "onSelect",
          void 0
        ),
        (nA = wui_list_account_decorate(
          [customElement("wui-list-account")],
          nA
        ));
      var nS = eo.iv`
  :host {
    position: relative;
  }

  button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 48px;
    width: 100%;
    background-color: var(--wui-color-accent-glass-010);
    border-radius: var(--wui-border-radius-xs);
    border: 1px solid var(--wui-color-accent-glass-010);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color;
  }

  wui-tooltip {
    padding: 7px var(--wui-spacing-s) 8px var(--wui-spacing-s);
    position: absolute;
    top: -8px;
    left: 50%;
    transform: translate(-50%, -100%);
    opacity: 0;
    display: none;
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover:enabled {
      background-color: var(--wui-color-accent-glass-015);
    }

    button:active:enabled {
      background-color: var(--wui-color-accent-glass-020);
    }
  }
`,
        wui_icon_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nk = class extends eo.oi {
        constructor() {
          super(...arguments), (this.text = ""), (this.icon = "card");
        }
        render() {
          return eo.dy`<button>
      <wui-icon color="accent-100" name=${this.icon} size="lg"></wui-icon>
    </button>`;
        }
      };
      (nk.styles = [ec, eu, nS]),
        wui_icon_button_decorate([(0, ef.Cb)()], nk.prototype, "text", void 0),
        wui_icon_button_decorate([(0, ef.Cb)()], nk.prototype, "icon", void 0),
        (nk = wui_icon_button_decorate([customElement("wui-icon-button")], nk));
      var nT = eo.iv`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 16.5px var(--wui-spacing-l) 16.5px var(--wui-spacing-xs);
    width: 100%;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-100);
    justify-content: center;
    align-items: center;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-015);
    color: var(--wui-color-gray-glass-015);
  }
`,
        wui_list_button_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nI = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.text = ""),
            (this.disabled = !1),
            (this.tabIdx = void 0);
        }
        render() {
          return eo.dy`
      <button ?disabled=${this.disabled} tabindex=${(0, rd.o)(
            this.tabIdx
          )} ontouchstart>
        <wui-text align="center" variant="paragraph-500" color="inherit">${
          this.text
        }</wui-text>
      </button>
    `;
        }
      };
      (nI.styles = [ec, eu, nT]),
        wui_list_button_decorate([(0, ef.Cb)()], nI.prototype, "text", void 0),
        wui_list_button_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          nI.prototype,
          "disabled",
          void 0
        ),
        wui_list_button_decorate(
          [(0, ef.Cb)()],
          nI.prototype,
          "tabIdx",
          void 0
        ),
        (nI = wui_list_button_decorate([customElement("wui-list-button")], nI));
      var nP = eo.iv`
  button {
    column-gap: var(--wui-spacing-s);
    padding: 7px var(--wui-spacing-l) 7px var(--wui-spacing-xs);
    width: 100%;
    justify-content: flex-start;
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    color: var(--wui-color-fg-100);
  }

  wui-text {
    text-transform: capitalize;
  }

  wui-text[data-align='left'] {
    display: flex;
    flex: 1;
  }

  wui-text[data-align='center'] {
    display: flex;
    flex: 1;
    justify-content: center;
  }

  .invisible {
    opacity: 0;
    pointer-events: none;
  }

  button:disabled {
    background-color: var(--wui-color-gray-glass-015);
    color: var(--wui-color-gray-glass-015);
  }
`,
        wui_list_social_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nR = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.logo = "google"),
            (this.name = "Continue with google"),
            (this.align = "left"),
            (this.disabled = !1);
        }
        render() {
          return eo.dy`
      <button ?disabled=${this.disabled} tabindex=${(0, rd.o)(
            this.tabIdx
          )} ontouchstart>
        <wui-logo logo=${this.logo}></wui-logo>
        <wui-text
          data-align=${this.align}
          variant="paragraph-500"
          color="inherit"
          align=${this.align}
          >${this.name}</wui-text
        >
        ${this.templatePlacement()}
      </button>
    `;
        }
        templatePlacement() {
          return "center" === this.align
            ? eo.dy` <wui-logo class="invisible" logo=${this.logo}></wui-logo>`
            : null;
        }
      };
      (nR.styles = [ec, eu, nP]),
        wui_list_social_decorate([(0, ef.Cb)()], nR.prototype, "logo", void 0),
        wui_list_social_decorate([(0, ef.Cb)()], nR.prototype, "name", void 0),
        wui_list_social_decorate([(0, ef.Cb)()], nR.prototype, "align", void 0),
        wui_list_social_decorate(
          [(0, ef.Cb)()],
          nR.prototype,
          "tabIdx",
          void 0
        ),
        wui_list_social_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          nR.prototype,
          "disabled",
          void 0
        ),
        (nR = wui_list_social_decorate([customElement("wui-list-social")], nR));
      var nN = eo.iv`
  button {
    display: block;
    display: flex;
    align-items: center;
    padding: var(--wui-spacing-xxs);
    gap: var(--wui-spacing-xxs);
    transition: all var(--wui-ease-out-power-1) var(--wui-duration-md);
    border-radius: var(--wui-border-radius-xxs);
  }

  wui-image {
    border-radius: 100%;
    width: var(--wui-spacing-xl);
    height: var(--wui-spacing-xl);
  }

  wui-icon-box {
    width: var(--wui-spacing-xl);
    height: var(--wui-spacing-xl);
  }

  button:hover {
    background-color: var(--wui-color-gray-glass-002);
  }

  button:active {
    background-color: var(--wui-color-gray-glass-005);
  }
`,
        wui_select_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nO = class extends eo.oi {
        constructor() {
          super(...arguments), (this.imageSrc = "");
        }
        render() {
          return eo.dy`<button>
      ${this.imageTemplate()}
      <wui-icon size="xs" color="fg-200" name="chevronBottom"></wui-icon>
    </button>`;
        }
        imageTemplate() {
          return this.imageSrc
            ? eo.dy`<wui-image src=${this.imageSrc} alt="select visual"></wui-image>`
            : eo.dy`<wui-icon-box
      size="xxs"
      iconColor="fg-200"
      backgroundColor="fg-100"
      background="opaque"
      icon="networkPlaceholder"
    ></wui-icon-box>`;
        }
      };
      (nO.styles = [ec, eu, ed, nN]),
        wui_select_decorate([(0, ef.Cb)()], nO.prototype, "imageSrc", void 0),
        (nO = wui_select_decorate([customElement("wui-select")], nO));
      var nM = eo.iv`
  label {
    display: flex;
    align-items: center;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    column-gap: var(--wui-spacing-1xs);
  }

  label > input[type='checkbox'] {
    height: 0;
    width: 0;
    opacity: 0;
    pointer-events: none;
    position: absolute;
  }

  label > span {
    width: var(--wui-spacing-xl);
    height: var(--wui-spacing-xl);
    min-width: var(--wui-spacing-xl);
    min-height: var(--wui-spacing-xl);
    border-radius: var(--wui-border-radius-3xs);
    border-width: 1px;
    border-style: solid;
    border-color: var(--wui-color-gray-glass-010);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-lg);
    will-change: background-color;
  }

  label > span:hover,
  label > input[type='checkbox']:focus-visible + span {
    background-color: var(--wui-color-gray-glass-010);
  }

  label input[type='checkbox']:checked + span {
    background-color: var(--wui-color-blue-base-90);
  }

  label > span > wui-icon {
    opacity: 0;
    transition: opacity var(--wui-ease-out-power-1) var(--wui-duration-lg);
    will-change: opacity;
  }

  label > input[type='checkbox']:checked + span wui-icon {
    opacity: 1;
  }
`,
        wui_checkbox_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nD = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.inputElementRef = (0, rQ.V)()),
            (this.checked = void 0);
        }
        render() {
          return eo.dy`
      <label>
        <input
          ${(0, rQ.i)(this.inputElementRef)}
          ?checked=${(0, rd.o)(this.checked)}
          type="checkbox"
          @change=${this.dispatchChangeEvent}
        />
        <span>
          <wui-icon name="checkmarkBold" color="inverse-100" size="xxs"></wui-icon>
        </span>
        <slot></slot>
      </label>
    `;
        }
        dispatchChangeEvent() {
          this.dispatchEvent(
            new CustomEvent("checkboxChange", {
              detail: this.inputElementRef.value?.checked,
              bubbles: !0,
              composed: !0,
            })
          );
        }
      };
      (nD.styles = [ec, nM]),
        wui_checkbox_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          nD.prototype,
          "checked",
          void 0
        ),
        (nD = wui_checkbox_decorate([customElement("wui-checkbox")], nD));
      var nB = eo.iv`
  :host {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  label {
    position: relative;
    display: inline-block;
    width: 32px;
    height: 22px;
  }

  input {
    width: 0;
    height: 0;
    opacity: 0;
  }

  span {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--wui-color-blue-100);
    border-width: 1px;
    border-style: solid;
    border-color: var(--wui-color-gray-glass-002);
    border-radius: 999px;
    transition:
      background-color var(--wui-ease-inout-power-1) var(--wui-duration-md),
      border-color var(--wui-ease-inout-power-1) var(--wui-duration-md);
    will-change: background-color, border-color;
  }

  span:before {
    position: absolute;
    content: '';
    height: 16px;
    width: 16px;
    left: 3px;
    top: 2px;
    background-color: var(--wui-color-inverse-100);
    transition: transform var(--wui-ease-inout-power-1) var(--wui-duration-lg);
    will-change: transform;
    border-radius: 50%;
  }

  input:checked + span {
    border-color: var(--wui-color-gray-glass-005);
    background-color: var(--wui-color-blue-100);
  }

  input:not(:checked) + span {
    background-color: var(--wui-color-gray-glass-010);
  }

  input:checked + span:before {
    transform: translateX(calc(100% - 7px));
  }
`,
        wui_switch_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nL = class extends eo.oi {
        constructor() {
          super(...arguments),
            (this.inputElementRef = (0, rQ.V)()),
            (this.checked = void 0);
        }
        render() {
          return eo.dy`
      <label>
        <input
          ${(0, rQ.i)(this.inputElementRef)}
          type="checkbox"
          ?checked=${(0, rd.o)(this.checked)}
          @change=${this.dispatchChangeEvent.bind(this)}
        />
        <span></span>
      </label>
    `;
        }
        dispatchChangeEvent() {
          this.dispatchEvent(
            new CustomEvent("switchChange", {
              detail: this.inputElementRef.value?.checked,
              bubbles: !0,
              composed: !0,
            })
          );
        }
      };
      (nL.styles = [ec, eu, ed, nB]),
        wui_switch_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          nL.prototype,
          "checked",
          void 0
        ),
        (nL = wui_switch_decorate([customElement("wui-switch")], nL));
      var nj = eo.iv`
  :host {
    height: 100%;
  }

  button {
    display: flex;
    align-items: center;
    justify-content: center;
    column-gap: var(--wui-spacing-1xs);
    padding: var(--wui-spacing-xs) var(--wui-spacing-s);
    background-color: var(--wui-color-gray-glass-002);
    border-radius: var(--wui-border-radius-xs);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
    transition: background-color var(--wui-ease-out-power-1) var(--wui-duration-md);
    will-change: background-color;
    cursor: pointer;
  }

  wui-switch {
    pointer-events: none;
  }
`,
        wui_certified_switch_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nU = class extends eo.oi {
        constructor() {
          super(...arguments), (this.checked = void 0);
        }
        render() {
          return eo.dy`
      <button>
        <wui-icon size="xl" name="walletConnectBrown"></wui-icon>
        <wui-switch ?checked=${(0, rd.o)(this.checked)}></wui-switch>
      </button>
    `;
        }
      };
      (nU.styles = [ec, eu, nj]),
        wui_certified_switch_decorate(
          [(0, ef.Cb)({ type: Boolean })],
          nU.prototype,
          "checked",
          void 0
        ),
        (nU = wui_certified_switch_decorate(
          [customElement("wui-certified-switch")],
          nU
        ));
      var n$ = eo.iv`
  :host {
    display: grid;
    width: inherit;
    height: inherit;
  }
`,
        wui_grid_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nF = class extends eo.oi {
        render() {
          return (
            (this.style.cssText = `
      grid-template-rows: ${this.gridTemplateRows};
      grid-template-columns: ${this.gridTemplateColumns};
      justify-items: ${this.justifyItems};
      align-items: ${this.alignItems};
      justify-content: ${this.justifyContent};
      align-content: ${this.alignContent};
      column-gap: ${this.columnGap && `var(--wui-spacing-${this.columnGap})`};
      row-gap: ${this.rowGap && `var(--wui-spacing-${this.rowGap})`};
      gap: ${this.gap && `var(--wui-spacing-${this.gap})`};
      padding-top: ${this.padding && rh.getSpacingStyles(this.padding, 0)};
      padding-right: ${this.padding && rh.getSpacingStyles(this.padding, 1)};
      padding-bottom: ${this.padding && rh.getSpacingStyles(this.padding, 2)};
      padding-left: ${this.padding && rh.getSpacingStyles(this.padding, 3)};
      margin-top: ${this.margin && rh.getSpacingStyles(this.margin, 0)};
      margin-right: ${this.margin && rh.getSpacingStyles(this.margin, 1)};
      margin-bottom: ${this.margin && rh.getSpacingStyles(this.margin, 2)};
      margin-left: ${this.margin && rh.getSpacingStyles(this.margin, 3)};
    `),
            eo.dy`<slot></slot>`
          );
        }
      };
      (nF.styles = [ec, n$]),
        wui_grid_decorate(
          [(0, ef.Cb)()],
          nF.prototype,
          "gridTemplateRows",
          void 0
        ),
        wui_grid_decorate(
          [(0, ef.Cb)()],
          nF.prototype,
          "gridTemplateColumns",
          void 0
        ),
        wui_grid_decorate([(0, ef.Cb)()], nF.prototype, "justifyItems", void 0),
        wui_grid_decorate([(0, ef.Cb)()], nF.prototype, "alignItems", void 0),
        wui_grid_decorate(
          [(0, ef.Cb)()],
          nF.prototype,
          "justifyContent",
          void 0
        ),
        wui_grid_decorate([(0, ef.Cb)()], nF.prototype, "alignContent", void 0),
        wui_grid_decorate([(0, ef.Cb)()], nF.prototype, "columnGap", void 0),
        wui_grid_decorate([(0, ef.Cb)()], nF.prototype, "rowGap", void 0),
        wui_grid_decorate([(0, ef.Cb)()], nF.prototype, "gap", void 0),
        wui_grid_decorate([(0, ef.Cb)()], nF.prototype, "padding", void 0),
        wui_grid_decorate([(0, ef.Cb)()], nF.prototype, "margin", void 0),
        (nF = wui_grid_decorate([customElement("wui-grid")], nF));
      var nz = eo.iv`
  :host {
    position: relative;
    display: flex;
    width: 100%;
    height: 1px;
    background-color: var(--wui-color-gray-glass-005);
    justify-content: center;
    align-items: center;
  }

  :host > wui-text {
    position: absolute;
    padding: 0px 10px;
    background-color: var(--wui-color-modal-bg);
    transition: background-color var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: background-color;
  }
`,
        wui_separator_decorate = function (s, x, W, X) {
          var ee,
            et = arguments.length,
            er =
              et < 3
                ? x
                : null === X
                ? (X = Object.getOwnPropertyDescriptor(x, W))
                : X;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            er = Reflect.decorate(s, x, W, X);
          else
            for (var ei = s.length - 1; ei >= 0; ei--)
              (ee = s[ei]) &&
                (er =
                  (et < 3 ? ee(er) : et > 3 ? ee(x, W, er) : ee(x, W)) || er);
          return et > 3 && er && Object.defineProperty(x, W, er), er;
        };
      let nH = class extends eo.oi {
        constructor() {
          super(...arguments), (this.text = "");
        }
        render() {
          return eo.dy`${this.template()}`;
        }
        template() {
          return this.text
            ? eo.dy`<wui-text variant="small-500" color="fg-200">${this.text}</wui-text>`
            : null;
        }
      };
      (nH.styles = [ec, nz]),
        wui_separator_decorate([(0, ef.Cb)()], nH.prototype, "text", void 0),
        (nH = wui_separator_decorate([customElement("wui-separator")], nH));
      let nq = {
          interpolate(s, x, W) {
            if (2 !== s.length || 2 !== x.length)
              throw Error(
                "inputRange and outputRange must be an array of length 2"
              );
            let X = s[0] || 0,
              ee = s[1] || 0,
              et = x[0] || 0,
              er = x[1] || 0;
            return W < X
              ? et
              : W > ee
              ? er
              : ((er - et) / (ee - X)) * (W - X) + et;
          },
        },
        nV = ["receive", "deposit", "borrow", "claim"],
        nW = ["withdraw", "repay", "burn"],
        nK = {
          getMonthName(s) {
            let x = new Date();
            return x.setMonth(s), x.toLocaleString("en-US", { month: "long" });
          },
          getTransactionGroupTitle(s, x) {
            let W = el.Em.getYear(),
              X = this.getMonthName(x),
              ee = s === W ? X : `${X} ${s}`;
            return ee;
          },
          getTransactionImages(s) {
            let [x, W] = s,
              X = !!x && s?.every((s) => !!s.nft_info),
              ee = s?.length > 1,
              et = s?.length === 2;
            return et && !X
              ? [this.getTransactionImage(x), this.getTransactionImage(W)]
              : ee
              ? s.map((s) => this.getTransactionImage(s))
              : [this.getTransactionImage(x)];
          },
          getTransactionImage: (s) => ({
            type: nK.getTransactionTransferTokenType(s),
            url: nK.getTransactionImageURL(s),
          }),
          getTransactionImageURL(s) {
            let x;
            let W = !!s?.nft_info,
              X = !!s?.fungible_info;
            return (
              s && W
                ? (x = s?.nft_info?.content?.preview?.url)
                : s && X && (x = s?.fungible_info?.icon?.url),
              x
            );
          },
          getTransactionTransferTokenType: (s) =>
            s?.fungible_info ? "FUNGIBLE" : s?.nft_info ? "NFT" : void 0,
          getTransactionDescriptions(s) {
            let x = s?.metadata?.operationType,
              W = s?.transfers,
              X = s?.transfers?.length > 0,
              ee = s?.transfers?.length > 1,
              et = X && W?.every((s) => !!s?.fungible_info),
              [er, ei] = W,
              eo = this.getTransferDescription(er);
            if ((this.getTransferDescription(ei), !X)) {
              let W = "send" === x || "receive" === x;
              return W && et
                ? [
                    (eo = rh.getTruncateString({
                      string: s?.metadata.sentFrom,
                      charsStart: 4,
                      charsEnd: 6,
                      truncate: "middle",
                    })),
                    rh.getTruncateString({
                      string: s?.metadata.sentTo,
                      charsStart: 4,
                      charsEnd: 6,
                      truncate: "middle",
                    }),
                  ]
                : [s.metadata.status];
            }
            if (ee) return W.map((s) => this.getTransferDescription(s));
            let ea = "";
            return (
              nV.includes(x) ? (ea = "+") : nW.includes(x) && (ea = "-"),
              [(eo = ea.concat(eo))]
            );
          },
          getTransferDescription(s) {
            let x = "";
            return (
              s &&
                (s?.nft_info
                  ? (x = s?.nft_info?.name || "-")
                  : s?.fungible_info &&
                    (x = this.getFungibleTransferDescription(s) || "-")),
              x
            );
          },
          getFungibleTransferDescription(s) {
            if (!s) return null;
            let x = this.getQuantityFixedValue(s?.quantity.numeric),
              W = [x, s?.fungible_info?.symbol].join(" ").trim();
            return W;
          },
          getQuantityFixedValue(s) {
            if (!s) return null;
            let x = parseFloat(s);
            return x.toFixed(3);
          },
        };
    },
    69406: function (s, x, W) {
      "use strict";
      let X;
      W.d(x, {
        $D: function () {
          return ew;
        },
        Sd: function () {
          return W3mFrameProvider;
        },
        y_: function () {
          return ef;
        },
      }),
        W(11846);
      var ee,
        et,
        er,
        ei,
        eo,
        ea,
        es,
        el = W(74490),
        ec = W(83454);
      let eu =
          ec.env.NEXT_PUBLIC_SECURE_SITE_SDK_URL ||
          "https://secure.walletconnect.org/sdk",
        ed = ec.env.NEXT_PUBLIC_DEFAULT_LOG_LEVEL || "error",
        eh = ec.env.NEXT_PUBLIC_SECURE_SITE_SDK_VERSION || 3,
        ep = {
          APP_EVENT_KEY: "@w3m-app/",
          FRAME_EVENT_KEY: "@w3m-frame/",
          RPC_METHOD_KEY: "RPC_",
          STORAGE_KEY: "@appkit-wallet/",
          SESSION_TOKEN_KEY: "SESSION_TOKEN_KEY",
          EMAIL_LOGIN_USED_KEY: "EMAIL_LOGIN_USED_KEY",
          LAST_USED_CHAIN_KEY: "LAST_USED_CHAIN_KEY",
          LAST_EMAIL_LOGIN_TIME: "LAST_EMAIL_LOGIN_TIME",
          EMAIL: "EMAIL",
          PREFERRED_ACCOUNT_TYPE: "PREFERRED_ACCOUNT_TYPE",
          SMART_ACCOUNT_ENABLED: "SMART_ACCOUNT_ENABLED",
          SMART_ACCOUNT_ENABLED_NETWORKS: "SMART_ACCOUNT_ENABLED_NETWORKS",
          SOCIAL_USERNAME: "SOCIAL_USERNAME",
          APP_SWITCH_NETWORK: "@w3m-app/SWITCH_NETWORK",
          APP_CONNECT_EMAIL: "@w3m-app/CONNECT_EMAIL",
          APP_CONNECT_DEVICE: "@w3m-app/CONNECT_DEVICE",
          APP_CONNECT_OTP: "@w3m-app/CONNECT_OTP",
          APP_CONNECT_SOCIAL: "@w3m-app/CONNECT_SOCIAL",
          APP_GET_SOCIAL_REDIRECT_URI: "@w3m-app/GET_SOCIAL_REDIRECT_URI",
          APP_GET_USER: "@w3m-app/GET_USER",
          APP_SIGN_OUT: "@w3m-app/SIGN_OUT",
          APP_IS_CONNECTED: "@w3m-app/IS_CONNECTED",
          APP_GET_CHAIN_ID: "@w3m-app/GET_CHAIN_ID",
          APP_RPC_REQUEST: "@w3m-app/RPC_REQUEST",
          APP_UPDATE_EMAIL: "@w3m-app/UPDATE_EMAIL",
          APP_UPDATE_EMAIL_PRIMARY_OTP: "@w3m-app/UPDATE_EMAIL_PRIMARY_OTP",
          APP_UPDATE_EMAIL_SECONDARY_OTP: "@w3m-app/UPDATE_EMAIL_SECONDARY_OTP",
          APP_AWAIT_UPDATE_EMAIL: "@w3m-app/AWAIT_UPDATE_EMAIL",
          APP_SYNC_THEME: "@w3m-app/SYNC_THEME",
          APP_SYNC_DAPP_DATA: "@w3m-app/SYNC_DAPP_DATA",
          APP_GET_SMART_ACCOUNT_ENABLED_NETWORKS:
            "@w3m-app/GET_SMART_ACCOUNT_ENABLED_NETWORKS",
          APP_INIT_SMART_ACCOUNT: "@w3m-app/INIT_SMART_ACCOUNT",
          APP_SET_PREFERRED_ACCOUNT: "@w3m-app/SET_PREFERRED_ACCOUNT",
          APP_CONNECT_FARCASTER: "@w3m-app/CONNECT_FARCASTER",
          APP_GET_FARCASTER_URI: "@w3m-app/GET_FARCASTER_URI",
          APP_RELOAD: "@w3m-app/RELOAD",
          FRAME_SWITCH_NETWORK_ERROR: "@w3m-frame/SWITCH_NETWORK_ERROR",
          FRAME_SWITCH_NETWORK_SUCCESS: "@w3m-frame/SWITCH_NETWORK_SUCCESS",
          FRAME_CONNECT_EMAIL_ERROR: "@w3m-frame/CONNECT_EMAIL_ERROR",
          FRAME_CONNECT_EMAIL_SUCCESS: "@w3m-frame/CONNECT_EMAIL_SUCCESS",
          FRAME_CONNECT_DEVICE_ERROR: "@w3m-frame/CONNECT_DEVICE_ERROR",
          FRAME_CONNECT_DEVICE_SUCCESS: "@w3m-frame/CONNECT_DEVICE_SUCCESS",
          FRAME_CONNECT_OTP_SUCCESS: "@w3m-frame/CONNECT_OTP_SUCCESS",
          FRAME_CONNECT_OTP_ERROR: "@w3m-frame/CONNECT_OTP_ERROR",
          FRAME_CONNECT_SOCIAL_SUCCESS: "@w3m-frame/CONNECT_SOCIAL_SUCCESS",
          FRAME_CONNECT_SOCIAL_ERROR: "@w3m-frame/CONNECT_SOCIAL_ERROR",
          FRAME_CONNECT_FARCASTER_SUCCESS:
            "@w3m-frame/CONNECT_FARCASTER_SUCCESS",
          FRAME_CONNECT_FARCASTER_ERROR: "@w3m-frame/CONNECT_FARCASTER_ERROR",
          FRAME_GET_FARCASTER_URI_SUCCESS:
            "@w3m-frame/GET_FARCASTER_URI_SUCCESS",
          FRAME_GET_FARCASTER_URI_ERROR: "@w3m-frame/GET_FARCASTER_URI_ERROR",
          FRAME_GET_SOCIAL_REDIRECT_URI_SUCCESS:
            "@w3m-frame/GET_SOCIAL_REDIRECT_URI_SUCCESS",
          FRAME_GET_SOCIAL_REDIRECT_URI_ERROR:
            "@w3m-frame/GET_SOCIAL_REDIRECT_URI_ERROR",
          FRAME_GET_USER_SUCCESS: "@w3m-frame/GET_USER_SUCCESS",
          FRAME_GET_USER_ERROR: "@w3m-frame/GET_USER_ERROR",
          FRAME_SIGN_OUT_SUCCESS: "@w3m-frame/SIGN_OUT_SUCCESS",
          FRAME_SIGN_OUT_ERROR: "@w3m-frame/SIGN_OUT_ERROR",
          FRAME_IS_CONNECTED_SUCCESS: "@w3m-frame/IS_CONNECTED_SUCCESS",
          FRAME_IS_CONNECTED_ERROR: "@w3m-frame/IS_CONNECTED_ERROR",
          FRAME_GET_CHAIN_ID_SUCCESS: "@w3m-frame/GET_CHAIN_ID_SUCCESS",
          FRAME_GET_CHAIN_ID_ERROR: "@w3m-frame/GET_CHAIN_ID_ERROR",
          FRAME_RPC_REQUEST_SUCCESS: "@w3m-frame/RPC_REQUEST_SUCCESS",
          FRAME_RPC_REQUEST_ERROR: "@w3m-frame/RPC_REQUEST_ERROR",
          FRAME_SESSION_UPDATE: "@w3m-frame/SESSION_UPDATE",
          FRAME_UPDATE_EMAIL_SUCCESS: "@w3m-frame/UPDATE_EMAIL_SUCCESS",
          FRAME_UPDATE_EMAIL_ERROR: "@w3m-frame/UPDATE_EMAIL_ERROR",
          FRAME_UPDATE_EMAIL_PRIMARY_OTP_SUCCESS:
            "@w3m-frame/UPDATE_EMAIL_PRIMARY_OTP_SUCCESS",
          FRAME_UPDATE_EMAIL_PRIMARY_OTP_ERROR:
            "@w3m-frame/UPDATE_EMAIL_PRIMARY_OTP_ERROR",
          FRAME_UPDATE_EMAIL_SECONDARY_OTP_SUCCESS:
            "@w3m-frame/UPDATE_EMAIL_SECONDARY_OTP_SUCCESS",
          FRAME_UPDATE_EMAIL_SECONDARY_OTP_ERROR:
            "@w3m-frame/UPDATE_EMAIL_SECONDARY_OTP_ERROR",
          FRAME_SYNC_THEME_SUCCESS: "@w3m-frame/SYNC_THEME_SUCCESS",
          FRAME_SYNC_THEME_ERROR: "@w3m-frame/SYNC_THEME_ERROR",
          FRAME_SYNC_DAPP_DATA_SUCCESS: "@w3m-frame/SYNC_DAPP_DATA_SUCCESS",
          FRAME_SYNC_DAPP_DATA_ERROR: "@w3m-frame/SYNC_DAPP_DATA_ERROR",
          FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_SUCCESS:
            "@w3m-frame/GET_SMART_ACCOUNT_ENABLED_NETWORKS_SUCCESS",
          FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_ERROR:
            "@w3m-frame/GET_SMART_ACCOUNT_ENABLED_NETWORKS_ERROR",
          FRAME_INIT_SMART_ACCOUNT_SUCCESS:
            "@w3m-frame/INIT_SMART_ACCOUNT_SUCCESS",
          FRAME_INIT_SMART_ACCOUNT_ERROR: "@w3m-frame/INIT_SMART_ACCOUNT_ERROR",
          FRAME_SET_PREFERRED_ACCOUNT_SUCCESS:
            "@w3m-frame/SET_PREFERRED_ACCOUNT_SUCCESS",
          FRAME_SET_PREFERRED_ACCOUNT_ERROR:
            "@w3m-frame/SET_PREFERRED_ACCOUNT_ERROR",
          FRAME_READY: "@w3m-frame/READY",
          FRAME_RELOAD_SUCCESS: "@w3m-frame/RELOAD_SUCCESS",
          FRAME_RELOAD_ERROR: "@w3m-frame/RELOAD_ERROR",
          RPC_RESPONSE_TYPE_ERROR: "RPC_RESPONSE_ERROR",
          RPC_RESPONSE_TYPE_TX: "RPC_RESPONSE_TRANSACTION_HASH",
          RPC_RESPONSE_TYPE_OBJECT: "RPC_RESPONSE_OBJECT",
        },
        ef = {
          SAFE_RPC_METHODS: [
            "eth_accounts",
            "eth_blockNumber",
            "eth_call",
            "eth_chainId",
            "eth_estimateGas",
            "eth_feeHistory",
            "eth_gasPrice",
            "eth_getAccount",
            "eth_getBalance",
            "eth_getBlockByHash",
            "eth_getBlockByNumber",
            "eth_getBlockReceipts",
            "eth_getBlockTransactionCountByHash",
            "eth_getBlockTransactionCountByNumber",
            "eth_getCode",
            "eth_getFilterChanges",
            "eth_getFilterLogs",
            "eth_getLogs",
            "eth_getProof",
            "eth_getStorageAt",
            "eth_getTransactionByBlockHashAndIndex",
            "eth_getTransactionByBlockNumberAndIndex",
            "eth_getTransactionByHash",
            "eth_getTransactionCount",
            "eth_getTransactionReceipt",
            "eth_getUncleCountByBlockHash",
            "eth_getUncleCountByBlockNumber",
            "eth_maxPriorityFeePerGas",
            "eth_newBlockFilter",
            "eth_newFilter",
            "eth_newPendingTransactionFilter",
            "eth_sendRawTransaction",
            "eth_syncing",
            "eth_uninstallFilter",
            "wallet_getCapabilities",
            "wallet_getCallsStatus",
            "eth_getUserOperationReceipt",
            "eth_estimateUserOperationGas",
            "eth_getUserOperationByHash",
            "eth_supportedEntryPoints",
          ],
          NOT_SAFE_RPC_METHODS: [
            "personal_sign",
            "eth_signTypedData_v4",
            "eth_sendTransaction",
            "solana_signMessage",
            "solana_signTransaction",
            "solana_signAllTransactions",
            "solana_signAndSendTransaction",
            "wallet_sendCalls",
            "wallet_grantPermissions",
            "wallet_revokePermissions",
            "eth_sendUserOperation",
          ],
          GET_CHAIN_ID: "eth_chainId",
          RPC_METHOD_NOT_ALLOWED_MESSAGE: "Requested RPC call is not allowed",
          RPC_METHOD_NOT_ALLOWED_UI_MESSAGE: "Action not allowed",
          ACCOUNT_TYPES: { EOA: "eoa", SMART_ACCOUNT: "smartAccount" },
        },
        eg = {
          transactionHash: /^0x(?:[A-Fa-f0-9]{64})$/u,
          signedMessage: /^0x(?:[a-fA-F0-9]{62,})$/u,
        },
        em = {
          set(s, x) {
            ew.isClient && localStorage.setItem(`${ep.STORAGE_KEY}${s}`, x);
          },
          get: (s) =>
            ew.isClient ? localStorage.getItem(`${ep.STORAGE_KEY}${s}`) : null,
          delete(s, x) {
            ew.isClient &&
              (x
                ? localStorage.removeItem(s)
                : localStorage.removeItem(`${ep.STORAGE_KEY}${s}`));
          },
        },
        ew = {
          checkIfAllowedToTriggerEmail() {
            let s = em.get(ep.LAST_EMAIL_LOGIN_TIME);
            if (s) {
              let x = Date.now() - Number(s);
              if (x < 3e4)
                throw Error(
                  `Please try again after ${Math.ceil((3e4 - x) / 1e3)} seconds`
                );
            }
          },
          getTimeToNextEmailLogin() {
            let s = em.get(ep.LAST_EMAIL_LOGIN_TIME);
            if (s) {
              let x = Date.now() - Number(s);
              if (x < 3e4) return Math.ceil((3e4 - x) / 1e3);
            }
            return 0;
          },
          checkIfRequestExists: (s) =>
            ef.NOT_SAFE_RPC_METHODS.includes(s.method) ||
            ef.SAFE_RPC_METHODS.includes(s.method),
          getResponseType(s) {
            let x =
              "string" == typeof s &&
              (s?.match(eg.transactionHash) || s?.match(eg.signedMessage));
            return x ? ep.RPC_RESPONSE_TYPE_TX : ep.RPC_RESPONSE_TYPE_OBJECT;
          },
          checkIfRequestIsSafe: (s) => ef.SAFE_RPC_METHODS.includes(s.method),
          isClient: "undefined" != typeof window,
        };
      ((ee = ei || (ei = {})).assertEqual = (s) => s),
        (ee.assertIs = function (s) {}),
        (ee.assertNever = function (s) {
          throw Error();
        }),
        (ee.arrayToEnum = (s) => {
          let x = {};
          for (let W of s) x[W] = W;
          return x;
        }),
        (ee.getValidEnumValues = (s) => {
          let x = ee.objectKeys(s).filter((x) => "number" != typeof s[s[x]]),
            W = {};
          for (let X of x) W[X] = s[X];
          return ee.objectValues(W);
        }),
        (ee.objectValues = (s) =>
          ee.objectKeys(s).map(function (x) {
            return s[x];
          })),
        (ee.objectKeys =
          "function" == typeof Object.keys
            ? (s) => Object.keys(s)
            : (s) => {
                let x = [];
                for (let W in s)
                  Object.prototype.hasOwnProperty.call(s, W) && x.push(W);
                return x;
              }),
        (ee.find = (s, x) => {
          for (let W of s) if (x(W)) return W;
        }),
        (ee.isInteger =
          "function" == typeof Number.isInteger
            ? (s) => Number.isInteger(s)
            : (s) =>
                "number" == typeof s && isFinite(s) && Math.floor(s) === s),
        (ee.joinValues = function (s, x = " | ") {
          return s.map((s) => ("string" == typeof s ? `'${s}'` : s)).join(x);
        }),
        (ee.jsonStringifyReplacer = (s, x) =>
          "bigint" == typeof x ? x.toString() : x),
        ((eo || (eo = {})).mergeShapes = (s, x) => ({ ...s, ...x }));
      let eb = ei.arrayToEnum([
          "string",
          "nan",
          "number",
          "integer",
          "float",
          "boolean",
          "date",
          "bigint",
          "symbol",
          "function",
          "undefined",
          "null",
          "array",
          "object",
          "unknown",
          "promise",
          "void",
          "never",
          "map",
          "set",
        ]),
        getParsedType = (s) => {
          let x = typeof s;
          switch (x) {
            case "undefined":
              return eb.undefined;
            case "string":
              return eb.string;
            case "number":
              return isNaN(s) ? eb.nan : eb.number;
            case "boolean":
              return eb.boolean;
            case "function":
              return eb.function;
            case "bigint":
              return eb.bigint;
            case "symbol":
              return eb.symbol;
            case "object":
              if (Array.isArray(s)) return eb.array;
              if (null === s) return eb.null;
              if (
                s.then &&
                "function" == typeof s.then &&
                s.catch &&
                "function" == typeof s.catch
              )
                return eb.promise;
              if ("undefined" != typeof Map && s instanceof Map) return eb.map;
              if ("undefined" != typeof Set && s instanceof Set) return eb.set;
              if ("undefined" != typeof Date && s instanceof Date)
                return eb.date;
              return eb.object;
            default:
              return eb.unknown;
          }
        },
        ev = ei.arrayToEnum([
          "invalid_type",
          "invalid_literal",
          "custom",
          "invalid_union",
          "invalid_union_discriminator",
          "invalid_enum_value",
          "unrecognized_keys",
          "invalid_arguments",
          "invalid_return_type",
          "invalid_date",
          "invalid_string",
          "too_small",
          "too_big",
          "invalid_intersection_types",
          "not_multiple_of",
          "not_finite",
        ]);
      let ZodError = class ZodError extends Error {
        constructor(s) {
          super(),
            (this.issues = []),
            (this.addIssue = (s) => {
              this.issues = [...this.issues, s];
            }),
            (this.addIssues = (s = []) => {
              this.issues = [...this.issues, ...s];
            });
          let x = new.target.prototype;
          Object.setPrototypeOf
            ? Object.setPrototypeOf(this, x)
            : (this.__proto__ = x),
            (this.name = "ZodError"),
            (this.issues = s);
        }
        get errors() {
          return this.issues;
        }
        format(s) {
          let x =
              s ||
              function (s) {
                return s.message;
              },
            W = { _errors: [] },
            processError = (s) => {
              for (let X of s.issues)
                if ("invalid_union" === X.code) X.unionErrors.map(processError);
                else if ("invalid_return_type" === X.code)
                  processError(X.returnTypeError);
                else if ("invalid_arguments" === X.code)
                  processError(X.argumentsError);
                else if (0 === X.path.length) W._errors.push(x(X));
                else {
                  let s = W,
                    ee = 0;
                  for (; ee < X.path.length; ) {
                    let W = X.path[ee],
                      et = ee === X.path.length - 1;
                    et
                      ? ((s[W] = s[W] || { _errors: [] }),
                        s[W]._errors.push(x(X)))
                      : (s[W] = s[W] || { _errors: [] }),
                      (s = s[W]),
                      ee++;
                  }
                }
            };
          return processError(this), W;
        }
        toString() {
          return this.message;
        }
        get message() {
          return JSON.stringify(this.issues, ei.jsonStringifyReplacer, 2);
        }
        get isEmpty() {
          return 0 === this.issues.length;
        }
        flatten(s = (s) => s.message) {
          let x = {},
            W = [];
          for (let X of this.issues)
            X.path.length > 0
              ? ((x[X.path[0]] = x[X.path[0]] || []), x[X.path[0]].push(s(X)))
              : W.push(s(X));
          return { formErrors: W, fieldErrors: x };
        }
        get formErrors() {
          return this.flatten();
        }
      };
      ZodError.create = (s) => {
        let x = new ZodError(s);
        return x;
      };
      let errorMap = (s, x) => {
          let W;
          switch (s.code) {
            case ev.invalid_type:
              W =
                s.received === eb.undefined
                  ? "Required"
                  : `Expected ${s.expected}, received ${s.received}`;
              break;
            case ev.invalid_literal:
              W = `Invalid literal value, expected ${JSON.stringify(
                s.expected,
                ei.jsonStringifyReplacer
              )}`;
              break;
            case ev.unrecognized_keys:
              W = `Unrecognized key(s) in object: ${ei.joinValues(
                s.keys,
                ", "
              )}`;
              break;
            case ev.invalid_union:
              W = "Invalid input";
              break;
            case ev.invalid_union_discriminator:
              W = `Invalid discriminator value. Expected ${ei.joinValues(
                s.options
              )}`;
              break;
            case ev.invalid_enum_value:
              W = `Invalid enum value. Expected ${ei.joinValues(
                s.options
              )}, received '${s.received}'`;
              break;
            case ev.invalid_arguments:
              W = "Invalid function arguments";
              break;
            case ev.invalid_return_type:
              W = "Invalid function return type";
              break;
            case ev.invalid_date:
              W = "Invalid date";
              break;
            case ev.invalid_string:
              "object" == typeof s.validation
                ? "includes" in s.validation
                  ? ((W = `Invalid input: must include "${s.validation.includes}"`),
                    "number" == typeof s.validation.position &&
                      (W = `${W} at one or more positions greater than or equal to ${s.validation.position}`))
                  : "startsWith" in s.validation
                  ? (W = `Invalid input: must start with "${s.validation.startsWith}"`)
                  : "endsWith" in s.validation
                  ? (W = `Invalid input: must end with "${s.validation.endsWith}"`)
                  : ei.assertNever(s.validation)
                : (W =
                    "regex" !== s.validation
                      ? `Invalid ${s.validation}`
                      : "Invalid");
              break;
            case ev.too_small:
              W =
                "array" === s.type
                  ? `Array must contain ${
                      s.exact
                        ? "exactly"
                        : s.inclusive
                        ? "at least"
                        : "more than"
                    } ${s.minimum} element(s)`
                  : "string" === s.type
                  ? `String must contain ${
                      s.exact ? "exactly" : s.inclusive ? "at least" : "over"
                    } ${s.minimum} character(s)`
                  : "number" === s.type
                  ? `Number must be ${
                      s.exact
                        ? "exactly equal to "
                        : s.inclusive
                        ? "greater than or equal to "
                        : "greater than "
                    }${s.minimum}`
                  : "date" === s.type
                  ? `Date must be ${
                      s.exact
                        ? "exactly equal to "
                        : s.inclusive
                        ? "greater than or equal to "
                        : "greater than "
                    }${new Date(Number(s.minimum))}`
                  : "Invalid input";
              break;
            case ev.too_big:
              W =
                "array" === s.type
                  ? `Array must contain ${
                      s.exact
                        ? "exactly"
                        : s.inclusive
                        ? "at most"
                        : "less than"
                    } ${s.maximum} element(s)`
                  : "string" === s.type
                  ? `String must contain ${
                      s.exact ? "exactly" : s.inclusive ? "at most" : "under"
                    } ${s.maximum} character(s)`
                  : "number" === s.type
                  ? `Number must be ${
                      s.exact
                        ? "exactly"
                        : s.inclusive
                        ? "less than or equal to"
                        : "less than"
                    } ${s.maximum}`
                  : "bigint" === s.type
                  ? `BigInt must be ${
                      s.exact
                        ? "exactly"
                        : s.inclusive
                        ? "less than or equal to"
                        : "less than"
                    } ${s.maximum}`
                  : "date" === s.type
                  ? `Date must be ${
                      s.exact
                        ? "exactly"
                        : s.inclusive
                        ? "smaller than or equal to"
                        : "smaller than"
                    } ${new Date(Number(s.maximum))}`
                  : "Invalid input";
              break;
            case ev.custom:
              W = "Invalid input";
              break;
            case ev.invalid_intersection_types:
              W = "Intersection results could not be merged";
              break;
            case ev.not_multiple_of:
              W = `Number must be a multiple of ${s.multipleOf}`;
              break;
            case ev.not_finite:
              W = "Number must be finite";
              break;
            default:
              (W = x.defaultError), ei.assertNever(s);
          }
          return { message: W };
        },
        ey = errorMap;
      function getErrorMap() {
        return ey;
      }
      let makeIssue = (s) => {
        let { data: x, path: W, errorMaps: X, issueData: ee } = s,
          et = [...W, ...(ee.path || [])],
          er = { ...ee, path: et },
          ei = "",
          eo = X.filter((s) => !!s)
            .slice()
            .reverse();
        for (let s of eo) ei = s(er, { data: x, defaultError: ei }).message;
        return { ...ee, path: et, message: ee.message || ei };
      };
      function addIssueToContext(s, x) {
        let W = makeIssue({
          issueData: x,
          data: s.data,
          path: s.path,
          errorMaps: [
            s.common.contextualErrorMap,
            s.schemaErrorMap,
            getErrorMap(),
            errorMap,
          ].filter((s) => !!s),
        });
        s.common.issues.push(W);
      }
      let ParseStatus = class ParseStatus {
        constructor() {
          this.value = "valid";
        }
        dirty() {
          "valid" === this.value && (this.value = "dirty");
        }
        abort() {
          "aborted" !== this.value && (this.value = "aborted");
        }
        static mergeArray(s, x) {
          let W = [];
          for (let X of x) {
            if ("aborted" === X.status) return e_;
            "dirty" === X.status && s.dirty(), W.push(X.value);
          }
          return { status: s.value, value: W };
        }
        static async mergeObjectAsync(s, x) {
          let W = [];
          for (let s of x) W.push({ key: await s.key, value: await s.value });
          return ParseStatus.mergeObjectSync(s, W);
        }
        static mergeObjectSync(s, x) {
          let W = {};
          for (let X of x) {
            let { key: x, value: ee } = X;
            if ("aborted" === x.status || "aborted" === ee.status) return e_;
            "dirty" === x.status && s.dirty(),
              "dirty" === ee.status && s.dirty(),
              "__proto__" !== x.value &&
                (void 0 !== ee.value || X.alwaysSet) &&
                (W[x.value] = ee.value);
          }
          return { status: s.value, value: W };
        }
      };
      let e_ = Object.freeze({ status: "aborted" }),
        DIRTY = (s) => ({ status: "dirty", value: s }),
        OK = (s) => ({ status: "valid", value: s }),
        isAborted = (s) => "aborted" === s.status,
        isDirty = (s) => "dirty" === s.status,
        isValid = (s) => "valid" === s.status,
        isAsync = (s) => "undefined" != typeof Promise && s instanceof Promise;
      ((et = ea || (ea = {})).errToObj = (s) =>
        "string" == typeof s ? { message: s } : s || {}),
        (et.toString = (s) =>
          "string" == typeof s ? s : null == s ? void 0 : s.message);
      let ParseInputLazyPath = class ParseInputLazyPath {
        constructor(s, x, W, X) {
          (this._cachedPath = []),
            (this.parent = s),
            (this.data = x),
            (this._path = W),
            (this._key = X);
        }
        get path() {
          return (
            this._cachedPath.length ||
              (this._key instanceof Array
                ? this._cachedPath.push(...this._path, ...this._key)
                : this._cachedPath.push(...this._path, this._key)),
            this._cachedPath
          );
        }
      };
      let handleResult = (s, x) => {
        if (isValid(x)) return { success: !0, data: x.value };
        if (!s.common.issues.length)
          throw Error("Validation failed but no issues detected.");
        return {
          success: !1,
          get error() {
            if (this._error) return this._error;
            let x = new ZodError(s.common.issues);
            return (this._error = x), this._error;
          },
        };
      };
      function processCreateParams(s) {
        if (!s) return {};
        let {
          errorMap: x,
          invalid_type_error: W,
          required_error: X,
          description: ee,
        } = s;
        if (x && (W || X))
          throw Error(
            'Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.'
          );
        return x
          ? { errorMap: x, description: ee }
          : {
              errorMap: (s, x) =>
                "invalid_type" !== s.code
                  ? { message: x.defaultError }
                  : void 0 === x.data
                  ? { message: null != X ? X : x.defaultError }
                  : { message: null != W ? W : x.defaultError },
              description: ee,
            };
      }
      let ZodType = class ZodType {
        constructor(s) {
          (this.spa = this.safeParseAsync),
            (this._def = s),
            (this.parse = this.parse.bind(this)),
            (this.safeParse = this.safeParse.bind(this)),
            (this.parseAsync = this.parseAsync.bind(this)),
            (this.safeParseAsync = this.safeParseAsync.bind(this)),
            (this.spa = this.spa.bind(this)),
            (this.refine = this.refine.bind(this)),
            (this.refinement = this.refinement.bind(this)),
            (this.superRefine = this.superRefine.bind(this)),
            (this.optional = this.optional.bind(this)),
            (this.nullable = this.nullable.bind(this)),
            (this.nullish = this.nullish.bind(this)),
            (this.array = this.array.bind(this)),
            (this.promise = this.promise.bind(this)),
            (this.or = this.or.bind(this)),
            (this.and = this.and.bind(this)),
            (this.transform = this.transform.bind(this)),
            (this.brand = this.brand.bind(this)),
            (this.default = this.default.bind(this)),
            (this.catch = this.catch.bind(this)),
            (this.describe = this.describe.bind(this)),
            (this.pipe = this.pipe.bind(this)),
            (this.readonly = this.readonly.bind(this)),
            (this.isNullable = this.isNullable.bind(this)),
            (this.isOptional = this.isOptional.bind(this));
        }
        get description() {
          return this._def.description;
        }
        _getType(s) {
          return getParsedType(s.data);
        }
        _getOrReturnCtx(s, x) {
          return (
            x || {
              common: s.parent.common,
              data: s.data,
              parsedType: getParsedType(s.data),
              schemaErrorMap: this._def.errorMap,
              path: s.path,
              parent: s.parent,
            }
          );
        }
        _processInputParams(s) {
          return {
            status: new ParseStatus(),
            ctx: {
              common: s.parent.common,
              data: s.data,
              parsedType: getParsedType(s.data),
              schemaErrorMap: this._def.errorMap,
              path: s.path,
              parent: s.parent,
            },
          };
        }
        _parseSync(s) {
          let x = this._parse(s);
          if (isAsync(x)) throw Error("Synchronous parse encountered promise.");
          return x;
        }
        _parseAsync(s) {
          let x = this._parse(s);
          return Promise.resolve(x);
        }
        parse(s, x) {
          let W = this.safeParse(s, x);
          if (W.success) return W.data;
          throw W.error;
        }
        safeParse(s, x) {
          var W;
          let X = {
              common: {
                issues: [],
                async:
                  null !== (W = null == x ? void 0 : x.async) &&
                  void 0 !== W &&
                  W,
                contextualErrorMap: null == x ? void 0 : x.errorMap,
              },
              path: (null == x ? void 0 : x.path) || [],
              schemaErrorMap: this._def.errorMap,
              parent: null,
              data: s,
              parsedType: getParsedType(s),
            },
            ee = this._parseSync({ data: s, path: X.path, parent: X });
          return handleResult(X, ee);
        }
        async parseAsync(s, x) {
          let W = await this.safeParseAsync(s, x);
          if (W.success) return W.data;
          throw W.error;
        }
        async safeParseAsync(s, x) {
          let W = {
              common: {
                issues: [],
                contextualErrorMap: null == x ? void 0 : x.errorMap,
                async: !0,
              },
              path: (null == x ? void 0 : x.path) || [],
              schemaErrorMap: this._def.errorMap,
              parent: null,
              data: s,
              parsedType: getParsedType(s),
            },
            X = this._parse({ data: s, path: W.path, parent: W }),
            ee = await (isAsync(X) ? X : Promise.resolve(X));
          return handleResult(W, ee);
        }
        refine(s, x) {
          let getIssueProperties = (s) =>
            "string" == typeof x || void 0 === x
              ? { message: x }
              : "function" == typeof x
              ? x(s)
              : x;
          return this._refinement((x, W) => {
            let X = s(x),
              setError = () =>
                W.addIssue({ code: ev.custom, ...getIssueProperties(x) });
            return "undefined" != typeof Promise && X instanceof Promise
              ? X.then((s) => !!s || (setError(), !1))
              : !!X || (setError(), !1);
          });
        }
        refinement(s, x) {
          return this._refinement(
            (W, X) =>
              !!s(W) || (X.addIssue("function" == typeof x ? x(W, X) : x), !1)
          );
        }
        _refinement(s) {
          return new ZodEffects({
            schema: this,
            typeName: es.ZodEffects,
            effect: { type: "refinement", refinement: s },
          });
        }
        superRefine(s) {
          return this._refinement(s);
        }
        optional() {
          return ZodOptional.create(this, this._def);
        }
        nullable() {
          return ZodNullable.create(this, this._def);
        }
        nullish() {
          return this.nullable().optional();
        }
        array() {
          return ZodArray.create(this, this._def);
        }
        promise() {
          return ZodPromise.create(this, this._def);
        }
        or(s) {
          return ZodUnion.create([this, s], this._def);
        }
        and(s) {
          return ZodIntersection.create(this, s, this._def);
        }
        transform(s) {
          return new ZodEffects({
            ...processCreateParams(this._def),
            schema: this,
            typeName: es.ZodEffects,
            effect: { type: "transform", transform: s },
          });
        }
        default(s) {
          return new ZodDefault({
            ...processCreateParams(this._def),
            innerType: this,
            defaultValue: "function" == typeof s ? s : () => s,
            typeName: es.ZodDefault,
          });
        }
        brand() {
          return new ZodBranded({
            typeName: es.ZodBranded,
            type: this,
            ...processCreateParams(this._def),
          });
        }
        catch(s) {
          return new ZodCatch({
            ...processCreateParams(this._def),
            innerType: this,
            catchValue: "function" == typeof s ? s : () => s,
            typeName: es.ZodCatch,
          });
        }
        describe(s) {
          let x = this.constructor;
          return new x({ ...this._def, description: s });
        }
        pipe(s) {
          return ZodPipeline.create(this, s);
        }
        readonly() {
          return ZodReadonly.create(this);
        }
        isOptional() {
          return this.safeParse(void 0).success;
        }
        isNullable() {
          return this.safeParse(null).success;
        }
      };
      let eC = /^c[^\s-]{8,}$/i,
        ex = /^[a-z][a-z0-9]*$/,
        eE = /^[0-9A-HJKMNP-TV-Z]{26}$/,
        eA =
          /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,
        eS =
          /^(?!\.)(?!.*\.\.)([A-Z0-9_+-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,
        ek =
          /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/,
        eT =
          /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,
        datetimeRegex = (s) =>
          s.precision
            ? s.offset
              ? RegExp(
                  `^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${s.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`
                )
              : RegExp(
                  `^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${s.precision}}Z$`
                )
            : 0 === s.precision
            ? s.offset
              ? RegExp(
                  "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$"
                )
              : RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$")
            : s.offset
            ? RegExp(
                "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$"
              )
            : RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$");
      let ZodString = class ZodString extends ZodType {
        _parse(s) {
          let x;
          this._def.coerce && (s.data = String(s.data));
          let W = this._getType(s);
          if (W !== eb.string) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.string,
                received: x.parsedType,
              }),
              e_
            );
          }
          let ee = new ParseStatus();
          for (let W of this._def.checks)
            if ("min" === W.kind)
              s.data.length < W.value &&
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.too_small,
                  minimum: W.value,
                  type: "string",
                  inclusive: !0,
                  exact: !1,
                  message: W.message,
                }),
                ee.dirty());
            else if ("max" === W.kind)
              s.data.length > W.value &&
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.too_big,
                  maximum: W.value,
                  type: "string",
                  inclusive: !0,
                  exact: !1,
                  message: W.message,
                }),
                ee.dirty());
            else if ("length" === W.kind) {
              let X = s.data.length > W.value,
                et = s.data.length < W.value;
              (X || et) &&
                ((x = this._getOrReturnCtx(s, x)),
                X
                  ? addIssueToContext(x, {
                      code: ev.too_big,
                      maximum: W.value,
                      type: "string",
                      inclusive: !0,
                      exact: !0,
                      message: W.message,
                    })
                  : et &&
                    addIssueToContext(x, {
                      code: ev.too_small,
                      minimum: W.value,
                      type: "string",
                      inclusive: !0,
                      exact: !0,
                      message: W.message,
                    }),
                ee.dirty());
            } else if ("email" === W.kind)
              eS.test(s.data) ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  validation: "email",
                  code: ev.invalid_string,
                  message: W.message,
                }),
                ee.dirty());
            else if ("emoji" === W.kind)
              X ||
                (X = RegExp(
                  "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",
                  "u"
                )),
                X.test(s.data) ||
                  (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                    validation: "emoji",
                    code: ev.invalid_string,
                    message: W.message,
                  }),
                  ee.dirty());
            else if ("uuid" === W.kind)
              eA.test(s.data) ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  validation: "uuid",
                  code: ev.invalid_string,
                  message: W.message,
                }),
                ee.dirty());
            else if ("cuid" === W.kind)
              eC.test(s.data) ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  validation: "cuid",
                  code: ev.invalid_string,
                  message: W.message,
                }),
                ee.dirty());
            else if ("cuid2" === W.kind)
              ex.test(s.data) ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  validation: "cuid2",
                  code: ev.invalid_string,
                  message: W.message,
                }),
                ee.dirty());
            else if ("ulid" === W.kind)
              eE.test(s.data) ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  validation: "ulid",
                  code: ev.invalid_string,
                  message: W.message,
                }),
                ee.dirty());
            else if ("url" === W.kind)
              try {
                new URL(s.data);
              } catch (X) {
                addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  validation: "url",
                  code: ev.invalid_string,
                  message: W.message,
                }),
                  ee.dirty();
              }
            else if ("regex" === W.kind) {
              W.regex.lastIndex = 0;
              let X = W.regex.test(s.data);
              X ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  validation: "regex",
                  code: ev.invalid_string,
                  message: W.message,
                }),
                ee.dirty());
            } else if ("trim" === W.kind) s.data = s.data.trim();
            else if ("includes" === W.kind)
              s.data.includes(W.value, W.position) ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.invalid_string,
                  validation: { includes: W.value, position: W.position },
                  message: W.message,
                }),
                ee.dirty());
            else if ("toLowerCase" === W.kind) s.data = s.data.toLowerCase();
            else if ("toUpperCase" === W.kind) s.data = s.data.toUpperCase();
            else if ("startsWith" === W.kind)
              s.data.startsWith(W.value) ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.invalid_string,
                  validation: { startsWith: W.value },
                  message: W.message,
                }),
                ee.dirty());
            else if ("endsWith" === W.kind)
              s.data.endsWith(W.value) ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.invalid_string,
                  validation: { endsWith: W.value },
                  message: W.message,
                }),
                ee.dirty());
            else if ("datetime" === W.kind) {
              let X = datetimeRegex(W);
              X.test(s.data) ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.invalid_string,
                  validation: "datetime",
                  message: W.message,
                }),
                ee.dirty());
            } else if ("ip" === W.kind) {
              var et, er;
              (et = s.data),
                (("v4" === (er = W.version) || !er) && ek.test(et)) ||
                  (("v6" === er || !er) && eT.test(et)) ||
                  (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                    validation: "ip",
                    code: ev.invalid_string,
                    message: W.message,
                  }),
                  ee.dirty());
            } else ei.assertNever(W);
          return { status: ee.value, value: s.data };
        }
        _regex(s, x, W) {
          return this.refinement((x) => s.test(x), {
            validation: x,
            code: ev.invalid_string,
            ...ea.errToObj(W),
          });
        }
        _addCheck(s) {
          return new ZodString({
            ...this._def,
            checks: [...this._def.checks, s],
          });
        }
        email(s) {
          return this._addCheck({ kind: "email", ...ea.errToObj(s) });
        }
        url(s) {
          return this._addCheck({ kind: "url", ...ea.errToObj(s) });
        }
        emoji(s) {
          return this._addCheck({ kind: "emoji", ...ea.errToObj(s) });
        }
        uuid(s) {
          return this._addCheck({ kind: "uuid", ...ea.errToObj(s) });
        }
        cuid(s) {
          return this._addCheck({ kind: "cuid", ...ea.errToObj(s) });
        }
        cuid2(s) {
          return this._addCheck({ kind: "cuid2", ...ea.errToObj(s) });
        }
        ulid(s) {
          return this._addCheck({ kind: "ulid", ...ea.errToObj(s) });
        }
        ip(s) {
          return this._addCheck({ kind: "ip", ...ea.errToObj(s) });
        }
        datetime(s) {
          var x;
          return "string" == typeof s
            ? this._addCheck({
                kind: "datetime",
                precision: null,
                offset: !1,
                message: s,
              })
            : this._addCheck({
                kind: "datetime",
                precision:
                  void 0 === (null == s ? void 0 : s.precision)
                    ? null
                    : null == s
                    ? void 0
                    : s.precision,
                offset:
                  null !== (x = null == s ? void 0 : s.offset) &&
                  void 0 !== x &&
                  x,
                ...ea.errToObj(null == s ? void 0 : s.message),
              });
        }
        regex(s, x) {
          return this._addCheck({ kind: "regex", regex: s, ...ea.errToObj(x) });
        }
        includes(s, x) {
          return this._addCheck({
            kind: "includes",
            value: s,
            position: null == x ? void 0 : x.position,
            ...ea.errToObj(null == x ? void 0 : x.message),
          });
        }
        startsWith(s, x) {
          return this._addCheck({
            kind: "startsWith",
            value: s,
            ...ea.errToObj(x),
          });
        }
        endsWith(s, x) {
          return this._addCheck({
            kind: "endsWith",
            value: s,
            ...ea.errToObj(x),
          });
        }
        min(s, x) {
          return this._addCheck({ kind: "min", value: s, ...ea.errToObj(x) });
        }
        max(s, x) {
          return this._addCheck({ kind: "max", value: s, ...ea.errToObj(x) });
        }
        length(s, x) {
          return this._addCheck({
            kind: "length",
            value: s,
            ...ea.errToObj(x),
          });
        }
        nonempty(s) {
          return this.min(1, ea.errToObj(s));
        }
        trim() {
          return new ZodString({
            ...this._def,
            checks: [...this._def.checks, { kind: "trim" }],
          });
        }
        toLowerCase() {
          return new ZodString({
            ...this._def,
            checks: [...this._def.checks, { kind: "toLowerCase" }],
          });
        }
        toUpperCase() {
          return new ZodString({
            ...this._def,
            checks: [...this._def.checks, { kind: "toUpperCase" }],
          });
        }
        get isDatetime() {
          return !!this._def.checks.find((s) => "datetime" === s.kind);
        }
        get isEmail() {
          return !!this._def.checks.find((s) => "email" === s.kind);
        }
        get isURL() {
          return !!this._def.checks.find((s) => "url" === s.kind);
        }
        get isEmoji() {
          return !!this._def.checks.find((s) => "emoji" === s.kind);
        }
        get isUUID() {
          return !!this._def.checks.find((s) => "uuid" === s.kind);
        }
        get isCUID() {
          return !!this._def.checks.find((s) => "cuid" === s.kind);
        }
        get isCUID2() {
          return !!this._def.checks.find((s) => "cuid2" === s.kind);
        }
        get isULID() {
          return !!this._def.checks.find((s) => "ulid" === s.kind);
        }
        get isIP() {
          return !!this._def.checks.find((s) => "ip" === s.kind);
        }
        get minLength() {
          let s = null;
          for (let x of this._def.checks)
            "min" === x.kind && (null === s || x.value > s) && (s = x.value);
          return s;
        }
        get maxLength() {
          let s = null;
          for (let x of this._def.checks)
            "max" === x.kind && (null === s || x.value < s) && (s = x.value);
          return s;
        }
      };
      ZodString.create = (s) => {
        var x;
        return new ZodString({
          checks: [],
          typeName: es.ZodString,
          coerce:
            null !== (x = null == s ? void 0 : s.coerce) && void 0 !== x && x,
          ...processCreateParams(s),
        });
      };
      let ZodNumber = class ZodNumber extends ZodType {
        constructor() {
          super(...arguments),
            (this.min = this.gte),
            (this.max = this.lte),
            (this.step = this.multipleOf);
        }
        _parse(s) {
          let x;
          this._def.coerce && (s.data = Number(s.data));
          let W = this._getType(s);
          if (W !== eb.number) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.number,
                received: x.parsedType,
              }),
              e_
            );
          }
          let X = new ParseStatus();
          for (let W of this._def.checks)
            if ("int" === W.kind)
              ei.isInteger(s.data) ||
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.invalid_type,
                  expected: "integer",
                  received: "float",
                  message: W.message,
                }),
                X.dirty());
            else if ("min" === W.kind) {
              let ee = W.inclusive ? s.data < W.value : s.data <= W.value;
              ee &&
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.too_small,
                  minimum: W.value,
                  type: "number",
                  inclusive: W.inclusive,
                  exact: !1,
                  message: W.message,
                }),
                X.dirty());
            } else if ("max" === W.kind) {
              let ee = W.inclusive ? s.data > W.value : s.data >= W.value;
              ee &&
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.too_big,
                  maximum: W.value,
                  type: "number",
                  inclusive: W.inclusive,
                  exact: !1,
                  message: W.message,
                }),
                X.dirty());
            } else
              "multipleOf" === W.kind
                ? 0 !==
                    (function (s, x) {
                      let W = (s.toString().split(".")[1] || "").length,
                        X = (x.toString().split(".")[1] || "").length,
                        ee = W > X ? W : X,
                        et = parseInt(s.toFixed(ee).replace(".", "")),
                        er = parseInt(x.toFixed(ee).replace(".", ""));
                      return (et % er) / Math.pow(10, ee);
                    })(s.data, W.value) &&
                  (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                    code: ev.not_multiple_of,
                    multipleOf: W.value,
                    message: W.message,
                  }),
                  X.dirty())
                : "finite" === W.kind
                ? Number.isFinite(s.data) ||
                  (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                    code: ev.not_finite,
                    message: W.message,
                  }),
                  X.dirty())
                : ei.assertNever(W);
          return { status: X.value, value: s.data };
        }
        gte(s, x) {
          return this.setLimit("min", s, !0, ea.toString(x));
        }
        gt(s, x) {
          return this.setLimit("min", s, !1, ea.toString(x));
        }
        lte(s, x) {
          return this.setLimit("max", s, !0, ea.toString(x));
        }
        lt(s, x) {
          return this.setLimit("max", s, !1, ea.toString(x));
        }
        setLimit(s, x, W, X) {
          return new ZodNumber({
            ...this._def,
            checks: [
              ...this._def.checks,
              { kind: s, value: x, inclusive: W, message: ea.toString(X) },
            ],
          });
        }
        _addCheck(s) {
          return new ZodNumber({
            ...this._def,
            checks: [...this._def.checks, s],
          });
        }
        int(s) {
          return this._addCheck({ kind: "int", message: ea.toString(s) });
        }
        positive(s) {
          return this._addCheck({
            kind: "min",
            value: 0,
            inclusive: !1,
            message: ea.toString(s),
          });
        }
        negative(s) {
          return this._addCheck({
            kind: "max",
            value: 0,
            inclusive: !1,
            message: ea.toString(s),
          });
        }
        nonpositive(s) {
          return this._addCheck({
            kind: "max",
            value: 0,
            inclusive: !0,
            message: ea.toString(s),
          });
        }
        nonnegative(s) {
          return this._addCheck({
            kind: "min",
            value: 0,
            inclusive: !0,
            message: ea.toString(s),
          });
        }
        multipleOf(s, x) {
          return this._addCheck({
            kind: "multipleOf",
            value: s,
            message: ea.toString(x),
          });
        }
        finite(s) {
          return this._addCheck({ kind: "finite", message: ea.toString(s) });
        }
        safe(s) {
          return this._addCheck({
            kind: "min",
            inclusive: !0,
            value: Number.MIN_SAFE_INTEGER,
            message: ea.toString(s),
          })._addCheck({
            kind: "max",
            inclusive: !0,
            value: Number.MAX_SAFE_INTEGER,
            message: ea.toString(s),
          });
        }
        get minValue() {
          let s = null;
          for (let x of this._def.checks)
            "min" === x.kind && (null === s || x.value > s) && (s = x.value);
          return s;
        }
        get maxValue() {
          let s = null;
          for (let x of this._def.checks)
            "max" === x.kind && (null === s || x.value < s) && (s = x.value);
          return s;
        }
        get isInt() {
          return !!this._def.checks.find(
            (s) =>
              "int" === s.kind ||
              ("multipleOf" === s.kind && ei.isInteger(s.value))
          );
        }
        get isFinite() {
          let s = null,
            x = null;
          for (let W of this._def.checks) {
            if (
              "finite" === W.kind ||
              "int" === W.kind ||
              "multipleOf" === W.kind
            )
              return !0;
            "min" === W.kind
              ? (null === x || W.value > x) && (x = W.value)
              : "max" === W.kind &&
                (null === s || W.value < s) &&
                (s = W.value);
          }
          return Number.isFinite(x) && Number.isFinite(s);
        }
      };
      ZodNumber.create = (s) =>
        new ZodNumber({
          checks: [],
          typeName: es.ZodNumber,
          coerce: (null == s ? void 0 : s.coerce) || !1,
          ...processCreateParams(s),
        });
      let ZodBigInt = class ZodBigInt extends ZodType {
        constructor() {
          super(...arguments), (this.min = this.gte), (this.max = this.lte);
        }
        _parse(s) {
          let x;
          this._def.coerce && (s.data = BigInt(s.data));
          let W = this._getType(s);
          if (W !== eb.bigint) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.bigint,
                received: x.parsedType,
              }),
              e_
            );
          }
          let X = new ParseStatus();
          for (let W of this._def.checks)
            if ("min" === W.kind) {
              let ee = W.inclusive ? s.data < W.value : s.data <= W.value;
              ee &&
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.too_small,
                  type: "bigint",
                  minimum: W.value,
                  inclusive: W.inclusive,
                  message: W.message,
                }),
                X.dirty());
            } else if ("max" === W.kind) {
              let ee = W.inclusive ? s.data > W.value : s.data >= W.value;
              ee &&
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.too_big,
                  type: "bigint",
                  maximum: W.value,
                  inclusive: W.inclusive,
                  message: W.message,
                }),
                X.dirty());
            } else
              "multipleOf" === W.kind
                ? s.data % W.value !== BigInt(0) &&
                  (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                    code: ev.not_multiple_of,
                    multipleOf: W.value,
                    message: W.message,
                  }),
                  X.dirty())
                : ei.assertNever(W);
          return { status: X.value, value: s.data };
        }
        gte(s, x) {
          return this.setLimit("min", s, !0, ea.toString(x));
        }
        gt(s, x) {
          return this.setLimit("min", s, !1, ea.toString(x));
        }
        lte(s, x) {
          return this.setLimit("max", s, !0, ea.toString(x));
        }
        lt(s, x) {
          return this.setLimit("max", s, !1, ea.toString(x));
        }
        setLimit(s, x, W, X) {
          return new ZodBigInt({
            ...this._def,
            checks: [
              ...this._def.checks,
              { kind: s, value: x, inclusive: W, message: ea.toString(X) },
            ],
          });
        }
        _addCheck(s) {
          return new ZodBigInt({
            ...this._def,
            checks: [...this._def.checks, s],
          });
        }
        positive(s) {
          return this._addCheck({
            kind: "min",
            value: BigInt(0),
            inclusive: !1,
            message: ea.toString(s),
          });
        }
        negative(s) {
          return this._addCheck({
            kind: "max",
            value: BigInt(0),
            inclusive: !1,
            message: ea.toString(s),
          });
        }
        nonpositive(s) {
          return this._addCheck({
            kind: "max",
            value: BigInt(0),
            inclusive: !0,
            message: ea.toString(s),
          });
        }
        nonnegative(s) {
          return this._addCheck({
            kind: "min",
            value: BigInt(0),
            inclusive: !0,
            message: ea.toString(s),
          });
        }
        multipleOf(s, x) {
          return this._addCheck({
            kind: "multipleOf",
            value: s,
            message: ea.toString(x),
          });
        }
        get minValue() {
          let s = null;
          for (let x of this._def.checks)
            "min" === x.kind && (null === s || x.value > s) && (s = x.value);
          return s;
        }
        get maxValue() {
          let s = null;
          for (let x of this._def.checks)
            "max" === x.kind && (null === s || x.value < s) && (s = x.value);
          return s;
        }
      };
      ZodBigInt.create = (s) => {
        var x;
        return new ZodBigInt({
          checks: [],
          typeName: es.ZodBigInt,
          coerce:
            null !== (x = null == s ? void 0 : s.coerce) && void 0 !== x && x,
          ...processCreateParams(s),
        });
      };
      let ZodBoolean = class ZodBoolean extends ZodType {
        _parse(s) {
          this._def.coerce && (s.data = !!s.data);
          let x = this._getType(s);
          if (x !== eb.boolean) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.boolean,
                received: x.parsedType,
              }),
              e_
            );
          }
          return OK(s.data);
        }
      };
      ZodBoolean.create = (s) =>
        new ZodBoolean({
          typeName: es.ZodBoolean,
          coerce: (null == s ? void 0 : s.coerce) || !1,
          ...processCreateParams(s),
        });
      let ZodDate = class ZodDate extends ZodType {
        _parse(s) {
          let x;
          this._def.coerce && (s.data = new Date(s.data));
          let W = this._getType(s);
          if (W !== eb.date) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.date,
                received: x.parsedType,
              }),
              e_
            );
          }
          if (isNaN(s.data.getTime())) {
            let x = this._getOrReturnCtx(s);
            return addIssueToContext(x, { code: ev.invalid_date }), e_;
          }
          let X = new ParseStatus();
          for (let W of this._def.checks)
            "min" === W.kind
              ? s.data.getTime() < W.value &&
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.too_small,
                  message: W.message,
                  inclusive: !0,
                  exact: !1,
                  minimum: W.value,
                  type: "date",
                }),
                X.dirty())
              : "max" === W.kind
              ? s.data.getTime() > W.value &&
                (addIssueToContext((x = this._getOrReturnCtx(s, x)), {
                  code: ev.too_big,
                  message: W.message,
                  inclusive: !0,
                  exact: !1,
                  maximum: W.value,
                  type: "date",
                }),
                X.dirty())
              : ei.assertNever(W);
          return { status: X.value, value: new Date(s.data.getTime()) };
        }
        _addCheck(s) {
          return new ZodDate({
            ...this._def,
            checks: [...this._def.checks, s],
          });
        }
        min(s, x) {
          return this._addCheck({
            kind: "min",
            value: s.getTime(),
            message: ea.toString(x),
          });
        }
        max(s, x) {
          return this._addCheck({
            kind: "max",
            value: s.getTime(),
            message: ea.toString(x),
          });
        }
        get minDate() {
          let s = null;
          for (let x of this._def.checks)
            "min" === x.kind && (null === s || x.value > s) && (s = x.value);
          return null != s ? new Date(s) : null;
        }
        get maxDate() {
          let s = null;
          for (let x of this._def.checks)
            "max" === x.kind && (null === s || x.value < s) && (s = x.value);
          return null != s ? new Date(s) : null;
        }
      };
      ZodDate.create = (s) =>
        new ZodDate({
          checks: [],
          coerce: (null == s ? void 0 : s.coerce) || !1,
          typeName: es.ZodDate,
          ...processCreateParams(s),
        });
      let ZodSymbol = class ZodSymbol extends ZodType {
        _parse(s) {
          let x = this._getType(s);
          if (x !== eb.symbol) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.symbol,
                received: x.parsedType,
              }),
              e_
            );
          }
          return OK(s.data);
        }
      };
      ZodSymbol.create = (s) =>
        new ZodSymbol({ typeName: es.ZodSymbol, ...processCreateParams(s) });
      let ZodUndefined = class ZodUndefined extends ZodType {
        _parse(s) {
          let x = this._getType(s);
          if (x !== eb.undefined) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.undefined,
                received: x.parsedType,
              }),
              e_
            );
          }
          return OK(s.data);
        }
      };
      ZodUndefined.create = (s) =>
        new ZodUndefined({
          typeName: es.ZodUndefined,
          ...processCreateParams(s),
        });
      let ZodNull = class ZodNull extends ZodType {
        _parse(s) {
          let x = this._getType(s);
          if (x !== eb.null) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.null,
                received: x.parsedType,
              }),
              e_
            );
          }
          return OK(s.data);
        }
      };
      ZodNull.create = (s) =>
        new ZodNull({ typeName: es.ZodNull, ...processCreateParams(s) });
      let ZodAny = class ZodAny extends ZodType {
        constructor() {
          super(...arguments), (this._any = !0);
        }
        _parse(s) {
          return OK(s.data);
        }
      };
      ZodAny.create = (s) =>
        new ZodAny({ typeName: es.ZodAny, ...processCreateParams(s) });
      let ZodUnknown = class ZodUnknown extends ZodType {
        constructor() {
          super(...arguments), (this._unknown = !0);
        }
        _parse(s) {
          return OK(s.data);
        }
      };
      ZodUnknown.create = (s) =>
        new ZodUnknown({ typeName: es.ZodUnknown, ...processCreateParams(s) });
      let ZodNever = class ZodNever extends ZodType {
        _parse(s) {
          let x = this._getOrReturnCtx(s);
          return (
            addIssueToContext(x, {
              code: ev.invalid_type,
              expected: eb.never,
              received: x.parsedType,
            }),
            e_
          );
        }
      };
      ZodNever.create = (s) =>
        new ZodNever({ typeName: es.ZodNever, ...processCreateParams(s) });
      let ZodVoid = class ZodVoid extends ZodType {
        _parse(s) {
          let x = this._getType(s);
          if (x !== eb.undefined) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.void,
                received: x.parsedType,
              }),
              e_
            );
          }
          return OK(s.data);
        }
      };
      ZodVoid.create = (s) =>
        new ZodVoid({ typeName: es.ZodVoid, ...processCreateParams(s) });
      let ZodArray = class ZodArray extends ZodType {
        _parse(s) {
          let { ctx: x, status: W } = this._processInputParams(s),
            X = this._def;
          if (x.parsedType !== eb.array)
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.array,
                received: x.parsedType,
              }),
              e_
            );
          if (null !== X.exactLength) {
            let s = x.data.length > X.exactLength.value,
              ee = x.data.length < X.exactLength.value;
            (s || ee) &&
              (addIssueToContext(x, {
                code: s ? ev.too_big : ev.too_small,
                minimum: ee ? X.exactLength.value : void 0,
                maximum: s ? X.exactLength.value : void 0,
                type: "array",
                inclusive: !0,
                exact: !0,
                message: X.exactLength.message,
              }),
              W.dirty());
          }
          if (
            (null !== X.minLength &&
              x.data.length < X.minLength.value &&
              (addIssueToContext(x, {
                code: ev.too_small,
                minimum: X.minLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: X.minLength.message,
              }),
              W.dirty()),
            null !== X.maxLength &&
              x.data.length > X.maxLength.value &&
              (addIssueToContext(x, {
                code: ev.too_big,
                maximum: X.maxLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: X.maxLength.message,
              }),
              W.dirty()),
            x.common.async)
          )
            return Promise.all(
              [...x.data].map((s, W) =>
                X.type._parseAsync(new ParseInputLazyPath(x, s, x.path, W))
              )
            ).then((s) => ParseStatus.mergeArray(W, s));
          let ee = [...x.data].map((s, W) =>
            X.type._parseSync(new ParseInputLazyPath(x, s, x.path, W))
          );
          return ParseStatus.mergeArray(W, ee);
        }
        get element() {
          return this._def.type;
        }
        min(s, x) {
          return new ZodArray({
            ...this._def,
            minLength: { value: s, message: ea.toString(x) },
          });
        }
        max(s, x) {
          return new ZodArray({
            ...this._def,
            maxLength: { value: s, message: ea.toString(x) },
          });
        }
        length(s, x) {
          return new ZodArray({
            ...this._def,
            exactLength: { value: s, message: ea.toString(x) },
          });
        }
        nonempty(s) {
          return this.min(1, s);
        }
      };
      ZodArray.create = (s, x) =>
        new ZodArray({
          type: s,
          minLength: null,
          maxLength: null,
          exactLength: null,
          typeName: es.ZodArray,
          ...processCreateParams(x),
        });
      let ZodObject = class ZodObject extends ZodType {
        constructor() {
          super(...arguments),
            (this._cached = null),
            (this.nonstrict = this.passthrough),
            (this.augment = this.extend);
        }
        _getCached() {
          if (null !== this._cached) return this._cached;
          let s = this._def.shape(),
            x = ei.objectKeys(s);
          return (this._cached = { shape: s, keys: x });
        }
        _parse(s) {
          let x = this._getType(s);
          if (x !== eb.object) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.object,
                received: x.parsedType,
              }),
              e_
            );
          }
          let { status: W, ctx: X } = this._processInputParams(s),
            { shape: ee, keys: et } = this._getCached(),
            er = [];
          if (
            !(
              this._def.catchall instanceof ZodNever &&
              "strip" === this._def.unknownKeys
            )
          )
            for (let s in X.data) et.includes(s) || er.push(s);
          let ei = [];
          for (let s of et) {
            let x = ee[s],
              W = X.data[s];
            ei.push({
              key: { status: "valid", value: s },
              value: x._parse(new ParseInputLazyPath(X, W, X.path, s)),
              alwaysSet: s in X.data,
            });
          }
          if (this._def.catchall instanceof ZodNever) {
            let s = this._def.unknownKeys;
            if ("passthrough" === s)
              for (let s of er)
                ei.push({
                  key: { status: "valid", value: s },
                  value: { status: "valid", value: X.data[s] },
                });
            else if ("strict" === s)
              er.length > 0 &&
                (addIssueToContext(X, { code: ev.unrecognized_keys, keys: er }),
                W.dirty());
            else if ("strip" === s);
            else
              throw Error(
                "Internal ZodObject error: invalid unknownKeys value."
              );
          } else {
            let s = this._def.catchall;
            for (let x of er) {
              let W = X.data[x];
              ei.push({
                key: { status: "valid", value: x },
                value: s._parse(new ParseInputLazyPath(X, W, X.path, x)),
                alwaysSet: x in X.data,
              });
            }
          }
          return X.common.async
            ? Promise.resolve()
                .then(async () => {
                  let s = [];
                  for (let x of ei) {
                    let W = await x.key;
                    s.push({
                      key: W,
                      value: await x.value,
                      alwaysSet: x.alwaysSet,
                    });
                  }
                  return s;
                })
                .then((s) => ParseStatus.mergeObjectSync(W, s))
            : ParseStatus.mergeObjectSync(W, ei);
        }
        get shape() {
          return this._def.shape();
        }
        strict(s) {
          return (
            ea.errToObj,
            new ZodObject({
              ...this._def,
              unknownKeys: "strict",
              ...(void 0 !== s
                ? {
                    errorMap: (x, W) => {
                      var X, ee, et, er;
                      let ei =
                        null !==
                          (et =
                            null === (ee = (X = this._def).errorMap) ||
                            void 0 === ee
                              ? void 0
                              : ee.call(X, x, W).message) && void 0 !== et
                          ? et
                          : W.defaultError;
                      return "unrecognized_keys" === x.code
                        ? {
                            message:
                              null !== (er = ea.errToObj(s).message) &&
                              void 0 !== er
                                ? er
                                : ei,
                          }
                        : { message: ei };
                    },
                  }
                : {}),
            })
          );
        }
        strip() {
          return new ZodObject({ ...this._def, unknownKeys: "strip" });
        }
        passthrough() {
          return new ZodObject({ ...this._def, unknownKeys: "passthrough" });
        }
        extend(s) {
          return new ZodObject({
            ...this._def,
            shape: () => ({ ...this._def.shape(), ...s }),
          });
        }
        merge(s) {
          let x = new ZodObject({
            unknownKeys: s._def.unknownKeys,
            catchall: s._def.catchall,
            shape: () => ({ ...this._def.shape(), ...s._def.shape() }),
            typeName: es.ZodObject,
          });
          return x;
        }
        setKey(s, x) {
          return this.augment({ [s]: x });
        }
        catchall(s) {
          return new ZodObject({ ...this._def, catchall: s });
        }
        pick(s) {
          let x = {};
          return (
            ei.objectKeys(s).forEach((W) => {
              s[W] && this.shape[W] && (x[W] = this.shape[W]);
            }),
            new ZodObject({ ...this._def, shape: () => x })
          );
        }
        omit(s) {
          let x = {};
          return (
            ei.objectKeys(this.shape).forEach((W) => {
              s[W] || (x[W] = this.shape[W]);
            }),
            new ZodObject({ ...this._def, shape: () => x })
          );
        }
        deepPartial() {
          return (function deepPartialify(s) {
            if (s instanceof ZodObject) {
              let x = {};
              for (let W in s.shape) {
                let X = s.shape[W];
                x[W] = ZodOptional.create(deepPartialify(X));
              }
              return new ZodObject({ ...s._def, shape: () => x });
            }
            return s instanceof ZodArray
              ? new ZodArray({ ...s._def, type: deepPartialify(s.element) })
              : s instanceof ZodOptional
              ? ZodOptional.create(deepPartialify(s.unwrap()))
              : s instanceof ZodNullable
              ? ZodNullable.create(deepPartialify(s.unwrap()))
              : s instanceof ZodTuple
              ? ZodTuple.create(s.items.map((s) => deepPartialify(s)))
              : s;
          })(this);
        }
        partial(s) {
          let x = {};
          return (
            ei.objectKeys(this.shape).forEach((W) => {
              let X = this.shape[W];
              s && !s[W] ? (x[W] = X) : (x[W] = X.optional());
            }),
            new ZodObject({ ...this._def, shape: () => x })
          );
        }
        required(s) {
          let x = {};
          return (
            ei.objectKeys(this.shape).forEach((W) => {
              if (s && !s[W]) x[W] = this.shape[W];
              else {
                let s = this.shape[W],
                  X = s;
                for (; X instanceof ZodOptional; ) X = X._def.innerType;
                x[W] = X;
              }
            }),
            new ZodObject({ ...this._def, shape: () => x })
          );
        }
        keyof() {
          return createZodEnum(ei.objectKeys(this.shape));
        }
      };
      (ZodObject.create = (s, x) =>
        new ZodObject({
          shape: () => s,
          unknownKeys: "strip",
          catchall: ZodNever.create(),
          typeName: es.ZodObject,
          ...processCreateParams(x),
        })),
        (ZodObject.strictCreate = (s, x) =>
          new ZodObject({
            shape: () => s,
            unknownKeys: "strict",
            catchall: ZodNever.create(),
            typeName: es.ZodObject,
            ...processCreateParams(x),
          })),
        (ZodObject.lazycreate = (s, x) =>
          new ZodObject({
            shape: s,
            unknownKeys: "strip",
            catchall: ZodNever.create(),
            typeName: es.ZodObject,
            ...processCreateParams(x),
          }));
      let ZodUnion = class ZodUnion extends ZodType {
        _parse(s) {
          let { ctx: x } = this._processInputParams(s),
            W = this._def.options;
          if (x.common.async)
            return Promise.all(
              W.map(async (s) => {
                let W = {
                  ...x,
                  common: { ...x.common, issues: [] },
                  parent: null,
                };
                return {
                  result: await s._parseAsync({
                    data: x.data,
                    path: x.path,
                    parent: W,
                  }),
                  ctx: W,
                };
              })
            ).then(function (s) {
              for (let x of s) if ("valid" === x.result.status) return x.result;
              for (let W of s)
                if ("dirty" === W.result.status)
                  return x.common.issues.push(...W.ctx.common.issues), W.result;
              let W = s.map((s) => new ZodError(s.ctx.common.issues));
              return (
                addIssueToContext(x, {
                  code: ev.invalid_union,
                  unionErrors: W,
                }),
                e_
              );
            });
          {
            let s;
            let X = [];
            for (let ee of W) {
              let W = {
                  ...x,
                  common: { ...x.common, issues: [] },
                  parent: null,
                },
                et = ee._parseSync({ data: x.data, path: x.path, parent: W });
              if ("valid" === et.status) return et;
              "dirty" !== et.status || s || (s = { result: et, ctx: W }),
                W.common.issues.length && X.push(W.common.issues);
            }
            if (s)
              return x.common.issues.push(...s.ctx.common.issues), s.result;
            let ee = X.map((s) => new ZodError(s));
            return (
              addIssueToContext(x, { code: ev.invalid_union, unionErrors: ee }),
              e_
            );
          }
        }
        get options() {
          return this._def.options;
        }
      };
      ZodUnion.create = (s, x) =>
        new ZodUnion({
          options: s,
          typeName: es.ZodUnion,
          ...processCreateParams(x),
        });
      let getDiscriminator = (s) => {
        if (s instanceof ZodLazy) return getDiscriminator(s.schema);
        if (s instanceof ZodEffects) return getDiscriminator(s.innerType());
        if (s instanceof ZodLiteral) return [s.value];
        if (s instanceof ZodEnum) return s.options;
        if (s instanceof ZodNativeEnum) return Object.keys(s.enum);
        if (s instanceof ZodDefault) return getDiscriminator(s._def.innerType);
        if (s instanceof ZodUndefined) return [void 0];
        else if (s instanceof ZodNull) return [null];
        else return null;
      };
      let ZodDiscriminatedUnion = class ZodDiscriminatedUnion extends ZodType {
        _parse(s) {
          let { ctx: x } = this._processInputParams(s);
          if (x.parsedType !== eb.object)
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.object,
                received: x.parsedType,
              }),
              e_
            );
          let W = this.discriminator,
            X = x.data[W],
            ee = this.optionsMap.get(X);
          return ee
            ? x.common.async
              ? ee._parseAsync({ data: x.data, path: x.path, parent: x })
              : ee._parseSync({ data: x.data, path: x.path, parent: x })
            : (addIssueToContext(x, {
                code: ev.invalid_union_discriminator,
                options: Array.from(this.optionsMap.keys()),
                path: [W],
              }),
              e_);
        }
        get discriminator() {
          return this._def.discriminator;
        }
        get options() {
          return this._def.options;
        }
        get optionsMap() {
          return this._def.optionsMap;
        }
        static create(s, x, W) {
          let X = new Map();
          for (let W of x) {
            let x = getDiscriminator(W.shape[s]);
            if (!x)
              throw Error(
                `A discriminator value for key \`${s}\` could not be extracted from all schema options`
              );
            for (let ee of x) {
              if (X.has(ee))
                throw Error(
                  `Discriminator property ${String(
                    s
                  )} has duplicate value ${String(ee)}`
                );
              X.set(ee, W);
            }
          }
          return new ZodDiscriminatedUnion({
            typeName: es.ZodDiscriminatedUnion,
            discriminator: s,
            options: x,
            optionsMap: X,
            ...processCreateParams(W),
          });
        }
      };
      let ZodIntersection = class ZodIntersection extends ZodType {
        _parse(s) {
          let { status: x, ctx: W } = this._processInputParams(s),
            handleParsed = (s, X) => {
              if (isAborted(s) || isAborted(X)) return e_;
              let ee = (function mergeValues(s, x) {
                let W = getParsedType(s),
                  X = getParsedType(x);
                if (s === x) return { valid: !0, data: s };
                if (W === eb.object && X === eb.object) {
                  let W = ei.objectKeys(x),
                    X = ei.objectKeys(s).filter((s) => -1 !== W.indexOf(s)),
                    ee = { ...s, ...x };
                  for (let W of X) {
                    let X = mergeValues(s[W], x[W]);
                    if (!X.valid) return { valid: !1 };
                    ee[W] = X.data;
                  }
                  return { valid: !0, data: ee };
                }
                if (W === eb.array && X === eb.array) {
                  if (s.length !== x.length) return { valid: !1 };
                  let W = [];
                  for (let X = 0; X < s.length; X++) {
                    let ee = s[X],
                      et = x[X],
                      er = mergeValues(ee, et);
                    if (!er.valid) return { valid: !1 };
                    W.push(er.data);
                  }
                  return { valid: !0, data: W };
                }
                return W === eb.date && X === eb.date && +s == +x
                  ? { valid: !0, data: s }
                  : { valid: !1 };
              })(s.value, X.value);
              return ee.valid
                ? ((isDirty(s) || isDirty(X)) && x.dirty(),
                  { status: x.value, value: ee.data })
                : (addIssueToContext(W, {
                    code: ev.invalid_intersection_types,
                  }),
                  e_);
            };
          return W.common.async
            ? Promise.all([
                this._def.left._parseAsync({
                  data: W.data,
                  path: W.path,
                  parent: W,
                }),
                this._def.right._parseAsync({
                  data: W.data,
                  path: W.path,
                  parent: W,
                }),
              ]).then(([s, x]) => handleParsed(s, x))
            : handleParsed(
                this._def.left._parseSync({
                  data: W.data,
                  path: W.path,
                  parent: W,
                }),
                this._def.right._parseSync({
                  data: W.data,
                  path: W.path,
                  parent: W,
                })
              );
        }
      };
      ZodIntersection.create = (s, x, W) =>
        new ZodIntersection({
          left: s,
          right: x,
          typeName: es.ZodIntersection,
          ...processCreateParams(W),
        });
      let ZodTuple = class ZodTuple extends ZodType {
        _parse(s) {
          let { status: x, ctx: W } = this._processInputParams(s);
          if (W.parsedType !== eb.array)
            return (
              addIssueToContext(W, {
                code: ev.invalid_type,
                expected: eb.array,
                received: W.parsedType,
              }),
              e_
            );
          if (W.data.length < this._def.items.length)
            return (
              addIssueToContext(W, {
                code: ev.too_small,
                minimum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array",
              }),
              e_
            );
          let X = this._def.rest;
          !X &&
            W.data.length > this._def.items.length &&
            (addIssueToContext(W, {
              code: ev.too_big,
              maximum: this._def.items.length,
              inclusive: !0,
              exact: !1,
              type: "array",
            }),
            x.dirty());
          let ee = [...W.data]
            .map((s, x) => {
              let X = this._def.items[x] || this._def.rest;
              return X
                ? X._parse(new ParseInputLazyPath(W, s, W.path, x))
                : null;
            })
            .filter((s) => !!s);
          return W.common.async
            ? Promise.all(ee).then((s) => ParseStatus.mergeArray(x, s))
            : ParseStatus.mergeArray(x, ee);
        }
        get items() {
          return this._def.items;
        }
        rest(s) {
          return new ZodTuple({ ...this._def, rest: s });
        }
      };
      ZodTuple.create = (s, x) => {
        if (!Array.isArray(s))
          throw Error("You must pass an array of schemas to z.tuple([ ... ])");
        return new ZodTuple({
          items: s,
          typeName: es.ZodTuple,
          rest: null,
          ...processCreateParams(x),
        });
      };
      let ZodRecord = class ZodRecord extends ZodType {
        get keySchema() {
          return this._def.keyType;
        }
        get valueSchema() {
          return this._def.valueType;
        }
        _parse(s) {
          let { status: x, ctx: W } = this._processInputParams(s);
          if (W.parsedType !== eb.object)
            return (
              addIssueToContext(W, {
                code: ev.invalid_type,
                expected: eb.object,
                received: W.parsedType,
              }),
              e_
            );
          let X = [],
            ee = this._def.keyType,
            et = this._def.valueType;
          for (let s in W.data)
            X.push({
              key: ee._parse(new ParseInputLazyPath(W, s, W.path, s)),
              value: et._parse(new ParseInputLazyPath(W, W.data[s], W.path, s)),
            });
          return W.common.async
            ? ParseStatus.mergeObjectAsync(x, X)
            : ParseStatus.mergeObjectSync(x, X);
        }
        get element() {
          return this._def.valueType;
        }
        static create(s, x, W) {
          return new ZodRecord(
            x instanceof ZodType
              ? {
                  keyType: s,
                  valueType: x,
                  typeName: es.ZodRecord,
                  ...processCreateParams(W),
                }
              : {
                  keyType: ZodString.create(),
                  valueType: s,
                  typeName: es.ZodRecord,
                  ...processCreateParams(x),
                }
          );
        }
      };
      let ZodMap = class ZodMap extends ZodType {
        get keySchema() {
          return this._def.keyType;
        }
        get valueSchema() {
          return this._def.valueType;
        }
        _parse(s) {
          let { status: x, ctx: W } = this._processInputParams(s);
          if (W.parsedType !== eb.map)
            return (
              addIssueToContext(W, {
                code: ev.invalid_type,
                expected: eb.map,
                received: W.parsedType,
              }),
              e_
            );
          let X = this._def.keyType,
            ee = this._def.valueType,
            et = [...W.data.entries()].map(([s, x], et) => ({
              key: X._parse(new ParseInputLazyPath(W, s, W.path, [et, "key"])),
              value: ee._parse(
                new ParseInputLazyPath(W, x, W.path, [et, "value"])
              ),
            }));
          if (W.common.async) {
            let s = new Map();
            return Promise.resolve().then(async () => {
              for (let W of et) {
                let X = await W.key,
                  ee = await W.value;
                if ("aborted" === X.status || "aborted" === ee.status)
                  return e_;
                ("dirty" === X.status || "dirty" === ee.status) && x.dirty(),
                  s.set(X.value, ee.value);
              }
              return { status: x.value, value: s };
            });
          }
          {
            let s = new Map();
            for (let W of et) {
              let X = W.key,
                ee = W.value;
              if ("aborted" === X.status || "aborted" === ee.status) return e_;
              ("dirty" === X.status || "dirty" === ee.status) && x.dirty(),
                s.set(X.value, ee.value);
            }
            return { status: x.value, value: s };
          }
        }
      };
      ZodMap.create = (s, x, W) =>
        new ZodMap({
          valueType: x,
          keyType: s,
          typeName: es.ZodMap,
          ...processCreateParams(W),
        });
      let ZodSet = class ZodSet extends ZodType {
        _parse(s) {
          let { status: x, ctx: W } = this._processInputParams(s);
          if (W.parsedType !== eb.set)
            return (
              addIssueToContext(W, {
                code: ev.invalid_type,
                expected: eb.set,
                received: W.parsedType,
              }),
              e_
            );
          let X = this._def;
          null !== X.minSize &&
            W.data.size < X.minSize.value &&
            (addIssueToContext(W, {
              code: ev.too_small,
              minimum: X.minSize.value,
              type: "set",
              inclusive: !0,
              exact: !1,
              message: X.minSize.message,
            }),
            x.dirty()),
            null !== X.maxSize &&
              W.data.size > X.maxSize.value &&
              (addIssueToContext(W, {
                code: ev.too_big,
                maximum: X.maxSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: X.maxSize.message,
              }),
              x.dirty());
          let ee = this._def.valueType;
          function finalizeSet(s) {
            let W = new Set();
            for (let X of s) {
              if ("aborted" === X.status) return e_;
              "dirty" === X.status && x.dirty(), W.add(X.value);
            }
            return { status: x.value, value: W };
          }
          let et = [...W.data.values()].map((s, x) =>
            ee._parse(new ParseInputLazyPath(W, s, W.path, x))
          );
          return W.common.async
            ? Promise.all(et).then((s) => finalizeSet(s))
            : finalizeSet(et);
        }
        min(s, x) {
          return new ZodSet({
            ...this._def,
            minSize: { value: s, message: ea.toString(x) },
          });
        }
        max(s, x) {
          return new ZodSet({
            ...this._def,
            maxSize: { value: s, message: ea.toString(x) },
          });
        }
        size(s, x) {
          return this.min(s, x).max(s, x);
        }
        nonempty(s) {
          return this.min(1, s);
        }
      };
      ZodSet.create = (s, x) =>
        new ZodSet({
          valueType: s,
          minSize: null,
          maxSize: null,
          typeName: es.ZodSet,
          ...processCreateParams(x),
        });
      let ZodFunction = class ZodFunction extends ZodType {
        constructor() {
          super(...arguments), (this.validate = this.implement);
        }
        _parse(s) {
          let { ctx: x } = this._processInputParams(s);
          if (x.parsedType !== eb.function)
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.function,
                received: x.parsedType,
              }),
              e_
            );
          function makeArgsIssue(s, W) {
            return makeIssue({
              data: s,
              path: x.path,
              errorMaps: [
                x.common.contextualErrorMap,
                x.schemaErrorMap,
                getErrorMap(),
                errorMap,
              ].filter((s) => !!s),
              issueData: { code: ev.invalid_arguments, argumentsError: W },
            });
          }
          function makeReturnsIssue(s, W) {
            return makeIssue({
              data: s,
              path: x.path,
              errorMaps: [
                x.common.contextualErrorMap,
                x.schemaErrorMap,
                getErrorMap(),
                errorMap,
              ].filter((s) => !!s),
              issueData: { code: ev.invalid_return_type, returnTypeError: W },
            });
          }
          let W = { errorMap: x.common.contextualErrorMap },
            X = x.data;
          if (this._def.returns instanceof ZodPromise) {
            let s = this;
            return OK(async function (...x) {
              let ee = new ZodError([]),
                et = await s._def.args.parseAsync(x, W).catch((s) => {
                  throw (ee.addIssue(makeArgsIssue(x, s)), ee);
                }),
                er = await Reflect.apply(X, this, et),
                ei = await s._def.returns._def.type
                  .parseAsync(er, W)
                  .catch((s) => {
                    throw (ee.addIssue(makeReturnsIssue(er, s)), ee);
                  });
              return ei;
            });
          }
          {
            let s = this;
            return OK(function (...x) {
              let ee = s._def.args.safeParse(x, W);
              if (!ee.success) throw new ZodError([makeArgsIssue(x, ee.error)]);
              let et = Reflect.apply(X, this, ee.data),
                er = s._def.returns.safeParse(et, W);
              if (!er.success)
                throw new ZodError([makeReturnsIssue(et, er.error)]);
              return er.data;
            });
          }
        }
        parameters() {
          return this._def.args;
        }
        returnType() {
          return this._def.returns;
        }
        args(...s) {
          return new ZodFunction({
            ...this._def,
            args: ZodTuple.create(s).rest(ZodUnknown.create()),
          });
        }
        returns(s) {
          return new ZodFunction({ ...this._def, returns: s });
        }
        implement(s) {
          let x = this.parse(s);
          return x;
        }
        strictImplement(s) {
          let x = this.parse(s);
          return x;
        }
        static create(s, x, W) {
          return new ZodFunction({
            args: s || ZodTuple.create([]).rest(ZodUnknown.create()),
            returns: x || ZodUnknown.create(),
            typeName: es.ZodFunction,
            ...processCreateParams(W),
          });
        }
      };
      let ZodLazy = class ZodLazy extends ZodType {
        get schema() {
          return this._def.getter();
        }
        _parse(s) {
          let { ctx: x } = this._processInputParams(s),
            W = this._def.getter();
          return W._parse({ data: x.data, path: x.path, parent: x });
        }
      };
      ZodLazy.create = (s, x) =>
        new ZodLazy({
          getter: s,
          typeName: es.ZodLazy,
          ...processCreateParams(x),
        });
      let ZodLiteral = class ZodLiteral extends ZodType {
        _parse(s) {
          if (s.data !== this._def.value) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                received: x.data,
                code: ev.invalid_literal,
                expected: this._def.value,
              }),
              e_
            );
          }
          return { status: "valid", value: s.data };
        }
        get value() {
          return this._def.value;
        }
      };
      function createZodEnum(s, x) {
        return new ZodEnum({
          values: s,
          typeName: es.ZodEnum,
          ...processCreateParams(x),
        });
      }
      ZodLiteral.create = (s, x) =>
        new ZodLiteral({
          value: s,
          typeName: es.ZodLiteral,
          ...processCreateParams(x),
        });
      let ZodEnum = class ZodEnum extends ZodType {
        _parse(s) {
          if ("string" != typeof s.data) {
            let x = this._getOrReturnCtx(s),
              W = this._def.values;
            return (
              addIssueToContext(x, {
                expected: ei.joinValues(W),
                received: x.parsedType,
                code: ev.invalid_type,
              }),
              e_
            );
          }
          if (-1 === this._def.values.indexOf(s.data)) {
            let x = this._getOrReturnCtx(s),
              W = this._def.values;
            return (
              addIssueToContext(x, {
                received: x.data,
                code: ev.invalid_enum_value,
                options: W,
              }),
              e_
            );
          }
          return OK(s.data);
        }
        get options() {
          return this._def.values;
        }
        get enum() {
          let s = {};
          for (let x of this._def.values) s[x] = x;
          return s;
        }
        get Values() {
          let s = {};
          for (let x of this._def.values) s[x] = x;
          return s;
        }
        get Enum() {
          let s = {};
          for (let x of this._def.values) s[x] = x;
          return s;
        }
        extract(s) {
          return ZodEnum.create(s);
        }
        exclude(s) {
          return ZodEnum.create(this.options.filter((x) => !s.includes(x)));
        }
      };
      ZodEnum.create = createZodEnum;
      let ZodNativeEnum = class ZodNativeEnum extends ZodType {
        _parse(s) {
          let x = ei.getValidEnumValues(this._def.values),
            W = this._getOrReturnCtx(s);
          if (W.parsedType !== eb.string && W.parsedType !== eb.number) {
            let s = ei.objectValues(x);
            return (
              addIssueToContext(W, {
                expected: ei.joinValues(s),
                received: W.parsedType,
                code: ev.invalid_type,
              }),
              e_
            );
          }
          if (-1 === x.indexOf(s.data)) {
            let s = ei.objectValues(x);
            return (
              addIssueToContext(W, {
                received: W.data,
                code: ev.invalid_enum_value,
                options: s,
              }),
              e_
            );
          }
          return OK(s.data);
        }
        get enum() {
          return this._def.values;
        }
      };
      ZodNativeEnum.create = (s, x) =>
        new ZodNativeEnum({
          values: s,
          typeName: es.ZodNativeEnum,
          ...processCreateParams(x),
        });
      let ZodPromise = class ZodPromise extends ZodType {
        unwrap() {
          return this._def.type;
        }
        _parse(s) {
          let { ctx: x } = this._processInputParams(s);
          if (x.parsedType !== eb.promise && !1 === x.common.async)
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.promise,
                received: x.parsedType,
              }),
              e_
            );
          let W =
            x.parsedType === eb.promise ? x.data : Promise.resolve(x.data);
          return OK(
            W.then((s) =>
              this._def.type.parseAsync(s, {
                path: x.path,
                errorMap: x.common.contextualErrorMap,
              })
            )
          );
        }
      };
      ZodPromise.create = (s, x) =>
        new ZodPromise({
          type: s,
          typeName: es.ZodPromise,
          ...processCreateParams(x),
        });
      let ZodEffects = class ZodEffects extends ZodType {
        innerType() {
          return this._def.schema;
        }
        sourceType() {
          return this._def.schema._def.typeName === es.ZodEffects
            ? this._def.schema.sourceType()
            : this._def.schema;
        }
        _parse(s) {
          let { status: x, ctx: W } = this._processInputParams(s),
            X = this._def.effect || null,
            ee = {
              addIssue: (s) => {
                addIssueToContext(W, s), s.fatal ? x.abort() : x.dirty();
              },
              get path() {
                return W.path;
              },
            };
          if (((ee.addIssue = ee.addIssue.bind(ee)), "preprocess" === X.type)) {
            let s = X.transform(W.data, ee);
            return W.common.issues.length
              ? { status: "dirty", value: W.data }
              : W.common.async
              ? Promise.resolve(s).then((s) =>
                  this._def.schema._parseAsync({
                    data: s,
                    path: W.path,
                    parent: W,
                  })
                )
              : this._def.schema._parseSync({
                  data: s,
                  path: W.path,
                  parent: W,
                });
          }
          if ("refinement" === X.type) {
            let executeRefinement = (s) => {
              let x = X.refinement(s, ee);
              if (W.common.async) return Promise.resolve(x);
              if (x instanceof Promise)
                throw Error(
                  "Async refinement encountered during synchronous parse operation. Use .parseAsync instead."
                );
              return s;
            };
            if (!1 !== W.common.async)
              return this._def.schema
                ._parseAsync({ data: W.data, path: W.path, parent: W })
                .then((s) =>
                  "aborted" === s.status
                    ? e_
                    : ("dirty" === s.status && x.dirty(),
                      executeRefinement(s.value).then(() => ({
                        status: x.value,
                        value: s.value,
                      })))
                );
            {
              let s = this._def.schema._parseSync({
                data: W.data,
                path: W.path,
                parent: W,
              });
              return "aborted" === s.status
                ? e_
                : ("dirty" === s.status && x.dirty(),
                  executeRefinement(s.value),
                  { status: x.value, value: s.value });
            }
          }
          if ("transform" === X.type) {
            if (!1 !== W.common.async)
              return this._def.schema
                ._parseAsync({ data: W.data, path: W.path, parent: W })
                .then((s) =>
                  isValid(s)
                    ? Promise.resolve(X.transform(s.value, ee)).then((s) => ({
                        status: x.value,
                        value: s,
                      }))
                    : s
                );
            {
              let s = this._def.schema._parseSync({
                data: W.data,
                path: W.path,
                parent: W,
              });
              if (!isValid(s)) return s;
              let et = X.transform(s.value, ee);
              if (et instanceof Promise)
                throw Error(
                  "Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead."
                );
              return { status: x.value, value: et };
            }
          }
          ei.assertNever(X);
        }
      };
      (ZodEffects.create = (s, x, W) =>
        new ZodEffects({
          schema: s,
          typeName: es.ZodEffects,
          effect: x,
          ...processCreateParams(W),
        })),
        (ZodEffects.createWithPreprocess = (s, x, W) =>
          new ZodEffects({
            schema: x,
            effect: { type: "preprocess", transform: s },
            typeName: es.ZodEffects,
            ...processCreateParams(W),
          }));
      let ZodOptional = class ZodOptional extends ZodType {
        _parse(s) {
          let x = this._getType(s);
          return x === eb.undefined
            ? OK(void 0)
            : this._def.innerType._parse(s);
        }
        unwrap() {
          return this._def.innerType;
        }
      };
      ZodOptional.create = (s, x) =>
        new ZodOptional({
          innerType: s,
          typeName: es.ZodOptional,
          ...processCreateParams(x),
        });
      let ZodNullable = class ZodNullable extends ZodType {
        _parse(s) {
          let x = this._getType(s);
          return x === eb.null ? OK(null) : this._def.innerType._parse(s);
        }
        unwrap() {
          return this._def.innerType;
        }
      };
      ZodNullable.create = (s, x) =>
        new ZodNullable({
          innerType: s,
          typeName: es.ZodNullable,
          ...processCreateParams(x),
        });
      let ZodDefault = class ZodDefault extends ZodType {
        _parse(s) {
          let { ctx: x } = this._processInputParams(s),
            W = x.data;
          return (
            x.parsedType === eb.undefined && (W = this._def.defaultValue()),
            this._def.innerType._parse({ data: W, path: x.path, parent: x })
          );
        }
        removeDefault() {
          return this._def.innerType;
        }
      };
      ZodDefault.create = (s, x) =>
        new ZodDefault({
          innerType: s,
          typeName: es.ZodDefault,
          defaultValue:
            "function" == typeof x.default ? x.default : () => x.default,
          ...processCreateParams(x),
        });
      let ZodCatch = class ZodCatch extends ZodType {
        _parse(s) {
          let { ctx: x } = this._processInputParams(s),
            W = { ...x, common: { ...x.common, issues: [] } },
            X = this._def.innerType._parse({
              data: W.data,
              path: W.path,
              parent: { ...W },
            });
          return isAsync(X)
            ? X.then((s) => ({
                status: "valid",
                value:
                  "valid" === s.status
                    ? s.value
                    : this._def.catchValue({
                        get error() {
                          return new ZodError(W.common.issues);
                        },
                        input: W.data,
                      }),
              }))
            : {
                status: "valid",
                value:
                  "valid" === X.status
                    ? X.value
                    : this._def.catchValue({
                        get error() {
                          return new ZodError(W.common.issues);
                        },
                        input: W.data,
                      }),
              };
        }
        removeCatch() {
          return this._def.innerType;
        }
      };
      ZodCatch.create = (s, x) =>
        new ZodCatch({
          innerType: s,
          typeName: es.ZodCatch,
          catchValue: "function" == typeof x.catch ? x.catch : () => x.catch,
          ...processCreateParams(x),
        });
      let ZodNaN = class ZodNaN extends ZodType {
        _parse(s) {
          let x = this._getType(s);
          if (x !== eb.nan) {
            let x = this._getOrReturnCtx(s);
            return (
              addIssueToContext(x, {
                code: ev.invalid_type,
                expected: eb.nan,
                received: x.parsedType,
              }),
              e_
            );
          }
          return { status: "valid", value: s.data };
        }
      };
      ZodNaN.create = (s) =>
        new ZodNaN({ typeName: es.ZodNaN, ...processCreateParams(s) });
      let eI = Symbol("zod_brand");
      let ZodBranded = class ZodBranded extends ZodType {
        _parse(s) {
          let { ctx: x } = this._processInputParams(s),
            W = x.data;
          return this._def.type._parse({ data: W, path: x.path, parent: x });
        }
        unwrap() {
          return this._def.type;
        }
      };
      let ZodPipeline = class ZodPipeline extends ZodType {
        _parse(s) {
          let { status: x, ctx: W } = this._processInputParams(s);
          if (W.common.async) {
            let handleAsync = async () => {
              let s = await this._def.in._parseAsync({
                data: W.data,
                path: W.path,
                parent: W,
              });
              return "aborted" === s.status
                ? e_
                : "dirty" === s.status
                ? (x.dirty(), DIRTY(s.value))
                : this._def.out._parseAsync({
                    data: s.value,
                    path: W.path,
                    parent: W,
                  });
            };
            return handleAsync();
          }
          {
            let s = this._def.in._parseSync({
              data: W.data,
              path: W.path,
              parent: W,
            });
            return "aborted" === s.status
              ? e_
              : "dirty" === s.status
              ? (x.dirty(), { status: "dirty", value: s.value })
              : this._def.out._parseSync({
                  data: s.value,
                  path: W.path,
                  parent: W,
                });
          }
        }
        static create(s, x) {
          return new ZodPipeline({ in: s, out: x, typeName: es.ZodPipeline });
        }
      };
      let ZodReadonly = class ZodReadonly extends ZodType {
        _parse(s) {
          let x = this._def.innerType._parse(s);
          return isValid(x) && (x.value = Object.freeze(x.value)), x;
        }
      };
      ZodReadonly.create = (s, x) =>
        new ZodReadonly({
          innerType: s,
          typeName: es.ZodReadonly,
          ...processCreateParams(x),
        });
      let custom = (s, x = {}, W) =>
          s
            ? ZodAny.create().superRefine((X, ee) => {
                var et, er;
                if (!s(X)) {
                  let s =
                      "function" == typeof x
                        ? x(X)
                        : "string" == typeof x
                        ? { message: x }
                        : x,
                    ei =
                      null ===
                        (er =
                          null !== (et = s.fatal) && void 0 !== et ? et : W) ||
                      void 0 === er ||
                      er,
                    eo = "string" == typeof s ? { message: s } : s;
                  ee.addIssue({ code: "custom", ...eo, fatal: ei });
                }
              })
            : ZodAny.create(),
        eP = { object: ZodObject.lazycreate };
      ((er = es || (es = {})).ZodString = "ZodString"),
        (er.ZodNumber = "ZodNumber"),
        (er.ZodNaN = "ZodNaN"),
        (er.ZodBigInt = "ZodBigInt"),
        (er.ZodBoolean = "ZodBoolean"),
        (er.ZodDate = "ZodDate"),
        (er.ZodSymbol = "ZodSymbol"),
        (er.ZodUndefined = "ZodUndefined"),
        (er.ZodNull = "ZodNull"),
        (er.ZodAny = "ZodAny"),
        (er.ZodUnknown = "ZodUnknown"),
        (er.ZodNever = "ZodNever"),
        (er.ZodVoid = "ZodVoid"),
        (er.ZodArray = "ZodArray"),
        (er.ZodObject = "ZodObject"),
        (er.ZodUnion = "ZodUnion"),
        (er.ZodDiscriminatedUnion = "ZodDiscriminatedUnion"),
        (er.ZodIntersection = "ZodIntersection"),
        (er.ZodTuple = "ZodTuple"),
        (er.ZodRecord = "ZodRecord"),
        (er.ZodMap = "ZodMap"),
        (er.ZodSet = "ZodSet"),
        (er.ZodFunction = "ZodFunction"),
        (er.ZodLazy = "ZodLazy"),
        (er.ZodLiteral = "ZodLiteral"),
        (er.ZodEnum = "ZodEnum"),
        (er.ZodEffects = "ZodEffects"),
        (er.ZodNativeEnum = "ZodNativeEnum"),
        (er.ZodOptional = "ZodOptional"),
        (er.ZodNullable = "ZodNullable"),
        (er.ZodDefault = "ZodDefault"),
        (er.ZodCatch = "ZodCatch"),
        (er.ZodPromise = "ZodPromise"),
        (er.ZodBranded = "ZodBranded"),
        (er.ZodPipeline = "ZodPipeline"),
        (er.ZodReadonly = "ZodReadonly");
      let eR = ZodString.create,
        eN = ZodNumber.create,
        eO = ZodNaN.create,
        eM = ZodBigInt.create,
        eD = ZodBoolean.create,
        eB = ZodDate.create,
        eL = ZodSymbol.create,
        ej = ZodUndefined.create,
        eU = ZodNull.create,
        e$ = ZodAny.create,
        eF = ZodUnknown.create,
        ez = ZodNever.create,
        eH = ZodVoid.create,
        eV = ZodArray.create,
        eW = ZodObject.create,
        eK = ZodObject.strictCreate,
        eZ = ZodUnion.create,
        eG = ZodDiscriminatedUnion.create,
        eY = ZodIntersection.create,
        eQ = ZodTuple.create,
        eJ = ZodRecord.create,
        eX = ZodMap.create,
        e0 = ZodSet.create,
        e1 = ZodFunction.create,
        e2 = ZodLazy.create,
        e3 = ZodLiteral.create,
        e5 = ZodEnum.create,
        e6 = ZodNativeEnum.create,
        e4 = ZodPromise.create,
        e8 = ZodEffects.create,
        e9 = ZodOptional.create,
        e7 = ZodNullable.create,
        tt = ZodEffects.createWithPreprocess,
        tr = ZodPipeline.create;
      var ta = Object.freeze({
        __proto__: null,
        defaultErrorMap: errorMap,
        setErrorMap: function (s) {
          ey = s;
        },
        getErrorMap: getErrorMap,
        makeIssue: makeIssue,
        EMPTY_PATH: [],
        addIssueToContext: addIssueToContext,
        ParseStatus: ParseStatus,
        INVALID: e_,
        DIRTY: DIRTY,
        OK: OK,
        isAborted: isAborted,
        isDirty: isDirty,
        isValid: isValid,
        isAsync: isAsync,
        get util() {
          return ei;
        },
        get objectUtil() {
          return eo;
        },
        ZodParsedType: eb,
        getParsedType: getParsedType,
        ZodType: ZodType,
        ZodString: ZodString,
        ZodNumber: ZodNumber,
        ZodBigInt: ZodBigInt,
        ZodBoolean: ZodBoolean,
        ZodDate: ZodDate,
        ZodSymbol: ZodSymbol,
        ZodUndefined: ZodUndefined,
        ZodNull: ZodNull,
        ZodAny: ZodAny,
        ZodUnknown: ZodUnknown,
        ZodNever: ZodNever,
        ZodVoid: ZodVoid,
        ZodArray: ZodArray,
        ZodObject: ZodObject,
        ZodUnion: ZodUnion,
        ZodDiscriminatedUnion: ZodDiscriminatedUnion,
        ZodIntersection: ZodIntersection,
        ZodTuple: ZodTuple,
        ZodRecord: ZodRecord,
        ZodMap: ZodMap,
        ZodSet: ZodSet,
        ZodFunction: ZodFunction,
        ZodLazy: ZodLazy,
        ZodLiteral: ZodLiteral,
        ZodEnum: ZodEnum,
        ZodNativeEnum: ZodNativeEnum,
        ZodPromise: ZodPromise,
        ZodEffects: ZodEffects,
        ZodTransformer: ZodEffects,
        ZodOptional: ZodOptional,
        ZodNullable: ZodNullable,
        ZodDefault: ZodDefault,
        ZodCatch: ZodCatch,
        ZodNaN: ZodNaN,
        BRAND: eI,
        ZodBranded: ZodBranded,
        ZodPipeline: ZodPipeline,
        ZodReadonly: ZodReadonly,
        custom: custom,
        Schema: ZodType,
        ZodSchema: ZodType,
        late: eP,
        get ZodFirstPartyTypeKind() {
          return es;
        },
        coerce: {
          string: (s) => ZodString.create({ ...s, coerce: !0 }),
          number: (s) => ZodNumber.create({ ...s, coerce: !0 }),
          boolean: (s) => ZodBoolean.create({ ...s, coerce: !0 }),
          bigint: (s) => ZodBigInt.create({ ...s, coerce: !0 }),
          date: (s) => ZodDate.create({ ...s, coerce: !0 }),
        },
        any: e$,
        array: eV,
        bigint: eM,
        boolean: eD,
        date: eB,
        discriminatedUnion: eG,
        effect: e8,
        enum: e5,
        function: e1,
        instanceof: (s, x = { message: `Input not instance of ${s.name}` }) =>
          custom((x) => x instanceof s, x),
        intersection: eY,
        lazy: e2,
        literal: e3,
        map: eX,
        nan: eO,
        nativeEnum: e6,
        never: ez,
        null: eU,
        nullable: e7,
        number: eN,
        object: eW,
        oboolean: () => eD().optional(),
        onumber: () => eN().optional(),
        optional: e9,
        ostring: () => eR().optional(),
        pipeline: tr,
        preprocess: tt,
        promise: e4,
        record: eJ,
        set: e0,
        strictObject: eK,
        string: eR,
        symbol: eL,
        transformer: e8,
        tuple: eQ,
        undefined: ej,
        union: eZ,
        unknown: eF,
        void: eH,
        NEVER: e_,
        ZodIssueCode: ev,
        quotelessJson: (s) => {
          let x = JSON.stringify(s, null, 2);
          return x.replace(/"([^"]+)":/g, "$1:");
        },
        ZodError: ZodError,
      });
      let ts = ta.object({ message: ta.string() });
      function zType(s) {
        return ta.literal(ep[s]);
      }
      ta.object({
        accessList: ta.array(ta.string()),
        blockHash: ta.string().nullable(),
        blockNumber: ta.string().nullable(),
        chainId: ta.string().or(ta.number()),
        from: ta.string(),
        gas: ta.string(),
        hash: ta.string(),
        input: ta.string().nullable(),
        maxFeePerGas: ta.string(),
        maxPriorityFeePerGas: ta.string(),
        nonce: ta.string(),
        r: ta.string(),
        s: ta.string(),
        to: ta.string(),
        transactionIndex: ta.string().nullable(),
        type: ta.string(),
        v: ta.string(),
        value: ta.string(),
      });
      let tl = ta.object({ chainId: ta.string().or(ta.number()) }),
        tc = ta.object({ email: ta.string().email() }),
        tu = ta.object({ otp: ta.string() }),
        td = ta.object({ uri: ta.string() }),
        th = ta.object({
          chainId: ta.optional(ta.string().or(ta.number())),
          preferredAccountType: ta.optional(ta.string()),
        }),
        tp = ta.object({
          provider: ta.enum([
            "google",
            "github",
            "apple",
            "facebook",
            "x",
            "discord",
          ]),
        }),
        tf = ta.object({ email: ta.string().email() }),
        tg = ta.object({ otp: ta.string() }),
        tm = ta.object({ otp: ta.string() }),
        tw = ta.object({
          themeMode: ta.optional(ta.enum(["light", "dark"])),
          themeVariables: ta.optional(
            ta.record(ta.string(), ta.string().or(ta.number()))
          ),
          w3mThemeVariables: ta.optional(ta.record(ta.string(), ta.string())),
        }),
        tb = ta.object({
          metadata: ta
            .object({
              name: ta.string(),
              description: ta.string(),
              url: ta.string(),
              icons: ta.array(ta.string()),
            })
            .optional(),
          sdkVersion: ta.string().optional(),
          sdkType: ta.string().optional(),
          projectId: ta.string(),
        }),
        tv = ta.object({ type: ta.string() }),
        ty = ta.object({
          action: ta.enum(["VERIFY_DEVICE", "VERIFY_OTP", "CONNECT"]),
        }),
        t_ = ta.object({ url: ta.string() }),
        tC = ta.object({ userName: ta.string() }),
        tx = ta.object({
          email: ta.string(),
          address: ta.string(),
          chainId: ta.string().or(ta.number()),
          accounts: ta
            .array(
              ta.object({
                address: ta.string(),
                type: ta.enum([
                  ef.ACCOUNT_TYPES.EOA,
                  ef.ACCOUNT_TYPES.SMART_ACCOUNT,
                ]),
              })
            )
            .optional(),
          userName: ta.string().optional(),
        }),
        tE = ta.object({
          action: ta.enum(["VERIFY_PRIMARY_OTP", "VERIFY_SECONDARY_OTP"]),
        }),
        tA = ta.object({
          email: ta.string().email().optional().nullable(),
          address: ta.string(),
          chainId: ta.string().or(ta.number()),
          smartAccountDeployed: ta.optional(ta.boolean()),
          accounts: ta
            .array(
              ta.object({
                address: ta.string(),
                type: ta.enum([
                  ef.ACCOUNT_TYPES.EOA,
                  ef.ACCOUNT_TYPES.SMART_ACCOUNT,
                ]),
              })
            )
            .optional(),
          preferredAccountType: ta.optional(ta.string()),
        }),
        tS = ta.object({ uri: ta.string() }),
        tk = ta.object({ isConnected: ta.boolean() }),
        tT = ta.object({ chainId: ta.string().or(ta.number()) }),
        tI = ta.object({ chainId: ta.string().or(ta.number()) }),
        tP = ta.object({ newEmail: ta.string().email() }),
        tR = ta.object({ smartAccountEnabledNetworks: ta.array(ta.number()) });
      ta.object({ address: ta.string(), isDeployed: ta.boolean() });
      let tN = ta.object({ version: ta.string().optional() }),
        tO = ta.object({ type: ta.string(), address: ta.string() }),
        tM = ta.any(),
        tD = ta.object({ method: ta.literal("eth_accounts") }),
        tB = ta.object({ method: ta.literal("eth_blockNumber") }),
        tL = ta.object({
          method: ta.literal("eth_call"),
          params: ta.array(ta.any()),
        }),
        tj = ta.object({ method: ta.literal("eth_chainId") }),
        tU = ta.object({
          method: ta.literal("eth_estimateGas"),
          params: ta.array(ta.any()),
        }),
        t$ = ta.object({
          method: ta.literal("eth_feeHistory"),
          params: ta.array(ta.any()),
        }),
        tF = ta.object({ method: ta.literal("eth_gasPrice") }),
        tz = ta.object({
          method: ta.literal("eth_getAccount"),
          params: ta.array(ta.any()),
        }),
        tH = ta.object({
          method: ta.literal("eth_getBalance"),
          params: ta.array(ta.any()),
        }),
        tq = ta.object({
          method: ta.literal("eth_getBlockByHash"),
          params: ta.array(ta.any()),
        }),
        tV = ta.object({
          method: ta.literal("eth_getBlockByNumber"),
          params: ta.array(ta.any()),
        }),
        tW = ta.object({
          method: ta.literal("eth_getBlockReceipts"),
          params: ta.array(ta.any()),
        }),
        tK = ta.object({
          method: ta.literal("eth_getBlockTransactionCountByHash"),
          params: ta.array(ta.any()),
        }),
        tZ = ta.object({
          method: ta.literal("eth_getBlockTransactionCountByNumber"),
          params: ta.array(ta.any()),
        }),
        tG = ta.object({
          method: ta.literal("eth_getCode"),
          params: ta.array(ta.any()),
        }),
        tY = ta.object({
          method: ta.literal("eth_getFilterChanges"),
          params: ta.array(ta.any()),
        }),
        tQ = ta.object({
          method: ta.literal("eth_getFilterLogs"),
          params: ta.array(ta.any()),
        }),
        tJ = ta.object({
          method: ta.literal("eth_getLogs"),
          params: ta.array(ta.any()),
        }),
        tX = ta.object({
          method: ta.literal("eth_getProof"),
          params: ta.array(ta.any()),
        }),
        t0 = ta.object({
          method: ta.literal("eth_getStorageAt"),
          params: ta.array(ta.any()),
        }),
        t1 = ta.object({
          method: ta.literal("eth_getTransactionByBlockHashAndIndex"),
          params: ta.array(ta.any()),
        }),
        t2 = ta.object({
          method: ta.literal("eth_getTransactionByBlockNumberAndIndex"),
          params: ta.array(ta.any()),
        }),
        t3 = ta.object({
          method: ta.literal("eth_getTransactionByHash"),
          params: ta.array(ta.any()),
        }),
        t5 = ta.object({
          method: ta.literal("eth_getTransactionCount"),
          params: ta.array(ta.any()),
        }),
        t6 = ta.object({
          method: ta.literal("eth_getTransactionReceipt"),
          params: ta.array(ta.any()),
        }),
        t4 = ta.object({
          method: ta.literal("eth_getUncleCountByBlockHash"),
          params: ta.array(ta.any()),
        }),
        t8 = ta.object({
          method: ta.literal("eth_getUncleCountByBlockNumber"),
          params: ta.array(ta.any()),
        }),
        t9 = ta.object({ method: ta.literal("eth_maxPriorityFeePerGas") }),
        t7 = ta.object({ method: ta.literal("eth_newBlockFilter") }),
        re = ta.object({
          method: ta.literal("eth_newFilter"),
          params: ta.array(ta.any()),
        }),
        rt = ta.object({
          method: ta.literal("eth_newPendingTransactionFilter"),
        }),
        rn = ta.object({
          method: ta.literal("eth_sendRawTransaction"),
          params: ta.array(ta.any()),
        }),
        ro = ta.object({
          method: ta.literal("eth_syncing"),
          params: ta.array(ta.any()),
        }),
        ra = ta.object({
          method: ta.literal("eth_uninstallFilter"),
          params: ta.array(ta.any()),
        }),
        rs = ta.object({
          method: ta.literal("personal_sign"),
          params: ta.array(ta.any()),
        }),
        rl = ta.object({
          method: ta.literal("eth_signTypedData_v4"),
          params: ta.array(ta.any()),
        }),
        rc = ta.object({
          method: ta.literal("eth_sendTransaction"),
          params: ta.array(ta.any()),
        }),
        ru = ta.object({
          method: ta.literal("solana_signMessage"),
          params: ta.object({ message: ta.string(), pubkey: ta.string() }),
        }),
        rd = ta.object({
          method: ta.literal("solana_signTransaction"),
          params: ta.object({ transaction: ta.string() }),
        }),
        rh = ta.object({
          method: ta.literal("solana_signAllTransactions"),
          params: ta.object({ transactions: ta.array(ta.string()) }),
        }),
        rp = ta.object({
          method: ta.literal("solana_signAndSendTransaction"),
          params: ta.object({
            transaction: ta.string(),
            options: ta
              .object({
                skipPreflight: ta.boolean().optional(),
                preflightCommitment: ta
                  .enum([
                    "processed",
                    "confirmed",
                    "finalized",
                    "recent",
                    "single",
                    "singleGossip",
                    "root",
                    "max",
                  ])
                  .optional(),
                maxRetries: ta.number().optional(),
                minContextSlot: ta.number().optional(),
              })
              .optional(),
          }),
        }),
        rf = ta.object({
          method: ta.literal("wallet_sendCalls"),
          params: ta.array(
            ta.object({
              chainId: ta.string().or(ta.number()).optional(),
              from: ta.string().optional(),
              version: ta.string().optional(),
              capabilities: ta.any().optional(),
              calls: ta.array(
                ta.object({
                  to: ta.string().startsWith("0x"),
                  data: ta.string().startsWith("0x").optional(),
                  value: ta.string().optional(),
                })
              ),
            })
          ),
        }),
        rg = ta.object({
          method: ta.literal("wallet_getCallsStatus"),
          params: ta.array(ta.string()),
        }),
        rm = ta.object({ method: ta.literal("wallet_getCapabilities") }),
        rw = ta.object({
          method: ta.literal("wallet_grantPermissions"),
          params: ta.array(ta.any()),
        }),
        rb = ta.object({
          method: ta.literal("wallet_revokePermissions"),
          params: ta.any(),
        }),
        rv = ta.object({ token: ta.string() }),
        ry = ta.object({ id: ta.string().optional() }),
        r_ = {
          appEvent: ry
            .extend({ type: zType("APP_SWITCH_NETWORK"), payload: tl })
            .or(ry.extend({ type: zType("APP_CONNECT_EMAIL"), payload: tc }))
            .or(ry.extend({ type: zType("APP_CONNECT_DEVICE") }))
            .or(ry.extend({ type: zType("APP_CONNECT_OTP"), payload: tu }))
            .or(ry.extend({ type: zType("APP_CONNECT_SOCIAL"), payload: td }))
            .or(ry.extend({ type: zType("APP_GET_FARCASTER_URI") }))
            .or(ry.extend({ type: zType("APP_CONNECT_FARCASTER") }))
            .or(
              ry.extend({
                type: zType("APP_GET_USER"),
                payload: ta.optional(th),
              })
            )
            .or(
              ry.extend({
                type: zType("APP_GET_SOCIAL_REDIRECT_URI"),
                payload: tp,
              })
            )
            .or(ry.extend({ type: zType("APP_SIGN_OUT") }))
            .or(
              ry.extend({
                type: zType("APP_IS_CONNECTED"),
                payload: ta.optional(rv),
              })
            )
            .or(ry.extend({ type: zType("APP_GET_CHAIN_ID") }))
            .or(
              ry.extend({
                type: zType("APP_GET_SMART_ACCOUNT_ENABLED_NETWORKS"),
              })
            )
            .or(ry.extend({ type: zType("APP_INIT_SMART_ACCOUNT") }))
            .or(
              ry.extend({
                type: zType("APP_SET_PREFERRED_ACCOUNT"),
                payload: tv,
              })
            )
            .or(
              ry.extend({
                type: zType("APP_RPC_REQUEST"),
                payload: rs
                  .or(rc)
                  .or(tD)
                  .or(tB)
                  .or(tL)
                  .or(tj)
                  .or(tU)
                  .or(t$)
                  .or(tF)
                  .or(tz)
                  .or(tH)
                  .or(tq)
                  .or(tV)
                  .or(tW)
                  .or(tK)
                  .or(tZ)
                  .or(tG)
                  .or(tY)
                  .or(tQ)
                  .or(tJ)
                  .or(tX)
                  .or(t0)
                  .or(t1)
                  .or(t2)
                  .or(t3)
                  .or(t5)
                  .or(t6)
                  .or(t4)
                  .or(t8)
                  .or(t9)
                  .or(t7)
                  .or(re)
                  .or(rt)
                  .or(rn)
                  .or(ro)
                  .or(ra)
                  .or(rs)
                  .or(rl)
                  .or(rc)
                  .or(ru)
                  .or(rd)
                  .or(rh)
                  .or(rp)
                  .or(rg)
                  .or(rf)
                  .or(rm)
                  .or(rw)
                  .or(rb),
              })
            )
            .or(ry.extend({ type: zType("APP_UPDATE_EMAIL"), payload: tf }))
            .or(
              ry.extend({
                type: zType("APP_UPDATE_EMAIL_PRIMARY_OTP"),
                payload: tg,
              })
            )
            .or(
              ry.extend({
                type: zType("APP_UPDATE_EMAIL_SECONDARY_OTP"),
                payload: tm,
              })
            )
            .or(ry.extend({ type: zType("APP_SYNC_THEME"), payload: tw }))
            .or(ry.extend({ type: zType("APP_SYNC_DAPP_DATA"), payload: tb }))
            .or(ry.extend({ type: zType("APP_RELOAD") })),
          frameEvent: ry
            .extend({ type: zType("FRAME_SWITCH_NETWORK_ERROR"), payload: ts })
            .or(
              ry.extend({
                type: zType("FRAME_SWITCH_NETWORK_SUCCESS"),
                payload: tI,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_CONNECT_EMAIL_SUCCESS"),
                payload: ty,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_CONNECT_EMAIL_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_GET_FARCASTER_URI_SUCCESS"),
                payload: t_,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_GET_FARCASTER_URI_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_CONNECT_FARCASTER_SUCCESS"),
                payload: tC,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_CONNECT_FARCASTER_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({ type: zType("FRAME_CONNECT_OTP_ERROR"), payload: ts })
            )
            .or(ry.extend({ type: zType("FRAME_CONNECT_OTP_SUCCESS") }))
            .or(
              ry.extend({
                type: zType("FRAME_CONNECT_DEVICE_ERROR"),
                payload: ts,
              })
            )
            .or(ry.extend({ type: zType("FRAME_CONNECT_DEVICE_SUCCESS") }))
            .or(
              ry.extend({
                type: zType("FRAME_CONNECT_SOCIAL_SUCCESS"),
                payload: tx,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_CONNECT_SOCIAL_ERROR"),
                payload: ts,
              })
            )
            .or(ry.extend({ type: zType("FRAME_GET_USER_ERROR"), payload: ts }))
            .or(
              ry.extend({ type: zType("FRAME_GET_USER_SUCCESS"), payload: tA })
            )
            .or(
              ry.extend({
                type: zType("FRAME_GET_SOCIAL_REDIRECT_URI_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_GET_SOCIAL_REDIRECT_URI_SUCCESS"),
                payload: tS,
              })
            )
            .or(ry.extend({ type: zType("FRAME_SIGN_OUT_ERROR"), payload: ts }))
            .or(ry.extend({ type: zType("FRAME_SIGN_OUT_SUCCESS") }))
            .or(
              ry.extend({
                type: zType("FRAME_IS_CONNECTED_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_IS_CONNECTED_SUCCESS"),
                payload: tk,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_GET_CHAIN_ID_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_GET_CHAIN_ID_SUCCESS"),
                payload: tT,
              })
            )
            .or(
              ry.extend({ type: zType("FRAME_RPC_REQUEST_ERROR"), payload: ts })
            )
            .or(
              ry.extend({
                type: zType("FRAME_RPC_REQUEST_SUCCESS"),
                payload: tM,
              })
            )
            .or(ry.extend({ type: zType("FRAME_SESSION_UPDATE"), payload: rv }))
            .or(
              ry.extend({
                type: zType("FRAME_UPDATE_EMAIL_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_UPDATE_EMAIL_SUCCESS"),
                payload: tE,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_UPDATE_EMAIL_PRIMARY_OTP_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_UPDATE_EMAIL_PRIMARY_OTP_SUCCESS"),
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_UPDATE_EMAIL_SECONDARY_OTP_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_UPDATE_EMAIL_SECONDARY_OTP_SUCCESS"),
                payload: tP,
              })
            )
            .or(
              ry.extend({ type: zType("FRAME_SYNC_THEME_ERROR"), payload: ts })
            )
            .or(ry.extend({ type: zType("FRAME_SYNC_THEME_SUCCESS") }))
            .or(
              ry.extend({
                type: zType("FRAME_SYNC_DAPP_DATA_ERROR"),
                payload: ts,
              })
            )
            .or(ry.extend({ type: zType("FRAME_SYNC_DAPP_DATA_SUCCESS") }))
            .or(
              ry.extend({
                type: zType("FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_SUCCESS"),
                payload: tR,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_INIT_SMART_ACCOUNT_ERROR"),
                payload: ts,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_SET_PREFERRED_ACCOUNT_SUCCESS"),
                payload: tO,
              })
            )
            .or(
              ry.extend({
                type: zType("FRAME_SET_PREFERRED_ACCOUNT_ERROR"),
                payload: ts,
              })
            )
            .or(ry.extend({ type: zType("FRAME_READY"), payload: tN }))
            .or(ry.extend({ type: zType("FRAME_RELOAD_ERROR"), payload: ts }))
            .or(ry.extend({ type: zType("FRAME_RELOAD_SUCCESS") })),
        };
      function shouldHandleEvent(s, x = {}) {
        return "string" == typeof x?.type && x?.type?.includes(s);
      }
      let W3mFrame = class W3mFrame {
        constructor({
          projectId: s,
          isAppClient: x = !1,
          chainId: W = "eip155:1",
          enableLogger: X = !0,
        }) {
          if (
            ((this.iframe = null),
            (this.rpcUrl = el.bq.BLOCKCHAIN_API_RPC_URL),
            (this.initFrame = () => {
              let s = document.getElementById("w3m-iframe");
              this.iframe && !s && document.body.appendChild(this.iframe);
            }),
            (this.events = {
              registerFrameEventHandler: (s, x, W) => {
                function eventHandler({ data: W }) {
                  if (!shouldHandleEvent(ep.FRAME_EVENT_KEY, W)) return;
                  let X = r_.frameEvent.parse(W);
                  X.id === s &&
                    (x(X), window.removeEventListener("message", eventHandler));
                }
                ew.isClient &&
                  (window.addEventListener("message", eventHandler),
                  W.addEventListener("abort", () => {
                    window.removeEventListener("message", eventHandler);
                  }));
              },
              onFrameEvent: (s) => {
                ew.isClient &&
                  window.addEventListener("message", ({ data: x }) => {
                    if (!shouldHandleEvent(ep.FRAME_EVENT_KEY, x)) return;
                    let W = r_.frameEvent.parse(x);
                    s(W);
                  });
              },
              onAppEvent: (s) => {
                ew.isClient &&
                  window.addEventListener("message", ({ data: x }) => {
                    if (!shouldHandleEvent(ep.APP_EVENT_KEY, x)) return;
                    let W = r_.appEvent.parse(x);
                    s(W);
                  });
              },
              postAppEvent: (s) => {
                if (ew.isClient) {
                  if (!this.iframe?.contentWindow)
                    throw Error("W3mFrame: iframe is not set");
                  r_.appEvent.parse(s),
                    this.iframe.contentWindow.postMessage(s, "*");
                }
              },
              postFrameEvent: (s) => {
                if (ew.isClient) {
                  if (!parent) throw Error("W3mFrame: parent is not set");
                  r_.frameEvent.parse(s), parent.postMessage(s, "*");
                }
              },
            }),
            (this.projectId = s),
            (this.frameLoadPromise = new Promise((s, x) => {
              this.frameLoadPromiseResolver = { resolve: s, reject: x };
            })),
            x &&
              ((this.frameLoadPromise = new Promise((s, x) => {
                this.frameLoadPromiseResolver = { resolve: s, reject: x };
              })),
              ew.isClient))
          ) {
            let x = document.createElement("iframe");
            (x.id = "w3m-iframe"),
              (x.src = `${eu}?projectId=${s}&chainId=${W}&version=${eh}&enableLogger=${X}`),
              (x.name = "w3m-secure-iframe"),
              (x.style.position = "fixed"),
              (x.style.zIndex = "999999"),
              (x.style.display = "none"),
              (x.style.animationDelay = "0s, 50ms"),
              (x.style.borderBottomLeftRadius =
                "clamp(0px, var(--wui-border-radius-l), 44px)"),
              (x.style.borderBottomRightRadius =
                "clamp(0px, var(--wui-border-radius-l), 44px)"),
              (this.iframe = x),
              (this.iframe.onerror = () => {
                this.frameLoadPromiseResolver?.reject(
                  "Unable to load email login dependency"
                );
              }),
              this.events.onFrameEvent((s) => {
                "@w3m-frame/READY" === s.type &&
                  this.frameLoadPromiseResolver?.resolve(void 0);
              });
          }
        }
        get networks() {
          let s = [
            "eip155:1",
            "eip155:5",
            "eip155:11155111",
            "eip155:10",
            "eip155:420",
            "eip155:42161",
            "eip155:421613",
            "eip155:137",
            "eip155:80001",
            "eip155:42220",
            "eip155:1313161554",
            "eip155:1313161555",
            "eip155:56",
            "eip155:97",
            "eip155:43114",
            "eip155:43113",
            "eip155:324",
            "eip155:280",
            "eip155:100",
            "eip155:8453",
            "eip155:84531",
            "eip155:84532",
            "eip155:7777777",
            "eip155:999",
            "solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
            "solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
            "solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
          ].map((s) => ({
            [s]: {
              rpcUrl: `${this.rpcUrl}/v1/?chainId=${s}&projectId=${this.projectId}`,
              chainId: s,
            },
          }));
          return Object.assign({}, ...s);
        }
      };
      var rC = W(12044);
      let W3mFrameLogger = class W3mFrameLogger {
        constructor(s) {
          let x = (0, rC.jI)({ level: ed }),
            { logger: W, chunkLoggerController: X } = (0, rC.Rt)({ opts: x });
          (this.logger = (0, rC.Ep)(W, this.constructor.name)),
            (this.chunkLoggerController = X),
            "undefined" != typeof window &&
              this.chunkLoggerController?.downloadLogsBlobInBrowser &&
              (window.downloadAppKitLogsBlob ||
                (window.downloadAppKitLogsBlob = {}),
              (window.downloadAppKitLogsBlob.sdk = () => {
                this.chunkLoggerController?.downloadLogsBlobInBrowser &&
                  this.chunkLoggerController.downloadLogsBlobInBrowser({
                    projectId: s,
                  });
              }));
        }
      };
      let W3mFrameProvider = class W3mFrameProvider {
        constructor({
          projectId: s,
          chainId: x,
          enableLogger: W = !0,
          onTimeout: X,
        }) {
          (this.openRpcRequests = []),
            W && (this.w3mLogger = new W3mFrameLogger(s)),
            (this.w3mFrame = new W3mFrame({
              projectId: s,
              isAppClient: !0,
              chainId: x,
              enableLogger: W,
            })),
            (this.onTimeout = X),
            this.getLoginEmailUsed() && this.w3mFrame.initFrame(),
            this.w3mFrame.events.onFrameEvent((s) => {
              s.type === ep.FRAME_GET_USER_SUCCESS && (this.user = s.payload);
            });
        }
        getLoginEmailUsed() {
          return !!em.get(ep.EMAIL_LOGIN_USED_KEY);
        }
        getEmail() {
          return em.get(ep.EMAIL);
        }
        getUsername() {
          return em.get(ep.SOCIAL_USERNAME);
        }
        async reload() {
          try {
            this.w3mFrame.initFrame(),
              await this.appEvent({ type: ep.APP_RELOAD });
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error reloading iframe"
              ),
              s)
            );
          }
        }
        async connectEmail(s) {
          try {
            ew.checkIfAllowedToTriggerEmail(), this.w3mFrame.initFrame();
            let x = await this.appEvent({
              type: ep.APP_CONNECT_EMAIL,
              payload: s,
            });
            return this.setNewLastEmailLoginTime(), x;
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error connecting email"
              ),
              s)
            );
          }
        }
        async connectDevice() {
          try {
            return this.appEvent({ type: ep.APP_CONNECT_DEVICE });
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error connecting device"
              ),
              s)
            );
          }
        }
        async connectOtp(s) {
          try {
            return this.appEvent({ type: ep.APP_CONNECT_OTP, payload: s });
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error connecting otp"
              ),
              s)
            );
          }
        }
        async isConnected() {
          try {
            if (!this.getLoginEmailUsed()) return { isConnected: !1 };
            let s = await this.appEvent({ type: ep.APP_IS_CONNECTED });
            return s.isConnected || this.deleteAuthLoginCache(), s;
          } catch (s) {
            throw (
              (this.deleteAuthLoginCache(),
              this.w3mLogger?.logger.error(
                { error: s },
                "Error checking connection"
              ),
              s)
            );
          }
        }
        async getChainId() {
          try {
            let s = await this.appEvent({ type: ep.APP_GET_CHAIN_ID });
            return this.setLastUsedChainId(s.chainId), s;
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error getting chain id"
              ),
              s)
            );
          }
        }
        async getSocialRedirectUri(s) {
          try {
            return (
              this.w3mFrame.initFrame(),
              this.appEvent({
                type: ep.APP_GET_SOCIAL_REDIRECT_URI,
                payload: s,
              })
            );
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error getting social redirect uri"
              ),
              s)
            );
          }
        }
        async updateEmail(s) {
          try {
            let x = await this.appEvent({
              type: ep.APP_UPDATE_EMAIL,
              payload: s,
            });
            return this.setNewLastEmailLoginTime(), x;
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error updating email"
              ),
              s)
            );
          }
        }
        async updateEmailPrimaryOtp(s) {
          try {
            return this.appEvent({
              type: ep.APP_UPDATE_EMAIL_PRIMARY_OTP,
              payload: s,
            });
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error updating email primary otp"
              ),
              s)
            );
          }
        }
        async updateEmailSecondaryOtp(s) {
          try {
            let x = await this.appEvent({
              type: ep.APP_UPDATE_EMAIL_SECONDARY_OTP,
              payload: s,
            });
            return this.setLoginSuccess(x.newEmail), x;
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error updating email secondary otp"
              ),
              s)
            );
          }
        }
        async syncTheme(s) {
          try {
            return this.appEvent({ type: ep.APP_SYNC_THEME, payload: s });
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error syncing theme"
              ),
              s)
            );
          }
        }
        async syncDappData(s) {
          try {
            return this.appEvent({ type: ep.APP_SYNC_DAPP_DATA, payload: s });
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error syncing dapp data"
              ),
              s)
            );
          }
        }
        async getSmartAccountEnabledNetworks() {
          try {
            let s = await this.appEvent({
              type: ep.APP_GET_SMART_ACCOUNT_ENABLED_NETWORKS,
            });
            return (
              this.persistSmartAccountEnabledNetworks(
                s.smartAccountEnabledNetworks
              ),
              s
            );
          } catch (s) {
            throw (
              (this.persistSmartAccountEnabledNetworks([]),
              this.w3mLogger?.logger.error(
                { error: s },
                "Error getting smart account enabled networks"
              ),
              s)
            );
          }
        }
        async setPreferredAccount(s) {
          try {
            return this.appEvent({
              type: ep.APP_SET_PREFERRED_ACCOUNT,
              payload: { type: s },
            });
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error setting preferred account"
              ),
              s)
            );
          }
        }
        async connect(s) {
          try {
            let x = s?.chainId || this.getLastUsedChainId() || 1,
              W = await this.appEvent({
                type: ep.APP_GET_USER,
                payload: { ...s, chainId: x },
              });
            return (
              this.setLoginSuccess(W.email),
              this.setLastUsedChainId(W.chainId),
              W
            );
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error({ error: s }, "Error connecting"),
              s)
            );
          }
        }
        async getUser(s) {
          try {
            let x = s?.chainId || this.getLastUsedChainId() || 1,
              W = await this.appEvent({
                type: ep.APP_GET_USER,
                payload: { ...s, chainId: x },
              });
            return W;
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error({ error: s }, "Error connecting"),
              s)
            );
          }
        }
        async connectSocial(s) {
          try {
            let x = await this.appEvent({
              type: ep.APP_CONNECT_SOCIAL,
              payload: { uri: s },
            });
            return x.userName && this.setSocialLoginSuccess(x.userName), x;
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error connecting social"
              ),
              s)
            );
          }
        }
        async getFarcasterUri() {
          try {
            this.w3mFrame.initFrame();
            let s = await this.appEvent({ type: ep.APP_GET_FARCASTER_URI });
            return s;
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error getting farcaster uri"
              ),
              s)
            );
          }
        }
        async connectFarcaster() {
          try {
            let s = await this.appEvent({ type: ep.APP_CONNECT_FARCASTER });
            return s.userName && this.setSocialLoginSuccess(s.userName), s;
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error connecting farcaster"
              ),
              s)
            );
          }
        }
        async switchNetwork(s) {
          try {
            let x = await this.appEvent({
              type: ep.APP_SWITCH_NETWORK,
              payload: { chainId: s },
            });
            return this.setLastUsedChainId(x.chainId), x;
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error switching network"
              ),
              s)
            );
          }
        }
        async disconnect() {
          try {
            let s = await this.appEvent({ type: ep.APP_SIGN_OUT });
            return this.deleteAuthLoginCache(), s;
          } catch (s) {
            throw (
              (this.w3mLogger?.logger.error(
                { error: s },
                "Error disconnecting"
              ),
              s)
            );
          }
        }
        async request(s) {
          try {
            if (ef.GET_CHAIN_ID === s.method) return this.getLastUsedChainId();
            this.rpcRequestHandler?.(s);
            let x = await this.appEvent({
              type: ep.APP_RPC_REQUEST,
              payload: s,
            });
            return this.rpcSuccessHandler?.(x, s), x;
          } catch (x) {
            throw (
              (this.rpcErrorHandler?.(x, s),
              this.w3mLogger?.logger.error({ error: x }, "Error requesting"),
              x)
            );
          }
        }
        onRpcRequest(s) {
          this.rpcRequestHandler = s;
        }
        onRpcSuccess(s) {
          this.rpcSuccessHandler = s;
        }
        onRpcError(s) {
          this.rpcErrorHandler = s;
        }
        onIsConnected(s) {
          this.w3mFrame.events.onFrameEvent((x) => {
            x.type === ep.FRAME_IS_CONNECTED_SUCCESS &&
              x.payload.isConnected &&
              s();
          });
        }
        onNotConnected(s) {
          this.w3mFrame.events.onFrameEvent((x) => {
            x.type === ep.FRAME_IS_CONNECTED_ERROR && s(),
              x.type !== ep.FRAME_IS_CONNECTED_SUCCESS ||
                x.payload.isConnected ||
                s();
          });
        }
        onConnect(s) {
          this.w3mFrame.events.onFrameEvent((x) => {
            x.type === ep.FRAME_GET_USER_SUCCESS && s(x.payload);
          });
        }
        onSocialConnected(s) {
          this.w3mFrame.events.onFrameEvent((x) => {
            x.type === ep.FRAME_CONNECT_SOCIAL_SUCCESS && s(x.payload);
          });
        }
        async getCapabilities() {
          try {
            let s = await this.request({ method: "wallet_getCapabilities" });
            return s || {};
          } catch {
            return {};
          }
        }
        onSetPreferredAccount(s) {
          this.w3mFrame.events.onFrameEvent((x) => {
            x.type === ep.FRAME_SET_PREFERRED_ACCOUNT_SUCCESS
              ? s(x.payload)
              : x.type === ep.FRAME_SET_PREFERRED_ACCOUNT_ERROR &&
                s({ type: ef.ACCOUNT_TYPES.EOA });
          });
        }
        onGetSmartAccountEnabledNetworks(s) {
          this.w3mFrame.events.onFrameEvent((x) => {
            x.type === ep.FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_SUCCESS
              ? s(x.payload.smartAccountEnabledNetworks)
              : x.type === ep.FRAME_GET_SMART_ACCOUNT_ENABLED_NETWORKS_ERROR &&
                s([]);
          });
        }
        getAvailableChainIds() {
          return Object.keys(this.w3mFrame.networks);
        }
        rejectRpcRequests() {
          try {
            this.openRpcRequests.forEach(
              ({ abortController: s, method: x }) => {
                ef.SAFE_RPC_METHODS.includes(x) || s.abort();
              }
            ),
              (this.openRpcRequests = []);
          } catch (s) {
            this.w3mLogger?.logger.error(
              { error: s },
              "Error aborting RPC request"
            );
          }
        }
        async appEvent(s) {
          let x;
          function replaceEventType(s) {
            return s.replace("@w3m-app/", "");
          }
          await this.w3mFrame.frameLoadPromise;
          let W = new AbortController(),
            X = replaceEventType(s.type),
            ee = [
              ep.APP_CONNECT_EMAIL,
              ep.APP_CONNECT_DEVICE,
              ep.APP_CONNECT_OTP,
              ep.APP_CONNECT_SOCIAL,
              ep.APP_GET_SOCIAL_REDIRECT_URI,
            ]
              .map(replaceEventType)
              .includes(X);
          return (
            ee &&
              (x = setTimeout(() => {
                this.onTimeout?.(), W.abort();
              }, 3e4)),
            new Promise((ee, et) => {
              let er = Math.random().toString(36).substring(7);
              this.w3mLogger?.logger.info?.(
                { event: s, id: er },
                "Sending app event"
              ),
                this.w3mFrame.events.postAppEvent({ ...s, id: er }),
                "RPC_REQUEST" === X &&
                  (this.openRpcRequests = [
                    ...this.openRpcRequests,
                    { ...s.payload, abortController: W },
                  ]),
                W.signal.addEventListener("abort", () => {
                  "RPC_REQUEST" === X
                    ? et(Error("Request was aborted"))
                    : "GET_FARCASTER_URI" !== X &&
                      et(Error("Something went wrong"));
                }),
                this.w3mFrame.events.registerFrameEventHandler(
                  er,
                  (s) => {
                    var W;
                    return (
                      (W = this.w3mLogger),
                      void (
                        s.id === er &&
                        (W?.logger.info?.(
                          { framEvent: s, id: er },
                          "Received frame response"
                        ),
                        s.type === `@w3m-frame/${X}_SUCCESS`
                          ? (x && clearTimeout(x),
                            "payload" in s && ee(s.payload),
                            ee(void 0))
                          : s.type === `@w3m-frame/${X}_ERROR` &&
                            (x && clearTimeout(x),
                            "payload" in s &&
                              et(
                                Error(s.payload?.message || "An error occurred")
                              ),
                            et(Error("An error occurred"))))
                      )
                    );
                  },
                  W.signal
                );
            })
          );
        }
        setNewLastEmailLoginTime() {
          em.set(ep.LAST_EMAIL_LOGIN_TIME, Date.now().toString());
        }
        setSocialLoginSuccess(s) {
          em.set(ep.SOCIAL_USERNAME, s);
        }
        setLoginSuccess(s) {
          s && em.set(ep.EMAIL, s),
            em.set(ep.EMAIL_LOGIN_USED_KEY, "true"),
            em.delete(ep.LAST_EMAIL_LOGIN_TIME);
        }
        deleteAuthLoginCache() {
          em.delete(ep.EMAIL_LOGIN_USED_KEY),
            em.delete(ep.EMAIL),
            em.delete(ep.LAST_USED_CHAIN_KEY),
            em.delete(ep.SOCIAL_USERNAME);
        }
        setLastUsedChainId(s) {
          s && em.set(ep.LAST_USED_CHAIN_KEY, String(s));
        }
        getLastUsedChainId() {
          let s = em.get(ep.LAST_USED_CHAIN_KEY) ?? void 0,
            x = Number(s);
          return isNaN(x) ? s : x;
        }
        persistSmartAccountEnabledNetworks(s) {
          em.set(ep.SMART_ACCOUNT_ENABLED_NETWORKS, s.join(","));
        }
      };
    },
    66474: function (s, x, W) {
      "use strict";
      W.d(x, {
        j: function () {
          return et;
        },
      });
      var X = W(7506),
        ee = W(24139),
        et = new (class extends X.l {
          #f;
          #g;
          #m;
          constructor() {
            super(),
              (this.#m = (s) => {
                if (!ee.sk && window.addEventListener) {
                  let listener = () => s();
                  return (
                    window.addEventListener("visibilitychange", listener, !1),
                    () => {
                      window.removeEventListener("visibilitychange", listener);
                    }
                  );
                }
              });
          }
          onSubscribe() {
            this.#g || this.setEventListener(this.#m);
          }
          onUnsubscribe() {
            this.hasListeners() || (this.#g?.(), (this.#g = void 0));
          }
          setEventListener(s) {
            (this.#m = s),
              this.#g?.(),
              (this.#g = s((s) => {
                "boolean" == typeof s ? this.setFocused(s) : this.onFocus();
              }));
          }
          setFocused(s) {
            let x = this.#f !== s;
            x && ((this.#f = s), this.onFocus());
          }
          onFocus() {
            let s = this.isFocused();
            this.listeners.forEach((x) => {
              x(s);
            });
          }
          isFocused() {
            return "boolean" == typeof this.#f
              ? this.#f
              : globalThis.document?.visibilityState !== "hidden";
          }
        })();
    },
    27037: function (s, x, W) {
      "use strict";
      W.d(x, {
        V: function () {
          return X;
        },
      });
      var X = (function () {
        let s = [],
          x = 0,
          notifyFn = (s) => {
            s();
          },
          batchNotifyFn = (s) => {
            s();
          },
          scheduleFn = (s) => setTimeout(s, 0),
          schedule = (W) => {
            x
              ? s.push(W)
              : scheduleFn(() => {
                  notifyFn(W);
                });
          },
          flush = () => {
            let x = s;
            (s = []),
              x.length &&
                scheduleFn(() => {
                  batchNotifyFn(() => {
                    x.forEach((s) => {
                      notifyFn(s);
                    });
                  });
                });
          };
        return {
          batch: (s) => {
            let W;
            x++;
            try {
              W = s();
            } finally {
              --x || flush();
            }
            return W;
          },
          batchCalls:
            (s) =>
            (...x) => {
              schedule(() => {
                s(...x);
              });
            },
          schedule,
          setNotifyFunction: (s) => {
            notifyFn = s;
          },
          setBatchNotifyFunction: (s) => {
            batchNotifyFn = s;
          },
          setScheduler: (s) => {
            scheduleFn = s;
          },
        };
      })();
    },
    14304: function (s, x, W) {
      "use strict";
      W.d(x, {
        N: function () {
          return et;
        },
      });
      var X = W(7506),
        ee = W(24139),
        et = new (class extends X.l {
          #w = !0;
          #g;
          #m;
          constructor() {
            super(),
              (this.#m = (s) => {
                if (!ee.sk && window.addEventListener) {
                  let onlineListener = () => s(!0),
                    offlineListener = () => s(!1);
                  return (
                    window.addEventListener("online", onlineListener, !1),
                    window.addEventListener("offline", offlineListener, !1),
                    () => {
                      window.removeEventListener("online", onlineListener),
                        window.removeEventListener("offline", offlineListener);
                    }
                  );
                }
              });
          }
          onSubscribe() {
            this.#g || this.setEventListener(this.#m);
          }
          onUnsubscribe() {
            this.hasListeners() || (this.#g?.(), (this.#g = void 0));
          }
          setEventListener(s) {
            (this.#m = s),
              this.#g?.(),
              (this.#g = s(this.setOnline.bind(this)));
          }
          setOnline(s) {
            let x = this.#w !== s;
            x &&
              ((this.#w = s),
              this.listeners.forEach((x) => {
                x(s);
              }));
          }
          isOnline() {
            return this.#w;
          }
        })();
    },
    56888: function (s, x, W) {
      "use strict";
      W.d(x, {
        A: function () {
          return ei;
        },
        z: function () {
          return fetchState;
        },
      });
      var X = W(24139),
        ee = W(27037),
        et = W(72008),
        er = W(48907),
        ei = class extends er.F {
          #b;
          #v;
          #y;
          #i;
          #l;
          #_;
          constructor(s) {
            super(),
              (this.#_ = !1),
              (this.#l = s.defaultOptions),
              this.setOptions(s.options),
              (this.observers = []),
              (this.#y = s.cache),
              (this.queryKey = s.queryKey),
              (this.queryHash = s.queryHash),
              (this.#b = (function (s) {
                let x =
                    "function" == typeof s.initialData
                      ? s.initialData()
                      : s.initialData,
                  W = void 0 !== x,
                  X = W
                    ? "function" == typeof s.initialDataUpdatedAt
                      ? s.initialDataUpdatedAt()
                      : s.initialDataUpdatedAt
                    : 0;
                return {
                  data: x,
                  dataUpdateCount: 0,
                  dataUpdatedAt: W ? X ?? Date.now() : 0,
                  error: null,
                  errorUpdateCount: 0,
                  errorUpdatedAt: 0,
                  fetchFailureCount: 0,
                  fetchFailureReason: null,
                  fetchMeta: null,
                  isInvalidated: !1,
                  status: W ? "success" : "pending",
                  fetchStatus: "idle",
                };
              })(this.options)),
              (this.state = s.state ?? this.#b),
              this.scheduleGc();
          }
          get meta() {
            return this.options.meta;
          }
          get promise() {
            return this.#i?.promise;
          }
          setOptions(s) {
            (this.options = { ...this.#l, ...s }),
              this.updateGcTime(this.options.gcTime);
          }
          optionalRemove() {
            this.observers.length ||
              "idle" !== this.state.fetchStatus ||
              this.#y.remove(this);
          }
          setData(s, x) {
            let W = (0, X.oE)(this.state.data, s, this.options);
            return (
              this.#n({
                data: W,
                type: "success",
                dataUpdatedAt: x?.updatedAt,
                manual: x?.manual,
              }),
              W
            );
          }
          setState(s, x) {
            this.#n({ type: "setState", state: s, setStateOptions: x });
          }
          cancel(s) {
            let x = this.#i?.promise;
            return (
              this.#i?.cancel(s),
              x ? x.then(X.ZT).catch(X.ZT) : Promise.resolve()
            );
          }
          destroy() {
            super.destroy(), this.cancel({ silent: !0 });
          }
          reset() {
            this.destroy(), this.setState(this.#b);
          }
          isActive() {
            return this.observers.some(
              (s) => !1 !== (0, X.Nc)(s.options.enabled, this)
            );
          }
          isDisabled() {
            return this.getObserversCount() > 0
              ? !this.isActive()
              : this.options.queryFn === X.CN ||
                  this.state.dataUpdateCount + this.state.errorUpdateCount ===
                    0;
          }
          isStale() {
            return (
              !!this.state.isInvalidated ||
              (this.getObserversCount() > 0
                ? this.observers.some((s) => s.getCurrentResult().isStale)
                : void 0 === this.state.data)
            );
          }
          isStaleByTime(s = 0) {
            return (
              this.state.isInvalidated ||
              void 0 === this.state.data ||
              !(0, X.Kp)(this.state.dataUpdatedAt, s)
            );
          }
          onFocus() {
            let s = this.observers.find((s) => s.shouldFetchOnWindowFocus());
            s?.refetch({ cancelRefetch: !1 }), this.#i?.continue();
          }
          onOnline() {
            let s = this.observers.find((s) => s.shouldFetchOnReconnect());
            s?.refetch({ cancelRefetch: !1 }), this.#i?.continue();
          }
          addObserver(s) {
            this.observers.includes(s) ||
              (this.observers.push(s),
              this.clearGcTimeout(),
              this.#y.notify({
                type: "observerAdded",
                query: this,
                observer: s,
              }));
          }
          removeObserver(s) {
            this.observers.includes(s) &&
              ((this.observers = this.observers.filter((x) => x !== s)),
              this.observers.length ||
                (this.#i &&
                  (this.#_
                    ? this.#i.cancel({ revert: !0 })
                    : this.#i.cancelRetry()),
                this.scheduleGc()),
              this.#y.notify({
                type: "observerRemoved",
                query: this,
                observer: s,
              }));
          }
          getObserversCount() {
            return this.observers.length;
          }
          invalidate() {
            this.state.isInvalidated || this.#n({ type: "invalidate" });
          }
          fetch(s, x) {
            if ("idle" !== this.state.fetchStatus) {
              if (void 0 !== this.state.data && x?.cancelRefetch)
                this.cancel({ silent: !0 });
              else if (this.#i) return this.#i.continueRetry(), this.#i.promise;
            }
            if ((s && this.setOptions(s), !this.options.queryFn)) {
              let s = this.observers.find((s) => s.options.queryFn);
              s && this.setOptions(s.options);
            }
            let W = new AbortController(),
              addSignalProperty = (s) => {
                Object.defineProperty(s, "signal", {
                  enumerable: !0,
                  get: () => ((this.#_ = !0), W.signal),
                });
              },
              ee = {
                fetchOptions: x,
                options: this.options,
                queryKey: this.queryKey,
                state: this.state,
                fetchFn: () => {
                  let s = (0, X.cG)(this.options, x),
                    W = { queryKey: this.queryKey, meta: this.meta };
                  return (addSignalProperty(W),
                  (this.#_ = !1),
                  this.options.persister)
                    ? this.options.persister(s, W, this)
                    : s(W);
                },
              };
            addSignalProperty(ee),
              this.options.behavior?.onFetch(ee, this),
              (this.#v = this.state),
              ("idle" === this.state.fetchStatus ||
                this.state.fetchMeta !== ee.fetchOptions?.meta) &&
                this.#n({ type: "fetch", meta: ee.fetchOptions?.meta });
            let onError = (s) => {
              ((0, et.DV)(s) && s.silent) ||
                this.#n({ type: "error", error: s }),
                (0, et.DV)(s) ||
                  (this.#y.config.onError?.(s, this),
                  this.#y.config.onSettled?.(this.state.data, s, this)),
                this.scheduleGc();
            };
            return (
              (this.#i = (0, et.Mz)({
                initialPromise: x?.initialPromise,
                fn: ee.fetchFn,
                abort: W.abort.bind(W),
                onSuccess: (s) => {
                  if (void 0 === s) {
                    onError(Error(`${this.queryHash} data is undefined`));
                    return;
                  }
                  try {
                    this.setData(s);
                  } catch (s) {
                    onError(s);
                    return;
                  }
                  this.#y.config.onSuccess?.(s, this),
                    this.#y.config.onSettled?.(s, this.state.error, this),
                    this.scheduleGc();
                },
                onError,
                onFail: (s, x) => {
                  this.#n({ type: "failed", failureCount: s, error: x });
                },
                onPause: () => {
                  this.#n({ type: "pause" });
                },
                onContinue: () => {
                  this.#n({ type: "continue" });
                },
                retry: ee.options.retry,
                retryDelay: ee.options.retryDelay,
                networkMode: ee.options.networkMode,
                canRun: () => !0,
              })),
              this.#i.start()
            );
          }
          #n(s) {
            (this.state = ((x) => {
              switch (s.type) {
                case "failed":
                  return {
                    ...x,
                    fetchFailureCount: s.failureCount,
                    fetchFailureReason: s.error,
                  };
                case "pause":
                  return { ...x, fetchStatus: "paused" };
                case "continue":
                  return { ...x, fetchStatus: "fetching" };
                case "fetch":
                  return {
                    ...x,
                    ...fetchState(x.data, this.options),
                    fetchMeta: s.meta ?? null,
                  };
                case "success":
                  return {
                    ...x,
                    data: s.data,
                    dataUpdateCount: x.dataUpdateCount + 1,
                    dataUpdatedAt: s.dataUpdatedAt ?? Date.now(),
                    error: null,
                    isInvalidated: !1,
                    status: "success",
                    ...(!s.manual && {
                      fetchStatus: "idle",
                      fetchFailureCount: 0,
                      fetchFailureReason: null,
                    }),
                  };
                case "error":
                  let W = s.error;
                  if ((0, et.DV)(W) && W.revert && this.#v)
                    return { ...this.#v, fetchStatus: "idle" };
                  return {
                    ...x,
                    error: W,
                    errorUpdateCount: x.errorUpdateCount + 1,
                    errorUpdatedAt: Date.now(),
                    fetchFailureCount: x.fetchFailureCount + 1,
                    fetchFailureReason: W,
                    fetchStatus: "idle",
                    status: "error",
                  };
                case "invalidate":
                  return { ...x, isInvalidated: !0 };
                case "setState":
                  return { ...x, ...s.state };
              }
            })(this.state)),
              ee.V.batch(() => {
                this.observers.forEach((s) => {
                  s.onQueryUpdate();
                }),
                  this.#y.notify({ query: this, type: "updated", action: s });
              });
          }
        };
      function fetchState(s, x) {
        return {
          fetchFailureCount: 0,
          fetchFailureReason: null,
          fetchStatus: (0, et.Kw)(x.networkMode) ? "fetching" : "paused",
          ...(void 0 === s && { error: null, status: "pending" }),
        };
      }
    },
    48907: function (s, x, W) {
      "use strict";
      W.d(x, {
        F: function () {
          return ee;
        },
      });
      var X = W(24139),
        ee = class {
          #C;
          destroy() {
            this.clearGcTimeout();
          }
          scheduleGc() {
            this.clearGcTimeout(),
              (0, X.PN)(this.gcTime) &&
                (this.#C = setTimeout(() => {
                  this.optionalRemove();
                }, this.gcTime));
          }
          updateGcTime(s) {
            this.gcTime = Math.max(this.gcTime || 0, s ?? (X.sk ? 1 / 0 : 3e5));
          }
          clearGcTimeout() {
            this.#C && (clearTimeout(this.#C), (this.#C = void 0));
          }
        };
    },
    72008: function (s, x, W) {
      "use strict";
      W.d(x, {
        DV: function () {
          return isCancelledError;
        },
        Kw: function () {
          return canFetch;
        },
        Mz: function () {
          return createRetryer;
        },
      });
      var X = W(66474),
        ee = W(14304),
        et = W(13820),
        er = W(24139);
      function defaultRetryDelay(s) {
        return Math.min(1e3 * 2 ** s, 3e4);
      }
      function canFetch(s) {
        return (s ?? "online") !== "online" || ee.N.isOnline();
      }
      var ei = class extends Error {
        constructor(s) {
          super("CancelledError"),
            (this.revert = s?.revert),
            (this.silent = s?.silent);
        }
      };
      function isCancelledError(s) {
        return s instanceof ei;
      }
      function createRetryer(s) {
        let x,
          W = !1,
          eo = 0,
          ea = !1,
          es = (0, et.O)(),
          canContinue = () =>
            X.j.isFocused() &&
            ("always" === s.networkMode || ee.N.isOnline()) &&
            s.canRun(),
          canStart = () => canFetch(s.networkMode) && s.canRun(),
          resolve = (W) => {
            ea || ((ea = !0), s.onSuccess?.(W), x?.(), es.resolve(W));
          },
          reject = (W) => {
            ea || ((ea = !0), s.onError?.(W), x?.(), es.reject(W));
          },
          pause = () =>
            new Promise((W) => {
              (x = (s) => {
                (ea || canContinue()) && W(s);
              }),
                s.onPause?.();
            }).then(() => {
              (x = void 0), ea || s.onContinue?.();
            }),
          run = () => {
            let x;
            if (ea) return;
            let X = 0 === eo ? s.initialPromise : void 0;
            try {
              x = X ?? s.fn();
            } catch (s) {
              x = Promise.reject(s);
            }
            Promise.resolve(x)
              .then(resolve)
              .catch((x) => {
                if (ea) return;
                let X = s.retry ?? (er.sk ? 0 : 3),
                  ee = s.retryDelay ?? defaultRetryDelay,
                  et = "function" == typeof ee ? ee(eo, x) : ee,
                  ei =
                    !0 === X ||
                    ("number" == typeof X && eo < X) ||
                    ("function" == typeof X && X(eo, x));
                if (W || !ei) {
                  reject(x);
                  return;
                }
                eo++,
                  s.onFail?.(eo, x),
                  (0, er._v)(et)
                    .then(() => (canContinue() ? void 0 : pause()))
                    .then(() => {
                      W ? reject(x) : run();
                    });
              });
          };
        return {
          promise: es,
          cancel: (x) => {
            ea || (reject(new ei(x)), s.abort?.());
          },
          continue: () => (x?.(), es),
          cancelRetry: () => {
            W = !0;
          },
          continueRetry: () => {
            W = !1;
          },
          canStart,
          start: () => (canStart() ? run() : pause().then(run), es),
        };
      }
    },
    7506: function (s, x, W) {
      "use strict";
      W.d(x, {
        l: function () {
          return X;
        },
      });
      var X = class {
        constructor() {
          (this.listeners = new Set()),
            (this.subscribe = this.subscribe.bind(this));
        }
        subscribe(s) {
          return (
            this.listeners.add(s),
            this.onSubscribe(),
            () => {
              this.listeners.delete(s), this.onUnsubscribe();
            }
          );
        }
        hasListeners() {
          return this.listeners.size > 0;
        }
        onSubscribe() {}
        onUnsubscribe() {}
      };
    },
    13820: function (s, x, W) {
      "use strict";
      function pendingThenable() {
        let s, x;
        let W = new Promise((W, X) => {
          (s = W), (x = X);
        });
        function finalize(s) {
          Object.assign(W, s), delete W.resolve, delete W.reject;
        }
        return (
          (W.status = "pending"),
          W.catch(() => {}),
          (W.resolve = (x) => {
            finalize({ status: "fulfilled", value: x }), s(x);
          }),
          (W.reject = (s) => {
            finalize({ status: "rejected", reason: s }), x(s);
          }),
          W
        );
      }
      W.d(x, {
        O: function () {
          return pendingThenable;
        },
      });
    },
    24139: function (s, x, W) {
      "use strict";
      W.d(x, {
        CN: function () {
          return ee;
        },
        Ht: function () {
          return addToStart;
        },
        KC: function () {
          return resolveStaleTime;
        },
        Kp: function () {
          return timeUntilStale;
        },
        Nc: function () {
          return resolveEnabled;
        },
        PN: function () {
          return isValidTimeout;
        },
        Rm: function () {
          return hashQueryKeyByOptions;
        },
        SE: function () {
          return functionalUpdate;
        },
        VS: function () {
          return shallowEqualObjects;
        },
        VX: function () {
          return addToEnd;
        },
        X7: function () {
          return matchMutation;
        },
        Ym: function () {
          return hashKey;
        },
        ZT: function () {
          return noop;
        },
        _v: function () {
          return sleep;
        },
        _x: function () {
          return matchQuery;
        },
        cG: function () {
          return ensureQueryFn;
        },
        oE: function () {
          return replaceData;
        },
        sk: function () {
          return X;
        },
        to: function () {
          return partialMatchKey;
        },
      });
      var X = "undefined" == typeof window || "Deno" in globalThis;
      function noop() {}
      function functionalUpdate(s, x) {
        return "function" == typeof s ? s(x) : s;
      }
      function isValidTimeout(s) {
        return "number" == typeof s && s >= 0 && s !== 1 / 0;
      }
      function timeUntilStale(s, x) {
        return Math.max(s + (x || 0) - Date.now(), 0);
      }
      function resolveStaleTime(s, x) {
        return "function" == typeof s ? s(x) : s;
      }
      function resolveEnabled(s, x) {
        return "function" == typeof s ? s(x) : s;
      }
      function matchQuery(s, x) {
        let {
          type: W = "all",
          exact: X,
          fetchStatus: ee,
          predicate: et,
          queryKey: er,
          stale: ei,
        } = s;
        if (er) {
          if (X) {
            if (x.queryHash !== hashQueryKeyByOptions(er, x.options)) return !1;
          } else if (!partialMatchKey(x.queryKey, er)) return !1;
        }
        if ("all" !== W) {
          let s = x.isActive();
          if (("active" === W && !s) || ("inactive" === W && s)) return !1;
        }
        return (
          ("boolean" != typeof ei || x.isStale() === ei) &&
          (!ee || ee === x.state.fetchStatus) &&
          (!et || !!et(x))
        );
      }
      function matchMutation(s, x) {
        let { exact: W, status: X, predicate: ee, mutationKey: et } = s;
        if (et) {
          if (!x.options.mutationKey) return !1;
          if (W) {
            if (hashKey(x.options.mutationKey) !== hashKey(et)) return !1;
          } else if (!partialMatchKey(x.options.mutationKey, et)) return !1;
        }
        return (!X || x.state.status === X) && (!ee || !!ee(x));
      }
      function hashQueryKeyByOptions(s, x) {
        let W = x?.queryKeyHashFn || hashKey;
        return W(s);
      }
      function hashKey(s) {
        return JSON.stringify(s, (s, x) =>
          isPlainObject(x)
            ? Object.keys(x)
                .sort()
                .reduce((s, W) => ((s[W] = x[W]), s), {})
            : x
        );
      }
      function partialMatchKey(s, x) {
        return (
          s === x ||
          (typeof s == typeof x &&
            !!s &&
            !!x &&
            "object" == typeof s &&
            "object" == typeof x &&
            !Object.keys(x).some((W) => !partialMatchKey(s[W], x[W])))
        );
      }
      function shallowEqualObjects(s, x) {
        if (!x || Object.keys(s).length !== Object.keys(x).length) return !1;
        for (let W in s) if (s[W] !== x[W]) return !1;
        return !0;
      }
      function isPlainArray(s) {
        return Array.isArray(s) && s.length === Object.keys(s).length;
      }
      function isPlainObject(s) {
        if (!hasObjectPrototype(s)) return !1;
        let x = s.constructor;
        if (void 0 === x) return !0;
        let W = x.prototype;
        return (
          !!(hasObjectPrototype(W) && W.hasOwnProperty("isPrototypeOf")) &&
          Object.getPrototypeOf(s) === Object.prototype
        );
      }
      function hasObjectPrototype(s) {
        return "[object Object]" === Object.prototype.toString.call(s);
      }
      function sleep(s) {
        return new Promise((x) => {
          setTimeout(x, s);
        });
      }
      function replaceData(s, x, W) {
        return "function" == typeof W.structuralSharing
          ? W.structuralSharing(s, x)
          : !1 !== W.structuralSharing
          ? (function replaceEqualDeep(s, x) {
              if (s === x) return s;
              let W = isPlainArray(s) && isPlainArray(x);
              if (W || (isPlainObject(s) && isPlainObject(x))) {
                let X = W ? s : Object.keys(s),
                  ee = X.length,
                  et = W ? x : Object.keys(x),
                  er = et.length,
                  ei = W ? [] : {},
                  eo = 0;
                for (let ee = 0; ee < er; ee++) {
                  let er = W ? ee : et[ee];
                  ((!W && X.includes(er)) || W) &&
                  void 0 === s[er] &&
                  void 0 === x[er]
                    ? ((ei[er] = void 0), eo++)
                    : ((ei[er] = replaceEqualDeep(s[er], x[er])),
                      ei[er] === s[er] && void 0 !== s[er] && eo++);
                }
                return ee === er && eo === ee ? s : ei;
              }
              return x;
            })(s, x)
          : x;
      }
      function addToEnd(s, x, W = 0) {
        let X = [...s, x];
        return W && X.length > W ? X.slice(1) : X;
      }
      function addToStart(s, x, W = 0) {
        let X = [x, ...s];
        return W && X.length > W ? X.slice(0, -1) : X;
      }
      var ee = Symbol();
      function ensureQueryFn(s, x) {
        return !s.queryFn && x?.initialPromise
          ? () => x.initialPromise
          : s.queryFn && s.queryFn !== ee
          ? s.queryFn
          : () => Promise.reject(Error(`Missing queryFn: '${s.queryHash}'`));
      }
    },
    30202: function (s, x, W) {
      "use strict";
      W.d(x, {
        NL: function () {
          return useQueryClient;
        },
        aH: function () {
          return QueryClientProvider;
        },
      });
      var X = W(67294),
        ee = W(85893),
        et = X.createContext(void 0),
        useQueryClient = (s) => {
          let x = X.useContext(et);
          if (s) return s;
          if (!x)
            throw Error(
              "No QueryClient set, use QueryClientProvider to set one"
            );
          return x;
        },
        QueryClientProvider = ({ client: s, children: x }) => (
          X.useEffect(
            () => (
              s.mount(),
              () => {
                s.unmount();
              }
            ),
            [s]
          ),
          (0, ee.jsx)(et.Provider, { value: s, children: x })
        );
    },
    6590: function (s, x, W) {
      "use strict";
      async function disconnect(s, x = {}) {
        let W;
        if (x.connector) W = x.connector;
        else {
          let { connections: x, current: X } = s.state,
            ee = x.get(X);
          W = ee?.connector;
        }
        let X = s.state.connections;
        W &&
          (await W.disconnect(),
          W.emitter.off("change", s._internal.events.change),
          W.emitter.off("disconnect", s._internal.events.disconnect),
          W.emitter.on("connect", s._internal.events.connect),
          X.delete(W.uid)),
          s.setState((s) => {
            if (0 === X.size)
              return {
                ...s,
                connections: new Map(),
                current: null,
                status: "disconnected",
              };
            let x = X.values().next().value;
            return { ...s, connections: new Map(X), current: x.connector.uid };
          });
        {
          let x = s.state.current;
          if (!x) return;
          let W = s.state.connections.get(x)?.connector;
          if (!W) return;
          await s.storage?.setItem("recentConnectorId", W.id);
        }
      }
      W.d(x, {
        z: function () {
          return disconnect;
        },
      });
    },
    52425: function (s, x, W) {
      "use strict";
      function getAccount(s) {
        let x = s.state.current,
          W = s.state.connections.get(x),
          X = W?.accounts,
          ee = X?.[0],
          et = s.chains.find((s) => s.id === W?.chainId),
          er = s.state.status;
        switch (er) {
          case "connected":
            return {
              address: ee,
              addresses: X,
              chain: et,
              chainId: W?.chainId,
              connector: W?.connector,
              isConnected: !0,
              isConnecting: !1,
              isDisconnected: !1,
              isReconnecting: !1,
              status: er,
            };
          case "reconnecting":
            return {
              address: ee,
              addresses: X,
              chain: et,
              chainId: W?.chainId,
              connector: W?.connector,
              isConnected: !!ee,
              isConnecting: !1,
              isDisconnected: !1,
              isReconnecting: !0,
              status: er,
            };
          case "connecting":
            return {
              address: ee,
              addresses: X,
              chain: et,
              chainId: W?.chainId,
              connector: W?.connector,
              isConnected: !1,
              isConnecting: !0,
              isDisconnected: !1,
              isReconnecting: !1,
              status: er,
            };
          case "disconnected":
            return {
              address: void 0,
              addresses: void 0,
              chain: void 0,
              chainId: void 0,
              connector: void 0,
              isConnected: !1,
              isConnecting: !1,
              isDisconnected: !0,
              isReconnecting: !1,
              status: er,
            };
        }
      }
      W.d(x, {
        D: function () {
          return getAccount;
        },
      });
    },
    79869: function (s, x, W) {
      "use strict";
      W.d(x, {
        s: function () {
          return getBalance_getBalance;
        },
      });
      var X = W(95946),
        ee = W(61836),
        et = W(15229),
        er = W(88930),
        ei = W(81946),
        eo = W(84192);
      function getUnit(s) {
        return "number" == typeof s ? s : "wei" === s ? 0 : Math.abs(eo.Bd[s]);
      }
      var ea = W(97405),
        es = W(9884);
      async function multicall_multicall(s, x) {
        let { allowFailure: W = !0, chainId: X, contracts: ee, ...et } = x,
          er = s.getClient({ chainId: X }),
          eo = (0, ei.s)(er, es.A, "multicall");
        return eo({ allowFailure: W, contracts: ee, ...et });
      }
      var el = W(88819);
      async function readContracts(s, x) {
        let { allowFailure: W = !0, blockNumber: X, blockTag: ee, ...et } = x,
          er = x.contracts;
        try {
          let x = {};
          for (let [W, X] of er.entries()) {
            let ee = X.chainId ?? s.state.chainId;
            x[ee] || (x[ee] = []), x[ee]?.push({ contract: X, index: W });
          }
          let ei = (
              await Promise.all(
                Object.entries(x).map(([x, er]) =>
                  multicall_multicall(s, {
                    ...et,
                    allowFailure: W,
                    blockNumber: X,
                    blockTag: ee,
                    chainId: Number.parseInt(x),
                    contracts: er.map(({ contract: s }) => s),
                  })
                )
              )
            ).flat(),
            eo = Object.values(x).flatMap((s) => s.map(({ index: s }) => s));
          return ei.reduce((s, x, W) => (s && (s[eo[W]] = x), s), []);
        } catch (x) {
          if (x instanceof ea.uq) throw x;
          let promises = () =>
            er.map((x) =>
              (function (s, x) {
                let { chainId: W, ...X } = x,
                  ee = s.getClient({ chainId: W }),
                  et = (0, ei.s)(ee, el.L, "readContract");
                return et(X);
              })(s, { ...x, blockNumber: X, blockTag: ee })
            );
          if (W)
            return (await Promise.allSettled(promises())).map((s) =>
              "fulfilled" === s.status
                ? { result: s.value, status: "success" }
                : { error: s.reason, result: void 0, status: "failure" }
            );
          return await Promise.all(promises());
        }
      }
      async function getBalance_getBalance(s, x) {
        let {
          address: W,
          blockNumber: eo,
          blockTag: ea,
          chainId: es,
          token: el,
          unit: ec = "ether",
        } = x;
        if (el)
          try {
            return await getTokenBalance(s, {
              balanceAddress: W,
              chainId: es,
              symbolType: "string",
              tokenAddress: el,
            });
          } catch (x) {
            if ("ContractFunctionExecutionError" === x.name) {
              let x = await getTokenBalance(s, {
                  balanceAddress: W,
                  chainId: es,
                  symbolType: "bytes32",
                  tokenAddress: el,
                }),
                et = (0, X.rR)((0, ee.f)(x.symbol, { dir: "right" }));
              return { ...x, symbol: et };
            }
            throw x;
          }
        let eu = s.getClient({ chainId: es }),
          ed = (0, ei.s)(eu, er.s, "getBalance"),
          eh = await ed(
            eo ? { address: W, blockNumber: eo } : { address: W, blockTag: ea }
          ),
          ep = s.chains.find((s) => s.id === es) ?? eu.chain;
        return {
          decimals: ep.nativeCurrency.decimals,
          formatted: (0, et.b)(eh, getUnit(ec)),
          symbol: ep.nativeCurrency.symbol,
          value: eh,
        };
      }
      async function getTokenBalance(s, x) {
        let {
            balanceAddress: W,
            chainId: X,
            symbolType: ee,
            tokenAddress: er,
            unit: ei,
          } = x,
          eo = {
            abi: [
              {
                type: "function",
                name: "balanceOf",
                stateMutability: "view",
                inputs: [{ type: "address" }],
                outputs: [{ type: "uint256" }],
              },
              {
                type: "function",
                name: "decimals",
                stateMutability: "view",
                inputs: [],
                outputs: [{ type: "uint8" }],
              },
              {
                type: "function",
                name: "symbol",
                stateMutability: "view",
                inputs: [],
                outputs: [{ type: ee }],
              },
            ],
            address: er,
          },
          [ea, es, el] = await readContracts(s, {
            allowFailure: !1,
            contracts: [
              { ...eo, functionName: "balanceOf", args: [W], chainId: X },
              { ...eo, functionName: "decimals", chainId: X },
              { ...eo, functionName: "symbol", chainId: X },
            ],
          }),
          ec = (0, et.b)(ea ?? "0", getUnit(ei ?? es));
        return { decimals: es, formatted: ec, symbol: el, value: ea };
      }
    },
    75230: function (s, x, W) {
      "use strict";
      W.d(x, {
        e: function () {
          return getConnectorClient;
        },
      });
      var X = W(94898),
        ee = W(22319),
        et = W(14503),
        er = W(45775),
        ei = W(87675);
      async function getConnectorClient(s, x = {}) {
        let W;
        if (x.connector) {
          let { connector: X } = x;
          if (
            "reconnecting" === s.state.status &&
            !X.getAccounts &&
            !X.getChainId
          )
            throw new ei.$S({ connector: X });
          let [ee, et] = await Promise.all([X.getAccounts(), X.getChainId()]);
          W = { accounts: ee, chainId: et, connector: X };
        } else W = s.state.connections.get(s.state.current);
        if (!W) throw new ei.aH();
        let eo = x.chainId ?? W.chainId,
          ea = await W.connector.getChainId();
        if (ea !== W.chainId)
          throw new ei.XZ({
            connectionChainId: W.chainId,
            connectorChainId: ea,
          });
        let es = W.connector;
        if (es.getClient) return es.getClient({ chainId: eo });
        let el = (0, et.T)(x.account ?? W.accounts[0]);
        if (
          ((el.address = (0, er.K)(el.address)),
          x.account &&
            !W.accounts.some(
              (s) => s.toLowerCase() === el.address.toLowerCase()
            ))
        )
          throw new ei.JK({ address: el.address, connector: es });
        let ec = s.chains.find((s) => s.id === eo),
          eu = await W.connector.getProvider({ chainId: eo });
        return (0, X.e)({
          account: el,
          chain: ec,
          name: "Connector Client",
          transport: (s) =>
            (function (s, x = {}) {
              let {
                key: W = "custom",
                methods: X,
                name: et = "Custom Provider",
                retryDelay: er,
              } = x;
              return ({ retryCount: ei }) =>
                (0, ee.q)({
                  key: W,
                  methods: X,
                  name: et,
                  request: s.request.bind(s),
                  retryCount: x.retryCount ?? ei,
                  retryDelay: er,
                  type: "custom",
                });
            })(eu)({ ...s, retryCount: 0 }),
        });
      }
    },
    51785: function (s, x, W) {
      "use strict";
      W.d(x, {
        G: function () {
          return reconnect;
        },
      });
      let X = !1;
      async function reconnect(s, x = {}) {
        let W;
        if (X) return [];
        (X = !0),
          s.setState((s) => ({
            ...s,
            status: s.current ? "reconnecting" : "connecting",
          }));
        let ee = [];
        if (x.connectors?.length)
          for (let W of x.connectors) {
            let x;
            (x = "function" == typeof W ? s._internal.connectors.setup(W) : W),
              ee.push(x);
          }
        else ee.push(...s.connectors);
        try {
          W = await s.storage?.getItem("recentConnectorId");
        } catch {}
        let et = {};
        for (let [, x] of s.state.connections) et[x.connector.id] = 1;
        W && (et[W] = 0);
        let er =
            Object.keys(et).length > 0
              ? [...ee].sort((s, x) => (et[s.id] ?? 10) - (et[x.id] ?? 10))
              : ee,
          ei = !1,
          eo = [],
          ea = [];
        for (let x of er) {
          let W = await x.getProvider().catch(() => void 0);
          if (!W || ea.some((s) => s === W)) continue;
          let X = await x.isAuthorized();
          if (!X) continue;
          let ee = await x.connect({ isReconnecting: !0 }).catch(() => null);
          ee &&
            (x.emitter.off("connect", s._internal.events.connect),
            x.emitter.on("change", s._internal.events.change),
            x.emitter.on("disconnect", s._internal.events.disconnect),
            s.setState((s) => {
              let W = new Map(ei ? s.connections : new Map()).set(x.uid, {
                accounts: ee.accounts,
                chainId: ee.chainId,
                connector: x,
              });
              return { ...s, current: ei ? s.current : x.uid, connections: W };
            }),
            eo.push({
              accounts: ee.accounts,
              chainId: ee.chainId,
              connector: x,
            }),
            ea.push(W),
            (ei = !0));
        }
        return (
          ("reconnecting" === s.state.status ||
            "connecting" === s.state.status) &&
            (ei
              ? s.setState((s) => ({ ...s, status: "connected" }))
              : s.setState((s) => ({
                  ...s,
                  connections: new Map(),
                  current: null,
                  status: "disconnected",
                }))),
          (X = !1),
          eo
        );
      }
    },
    66357: function (s, x, W) {
      "use strict";
      W.d(x, {
        T: function () {
          return sendTransaction;
        },
      });
      var X = W(50025),
        ee = W(81946),
        et = W(75230);
      async function sendTransaction(s, x) {
        let W;
        let { account: er, chainId: ei, connector: eo, ...ea } = x;
        W =
          "object" == typeof er && er?.type === "local"
            ? s.getClient({ chainId: ei })
            : await (0, et.e)(s, {
                account: er ?? void 0,
                chainId: ei,
                connector: eo,
              });
        let es = (0, ee.s)(W, X.T, "sendTransaction"),
          el = await es({
            ...ea,
            ...(er ? { account: er } : {}),
            chain: ei ? { id: ei } : null,
            gas: ea.gas ?? void 0,
          });
        return el;
      }
    },
    14679: function (s, x, W) {
      "use strict";
      W.d(x, {
        e: function () {
          return waitForTransactionReceipt;
        },
      });
      var X = W(95946),
        ee = W(51973),
        et = W(23147),
        er = W(78407),
        ei = W(81946);
      async function waitForTransactionReceipt(s, x) {
        let { chainId: W, timeout: eo = 0, ...ea } = x,
          es = s.getClient({ chainId: W }),
          el = (0, ei.s)(es, ee.e, "waitForTransactionReceipt"),
          ec = await el({ ...ea, timeout: eo });
        if ("reverted" === ec.status) {
          let s = (0, ei.s)(es, et.f, "getTransaction"),
            x = await s({ hash: ec.transactionHash }),
            W = (0, ei.s)(es, er.R, "call"),
            ee = await W({
              ...x,
              data: x.input,
              gasPrice: "eip1559" !== x.type ? x.gasPrice : void 0,
              maxFeePerGas: "eip1559" === x.type ? x.maxFeePerGas : void 0,
              maxPriorityFeePerGas:
                "eip1559" === x.type ? x.maxPriorityFeePerGas : void 0,
            }),
            eo = ee?.data
              ? (0, X.rR)(`0x${ee.data.substring(138)}`)
              : "unknown reason";
          throw Error(eo);
        }
        return { ...ec, chainId: es.chain.id };
      }
    },
    33397: function (s, x, W) {
      "use strict";
      W.d(x, {
        u: function () {
          return watchAccount;
        },
      });
      var X = W(74751),
        ee = W(52425);
      function watchAccount(s, x) {
        let { onChange: W } = x;
        return s.subscribe(() => (0, ee.D)(s), W, {
          equalityFn(s, x) {
            let { connector: W, ...ee } = s,
              { connector: et, ...er } = x;
            return (0, X.v)(ee, er) && W?.id === et?.id && W?.uid === et?.uid;
          },
        });
      }
    },
    82693: function (s, x, W) {
      "use strict";
      W.d(x, {
        n: function () {
          return writeContract_writeContract;
        },
      });
      var X = W(14503),
        ee = W(8998),
        et = W(55629),
        er = W(72365),
        ei = W(93714),
        eo = W(50025);
      async function writeContract(s, x) {
        let {
          abi: W,
          account: ea = s.account,
          address: es,
          args: el,
          dataSuffix: ec,
          functionName: eu,
          ...ed
        } = x;
        if (void 0 === ea)
          throw new ee.o({ docsPath: "/docs/contract/writeContract" });
        let eh = ea ? (0, X.T)(ea) : null,
          ep = (0, et.R)({ abi: W, args: el, functionName: eu });
        try {
          return await (0, ei.s)(
            s,
            eo.T,
            "sendTransaction"
          )({
            data: `${ep}${ec ? ec.replace("0x", "") : ""}`,
            to: es,
            account: eh,
            ...ed,
          });
        } catch (s) {
          throw (0, er.S)(s, {
            abi: W,
            address: es,
            args: el,
            docsPath: "/docs/contract/writeContract",
            functionName: eu,
            sender: eh?.address,
          });
        }
      }
      var ea = W(81946),
        es = W(75230);
      async function writeContract_writeContract(s, x) {
        let W;
        let { account: X, chainId: ee, connector: et, ...er } = x;
        W =
          "object" == typeof X && X?.type === "local"
            ? s.getClient({ chainId: ee })
            : await (0, es.e)(s, {
                account: X ?? void 0,
                chainId: ee,
                connector: et,
              });
        let ei = (0, ea.s)(W, writeContract, "writeContract"),
          eo = await ei({
            ...er,
            ...(X ? { account: X } : {}),
            chain: ee ? { id: ee } : null,
          });
        return eo;
      }
    },
    7066: function (s, x, W) {
      "use strict";
      W.d(x, {
        G: function () {
          return BaseError;
        },
      });
      var X,
        ee,
        et = W(79983);
      let getVersion = () => `@wagmi/core@${et.i}`;
      var __classPrivateFieldGet = function (s, x, W, X) {
        if ("a" === W && !X)
          throw TypeError("Private accessor was defined without a getter");
        if ("function" == typeof x ? s !== x || !X : !x.has(s))
          throw TypeError(
            "Cannot read private member from an object whose class did not declare it"
          );
        return "m" === W ? X : "a" === W ? X.call(s) : X ? X.value : x.get(s);
      };
      let BaseError = class BaseError extends Error {
        get docsBaseUrl() {
          return "https://wagmi.sh/core";
        }
        get version() {
          return getVersion();
        }
        constructor(s, x = {}) {
          super(),
            X.add(this),
            Object.defineProperty(this, "details", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "docsPath", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "metaMessages", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "shortMessage", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "WagmiCoreError",
            });
          let W =
              x.cause instanceof BaseError
                ? x.cause.details
                : x.cause?.message
                ? x.cause.message
                : x.details,
            ee =
              (x.cause instanceof BaseError && x.cause.docsPath) || x.docsPath;
          (this.message = [
            s || "An error occurred.",
            "",
            ...(x.metaMessages ? [...x.metaMessages, ""] : []),
            ...(ee
              ? [
                  `Docs: ${this.docsBaseUrl}${ee}.html${
                    x.docsSlug ? `#${x.docsSlug}` : ""
                  }`,
                ]
              : []),
            ...(W ? [`Details: ${W}`] : []),
            `Version: ${this.version}`,
          ].join("\n")),
            x.cause && (this.cause = x.cause),
            (this.details = W),
            (this.docsPath = ee),
            (this.metaMessages = x.metaMessages),
            (this.shortMessage = s);
        }
        walk(s) {
          return __classPrivateFieldGet(this, X, "m", ee).call(this, this, s);
        }
      };
      (X = new WeakSet()),
        (ee = function _BaseError_walk(s, x) {
          return x?.(s)
            ? s
            : s.cause
            ? __classPrivateFieldGet(this, X, "m", _BaseError_walk).call(
                this,
                s.cause,
                x
              )
            : s;
        });
    },
    87675: function (s, x, W) {
      "use strict";
      W.d(x, {
        $S: function () {
          return ConnectorUnavailableReconnectingError;
        },
        JK: function () {
          return ConnectorAccountNotFoundError;
        },
        X4: function () {
          return ChainNotConfiguredError;
        },
        XZ: function () {
          return ConnectorChainMismatchError;
        },
        aH: function () {
          return ConnectorNotConnectedError;
        },
        wi: function () {
          return ConnectorAlreadyConnectedError;
        },
      });
      var X = W(7066);
      let ChainNotConfiguredError = class ChainNotConfiguredError extends X.G {
        constructor() {
          super("Chain not configured."),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "ChainNotConfiguredError",
            });
        }
      };
      let ConnectorAlreadyConnectedError = class ConnectorAlreadyConnectedError extends X.G {
        constructor() {
          super("Connector already connected."),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "ConnectorAlreadyConnectedError",
            });
        }
      };
      let ConnectorNotConnectedError = class ConnectorNotConnectedError extends X.G {
        constructor() {
          super("Connector not connected."),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "ConnectorNotConnectedError",
            });
        }
      };
      let ConnectorAccountNotFoundError = class ConnectorAccountNotFoundError extends X.G {
        constructor({ address: s, connector: x }) {
          super(`Account "${s}" not found for connector "${x.name}".`),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "ConnectorAccountNotFoundError",
            });
        }
      };
      let ConnectorChainMismatchError = class ConnectorChainMismatchError extends X.G {
        constructor({ connectionChainId: s, connectorChainId: x }) {
          super(
            `The current chain of the connector (id: ${x}) does not match the connection's chain (id: ${s}).`,
            {
              metaMessages: [
                `Current Chain ID:  ${x}`,
                `Expected Chain ID: ${s}`,
              ],
            }
          ),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "ConnectorChainMismatchError",
            });
        }
      };
      let ConnectorUnavailableReconnectingError = class ConnectorUnavailableReconnectingError extends X.G {
        constructor({ connector: s }) {
          super(`Connector "${s.name}" unavailable while reconnecting.`, {
            details:
              "During the reconnection step, the only connector methods guaranteed to be available are: `id`, `name`, `type`, `uid`. All other methods are not guaranteed to be available until reconnection completes and connectors are fully restored. This error commonly occurs for connectors that asynchronously inject after reconnection has already started.",
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "ConnectorUnavailableReconnectingError",
            });
        }
      };
    },
    74751: function (s, x, W) {
      "use strict";
      W.d(x, {
        v: function () {
          return function deepEqual(s, x) {
            if (s === x) return !0;
            if (s && x && "object" == typeof s && "object" == typeof x) {
              let W, X;
              if (s.constructor !== x.constructor) return !1;
              if (Array.isArray(s) && Array.isArray(x)) {
                if ((W = s.length) !== x.length) return !1;
                for (X = W; 0 != X--; ) if (!deepEqual(s[X], x[X])) return !1;
                return !0;
              }
              if (s.valueOf !== Object.prototype.valueOf)
                return s.valueOf() === x.valueOf();
              if (s.toString !== Object.prototype.toString)
                return s.toString() === x.toString();
              let ee = Object.keys(s);
              if ((W = ee.length) !== Object.keys(x).length) return !1;
              for (X = W; 0 != X--; )
                if (!Object.prototype.hasOwnProperty.call(x, ee[X])) return !1;
              for (X = W; 0 != X--; ) {
                let W = ee[X];
                if (W && !deepEqual(s[W], x[W])) return !1;
              }
              return !0;
            }
            return s != s && x != x;
          };
        },
      });
    },
    81946: function (s, x, W) {
      "use strict";
      function getAction(s, x, W) {
        let X = s[x.name];
        if ("function" == typeof X) return X;
        let ee = s[W];
        return "function" == typeof ee ? ee : (W) => x(s, W);
      }
      W.d(x, {
        s: function () {
          return getAction;
        },
      });
    },
    79983: function (s, x, W) {
      "use strict";
      W.d(x, {
        i: function () {
          return X;
        },
      });
      let X = "2.16.3";
    },
    84917: function (s, x, W) {
      "use strict";
      function execTyped(s, x) {
        let W = s.exec(x);
        return W?.groups;
      }
      W.d(x, {
        Zw: function () {
          return execTyped;
        },
        cN: function () {
          return et;
        },
        eL: function () {
          return X;
        },
        lh: function () {
          return ee;
        },
      });
      let X = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
        ee =
          /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/,
        et = /^\(.+?\).*?$/;
    },
    54146: function (s, x, W) {
      "use strict";
      W.d(x, {
        v: function () {
          return X;
        },
      });
      var X = W(26729);
    },
    36609: function (s, x, W) {
      "use strict";
      W.d(x, {
        D0: function () {
          return ef;
        },
        ZP: function () {
          return ep;
        },
        t: function () {
          return eg;
        },
      });
      let isString = (s) => "string" == typeof s,
        defer = () => {
          let s, x;
          let W = new Promise((W, X) => {
            (s = W), (x = X);
          });
          return (W.resolve = s), (W.reject = x), W;
        },
        makeString = (s) => (null == s ? "" : "" + s),
        copy = (s, x, W) => {
          s.forEach((s) => {
            x[s] && (W[s] = x[s]);
          });
        },
        X = /###/g,
        cleanKey = (s) => (s && s.indexOf("###") > -1 ? s.replace(X, ".") : s),
        canNotTraverseDeeper = (s) => !s || isString(s),
        getLastOfPath = (s, x, W) => {
          let X = isString(x) ? x.split(".") : x,
            ee = 0;
          for (; ee < X.length - 1; ) {
            if (canNotTraverseDeeper(s)) return {};
            let x = cleanKey(X[ee]);
            !s[x] && W && (s[x] = new W()),
              (s = Object.prototype.hasOwnProperty.call(s, x) ? s[x] : {}),
              ++ee;
          }
          return canNotTraverseDeeper(s) ? {} : { obj: s, k: cleanKey(X[ee]) };
        },
        setPath = (s, x, W) => {
          let { obj: X, k: ee } = getLastOfPath(s, x, Object);
          if (void 0 !== X || 1 === x.length) {
            X[ee] = W;
            return;
          }
          let et = x[x.length - 1],
            er = x.slice(0, x.length - 1),
            ei = getLastOfPath(s, er, Object);
          for (; void 0 === ei.obj && er.length; )
            (et = `${er[er.length - 1]}.${et}`),
              (ei = getLastOfPath(
                s,
                (er = er.slice(0, er.length - 1)),
                Object
              )) &&
                ei.obj &&
                void 0 !== ei.obj[`${ei.k}.${et}`] &&
                (ei.obj = void 0);
          ei.obj[`${ei.k}.${et}`] = W;
        },
        pushPath = (s, x, W, X) => {
          let { obj: ee, k: et } = getLastOfPath(s, x, Object);
          (ee[et] = ee[et] || []), ee[et].push(W);
        },
        getPath = (s, x) => {
          let { obj: W, k: X } = getLastOfPath(s, x);
          if (W) return W[X];
        },
        getPathWithDefaults = (s, x, W) => {
          let X = getPath(s, W);
          return void 0 !== X ? X : getPath(x, W);
        },
        deepExtend = (s, x, W) => {
          for (let X in x)
            "__proto__" !== X &&
              "constructor" !== X &&
              (X in s
                ? isString(s[X]) ||
                  s[X] instanceof String ||
                  isString(x[X]) ||
                  x[X] instanceof String
                  ? W && (s[X] = x[X])
                  : deepExtend(s[X], x[X], W)
                : (s[X] = x[X]));
          return s;
        },
        regexEscape = (s) =>
          s.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
      var ee = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;",
      };
      let escape = (s) =>
          isString(s) ? s.replace(/[&<>"'\/]/g, (s) => ee[s]) : s,
        et = [" ", ",", "?", "!", ";"],
        er = new (class {
          constructor(s) {
            (this.capacity = s),
              (this.regExpMap = new Map()),
              (this.regExpQueue = []);
          }
          getRegExp(s) {
            let x = this.regExpMap.get(s);
            if (void 0 !== x) return x;
            let W = new RegExp(s);
            return (
              this.regExpQueue.length === this.capacity &&
                this.regExpMap.delete(this.regExpQueue.shift()),
              this.regExpMap.set(s, W),
              this.regExpQueue.push(s),
              W
            );
          }
        })(20),
        looksLikeObjectPath = (s, x, W) => {
          (x = x || ""), (W = W || "");
          let X = et.filter((s) => 0 > x.indexOf(s) && 0 > W.indexOf(s));
          if (0 === X.length) return !0;
          let ee = er.getRegExp(
              `(${X.map((s) => ("?" === s ? "\\?" : s)).join("|")})`
            ),
            ei = !ee.test(s);
          if (!ei) {
            let x = s.indexOf(W);
            x > 0 && !ee.test(s.substring(0, x)) && (ei = !0);
          }
          return ei;
        },
        deepFind = function (s, x) {
          let W =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : ".";
          if (!s) return;
          if (s[x]) return s[x];
          let X = x.split(W),
            ee = s;
          for (let s = 0; s < X.length; ) {
            let x;
            if (!ee || "object" != typeof ee) return;
            let et = "";
            for (let er = s; er < X.length; ++er)
              if (
                (er !== s && (et += W), (et += X[er]), void 0 !== (x = ee[et]))
              ) {
                if (
                  ["string", "number", "boolean"].indexOf(typeof x) > -1 &&
                  er < X.length - 1
                )
                  continue;
                s += er - s + 1;
                break;
              }
            ee = x;
          }
          return ee;
        },
        getCleanedCode = (s) => s && s.replace("_", "-"),
        ei = {
          type: "logger",
          log(s) {
            this.output("log", s);
          },
          warn(s) {
            this.output("warn", s);
          },
          error(s) {
            this.output("error", s);
          },
          output(s, x) {
            console && console[s] && console[s].apply(console, x);
          },
        };
      let Logger = class Logger {
        constructor(s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          this.init(s, x);
        }
        init(s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          (this.prefix = x.prefix || "i18next:"),
            (this.logger = s || ei),
            (this.options = x),
            (this.debug = x.debug);
        }
        log() {
          for (var s = arguments.length, x = Array(s), W = 0; W < s; W++)
            x[W] = arguments[W];
          return this.forward(x, "log", "", !0);
        }
        warn() {
          for (var s = arguments.length, x = Array(s), W = 0; W < s; W++)
            x[W] = arguments[W];
          return this.forward(x, "warn", "", !0);
        }
        error() {
          for (var s = arguments.length, x = Array(s), W = 0; W < s; W++)
            x[W] = arguments[W];
          return this.forward(x, "error", "");
        }
        deprecate() {
          for (var s = arguments.length, x = Array(s), W = 0; W < s; W++)
            x[W] = arguments[W];
          return this.forward(x, "warn", "WARNING DEPRECATED: ", !0);
        }
        forward(s, x, W, X) {
          return X && !this.debug
            ? null
            : (isString(s[0]) && (s[0] = `${W}${this.prefix} ${s[0]}`),
              this.logger[x](s));
        }
        create(s) {
          return new Logger(this.logger, {
            prefix: `${this.prefix}:${s}:`,
            ...this.options,
          });
        }
        clone(s) {
          return (
            ((s = s || this.options).prefix = s.prefix || this.prefix),
            new Logger(this.logger, s)
          );
        }
      };
      var eo = new Logger();
      let EventEmitter = class EventEmitter {
        constructor() {
          this.observers = {};
        }
        on(s, x) {
          return (
            s.split(" ").forEach((s) => {
              this.observers[s] || (this.observers[s] = new Map());
              let W = this.observers[s].get(x) || 0;
              this.observers[s].set(x, W + 1);
            }),
            this
          );
        }
        off(s, x) {
          if (this.observers[s]) {
            if (!x) {
              delete this.observers[s];
              return;
            }
            this.observers[s].delete(x);
          }
        }
        emit(s) {
          for (
            var x = arguments.length, W = Array(x > 1 ? x - 1 : 0), X = 1;
            X < x;
            X++
          )
            W[X - 1] = arguments[X];
          if (this.observers[s]) {
            let x = Array.from(this.observers[s].entries());
            x.forEach((s) => {
              let [x, X] = s;
              for (let s = 0; s < X; s++) x(...W);
            });
          }
          if (this.observers["*"]) {
            let x = Array.from(this.observers["*"].entries());
            x.forEach((x) => {
              let [X, ee] = x;
              for (let x = 0; x < ee; x++) X.apply(X, [s, ...W]);
            });
          }
        }
      };
      let ResourceStore = class ResourceStore extends EventEmitter {
        constructor(s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : { ns: ["translation"], defaultNS: "translation" };
          super(),
            (this.data = s || {}),
            (this.options = x),
            void 0 === this.options.keySeparator &&
              (this.options.keySeparator = "."),
            void 0 === this.options.ignoreJSONStructure &&
              (this.options.ignoreJSONStructure = !0);
        }
        addNamespaces(s) {
          0 > this.options.ns.indexOf(s) && this.options.ns.push(s);
        }
        removeNamespaces(s) {
          let x = this.options.ns.indexOf(s);
          x > -1 && this.options.ns.splice(x, 1);
        }
        getResource(s, x, W) {
          let X,
            ee =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {},
            et =
              void 0 !== ee.keySeparator
                ? ee.keySeparator
                : this.options.keySeparator,
            er =
              void 0 !== ee.ignoreJSONStructure
                ? ee.ignoreJSONStructure
                : this.options.ignoreJSONStructure;
          s.indexOf(".") > -1
            ? (X = s.split("."))
            : ((X = [s, x]),
              W &&
                (Array.isArray(W)
                  ? X.push(...W)
                  : isString(W) && et
                  ? X.push(...W.split(et))
                  : X.push(W)));
          let ei = getPath(this.data, X);
          return (!ei &&
            !x &&
            !W &&
            s.indexOf(".") > -1 &&
            ((s = X[0]), (x = X[1]), (W = X.slice(2).join("."))),
          !ei && er && isString(W))
            ? deepFind(this.data && this.data[s] && this.data[s][x], W, et)
            : ei;
        }
        addResource(s, x, W, X) {
          let ee =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : { silent: !1 },
            et =
              void 0 !== ee.keySeparator
                ? ee.keySeparator
                : this.options.keySeparator,
            er = [s, x];
          W && (er = er.concat(et ? W.split(et) : W)),
            s.indexOf(".") > -1 && ((er = s.split(".")), (X = x), (x = er[1])),
            this.addNamespaces(x),
            setPath(this.data, er, X),
            ee.silent || this.emit("added", s, x, W, X);
        }
        addResources(s, x, W) {
          let X =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : { silent: !1 };
          for (let X in W)
            (isString(W[X]) || Array.isArray(W[X])) &&
              this.addResource(s, x, X, W[X], { silent: !0 });
          X.silent || this.emit("added", s, x, W);
        }
        addResourceBundle(s, x, W, X, ee) {
          let et =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : { silent: !1, skipCopy: !1 },
            er = [s, x];
          s.indexOf(".") > -1 &&
            ((er = s.split(".")), (X = W), (W = x), (x = er[1])),
            this.addNamespaces(x);
          let ei = getPath(this.data, er) || {};
          et.skipCopy || (W = JSON.parse(JSON.stringify(W))),
            X ? deepExtend(ei, W, ee) : (ei = { ...ei, ...W }),
            setPath(this.data, er, ei),
            et.silent || this.emit("added", s, x, W);
        }
        removeResourceBundle(s, x) {
          this.hasResourceBundle(s, x) && delete this.data[s][x],
            this.removeNamespaces(x),
            this.emit("removed", s, x);
        }
        hasResourceBundle(s, x) {
          return void 0 !== this.getResource(s, x);
        }
        getResourceBundle(s, x) {
          return (x || (x = this.options.defaultNS),
          "v1" === this.options.compatibilityAPI)
            ? { ...this.getResource(s, x) }
            : this.getResource(s, x);
        }
        getDataByLanguage(s) {
          return this.data[s];
        }
        hasLanguageSomeTranslations(s) {
          let x = this.getDataByLanguage(s),
            W = (x && Object.keys(x)) || [];
          return !!W.find((s) => x[s] && Object.keys(x[s]).length > 0);
        }
        toJSON() {
          return this.data;
        }
      };
      var ea = {
        processors: {},
        addPostProcessor(s) {
          this.processors[s.name] = s;
        },
        handle(s, x, W, X, ee) {
          return (
            s.forEach((s) => {
              this.processors[s] &&
                (x = this.processors[s].process(x, W, X, ee));
            }),
            x
          );
        },
      };
      let es = {};
      let Translator = class Translator extends EventEmitter {
        constructor(s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          super(),
            copy(
              [
                "resourceStore",
                "languageUtils",
                "pluralResolver",
                "interpolator",
                "backendConnector",
                "i18nFormat",
                "utils",
              ],
              s,
              this
            ),
            (this.options = x),
            void 0 === this.options.keySeparator &&
              (this.options.keySeparator = "."),
            (this.logger = eo.create("translator"));
        }
        changeLanguage(s) {
          s && (this.language = s);
        }
        exists(s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : { interpolation: {} };
          if (null == s) return !1;
          let W = this.resolve(s, x);
          return W && void 0 !== W.res;
        }
        extractFromKey(s, x) {
          let W =
            void 0 !== x.nsSeparator ? x.nsSeparator : this.options.nsSeparator;
          void 0 === W && (W = ":");
          let X =
              void 0 !== x.keySeparator
                ? x.keySeparator
                : this.options.keySeparator,
            ee = x.ns || this.options.defaultNS || [],
            et = W && s.indexOf(W) > -1,
            er =
              !this.options.userDefinedKeySeparator &&
              !x.keySeparator &&
              !this.options.userDefinedNsSeparator &&
              !x.nsSeparator &&
              !looksLikeObjectPath(s, W, X);
          if (et && !er) {
            let x = s.match(this.interpolator.nestingRegexp);
            if (x && x.length > 0)
              return { key: s, namespaces: isString(ee) ? [ee] : ee };
            let et = s.split(W);
            (W !== X || (W === X && this.options.ns.indexOf(et[0]) > -1)) &&
              (ee = et.shift()),
              (s = et.join(X));
          }
          return { key: s, namespaces: isString(ee) ? [ee] : ee };
        }
        translate(s, x, W) {
          if (
            ("object" != typeof x &&
              this.options.overloadTranslationOptionHandler &&
              (x = this.options.overloadTranslationOptionHandler(arguments)),
            "object" == typeof x && (x = { ...x }),
            x || (x = {}),
            null == s)
          )
            return "";
          Array.isArray(s) || (s = [String(s)]);
          let X =
              void 0 !== x.returnDetails
                ? x.returnDetails
                : this.options.returnDetails,
            ee =
              void 0 !== x.keySeparator
                ? x.keySeparator
                : this.options.keySeparator,
            { key: et, namespaces: er } = this.extractFromKey(
              s[s.length - 1],
              x
            ),
            ei = er[er.length - 1],
            eo = x.lng || this.language,
            ea =
              x.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
          if (eo && "cimode" === eo.toLowerCase()) {
            if (ea) {
              let s = x.nsSeparator || this.options.nsSeparator;
              return X
                ? {
                    res: `${ei}${s}${et}`,
                    usedKey: et,
                    exactUsedKey: et,
                    usedLng: eo,
                    usedNS: ei,
                    usedParams: this.getUsedParamsDetails(x),
                  }
                : `${ei}${s}${et}`;
            }
            return X
              ? {
                  res: et,
                  usedKey: et,
                  exactUsedKey: et,
                  usedLng: eo,
                  usedNS: ei,
                  usedParams: this.getUsedParamsDetails(x),
                }
              : et;
          }
          let es = this.resolve(s, x),
            el = es && es.res,
            ec = (es && es.usedKey) || et,
            eu = (es && es.exactUsedKey) || et,
            ed = Object.prototype.toString.apply(el),
            eh =
              void 0 !== x.joinArrays ? x.joinArrays : this.options.joinArrays,
            ep = !this.i18nFormat || this.i18nFormat.handleAsObject,
            ef =
              !isString(el) && "boolean" != typeof el && "number" != typeof el;
          if (
            ep &&
            el &&
            ef &&
            0 >
              [
                "[object Number]",
                "[object Function]",
                "[object RegExp]",
              ].indexOf(ed) &&
            !(isString(eh) && Array.isArray(el))
          ) {
            if (!x.returnObjects && !this.options.returnObjects) {
              this.options.returnedObjectHandler ||
                this.logger.warn(
                  "accessing an object - but returnObjects options is not enabled!"
                );
              let s = this.options.returnedObjectHandler
                ? this.options.returnedObjectHandler(ec, el, { ...x, ns: er })
                : `key '${et} (${this.language})' returned an object instead of string.`;
              return X
                ? ((es.res = s),
                  (es.usedParams = this.getUsedParamsDetails(x)),
                  es)
                : s;
            }
            if (ee) {
              let s = Array.isArray(el),
                W = s ? [] : {},
                X = s ? eu : ec;
              for (let s in el)
                if (Object.prototype.hasOwnProperty.call(el, s)) {
                  let et = `${X}${ee}${s}`;
                  (W[s] = this.translate(et, { ...x, joinArrays: !1, ns: er })),
                    W[s] === et && (W[s] = el[s]);
                }
              el = W;
            }
          } else if (ep && isString(eh) && Array.isArray(el))
            (el = el.join(eh)) && (el = this.extendTranslation(el, s, x, W));
          else {
            let X = !1,
              er = !1,
              ea = void 0 !== x.count && !isString(x.count),
              ec = Translator.hasDefaultValue(x),
              eu = ea ? this.pluralResolver.getSuffix(eo, x.count, x) : "",
              ed =
                x.ordinal && ea
                  ? this.pluralResolver.getSuffix(eo, x.count, { ordinal: !1 })
                  : "",
              eh =
                ea &&
                !x.ordinal &&
                0 === x.count &&
                this.pluralResolver.shouldUseIntlApi(),
              ep =
                (eh && x[`defaultValue${this.options.pluralSeparator}zero`]) ||
                x[`defaultValue${eu}`] ||
                x[`defaultValue${ed}`] ||
                x.defaultValue;
            !this.isValidLookup(el) && ec && ((X = !0), (el = ep)),
              this.isValidLookup(el) || ((er = !0), (el = et));
            let ef =
                x.missingKeyNoValueFallbackToKey ||
                this.options.missingKeyNoValueFallbackToKey,
              eg = ef && er ? void 0 : el,
              em = ec && ep !== el && this.options.updateMissing;
            if (er || X || em) {
              if (
                (this.logger.log(
                  em ? "updateKey" : "missingKey",
                  eo,
                  ei,
                  et,
                  em ? ep : el
                ),
                ee)
              ) {
                let s = this.resolve(et, { ...x, keySeparator: !1 });
                s &&
                  s.res &&
                  this.logger.warn(
                    "Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format."
                  );
              }
              let s = [],
                W = this.languageUtils.getFallbackCodes(
                  this.options.fallbackLng,
                  x.lng || this.language
                );
              if ("fallback" === this.options.saveMissingTo && W && W[0])
                for (let x = 0; x < W.length; x++) s.push(W[x]);
              else
                "all" === this.options.saveMissingTo
                  ? (s = this.languageUtils.toResolveHierarchy(
                      x.lng || this.language
                    ))
                  : s.push(x.lng || this.language);
              let send = (s, W, X) => {
                let ee = ec && X !== el ? X : eg;
                this.options.missingKeyHandler
                  ? this.options.missingKeyHandler(s, ei, W, ee, em, x)
                  : this.backendConnector &&
                    this.backendConnector.saveMissing &&
                    this.backendConnector.saveMissing(s, ei, W, ee, em, x),
                  this.emit("missingKey", s, ei, W, el);
              };
              this.options.saveMissing &&
                (this.options.saveMissingPlurals && ea
                  ? s.forEach((s) => {
                      let W = this.pluralResolver.getSuffixes(s, x);
                      eh &&
                        x[`defaultValue${this.options.pluralSeparator}zero`] &&
                        0 > W.indexOf(`${this.options.pluralSeparator}zero`) &&
                        W.push(`${this.options.pluralSeparator}zero`),
                        W.forEach((W) => {
                          send([s], et + W, x[`defaultValue${W}`] || ep);
                        });
                    })
                  : send(s, et, ep));
            }
            (el = this.extendTranslation(el, s, x, es, W)),
              er &&
                el === et &&
                this.options.appendNamespaceToMissingKey &&
                (el = `${ei}:${et}`),
              (er || X) &&
                this.options.parseMissingKeyHandler &&
                (el =
                  "v1" !== this.options.compatibilityAPI
                    ? this.options.parseMissingKeyHandler(
                        this.options.appendNamespaceToMissingKey
                          ? `${ei}:${et}`
                          : et,
                        X ? el : void 0
                      )
                    : this.options.parseMissingKeyHandler(el));
          }
          return X
            ? ((es.res = el),
              (es.usedParams = this.getUsedParamsDetails(x)),
              es)
            : el;
        }
        extendTranslation(s, x, W, X, ee) {
          var et = this;
          if (this.i18nFormat && this.i18nFormat.parse)
            s = this.i18nFormat.parse(
              s,
              { ...this.options.interpolation.defaultVariables, ...W },
              W.lng || this.language || X.usedLng,
              X.usedNS,
              X.usedKey,
              { resolved: X }
            );
          else if (!W.skipInterpolation) {
            let er;
            W.interpolation &&
              this.interpolator.init({
                ...W,
                interpolation: {
                  ...this.options.interpolation,
                  ...W.interpolation,
                },
              });
            let ei =
              isString(s) &&
              (W &&
              W.interpolation &&
              void 0 !== W.interpolation.skipOnVariables
                ? W.interpolation.skipOnVariables
                : this.options.interpolation.skipOnVariables);
            if (ei) {
              let x = s.match(this.interpolator.nestingRegexp);
              er = x && x.length;
            }
            let eo = W.replace && !isString(W.replace) ? W.replace : W;
            if (
              (this.options.interpolation.defaultVariables &&
                (eo = {
                  ...this.options.interpolation.defaultVariables,
                  ...eo,
                }),
              (s = this.interpolator.interpolate(
                s,
                eo,
                W.lng || this.language || X.usedLng,
                W
              )),
              ei)
            ) {
              let x = s.match(this.interpolator.nestingRegexp),
                X = x && x.length;
              er < X && (W.nest = !1);
            }
            !W.lng &&
              "v1" !== this.options.compatibilityAPI &&
              X &&
              X.res &&
              (W.lng = this.language || X.usedLng),
              !1 !== W.nest &&
                (s = this.interpolator.nest(
                  s,
                  function () {
                    for (
                      var s = arguments.length, X = Array(s), er = 0;
                      er < s;
                      er++
                    )
                      X[er] = arguments[er];
                    return ee && ee[0] === X[0] && !W.context
                      ? (et.logger.warn(
                          `It seems you are nesting recursively key: ${X[0]} in key: ${x[0]}`
                        ),
                        null)
                      : et.translate(...X, x);
                  },
                  W
                )),
              W.interpolation && this.interpolator.reset();
          }
          let er = W.postProcess || this.options.postProcess,
            ei = isString(er) ? [er] : er;
          return (
            null != s &&
              ei &&
              ei.length &&
              !1 !== W.applyPostProcessor &&
              (s = ea.handle(
                ei,
                s,
                x,
                this.options && this.options.postProcessPassResolved
                  ? {
                      i18nResolved: {
                        ...X,
                        usedParams: this.getUsedParamsDetails(W),
                      },
                      ...W,
                    }
                  : W,
                this
              )),
            s
          );
        }
        resolve(s) {
          let x,
            W,
            X,
            ee,
            et,
            er =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
          return (
            isString(s) && (s = [s]),
            s.forEach((s) => {
              if (this.isValidLookup(x)) return;
              let ei = this.extractFromKey(s, er),
                eo = ei.key;
              W = eo;
              let ea = ei.namespaces;
              this.options.fallbackNS &&
                (ea = ea.concat(this.options.fallbackNS));
              let el = void 0 !== er.count && !isString(er.count),
                ec =
                  el &&
                  !er.ordinal &&
                  0 === er.count &&
                  this.pluralResolver.shouldUseIntlApi(),
                eu =
                  void 0 !== er.context &&
                  (isString(er.context) || "number" == typeof er.context) &&
                  "" !== er.context,
                ed = er.lngs
                  ? er.lngs
                  : this.languageUtils.toResolveHierarchy(
                      er.lng || this.language,
                      er.fallbackLng
                    );
              ea.forEach((s) => {
                this.isValidLookup(x) ||
                  ((et = s),
                  !es[`${ed[0]}-${s}`] &&
                    this.utils &&
                    this.utils.hasLoadedNamespace &&
                    !this.utils.hasLoadedNamespace(et) &&
                    ((es[`${ed[0]}-${s}`] = !0),
                    this.logger.warn(
                      `key "${W}" for languages "${ed.join(
                        ", "
                      )}" won't get resolved as namespace "${et}" was not yet loaded`,
                      "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"
                    )),
                  ed.forEach((W) => {
                    let et;
                    if (this.isValidLookup(x)) return;
                    ee = W;
                    let ei = [eo];
                    if (this.i18nFormat && this.i18nFormat.addLookupKeys)
                      this.i18nFormat.addLookupKeys(ei, eo, W, s, er);
                    else {
                      let s;
                      el &&
                        (s = this.pluralResolver.getSuffix(W, er.count, er));
                      let x = `${this.options.pluralSeparator}zero`,
                        X = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
                      if (
                        (el &&
                          (ei.push(eo + s),
                          er.ordinal &&
                            0 === s.indexOf(X) &&
                            ei.push(
                              eo + s.replace(X, this.options.pluralSeparator)
                            ),
                          ec && ei.push(eo + x)),
                        eu)
                      ) {
                        let W = `${eo}${this.options.contextSeparator}${er.context}`;
                        ei.push(W),
                          el &&
                            (ei.push(W + s),
                            er.ordinal &&
                              0 === s.indexOf(X) &&
                              ei.push(
                                W + s.replace(X, this.options.pluralSeparator)
                              ),
                            ec && ei.push(W + x));
                      }
                    }
                    for (; (et = ei.pop()); )
                      this.isValidLookup(x) ||
                        ((X = et), (x = this.getResource(W, s, et, er)));
                  }));
              });
            }),
            { res: x, usedKey: W, exactUsedKey: X, usedLng: ee, usedNS: et }
          );
        }
        isValidLookup(s) {
          return (
            void 0 !== s &&
            !(!this.options.returnNull && null === s) &&
            !(!this.options.returnEmptyString && "" === s)
          );
        }
        getResource(s, x, W) {
          let X =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
          return this.i18nFormat && this.i18nFormat.getResource
            ? this.i18nFormat.getResource(s, x, W, X)
            : this.resourceStore.getResource(s, x, W, X);
        }
        getUsedParamsDetails() {
          let s =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            x = s.replace && !isString(s.replace),
            W = x ? s.replace : s;
          if (
            (x && void 0 !== s.count && (W.count = s.count),
            this.options.interpolation.defaultVariables &&
              (W = { ...this.options.interpolation.defaultVariables, ...W }),
            !x)
          )
            for (let s of ((W = { ...W }),
            [
              "defaultValue",
              "ordinal",
              "context",
              "replace",
              "lng",
              "lngs",
              "fallbackLng",
              "ns",
              "keySeparator",
              "nsSeparator",
              "returnObjects",
              "returnDetails",
              "joinArrays",
              "postProcess",
              "interpolation",
            ]))
              delete W[s];
          return W;
        }
        static hasDefaultValue(s) {
          let x = "defaultValue";
          for (let W in s)
            if (
              Object.prototype.hasOwnProperty.call(s, W) &&
              x === W.substring(0, x.length) &&
              void 0 !== s[W]
            )
              return !0;
          return !1;
        }
      };
      let capitalize = (s) => s.charAt(0).toUpperCase() + s.slice(1);
      let LanguageUtil = class LanguageUtil {
        constructor(s) {
          (this.options = s),
            (this.supportedLngs = this.options.supportedLngs || !1),
            (this.logger = eo.create("languageUtils"));
        }
        getScriptPartFromCode(s) {
          if (!(s = getCleanedCode(s)) || 0 > s.indexOf("-")) return null;
          let x = s.split("-");
          return 2 === x.length
            ? null
            : (x.pop(), "x" === x[x.length - 1].toLowerCase())
            ? null
            : this.formatLanguageCode(x.join("-"));
        }
        getLanguagePartFromCode(s) {
          if (!(s = getCleanedCode(s)) || 0 > s.indexOf("-")) return s;
          let x = s.split("-");
          return this.formatLanguageCode(x[0]);
        }
        formatLanguageCode(s) {
          if (isString(s) && s.indexOf("-") > -1) {
            if (
              "undefined" != typeof Intl &&
              void 0 !== Intl.getCanonicalLocales
            )
              try {
                let x = Intl.getCanonicalLocales(s)[0];
                if (
                  (x && this.options.lowerCaseLng && (x = x.toLowerCase()), x)
                )
                  return x;
              } catch (s) {}
            let x = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"],
              W = s.split("-");
            return (
              this.options.lowerCaseLng
                ? (W = W.map((s) => s.toLowerCase()))
                : 2 === W.length
                ? ((W[0] = W[0].toLowerCase()),
                  (W[1] = W[1].toUpperCase()),
                  x.indexOf(W[1].toLowerCase()) > -1 &&
                    (W[1] = capitalize(W[1].toLowerCase())))
                : 3 === W.length &&
                  ((W[0] = W[0].toLowerCase()),
                  2 === W[1].length && (W[1] = W[1].toUpperCase()),
                  "sgn" !== W[0] &&
                    2 === W[2].length &&
                    (W[2] = W[2].toUpperCase()),
                  x.indexOf(W[1].toLowerCase()) > -1 &&
                    (W[1] = capitalize(W[1].toLowerCase())),
                  x.indexOf(W[2].toLowerCase()) > -1 &&
                    (W[2] = capitalize(W[2].toLowerCase()))),
              W.join("-")
            );
          }
          return this.options.cleanCode || this.options.lowerCaseLng
            ? s.toLowerCase()
            : s;
        }
        isSupportedCode(s) {
          return (
            ("languageOnly" === this.options.load ||
              this.options.nonExplicitSupportedLngs) &&
              (s = this.getLanguagePartFromCode(s)),
            !this.supportedLngs ||
              !this.supportedLngs.length ||
              this.supportedLngs.indexOf(s) > -1
          );
        }
        getBestMatchFromCodes(s) {
          let x;
          return s
            ? (s.forEach((s) => {
                if (x) return;
                let W = this.formatLanguageCode(s);
                (!this.options.supportedLngs || this.isSupportedCode(W)) &&
                  (x = W);
              }),
              !x &&
                this.options.supportedLngs &&
                s.forEach((s) => {
                  if (x) return;
                  let W = this.getLanguagePartFromCode(s);
                  if (this.isSupportedCode(W)) return (x = W);
                  x = this.options.supportedLngs.find((s) => {
                    if (
                      s === W ||
                      (!(0 > s.indexOf("-") && 0 > W.indexOf("-")) &&
                        ((s.indexOf("-") > 0 &&
                          0 > W.indexOf("-") &&
                          s.substring(0, s.indexOf("-")) === W) ||
                          (0 === s.indexOf(W) && W.length > 1)))
                    )
                      return s;
                  });
                }),
              x || (x = this.getFallbackCodes(this.options.fallbackLng)[0]),
              x)
            : null;
        }
        getFallbackCodes(s, x) {
          if (!s) return [];
          if (
            ("function" == typeof s && (s = s(x)),
            isString(s) && (s = [s]),
            Array.isArray(s))
          )
            return s;
          if (!x) return s.default || [];
          let W = s[x];
          return (
            W || (W = s[this.getScriptPartFromCode(x)]),
            W || (W = s[this.formatLanguageCode(x)]),
            W || (W = s[this.getLanguagePartFromCode(x)]),
            W || (W = s.default),
            W || []
          );
        }
        toResolveHierarchy(s, x) {
          let W = this.getFallbackCodes(x || this.options.fallbackLng || [], s),
            X = [],
            addCode = (s) => {
              s &&
                (this.isSupportedCode(s)
                  ? X.push(s)
                  : this.logger.warn(
                      `rejecting language code not found in supportedLngs: ${s}`
                    ));
            };
          return (
            isString(s) && (s.indexOf("-") > -1 || s.indexOf("_") > -1)
              ? ("languageOnly" !== this.options.load &&
                  addCode(this.formatLanguageCode(s)),
                "languageOnly" !== this.options.load &&
                  "currentOnly" !== this.options.load &&
                  addCode(this.getScriptPartFromCode(s)),
                "currentOnly" !== this.options.load &&
                  addCode(this.getLanguagePartFromCode(s)))
              : isString(s) && addCode(this.formatLanguageCode(s)),
            W.forEach((s) => {
              0 > X.indexOf(s) && addCode(this.formatLanguageCode(s));
            }),
            X
          );
        }
      };
      let el = [
          {
            lngs: [
              "ach",
              "ak",
              "am",
              "arn",
              "br",
              "fil",
              "gun",
              "ln",
              "mfe",
              "mg",
              "mi",
              "oc",
              "pt",
              "pt-BR",
              "tg",
              "tl",
              "ti",
              "tr",
              "uz",
              "wa",
            ],
            nr: [1, 2],
            fc: 1,
          },
          {
            lngs: [
              "af",
              "an",
              "ast",
              "az",
              "bg",
              "bn",
              "ca",
              "da",
              "de",
              "dev",
              "el",
              "en",
              "eo",
              "es",
              "et",
              "eu",
              "fi",
              "fo",
              "fur",
              "fy",
              "gl",
              "gu",
              "ha",
              "hi",
              "hu",
              "hy",
              "ia",
              "it",
              "kk",
              "kn",
              "ku",
              "lb",
              "mai",
              "ml",
              "mn",
              "mr",
              "nah",
              "nap",
              "nb",
              "ne",
              "nl",
              "nn",
              "no",
              "nso",
              "pa",
              "pap",
              "pms",
              "ps",
              "pt-PT",
              "rm",
              "sco",
              "se",
              "si",
              "so",
              "son",
              "sq",
              "sv",
              "sw",
              "ta",
              "te",
              "tk",
              "ur",
              "yo",
            ],
            nr: [1, 2],
            fc: 2,
          },
          {
            lngs: [
              "ay",
              "bo",
              "cgg",
              "fa",
              "ht",
              "id",
              "ja",
              "jbo",
              "ka",
              "km",
              "ko",
              "ky",
              "lo",
              "ms",
              "sah",
              "su",
              "th",
              "tt",
              "ug",
              "vi",
              "wo",
              "zh",
            ],
            nr: [1],
            fc: 3,
          },
          {
            lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
            nr: [1, 2, 5],
            fc: 4,
          },
          { lngs: ["ar"], nr: [0, 1, 2, 3, 11, 100], fc: 5 },
          { lngs: ["cs", "sk"], nr: [1, 2, 5], fc: 6 },
          { lngs: ["csb", "pl"], nr: [1, 2, 5], fc: 7 },
          { lngs: ["cy"], nr: [1, 2, 3, 8], fc: 8 },
          { lngs: ["fr"], nr: [1, 2], fc: 9 },
          { lngs: ["ga"], nr: [1, 2, 3, 7, 11], fc: 10 },
          { lngs: ["gd"], nr: [1, 2, 3, 20], fc: 11 },
          { lngs: ["is"], nr: [1, 2], fc: 12 },
          { lngs: ["jv"], nr: [0, 1], fc: 13 },
          { lngs: ["kw"], nr: [1, 2, 3, 4], fc: 14 },
          { lngs: ["lt"], nr: [1, 2, 10], fc: 15 },
          { lngs: ["lv"], nr: [1, 2, 0], fc: 16 },
          { lngs: ["mk"], nr: [1, 2], fc: 17 },
          { lngs: ["mnk"], nr: [0, 1, 2], fc: 18 },
          { lngs: ["mt"], nr: [1, 2, 11, 20], fc: 19 },
          { lngs: ["or"], nr: [2, 1], fc: 2 },
          { lngs: ["ro"], nr: [1, 2, 20], fc: 20 },
          { lngs: ["sl"], nr: [5, 1, 2, 3], fc: 21 },
          { lngs: ["he", "iw"], nr: [1, 2, 20, 21], fc: 22 },
        ],
        ec = {
          1: (s) => Number(s > 1),
          2: (s) => Number(1 != s),
          3: (s) => 0,
          4: (s) =>
            Number(
              s % 10 == 1 && s % 100 != 11
                ? 0
                : s % 10 >= 2 && s % 10 <= 4 && (s % 100 < 10 || s % 100 >= 20)
                ? 1
                : 2
            ),
          5: (s) =>
            Number(
              0 == s
                ? 0
                : 1 == s
                ? 1
                : 2 == s
                ? 2
                : s % 100 >= 3 && s % 100 <= 10
                ? 3
                : s % 100 >= 11
                ? 4
                : 5
            ),
          6: (s) => Number(1 == s ? 0 : s >= 2 && s <= 4 ? 1 : 2),
          7: (s) =>
            Number(
              1 == s
                ? 0
                : s % 10 >= 2 && s % 10 <= 4 && (s % 100 < 10 || s % 100 >= 20)
                ? 1
                : 2
            ),
          8: (s) => Number(1 == s ? 0 : 2 == s ? 1 : 8 != s && 11 != s ? 2 : 3),
          9: (s) => Number(s >= 2),
          10: (s) =>
            Number(1 == s ? 0 : 2 == s ? 1 : s < 7 ? 2 : s < 11 ? 3 : 4),
          11: (s) =>
            Number(
              1 == s || 11 == s
                ? 0
                : 2 == s || 12 == s
                ? 1
                : s > 2 && s < 20
                ? 2
                : 3
            ),
          12: (s) => Number(s % 10 != 1 || s % 100 == 11),
          13: (s) => Number(0 !== s),
          14: (s) => Number(1 == s ? 0 : 2 == s ? 1 : 3 == s ? 2 : 3),
          15: (s) =>
            Number(
              s % 10 == 1 && s % 100 != 11
                ? 0
                : s % 10 >= 2 && (s % 100 < 10 || s % 100 >= 20)
                ? 1
                : 2
            ),
          16: (s) => Number(s % 10 == 1 && s % 100 != 11 ? 0 : 0 !== s ? 1 : 2),
          17: (s) => Number(1 == s || (s % 10 == 1 && s % 100 != 11) ? 0 : 1),
          18: (s) => Number(0 == s ? 0 : 1 == s ? 1 : 2),
          19: (s) =>
            Number(
              1 == s
                ? 0
                : 0 == s || (s % 100 > 1 && s % 100 < 11)
                ? 1
                : s % 100 > 10 && s % 100 < 20
                ? 2
                : 3
            ),
          20: (s) =>
            Number(
              1 == s ? 0 : 0 == s || (s % 100 > 0 && s % 100 < 20) ? 1 : 2
            ),
          21: (s) =>
            Number(
              s % 100 == 1
                ? 1
                : s % 100 == 2
                ? 2
                : s % 100 == 3 || s % 100 == 4
                ? 3
                : 0
            ),
          22: (s) =>
            Number(
              1 == s ? 0 : 2 == s ? 1 : (s < 0 || s > 10) && s % 10 == 0 ? 2 : 3
            ),
        },
        eu = ["v1", "v2", "v3"],
        ed = ["v4"],
        eh = { zero: 0, one: 1, two: 2, few: 3, many: 4, other: 5 },
        createRules = () => {
          let s = {};
          return (
            el.forEach((x) => {
              x.lngs.forEach((W) => {
                s[W] = { numbers: x.nr, plurals: ec[x.fc] };
              });
            }),
            s
          );
        };
      let PluralResolver = class PluralResolver {
        constructor(s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          (this.languageUtils = s),
            (this.options = x),
            (this.logger = eo.create("pluralResolver")),
            (!this.options.compatibilityJSON ||
              ed.includes(this.options.compatibilityJSON)) &&
              ("undefined" == typeof Intl || !Intl.PluralRules) &&
              ((this.options.compatibilityJSON = "v3"),
              this.logger.error(
                "Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling."
              )),
            (this.rules = createRules()),
            (this.pluralRulesCache = {});
        }
        addRule(s, x) {
          this.rules[s] = x;
        }
        clearCache() {
          this.pluralRulesCache = {};
        }
        getRule(s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (this.shouldUseIntlApi())
            try {
              let W = getCleanedCode("dev" === s ? "en" : s),
                X = x.ordinal ? "ordinal" : "cardinal",
                ee = JSON.stringify({ cleanedCode: W, type: X });
              if (ee in this.pluralRulesCache) return this.pluralRulesCache[ee];
              let et = new Intl.PluralRules(W, { type: X });
              return (this.pluralRulesCache[ee] = et), et;
            } catch (s) {
              return;
            }
          return (
            this.rules[s] ||
            this.rules[this.languageUtils.getLanguagePartFromCode(s)]
          );
        }
        needsPlural(s) {
          let x =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            W = this.getRule(s, x);
          return this.shouldUseIntlApi()
            ? W && W.resolvedOptions().pluralCategories.length > 1
            : W && W.numbers.length > 1;
        }
        getPluralFormsOfKey(s, x) {
          let W =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          return this.getSuffixes(s, W).map((s) => `${x}${s}`);
        }
        getSuffixes(s) {
          let x =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            W = this.getRule(s, x);
          return W
            ? this.shouldUseIntlApi()
              ? W.resolvedOptions()
                  .pluralCategories.sort((s, x) => eh[s] - eh[x])
                  .map(
                    (s) =>
                      `${this.options.prepend}${
                        x.ordinal ? `ordinal${this.options.prepend}` : ""
                      }${s}`
                  )
              : W.numbers.map((W) => this.getSuffix(s, W, x))
            : [];
        }
        getSuffix(s, x) {
          let W =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {},
            X = this.getRule(s, W);
          return X
            ? this.shouldUseIntlApi()
              ? `${this.options.prepend}${
                  W.ordinal ? `ordinal${this.options.prepend}` : ""
                }${X.select(x)}`
              : this.getSuffixRetroCompatible(X, x)
            : (this.logger.warn(`no plural rule found for: ${s}`), "");
        }
        getSuffixRetroCompatible(s, x) {
          let W = s.noAbs ? s.plurals(x) : s.plurals(Math.abs(x)),
            X = s.numbers[W];
          this.options.simplifyPluralSuffix &&
            2 === s.numbers.length &&
            1 === s.numbers[0] &&
            (2 === X ? (X = "plural") : 1 === X && (X = ""));
          let returnSuffix = () =>
            this.options.prepend && X.toString()
              ? this.options.prepend + X.toString()
              : X.toString();
          return "v1" === this.options.compatibilityJSON
            ? 1 === X
              ? ""
              : "number" == typeof X
              ? `_plural_${X.toString()}`
              : returnSuffix()
            : "v2" === this.options.compatibilityJSON ||
              (this.options.simplifyPluralSuffix &&
                2 === s.numbers.length &&
                1 === s.numbers[0])
            ? returnSuffix()
            : this.options.prepend && W.toString()
            ? this.options.prepend + W.toString()
            : W.toString();
        }
        shouldUseIntlApi() {
          return !eu.includes(this.options.compatibilityJSON);
        }
      };
      let deepFindWithDefaults = function (s, x, W) {
          let X =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : ".",
            ee =
              !(arguments.length > 4) ||
              void 0 === arguments[4] ||
              arguments[4],
            et = getPathWithDefaults(s, x, W);
          return (
            !et &&
              ee &&
              isString(W) &&
              void 0 === (et = deepFind(s, W, X)) &&
              (et = deepFind(x, W, X)),
            et
          );
        },
        regexSafe = (s) => s.replace(/\$/g, "$$$$");
      let Interpolator = class Interpolator {
        constructor() {
          let s =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          (this.logger = eo.create("interpolator")),
            (this.options = s),
            (this.format =
              (s.interpolation && s.interpolation.format) || ((s) => s)),
            this.init(s);
        }
        init() {
          let s =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          s.interpolation || (s.interpolation = { escapeValue: !0 });
          let {
            escape: x,
            escapeValue: W,
            useRawValueToEscape: X,
            prefix: ee,
            prefixEscaped: et,
            suffix: er,
            suffixEscaped: ei,
            formatSeparator: eo,
            unescapeSuffix: ea,
            unescapePrefix: es,
            nestingPrefix: el,
            nestingPrefixEscaped: ec,
            nestingSuffix: eu,
            nestingSuffixEscaped: ed,
            nestingOptionsSeparator: eh,
            maxReplaces: ep,
            alwaysFormat: ef,
          } = s.interpolation;
          (this.escape = void 0 !== x ? x : escape),
            (this.escapeValue = void 0 === W || W),
            (this.useRawValueToEscape = void 0 !== X && X),
            (this.prefix = ee ? regexEscape(ee) : et || "{{"),
            (this.suffix = er ? regexEscape(er) : ei || "}}"),
            (this.formatSeparator = eo || ","),
            (this.unescapePrefix = ea ? "" : es || "-"),
            (this.unescapeSuffix = this.unescapePrefix ? "" : ea || ""),
            (this.nestingPrefix = el
              ? regexEscape(el)
              : ec || regexEscape("$t(")),
            (this.nestingSuffix = eu
              ? regexEscape(eu)
              : ed || regexEscape(")")),
            (this.nestingOptionsSeparator = eh || ","),
            (this.maxReplaces = ep || 1e3),
            (this.alwaysFormat = void 0 !== ef && ef),
            this.resetRegExp();
        }
        reset() {
          this.options && this.init(this.options);
        }
        resetRegExp() {
          let getOrResetRegExp = (s, x) =>
            s && s.source === x ? ((s.lastIndex = 0), s) : RegExp(x, "g");
          (this.regexp = getOrResetRegExp(
            this.regexp,
            `${this.prefix}(.+?)${this.suffix}`
          )),
            (this.regexpUnescape = getOrResetRegExp(
              this.regexpUnescape,
              `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`
            )),
            (this.nestingRegexp = getOrResetRegExp(
              this.nestingRegexp,
              `${this.nestingPrefix}(.+?)${this.nestingSuffix}`
            ));
        }
        interpolate(s, x, W, X) {
          let ee, et, er;
          let ei =
              (this.options &&
                this.options.interpolation &&
                this.options.interpolation.defaultVariables) ||
              {},
            handleFormat = (s) => {
              if (0 > s.indexOf(this.formatSeparator)) {
                let ee = deepFindWithDefaults(
                  x,
                  ei,
                  s,
                  this.options.keySeparator,
                  this.options.ignoreJSONStructure
                );
                return this.alwaysFormat
                  ? this.format(ee, void 0, W, {
                      ...X,
                      ...x,
                      interpolationkey: s,
                    })
                  : ee;
              }
              let ee = s.split(this.formatSeparator),
                et = ee.shift().trim(),
                er = ee.join(this.formatSeparator).trim();
              return this.format(
                deepFindWithDefaults(
                  x,
                  ei,
                  et,
                  this.options.keySeparator,
                  this.options.ignoreJSONStructure
                ),
                er,
                W,
                { ...X, ...x, interpolationkey: et }
              );
            };
          this.resetRegExp();
          let eo =
              (X && X.missingInterpolationHandler) ||
              this.options.missingInterpolationHandler,
            ea =
              X && X.interpolation && void 0 !== X.interpolation.skipOnVariables
                ? X.interpolation.skipOnVariables
                : this.options.interpolation.skipOnVariables,
            es = [
              { regex: this.regexpUnescape, safeValue: (s) => regexSafe(s) },
              {
                regex: this.regexp,
                safeValue: (s) =>
                  this.escapeValue ? regexSafe(this.escape(s)) : regexSafe(s),
              },
            ];
          return (
            es.forEach((x) => {
              for (er = 0; (ee = x.regex.exec(s)); ) {
                let W = ee[1].trim();
                if (void 0 === (et = handleFormat(W))) {
                  if ("function" == typeof eo) {
                    let x = eo(s, ee, X);
                    et = isString(x) ? x : "";
                  } else if (X && Object.prototype.hasOwnProperty.call(X, W))
                    et = "";
                  else if (ea) {
                    et = ee[0];
                    continue;
                  } else
                    this.logger.warn(
                      `missed to pass in variable ${W} for interpolating ${s}`
                    ),
                      (et = "");
                } else
                  isString(et) ||
                    this.useRawValueToEscape ||
                    (et = makeString(et));
                let ei = x.safeValue(et);
                if (
                  ((s = s.replace(ee[0], ei)),
                  ea
                    ? ((x.regex.lastIndex += et.length),
                      (x.regex.lastIndex -= ee[0].length))
                    : (x.regex.lastIndex = 0),
                  ++er >= this.maxReplaces)
                )
                  break;
              }
            }),
            s
          );
        }
        nest(s, x) {
          let W,
            X,
            ee,
            et =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {},
            handleHasOptions = (s, x) => {
              let W = this.nestingOptionsSeparator;
              if (0 > s.indexOf(W)) return s;
              let X = s.split(RegExp(`${W}[ ]*{`)),
                et = `{${X[1]}`;
              (s = X[0]), (et = this.interpolate(et, ee));
              let er = et.match(/'/g),
                ei = et.match(/"/g);
              ((er && er.length % 2 == 0 && !ei) || ei.length % 2 != 0) &&
                (et = et.replace(/'/g, '"'));
              try {
                (ee = JSON.parse(et)), x && (ee = { ...x, ...ee });
              } catch (x) {
                return (
                  this.logger.warn(
                    `failed parsing options string in nesting for key ${s}`,
                    x
                  ),
                  `${s}${W}${et}`
                );
              }
              return (
                ee.defaultValue &&
                  ee.defaultValue.indexOf(this.prefix) > -1 &&
                  delete ee.defaultValue,
                s
              );
            };
          for (; (W = this.nestingRegexp.exec(s)); ) {
            let er = [];
            ((ee =
              (ee = { ...et }).replace && !isString(ee.replace)
                ? ee.replace
                : ee).applyPostProcessor = !1),
              delete ee.defaultValue;
            let ei = !1;
            if (
              -1 !== W[0].indexOf(this.formatSeparator) &&
              !/{.*}/.test(W[1])
            ) {
              let s = W[1].split(this.formatSeparator).map((s) => s.trim());
              (W[1] = s.shift()), (er = s), (ei = !0);
            }
            if (
              (X = x(handleHasOptions.call(this, W[1].trim(), ee), ee)) &&
              W[0] === s &&
              !isString(X)
            )
              return X;
            isString(X) || (X = makeString(X)),
              X ||
                (this.logger.warn(`missed to resolve ${W[1]} for nesting ${s}`),
                (X = "")),
              ei &&
                (X = er.reduce(
                  (s, x) =>
                    this.format(s, x, et.lng, {
                      ...et,
                      interpolationkey: W[1].trim(),
                    }),
                  X.trim()
                )),
              (s = s.replace(W[0], X)),
              (this.regexp.lastIndex = 0);
          }
          return s;
        }
      };
      let parseFormatStr = (s) => {
          let x = s.toLowerCase().trim(),
            W = {};
          if (s.indexOf("(") > -1) {
            let X = s.split("(");
            x = X[0].toLowerCase().trim();
            let ee = X[1].substring(0, X[1].length - 1);
            if ("currency" === x && 0 > ee.indexOf(":"))
              W.currency || (W.currency = ee.trim());
            else if ("relativetime" === x && 0 > ee.indexOf(":"))
              W.range || (W.range = ee.trim());
            else {
              let s = ee.split(";");
              s.forEach((s) => {
                if (s) {
                  let [x, ...X] = s.split(":"),
                    ee = X.join(":")
                      .trim()
                      .replace(/^'+|'+$/g, ""),
                    et = x.trim();
                  W[et] || (W[et] = ee),
                    "false" === ee && (W[et] = !1),
                    "true" === ee && (W[et] = !0),
                    isNaN(ee) || (W[et] = parseInt(ee, 10));
                }
              });
            }
          }
          return { formatName: x, formatOptions: W };
        },
        createCachedFormatter = (s) => {
          let x = {};
          return (W, X, ee) => {
            let et = ee;
            ee &&
              ee.interpolationkey &&
              ee.formatParams &&
              ee.formatParams[ee.interpolationkey] &&
              ee[ee.interpolationkey] &&
              (et = { ...et, [ee.interpolationkey]: void 0 });
            let er = X + JSON.stringify(et),
              ei = x[er];
            return ei || ((ei = s(getCleanedCode(X), ee)), (x[er] = ei)), ei(W);
          };
        };
      let Formatter = class Formatter {
        constructor() {
          let s =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          (this.logger = eo.create("formatter")),
            (this.options = s),
            (this.formats = {
              number: createCachedFormatter((s, x) => {
                let W = new Intl.NumberFormat(s, { ...x });
                return (s) => W.format(s);
              }),
              currency: createCachedFormatter((s, x) => {
                let W = new Intl.NumberFormat(s, { ...x, style: "currency" });
                return (s) => W.format(s);
              }),
              datetime: createCachedFormatter((s, x) => {
                let W = new Intl.DateTimeFormat(s, { ...x });
                return (s) => W.format(s);
              }),
              relativetime: createCachedFormatter((s, x) => {
                let W = new Intl.RelativeTimeFormat(s, { ...x });
                return (s) => W.format(s, x.range || "day");
              }),
              list: createCachedFormatter((s, x) => {
                let W = new Intl.ListFormat(s, { ...x });
                return (s) => W.format(s);
              }),
            }),
            this.init(s);
        }
        init(s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : { interpolation: {} };
          this.formatSeparator = x.interpolation.formatSeparator || ",";
        }
        add(s, x) {
          this.formats[s.toLowerCase().trim()] = x;
        }
        addCached(s, x) {
          this.formats[s.toLowerCase().trim()] = createCachedFormatter(x);
        }
        format(s, x, W) {
          let X =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {},
            ee = x.split(this.formatSeparator);
          if (
            ee.length > 1 &&
            ee[0].indexOf("(") > 1 &&
            0 > ee[0].indexOf(")") &&
            ee.find((s) => s.indexOf(")") > -1)
          ) {
            let s = ee.findIndex((s) => s.indexOf(")") > -1);
            ee[0] = [ee[0], ...ee.splice(1, s)].join(this.formatSeparator);
          }
          let et = ee.reduce((s, x) => {
            let { formatName: ee, formatOptions: et } = parseFormatStr(x);
            if (this.formats[ee]) {
              let x = s;
              try {
                let er =
                    (X &&
                      X.formatParams &&
                      X.formatParams[X.interpolationkey]) ||
                    {},
                  ei = er.locale || er.lng || X.locale || X.lng || W;
                x = this.formats[ee](s, ei, { ...et, ...X, ...er });
              } catch (s) {
                this.logger.warn(s);
              }
              return x;
            }
            return (
              this.logger.warn(`there was no format function for ${ee}`), s
            );
          }, s);
          return et;
        }
      };
      let removePending = (s, x) => {
        void 0 !== s.pending[x] && (delete s.pending[x], s.pendingCount--);
      };
      let Connector = class Connector extends EventEmitter {
        constructor(s, x, W) {
          let X =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
          super(),
            (this.backend = s),
            (this.store = x),
            (this.services = W),
            (this.languageUtils = W.languageUtils),
            (this.options = X),
            (this.logger = eo.create("backendConnector")),
            (this.waitingReads = []),
            (this.maxParallelReads = X.maxParallelReads || 10),
            (this.readingCalls = 0),
            (this.maxRetries = X.maxRetries >= 0 ? X.maxRetries : 5),
            (this.retryTimeout = X.retryTimeout >= 1 ? X.retryTimeout : 350),
            (this.state = {}),
            (this.queue = []),
            this.backend &&
              this.backend.init &&
              this.backend.init(W, X.backend, X);
        }
        queueLoad(s, x, W, X) {
          let ee = {},
            et = {},
            er = {},
            ei = {};
          return (
            s.forEach((s) => {
              let X = !0;
              x.forEach((x) => {
                let er = `${s}|${x}`;
                !W.reload && this.store.hasResourceBundle(s, x)
                  ? (this.state[er] = 2)
                  : this.state[er] < 0 ||
                    (1 === this.state[er]
                      ? void 0 === et[er] && (et[er] = !0)
                      : ((this.state[er] = 1),
                        (X = !1),
                        void 0 === et[er] && (et[er] = !0),
                        void 0 === ee[er] && (ee[er] = !0),
                        void 0 === ei[x] && (ei[x] = !0)));
              }),
                X || (er[s] = !0);
            }),
            (Object.keys(ee).length || Object.keys(et).length) &&
              this.queue.push({
                pending: et,
                pendingCount: Object.keys(et).length,
                loaded: {},
                errors: [],
                callback: X,
              }),
            {
              toLoad: Object.keys(ee),
              pending: Object.keys(et),
              toLoadLanguages: Object.keys(er),
              toLoadNamespaces: Object.keys(ei),
            }
          );
        }
        loaded(s, x, W) {
          let X = s.split("|"),
            ee = X[0],
            et = X[1];
          x && this.emit("failedLoading", ee, et, x),
            !x &&
              W &&
              this.store.addResourceBundle(ee, et, W, void 0, void 0, {
                skipCopy: !0,
              }),
            (this.state[s] = x ? -1 : 2),
            x && W && (this.state[s] = 0);
          let er = {};
          this.queue.forEach((W) => {
            pushPath(W.loaded, [ee], et),
              removePending(W, s),
              x && W.errors.push(x),
              0 !== W.pendingCount ||
                W.done ||
                (Object.keys(W.loaded).forEach((s) => {
                  er[s] || (er[s] = {});
                  let x = W.loaded[s];
                  x.length &&
                    x.forEach((x) => {
                      void 0 === er[s][x] && (er[s][x] = !0);
                    });
                }),
                (W.done = !0),
                W.errors.length ? W.callback(W.errors) : W.callback());
          }),
            this.emit("loaded", er),
            (this.queue = this.queue.filter((s) => !s.done));
        }
        read(s, x, W) {
          let X =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 0,
            ee =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : this.retryTimeout,
            et = arguments.length > 5 ? arguments[5] : void 0;
          if (!s.length) return et(null, {});
          if (this.readingCalls >= this.maxParallelReads) {
            this.waitingReads.push({
              lng: s,
              ns: x,
              fcName: W,
              tried: X,
              wait: ee,
              callback: et,
            });
            return;
          }
          this.readingCalls++;
          let resolver = (er, ei) => {
              if ((this.readingCalls--, this.waitingReads.length > 0)) {
                let s = this.waitingReads.shift();
                this.read(s.lng, s.ns, s.fcName, s.tried, s.wait, s.callback);
              }
              if (er && ei && X < this.maxRetries) {
                setTimeout(() => {
                  this.read.call(this, s, x, W, X + 1, 2 * ee, et);
                }, ee);
                return;
              }
              et(er, ei);
            },
            er = this.backend[W].bind(this.backend);
          if (2 === er.length) {
            try {
              let W = er(s, x);
              W && "function" == typeof W.then
                ? W.then((s) => resolver(null, s)).catch(resolver)
                : resolver(null, W);
            } catch (s) {
              resolver(s);
            }
            return;
          }
          return er(s, x, resolver);
        }
        prepareLoading(s, x) {
          let W =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {},
            X = arguments.length > 3 ? arguments[3] : void 0;
          if (!this.backend)
            return (
              this.logger.warn(
                "No backend was added via i18next.use. Will not load resources."
              ),
              X && X()
            );
          isString(s) && (s = this.languageUtils.toResolveHierarchy(s)),
            isString(x) && (x = [x]);
          let ee = this.queueLoad(s, x, W, X);
          if (!ee.toLoad.length) return ee.pending.length || X(), null;
          ee.toLoad.forEach((s) => {
            this.loadOne(s);
          });
        }
        load(s, x, W) {
          this.prepareLoading(s, x, {}, W);
        }
        reload(s, x, W) {
          this.prepareLoading(s, x, { reload: !0 }, W);
        }
        loadOne(s) {
          let x =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "",
            W = s.split("|"),
            X = W[0],
            ee = W[1];
          this.read(X, ee, "read", void 0, void 0, (W, et) => {
            W &&
              this.logger.warn(
                `${x}loading namespace ${ee} for language ${X} failed`,
                W
              ),
              !W &&
                et &&
                this.logger.log(
                  `${x}loaded namespace ${ee} for language ${X}`,
                  et
                ),
              this.loaded(s, W, et);
          });
        }
        saveMissing(s, x, W, X, ee) {
          let et =
              arguments.length > 5 && void 0 !== arguments[5]
                ? arguments[5]
                : {},
            er =
              arguments.length > 6 && void 0 !== arguments[6]
                ? arguments[6]
                : () => {};
          if (
            this.services.utils &&
            this.services.utils.hasLoadedNamespace &&
            !this.services.utils.hasLoadedNamespace(x)
          ) {
            this.logger.warn(
              `did not save key "${W}" as the namespace "${x}" was not yet loaded`,
              "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"
            );
            return;
          }
          if (null != W && "" !== W) {
            if (this.backend && this.backend.create) {
              let ei = { ...et, isUpdate: ee },
                eo = this.backend.create.bind(this.backend);
              if (eo.length < 6)
                try {
                  let ee;
                  (ee =
                    5 === eo.length ? eo(s, x, W, X, ei) : eo(s, x, W, X)) &&
                  "function" == typeof ee.then
                    ? ee.then((s) => er(null, s)).catch(er)
                    : er(null, ee);
                } catch (s) {
                  er(s);
                }
              else eo(s, x, W, X, er, ei);
            }
            s && s[0] && this.store.addResource(s[0], x, W, X);
          }
        }
      };
      let get = () => ({
          debug: !1,
          initImmediate: !0,
          ns: ["translation"],
          defaultNS: ["translation"],
          fallbackLng: ["dev"],
          fallbackNS: !1,
          supportedLngs: !1,
          nonExplicitSupportedLngs: !1,
          load: "all",
          preload: !1,
          simplifyPluralSuffix: !0,
          keySeparator: ".",
          nsSeparator: ":",
          pluralSeparator: "_",
          contextSeparator: "_",
          partialBundledLanguages: !1,
          saveMissing: !1,
          updateMissing: !1,
          saveMissingTo: "fallback",
          saveMissingPlurals: !0,
          missingKeyHandler: !1,
          missingInterpolationHandler: !1,
          postProcess: !1,
          postProcessPassResolved: !1,
          returnNull: !1,
          returnEmptyString: !0,
          returnObjects: !1,
          joinArrays: !1,
          returnedObjectHandler: !1,
          parseMissingKeyHandler: !1,
          appendNamespaceToMissingKey: !1,
          appendNamespaceToCIMode: !1,
          overloadTranslationOptionHandler: (s) => {
            let x = {};
            if (
              ("object" == typeof s[1] && (x = s[1]),
              isString(s[1]) && (x.defaultValue = s[1]),
              isString(s[2]) && (x.tDescription = s[2]),
              "object" == typeof s[2] || "object" == typeof s[3])
            ) {
              let W = s[3] || s[2];
              Object.keys(W).forEach((s) => {
                x[s] = W[s];
              });
            }
            return x;
          },
          interpolation: {
            escapeValue: !0,
            format: (s) => s,
            prefix: "{{",
            suffix: "}}",
            formatSeparator: ",",
            unescapePrefix: "-",
            nestingPrefix: "$t(",
            nestingSuffix: ")",
            nestingOptionsSeparator: ",",
            maxReplaces: 1e3,
            skipOnVariables: !0,
          },
        }),
        transformOptions = (s) => (
          isString(s.ns) && (s.ns = [s.ns]),
          isString(s.fallbackLng) && (s.fallbackLng = [s.fallbackLng]),
          isString(s.fallbackNS) && (s.fallbackNS = [s.fallbackNS]),
          s.supportedLngs &&
            0 > s.supportedLngs.indexOf("cimode") &&
            (s.supportedLngs = s.supportedLngs.concat(["cimode"])),
          s
        ),
        noop = () => {},
        bindMemberFunctions = (s) => {
          let x = Object.getOwnPropertyNames(Object.getPrototypeOf(s));
          x.forEach((x) => {
            "function" == typeof s[x] && (s[x] = s[x].bind(s));
          });
        };
      let I18n = class I18n extends EventEmitter {
        constructor() {
          let s =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            x = arguments.length > 1 ? arguments[1] : void 0;
          if (
            (super(),
            (this.options = transformOptions(s)),
            (this.services = {}),
            (this.logger = eo),
            (this.modules = { external: [] }),
            bindMemberFunctions(this),
            x && !this.isInitialized && !s.isClone)
          ) {
            if (!this.options.initImmediate) return this.init(s, x), this;
            setTimeout(() => {
              this.init(s, x);
            }, 0);
          }
        }
        init() {
          var s = this;
          let x =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            W = arguments.length > 1 ? arguments[1] : void 0;
          (this.isInitializing = !0),
            "function" == typeof x && ((W = x), (x = {})),
            !x.defaultNS &&
              !1 !== x.defaultNS &&
              x.ns &&
              (isString(x.ns)
                ? (x.defaultNS = x.ns)
                : 0 > x.ns.indexOf("translation") && (x.defaultNS = x.ns[0]));
          let X = get();
          (this.options = { ...X, ...this.options, ...transformOptions(x) }),
            "v1" !== this.options.compatibilityAPI &&
              (this.options.interpolation = {
                ...X.interpolation,
                ...this.options.interpolation,
              }),
            void 0 !== x.keySeparator &&
              (this.options.userDefinedKeySeparator = x.keySeparator),
            void 0 !== x.nsSeparator &&
              (this.options.userDefinedNsSeparator = x.nsSeparator);
          let createClassOnDemand = (s) =>
            s ? ("function" == typeof s ? new s() : s) : null;
          if (!this.options.isClone) {
            let x;
            this.modules.logger
              ? eo.init(createClassOnDemand(this.modules.logger), this.options)
              : eo.init(null, this.options),
              this.modules.formatter
                ? (x = this.modules.formatter)
                : "undefined" != typeof Intl && (x = Formatter);
            let W = new LanguageUtil(this.options);
            this.store = new ResourceStore(
              this.options.resources,
              this.options
            );
            let ee = this.services;
            (ee.logger = eo),
              (ee.resourceStore = this.store),
              (ee.languageUtils = W),
              (ee.pluralResolver = new PluralResolver(W, {
                prepend: this.options.pluralSeparator,
                compatibilityJSON: this.options.compatibilityJSON,
                simplifyPluralSuffix: this.options.simplifyPluralSuffix,
              })),
              x &&
                (!this.options.interpolation.format ||
                  this.options.interpolation.format ===
                    X.interpolation.format) &&
                ((ee.formatter = createClassOnDemand(x)),
                ee.formatter.init(ee, this.options),
                (this.options.interpolation.format = ee.formatter.format.bind(
                  ee.formatter
                ))),
              (ee.interpolator = new Interpolator(this.options)),
              (ee.utils = {
                hasLoadedNamespace: this.hasLoadedNamespace.bind(this),
              }),
              (ee.backendConnector = new Connector(
                createClassOnDemand(this.modules.backend),
                ee.resourceStore,
                ee,
                this.options
              )),
              ee.backendConnector.on("*", function (x) {
                for (
                  var W = arguments.length,
                    X = Array(W > 1 ? W - 1 : 0),
                    ee = 1;
                  ee < W;
                  ee++
                )
                  X[ee - 1] = arguments[ee];
                s.emit(x, ...X);
              }),
              this.modules.languageDetector &&
                ((ee.languageDetector = createClassOnDemand(
                  this.modules.languageDetector
                )),
                ee.languageDetector.init &&
                  ee.languageDetector.init(
                    ee,
                    this.options.detection,
                    this.options
                  )),
              this.modules.i18nFormat &&
                ((ee.i18nFormat = createClassOnDemand(this.modules.i18nFormat)),
                ee.i18nFormat.init && ee.i18nFormat.init(this)),
              (this.translator = new Translator(this.services, this.options)),
              this.translator.on("*", function (x) {
                for (
                  var W = arguments.length,
                    X = Array(W > 1 ? W - 1 : 0),
                    ee = 1;
                  ee < W;
                  ee++
                )
                  X[ee - 1] = arguments[ee];
                s.emit(x, ...X);
              }),
              this.modules.external.forEach((s) => {
                s.init && s.init(this);
              });
          }
          if (
            ((this.format = this.options.interpolation.format),
            W || (W = noop),
            this.options.fallbackLng &&
              !this.services.languageDetector &&
              !this.options.lng)
          ) {
            let s = this.services.languageUtils.getFallbackCodes(
              this.options.fallbackLng
            );
            s.length > 0 && "dev" !== s[0] && (this.options.lng = s[0]);
          }
          this.services.languageDetector ||
            this.options.lng ||
            this.logger.warn(
              "init: no languageDetector is used and no lng is defined"
            ),
            [
              "getResource",
              "hasResourceBundle",
              "getResourceBundle",
              "getDataByLanguage",
            ].forEach((x) => {
              this[x] = function () {
                return s.store[x](...arguments);
              };
            }),
            [
              "addResource",
              "addResources",
              "addResourceBundle",
              "removeResourceBundle",
            ].forEach((x) => {
              this[x] = function () {
                return s.store[x](...arguments), s;
              };
            });
          let ee = defer(),
            load = () => {
              let finish = (s, x) => {
                (this.isInitializing = !1),
                  this.isInitialized &&
                    !this.initializedStoreOnce &&
                    this.logger.warn(
                      "init: i18next is already initialized. You should call init just once!"
                    ),
                  (this.isInitialized = !0),
                  this.options.isClone ||
                    this.logger.log("initialized", this.options),
                  this.emit("initialized", this.options),
                  ee.resolve(x),
                  W(s, x);
              };
              if (
                this.languages &&
                "v1" !== this.options.compatibilityAPI &&
                !this.isInitialized
              )
                return finish(null, this.t.bind(this));
              this.changeLanguage(this.options.lng, finish);
            };
          return (
            this.options.resources || !this.options.initImmediate
              ? load()
              : setTimeout(load, 0),
            ee
          );
        }
        loadResources(s) {
          let x =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : noop,
            W = x,
            X = isString(s) ? s : this.language;
          if (
            ("function" == typeof s && (W = s),
            !this.options.resources || this.options.partialBundledLanguages)
          ) {
            if (
              X &&
              "cimode" === X.toLowerCase() &&
              (!this.options.preload || 0 === this.options.preload.length)
            )
              return W();
            let s = [],
              append = (x) => {
                if (!x || "cimode" === x) return;
                let W = this.services.languageUtils.toResolveHierarchy(x);
                W.forEach((x) => {
                  "cimode" !== x && 0 > s.indexOf(x) && s.push(x);
                });
              };
            if (X) append(X);
            else {
              let s = this.services.languageUtils.getFallbackCodes(
                this.options.fallbackLng
              );
              s.forEach((s) => append(s));
            }
            this.options.preload &&
              this.options.preload.forEach((s) => append(s)),
              this.services.backendConnector.load(s, this.options.ns, (s) => {
                s ||
                  this.resolvedLanguage ||
                  !this.language ||
                  this.setResolvedLanguage(this.language),
                  W(s);
              });
          } else W(null);
        }
        reloadResources(s, x, W) {
          let X = defer();
          return (
            "function" == typeof s && ((W = s), (s = void 0)),
            "function" == typeof x && ((W = x), (x = void 0)),
            s || (s = this.languages),
            x || (x = this.options.ns),
            W || (W = noop),
            this.services.backendConnector.reload(s, x, (s) => {
              X.resolve(), W(s);
            }),
            X
          );
        }
        use(s) {
          if (!s)
            throw Error(
              "You are passing an undefined module! Please check the object you are passing to i18next.use()"
            );
          if (!s.type)
            throw Error(
              "You are passing a wrong module! Please check the object you are passing to i18next.use()"
            );
          return (
            "backend" === s.type && (this.modules.backend = s),
            ("logger" === s.type || (s.log && s.warn && s.error)) &&
              (this.modules.logger = s),
            "languageDetector" === s.type &&
              (this.modules.languageDetector = s),
            "i18nFormat" === s.type && (this.modules.i18nFormat = s),
            "postProcessor" === s.type && ea.addPostProcessor(s),
            "formatter" === s.type && (this.modules.formatter = s),
            "3rdParty" === s.type && this.modules.external.push(s),
            this
          );
        }
        setResolvedLanguage(s) {
          if (s && this.languages && !(["cimode", "dev"].indexOf(s) > -1))
            for (let s = 0; s < this.languages.length; s++) {
              let x = this.languages[s];
              if (
                !(["cimode", "dev"].indexOf(x) > -1) &&
                this.store.hasLanguageSomeTranslations(x)
              ) {
                this.resolvedLanguage = x;
                break;
              }
            }
        }
        changeLanguage(s, x) {
          var W = this;
          this.isLanguageChangingTo = s;
          let X = defer();
          this.emit("languageChanging", s);
          let setLngProps = (s) => {
              (this.language = s),
                (this.languages =
                  this.services.languageUtils.toResolveHierarchy(s)),
                (this.resolvedLanguage = void 0),
                this.setResolvedLanguage(s);
            },
            done = (s, ee) => {
              ee
                ? (setLngProps(ee),
                  this.translator.changeLanguage(ee),
                  (this.isLanguageChangingTo = void 0),
                  this.emit("languageChanged", ee),
                  this.logger.log("languageChanged", ee))
                : (this.isLanguageChangingTo = void 0),
                X.resolve(function () {
                  return W.t(...arguments);
                }),
                x &&
                  x(s, function () {
                    return W.t(...arguments);
                  });
            },
            setLng = (x) => {
              s || x || !this.services.languageDetector || (x = []);
              let W = isString(x)
                ? x
                : this.services.languageUtils.getBestMatchFromCodes(x);
              W &&
                (this.language || setLngProps(W),
                this.translator.language || this.translator.changeLanguage(W),
                this.services.languageDetector &&
                  this.services.languageDetector.cacheUserLanguage &&
                  this.services.languageDetector.cacheUserLanguage(W)),
                this.loadResources(W, (s) => {
                  done(s, W);
                });
            };
          return (
            s ||
            !this.services.languageDetector ||
            this.services.languageDetector.async
              ? !s &&
                this.services.languageDetector &&
                this.services.languageDetector.async
                ? 0 === this.services.languageDetector.detect.length
                  ? this.services.languageDetector.detect().then(setLng)
                  : this.services.languageDetector.detect(setLng)
                : setLng(s)
              : setLng(this.services.languageDetector.detect()),
            X
          );
        }
        getFixedT(s, x, W) {
          var X = this;
          let fixedT = function (s, x) {
            let ee, et;
            if ("object" != typeof x) {
              for (
                var er = arguments.length,
                  ei = Array(er > 2 ? er - 2 : 0),
                  eo = 2;
                eo < er;
                eo++
              )
                ei[eo - 2] = arguments[eo];
              ee = X.options.overloadTranslationOptionHandler(
                [s, x].concat(ei)
              );
            } else ee = { ...x };
            (ee.lng = ee.lng || fixedT.lng),
              (ee.lngs = ee.lngs || fixedT.lngs),
              (ee.ns = ee.ns || fixedT.ns),
              "" !== ee.keyPrefix &&
                (ee.keyPrefix = ee.keyPrefix || W || fixedT.keyPrefix);
            let ea = X.options.keySeparator || ".";
            return (
              (et =
                ee.keyPrefix && Array.isArray(s)
                  ? s.map((s) => `${ee.keyPrefix}${ea}${s}`)
                  : ee.keyPrefix
                  ? `${ee.keyPrefix}${ea}${s}`
                  : s),
              X.t(et, ee)
            );
          };
          return (
            isString(s) ? (fixedT.lng = s) : (fixedT.lngs = s),
            (fixedT.ns = x),
            (fixedT.keyPrefix = W),
            fixedT
          );
        }
        t() {
          return this.translator && this.translator.translate(...arguments);
        }
        exists() {
          return this.translator && this.translator.exists(...arguments);
        }
        setDefaultNamespace(s) {
          this.options.defaultNS = s;
        }
        hasLoadedNamespace(s) {
          let x =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (!this.isInitialized)
            return (
              this.logger.warn(
                "hasLoadedNamespace: i18next was not initialized",
                this.languages
              ),
              !1
            );
          if (!this.languages || !this.languages.length)
            return (
              this.logger.warn(
                "hasLoadedNamespace: i18n.languages were undefined or empty",
                this.languages
              ),
              !1
            );
          let W = x.lng || this.resolvedLanguage || this.languages[0],
            X = !!this.options && this.options.fallbackLng,
            ee = this.languages[this.languages.length - 1];
          if ("cimode" === W.toLowerCase()) return !0;
          let loadNotPending = (s, x) => {
            let W = this.services.backendConnector.state[`${s}|${x}`];
            return -1 === W || 0 === W || 2 === W;
          };
          if (x.precheck) {
            let s = x.precheck(this, loadNotPending);
            if (void 0 !== s) return s;
          }
          return !!(
            this.hasResourceBundle(W, s) ||
            !this.services.backendConnector.backend ||
            (this.options.resources && !this.options.partialBundledLanguages) ||
            (loadNotPending(W, s) && (!X || loadNotPending(ee, s)))
          );
        }
        loadNamespaces(s, x) {
          let W = defer();
          return this.options.ns
            ? (isString(s) && (s = [s]),
              s.forEach((s) => {
                0 > this.options.ns.indexOf(s) && this.options.ns.push(s);
              }),
              this.loadResources((s) => {
                W.resolve(), x && x(s);
              }),
              W)
            : (x && x(), Promise.resolve());
        }
        loadLanguages(s, x) {
          let W = defer();
          isString(s) && (s = [s]);
          let X = this.options.preload || [],
            ee = s.filter(
              (s) =>
                0 > X.indexOf(s) &&
                this.services.languageUtils.isSupportedCode(s)
            );
          return ee.length
            ? ((this.options.preload = X.concat(ee)),
              this.loadResources((s) => {
                W.resolve(), x && x(s);
              }),
              W)
            : (x && x(), Promise.resolve());
        }
        dir(s) {
          if (
            (s ||
              (s =
                this.resolvedLanguage ||
                (this.languages && this.languages.length > 0
                  ? this.languages[0]
                  : this.language)),
            !s)
          )
            return "rtl";
          let x =
            (this.services && this.services.languageUtils) ||
            new LanguageUtil(get());
          return [
            "ar",
            "shu",
            "sqr",
            "ssh",
            "xaa",
            "yhd",
            "yud",
            "aao",
            "abh",
            "abv",
            "acm",
            "acq",
            "acw",
            "acx",
            "acy",
            "adf",
            "ads",
            "aeb",
            "aec",
            "afb",
            "ajp",
            "apc",
            "apd",
            "arb",
            "arq",
            "ars",
            "ary",
            "arz",
            "auz",
            "avl",
            "ayh",
            "ayl",
            "ayn",
            "ayp",
            "bbz",
            "pga",
            "he",
            "iw",
            "ps",
            "pbt",
            "pbu",
            "pst",
            "prp",
            "prd",
            "ug",
            "ur",
            "ydd",
            "yds",
            "yih",
            "ji",
            "yi",
            "hbo",
            "men",
            "xmn",
            "fa",
            "jpr",
            "peo",
            "pes",
            "prs",
            "dv",
            "sam",
            "ckb",
          ].indexOf(x.getLanguagePartFromCode(s)) > -1 ||
            s.toLowerCase().indexOf("-arab") > 1
            ? "rtl"
            : "ltr";
        }
        static createInstance() {
          let s =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            x = arguments.length > 1 ? arguments[1] : void 0;
          return new I18n(s, x);
        }
        cloneInstance() {
          let s =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            x =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : noop,
            W = s.forkResourceStore;
          W && delete s.forkResourceStore;
          let X = { ...this.options, ...s, isClone: !0 },
            ee = new I18n(X);
          return (
            (void 0 !== s.debug || void 0 !== s.prefix) &&
              (ee.logger = ee.logger.clone(s)),
            ["store", "services", "language"].forEach((s) => {
              ee[s] = this[s];
            }),
            (ee.services = { ...this.services }),
            (ee.services.utils = {
              hasLoadedNamespace: ee.hasLoadedNamespace.bind(ee),
            }),
            W &&
              ((ee.store = new ResourceStore(this.store.data, X)),
              (ee.services.resourceStore = ee.store)),
            (ee.translator = new Translator(ee.services, X)),
            ee.translator.on("*", function (s) {
              for (
                var x = arguments.length, W = Array(x > 1 ? x - 1 : 0), X = 1;
                X < x;
                X++
              )
                W[X - 1] = arguments[X];
              ee.emit(s, ...W);
            }),
            ee.init(X, x),
            (ee.translator.options = X),
            (ee.translator.backendConnector.services.utils = {
              hasLoadedNamespace: ee.hasLoadedNamespace.bind(ee),
            }),
            ee
          );
        }
        toJSON() {
          return {
            options: this.options,
            store: this.store,
            language: this.language,
            languages: this.languages,
            resolvedLanguage: this.resolvedLanguage,
          };
        }
      };
      let ep = I18n.createInstance();
      (ep.createInstance = I18n.createInstance),
        ep.createInstance,
        ep.dir,
        ep.init,
        ep.loadResources,
        ep.reloadResources,
        ep.use;
      let ef = ep.changeLanguage;
      ep.getFixedT;
      let eg = ep.t;
      ep.exists,
        ep.setDefaultNamespace,
        ep.hasLoadedNamespace,
        ep.loadNamespaces,
        ep.loadLanguages;
    },
    59662: function (s, x, W) {
      "use strict";
      W.d(x, {
        Cb: function () {
          return X.C;
        },
        SB: function () {
          return ee.S;
        },
      });
      var X = W(34790),
        ee = W(19005);
    },
    31364: function (s, x, W) {
      "use strict";
      W.d(x, {
        $: function () {
          return et;
        },
      });
      var X = W(69699),
        ee = W(48476);
      /**
       * @license
       * Copyright 2018 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ let et = (0, ee.XM)(
        class extends ee.Xe {
          constructor(s) {
            if (
              (super(s),
              s.type !== ee.pX.ATTRIBUTE ||
                "class" !== s.name ||
                s.strings?.length > 2)
            )
              throw Error(
                "`classMap()` can only be used in the `class` attribute and must be the only part in the attribute."
              );
          }
          render(s) {
            return (
              " " +
              Object.keys(s)
                .filter((x) => s[x])
                .join(" ") +
              " "
            );
          }
          update(s, [x]) {
            if (void 0 === this.st) {
              for (let W in ((this.st = new Set()),
              void 0 !== s.strings &&
                (this.nt = new Set(
                  s.strings
                    .join(" ")
                    .split(/\s/)
                    .filter((s) => "" !== s)
                )),
              x))
                x[W] && !this.nt?.has(W) && this.st.add(W);
              return this.render(x);
            }
            let W = s.element.classList;
            for (let s of this.st) s in x || (W.remove(s), this.st.delete(s));
            for (let s in x) {
              let X = !!x[s];
              X === this.st.has(s) ||
                this.nt?.has(s) ||
                (X
                  ? (W.add(s), this.st.add(s))
                  : (W.remove(s), this.st.delete(s)));
            }
            return X.Jb;
          }
        }
      );
    },
    35592: function (s, x, W) {
      "use strict";
      W.d(x, {
        o: function () {
          return o;
        },
      });
      var X = W(69699);
      /**
       * @license
       * Copyright 2018 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ let o = (s) => s ?? X.Ld;
    },
    69178: function (s, x, W) {
      "use strict";
      W.d(x, {
        V: function () {
          return ref_e;
        },
        i: function () {
          return ei;
        },
      });
      var X = W(69699);
      /**
       * @license
       * Copyright 2020 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ let { I: ee } = X._$LH,
        directive_helpers_f = (s) => void 0 === s.strings;
      var et = W(48476);
      /**
       * @license
       * Copyright 2017 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ let async_directive_s = (s, x) => {
          let W = s._$AN;
          if (void 0 === W) return !1;
          for (let s of W) s._$AO?.(x, !1), async_directive_s(s, x);
          return !0;
        },
        o = (s) => {
          let x, W;
          do {
            if (void 0 === (x = s._$AM)) break;
            (W = x._$AN).delete(s), (s = x);
          } while (0 === W?.size);
        },
        async_directive_r = (s) => {
          for (let x; (x = s._$AM); s = x) {
            let W = x._$AN;
            if (void 0 === W) x._$AN = W = new Set();
            else if (W.has(s)) break;
            W.add(s), async_directive_c(x);
          }
        };
      function async_directive_h(s) {
        void 0 !== this._$AN
          ? (o(this), (this._$AM = s), async_directive_r(this))
          : (this._$AM = s);
      }
      function async_directive_n(s, x = !1, W = 0) {
        let X = this._$AH,
          ee = this._$AN;
        if (void 0 !== ee && 0 !== ee.size) {
          if (x) {
            if (Array.isArray(X))
              for (let s = W; s < X.length; s++)
                async_directive_s(X[s], !1), o(X[s]);
            else null != X && (async_directive_s(X, !1), o(X));
          } else async_directive_s(this, s);
        }
      }
      let async_directive_c = (s) => {
        s.type == et.pX.CHILD &&
          ((s._$AP ??= async_directive_n), (s._$AQ ??= async_directive_h));
      };
      let f = class f extends et.Xe {
        constructor() {
          super(...arguments), (this._$AN = void 0);
        }
        _$AT(s, x, W) {
          super._$AT(s, x, W),
            async_directive_r(this),
            (this.isConnected = s._$AU);
        }
        _$AO(s, x = !0) {
          s !== this.isConnected &&
            ((this.isConnected = s),
            s ? this.reconnected?.() : this.disconnected?.()),
            x && (async_directive_s(this, s), o(this));
        }
        setValue(s) {
          if (directive_helpers_f(this._$Ct)) this._$Ct._$AI(s, this);
          else {
            let x = [...this._$Ct._$AH];
            (x[this._$Ci] = s), this._$Ct._$AI(x, this, 0);
          }
        }
        disconnected() {}
        reconnected() {}
      };
      /**
       * @license
       * Copyright 2020 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ let ref_e = () => new ref_h();
      let ref_h = class ref_h {};
      let er = new WeakMap(),
        ei = (0, et.XM)(
          class extends f {
            render(s) {
              return X.Ld;
            }
            update(s, [x]) {
              let W = x !== this.Y;
              return (
                W && void 0 !== this.Y && this.rt(void 0),
                (W || this.lt !== this.ct) &&
                  ((this.Y = x),
                  (this.ht = s.options?.host),
                  this.rt((this.ct = s.element))),
                X.Ld
              );
            }
            rt(s) {
              if (
                (this.isConnected || (s = void 0), "function" == typeof this.Y)
              ) {
                let x = this.ht ?? globalThis,
                  W = er.get(x);
                void 0 === W && ((W = new WeakMap()), er.set(x, W)),
                  void 0 !== W.get(this.Y) && this.Y.call(this.ht, void 0),
                  W.set(this.Y, s),
                  void 0 !== s && this.Y.call(this.ht, s);
              } else this.Y.value = s;
            }
            get lt() {
              return "function" == typeof this.Y
                ? er.get(this.ht ?? globalThis)?.get(this.Y)
                : this.Y?.value;
            }
            disconnected() {
              this.lt === this.ct && this.rt(void 0);
            }
            reconnected() {
              this.rt(this.ct);
            }
          }
        );
    },
    52284: function (s, x, W) {
      "use strict";
      W.d(x, {
        oi: function () {
          return r;
        },
        iv: function () {
          return X.iv;
        },
        dy: function () {
          return ee.dy;
        },
        YP: function () {
          return ee.YP;
        },
        $m: function () {
          return X.$m;
        },
      });
      var X = W(97286),
        ee = W(69699);
      /**
       * @license
       * Copyright 2017 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ let r = class r extends X.fl {
        constructor() {
          super(...arguments),
            (this.renderOptions = { host: this }),
            (this._$Do = void 0);
        }
        createRenderRoot() {
          let s = super.createRenderRoot();
          return (this.renderOptions.renderBefore ??= s.firstChild), s;
        }
        update(s) {
          let x = this.render();
          this.hasUpdated ||
            (this.renderOptions.isConnected = this.isConnected),
            super.update(s),
            (this._$Do = (0, ee.sY)(x, this.renderRoot, this.renderOptions));
        }
        connectedCallback() {
          super.connectedCallback(), this._$Do?.setConnected(!0);
        }
        disconnectedCallback() {
          super.disconnectedCallback(), this._$Do?.setConnected(!1);
        }
        render() {
          return ee.Jb;
        }
      };
      (r._$litElement$ = !0),
        (r.finalized = !0),
        globalThis.litElementHydrateSupport?.({ LitElement: r });
      let et = globalThis.litElementPolyfillSupport;
      et?.({ LitElement: r }),
        (globalThis.litElementVersions ??= []).push("4.1.1");
    },
    34790: function (s, x, W) {
      "use strict";
      W.d(x, {
        C: function () {
          return n;
        },
      });
      var X = W(97286);
      /**
       * @license
       * Copyright 2017 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ let ee = {
          attribute: !0,
          type: String,
          converter: X.Ts,
          reflect: !1,
          hasChanged: X.Qu,
        },
        r = (s = ee, x, W) => {
          let { kind: X, metadata: et } = W,
            er = globalThis.litPropertyMetadata.get(et);
          if (
            (void 0 === er &&
              globalThis.litPropertyMetadata.set(et, (er = new Map())),
            er.set(W.name, s),
            "accessor" === X)
          ) {
            let { name: X } = W;
            return {
              set(W) {
                let ee = x.get.call(this);
                x.set.call(this, W), this.requestUpdate(X, ee, s);
              },
              init(x) {
                return void 0 !== x && this.P(X, void 0, s), x;
              },
            };
          }
          if ("setter" === X) {
            let { name: X } = W;
            return function (W) {
              let ee = this[X];
              x.call(this, W), this.requestUpdate(X, ee, s);
            };
          }
          throw Error("Unsupported decorator location: " + X);
        };
      function n(s) {
        return (x, W) =>
          "object" == typeof W
            ? r(s, x, W)
            : ((s, x, W) => {
                let X = x.hasOwnProperty(W);
                return (
                  x.constructor.createProperty(
                    W,
                    X ? { ...s, wrapped: !0 } : s
                  ),
                  X ? Object.getOwnPropertyDescriptor(x, W) : void 0
                );
              })(s, x, W);
      }
    },
    19005: function (s, x, W) {
      "use strict";
      W.d(x, {
        S: function () {
          return r;
        },
      });
      var X = W(34790);
      /**
       * @license
       * Copyright 2017 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ function r(s) {
        return (0, X.C)({ ...s, state: !0, attribute: !1 });
      }
    },
    97286: function (s, x, W) {
      "use strict";
      W.d(x, {
        fl: function () {
          return b;
        },
        iv: function () {
          return i;
        },
        Ts: function () {
          return eg;
        },
        Qu: function () {
          return f;
        },
        $m: function () {
          return r;
        },
      });
      /**
       * @license
       * Copyright 2019 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ let X = globalThis,
        ee =
          X.ShadowRoot &&
          (void 0 === X.ShadyCSS || X.ShadyCSS.nativeShadow) &&
          "adoptedStyleSheets" in Document.prototype &&
          "replace" in CSSStyleSheet.prototype,
        et = Symbol(),
        er = new WeakMap();
      let n = class n {
        constructor(s, x, W) {
          if (((this._$cssResult$ = !0), W !== et))
            throw Error(
              "CSSResult is not constructable. Use `unsafeCSS` or `css` instead."
            );
          (this.cssText = s), (this.t = x);
        }
        get styleSheet() {
          let s = this.o,
            x = this.t;
          if (ee && void 0 === s) {
            let W = void 0 !== x && 1 === x.length;
            W && (s = er.get(x)),
              void 0 === s &&
                ((this.o = s = new CSSStyleSheet()).replaceSync(this.cssText),
                W && er.set(x, s));
          }
          return s;
        }
        toString() {
          return this.cssText;
        }
      };
      let r = (s) => new n("string" == typeof s ? s : s + "", void 0, et),
        i = (s, ...x) => {
          let W =
            1 === s.length
              ? s[0]
              : x.reduce(
                  (x, W, X) =>
                    x +
                    ((s) => {
                      if (!0 === s._$cssResult$) return s.cssText;
                      if ("number" == typeof s) return s;
                      throw Error(
                        "Value passed to 'css' function must be a 'css' function result: " +
                          s +
                          ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security."
                      );
                    })(W) +
                    s[X + 1],
                  s[0]
                );
          return new n(W, s, et);
        },
        S = (s, x) => {
          if (ee)
            s.adoptedStyleSheets = x.map((s) =>
              s instanceof CSSStyleSheet ? s : s.styleSheet
            );
          else
            for (let W of x) {
              let x = document.createElement("style"),
                ee = X.litNonce;
              void 0 !== ee && x.setAttribute("nonce", ee),
                (x.textContent = W.cssText),
                s.appendChild(x);
            }
        },
        ei = ee
          ? (s) => s
          : (s) =>
              s instanceof CSSStyleSheet
                ? ((s) => {
                    let x = "";
                    for (let W of s.cssRules) x += W.cssText;
                    return r(x);
                  })(s)
                : s,
        {
          is: eo,
          defineProperty: ea,
          getOwnPropertyDescriptor: es,
          getOwnPropertyNames: el,
          getOwnPropertySymbols: ec,
          getPrototypeOf: eu,
        } = Object,
        ed = globalThis,
        eh = ed.trustedTypes,
        ep = eh ? eh.emptyScript : "",
        ef = ed.reactiveElementPolyfillSupport,
        d = (s, x) => s,
        eg = {
          toAttribute(s, x) {
            switch (x) {
              case Boolean:
                s = s ? ep : null;
                break;
              case Object:
              case Array:
                s = null == s ? s : JSON.stringify(s);
            }
            return s;
          },
          fromAttribute(s, x) {
            let W = s;
            switch (x) {
              case Boolean:
                W = null !== s;
                break;
              case Number:
                W = null === s ? null : Number(s);
                break;
              case Object:
              case Array:
                try {
                  W = JSON.parse(s);
                } catch (s) {
                  W = null;
                }
            }
            return W;
          },
        },
        f = (s, x) => !eo(s, x),
        em = {
          attribute: !0,
          type: String,
          converter: eg,
          reflect: !1,
          hasChanged: f,
        };
      (Symbol.metadata ??= Symbol("metadata")),
        (ed.litPropertyMetadata ??= new WeakMap());
      let b = class b extends HTMLElement {
        static addInitializer(s) {
          this._$Ei(), (this.l ??= []).push(s);
        }
        static get observedAttributes() {
          return this.finalize(), this._$Eh && [...this._$Eh.keys()];
        }
        static createProperty(s, x = em) {
          if (
            (x.state && (x.attribute = !1),
            this._$Ei(),
            this.elementProperties.set(s, x),
            !x.noAccessor)
          ) {
            let W = Symbol(),
              X = this.getPropertyDescriptor(s, W, x);
            void 0 !== X && ea(this.prototype, s, X);
          }
        }
        static getPropertyDescriptor(s, x, W) {
          let { get: X, set: ee } = es(this.prototype, s) ?? {
            get() {
              return this[x];
            },
            set(s) {
              this[x] = s;
            },
          };
          return {
            get() {
              return X?.call(this);
            },
            set(x) {
              let et = X?.call(this);
              ee.call(this, x), this.requestUpdate(s, et, W);
            },
            configurable: !0,
            enumerable: !0,
          };
        }
        static getPropertyOptions(s) {
          return this.elementProperties.get(s) ?? em;
        }
        static _$Ei() {
          if (this.hasOwnProperty(d("elementProperties"))) return;
          let s = eu(this);
          s.finalize(),
            void 0 !== s.l && (this.l = [...s.l]),
            (this.elementProperties = new Map(s.elementProperties));
        }
        static finalize() {
          if (this.hasOwnProperty(d("finalized"))) return;
          if (
            ((this.finalized = !0),
            this._$Ei(),
            this.hasOwnProperty(d("properties")))
          ) {
            let s = this.properties,
              x = [...el(s), ...ec(s)];
            for (let W of x) this.createProperty(W, s[W]);
          }
          let s = this[Symbol.metadata];
          if (null !== s) {
            let x = litPropertyMetadata.get(s);
            if (void 0 !== x)
              for (let [s, W] of x) this.elementProperties.set(s, W);
          }
          for (let [s, x] of ((this._$Eh = new Map()),
          this.elementProperties)) {
            let W = this._$Eu(s, x);
            void 0 !== W && this._$Eh.set(W, s);
          }
          this.elementStyles = this.finalizeStyles(this.styles);
        }
        static finalizeStyles(s) {
          let x = [];
          if (Array.isArray(s)) {
            let W = new Set(s.flat(1 / 0).reverse());
            for (let s of W) x.unshift(ei(s));
          } else void 0 !== s && x.push(ei(s));
          return x;
        }
        static _$Eu(s, x) {
          let W = x.attribute;
          return !1 === W
            ? void 0
            : "string" == typeof W
            ? W
            : "string" == typeof s
            ? s.toLowerCase()
            : void 0;
        }
        constructor() {
          super(),
            (this._$Ep = void 0),
            (this.isUpdatePending = !1),
            (this.hasUpdated = !1),
            (this._$Em = null),
            this._$Ev();
        }
        _$Ev() {
          (this._$ES = new Promise((s) => (this.enableUpdating = s))),
            (this._$AL = new Map()),
            this._$E_(),
            this.requestUpdate(),
            this.constructor.l?.forEach((s) => s(this));
        }
        addController(s) {
          (this._$EO ??= new Set()).add(s),
            void 0 !== this.renderRoot &&
              this.isConnected &&
              s.hostConnected?.();
        }
        removeController(s) {
          this._$EO?.delete(s);
        }
        _$E_() {
          let s = new Map(),
            x = this.constructor.elementProperties;
          for (let W of x.keys())
            this.hasOwnProperty(W) && (s.set(W, this[W]), delete this[W]);
          s.size > 0 && (this._$Ep = s);
        }
        createRenderRoot() {
          let s =
            this.shadowRoot ??
            this.attachShadow(this.constructor.shadowRootOptions);
          return S(s, this.constructor.elementStyles), s;
        }
        connectedCallback() {
          (this.renderRoot ??= this.createRenderRoot()),
            this.enableUpdating(!0),
            this._$EO?.forEach((s) => s.hostConnected?.());
        }
        enableUpdating(s) {}
        disconnectedCallback() {
          this._$EO?.forEach((s) => s.hostDisconnected?.());
        }
        attributeChangedCallback(s, x, W) {
          this._$AK(s, W);
        }
        _$EC(s, x) {
          let W = this.constructor.elementProperties.get(s),
            X = this.constructor._$Eu(s, W);
          if (void 0 !== X && !0 === W.reflect) {
            let ee = (
              void 0 !== W.converter?.toAttribute ? W.converter : eg
            ).toAttribute(x, W.type);
            (this._$Em = s),
              null == ee ? this.removeAttribute(X) : this.setAttribute(X, ee),
              (this._$Em = null);
          }
        }
        _$AK(s, x) {
          let W = this.constructor,
            X = W._$Eh.get(s);
          if (void 0 !== X && this._$Em !== X) {
            let s = W.getPropertyOptions(X),
              ee =
                "function" == typeof s.converter
                  ? { fromAttribute: s.converter }
                  : void 0 !== s.converter?.fromAttribute
                  ? s.converter
                  : eg;
            (this._$Em = X),
              (this[X] = ee.fromAttribute(x, s.type)),
              (this._$Em = null);
          }
        }
        requestUpdate(s, x, W) {
          if (void 0 !== s) {
            if (
              !((W ??= this.constructor.getPropertyOptions(s)).hasChanged ?? f)(
                this[s],
                x
              )
            )
              return;
            this.P(s, x, W);
          }
          !1 === this.isUpdatePending && (this._$ES = this._$ET());
        }
        P(s, x, W) {
          this._$AL.has(s) || this._$AL.set(s, x),
            !0 === W.reflect &&
              this._$Em !== s &&
              (this._$Ej ??= new Set()).add(s);
        }
        async _$ET() {
          this.isUpdatePending = !0;
          try {
            await this._$ES;
          } catch (s) {
            Promise.reject(s);
          }
          let s = this.scheduleUpdate();
          return null != s && (await s), !this.isUpdatePending;
        }
        scheduleUpdate() {
          return this.performUpdate();
        }
        performUpdate() {
          if (!this.isUpdatePending) return;
          if (!this.hasUpdated) {
            if (((this.renderRoot ??= this.createRenderRoot()), this._$Ep)) {
              for (let [s, x] of this._$Ep) this[s] = x;
              this._$Ep = void 0;
            }
            let s = this.constructor.elementProperties;
            if (s.size > 0)
              for (let [x, W] of s)
                !0 !== W.wrapped ||
                  this._$AL.has(x) ||
                  void 0 === this[x] ||
                  this.P(x, this[x], W);
          }
          let s = !1,
            x = this._$AL;
          try {
            (s = this.shouldUpdate(x))
              ? (this.willUpdate(x),
                this._$EO?.forEach((s) => s.hostUpdate?.()),
                this.update(x))
              : this._$EU();
          } catch (x) {
            throw ((s = !1), this._$EU(), x);
          }
          s && this._$AE(x);
        }
        willUpdate(s) {}
        _$AE(s) {
          this._$EO?.forEach((s) => s.hostUpdated?.()),
            this.hasUpdated || ((this.hasUpdated = !0), this.firstUpdated(s)),
            this.updated(s);
        }
        _$EU() {
          (this._$AL = new Map()), (this.isUpdatePending = !1);
        }
        get updateComplete() {
          return this.getUpdateComplete();
        }
        getUpdateComplete() {
          return this._$ES;
        }
        shouldUpdate(s) {
          return !0;
        }
        update(s) {
          (this._$Ej &&= this._$Ej.forEach((s) => this._$EC(s, this[s]))),
            this._$EU();
        }
        updated(s) {}
        firstUpdated(s) {}
      };
      (b.elementStyles = []),
        (b.shadowRootOptions = { mode: "open" }),
        (b[d("elementProperties")] = new Map()),
        (b[d("finalized")] = new Map()),
        ef?.({ ReactiveElement: b }),
        (ed.reactiveElementVersions ??= []).push("2.0.4");
    },
    48476: function (s, x, W) {
      "use strict";
      W.d(x, {
        XM: function () {
          return e;
        },
        Xe: function () {
          return i;
        },
        pX: function () {
          return X;
        },
      });
      /**
       * @license
       * Copyright 2017 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ let X = {
          ATTRIBUTE: 1,
          CHILD: 2,
          PROPERTY: 3,
          BOOLEAN_ATTRIBUTE: 4,
          EVENT: 5,
          ELEMENT: 6,
        },
        e =
          (s) =>
          (...x) => ({ _$litDirective$: s, values: x });
      let i = class i {
        constructor(s) {}
        get _$AU() {
          return this._$AM._$AU;
        }
        _$AT(s, x, W) {
          (this._$Ct = s), (this._$AM = x), (this._$Ci = W);
        }
        _$AS(s, x) {
          return this.update(s, x);
        }
        update(s, x) {
          return this.render(...x);
        }
      };
    },
    69699: function (s, x, W) {
      "use strict";
      W.d(x, {
        Jb: function () {
          return ev;
        },
        Ld: function () {
          return ey;
        },
        YP: function () {
          return eb;
        },
        _$LH: function () {
          return ex;
        },
        dy: function () {
          return ew;
        },
        sY: function () {
          return B;
        },
      });
      /**
       * @license
       * Copyright 2017 Google LLC
       * SPDX-License-Identifier: BSD-3-Clause
       */ let X = globalThis,
        ee = X.trustedTypes,
        et = ee
          ? ee.createPolicy("lit-html", { createHTML: (s) => s })
          : void 0,
        er = "$lit$",
        ei = `lit$${Math.random().toFixed(9).slice(2)}$`,
        eo = "?" + ei,
        ea = `<${eo}>`,
        es = document,
        l = () => es.createComment(""),
        c = (s) =>
          null === s || ("object" != typeof s && "function" != typeof s),
        el = Array.isArray,
        u = (s) => el(s) || "function" == typeof s?.[Symbol.iterator],
        ec = "[ 	\n\f\r]",
        eu = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,
        ed = /-->/g,
        eh = />/g,
        ep = RegExp(
          `>|${ec}(?:([^\\s"'>=/]+)(${ec}*=${ec}*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`,
          "g"
        ),
        ef = /'/g,
        eg = /"/g,
        em = /^(?:script|style|textarea|title)$/i,
        y =
          (s) =>
          (x, ...W) => ({ _$litType$: s, strings: x, values: W }),
        ew = y(1),
        eb = y(2),
        ev = (y(3), Symbol.for("lit-noChange")),
        ey = Symbol.for("lit-nothing"),
        e_ = new WeakMap(),
        eC = es.createTreeWalker(es, 129);
      function P(s, x) {
        if (!el(s) || !s.hasOwnProperty("raw"))
          throw Error("invalid template strings array");
        return void 0 !== et ? et.createHTML(x) : x;
      }
      let V = (s, x) => {
        let W = s.length - 1,
          X = [],
          ee,
          et = 2 === x ? "<svg>" : 3 === x ? "<math>" : "",
          eo = eu;
        for (let x = 0; x < W; x++) {
          let W = s[x],
            es,
            el,
            ec = -1,
            ew = 0;
          for (
            ;
            ew < W.length && ((eo.lastIndex = ew), null !== (el = eo.exec(W)));

          )
            (ew = eo.lastIndex),
              eo === eu
                ? "!--" === el[1]
                  ? (eo = ed)
                  : void 0 !== el[1]
                  ? (eo = eh)
                  : void 0 !== el[2]
                  ? (em.test(el[2]) && (ee = RegExp("</" + el[2], "g")),
                    (eo = ep))
                  : void 0 !== el[3] && (eo = ep)
                : eo === ep
                ? ">" === el[0]
                  ? ((eo = ee ?? eu), (ec = -1))
                  : void 0 === el[1]
                  ? (ec = -2)
                  : ((ec = eo.lastIndex - el[2].length),
                    (es = el[1]),
                    (eo = void 0 === el[3] ? ep : '"' === el[3] ? eg : ef))
                : eo === eg || eo === ef
                ? (eo = ep)
                : eo === ed || eo === eh
                ? (eo = eu)
                : ((eo = ep), (ee = void 0));
          let eb = eo === ep && s[x + 1].startsWith("/>") ? " " : "";
          et +=
            eo === eu
              ? W + ea
              : ec >= 0
              ? (X.push(es), W.slice(0, ec) + er + W.slice(ec) + ei + eb)
              : W + ei + (-2 === ec ? x : eb);
        }
        return [
          P(
            s,
            et +
              (s[W] || "<?>") +
              (2 === x ? "</svg>" : 3 === x ? "</math>" : "")
          ),
          X,
        ];
      };
      let N = class N {
        constructor({ strings: s, _$litType$: x }, W) {
          let X;
          this.parts = [];
          let et = 0,
            ea = 0,
            es = s.length - 1,
            el = this.parts,
            [ec, eu] = V(s, x);
          if (
            ((this.el = N.createElement(ec, W)),
            (eC.currentNode = this.el.content),
            2 === x || 3 === x)
          ) {
            let s = this.el.content.firstChild;
            s.replaceWith(...s.childNodes);
          }
          for (; null !== (X = eC.nextNode()) && el.length < es; ) {
            if (1 === X.nodeType) {
              if (X.hasAttributes())
                for (let s of X.getAttributeNames())
                  if (s.endsWith(er)) {
                    let x = eu[ea++],
                      W = X.getAttribute(s).split(ei),
                      ee = /([.?@])?(.*)/.exec(x);
                    el.push({
                      type: 1,
                      index: et,
                      name: ee[2],
                      strings: W,
                      ctor:
                        "." === ee[1]
                          ? H
                          : "?" === ee[1]
                          ? I
                          : "@" === ee[1]
                          ? L
                          : k,
                    }),
                      X.removeAttribute(s);
                  } else
                    s.startsWith(ei) &&
                      (el.push({ type: 6, index: et }), X.removeAttribute(s));
              if (em.test(X.tagName)) {
                let s = X.textContent.split(ei),
                  x = s.length - 1;
                if (x > 0) {
                  X.textContent = ee ? ee.emptyScript : "";
                  for (let W = 0; W < x; W++)
                    X.append(s[W], l()),
                      eC.nextNode(),
                      el.push({ type: 2, index: ++et });
                  X.append(s[x], l());
                }
              }
            } else if (8 === X.nodeType) {
              if (X.data === eo) el.push({ type: 2, index: et });
              else {
                let s = -1;
                for (; -1 !== (s = X.data.indexOf(ei, s + 1)); )
                  el.push({ type: 7, index: et }), (s += ei.length - 1);
              }
            }
            et++;
          }
        }
        static createElement(s, x) {
          let W = es.createElement("template");
          return (W.innerHTML = s), W;
        }
      };
      function S(s, x, W = s, X) {
        if (x === ev) return x;
        let ee = void 0 !== X ? W._$Co?.[X] : W._$Cl,
          et = c(x) ? void 0 : x._$litDirective$;
        return (
          ee?.constructor !== et &&
            (ee?._$AO?.(!1),
            void 0 === et ? (ee = void 0) : (ee = new et(s))._$AT(s, W, X),
            void 0 !== X ? ((W._$Co ??= [])[X] = ee) : (W._$Cl = ee)),
          void 0 !== ee && (x = S(s, ee._$AS(s, x.values), ee, X)),
          x
        );
      }
      let M = class M {
        constructor(s, x) {
          (this._$AV = []),
            (this._$AN = void 0),
            (this._$AD = s),
            (this._$AM = x);
        }
        get parentNode() {
          return this._$AM.parentNode;
        }
        get _$AU() {
          return this._$AM._$AU;
        }
        u(s) {
          let {
              el: { content: x },
              parts: W,
            } = this._$AD,
            X = (s?.creationScope ?? es).importNode(x, !0);
          eC.currentNode = X;
          let ee = eC.nextNode(),
            et = 0,
            er = 0,
            ei = W[0];
          for (; void 0 !== ei; ) {
            if (et === ei.index) {
              let x;
              2 === ei.type
                ? (x = new R(ee, ee.nextSibling, this, s))
                : 1 === ei.type
                ? (x = new ei.ctor(ee, ei.name, ei.strings, this, s))
                : 6 === ei.type && (x = new z(ee, this, s)),
                this._$AV.push(x),
                (ei = W[++er]);
            }
            et !== ei?.index && ((ee = eC.nextNode()), et++);
          }
          return (eC.currentNode = es), X;
        }
        p(s) {
          let x = 0;
          for (let W of this._$AV)
            void 0 !== W &&
              (void 0 !== W.strings
                ? (W._$AI(s, W, x), (x += W.strings.length - 2))
                : W._$AI(s[x])),
              x++;
        }
      };
      let R = class R {
        get _$AU() {
          return this._$AM?._$AU ?? this._$Cv;
        }
        constructor(s, x, W, X) {
          (this.type = 2),
            (this._$AH = ey),
            (this._$AN = void 0),
            (this._$AA = s),
            (this._$AB = x),
            (this._$AM = W),
            (this.options = X),
            (this._$Cv = X?.isConnected ?? !0);
        }
        get parentNode() {
          let s = this._$AA.parentNode,
            x = this._$AM;
          return void 0 !== x && 11 === s?.nodeType && (s = x.parentNode), s;
        }
        get startNode() {
          return this._$AA;
        }
        get endNode() {
          return this._$AB;
        }
        _$AI(s, x = this) {
          c((s = S(this, s, x)))
            ? s === ey || null == s || "" === s
              ? (this._$AH !== ey && this._$AR(), (this._$AH = ey))
              : s !== this._$AH && s !== ev && this._(s)
            : void 0 !== s._$litType$
            ? this.$(s)
            : void 0 !== s.nodeType
            ? this.T(s)
            : u(s)
            ? this.k(s)
            : this._(s);
        }
        O(s) {
          return this._$AA.parentNode.insertBefore(s, this._$AB);
        }
        T(s) {
          this._$AH !== s && (this._$AR(), (this._$AH = this.O(s)));
        }
        _(s) {
          this._$AH !== ey && c(this._$AH)
            ? (this._$AA.nextSibling.data = s)
            : this.T(es.createTextNode(s)),
            (this._$AH = s);
        }
        $(s) {
          let { values: x, _$litType$: W } = s,
            X =
              "number" == typeof W
                ? this._$AC(s)
                : (void 0 === W.el &&
                    (W.el = N.createElement(P(W.h, W.h[0]), this.options)),
                  W);
          if (this._$AH?._$AD === X) this._$AH.p(x);
          else {
            let s = new M(X, this),
              W = s.u(this.options);
            s.p(x), this.T(W), (this._$AH = s);
          }
        }
        _$AC(s) {
          let x = e_.get(s.strings);
          return void 0 === x && e_.set(s.strings, (x = new N(s))), x;
        }
        k(s) {
          el(this._$AH) || ((this._$AH = []), this._$AR());
          let x = this._$AH,
            W,
            X = 0;
          for (let ee of s)
            X === x.length
              ? x.push(
                  (W = new R(this.O(l()), this.O(l()), this, this.options))
                )
              : (W = x[X]),
              W._$AI(ee),
              X++;
          X < x.length &&
            (this._$AR(W && W._$AB.nextSibling, X), (x.length = X));
        }
        _$AR(s = this._$AA.nextSibling, x) {
          for (this._$AP?.(!1, !0, x); s && s !== this._$AB; ) {
            let x = s.nextSibling;
            s.remove(), (s = x);
          }
        }
        setConnected(s) {
          void 0 === this._$AM && ((this._$Cv = s), this._$AP?.(s));
        }
      };
      let k = class k {
        get tagName() {
          return this.element.tagName;
        }
        get _$AU() {
          return this._$AM._$AU;
        }
        constructor(s, x, W, X, ee) {
          (this.type = 1),
            (this._$AH = ey),
            (this._$AN = void 0),
            (this.element = s),
            (this.name = x),
            (this._$AM = X),
            (this.options = ee),
            W.length > 2 || "" !== W[0] || "" !== W[1]
              ? ((this._$AH = Array(W.length - 1).fill(new String())),
                (this.strings = W))
              : (this._$AH = ey);
        }
        _$AI(s, x = this, W, X) {
          let ee = this.strings,
            et = !1;
          if (void 0 === ee)
            (et =
              !c((s = S(this, s, x, 0))) || (s !== this._$AH && s !== ev)) &&
              (this._$AH = s);
          else {
            let X, er;
            let ei = s;
            for (s = ee[0], X = 0; X < ee.length - 1; X++)
              (er = S(this, ei[W + X], x, X)) === ev && (er = this._$AH[X]),
                (et ||= !c(er) || er !== this._$AH[X]),
                er === ey
                  ? (s = ey)
                  : s !== ey && (s += (er ?? "") + ee[X + 1]),
                (this._$AH[X] = er);
          }
          et && !X && this.j(s);
        }
        j(s) {
          s === ey
            ? this.element.removeAttribute(this.name)
            : this.element.setAttribute(this.name, s ?? "");
        }
      };
      let H = class H extends k {
        constructor() {
          super(...arguments), (this.type = 3);
        }
        j(s) {
          this.element[this.name] = s === ey ? void 0 : s;
        }
      };
      let I = class I extends k {
        constructor() {
          super(...arguments), (this.type = 4);
        }
        j(s) {
          this.element.toggleAttribute(this.name, !!s && s !== ey);
        }
      };
      let L = class L extends k {
        constructor(s, x, W, X, ee) {
          super(s, x, W, X, ee), (this.type = 5);
        }
        _$AI(s, x = this) {
          if ((s = S(this, s, x, 0) ?? ey) === ev) return;
          let W = this._$AH,
            X =
              (s === ey && W !== ey) ||
              s.capture !== W.capture ||
              s.once !== W.once ||
              s.passive !== W.passive,
            ee = s !== ey && (W === ey || X);
          X && this.element.removeEventListener(this.name, this, W),
            ee && this.element.addEventListener(this.name, this, s),
            (this._$AH = s);
        }
        handleEvent(s) {
          "function" == typeof this._$AH
            ? this._$AH.call(this.options?.host ?? this.element, s)
            : this._$AH.handleEvent(s);
        }
      };
      let z = class z {
        constructor(s, x, W) {
          (this.element = s),
            (this.type = 6),
            (this._$AN = void 0),
            (this._$AM = x),
            (this.options = W);
        }
        get _$AU() {
          return this._$AM._$AU;
        }
        _$AI(s) {
          S(this, s);
        }
      };
      let ex = {
          M: er,
          P: ei,
          A: eo,
          C: 1,
          L: V,
          R: M,
          D: u,
          V: S,
          I: R,
          H: k,
          N: I,
          U: L,
          B: H,
          F: z,
        },
        eE = X.litHtmlPolyfillSupport;
      eE?.(N, R), (X.litHtmlVersions ??= []).push("3.2.1");
      let B = (s, x, W) => {
        let X = W?.renderBefore ?? x,
          ee = X._$litPart$;
        if (void 0 === ee) {
          let s = W?.renderBefore ?? null;
          X._$litPart$ = ee = new R(x.insertBefore(l(), s), s, void 0, W ?? {});
        }
        return ee._$AI(s), ee;
      };
    },
    67421: function (s, x, W) {
      "use strict";
      let X;
      W.d(x, {
        Db: function () {
          return ea;
        },
        $G: function () {
          return useTranslation_useTranslation;
        },
      });
      var ee = W(67294);
      W(71739), Object.create(null);
      let utils_warn = (...s) => {
          console?.warn &&
            (utils_isString(s[0]) && (s[0] = `react-i18next:: ${s[0]}`),
            console.warn(...s));
        },
        et = {},
        utils_warnOnce = (...s) => {
          (utils_isString(s[0]) && et[s[0]]) ||
            (utils_isString(s[0]) && (et[s[0]] = new Date()), utils_warn(...s));
        },
        loadedClb = (s, x) => () => {
          if (s.isInitialized) x();
          else {
            let initialized = () => {
              setTimeout(() => {
                s.off("initialized", initialized);
              }, 0),
                x();
            };
            s.on("initialized", initialized);
          }
        },
        loadNamespaces = (s, x, W) => {
          s.loadNamespaces(x, loadedClb(s, W));
        },
        loadLanguages = (s, x, W, X) => {
          if (
            (utils_isString(W) && (W = [W]),
            s.options.preload && s.options.preload.indexOf(x) > -1)
          )
            return loadNamespaces(s, W, X);
          W.forEach((x) => {
            0 > s.options.ns.indexOf(x) && s.options.ns.push(x);
          }),
            s.loadLanguages(x, loadedClb(s, X));
        },
        hasLoadedNamespace = (s, x, W = {}) =>
          x.languages && x.languages.length
            ? x.hasLoadedNamespace(s, {
                lng: W.lng,
                precheck: (x, X) => {
                  if (
                    W.bindI18n?.indexOf("languageChanging") > -1 &&
                    x.services.backendConnector.backend &&
                    x.isLanguageChangingTo &&
                    !X(x.isLanguageChangingTo, s)
                  )
                    return !1;
                },
              })
            : (utils_warnOnce(
                "i18n.languages were undefined or empty",
                x.languages
              ),
              !0),
        utils_isString = (s) => "string" == typeof s,
        utils_isObject = (s) => "object" == typeof s && null !== s,
        er =
          /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g,
        ei = {
          "&amp;": "&",
          "&#38;": "&",
          "&lt;": "<",
          "&#60;": "<",
          "&gt;": ">",
          "&#62;": ">",
          "&apos;": "'",
          "&#39;": "'",
          "&quot;": '"',
          "&#34;": '"',
          "&nbsp;": " ",
          "&#160;": " ",
          "&copy;": "\xa9",
          "&#169;": "\xa9",
          "&reg;": "\xae",
          "&#174;": "\xae",
          "&hellip;": "…",
          "&#8230;": "…",
          "&#x2F;": "/",
          "&#47;": "/",
        },
        unescapeHtmlEntity = (s) => ei[s],
        eo = {
          bindI18n: "languageChanged",
          bindI18nStore: "",
          transEmptyNodeValue: "",
          transSupportBasicHtmlNodes: !0,
          transWrapTextNodes: "",
          transKeepBasicHtmlNodesFor: ["br", "strong", "i", "p"],
          useSuspense: !0,
          unescape: (s) => s.replace(er, unescapeHtmlEntity),
        },
        setDefaults = (s = {}) => {
          eo = { ...eo, ...s };
        },
        defaults_getDefaults = () => eo,
        setI18n = (s) => {
          X = s;
        },
        i18nInstance_getI18n = () => X,
        ea = {
          type: "3rdParty",
          init(s) {
            setDefaults(s.options.react), setI18n(s);
          },
        },
        es = (0, ee.createContext)();
      let ReportNamespaces = class ReportNamespaces {
        constructor() {
          this.usedNamespaces = {};
        }
        addUsedNamespaces(s) {
          s.forEach((s) => {
            this.usedNamespaces[s] || (this.usedNamespaces[s] = !0);
          });
        }
        getUsedNamespaces() {
          return Object.keys(this.usedNamespaces);
        }
      };
      let usePrevious = (s, x) => {
          let W = (0, ee.useRef)();
          return (
            (0, ee.useEffect)(() => {
              W.current = x ? W.current : s;
            }, [s, x]),
            W.current
          );
        },
        alwaysNewT = (s, x, W, X) => s.getFixedT(x, W, X),
        useMemoizedT = (s, x, W, X) =>
          (0, ee.useCallback)(alwaysNewT(s, x, W, X), [s, x, W, X]),
        useTranslation_useTranslation = (s, x = {}) => {
          let { i18n: W } = x,
            { i18n: X, defaultNS: et } = (0, ee.useContext)(es) || {},
            er = W || X || i18nInstance_getI18n();
          if (
            (er &&
              !er.reportNamespaces &&
              (er.reportNamespaces = new ReportNamespaces()),
            !er)
          ) {
            utils_warnOnce(
              "You will need to pass in an i18next instance by using initReactI18next"
            );
            let notReadyT = (s, x) =>
                utils_isString(x)
                  ? x
                  : utils_isObject(x) && utils_isString(x.defaultValue)
                  ? x.defaultValue
                  : Array.isArray(s)
                  ? s[s.length - 1]
                  : s,
              s = [notReadyT, {}, !1];
            return (s.t = notReadyT), (s.i18n = {}), (s.ready = !1), s;
          }
          er.options.react?.wait &&
            utils_warnOnce(
              "It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour."
            );
          let ei = { ...defaults_getDefaults(), ...er.options.react, ...x },
            { useSuspense: eo, keyPrefix: ea } = ei,
            el = s || et || er.options?.defaultNS;
          (el = utils_isString(el) ? [el] : el || ["translation"]),
            er.reportNamespaces.addUsedNamespaces?.(el);
          let ec =
              (er.isInitialized || er.initializedStoreOnce) &&
              el.every((s) => hasLoadedNamespace(s, er, ei)),
            eu = useMemoizedT(
              er,
              x.lng || null,
              "fallback" === ei.nsMode ? el : el[0],
              ea
            ),
            getT = () => eu,
            getNewT = () =>
              alwaysNewT(
                er,
                x.lng || null,
                "fallback" === ei.nsMode ? el : el[0],
                ea
              ),
            [ed, eh] = (0, ee.useState)(getT),
            ep = el.join();
          x.lng && (ep = `${x.lng}${ep}`);
          let ef = usePrevious(ep),
            eg = (0, ee.useRef)(!0);
          (0, ee.useEffect)(() => {
            let { bindI18n: s, bindI18nStore: W } = ei;
            (eg.current = !0),
              ec ||
                eo ||
                (x.lng
                  ? loadLanguages(er, x.lng, el, () => {
                      eg.current && eh(getNewT);
                    })
                  : loadNamespaces(er, el, () => {
                      eg.current && eh(getNewT);
                    })),
              ec && ef && ef !== ep && eg.current && eh(getNewT);
            let boundReset = () => {
              eg.current && eh(getNewT);
            };
            return (
              s && er?.on(s, boundReset),
              W && er?.store.on(W, boundReset),
              () => {
                (eg.current = !1),
                  er && s?.split(" ").forEach((s) => er.off(s, boundReset)),
                  W &&
                    er &&
                    W.split(" ").forEach((s) => er.store.off(s, boundReset));
              }
            );
          }, [er, ep]),
            (0, ee.useEffect)(() => {
              eg.current && ec && eh(getT);
            }, [er, ea, ec]);
          let em = [ed, er, ec];
          if (
            ((em.t = ed), (em.i18n = er), (em.ready = ec), ec || (!ec && !eo))
          )
            return em;
          throw new Promise((s) => {
            x.lng
              ? loadLanguages(er, x.lng, el, () => s())
              : loadNamespaces(er, el, () => s());
          });
        };
    },
    55678: function (s, x, W) {
      "use strict";
      W.d(x, {
        Am: function () {
          return Q;
        },
        Ix: function () {
          return eo;
        },
      });
      var X = W(67294),
        ee = W(86010);
      let u = (s) => "number" == typeof s && !isNaN(s),
        d = (s) => "string" == typeof s,
        p = (s) => "function" == typeof s,
        m = (s) => (d(s) || p(s) ? s : null),
        f = (s) => (0, X.isValidElement)(s) || d(s) || p(s) || u(s);
      function h(s) {
        let {
          enter: x,
          exit: W,
          appendPosition: ee = !1,
          collapse: et = !0,
          collapseDuration: er = 300,
        } = s;
        return function (s) {
          let {
              children: ei,
              position: eo,
              preventExitTransition: ea,
              done: es,
              nodeRef: el,
              isIn: ec,
            } = s,
            eu = ee ? `${x}--${eo}` : x,
            ed = ee ? `${W}--${eo}` : W,
            eh = (0, X.useRef)(0);
          return (
            (0, X.useLayoutEffect)(() => {
              let s = el.current,
                x = eu.split(" "),
                n = (W) => {
                  W.target === el.current &&
                    (s.dispatchEvent(new Event("d")),
                    s.removeEventListener("animationend", n),
                    s.removeEventListener("animationcancel", n),
                    0 === eh.current &&
                      "animationcancel" !== W.type &&
                      s.classList.remove(...x));
                };
              s.classList.add(...x),
                s.addEventListener("animationend", n),
                s.addEventListener("animationcancel", n);
            }, []),
            (0, X.useEffect)(() => {
              let s = el.current,
                e = () => {
                  s.removeEventListener("animationend", e),
                    et
                      ? (function (s, x, W) {
                          void 0 === W && (W = 300);
                          let { scrollHeight: X, style: ee } = s;
                          requestAnimationFrame(() => {
                            (ee.minHeight = "initial"),
                              (ee.height = X + "px"),
                              (ee.transition = `all ${W}ms`),
                              requestAnimationFrame(() => {
                                (ee.height = "0"),
                                  (ee.padding = "0"),
                                  (ee.margin = "0"),
                                  setTimeout(x, W);
                              });
                          });
                        })(s, es, er)
                      : es();
                };
              ec ||
                (ea
                  ? e()
                  : ((eh.current = 1),
                    (s.className += ` ${ed}`),
                    s.addEventListener("animationend", e)));
            }, [ec]),
            X.createElement(X.Fragment, null, ei)
          );
        };
      }
      function y(s, x) {
        return null != s
          ? {
              content: s.content,
              containerId: s.props.containerId,
              id: s.props.toastId,
              theme: s.props.theme,
              type: s.props.type,
              data: s.props.data || {},
              isLoading: s.props.isLoading,
              icon: s.props.icon,
              status: x,
            }
          : {};
      }
      let et = {
          list: new Map(),
          emitQueue: new Map(),
          on(s, x) {
            return (
              this.list.has(s) || this.list.set(s, []),
              this.list.get(s).push(x),
              this
            );
          },
          off(s, x) {
            if (x) {
              let W = this.list.get(s).filter((s) => s !== x);
              return this.list.set(s, W), this;
            }
            return this.list.delete(s), this;
          },
          cancelEmit(s) {
            let x = this.emitQueue.get(s);
            return (
              x && (x.forEach(clearTimeout), this.emitQueue.delete(s)), this
            );
          },
          emit(s) {
            this.list.has(s) &&
              this.list.get(s).forEach((x) => {
                let W = setTimeout(() => {
                  x(...[].slice.call(arguments, 1));
                }, 0);
                this.emitQueue.has(s) || this.emitQueue.set(s, []),
                  this.emitQueue.get(s).push(W);
              });
          },
        },
        T = (s) => {
          let { theme: x, type: W, ...ee } = s;
          return X.createElement("svg", {
            viewBox: "0 0 24 24",
            width: "100%",
            height: "100%",
            fill:
              "colored" === x
                ? "currentColor"
                : `var(--toastify-icon-color-${W})`,
            ...ee,
          });
        },
        er = {
          info: function (s) {
            return X.createElement(
              T,
              { ...s },
              X.createElement("path", {
                d: "M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z",
              })
            );
          },
          warning: function (s) {
            return X.createElement(
              T,
              { ...s },
              X.createElement("path", {
                d: "M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z",
              })
            );
          },
          success: function (s) {
            return X.createElement(
              T,
              { ...s },
              X.createElement("path", {
                d: "M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z",
              })
            );
          },
          error: function (s) {
            return X.createElement(
              T,
              { ...s },
              X.createElement("path", {
                d: "M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z",
              })
            );
          },
          spinner: function () {
            return X.createElement("div", { className: "Toastify__spinner" });
          },
        };
      function b(s) {
        return s.targetTouches && s.targetTouches.length >= 1
          ? s.targetTouches[0].clientX
          : s.clientX;
      }
      function I(s) {
        return s.targetTouches && s.targetTouches.length >= 1
          ? s.targetTouches[0].clientY
          : s.clientY;
      }
      function L(s) {
        let { closeToast: x, theme: W, ariaLabel: ee = "close" } = s;
        return X.createElement(
          "button",
          {
            className: `Toastify__close-button Toastify__close-button--${W}`,
            type: "button",
            onClick: (s) => {
              s.stopPropagation(), x(s);
            },
            "aria-label": ee,
          },
          X.createElement(
            "svg",
            { "aria-hidden": "true", viewBox: "0 0 14 16" },
            X.createElement("path", {
              fillRule: "evenodd",
              d: "M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z",
            })
          )
        );
      }
      function O(s) {
        let {
            delay: x,
            isRunning: W,
            closeToast: et,
            type: er = "default",
            hide: ei,
            className: eo,
            style: ea,
            controlledProgress: es,
            progress: el,
            rtl: ec,
            isIn: eu,
            theme: ed,
          } = s,
          eh = ei || (es && 0 === el),
          ep = {
            ...ea,
            animationDuration: `${x}ms`,
            animationPlayState: W ? "running" : "paused",
            opacity: eh ? 0 : 1,
          };
        es && (ep.transform = `scaleX(${el})`);
        let ef = (0, ee.default)(
            "Toastify__progress-bar",
            es
              ? "Toastify__progress-bar--controlled"
              : "Toastify__progress-bar--animated",
            `Toastify__progress-bar-theme--${ed}`,
            `Toastify__progress-bar--${er}`,
            { "Toastify__progress-bar--rtl": ec }
          ),
          eg = p(eo)
            ? eo({ rtl: ec, type: er, defaultClassName: ef })
            : (0, ee.default)(ef, eo);
        return X.createElement("div", {
          role: "progressbar",
          "aria-hidden": eh ? "true" : "false",
          "aria-label": "notification timer",
          className: eg,
          style: ep,
          [es && el >= 1 ? "onTransitionEnd" : "onAnimationEnd"]:
            es && el < 1
              ? null
              : () => {
                  eu && et();
                },
        });
      }
      let N = (s) => {
          let {
              isRunning: x,
              preventExitTransition: W,
              toastRef: et,
              eventHandlers: er,
            } = (function (s) {
              let [x, W] = (0, X.useState)(!1),
                [ee, et] = (0, X.useState)(!1),
                er = (0, X.useRef)(null),
                ei = (0, X.useRef)({
                  start: 0,
                  x: 0,
                  y: 0,
                  delta: 0,
                  removalDistance: 0,
                  canCloseOnClick: !0,
                  canDrag: !1,
                  boundingRect: null,
                  didMove: !1,
                }).current,
                eo = (0, X.useRef)(s),
                {
                  autoClose: ea,
                  pauseOnHover: es,
                  closeToast: el,
                  onClick: ec,
                  closeOnClick: eu,
                } = s;
              function v(x) {
                if (s.draggable) {
                  "touchstart" === x.nativeEvent.type &&
                    x.nativeEvent.preventDefault(),
                    (ei.didMove = !1),
                    document.addEventListener("mousemove", _),
                    document.addEventListener("mouseup", L),
                    document.addEventListener("touchmove", _),
                    document.addEventListener("touchend", L);
                  let W = er.current;
                  (ei.canCloseOnClick = !0),
                    (ei.canDrag = !0),
                    (ei.boundingRect = W.getBoundingClientRect()),
                    (W.style.transition = ""),
                    (ei.x = b(x.nativeEvent)),
                    (ei.y = I(x.nativeEvent)),
                    "x" === s.draggableDirection
                      ? ((ei.start = ei.x),
                        (ei.removalDistance =
                          W.offsetWidth * (s.draggablePercent / 100)))
                      : ((ei.start = ei.y),
                        (ei.removalDistance =
                          W.offsetHeight *
                          (80 === s.draggablePercent
                            ? 1.5 * s.draggablePercent
                            : s.draggablePercent / 100)));
                }
              }
              function T(x) {
                if (ei.boundingRect) {
                  let {
                    top: W,
                    bottom: X,
                    left: ee,
                    right: et,
                  } = ei.boundingRect;
                  "touchend" !== x.nativeEvent.type &&
                  s.pauseOnHover &&
                  ei.x >= ee &&
                  ei.x <= et &&
                  ei.y >= W &&
                  ei.y <= X
                    ? C()
                    : E();
                }
              }
              function E() {
                W(!0);
              }
              function C() {
                W(!1);
              }
              function _(W) {
                let X = er.current;
                ei.canDrag &&
                  X &&
                  ((ei.didMove = !0),
                  x && C(),
                  (ei.x = b(W)),
                  (ei.y = I(W)),
                  (ei.delta =
                    "x" === s.draggableDirection
                      ? ei.x - ei.start
                      : ei.y - ei.start),
                  ei.start !== ei.x && (ei.canCloseOnClick = !1),
                  (X.style.transform = `translate${s.draggableDirection}(${ei.delta}px)`),
                  (X.style.opacity =
                    "" + (1 - Math.abs(ei.delta / ei.removalDistance))));
              }
              function L() {
                document.removeEventListener("mousemove", _),
                  document.removeEventListener("mouseup", L),
                  document.removeEventListener("touchmove", _),
                  document.removeEventListener("touchend", L);
                let x = er.current;
                if (ei.canDrag && ei.didMove && x) {
                  if (
                    ((ei.canDrag = !1), Math.abs(ei.delta) > ei.removalDistance)
                  )
                    return et(!0), void s.closeToast();
                  (x.style.transition = "transform 0.2s, opacity 0.2s"),
                    (x.style.transform = `translate${s.draggableDirection}(0)`),
                    (x.style.opacity = "1");
                }
              }
              (0, X.useEffect)(() => {
                eo.current = s;
              }),
                (0, X.useEffect)(
                  () => (
                    er.current &&
                      er.current.addEventListener("d", E, { once: !0 }),
                    p(s.onOpen) &&
                      s.onOpen(
                        (0, X.isValidElement)(s.children) && s.children.props
                      ),
                    () => {
                      let s = eo.current;
                      p(s.onClose) &&
                        s.onClose(
                          (0, X.isValidElement)(s.children) && s.children.props
                        );
                    }
                  ),
                  []
                ),
                (0, X.useEffect)(
                  () => (
                    s.pauseOnFocusLoss &&
                      (document.hasFocus() || C(),
                      window.addEventListener("focus", E),
                      window.addEventListener("blur", C)),
                    () => {
                      s.pauseOnFocusLoss &&
                        (window.removeEventListener("focus", E),
                        window.removeEventListener("blur", C));
                    }
                  ),
                  [s.pauseOnFocusLoss]
                );
              let ed = {
                onMouseDown: v,
                onTouchStart: v,
                onMouseUp: T,
                onTouchEnd: T,
              };
              return (
                ea && es && ((ed.onMouseEnter = C), (ed.onMouseLeave = E)),
                eu &&
                  (ed.onClick = (s) => {
                    ec && ec(s), ei.canCloseOnClick && el();
                  }),
                {
                  playToast: E,
                  pauseToast: C,
                  isRunning: x,
                  preventExitTransition: ee,
                  toastRef: er,
                  eventHandlers: ed,
                }
              );
            })(s),
            {
              closeButton: ei,
              children: eo,
              autoClose: ea,
              onClick: es,
              type: el,
              hideProgressBar: ec,
              closeToast: eu,
              transition: ed,
              position: eh,
              className: ep,
              style: ef,
              bodyClassName: eg,
              bodyStyle: em,
              progressClassName: ew,
              progressStyle: eb,
              updateId: ev,
              role: ey,
              progress: e_,
              rtl: eC,
              toastId: ex,
              deleteToast: eE,
              isIn: eA,
              isLoading: eS,
              iconOut: ek,
              closeOnClick: eT,
              theme: eI,
            } = s,
            eP = (0, ee.default)(
              "Toastify__toast",
              `Toastify__toast-theme--${eI}`,
              `Toastify__toast--${el}`,
              { "Toastify__toast--rtl": eC },
              { "Toastify__toast--close-on-click": eT }
            ),
            eR = p(ep)
              ? ep({ rtl: eC, position: eh, type: el, defaultClassName: eP })
              : (0, ee.default)(eP, ep),
            eN = !!e_ || !ea,
            eO = { closeToast: eu, type: el, theme: eI },
            eM = null;
          return (
            !1 === ei ||
              (eM = p(ei)
                ? ei(eO)
                : (0, X.isValidElement)(ei)
                ? (0, X.cloneElement)(ei, eO)
                : L(eO)),
            X.createElement(
              ed,
              {
                isIn: eA,
                done: eE,
                position: eh,
                preventExitTransition: W,
                nodeRef: et,
              },
              X.createElement(
                "div",
                {
                  id: ex,
                  onClick: es,
                  className: eR,
                  ...er,
                  style: ef,
                  ref: et,
                },
                X.createElement(
                  "div",
                  {
                    ...(eA && { role: ey }),
                    className: p(eg)
                      ? eg({ type: el })
                      : (0, ee.default)("Toastify__toast-body", eg),
                    style: em,
                  },
                  null != ek &&
                    X.createElement(
                      "div",
                      {
                        className: (0, ee.default)("Toastify__toast-icon", {
                          "Toastify--animate-icon Toastify__zoom-enter": !eS,
                        }),
                      },
                      ek
                    ),
                  X.createElement("div", null, eo)
                ),
                eM,
                X.createElement(O, {
                  ...(ev && !eN ? { key: `pb-${ev}` } : {}),
                  rtl: eC,
                  theme: eI,
                  delay: ea,
                  isRunning: x,
                  isIn: eA,
                  closeToast: eu,
                  hide: ec,
                  type: el,
                  style: eb,
                  className: ew,
                  controlledProgress: eN,
                  progress: e_ || 0,
                })
              )
            )
          );
        },
        M = function (s, x) {
          return (
            void 0 === x && (x = !1),
            {
              enter: `Toastify--animate Toastify__${s}-enter`,
              exit: `Toastify--animate Toastify__${s}-exit`,
              appendPosition: x,
            }
          );
        },
        ei = h(M("bounce", !0)),
        eo =
          (h(M("slide", !0)),
          h(M("zoom")),
          h(M("flip")),
          (0, X.forwardRef)((s, x) => {
            let {
                getToastToRender: W,
                containerRef: ei,
                isToastActive: eo,
              } = (function (s) {
                let [, x] = (0, X.useReducer)((s) => s + 1, 0),
                  [W, ee] = (0, X.useState)([]),
                  ei = (0, X.useRef)(null),
                  eo = (0, X.useRef)(new Map()).current,
                  T = (s) => -1 !== W.indexOf(s),
                  ea = (0, X.useRef)({
                    toastKey: 1,
                    displayedToast: 0,
                    count: 0,
                    queue: [],
                    props: s,
                    containerId: null,
                    isToastActive: T,
                    getToast: (s) => eo.get(s),
                  }).current;
                function b(s) {
                  let { containerId: x } = s,
                    { limit: W } = ea.props;
                  !W ||
                    (x && ea.containerId !== x) ||
                    ((ea.count -= ea.queue.length), (ea.queue = []));
                }
                function I(s) {
                  ee((x) => (null == s ? [] : x.filter((x) => x !== s)));
                }
                function _() {
                  let {
                    toastContent: s,
                    toastProps: x,
                    staleId: W,
                  } = ea.queue.shift();
                  O(s, x, W);
                }
                function L(s, W) {
                  var ee, es;
                  let { delay: el, staleId: ec, ...eu } = W;
                  if (
                    !f(s) ||
                    !ei.current ||
                    (ea.props.enableMultiContainer &&
                      eu.containerId !== ea.props.containerId) ||
                    (eo.has(eu.toastId) && null == eu.updateId)
                  )
                    return;
                  let { toastId: ed, updateId: eh, data: ep } = eu,
                    { props: ef } = ea,
                    L = () => I(ed),
                    eg = null == eh;
                  eg && ea.count++;
                  let em = {
                    ...ef,
                    style: ef.toastStyle,
                    key: ea.toastKey++,
                    ...Object.fromEntries(
                      Object.entries(eu).filter((s) => {
                        let [x, W] = s;
                        return null != W;
                      })
                    ),
                    toastId: ed,
                    updateId: eh,
                    data: ep,
                    closeToast: L,
                    isIn: !1,
                    className: m(eu.className || ef.toastClassName),
                    bodyClassName: m(eu.bodyClassName || ef.bodyClassName),
                    progressClassName: m(
                      eu.progressClassName || ef.progressClassName
                    ),
                    autoClose:
                      !eu.isLoading &&
                      ((ee = eu.autoClose),
                      (es = ef.autoClose),
                      !1 === ee || (u(ee) && ee > 0) ? ee : es),
                    deleteToast() {
                      let s = y(eo.get(ed), "removed");
                      eo.delete(ed), et.emit(4, s);
                      let W = ea.queue.length;
                      if (
                        ((ea.count =
                          null == ed
                            ? ea.count - ea.displayedToast
                            : ea.count - 1),
                        ea.count < 0 && (ea.count = 0),
                        W > 0)
                      ) {
                        let s = null == ed ? ea.props.limit : 1;
                        if (1 === W || 1 === s) ea.displayedToast++, _();
                        else {
                          let x = s > W ? W : s;
                          ea.displayedToast = x;
                          for (let s = 0; s < x; s++) _();
                        }
                      } else x();
                    },
                  };
                  (em.iconOut = (function (s) {
                    let { theme: x, type: W, isLoading: ee, icon: et } = s,
                      ei = null,
                      eo = { theme: x, type: W };
                    return (
                      !1 === et ||
                        (p(et)
                          ? (ei = et(eo))
                          : (0, X.isValidElement)(et)
                          ? (ei = (0, X.cloneElement)(et, eo))
                          : d(et) || u(et)
                          ? (ei = et)
                          : ee
                          ? (ei = er.spinner())
                          : W in er && (ei = er[W](eo))),
                      ei
                    );
                  })(em)),
                    p(eu.onOpen) && (em.onOpen = eu.onOpen),
                    p(eu.onClose) && (em.onClose = eu.onClose),
                    (em.closeButton = ef.closeButton),
                    !1 === eu.closeButton || f(eu.closeButton)
                      ? (em.closeButton = eu.closeButton)
                      : !0 === eu.closeButton &&
                        (em.closeButton = !f(ef.closeButton) || ef.closeButton);
                  let ew = s;
                  (0, X.isValidElement)(s) && !d(s.type)
                    ? (ew = (0, X.cloneElement)(s, {
                        closeToast: L,
                        toastProps: em,
                        data: ep,
                      }))
                    : p(s) &&
                      (ew = s({ closeToast: L, toastProps: em, data: ep })),
                    ef.limit && ef.limit > 0 && ea.count > ef.limit && eg
                      ? ea.queue.push({
                          toastContent: ew,
                          toastProps: em,
                          staleId: ec,
                        })
                      : u(el)
                      ? setTimeout(() => {
                          O(ew, em, ec);
                        }, el)
                      : O(ew, em, ec);
                }
                function O(s, x, W) {
                  let { toastId: X } = x;
                  W && eo.delete(W);
                  let er = { content: s, props: x };
                  eo.set(X, er),
                    ee((s) => [...s, X].filter((s) => s !== W)),
                    et.emit(
                      4,
                      y(er, null == er.props.updateId ? "added" : "updated")
                    );
                }
                return (
                  (0, X.useEffect)(
                    () => (
                      (ea.containerId = s.containerId),
                      et
                        .cancelEmit(3)
                        .on(0, L)
                        .on(1, (s) => ei.current && I(s))
                        .on(5, b)
                        .emit(2, ea),
                      () => {
                        eo.clear(), et.emit(3, ea);
                      }
                    ),
                    []
                  ),
                  (0, X.useEffect)(() => {
                    (ea.props = s),
                      (ea.isToastActive = T),
                      (ea.displayedToast = W.length);
                  }),
                  {
                    getToastToRender: function (x) {
                      let W = new Map(),
                        X = Array.from(eo.values());
                      return (
                        s.newestOnTop && X.reverse(),
                        X.forEach((s) => {
                          let { position: x } = s.props;
                          W.has(x) || W.set(x, []), W.get(x).push(s);
                        }),
                        Array.from(W, (s) => x(s[0], s[1]))
                      );
                    },
                    containerRef: ei,
                    isToastActive: T,
                  }
                );
              })(s),
              { className: ea, style: es, rtl: el, containerId: ec } = s;
            return (
              (0, X.useEffect)(() => {
                x && (x.current = ei.current);
              }, []),
              X.createElement(
                "div",
                { ref: ei, className: "Toastify", id: ec },
                W((s, x) => {
                  let W = x.length
                    ? { ...es }
                    : { ...es, pointerEvents: "none" };
                  return X.createElement(
                    "div",
                    {
                      className: (function (s) {
                        let x = (0, ee.default)(
                          "Toastify__toast-container",
                          `Toastify__toast-container--${s}`,
                          { "Toastify__toast-container--rtl": el }
                        );
                        return p(ea)
                          ? ea({ position: s, rtl: el, defaultClassName: x })
                          : (0, ee.default)(x, m(ea));
                      })(s),
                      style: W,
                      key: `container-${s}`,
                    },
                    x.map((s, W) => {
                      let { content: ee, props: et } = s;
                      return X.createElement(
                        N,
                        {
                          ...et,
                          isIn: eo(et.toastId),
                          style: {
                            ...et.style,
                            "--nth": W + 1,
                            "--len": x.length,
                          },
                          key: `toast-${et.key}`,
                        },
                        ee
                      );
                    })
                  );
                })
              )
            );
          }));
      (eo.displayName = "ToastContainer"),
        (eo.defaultProps = {
          position: "top-right",
          transition: ei,
          autoClose: 5e3,
          closeButton: L,
          pauseOnHover: !0,
          pauseOnFocusLoss: !0,
          closeOnClick: !0,
          draggable: !0,
          draggablePercent: 80,
          draggableDirection: "x",
          role: "alert",
          theme: "light",
        });
      let ea,
        es = new Map(),
        el = [],
        ec = 1;
      function H(s, x) {
        return (
          es.size > 0 ? et.emit(0, s, x) : el.push({ content: s, options: x }),
          x.toastId
        );
      }
      function S(s, x) {
        return {
          ...x,
          type: (x && x.type) || s,
          toastId: x && (d(x.toastId) || u(x.toastId)) ? x.toastId : "" + ec++,
        };
      }
      function q(s) {
        return (x, W) => H(x, S(s, W));
      }
      function Q(s, x) {
        return H(s, S("default", x));
      }
      (Q.loading = (s, x) =>
        H(
          s,
          S("default", {
            isLoading: !0,
            autoClose: !1,
            closeOnClick: !1,
            closeButton: !1,
            draggable: !1,
            ...x,
          })
        )),
        (Q.promise = function (s, x, W) {
          let X,
            { pending: ee, error: et, success: er } = x;
          ee &&
            (X = d(ee)
              ? Q.loading(ee, W)
              : Q.loading(ee.render, { ...W, ...ee }));
          let ei = {
              isLoading: null,
              autoClose: null,
              closeOnClick: null,
              closeButton: null,
              draggable: null,
            },
            l = (s, x, ee) => {
              if (null == x) return void Q.dismiss(X);
              let et = { type: s, ...ei, ...W, data: ee },
                er = d(x) ? { render: x } : x;
              return (
                X
                  ? Q.update(X, { ...et, ...er })
                  : Q(er.render, { ...et, ...er }),
                ee
              );
            },
            eo = p(s) ? s() : s;
          return (
            eo.then((s) => l("success", er, s)).catch((s) => l("error", et, s)),
            eo
          );
        }),
        (Q.success = q("success")),
        (Q.info = q("info")),
        (Q.error = q("error")),
        (Q.warning = q("warning")),
        (Q.warn = Q.warning),
        (Q.dark = (s, x) => H(s, S("default", { theme: "dark", ...x }))),
        (Q.dismiss = (s) => {
          es.size > 0
            ? et.emit(1, s)
            : (el = el.filter((x) => null != s && x.options.toastId !== s));
        }),
        (Q.clearWaitingQueue = function (s) {
          return void 0 === s && (s = {}), et.emit(5, s);
        }),
        (Q.isActive = (s) => {
          let x = !1;
          return (
            es.forEach((W) => {
              W.isToastActive && W.isToastActive(s) && (x = !0);
            }),
            x
          );
        }),
        (Q.update = function (s, x) {
          void 0 === x && (x = {}),
            setTimeout(() => {
              let W = (function (s, x) {
                let { containerId: W } = x,
                  X = es.get(W || ea);
                return X && X.getToast(s);
              })(s, x);
              if (W) {
                let { props: X, content: ee } = W,
                  et = {
                    delay: 100,
                    ...X,
                    ...x,
                    toastId: x.toastId || s,
                    updateId: "" + ec++,
                  };
                et.toastId !== s && (et.staleId = s);
                let er = et.render || ee;
                delete et.render, H(er, et);
              }
            }, 0);
        }),
        (Q.done = (s) => {
          Q.update(s, { progress: 1 });
        }),
        (Q.onChange = (s) => (
          et.on(4, s),
          () => {
            et.off(4, s);
          }
        )),
        (Q.POSITION = {
          TOP_LEFT: "top-left",
          TOP_RIGHT: "top-right",
          TOP_CENTER: "top-center",
          BOTTOM_LEFT: "bottom-left",
          BOTTOM_RIGHT: "bottom-right",
          BOTTOM_CENTER: "bottom-center",
        }),
        (Q.TYPE = {
          INFO: "info",
          SUCCESS: "success",
          WARNING: "warning",
          ERROR: "error",
          DEFAULT: "default",
        }),
        et
          .on(2, (s) => {
            (ea = s.containerId || s),
              es.set(ea, s),
              el.forEach((s) => {
                et.emit(0, s.content, s.options);
              }),
              (el = []);
          })
          .on(3, (s) => {
            es.delete(s.containerId || s),
              0 === es.size && et.off(0).off(1).off(5);
          });
    },
    17832: function (s, x, W) {
      "use strict";
      W.d(x, {
        sj: function () {
          return proxy;
        },
        iH: function () {
          return ref;
        },
        CO: function () {
          return snapshot;
        },
        Ld: function () {
          return subscribe;
        },
      }),
        Symbol();
      let X = Symbol(),
        ee = Object.getPrototypeOf,
        et = new WeakMap(),
        l = (s) =>
          s &&
          (et.has(s)
            ? et.get(s)
            : ee(s) === Object.prototype || ee(s) === Array.prototype),
        y = (s) => (l(s) && s[X]) || null,
        h = (s, x = !0) => {
          et.set(s, x);
        },
        isObject = (s) => "object" == typeof s && null !== s,
        er = new WeakMap(),
        ei = new WeakSet(),
        buildProxyFunction = (
          s = Object.is,
          x = (s, x) => new Proxy(s, x),
          W = (s) =>
            isObject(s) &&
            !ei.has(s) &&
            (Array.isArray(s) || !(Symbol.iterator in s)) &&
            !(s instanceof WeakMap) &&
            !(s instanceof WeakSet) &&
            !(s instanceof Error) &&
            !(s instanceof Number) &&
            !(s instanceof Date) &&
            !(s instanceof String) &&
            !(s instanceof RegExp) &&
            !(s instanceof ArrayBuffer),
          X = (s) => {
            switch (s.status) {
              case "fulfilled":
                return s.value;
              case "rejected":
                throw s.reason;
              default:
                throw s;
            }
          },
          ee = new WeakMap(),
          et = (s, x, W = X) => {
            let eo = ee.get(s);
            if ((null == eo ? void 0 : eo[0]) === x) return eo[1];
            let ea = Array.isArray(s)
              ? []
              : Object.create(Object.getPrototypeOf(s));
            return (
              h(ea, !0),
              ee.set(s, [x, ea]),
              Reflect.ownKeys(s).forEach((x) => {
                if (Object.getOwnPropertyDescriptor(ea, x)) return;
                let X = Reflect.get(s, x),
                  ee = { value: X, enumerable: !0, configurable: !0 };
                if (ei.has(X)) h(X, !1);
                else if (X instanceof Promise)
                  delete ee.value, (ee.get = () => W(X));
                else if (er.has(X)) {
                  let [s, x] = er.get(X);
                  ee.value = et(s, x(), W);
                }
                Object.defineProperty(ea, x, ee);
              }),
              Object.preventExtensions(ea)
            );
          },
          eo = new WeakMap(),
          ea = [1, 1],
          es = (X) => {
            if (!isObject(X)) throw Error("object required");
            let ee = eo.get(X);
            if (ee) return ee;
            let el = ea[0],
              ec = new Set(),
              notifyUpdate = (s, x = ++ea[0]) => {
                el !== x && ((el = x), ec.forEach((W) => W(s, x)));
              },
              eu = ea[1],
              ensureVersion = (s = ++ea[1]) => (
                eu === s ||
                  ec.size ||
                  ((eu = s),
                  ed.forEach(([x]) => {
                    let W = x[1](s);
                    W > el && (el = W);
                  })),
                el
              ),
              createPropListener = (s) => (x, W) => {
                let X = [...x];
                (X[1] = [s, ...X[1]]), notifyUpdate(X, W);
              },
              ed = new Map(),
              addPropListener = (s, x) => {
                if (ed.has(s)) throw Error("prop listener already exists");
                if (ec.size) {
                  let W = x[3](createPropListener(s));
                  ed.set(s, [x, W]);
                } else ed.set(s, [x]);
              },
              removePropListener = (s) => {
                var x;
                let W = ed.get(s);
                W && (ed.delete(s), null == (x = W[1]) || x.call(W));
              },
              addListener = (s) => {
                ec.add(s),
                  1 === ec.size &&
                    ed.forEach(([s, x], W) => {
                      if (x) throw Error("remove already exists");
                      let X = s[3](createPropListener(W));
                      ed.set(W, [s, X]);
                    });
                let removeListener = () => {
                  ec.delete(s),
                    0 === ec.size &&
                      ed.forEach(([s, x], W) => {
                        x && (x(), ed.set(W, [s]));
                      });
                };
                return removeListener;
              },
              eh = Array.isArray(X)
                ? []
                : Object.create(Object.getPrototypeOf(X)),
              ep = {
                deleteProperty(s, x) {
                  let W = Reflect.get(s, x);
                  removePropListener(x);
                  let X = Reflect.deleteProperty(s, x);
                  return X && notifyUpdate(["delete", [x], W]), X;
                },
                set(x, X, ee, et) {
                  let ea = Reflect.has(x, X),
                    el = Reflect.get(x, X, et);
                  if (ea && (s(el, ee) || (eo.has(ee) && s(el, eo.get(ee)))))
                    return !0;
                  removePropListener(X), isObject(ee) && (ee = y(ee) || ee);
                  let ec = ee;
                  if (ee instanceof Promise)
                    ee.then((s) => {
                      (ee.status = "fulfilled"),
                        (ee.value = s),
                        notifyUpdate(["resolve", [X], s]);
                    }).catch((s) => {
                      (ee.status = "rejected"),
                        (ee.reason = s),
                        notifyUpdate(["reject", [X], s]);
                    });
                  else {
                    !er.has(ee) && W(ee) && (ec = es(ee));
                    let s = !ei.has(ec) && er.get(ec);
                    s && addPropListener(X, s);
                  }
                  return (
                    Reflect.set(x, X, ec, et),
                    notifyUpdate(["set", [X], ee, el]),
                    !0
                  );
                },
              },
              ef = x(eh, ep);
            eo.set(X, ef);
            let eg = [eh, ensureVersion, et, addListener];
            return (
              er.set(ef, eg),
              Reflect.ownKeys(X).forEach((s) => {
                let x = Object.getOwnPropertyDescriptor(X, s);
                "value" in x &&
                  ((ef[s] = X[s]), delete x.value, delete x.writable),
                  Object.defineProperty(eh, s, x);
              }),
              ef
            );
          }
        ) => [es, er, ei, s, x, W, X, ee, et, eo, ea],
        [eo] = buildProxyFunction();
      function proxy(s = {}) {
        return eo(s);
      }
      function subscribe(s, x, W) {
        let X;
        let ee = er.get(s);
        ee || console.warn("Please use proxy object");
        let et = [],
          ei = ee[3],
          eo = !1,
          ea = ei((s) => {
            if ((et.push(s), W)) {
              x(et.splice(0));
              return;
            }
            X ||
              (X = Promise.resolve().then(() => {
                (X = void 0), eo && x(et.splice(0));
              }));
          });
        return (
          (eo = !0),
          () => {
            (eo = !1), ea();
          }
        );
      }
      function snapshot(s, x) {
        let W = er.get(s);
        W || console.warn("Please use proxy object");
        let [X, ee, et] = W;
        return et(X, ee(), x);
      }
      function ref(s) {
        return ei.add(s), s;
      }
    },
    73932: function (s, x, W) {
      "use strict";
      W.d(x, {
        VW: function () {
          return subscribeKey;
        },
        Yr: function () {
          return proxyMap;
        },
      });
      var X = W(17832);
      function subscribeKey(s, x, W, ee) {
        let et = s[x];
        return (0, X.Ld)(
          s,
          () => {
            let X = s[x];
            Object.is(et, X) || W((et = X));
          },
          ee
        );
      }
      function proxyMap(s) {
        let x = (0, X.sj)({
          data: Array.from(s || []),
          has(s) {
            return this.data.some((x) => x[0] === s);
          },
          set(s, x) {
            let W = this.data.find((x) => x[0] === s);
            return W ? (W[1] = x) : this.data.push([s, x]), this;
          },
          get(s) {
            var x;
            return null == (x = this.data.find((x) => x[0] === s))
              ? void 0
              : x[1];
          },
          delete(s) {
            let x = this.data.findIndex((x) => x[0] === s);
            return -1 !== x && (this.data.splice(x, 1), !0);
          },
          clear() {
            this.data.splice(0);
          },
          get size() {
            return this.data.length;
          },
          toJSON() {
            return new Map(this.data);
          },
          forEach(s) {
            this.data.forEach((x) => {
              s(x[1], x[0], this);
            });
          },
          keys() {
            return this.data.map((s) => s[0]).values();
          },
          values() {
            return this.data.map((s) => s[1]).values();
          },
          entries() {
            return new Map(this.data).entries();
          },
          get [Symbol.toStringTag]() {
            return "Map";
          },
          [Symbol.iterator]() {
            return this.entries();
          },
        });
        return (
          Object.defineProperties(x, {
            data: { enumerable: !1 },
            size: { enumerable: !1 },
            toJSON: { enumerable: !1 },
          }),
          Object.seal(x),
          x
        );
      }
      Symbol();
    },
    14503: function (s, x, W) {
      "use strict";
      function parseAccount(s) {
        return "string" == typeof s ? { address: s, type: "json-rpc" } : s;
      }
      W.d(x, {
        T: function () {
          return parseAccount;
        },
      });
    },
    18011: function (s, x, W) {
      "use strict";
      W.d(x, {
        O: function () {
          return getEnsAddress;
        },
      });
      var X = W(16693),
        ee = W(7210),
        et = W(55629),
        er = W(47864),
        ei = W(61836),
        eo = W(92106),
        ea = W(74526),
        es = W(75719),
        el = W(48063),
        ec = W(93714),
        eu = W(88819);
      async function getEnsAddress(
        s,
        {
          blockNumber: x,
          blockTag: W,
          coinType: ed,
          name: eh,
          gatewayUrls: ep,
          strict: ef,
          universalResolverAddress: eg,
        }
      ) {
        let em = eg;
        if (!em) {
          if (!s.chain)
            throw Error(
              "client chain not configured. universalResolverAddress is required."
            );
          em = (0, er.L)({
            blockNumber: x,
            chain: s.chain,
            contract: "ensUniversalResolver",
          });
        }
        try {
          let er = (0, et.R)({
              abi: X.X$,
              functionName: "addr",
              ...(null != ed
                ? { args: [(0, es.V)(eh), BigInt(ed)] }
                : { args: [(0, es.V)(eh)] }),
            }),
            ea = {
              address: em,
              abi: X.k3,
              functionName: "resolve",
              args: [(0, eo.NC)((0, el.T)(eh)), er],
              blockNumber: x,
              blockTag: W,
            },
            ef = (0, ec.s)(s, eu.L, "readContract"),
            eg = ep
              ? await ef({ ...ea, args: [...ea.args, ep] })
              : await ef(ea);
          if ("0x" === eg[0]) return null;
          let ew = (0, ee.k)({
            abi: X.X$,
            args: null != ed ? [(0, es.V)(eh), BigInt(ed)] : void 0,
            functionName: "addr",
            data: eg[0],
          });
          if ("0x" === ew || "0x00" === (0, ei.f)(ew)) return null;
          return ew;
        } catch (s) {
          if (ef) throw s;
          if ((0, ea.c)(s, "resolve")) return null;
          throw s;
        }
      }
    },
    95270: function (s, x, W) {
      "use strict";
      W.d(x, {
        r: function () {
          return getEnsAvatar;
        },
      });
      var X = W(88819),
        ee = W(36117);
      let EnsAvatarInvalidMetadataError = class EnsAvatarInvalidMetadataError extends ee.G {
        constructor({ data: s }) {
          super(
            "Unable to extract image from metadata. The metadata may be malformed or invalid.",
            {
              metaMessages: [
                "- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.",
                "",
                `Provided data: ${JSON.stringify(s)}`,
              ],
              name: "EnsAvatarInvalidMetadataError",
            }
          );
        }
      };
      let EnsAvatarInvalidNftUriError = class EnsAvatarInvalidNftUriError extends ee.G {
        constructor({ reason: s }) {
          super(`ENS NFT avatar URI is invalid. ${s}`, {
            name: "EnsAvatarInvalidNftUriError",
          });
        }
      };
      let EnsAvatarUriResolutionError = class EnsAvatarUriResolutionError extends ee.G {
        constructor({ uri: s }) {
          super(
            `Unable to resolve ENS avatar URI "${s}". The URI may be malformed, invalid, or does not respond with a valid image.`,
            { name: "EnsAvatarUriResolutionError" }
          );
        }
      };
      let EnsAvatarUnsupportedNamespaceError = class EnsAvatarUnsupportedNamespaceError extends ee.G {
        constructor({ namespace: s }) {
          super(
            `ENS NFT avatar namespace "${s}" is not supported. Must be "erc721" or "erc1155".`,
            { name: "EnsAvatarUnsupportedNamespaceError" }
          );
        }
      };
      let et =
          /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
        er =
          /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
        ei = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
        eo = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
      async function isImageUri(s) {
        try {
          let x = await fetch(s, { method: "HEAD" });
          if (200 === x.status) {
            let s = x.headers.get("content-type");
            return s?.startsWith("image/");
          }
          return !1;
        } catch (x) {
          if (
            ("object" == typeof x && void 0 !== x.response) ||
            !globalThis.hasOwnProperty("Image")
          )
            return !1;
          return new Promise((x) => {
            let W = new Image();
            (W.onload = () => {
              x(!0);
            }),
              (W.onerror = () => {
                x(!1);
              }),
              (W.src = s);
          });
        }
      }
      function getGateway(s, x) {
        return s ? (s.endsWith("/") ? s.slice(0, -1) : s) : x;
      }
      function resolveAvatarUri({ uri: s, gatewayUrls: x }) {
        let W = ei.test(s);
        if (W) return { uri: s, isOnChain: !0, isEncoded: W };
        let X = getGateway(x?.ipfs, "https://ipfs.io"),
          ee = getGateway(x?.arweave, "https://arweave.net"),
          ea = s.match(et),
          {
            protocol: es,
            subpath: el,
            target: ec,
            subtarget: eu = "",
          } = ea?.groups || {},
          ed = "ipns:/" === es || "ipns/" === el,
          eh = "ipfs:/" === es || "ipfs/" === el || er.test(s);
        if (s.startsWith("http") && !ed && !eh) {
          let W = s;
          return (
            x?.arweave && (W = s.replace(/https:\/\/arweave.net/g, x?.arweave)),
            { uri: W, isOnChain: !1, isEncoded: !1 }
          );
        }
        if ((ed || eh) && ec)
          return {
            uri: `${X}/${ed ? "ipns" : "ipfs"}/${ec}${eu}`,
            isOnChain: !1,
            isEncoded: !1,
          };
        if ("ar:/" === es && ec)
          return {
            uri: `${ee}/${ec}${eu || ""}`,
            isOnChain: !1,
            isEncoded: !1,
          };
        let ep = s.replace(eo, "");
        if (
          (ep.startsWith("<svg") &&
            (ep = `data:image/svg+xml;base64,${btoa(ep)}`),
          ep.startsWith("data:") || ep.startsWith("{"))
        )
          return { uri: ep, isOnChain: !0, isEncoded: !1 };
        throw new EnsAvatarUriResolutionError({ uri: s });
      }
      function getJsonImage(s) {
        if (
          "object" != typeof s ||
          (!("image" in s) && !("image_url" in s) && !("image_data" in s))
        )
          throw new EnsAvatarInvalidMetadataError({ data: s });
        return s.image || s.image_url || s.image_data;
      }
      async function getMetadataAvatarUri({ gatewayUrls: s, uri: x }) {
        try {
          let W = await fetch(x).then((s) => s.json()),
            X = await parseAvatarUri({ gatewayUrls: s, uri: getJsonImage(W) });
          return X;
        } catch {
          throw new EnsAvatarUriResolutionError({ uri: x });
        }
      }
      async function parseAvatarUri({ gatewayUrls: s, uri: x }) {
        let { uri: W, isOnChain: X } = resolveAvatarUri({
          uri: x,
          gatewayUrls: s,
        });
        if (X) return W;
        let ee = await isImageUri(W);
        if (ee) return W;
        throw new EnsAvatarUriResolutionError({ uri: x });
      }
      async function getNftTokenUri(s, { nft: x }) {
        if ("erc721" === x.namespace)
          return (0, X.L)(s, {
            address: x.contractAddress,
            abi: [
              {
                name: "tokenURI",
                type: "function",
                stateMutability: "view",
                inputs: [{ name: "tokenId", type: "uint256" }],
                outputs: [{ name: "", type: "string" }],
              },
            ],
            functionName: "tokenURI",
            args: [BigInt(x.tokenID)],
          });
        if ("erc1155" === x.namespace)
          return (0, X.L)(s, {
            address: x.contractAddress,
            abi: [
              {
                name: "uri",
                type: "function",
                stateMutability: "view",
                inputs: [{ name: "_id", type: "uint256" }],
                outputs: [{ name: "", type: "string" }],
              },
            ],
            functionName: "uri",
            args: [BigInt(x.tokenID)],
          });
        throw new EnsAvatarUnsupportedNamespaceError({
          namespace: x.namespace,
        });
      }
      async function parseAvatarRecord(s, { gatewayUrls: x, record: W }) {
        return /eip155:/i.test(W)
          ? parseNftAvatarUri(s, { gatewayUrls: x, record: W })
          : parseAvatarUri({ uri: W, gatewayUrls: x });
      }
      async function parseNftAvatarUri(s, { gatewayUrls: x, record: W }) {
        let X = (function (s) {
            let x = s;
            x.startsWith("did:nft:") &&
              (x = x.replace("did:nft:", "").replace(/_/g, "/"));
            let [W, X, ee] = x.split("/"),
              [et, er] = W.split(":"),
              [ei, eo] = X.split(":");
            if (!et || "eip155" !== et.toLowerCase())
              throw new EnsAvatarInvalidNftUriError({
                reason: "Only EIP-155 supported",
              });
            if (!er)
              throw new EnsAvatarInvalidNftUriError({
                reason: "Chain ID not found",
              });
            if (!eo)
              throw new EnsAvatarInvalidNftUriError({
                reason: "Contract address not found",
              });
            if (!ee)
              throw new EnsAvatarInvalidNftUriError({
                reason: "Token ID not found",
              });
            if (!ei)
              throw new EnsAvatarInvalidNftUriError({
                reason: "ERC namespace not found",
              });
            return {
              chainID: Number.parseInt(er),
              namespace: ei.toLowerCase(),
              contractAddress: eo,
              tokenID: ee,
            };
          })(W),
          ee = await getNftTokenUri(s, { nft: X }),
          {
            uri: et,
            isOnChain: er,
            isEncoded: ei,
          } = resolveAvatarUri({ uri: ee, gatewayUrls: x });
        if (
          er &&
          (et.includes("data:application/json;base64,") || et.startsWith("{"))
        ) {
          let s = ei
              ? atob(et.replace("data:application/json;base64,", ""))
              : et,
            W = JSON.parse(s);
          return parseAvatarUri({ uri: getJsonImage(W), gatewayUrls: x });
        }
        let eo = X.tokenID;
        return (
          "erc1155" === X.namespace &&
            (eo = eo.replace("0x", "").padStart(64, "0")),
          getMetadataAvatarUri({
            gatewayUrls: x,
            uri: et.replace(/(?:0x)?{id}/, eo),
          })
        );
      }
      var ea = W(93714),
        es = W(16171);
      async function getEnsAvatar(
        s,
        {
          blockNumber: x,
          blockTag: W,
          assetGatewayUrls: X,
          name: ee,
          gatewayUrls: et,
          strict: er,
          universalResolverAddress: ei,
        }
      ) {
        let eo = await (0, ea.s)(
          s,
          es.g,
          "getEnsText"
        )({
          blockNumber: x,
          blockTag: W,
          key: "avatar",
          name: ee,
          universalResolverAddress: ei,
          gatewayUrls: et,
          strict: er,
        });
        if (!eo) return null;
        try {
          return await parseAvatarRecord(s, { record: eo, gatewayUrls: X });
        } catch {
          return null;
        }
      }
    },
    95602: function (s, x, W) {
      "use strict";
      W.d(x, {
        w: function () {
          return getEnsName;
        },
      });
      var X = W(16693),
        ee = W(47864),
        et = W(92106),
        er = W(74526),
        ei = W(48063),
        eo = W(93714),
        ea = W(88819);
      async function getEnsName(
        s,
        {
          address: x,
          blockNumber: W,
          blockTag: es,
          gatewayUrls: el,
          strict: ec,
          universalResolverAddress: eu,
        }
      ) {
        let ed = eu;
        if (!ed) {
          if (!s.chain)
            throw Error(
              "client chain not configured. universalResolverAddress is required."
            );
          ed = (0, ee.L)({
            blockNumber: W,
            chain: s.chain,
            contract: "ensUniversalResolver",
          });
        }
        let eh = `${x.toLowerCase().substring(2)}.addr.reverse`;
        try {
          let ee = {
              address: ed,
              abi: X.du,
              functionName: "reverse",
              args: [(0, et.NC)((0, ei.T)(eh))],
              blockNumber: W,
              blockTag: es,
            },
            er = (0, eo.s)(s, ea.L, "readContract"),
            [ec, eu] = el
              ? await er({ ...ee, args: [...ee.args, el] })
              : await er(ee);
          if (x.toLowerCase() !== eu.toLowerCase()) return null;
          return ec;
        } catch (s) {
          if (ec) throw s;
          if ((0, er.c)(s, "reverse")) return null;
          throw s;
        }
      }
    },
    16171: function (s, x, W) {
      "use strict";
      W.d(x, {
        g: function () {
          return getEnsText;
        },
      });
      var X = W(16693),
        ee = W(7210),
        et = W(55629),
        er = W(47864),
        ei = W(92106),
        eo = W(74526),
        ea = W(75719),
        es = W(48063),
        el = W(93714),
        ec = W(88819);
      async function getEnsText(
        s,
        {
          blockNumber: x,
          blockTag: W,
          name: eu,
          key: ed,
          gatewayUrls: eh,
          strict: ep,
          universalResolverAddress: ef,
        }
      ) {
        let eg = ef;
        if (!eg) {
          if (!s.chain)
            throw Error(
              "client chain not configured. universalResolverAddress is required."
            );
          eg = (0, er.L)({
            blockNumber: x,
            chain: s.chain,
            contract: "ensUniversalResolver",
          });
        }
        try {
          let er = {
              address: eg,
              abi: X.k3,
              functionName: "resolve",
              args: [
                (0, ei.NC)((0, es.T)(eu)),
                (0, et.R)({
                  abi: X.nZ,
                  functionName: "text",
                  args: [(0, ea.V)(eu), ed],
                }),
              ],
              blockNumber: x,
              blockTag: W,
            },
            eo = (0, el.s)(s, ec.L, "readContract"),
            ep = eh
              ? await eo({ ...er, args: [...er.args, eh] })
              : await eo(er);
          if ("0x" === ep[0]) return null;
          let ef = (0, ee.k)({ abi: X.nZ, functionName: "text", data: ep[0] });
          return "" === ef ? null : ef;
        } catch (s) {
          if (ep) throw s;
          if ((0, eo.c)(s, "resolve")) return null;
          throw s;
        }
      }
    },
    78407: function (s, x, W) {
      "use strict";
      W.d(x, {
        R: function () {
          return call;
        },
      });
      var X = W(84917);
      let ee =
          /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/,
        et = /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/,
        er =
          /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\s?\((?<returns>.*?)\))?$/,
        ei =
          /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \{(?<properties>.*?)\}$/,
        eo =
          /^constructor\((?<parameters>.*?)\)(?:\s(?<stateMutability>payable{1}))?$/,
        ea = /^fallback\(\) external(?:\s(?<stateMutability>payable{1}))?$/,
        es = /^receive\(\) external payable$/,
        el = new Set(["indexed"]),
        ec = new Set(["calldata", "memory", "storage"]);
      let errors_BaseError = class errors_BaseError extends Error {
        constructor(s, x = {}) {
          let W =
              x.cause instanceof errors_BaseError
                ? x.cause.details
                : x.cause?.message
                ? x.cause.message
                : x.details,
            X =
              (x.cause instanceof errors_BaseError && x.cause.docsPath) ||
              x.docsPath,
            ee = [
              s || "An error occurred.",
              "",
              ...(x.metaMessages ? [...x.metaMessages, ""] : []),
              ...(X ? [`Docs: https://abitype.dev${X}`] : []),
              ...(W ? [`Details: ${W}`] : []),
              "Version: abitype@1.0.8",
            ].join("\n");
          super(ee),
            Object.defineProperty(this, "details", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "docsPath", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "metaMessages", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "shortMessage", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "AbiTypeError",
            }),
            x.cause && (this.cause = x.cause),
            (this.details = W),
            (this.docsPath = X),
            (this.metaMessages = x.metaMessages),
            (this.shortMessage = s);
        }
      };
      let UnknownTypeError = class UnknownTypeError extends errors_BaseError {
        constructor({ type: s }) {
          super("Unknown type.", {
            metaMessages: [
              `Type "${s}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "UnknownTypeError",
            });
        }
      };
      let UnknownSolidityTypeError = class UnknownSolidityTypeError extends errors_BaseError {
        constructor({ type: s }) {
          super("Unknown type.", {
            metaMessages: [`Type "${s}" is not a valid ABI type.`],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "UnknownSolidityTypeError",
            });
        }
      };
      let InvalidParameterError = class InvalidParameterError extends errors_BaseError {
        constructor({ param: s }) {
          super("Invalid ABI parameter.", { details: s }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidParameterError",
            });
        }
      };
      let SolidityProtectedKeywordError = class SolidityProtectedKeywordError extends errors_BaseError {
        constructor({ param: s, name: x }) {
          super("Invalid ABI parameter.", {
            details: s,
            metaMessages: [
              `"${x}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "SolidityProtectedKeywordError",
            });
        }
      };
      let InvalidModifierError = class InvalidModifierError extends errors_BaseError {
        constructor({ param: s, type: x, modifier: W }) {
          super("Invalid ABI parameter.", {
            details: s,
            metaMessages: [
              `Modifier "${W}" not allowed${x ? ` in "${x}" type` : ""}.`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidModifierError",
            });
        }
      };
      let InvalidFunctionModifierError = class InvalidFunctionModifierError extends errors_BaseError {
        constructor({ param: s, type: x, modifier: W }) {
          super("Invalid ABI parameter.", {
            details: s,
            metaMessages: [
              `Modifier "${W}" not allowed${x ? ` in "${x}" type` : ""}.`,
              `Data location can only be specified for array, struct, or mapping types, but "${W}" was given.`,
            ],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidFunctionModifierError",
            });
        }
      };
      let InvalidAbiTypeParameterError = class InvalidAbiTypeParameterError extends errors_BaseError {
        constructor({ abiParameter: s }) {
          super("Invalid ABI parameter.", {
            details: JSON.stringify(s, null, 2),
            metaMessages: ["ABI parameter type is invalid."],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidAbiTypeParameterError",
            });
        }
      };
      let InvalidSignatureError = class InvalidSignatureError extends errors_BaseError {
        constructor({ signature: s, type: x }) {
          super(`Invalid ${x} signature.`, { details: s }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidSignatureError",
            });
        }
      };
      let UnknownSignatureError = class UnknownSignatureError extends errors_BaseError {
        constructor({ signature: s }) {
          super("Unknown signature.", { details: s }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "UnknownSignatureError",
            });
        }
      };
      let InvalidStructSignatureError = class InvalidStructSignatureError extends errors_BaseError {
        constructor({ signature: s }) {
          super("Invalid struct signature.", {
            details: s,
            metaMessages: ["No properties exist."],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidStructSignatureError",
            });
        }
      };
      let CircularReferenceError = class CircularReferenceError extends errors_BaseError {
        constructor({ type: s }) {
          super("Circular reference detected.", {
            metaMessages: [`Struct "${s}" is a circular reference.`],
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "CircularReferenceError",
            });
        }
      };
      let InvalidParenthesisError = class InvalidParenthesisError extends errors_BaseError {
        constructor({ current: s, depth: x }) {
          super("Unbalanced parentheses.", {
            metaMessages: [
              `"${s.trim()}" has too many ${
                x > 0 ? "opening" : "closing"
              } parentheses.`,
            ],
            details: `Depth "${x}"`,
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "InvalidParenthesisError",
            });
        }
      };
      let eu = new Map([
          ["address", { type: "address" }],
          ["bool", { type: "bool" }],
          ["bytes", { type: "bytes" }],
          ["bytes32", { type: "bytes32" }],
          ["int", { type: "int256" }],
          ["int256", { type: "int256" }],
          ["string", { type: "string" }],
          ["uint", { type: "uint256" }],
          ["uint8", { type: "uint8" }],
          ["uint16", { type: "uint16" }],
          ["uint24", { type: "uint24" }],
          ["uint32", { type: "uint32" }],
          ["uint64", { type: "uint64" }],
          ["uint96", { type: "uint96" }],
          ["uint112", { type: "uint112" }],
          ["uint160", { type: "uint160" }],
          ["uint192", { type: "uint192" }],
          ["uint256", { type: "uint256" }],
          ["address owner", { type: "address", name: "owner" }],
          ["address to", { type: "address", name: "to" }],
          ["bool approved", { type: "bool", name: "approved" }],
          ["bytes _data", { type: "bytes", name: "_data" }],
          ["bytes data", { type: "bytes", name: "data" }],
          ["bytes signature", { type: "bytes", name: "signature" }],
          ["bytes32 hash", { type: "bytes32", name: "hash" }],
          ["bytes32 r", { type: "bytes32", name: "r" }],
          ["bytes32 root", { type: "bytes32", name: "root" }],
          ["bytes32 s", { type: "bytes32", name: "s" }],
          ["string name", { type: "string", name: "name" }],
          ["string symbol", { type: "string", name: "symbol" }],
          ["string tokenURI", { type: "string", name: "tokenURI" }],
          ["uint tokenId", { type: "uint256", name: "tokenId" }],
          ["uint8 v", { type: "uint8", name: "v" }],
          ["uint256 balance", { type: "uint256", name: "balance" }],
          ["uint256 tokenId", { type: "uint256", name: "tokenId" }],
          ["uint256 value", { type: "uint256", name: "value" }],
          [
            "event:address indexed from",
            { type: "address", name: "from", indexed: !0 },
          ],
          [
            "event:address indexed to",
            { type: "address", name: "to", indexed: !0 },
          ],
          [
            "event:uint indexed tokenId",
            { type: "uint256", name: "tokenId", indexed: !0 },
          ],
          [
            "event:uint256 indexed tokenId",
            { type: "uint256", name: "tokenId", indexed: !0 },
          ],
        ]),
        ed =
          /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
        eh =
          /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
        ep = /^u?int$/;
      function parseAbiParameter(s, x) {
        var W, ee;
        let et;
        let er = (function (s, x, W) {
          let X = "";
          if (W)
            for (let s of Object.entries(W)) {
              if (!s) continue;
              let x = "";
              for (let W of s[1])
                x += `[${W.type}${W.name ? `:${W.name}` : ""}]`;
              X += `(${s[0]}{${x}})`;
            }
          return x ? `${x}:${s}${X}` : s;
        })(s, x?.type, x?.structs);
        if (eu.has(er)) return eu.get(er);
        let ei = X.cN.test(s),
          eo = (0, X.Zw)(ei ? eh : ed, s);
        if (!eo) throw new InvalidParameterError({ param: s });
        if (
          eo.name &&
          ("address" === (W = eo.name) ||
            "bool" === W ||
            "function" === W ||
            "string" === W ||
            "tuple" === W ||
            X.eL.test(W) ||
            X.lh.test(W) ||
            ef.test(W))
        )
          throw new SolidityProtectedKeywordError({ param: s, name: eo.name });
        let ea = eo.name ? { name: eo.name } : {},
          es = "indexed" === eo.modifier ? { indexed: !0 } : {},
          el = x?.structs ?? {},
          eg = {};
        if (ei) {
          et = "tuple";
          let s = splitParameters(eo.type),
            x = [],
            W = s.length;
          for (let X = 0; X < W; X++)
            x.push(parseAbiParameter(s[X], { structs: el }));
          eg = { components: x };
        } else if (eo.type in el)
          (et = "tuple"), (eg = { components: el[eo.type] });
        else if (ep.test(eo.type)) et = `${eo.type}256`;
        else if (((et = eo.type), x?.type !== "struct" && !isSolidityType(et)))
          throw new UnknownSolidityTypeError({ type: et });
        if (eo.modifier) {
          if (!x?.modifiers?.has?.(eo.modifier))
            throw new InvalidModifierError({
              param: s,
              type: x?.type,
              modifier: eo.modifier,
            });
          if (
            ec.has(eo.modifier) &&
            ((ee = et),
            !eo.array && "bytes" !== ee && "string" !== ee && "tuple" !== ee)
          )
            throw new InvalidFunctionModifierError({
              param: s,
              type: x?.type,
              modifier: eo.modifier,
            });
        }
        let em = { type: `${et}${eo.array ?? ""}`, ...ea, ...es, ...eg };
        return eu.set(er, em), em;
      }
      function splitParameters(s, x = [], W = "", X = 0) {
        let ee = s.trim().length;
        for (let et = 0; et < ee; et++) {
          let ee = s[et],
            er = s.slice(et + 1);
          switch (ee) {
            case ",":
              return 0 === X
                ? splitParameters(er, [...x, W.trim()])
                : splitParameters(er, x, `${W}${ee}`, X);
            case "(":
              return splitParameters(er, x, `${W}${ee}`, X + 1);
            case ")":
              return splitParameters(er, x, `${W}${ee}`, X - 1);
            default:
              return splitParameters(er, x, `${W}${ee}`, X);
          }
        }
        if ("" === W) return x;
        if (0 !== X)
          throw new InvalidParenthesisError({ current: W, depth: X });
        return x.push(W.trim()), x;
      }
      function isSolidityType(s) {
        return (
          "address" === s ||
          "bool" === s ||
          "function" === s ||
          "string" === s ||
          X.eL.test(s) ||
          X.lh.test(s)
        );
      }
      let ef =
          /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/,
        eg = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?$/;
      function parseAbi(s) {
        let x = (function (s) {
            let x = {},
              W = s.length;
            for (let ee = 0; ee < W; ee++) {
              let W = s[ee];
              if (!ei.test(W)) continue;
              let et = (0, X.Zw)(ei, W);
              if (!et)
                throw new InvalidSignatureError({
                  signature: W,
                  type: "struct",
                });
              let er = et.properties.split(";"),
                eo = [],
                ea = er.length;
              for (let s = 0; s < ea; s++) {
                let x = er[s],
                  W = x.trim();
                if (!W) continue;
                let X = parseAbiParameter(W, { type: "struct" });
                eo.push(X);
              }
              if (!eo.length)
                throw new InvalidStructSignatureError({ signature: W });
              x[et.name] = eo;
            }
            let ee = {},
              et = Object.entries(x),
              er = et.length;
            for (let s = 0; s < er; s++) {
              let [W, er] = et[s];
              ee[W] = (function resolveStructs(s, x, W = new Set()) {
                let ee = [],
                  et = s.length;
                for (let er = 0; er < et; er++) {
                  let et = s[er],
                    ei = X.cN.test(et.type);
                  if (ei) ee.push(et);
                  else {
                    let s = (0, X.Zw)(eg, et.type);
                    if (!s?.type)
                      throw new InvalidAbiTypeParameterError({
                        abiParameter: et,
                      });
                    let { array: er, type: ei } = s;
                    if (ei in x) {
                      if (W.has(ei))
                        throw new CircularReferenceError({ type: ei });
                      ee.push({
                        ...et,
                        type: `tuple${er ?? ""}`,
                        components: resolveStructs(
                          x[ei] ?? [],
                          x,
                          new Set([...W, ei])
                        ),
                      });
                    } else if (isSolidityType(ei)) ee.push(et);
                    else throw new UnknownTypeError({ type: ei });
                  }
                }
                return ee;
              })(er, x);
            }
            return ee;
          })(s),
          W = [],
          eu = s.length;
        for (let ed = 0; ed < eu; ed++) {
          let eu = s[ed];
          ei.test(eu) ||
            W.push(
              (function (s, x = {}) {
                if (er.test(s))
                  return (function (s, x = {}) {
                    let W = (0, X.Zw)(er, s);
                    if (!W)
                      throw new InvalidSignatureError({
                        signature: s,
                        type: "function",
                      });
                    let ee = splitParameters(W.parameters),
                      et = [],
                      ei = ee.length;
                    for (let s = 0; s < ei; s++)
                      et.push(
                        parseAbiParameter(ee[s], {
                          modifiers: ec,
                          structs: x,
                          type: "function",
                        })
                      );
                    let eo = [];
                    if (W.returns) {
                      let s = splitParameters(W.returns),
                        X = s.length;
                      for (let W = 0; W < X; W++)
                        eo.push(
                          parseAbiParameter(s[W], {
                            modifiers: ec,
                            structs: x,
                            type: "function",
                          })
                        );
                    }
                    return {
                      name: W.name,
                      type: "function",
                      stateMutability: W.stateMutability ?? "nonpayable",
                      inputs: et,
                      outputs: eo,
                    };
                  })(s, x);
                if (et.test(s))
                  return (function (s, x = {}) {
                    let W = (0, X.Zw)(et, s);
                    if (!W)
                      throw new InvalidSignatureError({
                        signature: s,
                        type: "event",
                      });
                    let ee = splitParameters(W.parameters),
                      er = [],
                      ei = ee.length;
                    for (let s = 0; s < ei; s++)
                      er.push(
                        parseAbiParameter(ee[s], {
                          modifiers: el,
                          structs: x,
                          type: "event",
                        })
                      );
                    return { name: W.name, type: "event", inputs: er };
                  })(s, x);
                if (ee.test(s))
                  return (function (s, x = {}) {
                    let W = (0, X.Zw)(ee, s);
                    if (!W)
                      throw new InvalidSignatureError({
                        signature: s,
                        type: "error",
                      });
                    let et = splitParameters(W.parameters),
                      er = [],
                      ei = et.length;
                    for (let s = 0; s < ei; s++)
                      er.push(
                        parseAbiParameter(et[s], { structs: x, type: "error" })
                      );
                    return { name: W.name, type: "error", inputs: er };
                  })(s, x);
                if (eo.test(s))
                  return (function (s, x = {}) {
                    let W = (0, X.Zw)(eo, s);
                    if (!W)
                      throw new InvalidSignatureError({
                        signature: s,
                        type: "constructor",
                      });
                    let ee = splitParameters(W.parameters),
                      et = [],
                      er = ee.length;
                    for (let s = 0; s < er; s++)
                      et.push(
                        parseAbiParameter(ee[s], {
                          structs: x,
                          type: "constructor",
                        })
                      );
                    return {
                      type: "constructor",
                      stateMutability: W.stateMutability ?? "nonpayable",
                      inputs: et,
                    };
                  })(s, x);
                if (ea.test(s))
                  return (function (s) {
                    let x = (0, X.Zw)(ea, s);
                    if (!x)
                      throw new InvalidSignatureError({
                        signature: s,
                        type: "fallback",
                      });
                    return {
                      type: "fallback",
                      stateMutability: x.stateMutability ?? "nonpayable",
                    };
                  })(s);
                if (es.test(s))
                  return { type: "receive", stateMutability: "payable" };
                throw new UnknownSignatureError({ signature: s });
              })(eu, x)
            );
        }
        return W;
      }
      var em = W(14503),
        ew = W(16693),
        eb = W(18590),
        ev = W(36117),
        ey = W(80377),
        e_ = W(97405),
        eC = W(7210),
        ex = W(30286),
        eE = W(55629),
        eA = W(47864),
        eS = W(92106),
        ek = W(87502),
        eT = W(61163),
        eI = W(74688),
        eP = W(32357),
        eR = W(50150),
        eN = W(35721);
      async function call(s, x) {
        let {
            account: X = s.account,
            batch: ee = !!s.batch?.multicall,
            blockNumber: et,
            blockTag: er = "latest",
            accessList: ei,
            blobs: eo,
            code: ea,
            data: es,
            factory: el,
            factoryData: ec,
            gas: eu,
            gasPrice: ed,
            maxFeePerBlobGas: eh,
            maxFeePerGas: ep,
            maxPriorityFeePerGas: ef,
            nonce: eg,
            to: ew,
            value: eC,
            stateOverride: eE,
            ...eA
          } = x,
          eP = X ? (0, em.T)(X) : void 0;
        if (ea && (el || ec))
          throw new ev.G(
            "Cannot provide both `code` & `factory`/`factoryData` as parameters."
          );
        if (ea && ew)
          throw new ev.G("Cannot provide both `code` & `to` as parameters.");
        let eO = ea && es,
          eM = el && ec && ew && es,
          eD = eO || eM,
          eB = eO
            ? (function (s) {
                let { code: x, data: W } = s;
                return (0, ex.w)({
                  abi: parseAbi(["constructor(bytes, bytes)"]),
                  bytecode: eb.NO,
                  args: [x, W],
                });
              })({ code: ea, data: es })
            : eM
            ? (function (s) {
                let { data: x, factory: W, factoryData: X, to: ee } = s;
                return (0, ex.w)({
                  abi: parseAbi([
                    "constructor(address, bytes, address, bytes)",
                  ]),
                  bytecode: eb.pG,
                  args: [ee, x, W, X],
                });
              })({ data: es, factory: el, factoryData: ec, to: ew })
            : es;
        try {
          (0, eN.F)(x);
          let W = et ? (0, eS.eC)(et) : void 0,
            X = W || er,
            ea = (0, eR.mF)(eE),
            es = s.chain?.formatters?.transactionRequest?.format,
            el = es || eI.tG,
            ec = el({
              ...(0, eT.K)(eA, { format: es }),
              from: eP?.address,
              accessList: ei,
              blobs: eo,
              data: eB,
              gas: eu,
              gasPrice: ed,
              maxFeePerBlobGas: eh,
              maxFeePerGas: ep,
              maxPriorityFeePerGas: ef,
              nonce: eg,
              to: eD ? void 0 : ew,
              value: eC,
            });
          if (
            ee &&
            (function ({ request: s }) {
              let { data: x, to: W, ...X } = s;
              return (
                !(!x || x.startsWith("0x82ad56cb")) &&
                !!W &&
                !(Object.values(X).filter((s) => void 0 !== s).length > 0)
              );
            })({ request: ec }) &&
            !ea
          )
            try {
              return await scheduleMulticall(s, {
                ...ec,
                blockNumber: et,
                blockTag: er,
              });
            } catch (s) {
              if (!(s instanceof ey.pZ) && !(s instanceof ey.mm)) throw s;
            }
          let em = await s.request({
            method: "eth_call",
            params: ea ? [ec, X, ea] : [ec, X],
          });
          if ("0x" === em) return { data: void 0 };
          return { data: em };
        } catch (er) {
          let X = (function (s) {
              if (!(s instanceof ev.G)) return;
              let x = s.walk();
              return "object" == typeof x?.data ? x.data?.data : x.data;
            })(er),
            { offchainLookup: ee, offchainLookupSignature: et } = await W.e(
              1785
            ).then(W.bind(W, 21785));
          if (!1 !== s.ccipRead && X?.slice(0, 10) === et && ew)
            return { data: await ee(s, { data: X, to: ew }) };
          if (eD && X?.slice(0, 10) === "0x101bb98d")
            throw new e_.Mo({ factory: el });
          throw (0, ek.P)(er, { ...x, account: eP, chain: s.chain });
        }
      }
      async function scheduleMulticall(s, x) {
        let { batchSize: W = 1024, wait: X = 0 } =
            "object" == typeof s.batch?.multicall ? s.batch.multicall : {},
          {
            blockNumber: ee,
            blockTag: et = "latest",
            data: er,
            multicallAddress: ei,
            to: eo,
          } = x,
          ea = ei;
        if (!ea) {
          if (!s.chain) throw new ey.pZ();
          ea = (0, eA.L)({
            blockNumber: ee,
            chain: s.chain,
            contract: "multicall3",
          });
        }
        let es = ee ? (0, eS.eC)(ee) : void 0,
          el = es || et,
          { schedule: ec } = (0, eP.S)({
            id: `${s.uid}.${el}`,
            wait: X,
            shouldSplitBatch(s) {
              let x = s.reduce((s, { data: x }) => s + (x.length - 2), 0);
              return x > 2 * W;
            },
            fn: async (x) => {
              let W = x.map((s) => ({
                  allowFailure: !0,
                  callData: s.data,
                  target: s.to,
                })),
                X = (0, eE.R)({
                  abi: ew.F8,
                  args: [W],
                  functionName: "aggregate3",
                }),
                ee = await s.request({
                  method: "eth_call",
                  params: [{ data: X, to: ea }, el],
                });
              return (0, eC.k)({
                abi: ew.F8,
                args: [W],
                functionName: "aggregate3",
                data: ee || "0x",
              });
            },
          }),
          [{ returnData: eu, success: ed }] = await ec({ data: er, to: eo });
        if (!ed) throw new e_.VQ({ data: eu });
        return "0x" === eu ? { data: void 0 } : { data: eu };
      }
    },
    41727: function (s, x, W) {
      "use strict";
      W.d(x, {
        W: function () {
          return createPendingTransactionFilter;
        },
      });
      var X = W(17211);
      async function createPendingTransactionFilter(s) {
        let x = (0, X.g)(s, { method: "eth_newPendingTransactionFilter" }),
          W = await s.request({ method: "eth_newPendingTransactionFilter" });
        return { id: W, request: x(W), type: "transaction" };
      }
    },
    43861: function (s, x, W) {
      "use strict";
      W.d(x, {
        C: function () {
          return internal_estimateFeesPerGas;
        },
        X: function () {
          return estimateFeesPerGas;
        },
      });
      var X = W(15371),
        ee = W(93714),
        et = W(79379),
        er = W(75016),
        ei = W(24453);
      async function estimateFeesPerGas(s, x) {
        return internal_estimateFeesPerGas(s, x);
      }
      async function internal_estimateFeesPerGas(s, x) {
        let {
            block: W,
            chain: eo = s.chain,
            request: ea,
            type: es = "eip1559",
          } = x || {},
          el = await (async () =>
            "function" == typeof eo?.fees?.baseFeeMultiplier
              ? eo.fees.baseFeeMultiplier({ block: W, client: s, request: ea })
              : eo?.fees?.baseFeeMultiplier ?? 1.2)();
        if (el < 1) throw new X.Fz();
        let ec = el.toString().split(".")[1]?.length ?? 0,
          eu = 10 ** ec,
          multiply = (s) => (s * BigInt(Math.ceil(el * eu))) / BigInt(eu),
          ed = W || (await (0, ee.s)(s, er.Q, "getBlock")({}));
        if ("function" == typeof eo?.fees?.estimateFeesPerGas) {
          let x = await eo.fees.estimateFeesPerGas({
            block: W,
            client: s,
            multiply,
            request: ea,
            type: es,
          });
          if (null !== x) return x;
        }
        if ("eip1559" === es) {
          if ("bigint" != typeof ed.baseFeePerGas) throw new X.e5();
          let x =
              "bigint" == typeof ea?.maxPriorityFeePerGas
                ? ea.maxPriorityFeePerGas
                : await (0, et.h)(s, { block: ed, chain: eo, request: ea }),
            W = multiply(ed.baseFeePerGas),
            ee = ea?.maxFeePerGas ?? W + x;
          return { maxFeePerGas: ee, maxPriorityFeePerGas: x };
        }
        let eh =
          ea?.gasPrice ?? multiply(await (0, ee.s)(s, ei.o, "getGasPrice")({}));
        return { gasPrice: eh };
      }
    },
    81841: function (s, x, W) {
      "use strict";
      W.d(x, {
        Q: function () {
          return estimateGas;
        },
      });
      var X = W(14503),
        ee = W(36117),
        et = W(91213),
        er = W(92106),
        ei = W(39625),
        eo = W(67795),
        ea = W(33639);
      let EstimateGasExecutionError = class EstimateGasExecutionError extends ee.G {
        constructor(
          s,
          {
            account: x,
            docsPath: W,
            chain: X,
            data: ee,
            gas: et,
            gasPrice: er,
            maxFeePerGas: es,
            maxPriorityFeePerGas: el,
            nonce: ec,
            to: eu,
            value: ed,
          }
        ) {
          let eh = (0, ea.xr)({
            from: x?.address,
            to: eu,
            value:
              void 0 !== ed &&
              `${(0, ei.d)(ed)} ${X?.nativeCurrency?.symbol || "ETH"}`,
            data: ee,
            gas: et,
            gasPrice: void 0 !== er && `${(0, eo.o)(er)} gwei`,
            maxFeePerGas: void 0 !== es && `${(0, eo.o)(es)} gwei`,
            maxPriorityFeePerGas: void 0 !== el && `${(0, eo.o)(el)} gwei`,
            nonce: ec,
          });
          super(s.shortMessage, {
            cause: s,
            docsPath: W,
            metaMessages: [
              ...(s.metaMessages ? [...s.metaMessages, " "] : []),
              "Estimate Gas Arguments:",
              eh,
            ].filter(Boolean),
            name: "EstimateGasExecutionError",
          }),
            Object.defineProperty(this, "cause", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.cause = s);
        }
      };
      var es = W(26445),
        el = W(87469),
        ec = W(61163),
        eu = W(74688),
        ed = W(50150),
        eh = W(35721),
        ep = W(45141),
        ef = W(88930);
      async function estimateGas(s, x) {
        let { account: W = s.account } = x,
          ei = W ? (0, X.T)(W) : void 0;
        try {
          let {
              accessList: W,
              authorizationList: X,
              blobs: eo,
              blobVersionedHashes: ea,
              blockNumber: es,
              blockTag: el,
              data: eg,
              gas: em,
              gasPrice: ew,
              maxFeePerBlobGas: eb,
              maxFeePerGas: ev,
              maxPriorityFeePerGas: ey,
              nonce: e_,
              value: eC,
              stateOverride: ex,
              ...eE
            } = await (0, ep.ZE)(s, {
              ...x,
              parameters:
                ei?.type === "local" ? void 0 : ["blobVersionedHashes"],
            }),
            eA = es ? (0, er.eC)(es) : void 0,
            eS = eA || el,
            ek = (0, ed.mF)(ex),
            eT = await (async () =>
              eE.to
                ? eE.to
                : X && X.length > 0
                ? await (0, et.z)({ authorization: X[0] }).catch(() => {
                    throw new ee.G(
                      "`to` is required. Could not infer from `authorizationList`"
                    );
                  })
                : void 0)();
          (0, eh.F)(x);
          let eI = s.chain?.formatters?.transactionRequest?.format,
            eP = eI || eu.tG,
            eR = eP({
              ...(0, ec.K)(eE, { format: eI }),
              from: ei?.address,
              accessList: W,
              authorizationList: X,
              blobs: eo,
              blobVersionedHashes: ea,
              data: eg,
              gas: em,
              gasPrice: ew,
              maxFeePerBlobGas: eb,
              maxFeePerGas: ev,
              maxPriorityFeePerGas: ey,
              nonce: e_,
              to: eT,
              value: eC,
            });
          function estimateGas_rpc(x) {
            let { block: W, request: X, rpcStateOverride: ee } = x;
            return s.request({
              method: "eth_estimateGas",
              params: ee ? [X, W ?? "latest", ee] : W ? [X, W] : [X],
            });
          }
          let eN = BigInt(
            await estimateGas_rpc({
              block: eS,
              request: eR,
              rpcStateOverride: ek,
            })
          );
          if (X) {
            let x = await (0, ef.s)(s, { address: eR.from }),
              W = await Promise.all(
                X.map(async (s) => {
                  let { contractAddress: W } = s,
                    X = await estimateGas_rpc({
                      block: eS,
                      request: {
                        authorizationList: void 0,
                        data: eg,
                        from: ei?.address,
                        to: W,
                        value: (0, er.eC)(x),
                      },
                      rpcStateOverride: ek,
                    }).catch(() => 100000n);
                  return 2n * BigInt(X);
                })
              );
            eN += W.reduce((s, x) => s + x, 0n);
          }
          return eN;
        } catch (W) {
          throw (function (s, { docsPath: x, ...W }) {
            let X = (() => {
              let x = (0, el.k)(s, W);
              return x instanceof es.cj ? s : x;
            })();
            return new EstimateGasExecutionError(X, { docsPath: x, ...W });
          })(W, { ...x, account: ei, chain: s.chain });
        }
      }
    },
    79379: function (s, x, W) {
      "use strict";
      W.d(x, {
        _: function () {
          return estimateMaxPriorityFeePerGas;
        },
        h: function () {
          return internal_estimateMaxPriorityFeePerGas;
        },
      });
      var X = W(15371),
        ee = W(95946),
        et = W(93714),
        er = W(75016),
        ei = W(24453);
      async function estimateMaxPriorityFeePerGas(s, x) {
        return internal_estimateMaxPriorityFeePerGas(s, x);
      }
      async function internal_estimateMaxPriorityFeePerGas(s, x) {
        let { block: W, chain: eo = s.chain, request: ea } = x || {};
        try {
          let x =
            eo?.fees?.maxPriorityFeePerGas ?? eo?.fees?.defaultPriorityFee;
          if ("function" == typeof x) {
            let X = W || (await (0, et.s)(s, er.Q, "getBlock")({})),
              ee = await x({ block: X, client: s, request: ea });
            if (null === ee) throw Error();
            return ee;
          }
          if (void 0 !== x) return x;
          let X = await s.request({ method: "eth_maxPriorityFeePerGas" });
          return (0, ee.y_)(X);
        } catch {
          let [x, ee] = await Promise.all([
            W ? Promise.resolve(W) : (0, et.s)(s, er.Q, "getBlock")({}),
            (0, et.s)(s, ei.o, "getGasPrice")({}),
          ]);
          if ("bigint" != typeof x.baseFeePerGas) throw new X.e5();
          let eo = ee - x.baseFeePerGas;
          if (eo < 0n) return 0n;
          return eo;
        }
      }
    },
    88930: function (s, x, W) {
      "use strict";
      W.d(x, {
        s: function () {
          return getBalance;
        },
      });
      var X = W(92106);
      async function getBalance(
        s,
        { address: x, blockNumber: W, blockTag: ee = "latest" }
      ) {
        let et = W ? (0, X.eC)(W) : void 0,
          er = await s.request({
            method: "eth_getBalance",
            params: [x, et || ee],
          });
        return BigInt(er);
      }
    },
    75016: function (s, x, W) {
      "use strict";
      W.d(x, {
        Q: function () {
          return getBlock;
        },
      });
      var X = W(79814),
        ee = W(92106),
        et = W(43310);
      async function getBlock(
        s,
        {
          blockHash: x,
          blockNumber: W,
          blockTag: er,
          includeTransactions: ei,
        } = {}
      ) {
        let eo = ei ?? !1,
          ea = void 0 !== W ? (0, ee.eC)(W) : void 0,
          es = null;
        if (
          !(es = x
            ? await s.request(
                { method: "eth_getBlockByHash", params: [x, eo] },
                { dedupe: !0 }
              )
            : await s.request(
                {
                  method: "eth_getBlockByNumber",
                  params: [ea || (er ?? "latest"), eo],
                },
                { dedupe: !!ea }
              ))
        )
          throw new X.f({ blockHash: x, blockNumber: W });
        let el = s.chain?.formatters?.block?.format || et.Z;
        return el(es);
      }
    },
    97712: function (s, x, W) {
      "use strict";
      W.d(x, {
        z: function () {
          return getBlockNumber;
        },
      });
      let X = new Map(),
        ee = new Map();
      async function withCache(
        s,
        { cacheKey: x, cacheTime: W = Number.POSITIVE_INFINITY }
      ) {
        let et = (function (s) {
            let buildCache = (s, x) => ({
                clear: () => x.delete(s),
                get: () => x.get(s),
                set: (W) => x.set(s, W),
              }),
              x = buildCache(s, X),
              W = buildCache(s, ee);
            return {
              clear: () => {
                x.clear(), W.clear();
              },
              promise: x,
              response: W,
            };
          })(x),
          er = et.response.get();
        if (er && W > 0) {
          let s = new Date().getTime() - er.created.getTime();
          if (s < W) return er.data;
        }
        let ei = et.promise.get();
        ei || ((ei = s()), et.promise.set(ei));
        try {
          let s = await ei;
          return et.response.set({ created: new Date(), data: s }), s;
        } finally {
          et.promise.clear();
        }
      }
      let cacheKey = (s) => `blockNumber.${s}`;
      async function getBlockNumber(s, { cacheTime: x = s.cacheTime } = {}) {
        let W = await withCache(
          () => s.request({ method: "eth_blockNumber" }),
          { cacheKey: cacheKey(s.uid), cacheTime: x }
        );
        return BigInt(W);
      }
    },
    79524: function (s, x, W) {
      "use strict";
      W.d(x, {
        L: function () {
          return getChainId;
        },
      });
      var X = W(95946);
      async function getChainId(s) {
        let x = await s.request({ method: "eth_chainId" }, { dedupe: !0 });
        return (0, X.ly)(x);
      }
    },
    80478: function (s, x, W) {
      "use strict";
      W.d(x, {
        K: function () {
          return getFilterChanges;
        },
      });
      var X = W(59691),
        ee = W(53992);
      async function getFilterChanges(s, { filter: x }) {
        let W = "strict" in x && x.strict,
          et = await x.request({
            method: "eth_getFilterChanges",
            params: [x.id],
          });
        if ("string" == typeof et[0]) return et;
        let er = et.map((s) => (0, ee.U)(s));
        return "abi" in x && x.abi
          ? (0, X.h)({ abi: x.abi, logs: er, strict: W })
          : er;
      }
    },
    24453: function (s, x, W) {
      "use strict";
      async function getGasPrice(s) {
        let x = await s.request({ method: "eth_gasPrice" });
        return BigInt(x);
      }
      W.d(x, {
        o: function () {
          return getGasPrice;
        },
      });
    },
    23147: function (s, x, W) {
      "use strict";
      W.d(x, {
        f: function () {
          return getTransaction;
        },
      });
      var X = W(33639),
        ee = W(92106),
        et = W(6073);
      async function getTransaction(
        s,
        { blockHash: x, blockNumber: W, blockTag: er, hash: ei, index: eo }
      ) {
        let ea = er || "latest",
          es = void 0 !== W ? (0, ee.eC)(W) : void 0,
          el = null;
        if (
          (ei
            ? (el = await s.request(
                { method: "eth_getTransactionByHash", params: [ei] },
                { dedupe: !0 }
              ))
            : x
            ? (el = await s.request(
                {
                  method: "eth_getTransactionByBlockHashAndIndex",
                  params: [x, (0, ee.eC)(eo)],
                },
                { dedupe: !0 }
              ))
            : (es || ea) &&
              (el = await s.request(
                {
                  method: "eth_getTransactionByBlockNumberAndIndex",
                  params: [es || ea, (0, ee.eC)(eo)],
                },
                { dedupe: !!es }
              )),
          !el)
        )
          throw new X.Bh({
            blockHash: x,
            blockNumber: W,
            blockTag: ea,
            hash: ei,
            index: eo,
          });
        let ec = s.chain?.formatters?.transaction?.format || et.Tr;
        return ec(el);
      }
    },
    86162: function (s, x, W) {
      "use strict";
      W.d(x, {
        K: function () {
          return getTransactionCount;
        },
      });
      var X = W(95946),
        ee = W(92106);
      async function getTransactionCount(
        s,
        { address: x, blockTag: W = "latest", blockNumber: et }
      ) {
        let er = await s.request(
          {
            method: "eth_getTransactionCount",
            params: [x, et ? (0, ee.eC)(et) : W],
          },
          { dedupe: !!et }
        );
        return (0, X.ly)(er);
      }
    },
    34085: function (s, x, W) {
      "use strict";
      W.d(x, {
        a: function () {
          return getTransactionReceipt;
        },
      });
      var X = W(33639),
        ee = W(95946),
        et = W(53992),
        er = W(6073);
      let ei = { "0x0": "reverted", "0x1": "success" };
      function formatTransactionReceipt(s) {
        let x = {
          ...s,
          blockNumber: s.blockNumber ? BigInt(s.blockNumber) : null,
          contractAddress: s.contractAddress ? s.contractAddress : null,
          cumulativeGasUsed: s.cumulativeGasUsed
            ? BigInt(s.cumulativeGasUsed)
            : null,
          effectiveGasPrice: s.effectiveGasPrice
            ? BigInt(s.effectiveGasPrice)
            : null,
          gasUsed: s.gasUsed ? BigInt(s.gasUsed) : null,
          logs: s.logs ? s.logs.map((s) => (0, et.U)(s)) : null,
          to: s.to ? s.to : null,
          transactionIndex: s.transactionIndex
            ? (0, ee.ly)(s.transactionIndex)
            : null,
          status: s.status ? ei[s.status] : null,
          type: s.type ? er.c8[s.type] || s.type : null,
        };
        return (
          s.blobGasPrice && (x.blobGasPrice = BigInt(s.blobGasPrice)),
          s.blobGasUsed && (x.blobGasUsed = BigInt(s.blobGasUsed)),
          x
        );
      }
      async function getTransactionReceipt(s, { hash: x }) {
        let W = await s.request(
          { method: "eth_getTransactionReceipt", params: [x] },
          { dedupe: !0 }
        );
        if (!W) throw new X.Yb({ hash: x });
        let ee =
          s.chain?.formatters?.transactionReceipt?.format ||
          formatTransactionReceipt;
        return ee(W);
      }
    },
    9884: function (s, x, W) {
      "use strict";
      W.d(x, {
        A: function () {
          return multicall;
        },
      });
      var X = W(16693),
        ee = W(57412),
        et = W(36117),
        er = W(97405),
        ei = W(7210),
        eo = W(55629),
        ea = W(47864),
        es = W(72365),
        el = W(93714),
        ec = W(88819);
      async function multicall(s, x) {
        let {
            allowFailure: W = !0,
            batchSize: eu,
            blockNumber: ed,
            blockTag: eh,
            multicallAddress: ep,
            stateOverride: ef,
          } = x,
          eg = x.contracts,
          em =
            eu ??
            (("object" == typeof s.batch?.multicall &&
              s.batch.multicall.batchSize) ||
              1024),
          ew = ep;
        if (!ew) {
          if (!s.chain)
            throw Error(
              "client chain not configured. multicallAddress is required."
            );
          ew = (0, ea.L)({
            blockNumber: ed,
            chain: s.chain,
            contract: "multicall3",
          });
        }
        let eb = [[]],
          ev = 0,
          ey = 0;
        for (let s = 0; s < eg.length; s++) {
          let { abi: x, address: X, args: ee, functionName: et } = eg[s];
          try {
            let s = (0, eo.R)({ abi: x, args: ee, functionName: et });
            (ey += (s.length - 2) / 2),
              em > 0 &&
                ey > em &&
                eb[ev].length > 0 &&
                (ev++, (ey = (s.length - 2) / 2), (eb[ev] = [])),
              (eb[ev] = [
                ...eb[ev],
                { allowFailure: !0, callData: s, target: X },
              ]);
          } catch (er) {
            let s = (0, es.S)(er, {
              abi: x,
              address: X,
              args: ee,
              docsPath: "/docs/contract/multicall",
              functionName: et,
            });
            if (!W) throw s;
            eb[ev] = [
              ...eb[ev],
              { allowFailure: !0, callData: "0x", target: X },
            ];
          }
        }
        let e_ = await Promise.allSettled(
            eb.map((x) =>
              (0, el.s)(
                s,
                ec.L,
                "readContract"
              )({
                abi: X.F8,
                address: ew,
                args: [x],
                blockNumber: ed,
                blockTag: eh,
                functionName: "aggregate3",
                stateOverride: ef,
              })
            )
          ),
          eC = [];
        for (let s = 0; s < e_.length; s++) {
          let x = e_[s];
          if ("rejected" === x.status) {
            if (!W) throw x.reason;
            for (let W = 0; W < eb[s].length; W++)
              eC.push({ status: "failure", error: x.reason, result: void 0 });
            continue;
          }
          let X = x.value;
          for (let x = 0; x < X.length; x++) {
            let { returnData: et, success: eo } = X[x],
              { callData: ea } = eb[s][x],
              {
                abi: el,
                address: ec,
                functionName: eu,
                args: ed,
              } = eg[eC.length];
            try {
              if ("0x" === ea) throw new ee.wb();
              if (!eo) throw new er.VQ({ data: et });
              let s = (0, ei.k)({
                abi: el,
                args: ed,
                data: et,
                functionName: eu,
              });
              eC.push(W ? { result: s, status: "success" } : s);
            } catch (x) {
              let s = (0, es.S)(x, {
                abi: el,
                address: ec,
                args: ed,
                docsPath: "/docs/contract/multicall",
                functionName: eu,
              });
              if (!W) throw s;
              eC.push({ error: s, result: void 0, status: "failure" });
            }
          }
        }
        if (eC.length !== eg.length)
          throw new et.G("multicall results mismatch");
        return eC;
      }
    },
    88819: function (s, x, W) {
      "use strict";
      W.d(x, {
        L: function () {
          return readContract;
        },
      });
      var X = W(7210),
        ee = W(55629),
        et = W(72365),
        er = W(93714),
        ei = W(78407);
      async function readContract(s, x) {
        let { abi: W, address: eo, args: ea, functionName: es, ...el } = x,
          ec = (0, ee.R)({ abi: W, args: ea, functionName: es });
        try {
          let { data: x } = await (0, er.s)(
            s,
            ei.R,
            "call"
          )({ ...el, data: ec, to: eo });
          return (0, X.k)({
            abi: W,
            args: ea,
            functionName: es,
            data: x || "0x",
          });
        } catch (s) {
          throw (0, et.S)(s, {
            abi: W,
            address: eo,
            args: ea,
            docsPath: "/docs/contract/readContract",
            functionName: es,
          });
        }
      }
    },
    78006: function (s, x, W) {
      "use strict";
      async function uninstallFilter(s, { filter: x }) {
        return x.request({ method: "eth_uninstallFilter", params: [x.id] });
      }
      W.d(x, {
        W: function () {
          return uninstallFilter;
        },
      });
    },
    51973: function (s, x, W) {
      "use strict";
      W.d(x, {
        e: function () {
          return waitForTransactionReceipt;
        },
      });
      var X = W(79814),
        ee = W(33639),
        et = W(93714),
        er = W(22514),
        ei = W(15116),
        eo = W(7760),
        ea = W(96070),
        es = W(75016),
        el = W(23147),
        ec = W(34085),
        eu = W(65185);
      async function waitForTransactionReceipt(
        s,
        {
          confirmations: x = 1,
          hash: W,
          onReplaced: ed,
          pollingInterval: eh = s.pollingInterval,
          retryCount: ep = 6,
          retryDelay: ef = ({ count: s }) => 200 * ~~(1 << s),
          timeout: eg = 18e4,
        }
      ) {
        let em, ew, eb;
        let ev = (0, ea.P)(["waitForTransactionReceipt", s.uid, W]),
          ey = !1,
          { promise: e_, resolve: eC, reject: ex } = (0, ei.n)(),
          eE = eg ? setTimeout(() => ex(new ee.mc({ hash: W })), eg) : void 0,
          eA = (0, er.N7)(
            ev,
            { onReplaced: ed, resolve: eC, reject: ex },
            (er) => {
              let ei = (0, et.s)(
                s,
                eu.q,
                "watchBlockNumber"
              )({
                emitMissed: !0,
                emitOnBegin: !0,
                poll: !0,
                pollingInterval: eh,
                async onBlockNumber(ea) {
                  let done = (s) => {
                      clearTimeout(eE), ei(), s(), eA();
                    },
                    eu = ea;
                  if (!ey)
                    try {
                      if (eb) {
                        if (
                          x > 1 &&
                          (!eb.blockNumber || eu - eb.blockNumber + 1n < x)
                        )
                          return;
                        done(() => er.resolve(eb));
                        return;
                      }
                      if (
                        (em ||
                          ((ey = !0),
                          await (0, eo.J)(
                            async () => {
                              (em = await (0, et.s)(
                                s,
                                el.f,
                                "getTransaction"
                              )({ hash: W })).blockNumber &&
                                (eu = em.blockNumber);
                            },
                            { delay: ef, retryCount: ep }
                          ),
                          (ey = !1)),
                        (eb = await (0, et.s)(
                          s,
                          ec.a,
                          "getTransactionReceipt"
                        )({ hash: W })),
                        x > 1 &&
                          (!eb.blockNumber || eu - eb.blockNumber + 1n < x))
                      )
                        return;
                      done(() => er.resolve(eb));
                    } catch (W) {
                      if (W instanceof ee.Bh || W instanceof ee.Yb) {
                        if (!em) {
                          ey = !1;
                          return;
                        }
                        try {
                          (ew = em), (ey = !0);
                          let W = await (0, eo.J)(
                            () =>
                              (0, et.s)(
                                s,
                                es.Q,
                                "getBlock"
                              )({ blockNumber: eu, includeTransactions: !0 }),
                            {
                              delay: ef,
                              retryCount: ep,
                              shouldRetry: ({ error: s }) => s instanceof X.f,
                            }
                          );
                          ey = !1;
                          let ee = W.transactions.find(
                            ({ from: s, nonce: x }) =>
                              s === ew.from && x === ew.nonce
                          );
                          if (
                            !ee ||
                            ((eb = await (0, et.s)(
                              s,
                              ec.a,
                              "getTransactionReceipt"
                            )({ hash: ee.hash })),
                            x > 1 &&
                              (!eb.blockNumber || eu - eb.blockNumber + 1n < x))
                          )
                            return;
                          let ei = "replaced";
                          ee.to === ew.to &&
                          ee.value === ew.value &&
                          ee.input === ew.input
                            ? (ei = "repriced")
                            : ee.from === ee.to &&
                              0n === ee.value &&
                              (ei = "cancelled"),
                            done(() => {
                              er.onReplaced?.({
                                reason: ei,
                                replacedTransaction: ew,
                                transaction: ee,
                                transactionReceipt: eb,
                              }),
                                er.resolve(eb);
                            });
                        } catch (s) {
                          done(() => er.reject(s));
                        }
                      } else done(() => er.reject(W));
                    }
                },
              });
            }
          );
        return e_;
      }
    },
    65185: function (s, x, W) {
      "use strict";
      W.d(x, {
        q: function () {
          return watchBlockNumber;
        },
      });
      var X = W(95946),
        ee = W(93714),
        et = W(22514),
        er = W(23),
        ei = W(96070),
        eo = W(97712);
      function watchBlockNumber(
        s,
        {
          emitOnBegin: x = !1,
          emitMissed: W = !1,
          onBlockNumber: ea,
          onError: es,
          poll: el,
          pollingInterval: ec = s.pollingInterval,
        }
      ) {
        let eu;
        let ed =
          void 0 !== el
            ? el
            : "webSocket" !== s.transport.type &&
              ("fallback" !== s.transport.type ||
                "webSocket" !== s.transport.transports[0].config.type);
        return ed
          ? (() => {
              let X = (0, ei.P)(["watchBlockNumber", s.uid, x, W, ec]);
              return (0, et.N7)(X, { onBlockNumber: ea, onError: es }, (X) =>
                (0, er.$)(
                  async () => {
                    try {
                      let x = await (0, ee.s)(
                        s,
                        eo.z,
                        "getBlockNumber"
                      )({ cacheTime: 0 });
                      if (eu) {
                        if (x === eu) return;
                        if (x - eu > 1 && W)
                          for (let s = eu + 1n; s < x; s++)
                            X.onBlockNumber(s, eu), (eu = s);
                      }
                      (!eu || x > eu) && (X.onBlockNumber(x, eu), (eu = x));
                    } catch (s) {
                      X.onError?.(s);
                    }
                  },
                  { emitOnBegin: x, interval: ec }
                )
              );
            })()
          : (() => {
              let ee = (0, ei.P)(["watchBlockNumber", s.uid, x, W]);
              return (0, et.N7)(ee, { onBlockNumber: ea, onError: es }, (x) => {
                let W = !0,
                  unsubscribe = () => (W = !1);
                return (
                  (async () => {
                    try {
                      let ee = (() => {
                          if ("fallback" === s.transport.type) {
                            let x = s.transport.transports.find(
                              (s) => "webSocket" === s.config.type
                            );
                            return x ? x.value : s.transport;
                          }
                          return s.transport;
                        })(),
                        { unsubscribe: et } = await ee.subscribe({
                          params: ["newHeads"],
                          onData(s) {
                            if (!W) return;
                            let ee = (0, X.y_)(s.result?.number);
                            x.onBlockNumber(ee, eu), (eu = ee);
                          },
                          onError(s) {
                            x.onError?.(s);
                          },
                        });
                      (unsubscribe = et), W || unsubscribe();
                    } catch (s) {
                      es?.(s);
                    }
                  })(),
                  () => unsubscribe()
                );
              });
            })();
      }
    },
    37075: function (s, x, W) {
      "use strict";
      W.d(x, {
        O: function () {
          return watchPendingTransactions;
        },
      });
      var X = W(93714),
        ee = W(22514),
        et = W(23),
        er = W(96070),
        ei = W(41727),
        eo = W(80478),
        ea = W(78006);
      function watchPendingTransactions(
        s,
        {
          batch: x = !0,
          onError: W,
          onTransactions: es,
          poll: el,
          pollingInterval: ec = s.pollingInterval,
        }
      ) {
        let eu, ed;
        let eh = void 0 !== el ? el : "webSocket" !== s.transport.type;
        return eh
          ? (() => {
              let el = (0, er.P)(["watchPendingTransactions", s.uid, x, ec]);
              return (0, ee.N7)(el, { onTransactions: es, onError: W }, (W) => {
                let ee;
                let er = (0, et.$)(
                  async () => {
                    try {
                      if (!ee)
                        try {
                          ee = await (0, X.s)(
                            s,
                            ei.W,
                            "createPendingTransactionFilter"
                          )({});
                          return;
                        } catch (s) {
                          throw (er(), s);
                        }
                      let et = await (0, X.s)(
                        s,
                        eo.K,
                        "getFilterChanges"
                      )({ filter: ee });
                      if (0 === et.length) return;
                      if (x) W.onTransactions(et);
                      else for (let s of et) W.onTransactions([s]);
                    } catch (s) {
                      W.onError?.(s);
                    }
                  },
                  { emitOnBegin: !0, interval: ec }
                );
                return async () => {
                  ee &&
                    (await (0, X.s)(
                      s,
                      ea.W,
                      "uninstallFilter"
                    )({ filter: ee })),
                    er();
                };
              });
            })()
          : ((eu = !0),
            (ed = () => (eu = !1)),
            (async () => {
              try {
                let { unsubscribe: x } = await s.transport.subscribe({
                  params: ["newPendingTransactions"],
                  onData(s) {
                    if (!eu) return;
                    let x = s.result;
                    es([x]);
                  },
                  onError(s) {
                    W?.(s);
                  },
                });
                (ed = x), eu || ed();
              } catch (s) {
                W?.(s);
              }
            })(),
            () => ed());
      }
    },
    45141: function (s, x, W) {
      "use strict";
      W.d(x, {
        QZ: function () {
          return ew;
        },
        ZE: function () {
          return prepareTransactionRequest;
        },
      });
      var X = W(14503),
        ee = W(43861),
        et = W(81841),
        er = W(75016),
        ei = W(86162),
        eo = W(15371),
        ea = W(11187),
        es = W(92106);
      function blobsToCommitments(s) {
        let { kzg: x } = s,
          W = s.to ?? ("string" == typeof s.blobs[0] ? "hex" : "bytes"),
          X =
            "string" == typeof s.blobs[0]
              ? s.blobs.map((s) => (0, ea.nr)(s))
              : s.blobs,
          ee = [];
        for (let s of X) ee.push(Uint8Array.from(x.blobToKzgCommitment(s)));
        return "bytes" === W ? ee : ee.map((s) => (0, es.ci)(s));
      }
      function blobsToProofs(s) {
        let { kzg: x } = s,
          W = s.to ?? ("string" == typeof s.blobs[0] ? "hex" : "bytes"),
          X =
            "string" == typeof s.blobs[0]
              ? s.blobs.map((s) => (0, ea.nr)(s))
              : s.blobs,
          ee =
            "string" == typeof s.commitments[0]
              ? s.commitments.map((s) => (0, ea.nr)(s))
              : s.commitments,
          et = [];
        for (let s = 0; s < X.length; s++) {
          let W = X[s],
            er = ee[s];
          et.push(Uint8Array.from(x.computeBlobKzgProof(W, er)));
        }
        return "bytes" === W ? et : et.map((s) => (0, es.ci)(s));
      }
      var el = W(3868),
        ec = W(15102),
        eu = W(36117);
      let BlobSizeTooLargeError = class BlobSizeTooLargeError extends eu.G {
        constructor({ maxSize: s, size: x }) {
          super("Blob size is too large.", {
            metaMessages: [`Max: ${s} bytes`, `Given: ${x} bytes`],
            name: "BlobSizeTooLargeError",
          });
        }
      };
      let EmptyBlobError = class EmptyBlobError extends eu.G {
        constructor() {
          super("Blob data must not be empty.", { name: "EmptyBlobError" });
        }
      };
      var ed = W(11221),
        eh = W(39135),
        ep = W(93714),
        ef = W(35721),
        eg = W(33639),
        em = W(79524);
      let ew = [
          "blobVersionedHashes",
          "chainId",
          "fees",
          "gas",
          "nonce",
          "type",
        ],
        eb = new Map();
      async function prepareTransactionRequest(s, x) {
        let W, eu;
        let {
            account: ev = s.account,
            blobs: ey,
            chain: e_,
            gas: eC,
            kzg: ex,
            nonce: eE,
            nonceManager: eA,
            parameters: eS = ew,
            type: ek,
          } = x,
          eT = ev ? (0, X.T)(ev) : ev,
          eI = { ...x, ...(eT ? { from: eT?.address } : {}) };
        async function getBlock() {
          return (
            W ||
            (W = await (0, ep.s)(s, er.Q, "getBlock")({ blockTag: "latest" }))
          );
        }
        async function getChainId() {
          if (eu) return eu;
          if (e_) return e_.id;
          if (void 0 !== x.chainId) return x.chainId;
          let W = await (0, ep.s)(s, em.L, "getChainId")({});
          return (eu = W);
        }
        if (
          (eS.includes("blobVersionedHashes") || eS.includes("sidecars")) &&
          ey &&
          ex
        ) {
          let s = blobsToCommitments({ blobs: ey, kzg: ex });
          if (eS.includes("blobVersionedHashes")) {
            let x = (function (s) {
              let { commitments: x, version: W } = s,
                X = s.to ?? ("string" == typeof x[0] ? "hex" : "bytes"),
                ee = [];
              for (let s of x)
                ee.push(
                  (function (s) {
                    let { commitment: x, version: W = 1 } = s,
                      X = s.to ?? ("string" == typeof x ? "hex" : "bytes"),
                      ee = (function (s, x) {
                        let W = (0, el.JQ)(
                          (0, ec.v)(s, { strict: !1 }) ? (0, ea.O0)(s) : s
                        );
                        return "bytes" === (x || "hex") ? W : (0, es.NC)(W);
                      })(x, "bytes");
                    return ee.set([W], 0), "bytes" === X ? ee : (0, es.ci)(ee);
                  })({ commitment: s, to: X, version: W })
                );
              return ee;
            })({ commitments: s, to: "hex" });
            eI.blobVersionedHashes = x;
          }
          if (eS.includes("sidecars")) {
            let x = blobsToProofs({ blobs: ey, commitments: s, kzg: ex }),
              W = (function (s) {
                let { data: x, kzg: W, to: X } = s,
                  ee =
                    s.blobs ??
                    (function (s) {
                      let x =
                          s.to ?? ("string" == typeof s.data ? "hex" : "bytes"),
                        W =
                          "string" == typeof s.data
                            ? (0, ea.nr)(s.data)
                            : s.data,
                        X = (0, eh.d)(W);
                      if (!X) throw new EmptyBlobError();
                      if (X > 761855)
                        throw new BlobSizeTooLargeError({
                          maxSize: 761855,
                          size: X,
                        });
                      let ee = [],
                        et = !0,
                        er = 0;
                      for (; et; ) {
                        let s = (0, ed.q)(new Uint8Array(131072)),
                          x = 0;
                        for (; x < 4096; ) {
                          let X = W.slice(er, er + 31);
                          if ((s.pushByte(0), s.pushBytes(X), X.length < 31)) {
                            s.pushByte(128), (et = !1);
                            break;
                          }
                          x++, (er += 31);
                        }
                        ee.push(s);
                      }
                      return "bytes" === x
                        ? ee.map((s) => s.bytes)
                        : ee.map((s) => (0, es.ci)(s.bytes));
                    })({ data: x, to: X }),
                  et =
                    s.commitments ??
                    blobsToCommitments({ blobs: ee, kzg: W, to: X }),
                  er =
                    s.proofs ??
                    blobsToProofs({
                      blobs: ee,
                      commitments: et,
                      kzg: W,
                      to: X,
                    }),
                  ei = [];
                for (let s = 0; s < ee.length; s++)
                  ei.push({ blob: ee[s], commitment: et[s], proof: er[s] });
                return ei;
              })({ blobs: ey, commitments: s, proofs: x, to: "hex" });
            eI.sidecars = W;
          }
        }
        if (
          (eS.includes("chainId") && (eI.chainId = await getChainId()),
          (eS.includes("fees") || eS.includes("type")) && void 0 === ek)
        )
          try {
            eI.type = (function (s) {
              if (s.type) return s.type;
              if (void 0 !== s.authorizationList) return "eip7702";
              if (
                void 0 !== s.blobs ||
                void 0 !== s.blobVersionedHashes ||
                void 0 !== s.maxFeePerBlobGas ||
                void 0 !== s.sidecars
              )
                return "eip4844";
              if (
                void 0 !== s.maxFeePerGas ||
                void 0 !== s.maxPriorityFeePerGas
              )
                return "eip1559";
              if (void 0 !== s.gasPrice)
                return void 0 !== s.accessList ? "eip2930" : "legacy";
              throw new eg.j3({ transaction: s });
            })(eI);
          } catch {
            let x = eb.get(s.uid);
            if (void 0 === x) {
              let W = await getBlock();
              (x = "bigint" == typeof W?.baseFeePerGas), eb.set(s.uid, x);
            }
            eI.type = x ? "eip1559" : "legacy";
          }
        if (eS.includes("fees")) {
          if ("legacy" !== eI.type && "eip2930" !== eI.type) {
            if (
              void 0 === eI.maxFeePerGas ||
              void 0 === eI.maxPriorityFeePerGas
            ) {
              let W = await getBlock(),
                { maxFeePerGas: X, maxPriorityFeePerGas: et } = await (0, ee.C)(
                  s,
                  { block: W, chain: e_, request: eI }
                );
              if (
                void 0 === x.maxPriorityFeePerGas &&
                x.maxFeePerGas &&
                x.maxFeePerGas < et
              )
                throw new eo.ld({ maxPriorityFeePerGas: et });
              (eI.maxPriorityFeePerGas = et), (eI.maxFeePerGas = X);
            }
          } else {
            if (void 0 !== x.maxFeePerGas || void 0 !== x.maxPriorityFeePerGas)
              throw new eo.e5();
            if (void 0 === x.gasPrice) {
              let x = await getBlock(),
                { gasPrice: W } = await (0, ee.C)(s, {
                  block: x,
                  chain: e_,
                  request: eI,
                  type: "legacy",
                });
              eI.gasPrice = W;
            }
          }
        }
        if (
          (eS.includes("gas") &&
            void 0 === eC &&
            (eI.gas = await (0, ep.s)(
              s,
              et.Q,
              "estimateGas"
            )({
              ...eI,
              account: eT ? { address: eT.address, type: "json-rpc" } : eT,
            })),
          eS.includes("nonce") && void 0 === eE && eT)
        ) {
          if (eA) {
            let x = await getChainId();
            eI.nonce = await eA.consume({
              address: eT.address,
              chainId: x,
              client: s,
            });
          } else
            eI.nonce = await (0, ep.s)(
              s,
              ei.K,
              "getTransactionCount"
            )({ address: eT.address, blockTag: "pending" });
        }
        return (0, ef.F)(eI), delete eI.parameters, eI;
      }
    },
    99238: function (s, x, W) {
      "use strict";
      async function sendRawTransaction(s, { serializedTransaction: x }) {
        return s.request(
          { method: "eth_sendRawTransaction", params: [x] },
          { retryCount: 0 }
        );
      }
      W.d(x, {
        p: function () {
          return sendRawTransaction;
        },
      });
    },
    50025: function (s, x, W) {
      "use strict";
      W.d(x, {
        T: function () {
          return sendTransaction;
        },
      });
      var X = W(14503),
        ee = W(8998),
        et = W(36117),
        er = W(91213),
        ei = W(80377),
        eo = W(26445),
        ea = W(33639),
        es = W(87469),
        el = W(61163),
        ec = W(74688),
        eu = W(93714),
        ed = W(79773),
        eh = W(35721),
        ep = W(79524),
        ef = W(45141),
        eg = W(99238);
      let em = new ed.k(128);
      async function sendTransaction(s, x) {
        let {
          account: W = s.account,
          chain: ed = s.chain,
          accessList: ew,
          authorizationList: eb,
          blobs: ev,
          data: ey,
          gas: e_,
          gasPrice: eC,
          maxFeePerBlobGas: ex,
          maxFeePerGas: eE,
          maxPriorityFeePerGas: eA,
          nonce: eS,
          value: ek,
          ...eT
        } = x;
        if (void 0 === W)
          throw new ee.o({ docsPath: "/docs/actions/wallet/sendTransaction" });
        let eI = W ? (0, X.T)(W) : null;
        try {
          (0, eh.F)(x);
          let W = await (async () =>
            x.to
              ? x.to
              : eb && eb.length > 0
              ? await (0, er.z)({ authorization: eb[0] }).catch(() => {
                  throw new et.G(
                    "`to` is required. Could not infer from `authorizationList`."
                  );
                })
              : void 0)();
          if (eI?.type === "json-rpc" || null === eI) {
            let x;
            null !== ed &&
              ((x = await (0, eu.s)(s, ep.L, "getChainId")({})),
              (function ({ chain: s, currentChainId: x }) {
                if (!s) throw new ei.Bk();
                if (x !== s.id)
                  throw new ei.Yl({ chain: s, currentChainId: x });
              })({ currentChainId: x, chain: ed }));
            let X = s.chain?.formatters?.transactionRequest?.format,
              ee = X || ec.tG,
              et = ee({
                ...(0, el.K)(eT, { format: X }),
                accessList: ew,
                authorizationList: eb,
                blobs: ev,
                chainId: x,
                data: ey,
                from: eI?.address,
                gas: e_,
                gasPrice: eC,
                maxFeePerBlobGas: ex,
                maxFeePerGas: eE,
                maxPriorityFeePerGas: eA,
                nonce: eS,
                to: W,
                value: ek,
              }),
              er = em.get(s.uid);
            try {
              return await s.request(
                {
                  method: er ? "wallet_sendTransaction" : "eth_sendTransaction",
                  params: [et],
                },
                { retryCount: 0 }
              );
            } catch (x) {
              if (!1 === er) throw x;
              if (
                "InvalidInputRpcError" === x.name ||
                "InvalidParamsRpcError" === x.name ||
                "MethodNotFoundRpcError" === x.name ||
                "MethodNotSupportedRpcError" === x.name
              )
                return await s
                  .request(
                    { method: "wallet_sendTransaction", params: [et] },
                    { retryCount: 0 }
                  )
                  .then((x) => (em.set(s.uid, !0), x))
                  .catch((W) => {
                    if (
                      "MethodNotFoundRpcError" === W.name ||
                      "MethodNotSupportedRpcError" === W.name
                    )
                      throw (em.set(s.uid, !1), x);
                    throw W;
                  });
              throw x;
            }
          }
          if (eI?.type === "local") {
            let x = await (0, eu.s)(
                s,
                ef.ZE,
                "prepareTransactionRequest"
              )({
                account: eI,
                accessList: ew,
                authorizationList: eb,
                blobs: ev,
                chain: ed,
                data: ey,
                gas: e_,
                gasPrice: eC,
                maxFeePerBlobGas: ex,
                maxFeePerGas: eE,
                maxPriorityFeePerGas: eA,
                nonce: eS,
                nonceManager: eI.nonceManager,
                parameters: [...ef.QZ, "sidecars"],
                value: ek,
                ...eT,
                to: W,
              }),
              X = ed?.serializers?.transaction,
              ee = await eI.signTransaction(x, { serializer: X });
            return await (0, eu.s)(
              s,
              eg.p,
              "sendRawTransaction"
            )({ serializedTransaction: ee });
          }
          if (eI?.type === "smart")
            throw new ee.Y({
              metaMessages: [
                "Consider using the `sendUserOperation` Action instead.",
              ],
              docsPath: "/docs/actions/bundler/sendUserOperation",
              type: "smart",
            });
          throw new ee.Y({
            docsPath: "/docs/actions/wallet/sendTransaction",
            type: eI?.type,
          });
        } catch (s) {
          if (s instanceof ee.Y) throw s;
          throw (function (s, { docsPath: x, ...W }) {
            let X = (() => {
              let x = (0, es.k)(s, W);
              return x instanceof eo.cj ? s : x;
            })();
            return new ea.mk(X, { docsPath: x, ...W });
          })(s, { ...x, account: eI, chain: x.chain || void 0 });
        }
      }
    },
    64892: function (s, x, W) {
      "use strict";
      W.d(x, {
        R: function () {
          return X;
        },
      });
      let X = {
        formatters: void 0,
        fees: void 0,
        serializers: void 0,
        id: 1,
        name: "Ethereum",
        nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
        rpcUrls: { default: { http: ["https://eth.merkle.io"] } },
        blockExplorers: {
          default: {
            name: "Etherscan",
            url: "https://etherscan.io",
            apiUrl: "https://api.etherscan.io/api",
          },
        },
        contracts: {
          ensRegistry: {
            address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
          },
          ensUniversalResolver: {
            address: "0xce01f8eee7E479C928F8919abD53E553a36CeF67",
            blockCreated: 19258213,
          },
          multicall3: {
            address: "0xca11bde05977b3631167028862be2a173976ca11",
            blockCreated: 14353601,
          },
        },
      };
    },
    94898: function (s, x, W) {
      "use strict";
      W.d(x, {
        e: function () {
          return createClient;
        },
      });
      var X = W(14503),
        ee = W(75632);
      function createClient(s) {
        let {
            batch: x,
            cacheTime: W = s.pollingInterval ?? 4e3,
            ccipRead: et,
            key: er = "base",
            name: ei = "Base Client",
            pollingInterval: eo = 4e3,
            type: ea = "base",
          } = s,
          es = s.chain,
          el = s.account ? (0, X.T)(s.account) : void 0,
          {
            config: ec,
            request: eu,
            value: ed,
          } = s.transport({ chain: es, pollingInterval: eo }),
          eh = { ...ec, ...ed },
          ep = {
            account: el,
            batch: x,
            cacheTime: W,
            ccipRead: et,
            chain: es,
            key: er,
            name: ei,
            pollingInterval: eo,
            request: eu,
            transport: eh,
            type: ea,
            uid: (0, ee.h)(),
          };
        return Object.assign(ep, {
          extend: (function extend(s) {
            return (x) => {
              let W = x(s);
              for (let s in ep) delete W[s];
              let X = { ...s, ...W };
              return Object.assign(X, { extend: extend(X) });
            };
          })(ep),
        });
      }
    },
    22319: function (s, x, W) {
      "use strict";
      W.d(x, {
        q: function () {
          return createTransport;
        },
      });
      var X = W(36117),
        ee = W(78863),
        et = W(39028),
        er = W(92106),
        ei = W(79773);
      let eo = new ei.k(8192);
      var ea = W(7760),
        es = W(96070),
        el = W(75632);
      function createTransport(
        {
          key: s,
          methods: x,
          name: W,
          request: ei,
          retryCount: ec = 3,
          retryDelay: eu = 150,
          timeout: ed,
          type: eh,
        },
        ep
      ) {
        let ef = (0, el.h)();
        return {
          config: {
            key: s,
            name: W,
            request: ei,
            retryCount: ec,
            retryDelay: eu,
            timeout: ed,
            type: eh,
          },
          request: (function (s, x = {}) {
            return async (W, ei = {}) => {
              let {
                  dedupe: el = !1,
                  methods: ec,
                  retryDelay: eu = 150,
                  retryCount: ed = 3,
                  uid: eh,
                } = { ...x, ...ei },
                { method: ep } = W;
              if (
                ec?.exclude?.includes(ep) ||
                (ec?.include && !ec.include.includes(ep))
              )
                throw new et.gS(Error("method not supported"), { method: ep });
              let ef = el ? (0, er.$G)(`${eh}.${(0, es.P)(W)}`) : void 0;
              return (function (s, { enabled: x = !0, id: W }) {
                if (!x || !W) return s();
                if (eo.get(W)) return eo.get(W);
                let X = s().finally(() => eo.delete(W));
                return eo.set(W, X), X;
              })(
                () =>
                  (0, ea.J)(
                    async () => {
                      try {
                        return await s(W);
                      } catch (s) {
                        switch (s.code) {
                          case et.s7.code:
                            throw new et.s7(s);
                          case et.B.code:
                            throw new et.B(s);
                          case et.LX.code:
                            throw new et.LX(s, { method: W.method });
                          case et.nY.code:
                            throw new et.nY(s);
                          case et.XS.code:
                            throw new et.XS(s);
                          case et.yR.code:
                            throw new et.yR(s);
                          case et.Og.code:
                            throw new et.Og(s);
                          case et.pT.code:
                            throw new et.pT(s);
                          case et.KB.code:
                            throw new et.KB(s);
                          case et.gS.code:
                            throw new et.gS(s, { method: W.method });
                          case et.Pv.code:
                            throw new et.Pv(s);
                          case et.GD.code:
                            throw new et.GD(s);
                          case et.ab.code:
                            throw new et.ab(s);
                          case et.PE.code:
                            throw new et.PE(s);
                          case et.Ts.code:
                            throw new et.Ts(s);
                          case et.u5.code:
                            throw new et.u5(s);
                          case et.I0.code:
                            throw new et.I0(s);
                          case et.x3.code:
                            throw new et.x3(s);
                          case 5e3:
                            throw new et.ab(s);
                          default:
                            if (s instanceof X.G) throw s;
                            throw new et.ir(s);
                        }
                      }
                    },
                    {
                      delay: ({ count: s, error: x }) => {
                        if (x && x instanceof ee.Gg) {
                          let s = x?.headers?.get("Retry-After");
                          if (s?.match(/\d/)) return 1e3 * Number.parseInt(s);
                        }
                        return ~~(1 << s) * eu;
                      },
                      retryCount: ed,
                      shouldRetry: ({ error: s }) =>
                        "code" in s && "number" == typeof s.code
                          ? -1 === s.code ||
                            s.code === et.Pv.code ||
                            s.code === et.XS.code
                          : !(s instanceof ee.Gg) ||
                            !s.status ||
                            403 === s.status ||
                            408 === s.status ||
                            413 === s.status ||
                            429 === s.status ||
                            500 === s.status ||
                            502 === s.status ||
                            503 === s.status ||
                            504 === s.status,
                    }
                  ),
                { enabled: el, id: ef }
              );
            };
          })(ei, { methods: x, retryCount: ec, retryDelay: eu, uid: ef }),
          value: ep,
        };
      }
    },
    68597: function (s, x, W) {
      "use strict";
      W.d(x, {
        d: function () {
          return http;
        },
      });
      var X = W(78863),
        ee = W(36117);
      let UrlRequiredError = class UrlRequiredError extends ee.G {
        constructor() {
          super(
            "No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.",
            { docsPath: "/docs/clients/intro", name: "UrlRequiredError" }
          );
        }
      };
      var et = W(32357),
        er = W(60229),
        ei = W(96070);
      let eo = {
        current: 0,
        take() {
          return this.current++;
        },
        reset() {
          this.current = 0;
        },
      };
      var ea = W(22319);
      function http(s, x = {}) {
        let {
          batch: W,
          fetchOptions: ee,
          key: es = "http",
          methods: el,
          name: ec = "HTTP JSON-RPC",
          onFetchRequest: eu,
          onFetchResponse: ed,
          retryDelay: eh,
        } = x;
        return ({ chain: ep, retryCount: ef, timeout: eg }) => {
          let { batchSize: em = 1e3, wait: ew = 0 } =
              "object" == typeof W ? W : {},
            eb = x.retryCount ?? ef,
            ev = eg ?? x.timeout ?? 1e4,
            ey = s || ep?.rpcUrls.default.http[0];
          if (!ey) throw new UrlRequiredError();
          let e_ = (function (s, x = {}) {
            return {
              async request(W) {
                let {
                    body: ee,
                    onRequest: et = x.onRequest,
                    onResponse: ea = x.onResponse,
                    timeout: es = x.timeout ?? 1e4,
                  } = W,
                  el = { ...(x.fetchOptions ?? {}), ...(W.fetchOptions ?? {}) },
                  { headers: ec, method: eu, signal: ed } = el;
                try {
                  let x;
                  let W = await (0, er.F)(
                    async ({ signal: x }) => {
                      let W = {
                          ...el,
                          body: Array.isArray(ee)
                            ? (0, ei.P)(
                                ee.map((s) => ({
                                  jsonrpc: "2.0",
                                  id: s.id ?? eo.take(),
                                  ...s,
                                }))
                              )
                            : (0, ei.P)({
                                jsonrpc: "2.0",
                                id: ee.id ?? eo.take(),
                                ...ee,
                              }),
                          headers: {
                            "Content-Type": "application/json",
                            ...ec,
                          },
                          method: eu || "POST",
                          signal: ed || (es > 0 ? x : null),
                        },
                        X = new Request(s, W),
                        er = (await et?.(X, W)) ?? { ...W, url: s },
                        ea = await fetch(er.url ?? s, er);
                      return ea;
                    },
                    {
                      errorInstance: new X.W5({ body: ee, url: s }),
                      timeout: es,
                      signal: !0,
                    }
                  );
                  if (
                    (ea && (await ea(W)),
                    W.headers
                      .get("Content-Type")
                      ?.startsWith("application/json"))
                  )
                    x = await W.json();
                  else {
                    x = await W.text();
                    try {
                      x = JSON.parse(x || "{}");
                    } catch (s) {
                      if (W.ok) throw s;
                      x = { error: x };
                    }
                  }
                  if (!W.ok)
                    throw new X.Gg({
                      body: ee,
                      details: (0, ei.P)(x.error) || W.statusText,
                      headers: W.headers,
                      status: W.status,
                      url: s,
                    });
                  return x;
                } catch (x) {
                  if (x instanceof X.Gg || x instanceof X.W5) throw x;
                  throw new X.Gg({ body: ee, cause: x, url: s });
                }
              },
            };
          })(ey, {
            fetchOptions: ee,
            onRequest: eu,
            onResponse: ed,
            timeout: ev,
          });
          return (0, ea.q)(
            {
              key: es,
              methods: el,
              name: ec,
              async request({ method: s, params: x }) {
                let ee = { method: s, params: x },
                  { schedule: er } = (0, et.S)({
                    id: ey,
                    wait: ew,
                    shouldSplitBatch: (s) => s.length > em,
                    fn: (s) => e_.request({ body: s }),
                    sort: (s, x) => s.id - x.id,
                  }),
                  fn = async (s) =>
                    W ? er(s) : [await e_.request({ body: s })],
                  [{ error: ei, result: eo }] = await fn(ee);
                if (ei) throw new X.bs({ body: ee, error: ei, url: ey });
                return eo;
              },
              retryCount: eb,
              retryDelay: eh,
              timeout: ev,
              type: "http",
            },
            { fetchOptions: ee, url: ey }
          );
        };
      }
    },
    16693: function (s, x, W) {
      "use strict";
      W.d(x, {
        $o: function () {
          return ea;
        },
        F8: function () {
          return X;
        },
        Wo: function () {
          return es;
        },
        X$: function () {
          return eo;
        },
        du: function () {
          return er;
        },
        k3: function () {
          return et;
        },
        nZ: function () {
          return ei;
        },
      });
      let X = [
          {
            inputs: [
              {
                components: [
                  { name: "target", type: "address" },
                  { name: "allowFailure", type: "bool" },
                  { name: "callData", type: "bytes" },
                ],
                name: "calls",
                type: "tuple[]",
              },
            ],
            name: "aggregate3",
            outputs: [
              {
                components: [
                  { name: "success", type: "bool" },
                  { name: "returnData", type: "bytes" },
                ],
                name: "returnData",
                type: "tuple[]",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
        ],
        ee = [
          { inputs: [], name: "ResolverNotFound", type: "error" },
          { inputs: [], name: "ResolverWildcardNotSupported", type: "error" },
          { inputs: [], name: "ResolverNotContract", type: "error" },
          {
            inputs: [{ name: "returnData", type: "bytes" }],
            name: "ResolverError",
            type: "error",
          },
          {
            inputs: [
              {
                components: [
                  { name: "status", type: "uint16" },
                  { name: "message", type: "string" },
                ],
                name: "errors",
                type: "tuple[]",
              },
            ],
            name: "HttpError",
            type: "error",
          },
        ],
        et = [
          ...ee,
          {
            name: "resolve",
            type: "function",
            stateMutability: "view",
            inputs: [
              { name: "name", type: "bytes" },
              { name: "data", type: "bytes" },
            ],
            outputs: [
              { name: "", type: "bytes" },
              { name: "address", type: "address" },
            ],
          },
          {
            name: "resolve",
            type: "function",
            stateMutability: "view",
            inputs: [
              { name: "name", type: "bytes" },
              { name: "data", type: "bytes" },
              { name: "gateways", type: "string[]" },
            ],
            outputs: [
              { name: "", type: "bytes" },
              { name: "address", type: "address" },
            ],
          },
        ],
        er = [
          ...ee,
          {
            name: "reverse",
            type: "function",
            stateMutability: "view",
            inputs: [{ type: "bytes", name: "reverseName" }],
            outputs: [
              { type: "string", name: "resolvedName" },
              { type: "address", name: "resolvedAddress" },
              { type: "address", name: "reverseResolver" },
              { type: "address", name: "resolver" },
            ],
          },
          {
            name: "reverse",
            type: "function",
            stateMutability: "view",
            inputs: [
              { type: "bytes", name: "reverseName" },
              { type: "string[]", name: "gateways" },
            ],
            outputs: [
              { type: "string", name: "resolvedName" },
              { type: "address", name: "resolvedAddress" },
              { type: "address", name: "reverseResolver" },
              { type: "address", name: "resolver" },
            ],
          },
        ],
        ei = [
          {
            name: "text",
            type: "function",
            stateMutability: "view",
            inputs: [
              { name: "name", type: "bytes32" },
              { name: "key", type: "string" },
            ],
            outputs: [{ name: "", type: "string" }],
          },
        ],
        eo = [
          {
            name: "addr",
            type: "function",
            stateMutability: "view",
            inputs: [{ name: "name", type: "bytes32" }],
            outputs: [{ name: "", type: "address" }],
          },
          {
            name: "addr",
            type: "function",
            stateMutability: "view",
            inputs: [
              { name: "name", type: "bytes32" },
              { name: "coinType", type: "uint256" },
            ],
            outputs: [{ name: "", type: "bytes" }],
          },
        ],
        ea = [
          {
            inputs: [
              { name: "_signer", type: "address" },
              { name: "_hash", type: "bytes32" },
              { name: "_signature", type: "bytes" },
            ],
            stateMutability: "nonpayable",
            type: "constructor",
          },
          {
            inputs: [
              { name: "_signer", type: "address" },
              { name: "_hash", type: "bytes32" },
              { name: "_signature", type: "bytes" },
            ],
            outputs: [{ type: "bool" }],
            stateMutability: "nonpayable",
            type: "function",
            name: "isValidSig",
          },
        ],
        es = [
          {
            type: "event",
            name: "Approval",
            inputs: [
              { indexed: !0, name: "owner", type: "address" },
              { indexed: !0, name: "spender", type: "address" },
              { indexed: !1, name: "value", type: "uint256" },
            ],
          },
          {
            type: "event",
            name: "Transfer",
            inputs: [
              { indexed: !0, name: "from", type: "address" },
              { indexed: !0, name: "to", type: "address" },
              { indexed: !1, name: "value", type: "uint256" },
            ],
          },
          {
            type: "function",
            name: "allowance",
            stateMutability: "view",
            inputs: [
              { name: "owner", type: "address" },
              { name: "spender", type: "address" },
            ],
            outputs: [{ type: "uint256" }],
          },
          {
            type: "function",
            name: "approve",
            stateMutability: "nonpayable",
            inputs: [
              { name: "spender", type: "address" },
              { name: "amount", type: "uint256" },
            ],
            outputs: [{ type: "bool" }],
          },
          {
            type: "function",
            name: "balanceOf",
            stateMutability: "view",
            inputs: [{ name: "account", type: "address" }],
            outputs: [{ type: "uint256" }],
          },
          {
            type: "function",
            name: "decimals",
            stateMutability: "view",
            inputs: [],
            outputs: [{ type: "uint8" }],
          },
          {
            type: "function",
            name: "name",
            stateMutability: "view",
            inputs: [],
            outputs: [{ type: "string" }],
          },
          {
            type: "function",
            name: "symbol",
            stateMutability: "view",
            inputs: [],
            outputs: [{ type: "string" }],
          },
          {
            type: "function",
            name: "totalSupply",
            stateMutability: "view",
            inputs: [],
            outputs: [{ type: "uint256" }],
          },
          {
            type: "function",
            name: "transfer",
            stateMutability: "nonpayable",
            inputs: [
              { name: "recipient", type: "address" },
              { name: "amount", type: "uint256" },
            ],
            outputs: [{ type: "bool" }],
          },
          {
            type: "function",
            name: "transferFrom",
            stateMutability: "nonpayable",
            inputs: [
              { name: "sender", type: "address" },
              { name: "recipient", type: "address" },
              { name: "amount", type: "uint256" },
            ],
            outputs: [{ type: "bool" }],
          },
        ];
    },
    18590: function (s, x, W) {
      "use strict";
      W.d(x, {
        NO: function () {
          return X;
        },
        ST: function () {
          return et;
        },
        pG: function () {
          return ee;
        },
      });
      let X =
          "0x608060405234801561001057600080fd5b5060405161018e38038061018e83398101604081905261002f91610124565b6000808351602085016000f59050803b61004857600080fd5b6000808351602085016000855af16040513d6000823e81610067573d81fd5b3d81f35b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009257600080fd5b81516001600160401b038111156100ab576100ab61006b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100d9576100d961006b565b6040528181528382016020018510156100f157600080fd5b60005b82811015610110576020818601810151838301820152016100f4565b506000918101602001919091529392505050565b6000806040838503121561013757600080fd5b82516001600160401b0381111561014d57600080fd5b61015985828601610081565b602085015190935090506001600160401b0381111561017757600080fd5b61018385828601610081565b915050925092905056fe",
        ee =
          "0x608060405234801561001057600080fd5b506040516102c03803806102c083398101604081905261002f916101e6565b836001600160a01b03163b6000036100e457600080836001600160a01b03168360405161005c9190610270565b6000604051808303816000865af19150503d8060008114610099576040519150601f19603f3d011682016040523d82523d6000602084013e61009e565b606091505b50915091508115806100b857506001600160a01b0386163b155b156100e1578060405163101bb98d60e01b81526004016100d8919061028c565b60405180910390fd5b50505b6000808451602086016000885af16040513d6000823e81610103573d81fd5b3d81f35b80516001600160a01b038116811461011e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561015457818101518382015260200161013c565b50506000910152565b600082601f83011261016e57600080fd5b81516001600160401b0381111561018757610187610123565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101b5576101b5610123565b6040528181528382016020018510156101cd57600080fd5b6101de826020830160208701610139565b949350505050565b600080600080608085870312156101fc57600080fd5b61020585610107565b60208601519094506001600160401b0381111561022157600080fd5b61022d8782880161015d565b93505061023c60408601610107565b60608601519092506001600160401b0381111561025857600080fd5b6102648782880161015d565b91505092959194509250565b60008251610282818460208701610139565b9190910192915050565b60208152600082518060208401526102ab816040850160208701610139565b601f01601f1916919091016040019291505056fe",
        et =
          "0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572";
    },
    21746: function (s, x, W) {
      "use strict";
      W.d(x, {
        $: function () {
          return X;
        },
        Up: function () {
          return ee;
        },
        hZ: function () {
          return et;
        },
      });
      let X = {
          1: "An `assert` condition failed.",
          17: "Arithmetic operation resulted in underflow or overflow.",
          18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
          33: "Attempted to convert to an invalid type.",
          34: "Attempted to access a storage byte array that is incorrectly encoded.",
          49: "Performed `.pop()` on an empty array",
          50: "Array index is out of bounds.",
          65: "Allocated too much memory or created an array which is too large.",
          81: "Attempted to call a zero-initialized variable of internal function type.",
        },
        ee = {
          inputs: [{ name: "message", type: "string" }],
          name: "Error",
          type: "error",
        },
        et = {
          inputs: [{ name: "reason", type: "uint256" }],
          name: "Panic",
          type: "error",
        };
    },
    84192: function (s, x, W) {
      "use strict";
      W.d(x, {
        Bd: function () {
          return et;
        },
        Zn: function () {
          return ee;
        },
        ez: function () {
          return X;
        },
      });
      let X = { gwei: 9, wei: 18 },
        ee = { ether: -9, wei: 9 },
        et = { ether: -18, gwei: -9 };
    },
    57412: function (s, x, W) {
      "use strict";
      W.d(x, {
        CI: function () {
          return InvalidAbiDecodingTypeError;
        },
        FM: function () {
          return AbiEventSignatureEmptyTopicsError;
        },
        Gy: function () {
          return DecodeLogTopicsMismatch;
        },
        KY: function () {
          return BytesSizeMismatchError;
        },
        M4: function () {
          return AbiEncodingBytesSizeMismatchError;
        },
        MX: function () {
          return AbiFunctionOutputsNotFoundError;
        },
        S4: function () {
          return AbiItemAmbiguityError;
        },
        SM: function () {
          return DecodeLogDataMismatch;
        },
        cO: function () {
          return AbiConstructorParamsNotFoundError;
        },
        dh: function () {
          return InvalidAbiEncodingTypeError;
        },
        fM: function () {
          return AbiConstructorNotFoundError;
        },
        fs: function () {
          return AbiEncodingLengthMismatchError;
        },
        gr: function () {
          return AbiEncodingArrayLengthMismatchError;
        },
        hn: function () {
          return InvalidArrayError;
        },
        lC: function () {
          return AbiEventSignatureNotFoundError;
        },
        mv: function () {
          return AbiEventNotFoundError;
        },
        wM: function () {
          return InvalidDefinitionTypeError;
        },
        wb: function () {
          return AbiDecodingZeroDataError;
        },
        xB: function () {
          return AbiDecodingDataSizeTooSmallError;
        },
        xL: function () {
          return AbiFunctionNotFoundError;
        },
        yP: function () {
          return AbiErrorSignatureNotFoundError;
        },
      });
      var X = W(80522),
        ee = W(39135),
        et = W(36117);
      let AbiConstructorNotFoundError = class AbiConstructorNotFoundError extends et.G {
        constructor({ docsPath: s }) {
          super(
            "A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.",
            { docsPath: s, name: "AbiConstructorNotFoundError" }
          );
        }
      };
      let AbiConstructorParamsNotFoundError = class AbiConstructorParamsNotFoundError extends et.G {
        constructor({ docsPath: s }) {
          super(
            "Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.",
            { docsPath: s, name: "AbiConstructorParamsNotFoundError" }
          );
        }
      };
      let AbiDecodingDataSizeTooSmallError = class AbiDecodingDataSizeTooSmallError extends et.G {
        constructor({ data: s, params: x, size: W }) {
          super(`Data size of ${W} bytes is too small for given parameters.`, {
            metaMessages: [
              `Params: (${(0, X.h)(x, { includeName: !0 })})`,
              `Data:   ${s} (${W} bytes)`,
            ],
            name: "AbiDecodingDataSizeTooSmallError",
          }),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "params", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "size", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.data = s),
            (this.params = x),
            (this.size = W);
        }
      };
      let AbiDecodingZeroDataError = class AbiDecodingZeroDataError extends et.G {
        constructor() {
          super('Cannot decode zero data ("0x") with ABI parameters.', {
            name: "AbiDecodingZeroDataError",
          });
        }
      };
      let AbiEncodingArrayLengthMismatchError = class AbiEncodingArrayLengthMismatchError extends et.G {
        constructor({ expectedLength: s, givenLength: x, type: W }) {
          super(
            `ABI encoding array length mismatch for type ${W}.
Expected length: ${s}
Given length: ${x}`,
            { name: "AbiEncodingArrayLengthMismatchError" }
          );
        }
      };
      let AbiEncodingBytesSizeMismatchError = class AbiEncodingBytesSizeMismatchError extends et.G {
        constructor({ expectedSize: s, value: x }) {
          super(
            `Size of bytes "${x}" (bytes${(0, ee.d)(
              x
            )}) does not match expected size (bytes${s}).`,
            { name: "AbiEncodingBytesSizeMismatchError" }
          );
        }
      };
      let AbiEncodingLengthMismatchError = class AbiEncodingLengthMismatchError extends et.G {
        constructor({ expectedLength: s, givenLength: x }) {
          super(
            `ABI encoding params/values length mismatch.
Expected length (params): ${s}
Given length (values): ${x}`,
            { name: "AbiEncodingLengthMismatchError" }
          );
        }
      };
      let AbiErrorSignatureNotFoundError = class AbiErrorSignatureNotFoundError extends et.G {
        constructor(s, { docsPath: x }) {
          super(
            `Encoded error signature "${s}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${s}.`,
            { docsPath: x, name: "AbiErrorSignatureNotFoundError" }
          ),
            Object.defineProperty(this, "signature", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.signature = s);
        }
      };
      let AbiEventSignatureEmptyTopicsError = class AbiEventSignatureEmptyTopicsError extends et.G {
        constructor({ docsPath: s }) {
          super("Cannot extract event signature from empty topics.", {
            docsPath: s,
            name: "AbiEventSignatureEmptyTopicsError",
          });
        }
      };
      let AbiEventSignatureNotFoundError = class AbiEventSignatureNotFoundError extends et.G {
        constructor(s, { docsPath: x }) {
          super(
            `Encoded event signature "${s}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${s}.`,
            { docsPath: x, name: "AbiEventSignatureNotFoundError" }
          );
        }
      };
      let AbiEventNotFoundError = class AbiEventNotFoundError extends et.G {
        constructor(s, { docsPath: x } = {}) {
          super(
            `Event ${s ? `"${s}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`,
            { docsPath: x, name: "AbiEventNotFoundError" }
          );
        }
      };
      let AbiFunctionNotFoundError = class AbiFunctionNotFoundError extends et.G {
        constructor(s, { docsPath: x } = {}) {
          super(
            `Function ${s ? `"${s}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`,
            { docsPath: x, name: "AbiFunctionNotFoundError" }
          );
        }
      };
      let AbiFunctionOutputsNotFoundError = class AbiFunctionOutputsNotFoundError extends et.G {
        constructor(s, { docsPath: x }) {
          super(
            `Function "${s}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`,
            { docsPath: x, name: "AbiFunctionOutputsNotFoundError" }
          );
        }
      };
      let AbiItemAmbiguityError = class AbiItemAmbiguityError extends et.G {
        constructor(s, x) {
          super("Found ambiguous types in overloaded ABI items.", {
            metaMessages: [
              `\`${s.type}\` in \`${(0, X.t)(s.abiItem)}\`, and`,
              `\`${x.type}\` in \`${(0, X.t)(x.abiItem)}\``,
              "",
              "These types encode differently and cannot be distinguished at runtime.",
              "Remove one of the ambiguous items in the ABI.",
            ],
            name: "AbiItemAmbiguityError",
          });
        }
      };
      let BytesSizeMismatchError = class BytesSizeMismatchError extends et.G {
        constructor({ expectedSize: s, givenSize: x }) {
          super(`Expected bytes${s}, got bytes${x}.`, {
            name: "BytesSizeMismatchError",
          });
        }
      };
      let DecodeLogDataMismatch = class DecodeLogDataMismatch extends et.G {
        constructor({ abiItem: s, data: x, params: W, size: ee }) {
          super(
            `Data size of ${ee} bytes is too small for non-indexed event parameters.`,
            {
              metaMessages: [
                `Params: (${(0, X.h)(W, { includeName: !0 })})`,
                `Data:   ${x} (${ee} bytes)`,
              ],
              name: "DecodeLogDataMismatch",
            }
          ),
            Object.defineProperty(this, "abiItem", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "params", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "size", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.abiItem = s),
            (this.data = x),
            (this.params = W),
            (this.size = ee);
        }
      };
      let DecodeLogTopicsMismatch = class DecodeLogTopicsMismatch extends et.G {
        constructor({ abiItem: s, param: x }) {
          super(
            `Expected a topic for indexed event parameter${
              x.name ? ` "${x.name}"` : ""
            } on event "${(0, X.t)(s, { includeName: !0 })}".`,
            { name: "DecodeLogTopicsMismatch" }
          ),
            Object.defineProperty(this, "abiItem", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.abiItem = s);
        }
      };
      let InvalidAbiEncodingTypeError = class InvalidAbiEncodingTypeError extends et.G {
        constructor(s, { docsPath: x }) {
          super(
            `Type "${s}" is not a valid encoding type.
Please provide a valid ABI type.`,
            { docsPath: x, name: "InvalidAbiEncodingType" }
          );
        }
      };
      let InvalidAbiDecodingTypeError = class InvalidAbiDecodingTypeError extends et.G {
        constructor(s, { docsPath: x }) {
          super(
            `Type "${s}" is not a valid decoding type.
Please provide a valid ABI type.`,
            { docsPath: x, name: "InvalidAbiDecodingType" }
          );
        }
      };
      let InvalidArrayError = class InvalidArrayError extends et.G {
        constructor(s) {
          super(`Value "${s}" is not a valid array.`, {
            name: "InvalidArrayError",
          });
        }
      };
      let InvalidDefinitionTypeError = class InvalidDefinitionTypeError extends et.G {
        constructor(s) {
          super(
            `"${s}" is not a valid definition type.
Valid types: "function", "event", "error"`,
            { name: "InvalidDefinitionTypeError" }
          );
        }
      };
    },
    8998: function (s, x, W) {
      "use strict";
      W.d(x, {
        Y: function () {
          return AccountTypeNotSupportedError;
        },
        o: function () {
          return AccountNotFoundError;
        },
      });
      var X = W(36117);
      let AccountNotFoundError = class AccountNotFoundError extends X.G {
        constructor({ docsPath: s } = {}) {
          super(
            "Could not find an Account to execute with this Action.\nPlease provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.",
            { docsPath: s, docsSlug: "account", name: "AccountNotFoundError" }
          );
        }
      };
      let AccountTypeNotSupportedError = class AccountTypeNotSupportedError extends X.G {
        constructor({ docsPath: s, metaMessages: x, type: W }) {
          super(`Account type "${W}" is not supported.`, {
            docsPath: s,
            metaMessages: x,
            name: "AccountTypeNotSupportedError",
          });
        }
      };
    },
    26087: function (s, x, W) {
      "use strict";
      W.d(x, {
        b: function () {
          return InvalidAddressError;
        },
      });
      var X = W(36117);
      let InvalidAddressError = class InvalidAddressError extends X.G {
        constructor({ address: s }) {
          super(`Address "${s}" is invalid.`, {
            metaMessages: [
              "- Address must be a hex value of 20 bytes (40 hex characters).",
              "- Address must match its checksum counterpart.",
            ],
            name: "InvalidAddressError",
          });
        }
      };
    },
    36117: function (s, x, W) {
      "use strict";
      W.d(x, {
        G: function () {
          return BaseError;
        },
      });
      let X = "2.22.17",
        ee = {
          getDocsUrl: ({ docsBaseUrl: s, docsPath: x = "", docsSlug: W }) =>
            x ? `${s ?? "https://viem.sh"}${x}${W ? `#${W}` : ""}` : void 0,
          version: `viem@${X}`,
        };
      let BaseError = class BaseError extends Error {
        constructor(s, x = {}) {
          let W =
              x.cause instanceof BaseError
                ? x.cause.details
                : x.cause?.message
                ? x.cause.message
                : x.details,
            et =
              (x.cause instanceof BaseError && x.cause.docsPath) || x.docsPath,
            er = ee.getDocsUrl?.({ ...x, docsPath: et }),
            ei = [
              s || "An error occurred.",
              "",
              ...(x.metaMessages ? [...x.metaMessages, ""] : []),
              ...(er ? [`Docs: ${er}`] : []),
              ...(W ? [`Details: ${W}`] : []),
              ...(ee.version ? [`Version: ${ee.version}`] : []),
            ].join("\n");
          super(ei, x.cause ? { cause: x.cause } : void 0),
            Object.defineProperty(this, "details", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "docsPath", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "metaMessages", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "shortMessage", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "version", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "BaseError",
            }),
            (this.details = W),
            (this.docsPath = et),
            (this.metaMessages = x.metaMessages),
            (this.name = x.name ?? this.name),
            (this.shortMessage = s),
            (this.version = X);
        }
        walk(s) {
          return (function walk(s, x) {
            return x?.(s)
              ? s
              : s && "object" == typeof s && "cause" in s && void 0 !== s.cause
              ? walk(s.cause, x)
              : x
              ? null
              : s;
          })(this, s);
        }
      };
    },
    79814: function (s, x, W) {
      "use strict";
      W.d(x, {
        f: function () {
          return BlockNotFoundError;
        },
      });
      var X = W(36117);
      let BlockNotFoundError = class BlockNotFoundError extends X.G {
        constructor({ blockHash: s, blockNumber: x }) {
          let W = "Block";
          s && (W = `Block at hash "${s}"`),
            x && (W = `Block at number "${x}"`),
            super(`${W} could not be found.`, { name: "BlockNotFoundError" });
        }
      };
    },
    80377: function (s, x, W) {
      "use strict";
      W.d(x, {
        Bk: function () {
          return ChainNotFoundError;
        },
        Yl: function () {
          return ChainMismatchError;
        },
        mm: function () {
          return ChainDoesNotSupportContract;
        },
        pZ: function () {
          return ClientChainNotConfiguredError;
        },
      });
      var X = W(36117);
      let ChainDoesNotSupportContract = class ChainDoesNotSupportContract extends X.G {
        constructor({ blockNumber: s, chain: x, contract: W }) {
          super(`Chain "${x.name}" does not support contract "${W.name}".`, {
            metaMessages: [
              "This could be due to any of the following:",
              ...(s && W.blockCreated && W.blockCreated > s
                ? [
                    `- The contract "${W.name}" was not deployed until block ${W.blockCreated} (current block ${s}).`,
                  ]
                : [
                    `- The chain does not have the contract "${W.name}" configured.`,
                  ]),
            ],
            name: "ChainDoesNotSupportContract",
          });
        }
      };
      let ChainMismatchError = class ChainMismatchError extends X.G {
        constructor({ chain: s, currentChainId: x }) {
          super(
            `The current chain of the wallet (id: ${x}) does not match the target chain for the transaction (id: ${s.id} – ${s.name}).`,
            {
              metaMessages: [
                `Current Chain ID:  ${x}`,
                `Expected Chain ID: ${s.id} – ${s.name}`,
              ],
              name: "ChainMismatchError",
            }
          );
        }
      };
      let ChainNotFoundError = class ChainNotFoundError extends X.G {
        constructor() {
          super(
            "No chain was provided to the request.\nPlease provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.",
            { name: "ChainNotFoundError" }
          );
        }
      };
      let ClientChainNotConfiguredError = class ClientChainNotConfiguredError extends X.G {
        constructor() {
          super("No chain was provided to the Client.", {
            name: "ClientChainNotConfiguredError",
          });
        }
      };
    },
    97405: function (s, x, W) {
      "use strict";
      W.d(x, {
        cg: function () {
          return CallExecutionError;
        },
        uq: function () {
          return ContractFunctionExecutionError;
        },
        Lu: function () {
          return ContractFunctionRevertedError;
        },
        Dk: function () {
          return ContractFunctionZeroDataError;
        },
        Mo: function () {
          return CounterfactualDeploymentFailedError;
        },
        VQ: function () {
          return RawContractError;
        },
      });
      var X = W(14503),
        ee = W(21746),
        et = W(86899),
        er = W(80522),
        ei = W(96070);
      function formatAbiItemWithArgs({
        abiItem: s,
        args: x,
        includeFunctionName: W = !0,
        includeName: X = !1,
      }) {
        if ("name" in s && "inputs" in s && s.inputs)
          return `${W ? s.name : ""}(${s.inputs
            .map(
              (s, W) =>
                `${X && s.name ? `${s.name}: ` : ""}${
                  "object" == typeof x[W] ? (0, ei.P)(x[W]) : x[W]
                }`
            )
            .join(", ")})`;
      }
      var eo = W(40840),
        ea = W(39625),
        es = W(67795),
        el = W(57412),
        ec = W(36117),
        eu = W(20443),
        ed = W(33639),
        eh = W(29008);
      let CallExecutionError = class CallExecutionError extends ec.G {
        constructor(
          s,
          {
            account: x,
            docsPath: W,
            chain: ee,
            data: et,
            gas: er,
            gasPrice: ei,
            maxFeePerGas: eo,
            maxPriorityFeePerGas: el,
            nonce: ec,
            to: eh,
            value: ep,
            stateOverride: ef,
          }
        ) {
          let eg = x ? (0, X.T)(x) : void 0,
            em = (0, ed.xr)({
              from: eg?.address,
              to: eh,
              value:
                void 0 !== ep &&
                `${(0, ea.d)(ep)} ${ee?.nativeCurrency?.symbol || "ETH"}`,
              data: et,
              gas: er,
              gasPrice: void 0 !== ei && `${(0, es.o)(ei)} gwei`,
              maxFeePerGas: void 0 !== eo && `${(0, es.o)(eo)} gwei`,
              maxPriorityFeePerGas: void 0 !== el && `${(0, es.o)(el)} gwei`,
              nonce: ec,
            });
          ef &&
            (em += `
${(0, eu.Bj)(ef)}`),
            super(s.shortMessage, {
              cause: s,
              docsPath: W,
              metaMessages: [
                ...(s.metaMessages ? [...s.metaMessages, " "] : []),
                "Raw Call Arguments:",
                em,
              ].filter(Boolean),
              name: "CallExecutionError",
            }),
            Object.defineProperty(this, "cause", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.cause = s);
        }
      };
      let ContractFunctionExecutionError = class ContractFunctionExecutionError extends ec.G {
        constructor(
          s,
          {
            abi: x,
            args: W,
            contractAddress: X,
            docsPath: ee,
            functionName: et,
            sender: ei,
          }
        ) {
          let ea = (0, eo.mE)({ abi: x, args: W, name: et }),
            es = ea
              ? formatAbiItemWithArgs({
                  abiItem: ea,
                  args: W,
                  includeFunctionName: !1,
                  includeName: !1,
                })
              : void 0,
            el = ea ? (0, er.t)(ea, { includeName: !0 }) : void 0,
            ec = (0, ed.xr)({
              address: X && (0, eh.C)(X),
              function: el,
              args:
                es &&
                "()" !== es &&
                `${[...Array(et?.length ?? 0).keys()]
                  .map(() => " ")
                  .join("")}${es}`,
              sender: ei,
            });
          super(
            s.shortMessage ||
              `An unknown error occurred while executing the contract function "${et}".`,
            {
              cause: s,
              docsPath: ee,
              metaMessages: [
                ...(s.metaMessages ? [...s.metaMessages, " "] : []),
                ec && "Contract Call:",
                ec,
              ].filter(Boolean),
              name: "ContractFunctionExecutionError",
            }
          ),
            Object.defineProperty(this, "abi", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "args", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "cause", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "contractAddress", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "formattedArgs", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "functionName", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "sender", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.abi = x),
            (this.args = W),
            (this.cause = s),
            (this.contractAddress = X),
            (this.functionName = et),
            (this.sender = ei);
        }
      };
      let ContractFunctionRevertedError = class ContractFunctionRevertedError extends ec.G {
        constructor({ abi: s, data: x, functionName: W, message: X }) {
          let ei, eo, ea, es, ec;
          if (x && "0x" !== x)
            try {
              ec = (0, et.p)({ abi: s, data: x });
              let { abiItem: W, errorName: X, args: ei } = ec;
              if ("Error" === X) ea = ei[0];
              else if ("Panic" === X) {
                let [s] = ei;
                ea = ee.$[s];
              } else {
                let s = W ? (0, er.t)(W, { includeName: !0 }) : void 0,
                  x =
                    W && ei
                      ? formatAbiItemWithArgs({
                          abiItem: W,
                          args: ei,
                          includeFunctionName: !1,
                          includeName: !1,
                        })
                      : void 0;
                eo = [
                  s ? `Error: ${s}` : "",
                  x && "()" !== x
                    ? `       ${[...Array(X?.length ?? 0).keys()]
                        .map(() => " ")
                        .join("")}${x}`
                    : "",
                ];
              }
            } catch (s) {
              ei = s;
            }
          else X && (ea = X);
          ei instanceof el.yP &&
            ((es = ei.signature),
            (eo = [
              `Unable to decode signature "${es}" as it was not found on the provided ABI.`,
              "Make sure you are using the correct ABI and that the error exists on it.",
              `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${es}.`,
            ])),
            super(
              (ea && "execution reverted" !== ea) || es
                ? [
                    `The contract function "${W}" reverted with the following ${
                      es ? "signature" : "reason"
                    }:`,
                    ea || es,
                  ].join("\n")
                : `The contract function "${W}" reverted.`,
              {
                cause: ei,
                metaMessages: eo,
                name: "ContractFunctionRevertedError",
              }
            ),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "raw", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "reason", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "signature", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.data = ec),
            (this.raw = x),
            (this.reason = ea),
            (this.signature = es);
        }
      };
      let ContractFunctionZeroDataError = class ContractFunctionZeroDataError extends ec.G {
        constructor({ functionName: s }) {
          super(`The contract function "${s}" returned no data ("0x").`, {
            metaMessages: [
              "This could be due to any of the following:",
              `  - The contract does not have the function "${s}",`,
              "  - The parameters passed to the contract function may be invalid, or",
              "  - The address is not a contract.",
            ],
            name: "ContractFunctionZeroDataError",
          });
        }
      };
      let CounterfactualDeploymentFailedError = class CounterfactualDeploymentFailedError extends ec.G {
        constructor({ factory: s }) {
          super(
            `Deployment for counterfactual contract call failed${
              s ? ` for factory "${s}".` : ""
            }`,
            {
              metaMessages: [
                "Please ensure:",
                "- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).",
                "- The `factoryData` is a valid encoded function call for contract deployment function on the factory.",
              ],
              name: "CounterfactualDeploymentFailedError",
            }
          );
        }
      };
      let RawContractError = class RawContractError extends ec.G {
        constructor({ data: s, message: x }) {
          super(x || "", { name: "RawContractError" }),
            Object.defineProperty(this, "code", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: 3,
            }),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.data = s);
        }
      };
    },
    66238: function (s, x, W) {
      "use strict";
      W.d(x, {
        KD: function () {
          return RecursiveReadLimitExceededError;
        },
        T_: function () {
          return NegativeOffsetError;
        },
        lQ: function () {
          return PositionOutOfBoundsError;
        },
      });
      var X = W(36117);
      let NegativeOffsetError = class NegativeOffsetError extends X.G {
        constructor({ offset: s }) {
          super(`Offset \`${s}\` cannot be negative.`, {
            name: "NegativeOffsetError",
          });
        }
      };
      let PositionOutOfBoundsError = class PositionOutOfBoundsError extends X.G {
        constructor({ length: s, position: x }) {
          super(
            `Position \`${x}\` is out of bounds (\`0 < position < ${s}\`).`,
            { name: "PositionOutOfBoundsError" }
          );
        }
      };
      let RecursiveReadLimitExceededError = class RecursiveReadLimitExceededError extends X.G {
        constructor({ count: s, limit: x }) {
          super(
            `Recursive read limit of \`${x}\` exceeded (recursive read count: \`${s}\`).`,
            { name: "RecursiveReadLimitExceededError" }
          );
        }
      };
    },
    69760: function (s, x, W) {
      "use strict";
      W.d(x, {
        $s: function () {
          return SizeExceedsPaddingSizeError;
        },
        W_: function () {
          return InvalidBytesLengthError;
        },
        mV: function () {
          return SliceOffsetOutOfBoundsError;
        },
      });
      var X = W(36117);
      let SliceOffsetOutOfBoundsError = class SliceOffsetOutOfBoundsError extends X.G {
        constructor({ offset: s, position: x, size: W }) {
          super(
            `Slice ${
              "start" === x ? "starting" : "ending"
            } at offset "${s}" is out-of-bounds (size: ${W}).`,
            { name: "SliceOffsetOutOfBoundsError" }
          );
        }
      };
      let SizeExceedsPaddingSizeError = class SizeExceedsPaddingSizeError extends X.G {
        constructor({ size: s, targetSize: x, type: W }) {
          super(
            `${W.charAt(0).toUpperCase()}${W.slice(
              1
            ).toLowerCase()} size (${s}) exceeds padding size (${x}).`,
            { name: "SizeExceedsPaddingSizeError" }
          );
        }
      };
      let InvalidBytesLengthError = class InvalidBytesLengthError extends X.G {
        constructor({ size: s, targetSize: x, type: W }) {
          super(
            `${W.charAt(0).toUpperCase()}${W.slice(
              1
            ).toLowerCase()} is expected to be ${x} ${W} long, but is ${s} ${W} long.`,
            { name: "InvalidBytesLengthError" }
          );
        }
      };
    },
    87788: function (s, x, W) {
      "use strict";
      W.d(x, {
        Cd: function () {
          return InvalidHexBooleanError;
        },
        J5: function () {
          return IntegerOutOfRangeError;
        },
        M6: function () {
          return SizeOverflowError;
        },
        yr: function () {
          return InvalidBytesBooleanError;
        },
      });
      var X = W(36117);
      let IntegerOutOfRangeError = class IntegerOutOfRangeError extends X.G {
        constructor({ max: s, min: x, signed: W, size: X, value: ee }) {
          super(
            `Number "${ee}" is not in safe ${
              X ? `${8 * X}-bit ${W ? "signed" : "unsigned"} ` : ""
            }integer range ${s ? `(${x} to ${s})` : `(above ${x})`}`,
            { name: "IntegerOutOfRangeError" }
          );
        }
      };
      let InvalidBytesBooleanError = class InvalidBytesBooleanError extends X.G {
        constructor(s) {
          super(
            `Bytes value "${s}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,
            { name: "InvalidBytesBooleanError" }
          );
        }
      };
      let InvalidHexBooleanError = class InvalidHexBooleanError extends X.G {
        constructor(s) {
          super(
            `Hex value "${s}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`,
            { name: "InvalidHexBooleanError" }
          );
        }
      };
      let SizeOverflowError = class SizeOverflowError extends X.G {
        constructor({ givenSize: s, maxSize: x }) {
          super(`Size cannot exceed ${x} bytes. Given size: ${s} bytes.`, {
            name: "SizeOverflowError",
          });
        }
      };
    },
    15371: function (s, x, W) {
      "use strict";
      W.d(x, {
        Fz: function () {
          return BaseFeeScalarError;
        },
        e5: function () {
          return Eip1559FeesNotSupportedError;
        },
        ld: function () {
          return MaxFeePerGasTooLowError;
        },
      });
      var X = W(67795),
        ee = W(36117);
      let BaseFeeScalarError = class BaseFeeScalarError extends ee.G {
        constructor() {
          super("`baseFeeMultiplier` must be greater than 1.", {
            name: "BaseFeeScalarError",
          });
        }
      };
      let Eip1559FeesNotSupportedError = class Eip1559FeesNotSupportedError extends ee.G {
        constructor() {
          super("Chain does not support EIP-1559 fees.", {
            name: "Eip1559FeesNotSupportedError",
          });
        }
      };
      let MaxFeePerGasTooLowError = class MaxFeePerGasTooLowError extends ee.G {
        constructor({ maxPriorityFeePerGas: s }) {
          super(
            `\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,
            X.o)(s)} gwei).`,
            { name: "MaxFeePerGasTooLowError" }
          );
        }
      };
    },
    26445: function (s, x, W) {
      "use strict";
      W.d(x, {
        C_: function () {
          return InsufficientFundsError;
        },
        G$: function () {
          return FeeCapTooLowError;
        },
        Hh: function () {
          return FeeCapTooHighError;
        },
        M_: function () {
          return ExecutionRevertedError;
        },
        WF: function () {
          return IntrinsicGasTooHighError;
        },
        ZI: function () {
          return NonceTooHighError;
        },
        cj: function () {
          return UnknownNodeError;
        },
        cs: function () {
          return TipAboveFeeCapError;
        },
        dR: function () {
          return IntrinsicGasTooLowError;
        },
        pZ: function () {
          return TransactionTypeNotSupportedError;
        },
        se: function () {
          return NonceMaxValueError;
        },
        vU: function () {
          return NonceTooLowError;
        },
      });
      var X = W(67795),
        ee = W(36117);
      let ExecutionRevertedError = class ExecutionRevertedError extends ee.G {
        constructor({ cause: s, message: x } = {}) {
          let W = x
            ?.replace("execution reverted: ", "")
            ?.replace("execution reverted", "");
          super(
            `Execution reverted ${
              W ? `with reason: ${W}` : "for an unknown reason"
            }.`,
            { cause: s, name: "ExecutionRevertedError" }
          );
        }
      };
      Object.defineProperty(ExecutionRevertedError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 3,
      }),
        Object.defineProperty(ExecutionRevertedError, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /execution reverted/,
        });
      let FeeCapTooHighError = class FeeCapTooHighError extends ee.G {
        constructor({ cause: s, maxFeePerGas: x } = {}) {
          super(
            `The fee cap (\`maxFeePerGas\`${
              x ? ` = ${(0, X.o)(x)} gwei` : ""
            }) cannot be higher than the maximum allowed value (2^256-1).`,
            { cause: s, name: "FeeCapTooHighError" }
          );
        }
      };
      Object.defineProperty(FeeCapTooHighError, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value:
          /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/,
      });
      let FeeCapTooLowError = class FeeCapTooLowError extends ee.G {
        constructor({ cause: s, maxFeePerGas: x } = {}) {
          super(
            `The fee cap (\`maxFeePerGas\`${
              x ? ` = ${(0, X.o)(x)}` : ""
            } gwei) cannot be lower than the block base fee.`,
            { cause: s, name: "FeeCapTooLowError" }
          );
        }
      };
      Object.defineProperty(FeeCapTooLowError, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value:
          /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/,
      });
      let NonceTooHighError = class NonceTooHighError extends ee.G {
        constructor({ cause: s, nonce: x } = {}) {
          super(
            `Nonce provided for the transaction ${
              x ? `(${x}) ` : ""
            }is higher than the next one expected.`,
            { cause: s, name: "NonceTooHighError" }
          );
        }
      };
      Object.defineProperty(NonceTooHighError, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /nonce too high/,
      });
      let NonceTooLowError = class NonceTooLowError extends ee.G {
        constructor({ cause: s, nonce: x } = {}) {
          super(
            `Nonce provided for the transaction ${
              x ? `(${x}) ` : ""
            }is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`,
            { cause: s, name: "NonceTooLowError" }
          );
        }
      };
      Object.defineProperty(NonceTooLowError, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /nonce too low|transaction already imported|already known/,
      });
      let NonceMaxValueError = class NonceMaxValueError extends ee.G {
        constructor({ cause: s, nonce: x } = {}) {
          super(
            `Nonce provided for the transaction ${
              x ? `(${x}) ` : ""
            }exceeds the maximum allowed nonce.`,
            { cause: s, name: "NonceMaxValueError" }
          );
        }
      };
      Object.defineProperty(NonceMaxValueError, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /nonce has max value/,
      });
      let InsufficientFundsError = class InsufficientFundsError extends ee.G {
        constructor({ cause: s } = {}) {
          super(
            "The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.",
            {
              cause: s,
              metaMessages: [
                "This error could arise when the account does not have enough funds to:",
                " - pay for the total gas fee,",
                " - pay for the value to send.",
                " ",
                "The cost of the transaction is calculated as `gas * gas fee + value`, where:",
                " - `gas` is the amount of gas needed for transaction to execute,",
                " - `gas fee` is the gas fee,",
                " - `value` is the amount of ether to send to the recipient.",
              ],
              name: "InsufficientFundsError",
            }
          );
        }
      };
      Object.defineProperty(InsufficientFundsError, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /insufficient funds|exceeds transaction sender account balance/,
      });
      let IntrinsicGasTooHighError = class IntrinsicGasTooHighError extends ee.G {
        constructor({ cause: s, gas: x } = {}) {
          super(
            `The amount of gas ${
              x ? `(${x}) ` : ""
            }provided for the transaction exceeds the limit allowed for the block.`,
            { cause: s, name: "IntrinsicGasTooHighError" }
          );
        }
      };
      Object.defineProperty(IntrinsicGasTooHighError, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /intrinsic gas too high|gas limit reached/,
      });
      let IntrinsicGasTooLowError = class IntrinsicGasTooLowError extends ee.G {
        constructor({ cause: s, gas: x } = {}) {
          super(
            `The amount of gas ${
              x ? `(${x}) ` : ""
            }provided for the transaction is too low.`,
            { cause: s, name: "IntrinsicGasTooLowError" }
          );
        }
      };
      Object.defineProperty(IntrinsicGasTooLowError, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /intrinsic gas too low/,
      });
      let TransactionTypeNotSupportedError = class TransactionTypeNotSupportedError extends ee.G {
        constructor({ cause: s }) {
          super("The transaction type is not supported for this chain.", {
            cause: s,
            name: "TransactionTypeNotSupportedError",
          });
        }
      };
      Object.defineProperty(TransactionTypeNotSupportedError, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: /transaction type not valid/,
      });
      let TipAboveFeeCapError = class TipAboveFeeCapError extends ee.G {
        constructor({
          cause: s,
          maxPriorityFeePerGas: x,
          maxFeePerGas: W,
        } = {}) {
          super(
            `The provided tip (\`maxPriorityFeePerGas\`${
              x ? ` = ${(0, X.o)(x)} gwei` : ""
            }) cannot be higher than the fee cap (\`maxFeePerGas\`${
              W ? ` = ${(0, X.o)(W)} gwei` : ""
            }).`,
            { cause: s, name: "TipAboveFeeCapError" }
          );
        }
      };
      Object.defineProperty(TipAboveFeeCapError, "nodeMessage", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value:
          /max priority fee per gas higher than max fee per gas|tip higher than fee cap/,
      });
      let UnknownNodeError = class UnknownNodeError extends ee.G {
        constructor({ cause: s }) {
          super(`An error occurred while executing: ${s?.shortMessage}`, {
            cause: s,
            name: "UnknownNodeError",
          });
        }
      };
    },
    78863: function (s, x, W) {
      "use strict";
      W.d(x, {
        Gg: function () {
          return HttpRequestError;
        },
        W5: function () {
          return TimeoutError;
        },
        bs: function () {
          return RpcRequestError;
        },
      });
      var X = W(96070),
        ee = W(36117),
        et = W(29008);
      let HttpRequestError = class HttpRequestError extends ee.G {
        constructor({
          body: s,
          cause: x,
          details: W,
          headers: ee,
          status: er,
          url: ei,
        }) {
          super("HTTP request failed.", {
            cause: x,
            details: W,
            metaMessages: [
              er && `Status: ${er}`,
              `URL: ${(0, et.G)(ei)}`,
              s && `Request body: ${(0, X.P)(s)}`,
            ].filter(Boolean),
            name: "HttpRequestError",
          }),
            Object.defineProperty(this, "body", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "headers", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "status", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "url", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.body = s),
            (this.headers = ee),
            (this.status = er),
            (this.url = ei);
        }
      };
      let RpcRequestError = class RpcRequestError extends ee.G {
        constructor({ body: s, error: x, url: W }) {
          super("RPC Request failed.", {
            cause: x,
            details: x.message,
            metaMessages: [
              `URL: ${(0, et.G)(W)}`,
              `Request body: ${(0, X.P)(s)}`,
            ],
            name: "RpcRequestError",
          }),
            Object.defineProperty(this, "code", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.code = x.code),
            (this.data = x.data);
        }
      };
      let TimeoutError = class TimeoutError extends ee.G {
        constructor({ body: s, url: x }) {
          super("The request took too long to respond.", {
            details: "The request timed out.",
            metaMessages: [
              `URL: ${(0, et.G)(x)}`,
              `Request body: ${(0, X.P)(s)}`,
            ],
            name: "TimeoutError",
          });
        }
      };
    },
    39028: function (s, x, W) {
      "use strict";
      W.d(x, {
        B: function () {
          return InvalidRequestRpcError;
        },
        GD: function () {
          return JsonRpcVersionUnsupportedError;
        },
        I0: function () {
          return ChainDisconnectedError;
        },
        KB: function () {
          return TransactionRejectedRpcError;
        },
        LX: function () {
          return MethodNotFoundRpcError;
        },
        Og: function () {
          return ResourceNotFoundRpcError;
        },
        PE: function () {
          return UnauthorizedProviderError;
        },
        Pv: function () {
          return LimitExceededRpcError;
        },
        Ts: function () {
          return UnsupportedProviderMethodError;
        },
        XS: function () {
          return InternalRpcError;
        },
        ab: function () {
          return UserRejectedRequestError;
        },
        gS: function () {
          return MethodNotSupportedRpcError;
        },
        ir: function () {
          return UnknownRpcError;
        },
        nY: function () {
          return InvalidParamsRpcError;
        },
        pT: function () {
          return ResourceUnavailableRpcError;
        },
        s7: function () {
          return ParseRpcError;
        },
        u5: function () {
          return ProviderDisconnectedError;
        },
        x3: function () {
          return SwitchChainError;
        },
        yR: function () {
          return InvalidInputRpcError;
        },
      });
      var X = W(36117),
        ee = W(78863);
      let RpcError = class RpcError extends X.G {
        constructor(
          s,
          { code: x, docsPath: W, metaMessages: X, name: et, shortMessage: er }
        ) {
          super(er, {
            cause: s,
            docsPath: W,
            metaMessages: X || s?.metaMessages,
            name: et || "RpcError",
          }),
            Object.defineProperty(this, "code", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.name = et || s.name),
            (this.code = s instanceof ee.bs ? s.code : x ?? -1);
        }
      };
      let ProviderRpcError = class ProviderRpcError extends RpcError {
        constructor(s, x) {
          super(s, x),
            Object.defineProperty(this, "data", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.data = x.data);
        }
      };
      let ParseRpcError = class ParseRpcError extends RpcError {
        constructor(s) {
          super(s, {
            code: ParseRpcError.code,
            name: "ParseRpcError",
            shortMessage:
              "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",
          });
        }
      };
      Object.defineProperty(ParseRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32700,
      });
      let InvalidRequestRpcError = class InvalidRequestRpcError extends RpcError {
        constructor(s) {
          super(s, {
            code: InvalidRequestRpcError.code,
            name: "InvalidRequestRpcError",
            shortMessage: "JSON is not a valid request object.",
          });
        }
      };
      Object.defineProperty(InvalidRequestRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32600,
      });
      let MethodNotFoundRpcError = class MethodNotFoundRpcError extends RpcError {
        constructor(s, { method: x } = {}) {
          super(s, {
            code: MethodNotFoundRpcError.code,
            name: "MethodNotFoundRpcError",
            shortMessage: `The method${
              x ? ` "${x}"` : ""
            } does not exist / is not available.`,
          });
        }
      };
      Object.defineProperty(MethodNotFoundRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32601,
      });
      let InvalidParamsRpcError = class InvalidParamsRpcError extends RpcError {
        constructor(s) {
          super(s, {
            code: InvalidParamsRpcError.code,
            name: "InvalidParamsRpcError",
            shortMessage:
              "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters.",
          });
        }
      };
      Object.defineProperty(InvalidParamsRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32602,
      });
      let InternalRpcError = class InternalRpcError extends RpcError {
        constructor(s) {
          super(s, {
            code: InternalRpcError.code,
            name: "InternalRpcError",
            shortMessage: "An internal error was received.",
          });
        }
      };
      Object.defineProperty(InternalRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32603,
      });
      let InvalidInputRpcError = class InvalidInputRpcError extends RpcError {
        constructor(s) {
          super(s, {
            code: InvalidInputRpcError.code,
            name: "InvalidInputRpcError",
            shortMessage:
              "Missing or invalid parameters.\nDouble check you have provided the correct parameters.",
          });
        }
      };
      Object.defineProperty(InvalidInputRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32e3,
      });
      let ResourceNotFoundRpcError = class ResourceNotFoundRpcError extends RpcError {
        constructor(s) {
          super(s, {
            code: ResourceNotFoundRpcError.code,
            name: "ResourceNotFoundRpcError",
            shortMessage: "Requested resource not found.",
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "ResourceNotFoundRpcError",
            });
        }
      };
      Object.defineProperty(ResourceNotFoundRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32001,
      });
      let ResourceUnavailableRpcError = class ResourceUnavailableRpcError extends RpcError {
        constructor(s) {
          super(s, {
            code: ResourceUnavailableRpcError.code,
            name: "ResourceUnavailableRpcError",
            shortMessage: "Requested resource not available.",
          });
        }
      };
      Object.defineProperty(ResourceUnavailableRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32002,
      });
      let TransactionRejectedRpcError = class TransactionRejectedRpcError extends RpcError {
        constructor(s) {
          super(s, {
            code: TransactionRejectedRpcError.code,
            name: "TransactionRejectedRpcError",
            shortMessage: "Transaction creation failed.",
          });
        }
      };
      Object.defineProperty(TransactionRejectedRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32003,
      });
      let MethodNotSupportedRpcError = class MethodNotSupportedRpcError extends RpcError {
        constructor(s, { method: x } = {}) {
          super(s, {
            code: MethodNotSupportedRpcError.code,
            name: "MethodNotSupportedRpcError",
            shortMessage: `Method${x ? ` "${x}"` : ""} is not supported.`,
          });
        }
      };
      Object.defineProperty(MethodNotSupportedRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32004,
      });
      let LimitExceededRpcError = class LimitExceededRpcError extends RpcError {
        constructor(s) {
          super(s, {
            code: LimitExceededRpcError.code,
            name: "LimitExceededRpcError",
            shortMessage: "Request exceeds defined limit.",
          });
        }
      };
      Object.defineProperty(LimitExceededRpcError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32005,
      });
      let JsonRpcVersionUnsupportedError = class JsonRpcVersionUnsupportedError extends RpcError {
        constructor(s) {
          super(s, {
            code: JsonRpcVersionUnsupportedError.code,
            name: "JsonRpcVersionUnsupportedError",
            shortMessage: "Version of JSON-RPC protocol is not supported.",
          });
        }
      };
      Object.defineProperty(JsonRpcVersionUnsupportedError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: -32006,
      });
      let UserRejectedRequestError = class UserRejectedRequestError extends ProviderRpcError {
        constructor(s) {
          super(s, {
            code: UserRejectedRequestError.code,
            name: "UserRejectedRequestError",
            shortMessage: "User rejected the request.",
          });
        }
      };
      Object.defineProperty(UserRejectedRequestError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4001,
      });
      let UnauthorizedProviderError = class UnauthorizedProviderError extends ProviderRpcError {
        constructor(s) {
          super(s, {
            code: UnauthorizedProviderError.code,
            name: "UnauthorizedProviderError",
            shortMessage:
              "The requested method and/or account has not been authorized by the user.",
          });
        }
      };
      Object.defineProperty(UnauthorizedProviderError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4100,
      });
      let UnsupportedProviderMethodError = class UnsupportedProviderMethodError extends ProviderRpcError {
        constructor(s, { method: x } = {}) {
          super(s, {
            code: UnsupportedProviderMethodError.code,
            name: "UnsupportedProviderMethodError",
            shortMessage: `The Provider does not support the requested method${
              x ? ` " ${x}"` : ""
            }.`,
          });
        }
      };
      Object.defineProperty(UnsupportedProviderMethodError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4200,
      });
      let ProviderDisconnectedError = class ProviderDisconnectedError extends ProviderRpcError {
        constructor(s) {
          super(s, {
            code: ProviderDisconnectedError.code,
            name: "ProviderDisconnectedError",
            shortMessage: "The Provider is disconnected from all chains.",
          });
        }
      };
      Object.defineProperty(ProviderDisconnectedError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4900,
      });
      let ChainDisconnectedError = class ChainDisconnectedError extends ProviderRpcError {
        constructor(s) {
          super(s, {
            code: ChainDisconnectedError.code,
            name: "ChainDisconnectedError",
            shortMessage:
              "The Provider is not connected to the requested chain.",
          });
        }
      };
      Object.defineProperty(ChainDisconnectedError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4901,
      });
      let SwitchChainError = class SwitchChainError extends ProviderRpcError {
        constructor(s) {
          super(s, {
            code: SwitchChainError.code,
            name: "SwitchChainError",
            shortMessage: "An error occurred when attempting to switch chain.",
          });
        }
      };
      Object.defineProperty(SwitchChainError, "code", {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: 4902,
      });
      let UnknownRpcError = class UnknownRpcError extends RpcError {
        constructor(s) {
          super(s, {
            name: "UnknownRpcError",
            shortMessage: "An unknown RPC error occurred.",
          });
        }
      };
    },
    20443: function (s, x, W) {
      "use strict";
      W.d(x, {
        Bj: function () {
          return prettyStateOverride;
        },
        Nc: function () {
          return AccountStateConflictError;
        },
        Z8: function () {
          return StateAssignmentConflictError;
        },
      });
      var X = W(36117);
      let AccountStateConflictError = class AccountStateConflictError extends X.G {
        constructor({ address: s }) {
          super(`State for account "${s}" is set multiple times.`, {
            name: "AccountStateConflictError",
          });
        }
      };
      let StateAssignmentConflictError = class StateAssignmentConflictError extends X.G {
        constructor() {
          super("state and stateDiff are set on the same account.", {
            name: "StateAssignmentConflictError",
          });
        }
      };
      function prettyStateMapping(s) {
        return s.reduce(
          (s, { slot: x, value: W }) => `${s}        ${x}: ${W}
`,
          ""
        );
      }
      function prettyStateOverride(s) {
        return s
          .reduce((s, { address: x, ...W }) => {
            let X = `${s}    ${x}:
`;
            return (
              W.nonce &&
                (X += `      nonce: ${W.nonce}
`),
              W.balance &&
                (X += `      balance: ${W.balance}
`),
              W.code &&
                (X += `      code: ${W.code}
`),
              W.state && (X += "      state:\n" + prettyStateMapping(W.state)),
              W.stateDiff &&
                (X += "      stateDiff:\n" + prettyStateMapping(W.stateDiff)),
              X
            );
          }, "  State Override:\n")
          .slice(0, -1);
      }
    },
    33639: function (s, x, W) {
      "use strict";
      W.d(x, {
        Bh: function () {
          return TransactionNotFoundError;
        },
        Yb: function () {
          return TransactionReceiptNotFoundError;
        },
        j3: function () {
          return InvalidSerializableTransactionError;
        },
        mc: function () {
          return WaitForTransactionReceiptTimeoutError;
        },
        mk: function () {
          return TransactionExecutionError;
        },
        xY: function () {
          return FeeConflictError;
        },
        xr: function () {
          return prettyPrint;
        },
      });
      var X = W(39625),
        ee = W(67795),
        et = W(36117);
      function prettyPrint(s) {
        let x = Object.entries(s)
            .map(([s, x]) => (void 0 === x || !1 === x ? null : [s, x]))
            .filter(Boolean),
          W = x.reduce((s, [x]) => Math.max(s, x.length), 0);
        return x.map(([s, x]) => `  ${`${s}:`.padEnd(W + 1)}  ${x}`).join("\n");
      }
      let FeeConflictError = class FeeConflictError extends et.G {
        constructor() {
          super(
            "Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.",
            { name: "FeeConflictError" }
          );
        }
      };
      let InvalidSerializableTransactionError = class InvalidSerializableTransactionError extends et.G {
        constructor({ transaction: s }) {
          super("Cannot infer a transaction type from provided transaction.", {
            metaMessages: [
              "Provided Transaction:",
              "{",
              prettyPrint(s),
              "}",
              "",
              "To infer the type, either provide:",
              "- a `type` to the Transaction, or",
              "- an EIP-1559 Transaction with `maxFeePerGas`, or",
              "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or",
              "- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or",
              "- an EIP-7702 Transaction with `authorizationList`, or",
              "- a Legacy Transaction with `gasPrice`",
            ],
            name: "InvalidSerializableTransactionError",
          });
        }
      };
      let TransactionExecutionError = class TransactionExecutionError extends et.G {
        constructor(
          s,
          {
            account: x,
            docsPath: W,
            chain: et,
            data: er,
            gas: ei,
            gasPrice: eo,
            maxFeePerGas: ea,
            maxPriorityFeePerGas: es,
            nonce: el,
            to: ec,
            value: eu,
          }
        ) {
          let ed = prettyPrint({
            chain: et && `${et?.name} (id: ${et?.id})`,
            from: x?.address,
            to: ec,
            value:
              void 0 !== eu &&
              `${(0, X.d)(eu)} ${et?.nativeCurrency?.symbol || "ETH"}`,
            data: er,
            gas: ei,
            gasPrice: void 0 !== eo && `${(0, ee.o)(eo)} gwei`,
            maxFeePerGas: void 0 !== ea && `${(0, ee.o)(ea)} gwei`,
            maxPriorityFeePerGas: void 0 !== es && `${(0, ee.o)(es)} gwei`,
            nonce: el,
          });
          super(s.shortMessage, {
            cause: s,
            docsPath: W,
            metaMessages: [
              ...(s.metaMessages ? [...s.metaMessages, " "] : []),
              "Request Arguments:",
              ed,
            ].filter(Boolean),
            name: "TransactionExecutionError",
          }),
            Object.defineProperty(this, "cause", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.cause = s);
        }
      };
      let TransactionNotFoundError = class TransactionNotFoundError extends et.G {
        constructor({
          blockHash: s,
          blockNumber: x,
          blockTag: W,
          hash: X,
          index: ee,
        }) {
          let et = "Transaction";
          W &&
            void 0 !== ee &&
            (et = `Transaction at block time "${W}" at index "${ee}"`),
            s &&
              void 0 !== ee &&
              (et = `Transaction at block hash "${s}" at index "${ee}"`),
            x &&
              void 0 !== ee &&
              (et = `Transaction at block number "${x}" at index "${ee}"`),
            X && (et = `Transaction with hash "${X}"`),
            super(`${et} could not be found.`, {
              name: "TransactionNotFoundError",
            });
        }
      };
      let TransactionReceiptNotFoundError = class TransactionReceiptNotFoundError extends et.G {
        constructor({ hash: s }) {
          super(
            `Transaction receipt with hash "${s}" could not be found. The Transaction may not be processed on a block yet.`,
            { name: "TransactionReceiptNotFoundError" }
          );
        }
      };
      let WaitForTransactionReceiptTimeoutError = class WaitForTransactionReceiptTimeoutError extends et.G {
        constructor({ hash: s }) {
          super(
            `Timed out while waiting for transaction with hash "${s}" to be confirmed.`,
            { name: "WaitForTransactionReceiptTimeoutError" }
          );
        }
      };
    },
    29008: function (s, x, W) {
      "use strict";
      W.d(x, {
        C: function () {
          return getContractAddress;
        },
        G: function () {
          return getUrl;
        },
      });
      let getContractAddress = (s) => s,
        getUrl = (s) => s;
    },
    91213: function (s, x, W) {
      "use strict";
      W.d(x, {
        z: function () {
          return recoverAuthorizationAddress;
        },
      });
      var X = W(40112),
        ee = W(57040),
        et = W(11187),
        er = W(92106),
        ei = W(36117),
        eo = W(11221);
      function getSizeOfLength(s) {
        if (s < 256) return 1;
        if (s < 65536) return 2;
        if (s < 16777216) return 3;
        if (s < 4294967296) return 4;
        throw new ei.G("Length is too large.");
      }
      var ea = W(91734);
      async function recoverAuthorizationAddress(s) {
        let { authorization: x, signature: W } = s;
        return (0, X.R)({
          hash: (function (s) {
            let { chainId: x, contractAddress: W, nonce: X, to: ei } = s,
              es = (0, ea.w)(
                (0, ee.SM)([
                  "0x05",
                  (function (s, x = "hex") {
                    let W = (function getEncodable(s) {
                        return Array.isArray(s)
                          ? (function (s) {
                              let x = s.reduce((s, x) => s + x.length, 0),
                                W = getSizeOfLength(x),
                                X = x <= 55 ? 1 + x : 1 + W + x;
                              return {
                                length: X,
                                encode(X) {
                                  for (let { encode: ee } of (x <= 55
                                    ? X.pushByte(192 + x)
                                    : (X.pushByte(247 + W),
                                      1 === W
                                        ? X.pushUint8(x)
                                        : 2 === W
                                        ? X.pushUint16(x)
                                        : 3 === W
                                        ? X.pushUint24(x)
                                        : X.pushUint32(x)),
                                  s))
                                    ee(X);
                                },
                              };
                            })(s.map((s) => getEncodable(s)))
                          : (function (s) {
                              let x = "string" == typeof s ? (0, et.nr)(s) : s,
                                W = getSizeOfLength(x.length),
                                X =
                                  1 === x.length && x[0] < 128
                                    ? 1
                                    : x.length <= 55
                                    ? 1 + x.length
                                    : 1 + W + x.length;
                              return {
                                length: X,
                                encode(s) {
                                  (1 === x.length && x[0] < 128) ||
                                    (x.length <= 55
                                      ? s.pushByte(128 + x.length)
                                      : (s.pushByte(183 + W),
                                        1 === W
                                          ? s.pushUint8(x.length)
                                          : 2 === W
                                          ? s.pushUint16(x.length)
                                          : 3 === W
                                          ? s.pushUint24(x.length)
                                          : s.pushUint32(x.length))),
                                    s.pushBytes(x);
                                },
                              };
                            })(s);
                      })(s),
                      X = (0, eo.q)(new Uint8Array(W.length));
                    return (W.encode(X), "hex" === x)
                      ? (0, er.ci)(X.bytes)
                      : X.bytes;
                  })([x ? (0, er.eC)(x) : "0x", W, X ? (0, er.eC)(X) : "0x"]),
                ])
              );
            return "bytes" === ei ? (0, et.nr)(es) : es;
          })(x),
          signature: W ?? x,
        });
      }
    },
    78398: function (s, x, W) {
      "use strict";
      W.d(x, {
        r: function () {
          return decodeAbiParameters;
        },
      });
      var X = W(57412),
        ee = W(45775),
        et = W(11221),
        er = W(39135),
        ei = W(3972),
        eo = W(61836),
        ea = W(87788),
        es = W(95946),
        el = W(92106);
      function bytesToNumber(s, x = {}) {
        void 0 !== x.size && (0, es.Yf)(s, { size: x.size });
        let W = (0, el.ci)(s, x);
        return (0, es.ly)(W, x);
      }
      var ec = W(11187),
        eu = W(45444);
      function decodeAbiParameters(s, x) {
        let W = "string" == typeof x ? (0, ec.nr)(x) : x,
          ed = (0, et.q)(W);
        if (0 === (0, er.d)(W) && s.length > 0) throw new X.wb();
        if ((0, er.d)(x) && 32 > (0, er.d)(x))
          throw new X.xB({
            data: "string" == typeof x ? x : (0, el.ci)(x),
            params: s,
            size: (0, er.d)(x),
          });
        let eh = 0,
          ep = [];
        for (let x = 0; x < s.length; ++x) {
          let W = s[x];
          ed.setPosition(eh);
          let [et, er] = (function decodeParameter(
            s,
            x,
            { staticPosition: W }
          ) {
            let et = (0, eu.S)(x.type);
            if (et) {
              let [X, ee] = et;
              return (function (s, x, { length: W, staticPosition: X }) {
                if (!W) {
                  let W = bytesToNumber(s.readBytes(32)),
                    ee = X + W,
                    et = ee + 32;
                  s.setPosition(ee);
                  let er = bytesToNumber(s.readBytes(32)),
                    ei = hasDynamicChild(x),
                    eo = 0,
                    ea = [];
                  for (let W = 0; W < er; ++W) {
                    s.setPosition(et + (ei ? 32 * W : eo));
                    let [X, ee] = decodeParameter(s, x, { staticPosition: et });
                    (eo += ee), ea.push(X);
                  }
                  return s.setPosition(X + 32), [ea, 32];
                }
                if (hasDynamicChild(x)) {
                  let ee = bytesToNumber(s.readBytes(32)),
                    et = X + ee,
                    er = [];
                  for (let X = 0; X < W; ++X) {
                    s.setPosition(et + 32 * X);
                    let [W] = decodeParameter(s, x, { staticPosition: et });
                    er.push(W);
                  }
                  return s.setPosition(X + 32), [er, 32];
                }
                let ee = 0,
                  et = [];
                for (let er = 0; er < W; ++er) {
                  let [W, er] = decodeParameter(s, x, {
                    staticPosition: X + ee,
                  });
                  (ee += er), et.push(W);
                }
                return [et, ee];
              })(s, { ...x, type: ee }, { length: X, staticPosition: W });
            }
            if ("tuple" === x.type)
              return (function (s, x, { staticPosition: W }) {
                let X =
                    0 === x.components.length ||
                    x.components.some(({ name: s }) => !s),
                  ee = X ? [] : {},
                  et = 0;
                if (hasDynamicChild(x)) {
                  let er = bytesToNumber(s.readBytes(32)),
                    ei = W + er;
                  for (let W = 0; W < x.components.length; ++W) {
                    let er = x.components[W];
                    s.setPosition(ei + et);
                    let [eo, ea] = decodeParameter(s, er, {
                      staticPosition: ei,
                    });
                    (et += ea), (ee[X ? W : er?.name] = eo);
                  }
                  return s.setPosition(W + 32), [ee, 32];
                }
                for (let er = 0; er < x.components.length; ++er) {
                  let ei = x.components[er],
                    [eo, ea] = decodeParameter(s, ei, { staticPosition: W });
                  (ee[X ? er : ei?.name] = eo), (et += ea);
                }
                return [ee, et];
              })(s, x, { staticPosition: W });
            if ("address" === x.type)
              return (function (s) {
                let x = s.readBytes(32);
                return [(0, ee.x)((0, el.ci)((0, ei.T4)(x, -20))), 32];
              })(s);
            if ("bool" === x.type)
              return [
                (function (s, x = {}) {
                  let W = s;
                  if (
                    (void 0 !== x.size &&
                      ((0, es.Yf)(W, { size: x.size }), (W = (0, eo.f)(W))),
                    W.length > 1 || W[0] > 1)
                  )
                    throw new ea.yr(W);
                  return !!W[0];
                })(s.readBytes(32), { size: 32 }),
                32,
              ];
            if (x.type.startsWith("bytes"))
              return (function (s, x, { staticPosition: W }) {
                let [X, ee] = x.type.split("bytes");
                if (!ee) {
                  let x = bytesToNumber(s.readBytes(32));
                  s.setPosition(W + x);
                  let X = bytesToNumber(s.readBytes(32));
                  if (0 === X) return s.setPosition(W + 32), ["0x", 32];
                  let ee = s.readBytes(X);
                  return s.setPosition(W + 32), [(0, el.ci)(ee), 32];
                }
                let et = (0, el.ci)(s.readBytes(Number.parseInt(ee), 32));
                return [et, 32];
              })(s, x, { staticPosition: W });
            if (x.type.startsWith("uint") || x.type.startsWith("int"))
              return (function (s, x) {
                let W = x.type.startsWith("int"),
                  X = Number.parseInt(x.type.split("int")[1] || "256"),
                  ee = s.readBytes(32);
                return [
                  X > 48
                    ? (function (s, x = {}) {
                        void 0 !== x.size && (0, es.Yf)(s, { size: x.size });
                        let W = (0, el.ci)(s, x);
                        return (0, es.y_)(W, x);
                      })(ee, { signed: W })
                    : bytesToNumber(ee, { signed: W }),
                  32,
                ];
              })(s, x);
            if ("string" === x.type)
              return (function (s, { staticPosition: x }) {
                let W = bytesToNumber(s.readBytes(32)),
                  X = x + W;
                s.setPosition(X);
                let ee = bytesToNumber(s.readBytes(32));
                if (0 === ee) return s.setPosition(x + 32), ["", 32];
                let et = s.readBytes(ee, 32),
                  er = (function (s, x = {}) {
                    let W = s;
                    return (
                      void 0 !== x.size &&
                        ((0, es.Yf)(W, { size: x.size }),
                        (W = (0, eo.f)(W, { dir: "right" }))),
                      new TextDecoder().decode(W)
                    );
                  })((0, eo.f)(et));
                return s.setPosition(x + 32), [er, 32];
              })(s, { staticPosition: W });
            throw new X.CI(x.type, {
              docsPath: "/docs/contract/decodeAbiParameters",
            });
          })(ed, W, { staticPosition: 0 });
          (eh += er), ep.push(et);
        }
        return ep;
      }
      function hasDynamicChild(s) {
        let { type: x } = s;
        if ("string" === x || "bytes" === x || x.endsWith("[]")) return !0;
        if ("tuple" === x) return s.components?.some(hasDynamicChild);
        let W = (0, eu.S)(s.type);
        return !!(W && hasDynamicChild({ ...s, type: W[1] }));
      }
    },
    86899: function (s, x, W) {
      "use strict";
      W.d(x, {
        p: function () {
          return decodeErrorResult;
        },
      });
      var X = W(21746),
        ee = W(57412),
        et = W(3972),
        er = W(58034),
        ei = W(78398),
        eo = W(80522);
      function decodeErrorResult(s) {
        let { abi: x, data: W } = s,
          ea = (0, et.tP)(W, 0, 4);
        if ("0x" === ea) throw new ee.wb();
        let es = [...(x || []), X.Up, X.hZ],
          el = es.find(
            (s) => "error" === s.type && ea === (0, er.C)((0, eo.t)(s))
          );
        if (!el)
          throw new ee.yP(ea, { docsPath: "/docs/contract/decodeErrorResult" });
        return {
          abiItem: el,
          args:
            "inputs" in el && el.inputs && el.inputs.length > 0
              ? (0, ei.r)(el.inputs, (0, et.tP)(W, 4))
              : void 0,
          errorName: el.name,
        };
      }
    },
    15950: function (s, x, W) {
      "use strict";
      W.d(x, {
        F: function () {
          return decodeEventLog;
        },
      });
      var X = W(57412),
        ee = W(39135),
        et = W(96005),
        er = W(66238),
        ei = W(78398),
        eo = W(80522);
      let ea = "/docs/contract/decodeEventLog";
      function decodeEventLog(s) {
        let { abi: x, data: W, strict: es, topics: el } = s,
          ec = es ?? !0,
          [eu, ...ed] = el;
        if (!eu) throw new X.FM({ docsPath: ea });
        let eh =
          1 === x.length
            ? x[0]
            : x.find(
                (s) => "event" === s.type && eu === (0, et.n)((0, eo.t)(s))
              );
        if (!(eh && "name" in eh) || "event" !== eh.type)
          throw new X.lC(eu, { docsPath: ea });
        let { name: ep, inputs: ef } = eh,
          eg = ef?.some((s) => !("name" in s && s.name)),
          em = eg ? [] : {},
          ew = ef.filter((s) => "indexed" in s && s.indexed);
        for (let s = 0; s < ew.length; s++) {
          let x = ew[s],
            W = ed[s];
          if (!W) throw new X.Gy({ abiItem: eh, param: x });
          em[eg ? s : x.name || s] = (function ({ param: s, value: x }) {
            if (
              "string" === s.type ||
              "bytes" === s.type ||
              "tuple" === s.type ||
              s.type.match(/^(.*)\[(\d+)?\]$/)
            )
              return x;
            let W = (0, ei.r)([s], x) || [];
            return W[0];
          })({ param: x, value: W });
        }
        let eb = ef.filter((s) => !("indexed" in s && s.indexed));
        if (eb.length > 0) {
          if (W && "0x" !== W)
            try {
              let s = (0, ei.r)(eb, W);
              if (s) {
                if (eg) em = [...em, ...s];
                else for (let x = 0; x < eb.length; x++) em[eb[x].name] = s[x];
              }
            } catch (s) {
              if (ec) {
                if (s instanceof X.xB || s instanceof er.lQ)
                  throw new X.SM({
                    abiItem: eh,
                    data: W,
                    params: eb,
                    size: (0, ee.d)(W),
                  });
                throw s;
              }
            }
          else if (ec)
            throw new X.SM({ abiItem: eh, data: "0x", params: eb, size: 0 });
        }
        return {
          eventName: ep,
          args: Object.values(em).length > 0 ? em : void 0,
        };
      }
    },
    7210: function (s, x, W) {
      "use strict";
      W.d(x, {
        k: function () {
          return decodeFunctionResult;
        },
      });
      var X = W(57412),
        ee = W(78398),
        et = W(40840);
      let er = "/docs/contract/decodeFunctionResult";
      function decodeFunctionResult(s) {
        let { abi: x, args: W, functionName: ei, data: eo } = s,
          ea = x[0];
        if (ei) {
          let s = (0, et.mE)({ abi: x, args: W, name: ei });
          if (!s) throw new X.xL(ei, { docsPath: er });
          ea = s;
        }
        if ("function" !== ea.type) throw new X.xL(void 0, { docsPath: er });
        if (!ea.outputs) throw new X.MX(ea.name, { docsPath: er });
        let es = (0, ee.r)(ea.outputs, eo);
        return es && es.length > 1
          ? es
          : es && 1 === es.length
          ? es[0]
          : void 0;
      }
    },
    45444: function (s, x, W) {
      "use strict";
      W.d(x, {
        E: function () {
          return encodeAbiParameters;
        },
        S: function () {
          return getArrayComponents;
        },
      });
      var X = W(57412),
        ee = W(26087),
        et = W(36117),
        er = W(87788),
        ei = W(49321),
        eo = W(57040),
        ea = W(61769),
        es = W(39135),
        el = W(3972),
        ec = W(92106),
        eu = W(24409);
      function encodeAbiParameters(s, x) {
        if (s.length !== x.length)
          throw new X.fs({ expectedLength: s.length, givenLength: x.length });
        let W = (function ({ params: s, values: x }) {
            let W = [];
            for (let ed = 0; ed < s.length; ed++)
              W.push(
                (function prepareParam({ param: s, value: x }) {
                  let W = getArrayComponents(s.type);
                  if (W) {
                    let [ee, et] = W;
                    return (function (s, { length: x, param: W }) {
                      let ee = null === x;
                      if (!Array.isArray(s)) throw new X.hn(s);
                      if (!ee && s.length !== x)
                        throw new X.gr({
                          expectedLength: x,
                          givenLength: s.length,
                          type: `${W.type}[${x}]`,
                        });
                      let et = !1,
                        er = [];
                      for (let x = 0; x < s.length; x++) {
                        let X = prepareParam({ param: W, value: s[x] });
                        X.dynamic && (et = !0), er.push(X);
                      }
                      if (ee || et) {
                        let s = encodeParams(er);
                        if (ee) {
                          let x = (0, ec.eC)(er.length, { size: 32 });
                          return {
                            dynamic: !0,
                            encoded: er.length > 0 ? (0, eo.zo)([x, s]) : x,
                          };
                        }
                        if (et) return { dynamic: !0, encoded: s };
                      }
                      return {
                        dynamic: !1,
                        encoded: (0, eo.zo)(er.map(({ encoded: s }) => s)),
                      };
                    })(x, { length: ee, param: { ...s, type: et } });
                  }
                  if ("tuple" === s.type)
                    return (function (s, { param: x }) {
                      let W = !1,
                        X = [];
                      for (let ee = 0; ee < x.components.length; ee++) {
                        let et = x.components[ee],
                          er = Array.isArray(s) ? ee : et.name,
                          ei = prepareParam({ param: et, value: s[er] });
                        X.push(ei), ei.dynamic && (W = !0);
                      }
                      return {
                        dynamic: W,
                        encoded: W
                          ? encodeParams(X)
                          : (0, eo.zo)(X.map(({ encoded: s }) => s)),
                      };
                    })(x, { param: s });
                  if ("address" === s.type)
                    return (function (s) {
                      if (!(0, ei.U)(s)) throw new ee.b({ address: s });
                      return {
                        dynamic: !1,
                        encoded: (0, ea.gc)(s.toLowerCase()),
                      };
                    })(x);
                  if ("bool" === s.type)
                    return (function (s) {
                      if ("boolean" != typeof s)
                        throw new et.G(
                          `Invalid boolean value: "${s}" (type: ${typeof s}). Expected: \`true\` or \`false\`.`
                        );
                      return {
                        dynamic: !1,
                        encoded: (0, ea.gc)((0, ec.C4)(s)),
                      };
                    })(x);
                  if (s.type.startsWith("uint") || s.type.startsWith("int")) {
                    let W = s.type.startsWith("int"),
                      [, , X = "256"] = eu.lh.exec(s.type) ?? [];
                    return (function (s, { signed: x, size: W = 256 }) {
                      if ("number" == typeof W) {
                        let X = 2n ** (BigInt(W) - (x ? 1n : 0n)) - 1n,
                          ee = x ? -X - 1n : 0n;
                        if (s > X || s < ee)
                          throw new er.J5({
                            max: X.toString(),
                            min: ee.toString(),
                            signed: x,
                            size: W / 8,
                            value: s.toString(),
                          });
                      }
                      return {
                        dynamic: !1,
                        encoded: (0, ec.eC)(s, { size: 32, signed: x }),
                      };
                    })(x, { signed: W, size: Number(X) });
                  }
                  if (s.type.startsWith("bytes"))
                    return (function (s, { param: x }) {
                      let [, W] = x.type.split("bytes"),
                        ee = (0, es.d)(s);
                      if (!W) {
                        let x = s;
                        return (
                          ee % 32 != 0 &&
                            (x = (0, ea.gc)(x, {
                              dir: "right",
                              size: 32 * Math.ceil((s.length - 2) / 2 / 32),
                            })),
                          {
                            dynamic: !0,
                            encoded: (0, eo.zo)([
                              (0, ea.gc)((0, ec.eC)(ee, { size: 32 })),
                              x,
                            ]),
                          }
                        );
                      }
                      if (ee !== Number.parseInt(W))
                        throw new X.M4({
                          expectedSize: Number.parseInt(W),
                          value: s,
                        });
                      return {
                        dynamic: !1,
                        encoded: (0, ea.gc)(s, { dir: "right" }),
                      };
                    })(x, { param: s });
                  if ("string" === s.type)
                    return (function (s) {
                      let x = (0, ec.$G)(s),
                        W = Math.ceil((0, es.d)(x) / 32),
                        X = [];
                      for (let s = 0; s < W; s++)
                        X.push(
                          (0, ea.gc)((0, el.tP)(x, 32 * s, (s + 1) * 32), {
                            dir: "right",
                          })
                        );
                      return {
                        dynamic: !0,
                        encoded: (0, eo.zo)([
                          (0, ea.gc)((0, ec.eC)((0, es.d)(x), { size: 32 })),
                          ...X,
                        ]),
                      };
                    })(x);
                  throw new X.dh(s.type, {
                    docsPath: "/docs/contract/encodeAbiParameters",
                  });
                })({ param: s[ed], value: x[ed] })
              );
            return W;
          })({ params: s, values: x }),
          ed = encodeParams(W);
        return 0 === ed.length ? "0x" : ed;
      }
      function encodeParams(s) {
        let x = 0;
        for (let W = 0; W < s.length; W++) {
          let { dynamic: X, encoded: ee } = s[W];
          X ? (x += 32) : (x += (0, es.d)(ee));
        }
        let W = [],
          X = [],
          ee = 0;
        for (let et = 0; et < s.length; et++) {
          let { dynamic: er, encoded: ei } = s[et];
          er
            ? (W.push((0, ec.eC)(x + ee, { size: 32 })),
              X.push(ei),
              (ee += (0, es.d)(ei)))
            : W.push(ei);
        }
        return (0, eo.zo)([...W, ...X]);
      }
      function getArrayComponents(s) {
        let x = s.match(/^(.*)\[(\d+)?\]$/);
        return x ? [x[2] ? Number(x[2]) : null, x[1]] : void 0;
      }
    },
    30286: function (s, x, W) {
      "use strict";
      W.d(x, {
        w: function () {
          return encodeDeployData;
        },
      });
      var X = W(57412),
        ee = W(57040),
        et = W(45444);
      let er = "/docs/contract/encodeDeployData";
      function encodeDeployData(s) {
        let { abi: x, args: W, bytecode: ei } = s;
        if (!W || 0 === W.length) return ei;
        let eo = x.find((s) => "type" in s && "constructor" === s.type);
        if (!eo) throw new X.fM({ docsPath: er });
        if (!("inputs" in eo) || !eo.inputs || 0 === eo.inputs.length)
          throw new X.cO({ docsPath: er });
        let ea = (0, et.E)(eo.inputs, W);
        return (0, ee.SM)([ei, ea]);
      }
    },
    55629: function (s, x, W) {
      "use strict";
      W.d(x, {
        R: function () {
          return encodeFunctionData;
        },
      });
      var X = W(57040),
        ee = W(45444),
        et = W(57412),
        er = W(58034),
        ei = W(80522),
        eo = W(40840);
      let ea = "/docs/contract/encodeFunctionData";
      function encodeFunctionData(s) {
        let { args: x } = s,
          { abi: W, functionName: es } =
            1 === s.abi.length && s.functionName?.startsWith("0x")
              ? s
              : (function (s) {
                  let { abi: x, args: W, functionName: X } = s,
                    ee = x[0];
                  if (X) {
                    let s = (0, eo.mE)({ abi: x, args: W, name: X });
                    if (!s) throw new et.xL(X, { docsPath: ea });
                    ee = s;
                  }
                  if ("function" !== ee.type)
                    throw new et.xL(void 0, { docsPath: ea });
                  return { abi: [ee], functionName: (0, er.C)((0, ei.t)(ee)) };
                })(s),
          el = W[0],
          ec =
            "inputs" in el && el.inputs
              ? (0, ee.E)(el.inputs, x ?? [])
              : void 0;
        return (0, X.SM)([es, ec ?? "0x"]);
      }
    },
    80522: function (s, x, W) {
      "use strict";
      W.d(x, {
        h: function () {
          return formatAbiParams;
        },
        t: function () {
          return formatAbiItem;
        },
      });
      var X = W(57412);
      function formatAbiItem(s, { includeName: x = !1 } = {}) {
        if ("function" !== s.type && "event" !== s.type && "error" !== s.type)
          throw new X.wM(s.type);
        return `${s.name}(${formatAbiParams(s.inputs, { includeName: x })})`;
      }
      function formatAbiParams(s, { includeName: x = !1 } = {}) {
        return s
          ? s
              .map((s) =>
                (function (s, { includeName: x }) {
                  return s.type.startsWith("tuple")
                    ? `(${formatAbiParams(s.components, {
                        includeName: x,
                      })})${s.type.slice(5)}`
                    : s.type + (x && s.name ? ` ${s.name}` : "");
                })(s, { includeName: x })
              )
              .join(x ? ", " : ",")
          : "";
      }
    },
    40840: function (s, x, W) {
      "use strict";
      W.d(x, {
        mE: function () {
          return getAbiItem;
        },
      });
      var X = W(57412),
        ee = W(15102),
        et = W(49321),
        er = W(96005),
        ei = W(58034);
      function getAbiItem(s) {
        let x;
        let { abi: W, args: eo = [], name: ea } = s,
          es = (0, ee.v)(ea, { strict: !1 }),
          el = W.filter((s) =>
            es
              ? "function" === s.type
                ? (0, ei.C)(s) === ea
                : "event" === s.type && (0, er.n)(s) === ea
              : "name" in s && s.name === ea
          );
        if (0 !== el.length) {
          if (1 === el.length) return el[0];
          for (let s of el) {
            if (!("inputs" in s)) continue;
            if (!eo || 0 === eo.length) {
              if (!s.inputs || 0 === s.inputs.length) return s;
              continue;
            }
            if (
              !s.inputs ||
              0 === s.inputs.length ||
              s.inputs.length !== eo.length
            )
              continue;
            let W = eo.every((x, W) => {
              let X = "inputs" in s && s.inputs[W];
              return (
                !!X &&
                (function isArgOfType(s, x) {
                  let W = typeof s,
                    X = x.type;
                  switch (X) {
                    case "address":
                      return (0, et.U)(s, { strict: !1 });
                    case "bool":
                      return "boolean" === W;
                    case "function":
                    case "string":
                      return "string" === W;
                    default:
                      if ("tuple" === X && "components" in x)
                        return Object.values(x.components).every((x, W) =>
                          isArgOfType(Object.values(s)[W], x)
                        );
                      if (
                        /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(
                          X
                        )
                      )
                        return "number" === W || "bigint" === W;
                      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(X))
                        return "string" === W || s instanceof Uint8Array;
                      if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(X))
                        return (
                          Array.isArray(s) &&
                          s.every((s) =>
                            isArgOfType(s, {
                              ...x,
                              type: X.replace(/(\[[0-9]{0,}\])$/, ""),
                            })
                          )
                        );
                      return !1;
                  }
                })(x, X)
              );
            });
            if (W) {
              if (x && "inputs" in x && x.inputs) {
                let W = (function getAmbiguousTypes(s, x, W) {
                  for (let X in s) {
                    let ee = s[X],
                      er = x[X];
                    if (
                      "tuple" === ee.type &&
                      "tuple" === er.type &&
                      "components" in ee &&
                      "components" in er
                    )
                      return getAmbiguousTypes(
                        ee.components,
                        er.components,
                        W[X]
                      );
                    let ei = [ee.type, er.type],
                      eo =
                        !!(ei.includes("address") && ei.includes("bytes20")) ||
                        (!!(
                          (ei.includes("address") && ei.includes("string")) ||
                          (ei.includes("address") && ei.includes("bytes"))
                        ) &&
                          (0, et.U)(W[X], { strict: !1 }));
                    if (eo) return ei;
                  }
                })(s.inputs, x.inputs, eo);
                if (W)
                  throw new X.S4(
                    { abiItem: s, type: W[0] },
                    { abiItem: x, type: W[1] }
                  );
              }
              x = s;
            }
          }
          return x || el[0];
        }
      }
    },
    59691: function (s, x, W) {
      "use strict";
      W.d(x, {
        h: function () {
          return parseEventLogs;
        },
      });
      var X = W(57412),
        ee = W(61228),
        et = W(11187),
        er = W(91734),
        ei = W(96005),
        eo = W(15950);
      function parseEventLogs(s) {
        let { abi: x, args: W, logs: ea, strict: es = !0 } = s,
          el = (() => {
            if (s.eventName)
              return Array.isArray(s.eventName) ? s.eventName : [s.eventName];
          })();
        return ea
          .map((s) => {
            try {
              let X = x.find(
                (x) => "event" === x.type && s.topics[0] === (0, ei.n)(x)
              );
              if (!X) return null;
              let ea = (0, eo.F)({ ...s, abi: [X], strict: es });
              if (
                (el && !el.includes(ea.eventName)) ||
                !(function (s) {
                  let { args: x, inputs: W, matchArgs: X } = s;
                  if (!X) return !0;
                  if (!x) return !1;
                  function isEqual(s, x, W) {
                    try {
                      if ("address" === s.type) return (0, ee.E)(x, W);
                      if ("string" === s.type || "bytes" === s.type)
                        return (0, er.w)((0, et.O0)(x)) === W;
                      return x === W;
                    } catch {
                      return !1;
                    }
                  }
                  return Array.isArray(x) && Array.isArray(X)
                    ? X.every((s, X) => {
                        if (null == s) return !0;
                        let ee = W[X];
                        if (!ee) return !1;
                        let et = Array.isArray(s) ? s : [s];
                        return et.some((s) => isEqual(ee, s, x[X]));
                      })
                    : !(
                        "object" != typeof x ||
                        Array.isArray(x) ||
                        "object" != typeof X ||
                        Array.isArray(X)
                      ) &&
                        Object.entries(X).every(([s, X]) => {
                          if (null == X) return !0;
                          let ee = W.find((x) => x.name === s);
                          if (!ee) return !1;
                          let et = Array.isArray(X) ? X : [X];
                          return et.some((W) => isEqual(ee, W, x[s]));
                        });
                })({ args: ea.args, inputs: X.inputs, matchArgs: W })
              )
                return null;
              return { ...ea, ...s };
            } catch (ee) {
              let x, W;
              if (ee instanceof X.lC) return null;
              if (ee instanceof X.SM || ee instanceof X.Gy) {
                if (es) return null;
                (x = ee.abiItem.name),
                  (W = ee.abiItem.inputs?.some(
                    (s) => !("name" in s && s.name)
                  ));
              }
              return { ...s, args: W ? [] : {}, eventName: x };
            }
          })
          .filter(Boolean);
      }
    },
    45775: function (s, x, W) {
      "use strict";
      W.d(x, {
        K: function () {
          return getAddress;
        },
        x: function () {
          return checksumAddress;
        },
      });
      var X = W(26087),
        ee = W(11187),
        et = W(91734),
        er = W(79773),
        ei = W(49321);
      let eo = new er.k(8192);
      function checksumAddress(s, x) {
        if (eo.has(`${s}.${x}`)) return eo.get(`${s}.${x}`);
        let W = x ? `${x}${s.toLowerCase()}` : s.substring(2).toLowerCase(),
          X = (0, et.w)((0, ee.qX)(W), "bytes"),
          er = (x ? W.substring(`${x}0x`.length) : W).split("");
        for (let s = 0; s < 40; s += 2)
          X[s >> 1] >> 4 >= 8 && er[s] && (er[s] = er[s].toUpperCase()),
            (15 & X[s >> 1]) >= 8 &&
              er[s + 1] &&
              (er[s + 1] = er[s + 1].toUpperCase());
        let ei = `0x${er.join("")}`;
        return eo.set(`${s}.${x}`, ei), ei;
      }
      function getAddress(s, x) {
        if (!(0, ei.U)(s, { strict: !1 })) throw new X.b({ address: s });
        return checksumAddress(s, x);
      }
    },
    49321: function (s, x, W) {
      "use strict";
      W.d(x, {
        U: function () {
          return isAddress;
        },
      });
      var X = W(79773),
        ee = W(45775);
      let et = /^0x[a-fA-F0-9]{40}$/,
        er = new X.k(8192);
      function isAddress(s, x) {
        let { strict: W = !0 } = x ?? {},
          X = `${s}.${W}`;
        if (er.has(X)) return er.get(X);
        let ei =
          !!et.test(s) && (s.toLowerCase() === s || !W || (0, ee.x)(s) === s);
        return er.set(X, ei), ei;
      }
    },
    61228: function (s, x, W) {
      "use strict";
      W.d(x, {
        E: function () {
          return isAddressEqual;
        },
      });
      var X = W(26087),
        ee = W(49321);
      function isAddressEqual(s, x) {
        if (!(0, ee.U)(s, { strict: !1 })) throw new X.b({ address: s });
        if (!(0, ee.U)(x, { strict: !1 })) throw new X.b({ address: x });
        return s.toLowerCase() === x.toLowerCase();
      }
    },
    47864: function (s, x, W) {
      "use strict";
      W.d(x, {
        L: function () {
          return getChainContractAddress;
        },
      });
      var X = W(80377);
      function getChainContractAddress({
        blockNumber: s,
        chain: x,
        contract: W,
      }) {
        let ee = x?.contracts?.[W];
        if (!ee) throw new X.mm({ chain: x, contract: { name: W } });
        if (s && ee.blockCreated && ee.blockCreated > s)
          throw new X.mm({
            blockNumber: s,
            chain: x,
            contract: { name: W, blockCreated: ee.blockCreated },
          });
        return ee.address;
      }
    },
    11221: function (s, x, W) {
      "use strict";
      W.d(x, {
        q: function () {
          return createCursor;
        },
      });
      var X = W(66238);
      let ee = {
        bytes: new Uint8Array(),
        dataView: new DataView(new ArrayBuffer(0)),
        position: 0,
        positionReadCount: new Map(),
        recursiveReadCount: 0,
        recursiveReadLimit: Number.POSITIVE_INFINITY,
        assertReadLimit() {
          if (this.recursiveReadCount >= this.recursiveReadLimit)
            throw new X.KD({
              count: this.recursiveReadCount + 1,
              limit: this.recursiveReadLimit,
            });
        },
        assertPosition(s) {
          if (s < 0 || s > this.bytes.length - 1)
            throw new X.lQ({ length: this.bytes.length, position: s });
        },
        decrementPosition(s) {
          if (s < 0) throw new X.T_({ offset: s });
          let x = this.position - s;
          this.assertPosition(x), (this.position = x);
        },
        getReadCount(s) {
          return this.positionReadCount.get(s || this.position) || 0;
        },
        incrementPosition(s) {
          if (s < 0) throw new X.T_({ offset: s });
          let x = this.position + s;
          this.assertPosition(x), (this.position = x);
        },
        inspectByte(s) {
          let x = s ?? this.position;
          return this.assertPosition(x), this.bytes[x];
        },
        inspectBytes(s, x) {
          let W = x ?? this.position;
          return this.assertPosition(W + s - 1), this.bytes.subarray(W, W + s);
        },
        inspectUint8(s) {
          let x = s ?? this.position;
          return this.assertPosition(x), this.bytes[x];
        },
        inspectUint16(s) {
          let x = s ?? this.position;
          return this.assertPosition(x + 1), this.dataView.getUint16(x);
        },
        inspectUint24(s) {
          let x = s ?? this.position;
          return (
            this.assertPosition(x + 2),
            (this.dataView.getUint16(x) << 8) + this.dataView.getUint8(x + 2)
          );
        },
        inspectUint32(s) {
          let x = s ?? this.position;
          return this.assertPosition(x + 3), this.dataView.getUint32(x);
        },
        pushByte(s) {
          this.assertPosition(this.position),
            (this.bytes[this.position] = s),
            this.position++;
        },
        pushBytes(s) {
          this.assertPosition(this.position + s.length - 1),
            this.bytes.set(s, this.position),
            (this.position += s.length);
        },
        pushUint8(s) {
          this.assertPosition(this.position),
            (this.bytes[this.position] = s),
            this.position++;
        },
        pushUint16(s) {
          this.assertPosition(this.position + 1),
            this.dataView.setUint16(this.position, s),
            (this.position += 2);
        },
        pushUint24(s) {
          this.assertPosition(this.position + 2),
            this.dataView.setUint16(this.position, s >> 8),
            this.dataView.setUint8(this.position + 2, 255 & s),
            (this.position += 3);
        },
        pushUint32(s) {
          this.assertPosition(this.position + 3),
            this.dataView.setUint32(this.position, s),
            (this.position += 4);
        },
        readByte() {
          this.assertReadLimit(), this._touch();
          let s = this.inspectByte();
          return this.position++, s;
        },
        readBytes(s, x) {
          this.assertReadLimit(), this._touch();
          let W = this.inspectBytes(s);
          return (this.position += x ?? s), W;
        },
        readUint8() {
          this.assertReadLimit(), this._touch();
          let s = this.inspectUint8();
          return (this.position += 1), s;
        },
        readUint16() {
          this.assertReadLimit(), this._touch();
          let s = this.inspectUint16();
          return (this.position += 2), s;
        },
        readUint24() {
          this.assertReadLimit(), this._touch();
          let s = this.inspectUint24();
          return (this.position += 3), s;
        },
        readUint32() {
          this.assertReadLimit(), this._touch();
          let s = this.inspectUint32();
          return (this.position += 4), s;
        },
        get remaining() {
          return this.bytes.length - this.position;
        },
        setPosition(s) {
          let x = this.position;
          return (
            this.assertPosition(s),
            (this.position = s),
            () => (this.position = x)
          );
        },
        _touch() {
          if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return;
          let s = this.getReadCount();
          this.positionReadCount.set(this.position, s + 1),
            s > 0 && this.recursiveReadCount++;
        },
      };
      function createCursor(s, { recursiveReadLimit: x = 8192 } = {}) {
        let W = Object.create(ee);
        return (
          (W.bytes = s),
          (W.dataView = new DataView(s.buffer, s.byteOffset, s.byteLength)),
          (W.positionReadCount = new Map()),
          (W.recursiveReadLimit = x),
          W
        );
      }
    },
    57040: function (s, x, W) {
      "use strict";
      function concat(s) {
        return "string" == typeof s[0]
          ? concatHex(s)
          : (function (s) {
              let x = 0;
              for (let W of s) x += W.length;
              let W = new Uint8Array(x),
                X = 0;
              for (let x of s) W.set(x, X), (X += x.length);
              return W;
            })(s);
      }
      function concatHex(s) {
        return `0x${s.reduce((s, x) => s + x.replace("0x", ""), "")}`;
      }
      W.d(x, {
        SM: function () {
          return concatHex;
        },
        zo: function () {
          return concat;
        },
      });
    },
    15102: function (s, x, W) {
      "use strict";
      function isHex(s, { strict: x = !0 } = {}) {
        return (
          !!s &&
          "string" == typeof s &&
          (x ? /^0x[0-9a-fA-F]*$/.test(s) : s.startsWith("0x"))
        );
      }
      W.d(x, {
        v: function () {
          return isHex;
        },
      });
    },
    61769: function (s, x, W) {
      "use strict";
      W.d(x, {
        gc: function () {
          return padHex;
        },
        vk: function () {
          return pad;
        },
      });
      var X = W(69760);
      function pad(s, { dir: x, size: W = 32 } = {}) {
        return "string" == typeof s
          ? padHex(s, { dir: x, size: W })
          : (function (s, { dir: x, size: W = 32 } = {}) {
              if (null === W) return s;
              if (s.length > W)
                throw new X.$s({
                  size: s.length,
                  targetSize: W,
                  type: "bytes",
                });
              let ee = new Uint8Array(W);
              for (let X = 0; X < W; X++) {
                let et = "right" === x;
                ee[et ? X : W - X - 1] = s[et ? X : s.length - X - 1];
              }
              return ee;
            })(s, { dir: x, size: W });
      }
      function padHex(s, { dir: x, size: W = 32 } = {}) {
        if (null === W) return s;
        let ee = s.replace("0x", "");
        if (ee.length > 2 * W)
          throw new X.$s({
            size: Math.ceil(ee.length / 2),
            targetSize: W,
            type: "hex",
          });
        return `0x${ee["right" === x ? "padEnd" : "padStart"](2 * W, "0")}`;
      }
    },
    39135: function (s, x, W) {
      "use strict";
      W.d(x, {
        d: function () {
          return size;
        },
      });
      var X = W(15102);
      function size(s) {
        return (0, X.v)(s, { strict: !1 })
          ? Math.ceil((s.length - 2) / 2)
          : s.length;
      }
    },
    3972: function (s, x, W) {
      "use strict";
      W.d(x, {
        T4: function () {
          return sliceBytes;
        },
        p5: function () {
          return sliceHex;
        },
        tP: function () {
          return slice;
        },
      });
      var X = W(69760),
        ee = W(15102),
        et = W(39135);
      function slice(s, x, W, { strict: X } = {}) {
        return (0, ee.v)(s, { strict: !1 })
          ? sliceHex(s, x, W, { strict: X })
          : sliceBytes(s, x, W, { strict: X });
      }
      function assertStartOffset(s, x) {
        if ("number" == typeof x && x > 0 && x > (0, et.d)(s) - 1)
          throw new X.mV({ offset: x, position: "start", size: (0, et.d)(s) });
      }
      function assertEndOffset(s, x, W) {
        if (
          "number" == typeof x &&
          "number" == typeof W &&
          (0, et.d)(s) !== W - x
        )
          throw new X.mV({ offset: W, position: "end", size: (0, et.d)(s) });
      }
      function sliceBytes(s, x, W, { strict: X } = {}) {
        assertStartOffset(s, x);
        let ee = s.slice(x, W);
        return X && assertEndOffset(ee, x, W), ee;
      }
      function sliceHex(s, x, W, { strict: X } = {}) {
        assertStartOffset(s, x);
        let ee = `0x${s
          .replace("0x", "")
          .slice((x ?? 0) * 2, (W ?? s.length) * 2)}`;
        return X && assertEndOffset(ee, x, W), ee;
      }
    },
    61836: function (s, x, W) {
      "use strict";
      function trim(s, { dir: x = "left" } = {}) {
        let W = "string" == typeof s ? s.replace("0x", "") : s,
          X = 0;
        for (
          let s = 0;
          s < W.length - 1 &&
          "0" === W["left" === x ? s : W.length - s - 1].toString();
          s++
        )
          X++;
        return ((W = "left" === x ? W.slice(X) : W.slice(0, W.length - X)),
        "string" == typeof s)
          ? (1 === W.length && "right" === x && (W = `${W}0`),
            `0x${W.length % 2 == 1 ? `0${W}` : W}`)
          : W;
      }
      W.d(x, {
        f: function () {
          return trim;
        },
      });
    },
    95946: function (s, x, W) {
      "use strict";
      W.d(x, {
        XA: function () {
          return hexToBool;
        },
        Yf: function () {
          return assertSize;
        },
        ly: function () {
          return hexToNumber;
        },
        rR: function () {
          return hexToString;
        },
        y_: function () {
          return hexToBigInt;
        },
      });
      var X = W(87788),
        ee = W(39135),
        et = W(61836),
        er = W(11187);
      function assertSize(s, { size: x }) {
        if ((0, ee.d)(s) > x)
          throw new X.M6({ givenSize: (0, ee.d)(s), maxSize: x });
      }
      function hexToBigInt(s, x = {}) {
        let { signed: W } = x;
        x.size && assertSize(s, { size: x.size });
        let X = BigInt(s);
        if (!W) return X;
        let ee = (s.length - 2) / 2,
          et = (1n << (8n * BigInt(ee) - 1n)) - 1n;
        return X <= et ? X : X - BigInt(`0x${"f".padStart(2 * ee, "f")}`) - 1n;
      }
      function hexToBool(s, x = {}) {
        let W = s;
        if (
          (x.size && (assertSize(W, { size: x.size }), (W = (0, et.f)(W))),
          "0x00" === (0, et.f)(W))
        )
          return !1;
        if ("0x01" === (0, et.f)(W)) return !0;
        throw new X.Cd(W);
      }
      function hexToNumber(s, x = {}) {
        return Number(hexToBigInt(s, x));
      }
      function hexToString(s, x = {}) {
        let W = (0, er.nr)(s);
        return (
          x.size &&
            (assertSize(W, { size: x.size }),
            (W = (0, et.f)(W, { dir: "right" }))),
          new TextDecoder().decode(W)
        );
      }
    },
    11187: function (s, x, W) {
      "use strict";
      W.d(x, {
        O0: function () {
          return toBytes;
        },
        nr: function () {
          return hexToBytes;
        },
        qX: function () {
          return stringToBytes;
        },
      });
      var X = W(36117),
        ee = W(15102),
        et = W(61769),
        er = W(95946),
        ei = W(92106);
      let eo = new TextEncoder();
      function toBytes(s, x = {}) {
        return "number" == typeof s || "bigint" == typeof s
          ? (function (s, x) {
              let W = (0, ei.eC)(s, x);
              return hexToBytes(W);
            })(s, x)
          : "boolean" == typeof s
          ? (function (s, x = {}) {
              let W = new Uint8Array(1);
              return ((W[0] = Number(s)), "number" == typeof x.size)
                ? ((0, er.Yf)(W, { size: x.size }),
                  (0, et.vk)(W, { size: x.size }))
                : W;
            })(s, x)
          : (0, ee.v)(s)
          ? hexToBytes(s, x)
          : stringToBytes(s, x);
      }
      let ea = { zero: 48, nine: 57, A: 65, F: 70, a: 97, f: 102 };
      function charCodeToBase16(s) {
        return s >= ea.zero && s <= ea.nine
          ? s - ea.zero
          : s >= ea.A && s <= ea.F
          ? s - (ea.A - 10)
          : s >= ea.a && s <= ea.f
          ? s - (ea.a - 10)
          : void 0;
      }
      function hexToBytes(s, x = {}) {
        let W = s;
        x.size &&
          ((0, er.Yf)(W, { size: x.size }),
          (W = (0, et.vk)(W, { dir: "right", size: x.size })));
        let ee = W.slice(2);
        ee.length % 2 && (ee = `0${ee}`);
        let ei = ee.length / 2,
          eo = new Uint8Array(ei);
        for (let s = 0, x = 0; s < ei; s++) {
          let W = charCodeToBase16(ee.charCodeAt(x++)),
            et = charCodeToBase16(ee.charCodeAt(x++));
          if (void 0 === W || void 0 === et)
            throw new X.G(
              `Invalid byte sequence ("${ee[x - 2]}${ee[x - 1]}" in "${ee}").`
            );
          eo[s] = 16 * W + et;
        }
        return eo;
      }
      function stringToBytes(s, x = {}) {
        let W = eo.encode(s);
        return "number" == typeof x.size
          ? ((0, er.Yf)(W, { size: x.size }),
            (0, et.vk)(W, { dir: "right", size: x.size }))
          : W;
      }
    },
    92106: function (s, x, W) {
      "use strict";
      W.d(x, {
        $G: function () {
          return stringToHex;
        },
        C4: function () {
          return boolToHex;
        },
        NC: function () {
          return toHex;
        },
        ci: function () {
          return bytesToHex;
        },
        eC: function () {
          return numberToHex;
        },
      });
      var X = W(87788),
        ee = W(61769),
        et = W(95946);
      let er = Array.from({ length: 256 }, (s, x) =>
        x.toString(16).padStart(2, "0")
      );
      function toHex(s, x = {}) {
        return "number" == typeof s || "bigint" == typeof s
          ? numberToHex(s, x)
          : "string" == typeof s
          ? stringToHex(s, x)
          : "boolean" == typeof s
          ? boolToHex(s, x)
          : bytesToHex(s, x);
      }
      function boolToHex(s, x = {}) {
        let W = `0x${Number(s)}`;
        return "number" == typeof x.size
          ? ((0, et.Yf)(W, { size: x.size }), (0, ee.vk)(W, { size: x.size }))
          : W;
      }
      function bytesToHex(s, x = {}) {
        let W = "";
        for (let x = 0; x < s.length; x++) W += er[s[x]];
        let X = `0x${W}`;
        return "number" == typeof x.size
          ? ((0, et.Yf)(X, { size: x.size }),
            (0, ee.vk)(X, { dir: "right", size: x.size }))
          : X;
      }
      function numberToHex(s, x = {}) {
        let W;
        let { signed: et, size: er } = x,
          ei = BigInt(s);
        er
          ? (W = et
              ? (1n << (8n * BigInt(er) - 1n)) - 1n
              : 2n ** (8n * BigInt(er)) - 1n)
          : "number" == typeof s && (W = BigInt(Number.MAX_SAFE_INTEGER));
        let eo = "bigint" == typeof W && et ? -W - 1n : 0;
        if ((W && ei > W) || ei < eo) {
          let x = "bigint" == typeof s ? "n" : "";
          throw new X.J5({
            max: W ? `${W}${x}` : void 0,
            min: `${eo}${x}`,
            signed: et,
            size: er,
            value: `${s}${x}`,
          });
        }
        let ea = `0x${(et && ei < 0
          ? (1n << BigInt(8 * er)) + BigInt(ei)
          : ei
        ).toString(16)}`;
        return er ? (0, ee.vk)(ea, { size: er }) : ea;
      }
      let ei = new TextEncoder();
      function stringToHex(s, x = {}) {
        let W = ei.encode(s);
        return bytesToHex(W, x);
      }
    },
    11511: function (s, x, W) {
      "use strict";
      W.d(x, {
        i: function () {
          return encodedLabelToLabelhash;
        },
      });
      var X = W(15102);
      function encodedLabelToLabelhash(s) {
        if (66 !== s.length || 0 !== s.indexOf("[") || 65 !== s.indexOf("]"))
          return null;
        let x = `0x${s.slice(1, 65)}`;
        return (0, X.v)(x) ? x : null;
      }
    },
    74526: function (s, x, W) {
      "use strict";
      W.d(x, {
        c: function () {
          return isNullUniversalResolverError;
        },
      });
      var X = W(21746),
        ee = W(36117),
        et = W(97405);
      function isNullUniversalResolverError(s, x) {
        if (!(s instanceof ee.G)) return !1;
        let W = s.walk((s) => s instanceof et.Lu);
        return (
          W instanceof et.Lu &&
          (!!(
            W.data?.errorName === "ResolverNotFound" ||
            W.data?.errorName === "ResolverWildcardNotSupported" ||
            W.data?.errorName === "ResolverNotContract" ||
            W.data?.errorName === "ResolverError" ||
            W.data?.errorName === "HttpError" ||
            W.reason?.includes(
              "Wildcard on non-extended resolvers is not supported"
            )
          ) ||
            ("reverse" === x && W.reason === X.$[50]))
        );
      }
    },
    75719: function (s, x, W) {
      "use strict";
      W.d(x, {
        V: function () {
          return namehash;
        },
      });
      var X = W(57040),
        ee = W(11187),
        et = W(92106),
        er = W(91734),
        ei = W(11511);
      function namehash(s) {
        let x = new Uint8Array(32).fill(0);
        if (!s) return (0, et.ci)(x);
        let W = s.split(".");
        for (let s = W.length - 1; s >= 0; s -= 1) {
          let et = (0, ei.i)(W[s]),
            eo = et ? (0, ee.O0)(et) : (0, er.w)((0, ee.qX)(W[s]), "bytes");
          x = (0, er.w)((0, X.zo)([x, eo]), "bytes");
        }
        return (0, et.ci)(x);
      }
    },
    48063: function (s, x, W) {
      "use strict";
      W.d(x, {
        T: function () {
          return packetToBytes;
        },
      });
      var X = W(11187),
        ee = W(92106),
        et = W(91734),
        er = W(11511);
      function packetToBytes(s) {
        let x = s.replace(/^\.|\.$/gm, "");
        if (0 === x.length) return new Uint8Array(1);
        let W = new Uint8Array((0, X.qX)(x).byteLength + 2),
          ei = 0,
          eo = x.split(".");
        for (let s = 0; s < eo.length; s++) {
          let x = (0, X.qX)(eo[s]);
          if (x.byteLength > 255) {
            var ea;
            x = (0, X.qX)(
              ((ea = (function (s) {
                let x = new Uint8Array(32).fill(0);
                return s
                  ? (0, er.i)(s) || (0, et.w)((0, X.qX)(s))
                  : (0, ee.ci)(x);
              })(eo[s])),
              `[${ea.slice(2)}]`)
            );
          }
          (W[ei] = x.length), W.set(x, ei + 1), (ei += x.length + 1);
        }
        return W.byteLength !== ei + 1 ? W.slice(0, ei + 1) : W;
      }
    },
    87502: function (s, x, W) {
      "use strict";
      W.d(x, {
        P: function () {
          return getCallError;
        },
      });
      var X = W(97405),
        ee = W(26445),
        et = W(87469);
      function getCallError(s, { docsPath: x, ...W }) {
        let er = (() => {
          let x = (0, et.k)(s, W);
          return x instanceof ee.cj ? s : x;
        })();
        return new X.cg(er, { docsPath: x, ...W });
      }
    },
    72365: function (s, x, W) {
      "use strict";
      W.d(x, {
        S: function () {
          return getContractError;
        },
      });
      var X = W(57412),
        ee = W(36117),
        et = W(97405),
        er = W(78863),
        ei = W(39028);
      function getContractError(
        s,
        {
          abi: x,
          address: W,
          args: eo,
          docsPath: ea,
          functionName: es,
          sender: el,
        }
      ) {
        let ec =
            s instanceof et.VQ
              ? s
              : s instanceof ee.G
              ? s.walk((s) => "data" in s) || s.walk()
              : {},
          {
            code: eu,
            data: ed,
            details: eh,
            message: ep,
            shortMessage: ef,
          } = ec,
          eg =
            s instanceof X.wb
              ? new et.Dk({ functionName: es })
              : [3, ei.XS.code].includes(eu) && (ed || eh || ep || ef)
              ? new et.Lu({
                  abi: x,
                  data: "object" == typeof ed ? ed.data : ed,
                  functionName: es,
                  message: ec instanceof er.bs ? eh : ef ?? ep,
                })
              : s;
        return new et.uq(eg, {
          abi: x,
          args: eo,
          contractAddress: W,
          docsPath: ea,
          functionName: es,
          sender: el,
        });
      }
    },
    87469: function (s, x, W) {
      "use strict";
      W.d(x, {
        k: function () {
          return getNodeError;
        },
      });
      var X = W(36117),
        ee = W(26445);
      function getNodeError(s, x) {
        let W = (s.details || "").toLowerCase(),
          et = s instanceof X.G ? s.walk((s) => s?.code === ee.M_.code) : s;
        return et instanceof X.G
          ? new ee.M_({ cause: s, message: et.details })
          : ee.M_.nodeMessage.test(W)
          ? new ee.M_({ cause: s, message: s.details })
          : ee.Hh.nodeMessage.test(W)
          ? new ee.Hh({ cause: s, maxFeePerGas: x?.maxFeePerGas })
          : ee.G$.nodeMessage.test(W)
          ? new ee.G$({ cause: s, maxFeePerGas: x?.maxFeePerGas })
          : ee.ZI.nodeMessage.test(W)
          ? new ee.ZI({ cause: s, nonce: x?.nonce })
          : ee.vU.nodeMessage.test(W)
          ? new ee.vU({ cause: s, nonce: x?.nonce })
          : ee.se.nodeMessage.test(W)
          ? new ee.se({ cause: s, nonce: x?.nonce })
          : ee.C_.nodeMessage.test(W)
          ? new ee.C_({ cause: s })
          : ee.WF.nodeMessage.test(W)
          ? new ee.WF({ cause: s, gas: x?.gas })
          : ee.dR.nodeMessage.test(W)
          ? new ee.dR({ cause: s, gas: x?.gas })
          : ee.pZ.nodeMessage.test(W)
          ? new ee.pZ({ cause: s })
          : ee.cs.nodeMessage.test(W)
          ? new ee.cs({
              cause: s,
              maxFeePerGas: x?.maxFeePerGas,
              maxPriorityFeePerGas: x?.maxPriorityFeePerGas,
            })
          : new ee.cj({ cause: s });
      }
    },
    17211: function (s, x, W) {
      "use strict";
      function createFilterRequestScope(s, { method: x }) {
        let W = {};
        return (
          "fallback" === s.transport.type &&
            s.transport.onResponse?.(
              ({ method: s, response: X, status: ee, transport: et }) => {
                "success" === ee && x === s && (W[X] = et.request);
              }
            ),
          (x) => W[x] || s.request
        );
      }
      W.d(x, {
        g: function () {
          return createFilterRequestScope;
        },
      });
    },
    43310: function (s, x, W) {
      "use strict";
      W.d(x, {
        Z: function () {
          return formatBlock;
        },
      });
      var X = W(6073);
      function formatBlock(s) {
        let x = (s.transactions ?? []).map((s) =>
          "string" == typeof s ? s : (0, X.Tr)(s)
        );
        return {
          ...s,
          baseFeePerGas: s.baseFeePerGas ? BigInt(s.baseFeePerGas) : null,
          blobGasUsed: s.blobGasUsed ? BigInt(s.blobGasUsed) : void 0,
          difficulty: s.difficulty ? BigInt(s.difficulty) : void 0,
          excessBlobGas: s.excessBlobGas ? BigInt(s.excessBlobGas) : void 0,
          gasLimit: s.gasLimit ? BigInt(s.gasLimit) : void 0,
          gasUsed: s.gasUsed ? BigInt(s.gasUsed) : void 0,
          hash: s.hash ? s.hash : null,
          logsBloom: s.logsBloom ? s.logsBloom : null,
          nonce: s.nonce ? s.nonce : null,
          number: s.number ? BigInt(s.number) : null,
          size: s.size ? BigInt(s.size) : void 0,
          timestamp: s.timestamp ? BigInt(s.timestamp) : void 0,
          transactions: x,
          totalDifficulty: s.totalDifficulty ? BigInt(s.totalDifficulty) : null,
        };
      }
    },
    61163: function (s, x, W) {
      "use strict";
      function extract(s, { format: x }) {
        if (!x) return {};
        let W = {},
          X = x(s || {});
        return (
          !(function extract_(x) {
            let X = Object.keys(x);
            for (let ee of X)
              ee in s && (W[ee] = s[ee]),
                x[ee] &&
                  "object" == typeof x[ee] &&
                  !Array.isArray(x[ee]) &&
                  extract_(x[ee]);
          })(X),
          W
        );
      }
      W.d(x, {
        K: function () {
          return extract;
        },
      });
    },
    53992: function (s, x, W) {
      "use strict";
      function formatLog(s, { args: x, eventName: W } = {}) {
        return {
          ...s,
          blockHash: s.blockHash ? s.blockHash : null,
          blockNumber: s.blockNumber ? BigInt(s.blockNumber) : null,
          logIndex: s.logIndex ? Number(s.logIndex) : null,
          transactionHash: s.transactionHash ? s.transactionHash : null,
          transactionIndex: s.transactionIndex
            ? Number(s.transactionIndex)
            : null,
          ...(W ? { args: x, eventName: W } : {}),
        };
      }
      W.d(x, {
        U: function () {
          return formatLog;
        },
      });
    },
    6073: function (s, x, W) {
      "use strict";
      W.d(x, {
        Tr: function () {
          return formatTransaction;
        },
        c8: function () {
          return ee;
        },
      });
      var X = W(95946);
      let ee = {
        "0x0": "legacy",
        "0x1": "eip2930",
        "0x2": "eip1559",
        "0x3": "eip4844",
        "0x4": "eip7702",
      };
      function formatTransaction(s) {
        let x = {
          ...s,
          blockHash: s.blockHash ? s.blockHash : null,
          blockNumber: s.blockNumber ? BigInt(s.blockNumber) : null,
          chainId: s.chainId ? (0, X.ly)(s.chainId) : void 0,
          gas: s.gas ? BigInt(s.gas) : void 0,
          gasPrice: s.gasPrice ? BigInt(s.gasPrice) : void 0,
          maxFeePerBlobGas: s.maxFeePerBlobGas
            ? BigInt(s.maxFeePerBlobGas)
            : void 0,
          maxFeePerGas: s.maxFeePerGas ? BigInt(s.maxFeePerGas) : void 0,
          maxPriorityFeePerGas: s.maxPriorityFeePerGas
            ? BigInt(s.maxPriorityFeePerGas)
            : void 0,
          nonce: s.nonce ? (0, X.ly)(s.nonce) : void 0,
          to: s.to ? s.to : null,
          transactionIndex: s.transactionIndex
            ? Number(s.transactionIndex)
            : null,
          type: s.type ? ee[s.type] : void 0,
          typeHex: s.type ? s.type : void 0,
          value: s.value ? BigInt(s.value) : void 0,
          v: s.v ? BigInt(s.v) : void 0,
        };
        return (
          s.authorizationList &&
            (x.authorizationList = s.authorizationList.map((s) => ({
              contractAddress: s.address,
              chainId: Number(s.chainId),
              nonce: Number(s.nonce),
              r: s.r,
              s: s.s,
              yParity: Number(s.yParity),
            }))),
          (x.yParity = (() => {
            if (s.yParity) return Number(s.yParity);
            if ("bigint" == typeof x.v) {
              if (0n === x.v || 27n === x.v) return 0;
              if (1n === x.v || 28n === x.v) return 1;
              if (x.v >= 35n) return x.v % 2n === 0n ? 1 : 0;
            }
          })()),
          "legacy" === x.type &&
            (delete x.accessList,
            delete x.maxFeePerBlobGas,
            delete x.maxFeePerGas,
            delete x.maxPriorityFeePerGas,
            delete x.yParity),
          "eip2930" === x.type &&
            (delete x.maxFeePerBlobGas,
            delete x.maxFeePerGas,
            delete x.maxPriorityFeePerGas),
          "eip1559" === x.type && delete x.maxFeePerBlobGas,
          x
        );
      }
    },
    74688: function (s, x, W) {
      "use strict";
      W.d(x, {
        tG: function () {
          return formatTransactionRequest;
        },
      });
      var X = W(92106);
      let ee = {
        legacy: "0x0",
        eip2930: "0x1",
        eip1559: "0x2",
        eip4844: "0x3",
        eip7702: "0x4",
      };
      function formatTransactionRequest(s) {
        let x = {};
        return (
          void 0 !== s.authorizationList &&
            (x.authorizationList = s.authorizationList.map((s) => ({
              address: s.contractAddress,
              r: s.r,
              s: s.s,
              chainId: (0, X.eC)(s.chainId),
              nonce: (0, X.eC)(s.nonce),
              ...(void 0 !== s.yParity
                ? { yParity: (0, X.eC)(s.yParity) }
                : {}),
              ...(void 0 !== s.v && void 0 === s.yParity
                ? { v: (0, X.eC)(s.v) }
                : {}),
            }))),
          void 0 !== s.accessList && (x.accessList = s.accessList),
          void 0 !== s.blobVersionedHashes &&
            (x.blobVersionedHashes = s.blobVersionedHashes),
          void 0 !== s.blobs &&
            ("string" != typeof s.blobs[0]
              ? (x.blobs = s.blobs.map((s) => (0, X.ci)(s)))
              : (x.blobs = s.blobs)),
          void 0 !== s.data && (x.data = s.data),
          void 0 !== s.from && (x.from = s.from),
          void 0 !== s.gas && (x.gas = (0, X.eC)(s.gas)),
          void 0 !== s.gasPrice && (x.gasPrice = (0, X.eC)(s.gasPrice)),
          void 0 !== s.maxFeePerBlobGas &&
            (x.maxFeePerBlobGas = (0, X.eC)(s.maxFeePerBlobGas)),
          void 0 !== s.maxFeePerGas &&
            (x.maxFeePerGas = (0, X.eC)(s.maxFeePerGas)),
          void 0 !== s.maxPriorityFeePerGas &&
            (x.maxPriorityFeePerGas = (0, X.eC)(s.maxPriorityFeePerGas)),
          void 0 !== s.nonce && (x.nonce = (0, X.eC)(s.nonce)),
          void 0 !== s.to && (x.to = s.to),
          void 0 !== s.type && (x.type = ee[s.type]),
          void 0 !== s.value && (x.value = (0, X.eC)(s.value)),
          x
        );
      }
    },
    93714: function (s, x, W) {
      "use strict";
      function getAction(s, x, W) {
        let X = s[x.name];
        if ("function" == typeof X) return X;
        let ee = s[W];
        return "function" == typeof ee ? ee : (W) => x(s, W);
      }
      W.d(x, {
        s: function () {
          return getAction;
        },
      });
    },
    91734: function (s, x, W) {
      "use strict";
      W.d(x, {
        w: function () {
          return keccak256;
        },
      });
      var X = W(41656);
      let ee = BigInt(4294967296 - 1),
        et = BigInt(32),
        rotlSH = (s, x, W) => (s << W) | (x >>> (32 - W)),
        rotlSL = (s, x, W) => (x << W) | (s >>> (32 - W)),
        rotlBH = (s, x, W) => (x << (W - 32)) | (s >>> (64 - W)),
        rotlBL = (s, x, W) => (s << (W - 32)) | (x >>> (64 - W));
      var er = W(15448);
      let ei = [],
        eo = [],
        ea = [],
        es = BigInt(0),
        el = BigInt(1),
        ec = BigInt(2),
        eu = BigInt(7),
        ed = BigInt(256),
        eh = BigInt(113);
      for (let s = 0, x = el, W = 1, X = 0; s < 24; s++) {
        ([W, X] = [X, (2 * W + 3 * X) % 5]),
          ei.push(2 * (5 * X + W)),
          eo.push((((s + 1) * (s + 2)) / 2) % 64);
        let ee = es;
        for (let s = 0; s < 7; s++)
          (x = ((x << el) ^ ((x >> eu) * eh)) % ed) & ec &&
            (ee ^= el << ((el << BigInt(s)) - el));
        ea.push(ee);
      }
      let [ep, ef] = (function (s, x = !1) {
          let W = new Uint32Array(s.length),
            X = new Uint32Array(s.length);
          for (let er = 0; er < s.length; er++) {
            let { h: ei, l: eo } = (function (s, x = !1) {
              return x
                ? { h: Number(s & ee), l: Number((s >> et) & ee) }
                : { h: 0 | Number((s >> et) & ee), l: 0 | Number(s & ee) };
            })(s[er], x);
            [W[er], X[er]] = [ei, eo];
          }
          return [W, X];
        })(ea, !0),
        rotlH = (s, x, W) => (W > 32 ? rotlBH(s, x, W) : rotlSH(s, x, W)),
        rotlL = (s, x, W) => (W > 32 ? rotlBL(s, x, W) : rotlSL(s, x, W));
      let Keccak = class Keccak extends er.kb {
        constructor(s, x, W, ee = !1, et = 24) {
          if (
            (super(),
            (this.blockLen = s),
            (this.suffix = x),
            (this.outputLen = W),
            (this.enableXOF = ee),
            (this.rounds = et),
            (this.pos = 0),
            (this.posOut = 0),
            (this.finished = !1),
            (this.destroyed = !1),
            (0, X.k8)(W),
            0 >= this.blockLen || this.blockLen >= 200)
          )
            throw Error("Sha3 supports only keccak-f1600 function");
          (this.state = new Uint8Array(200)),
            (this.state32 = (0, er.Jq)(this.state));
        }
        keccak() {
          er.iA || (0, er.l1)(this.state32),
            (function (s, x = 24) {
              let W = new Uint32Array(10);
              for (let X = 24 - x; X < 24; X++) {
                for (let x = 0; x < 10; x++)
                  W[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
                for (let x = 0; x < 10; x += 2) {
                  let X = (x + 8) % 10,
                    ee = (x + 2) % 10,
                    et = W[ee],
                    er = W[ee + 1],
                    ei = rotlH(et, er, 1) ^ W[X],
                    eo = rotlL(et, er, 1) ^ W[X + 1];
                  for (let W = 0; W < 50; W += 10)
                    (s[x + W] ^= ei), (s[x + W + 1] ^= eo);
                }
                let x = s[2],
                  ee = s[3];
                for (let W = 0; W < 24; W++) {
                  let X = eo[W],
                    et = rotlH(x, ee, X),
                    er = rotlL(x, ee, X),
                    ea = ei[W];
                  (x = s[ea]), (ee = s[ea + 1]), (s[ea] = et), (s[ea + 1] = er);
                }
                for (let x = 0; x < 50; x += 10) {
                  for (let X = 0; X < 10; X++) W[X] = s[x + X];
                  for (let X = 0; X < 10; X++)
                    s[x + X] ^= ~W[(X + 2) % 10] & W[(X + 4) % 10];
                }
                (s[0] ^= ep[X]), (s[1] ^= ef[X]);
              }
              W.fill(0);
            })(this.state32, this.rounds),
            er.iA || (0, er.l1)(this.state32),
            (this.posOut = 0),
            (this.pos = 0);
        }
        update(s) {
          (0, X.$h)(this);
          let { blockLen: x, state: W } = this;
          s = (0, er.O0)(s);
          let ee = s.length;
          for (let X = 0; X < ee; ) {
            let et = Math.min(x - this.pos, ee - X);
            for (let x = 0; x < et; x++) W[this.pos++] ^= s[X++];
            this.pos === x && this.keccak();
          }
          return this;
        }
        finish() {
          if (this.finished) return;
          this.finished = !0;
          let { state: s, suffix: x, pos: W, blockLen: X } = this;
          (s[W] ^= x),
            (128 & x) != 0 && W === X - 1 && this.keccak(),
            (s[X - 1] ^= 128),
            this.keccak();
        }
        writeInto(s) {
          (0, X.$h)(this, !1), (0, X.gk)(s), this.finish();
          let x = this.state,
            { blockLen: W } = this;
          for (let X = 0, ee = s.length; X < ee; ) {
            this.posOut >= W && this.keccak();
            let et = Math.min(W - this.posOut, ee - X);
            s.set(x.subarray(this.posOut, this.posOut + et), X),
              (this.posOut += et),
              (X += et);
          }
          return s;
        }
        xofInto(s) {
          if (!this.enableXOF)
            throw Error("XOF is not possible for this instance");
          return this.writeInto(s);
        }
        xof(s) {
          return (0, X.k8)(s), this.xofInto(new Uint8Array(s));
        }
        digestInto(s) {
          if (((0, X.eB)(s, this), this.finished))
            throw Error("digest() was already called");
          return this.writeInto(s), this.destroy(), s;
        }
        digest() {
          return this.digestInto(new Uint8Array(this.outputLen));
        }
        destroy() {
          (this.destroyed = !0), this.state.fill(0);
        }
        _cloneInto(s) {
          let {
            blockLen: x,
            suffix: W,
            outputLen: X,
            rounds: ee,
            enableXOF: et,
          } = this;
          return (
            s || (s = new Keccak(x, W, X, et, ee)),
            s.state32.set(this.state32),
            (s.pos = this.pos),
            (s.posOut = this.posOut),
            (s.finished = this.finished),
            (s.rounds = ee),
            (s.suffix = W),
            (s.outputLen = X),
            (s.enableXOF = et),
            (s.destroyed = this.destroyed),
            s
          );
        }
      };
      let eg = (0, er.hE)(() => new Keccak(136, 1, 32));
      var em = W(15102),
        ew = W(11187),
        eb = W(92106);
      function keccak256(s, x) {
        let W = eg((0, em.v)(s, { strict: !1 }) ? (0, ew.O0)(s) : s);
        return "bytes" === (x || "hex") ? W : (0, eb.NC)(W);
      }
    },
    96005: function (s, x, W) {
      "use strict";
      W.d(x, {
        n: function () {
          return ee;
        },
      });
      var X = W(65526);
      let ee = X.r;
    },
    58034: function (s, x, W) {
      "use strict";
      W.d(x, {
        C: function () {
          return toFunctionSelector;
        },
      });
      var X = W(3972),
        ee = W(65526);
      let toFunctionSelector = (s) => (0, X.tP)((0, ee.r)(s), 0, 4);
    },
    65526: function (s, x, W) {
      "use strict";
      W.d(x, {
        r: function () {
          return toSignatureHash;
        },
      });
      var X = W(11187),
        ee = W(91734);
      let hash = (s) => (0, ee.w)((0, X.O0)(s));
      var et = W(84917);
      let er = /^tuple(?<array>(\[(\d*)\])*)$/;
      function formatAbiParameters(s) {
        let x = "",
          W = s.length;
        for (let X = 0; X < W; X++) {
          let ee = s[X];
          (x += (function formatAbiParameter(s) {
            let x = s.type;
            if (er.test(s.type) && "components" in s) {
              x = "(";
              let W = s.components.length;
              for (let X = 0; X < W; X++) {
                let ee = s.components[X];
                (x += formatAbiParameter(ee)), X < W - 1 && (x += ", ");
              }
              let X = (0, et.Zw)(er, s.type);
              return (
                (x += `)${X?.array ?? ""}`),
                formatAbiParameter({ ...s, type: x })
              );
            }
            return ("indexed" in s && s.indexed && (x = `${x} indexed`), s.name)
              ? `${x} ${s.name}`
              : x;
          })(ee)),
            X !== W - 1 && (x += ", ");
        }
        return x;
      }
      var ei = W(36117);
      let toSignature = (s) => {
        let x =
          "string" == typeof s
            ? s
            : "function" === s.type
            ? `function ${s.name}(${formatAbiParameters(s.inputs)})${
                s.stateMutability && "nonpayable" !== s.stateMutability
                  ? ` ${s.stateMutability}`
                  : ""
              }${
                s.outputs?.length
                  ? ` returns (${formatAbiParameters(s.outputs)})`
                  : ""
              }`
            : "event" === s.type
            ? `event ${s.name}(${formatAbiParameters(s.inputs)})`
            : "error" === s.type
            ? `error ${s.name}(${formatAbiParameters(s.inputs)})`
            : "constructor" === s.type
            ? `constructor(${formatAbiParameters(s.inputs)})${
                "payable" === s.stateMutability ? " payable" : ""
              }`
            : "fallback" === s.type
            ? `fallback() external${
                "payable" === s.stateMutability ? " payable" : ""
              }`
            : "receive() external payable";
        return (function (s) {
          let x = !0,
            W = "",
            X = 0,
            ee = "",
            et = !1;
          for (let er = 0; er < s.length; er++) {
            let ei = s[er];
            if (
              (["(", ")", ","].includes(ei) && (x = !0),
              "(" === ei && X++,
              ")" === ei && X--,
              x)
            ) {
              if (0 === X) {
                if (" " === ei && ["event", "function", ""].includes(ee))
                  ee = "";
                else if (((ee += ei), ")" === ei)) {
                  et = !0;
                  break;
                }
                continue;
              }
              if (" " === ei) {
                "," !== s[er - 1] &&
                  "," !== W &&
                  ",(" !== W &&
                  ((W = ""), (x = !1));
                continue;
              }
              (ee += ei), (W += ei);
            }
          }
          if (!et) throw new ei.G("Unable to normalize signature.");
          return ee;
        })(x);
      };
      function toSignatureHash(s) {
        return hash(toSignature(s));
      }
    },
    79773: function (s, x, W) {
      "use strict";
      W.d(x, {
        k: function () {
          return LruMap;
        },
      });
      let LruMap = class LruMap extends Map {
        constructor(s) {
          super(),
            Object.defineProperty(this, "maxSize", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
            (this.maxSize = s);
        }
        get(s) {
          let x = super.get(s);
          return (
            super.has(s) && void 0 !== x && (this.delete(s), super.set(s, x)), x
          );
        }
        set(s, x) {
          if ((super.set(s, x), this.maxSize && this.size > this.maxSize)) {
            let s = this.keys().next().value;
            s && this.delete(s);
          }
          return this;
        }
      };
    },
    22514: function (s, x, W) {
      "use strict";
      W.d(x, {
        N7: function () {
          return observe;
        },
      });
      let X = new Map(),
        ee = new Map(),
        et = 0;
      function observe(s, x, W) {
        let er = ++et,
          getListeners = () => X.get(s) || [],
          unsubscribe = () => {
            let x = getListeners();
            X.set(
              s,
              x.filter((s) => s.id !== er)
            );
          },
          unwatch = () => {
            let x = getListeners();
            if (!x.some((s) => s.id === er)) return;
            let W = ee.get(s);
            1 === x.length && W && W(), unsubscribe();
          },
          ei = getListeners();
        if ((X.set(s, [...ei, { id: er, fns: x }]), ei && ei.length > 0))
          return unwatch;
        let eo = {};
        for (let s in x)
          eo[s] = (...x) => {
            let W = getListeners();
            if (0 !== W.length) for (let X of W) X.fns[s]?.(...x);
          };
        let ea = W(eo);
        return "function" == typeof ea && ee.set(s, ea), unwatch;
      }
    },
    23: function (s, x, W) {
      "use strict";
      W.d(x, {
        $: function () {
          return poll;
        },
      });
      var X = W(62914);
      function poll(s, { emitOnBegin: x, initialWaitTime: W, interval: ee }) {
        let et = !0,
          unwatch = () => (et = !1),
          watch = async () => {
            let er;
            x && (er = await s({ unpoll: unwatch }));
            let ei = (await W?.(er)) ?? ee;
            await (0, X.D)(ei);
            let poll = async () => {
              et && (await s({ unpoll: unwatch }), await (0, X.D)(ee), poll());
            };
            poll();
          };
        return watch(), unwatch;
      }
    },
    32357: function (s, x, W) {
      "use strict";
      W.d(x, {
        S: function () {
          return createBatchScheduler;
        },
      });
      var X = W(15116);
      let ee = new Map();
      function createBatchScheduler({
        fn: s,
        id: x,
        shouldSplitBatch: W,
        wait: et = 0,
        sort: er,
      }) {
        let exec = async () => {
            let x = getScheduler();
            flush();
            let W = x.map(({ args: s }) => s);
            0 !== W.length &&
              s(W)
                .then((s) => {
                  er && Array.isArray(s) && s.sort(er);
                  for (let W = 0; W < x.length; W++) {
                    let { resolve: X } = x[W];
                    X?.([s[W], s]);
                  }
                })
                .catch((s) => {
                  for (let W = 0; W < x.length; W++) {
                    let { reject: X } = x[W];
                    X?.(s);
                  }
                });
          },
          flush = () => ee.delete(x),
          getBatchedArgs = () => getScheduler().map(({ args: s }) => s),
          getScheduler = () => ee.get(x) || [],
          setScheduler = (s) => ee.set(x, [...getScheduler(), s]);
        return {
          flush,
          async schedule(s) {
            let { promise: x, resolve: ee, reject: er } = (0, X.n)(),
              ei = W?.([...getBatchedArgs(), s]);
            ei && exec();
            let eo = getScheduler().length > 0;
            return (
              eo
                ? setScheduler({ args: s, resolve: ee, reject: er })
                : (setScheduler({ args: s, resolve: ee, reject: er }),
                  setTimeout(exec, et)),
              x
            );
          },
        };
      }
    },
    15116: function (s, x, W) {
      "use strict";
      function withResolvers() {
        let resolve = () => void 0,
          reject = () => void 0,
          s = new Promise((s, x) => {
            (resolve = s), (reject = x);
          });
        return { promise: s, resolve, reject };
      }
      W.d(x, {
        n: function () {
          return withResolvers;
        },
      });
    },
    7760: function (s, x, W) {
      "use strict";
      W.d(x, {
        J: function () {
          return withRetry;
        },
      });
      var X = W(62914);
      function withRetry(
        s,
        { delay: x = 100, retryCount: W = 2, shouldRetry: ee = () => !0 } = {}
      ) {
        return new Promise((et, er) => {
          let attemptRetry = async ({ count: ei = 0 } = {}) => {
            let retry = async ({ error: s }) => {
              let W = "function" == typeof x ? x({ count: ei, error: s }) : x;
              W && (await (0, X.D)(W)), attemptRetry({ count: ei + 1 });
            };
            try {
              let x = await s();
              et(x);
            } catch (s) {
              if (ei < W && (await ee({ count: ei, error: s })))
                return retry({ error: s });
              er(s);
            }
          };
          attemptRetry();
        });
      }
    },
    60229: function (s, x, W) {
      "use strict";
      function withTimeout(
        s,
        { errorInstance: x = Error("timed out"), timeout: W, signal: X }
      ) {
        return new Promise((ee, et) => {
          (async () => {
            let er;
            try {
              let ei = new AbortController();
              W > 0 &&
                (er = setTimeout(() => {
                  X ? ei.abort() : et(x);
                }, W)),
                ee(await s({ signal: ei?.signal || null }));
            } catch (s) {
              s?.name === "AbortError" && et(x), et(s);
            } finally {
              clearTimeout(er);
            }
          })();
        });
      }
      W.d(x, {
        F: function () {
          return withTimeout;
        },
      });
    },
    24409: function (s, x, W) {
      "use strict";
      W.d(x, {
        eL: function () {
          return X;
        },
        lh: function () {
          return ee;
        },
      });
      let X = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
        ee =
          /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
    },
    40112: function (s, x, W) {
      "use strict";
      W.d(x, {
        R: function () {
          return recoverAddress;
        },
      });
      var X = W(45775),
        ee = W(91734),
        et = W(15102),
        er = W(95946),
        ei = W(92106);
      async function recoverPublicKey({ hash: s, signature: x }) {
        let X = (0, et.v)(s) ? s : (0, ei.NC)(s),
          { secp256k1: ee } = await W.e(9970).then(W.bind(W, 19970)),
          eo = (() => {
            if ("object" == typeof x && "r" in x && "s" in x) {
              let { r: s, s: W, v: X, yParity: et } = x,
                ei = Number(et ?? X),
                eo = toRecoveryBit(ei);
              return new ee.Signature(
                (0, er.y_)(s),
                (0, er.y_)(W)
              ).addRecoveryBit(eo);
            }
            let s = (0, et.v)(x) ? x : (0, ei.NC)(x),
              W = (0, er.ly)(`0x${s.slice(130)}`),
              X = toRecoveryBit(W);
            return ee.Signature.fromCompact(s.substring(2, 130)).addRecoveryBit(
              X
            );
          })(),
          ea = eo.recoverPublicKey(X.substring(2)).toHex(!1);
        return `0x${ea}`;
      }
      function toRecoveryBit(s) {
        if (0 === s || 1 === s) return s;
        if (27 === s) return 0;
        if (28 === s) return 1;
        throw Error("Invalid yParityOrV value");
      }
      async function recoverAddress({ hash: s, signature: x }) {
        return (function (s) {
          let x = (0, ee.w)(`0x${s.substring(4)}`).substring(26);
          return (0, X.x)(`0x${x}`);
        })(await recoverPublicKey({ hash: s, signature: x }));
      }
    },
    50150: function (s, x, W) {
      "use strict";
      W.d(x, {
        mF: function () {
          return serializeStateOverride;
        },
      });
      var X = W(26087),
        ee = W(69760),
        et = W(20443),
        er = W(49321),
        ei = W(92106);
      function serializeStateMapping(s) {
        if (s && 0 !== s.length)
          return s.reduce((s, { slot: x, value: W }) => {
            if (66 !== x.length)
              throw new ee.W_({ size: x.length, targetSize: 66, type: "hex" });
            if (66 !== W.length)
              throw new ee.W_({ size: W.length, targetSize: 66, type: "hex" });
            return (s[x] = W), s;
          }, {});
      }
      function serializeStateOverride(s) {
        if (!s) return;
        let x = {};
        for (let { address: W, ...ee } of s) {
          if (!(0, er.U)(W, { strict: !1 })) throw new X.b({ address: W });
          if (x[W]) throw new et.Nc({ address: W });
          x[W] = (function (s) {
            let { balance: x, nonce: W, state: X, stateDiff: ee, code: er } = s,
              eo = {};
            if (
              (void 0 !== er && (eo.code = er),
              void 0 !== x && (eo.balance = (0, ei.eC)(x)),
              void 0 !== W && (eo.nonce = (0, ei.eC)(W)),
              void 0 !== X && (eo.state = serializeStateMapping(X)),
              void 0 !== ee)
            ) {
              if (eo.state) throw new et.Z8();
              eo.stateDiff = serializeStateMapping(ee);
            }
            return eo;
          })(ee);
        }
        return x;
      }
    },
    96070: function (s, x, W) {
      "use strict";
      W.d(x, {
        P: function () {
          return stringify;
        },
      });
      let stringify = (s, x, W) =>
        JSON.stringify(
          s,
          (s, W) => {
            let X = "bigint" == typeof W ? W.toString() : W;
            return "function" == typeof x ? x(s, X) : X;
          },
          W
        );
    },
    35721: function (s, x, W) {
      "use strict";
      W.d(x, {
        F: function () {
          return assertRequest;
        },
      });
      var X = W(14503);
      let ee = 2n ** 256n - 1n;
      var et = W(26087),
        er = W(26445),
        ei = W(33639),
        eo = W(49321);
      function assertRequest(s) {
        let {
            account: x,
            gasPrice: W,
            maxFeePerGas: ea,
            maxPriorityFeePerGas: es,
            to: el,
          } = s,
          ec = x ? (0, X.T)(x) : void 0;
        if (ec && !(0, eo.U)(ec.address))
          throw new et.b({ address: ec.address });
        if (el && !(0, eo.U)(el)) throw new et.b({ address: el });
        if (void 0 !== W && (void 0 !== ea || void 0 !== es)) throw new ei.xY();
        if (ea && ea > ee) throw new er.Hh({ maxFeePerGas: ea });
        if (es && ea && es > ea)
          throw new er.cs({ maxFeePerGas: ea, maxPriorityFeePerGas: es });
      }
    },
    75632: function (s, x, W) {
      "use strict";
      let X;
      W.d(x, {
        h: function () {
          return uid;
        },
      });
      let ee = 256;
      function uid(s = 11) {
        if (!X || ee + s > 512) {
          (X = ""), (ee = 0);
          for (let s = 0; s < 256; s++)
            X += ((256 + 256 * Math.random()) | 0).toString(16).substring(1);
        }
        return X.substring(ee, ee++ + s);
      }
    },
    39625: function (s, x, W) {
      "use strict";
      W.d(x, {
        d: function () {
          return formatEther;
        },
      });
      var X = W(84192),
        ee = W(15229);
      function formatEther(s, x = "wei") {
        return (0, ee.b)(s, X.ez[x]);
      }
    },
    67795: function (s, x, W) {
      "use strict";
      W.d(x, {
        o: function () {
          return formatGwei;
        },
      });
      var X = W(84192),
        ee = W(15229);
      function formatGwei(s, x = "wei") {
        return (0, ee.b)(s, X.Zn[x]);
      }
    },
    15229: function (s, x, W) {
      "use strict";
      function formatUnits(s, x) {
        let W = s.toString(),
          X = W.startsWith("-");
        X && (W = W.slice(1));
        let [ee, et] = [
          (W = W.padStart(x, "0")).slice(0, W.length - x),
          W.slice(W.length - x),
        ];
        return (
          (et = et.replace(/(0+)$/, "")),
          `${X ? "-" : ""}${ee || "0"}${et ? `.${et}` : ""}`
        );
      }
      W.d(x, {
        b: function () {
          return formatUnits;
        },
      });
    },
    48120: function (s, x, W) {
      "use strict";
      W.d(x, {
        v: function () {
          return parseUnits;
        },
      });
      var X = W(36117);
      let InvalidDecimalNumberError = class InvalidDecimalNumberError extends X.G {
        constructor({ value: s }) {
          super(`Number \`${s}\` is not a valid decimal number.`, {
            name: "InvalidDecimalNumberError",
          });
        }
      };
      function parseUnits(s, x) {
        if (!/^(-?)([0-9]*)\.?([0-9]*)$/.test(s))
          throw new InvalidDecimalNumberError({ value: s });
        let [W, X = "0"] = s.split("."),
          ee = W.startsWith("-");
        if ((ee && (W = W.slice(1)), (X = X.replace(/(0+)$/, "")), 0 === x))
          1 === Math.round(Number(`.${X}`)) && (W = `${BigInt(W) + 1n}`),
            (X = "");
        else if (X.length > x) {
          let [s, ee, et] = [X.slice(0, x - 1), X.slice(x - 1, x), X.slice(x)],
            er = Math.round(Number(`${ee}.${et}`));
          (X =
            er > 9
              ? `${BigInt(s) + BigInt(1)}0`.padStart(s.length + 1, "0")
              : `${s}${er}`).length > x &&
            ((X = X.slice(1)), (W = `${BigInt(W) + 1n}`)),
            (X = X.slice(0, x));
        } else X = X.padEnd(x, "0");
        return BigInt(`${ee ? "-" : ""}${W}${X}`);
      }
    },
    62914: function (s, x, W) {
      "use strict";
      async function wait(s) {
        return new Promise((x) => setTimeout(x, s));
      }
      W.d(x, {
        D: function () {
          return wait;
        },
      });
    },
    41656: function (s, x, W) {
      "use strict";
      function anumber(s) {
        if (!Number.isSafeInteger(s) || s < 0)
          throw Error("positive integer expected, got " + s);
      }
      function abytes(s, ...x) {
        if (
          !(
            s instanceof Uint8Array ||
            (ArrayBuffer.isView(s) && "Uint8Array" === s.constructor.name)
          )
        )
          throw Error("Uint8Array expected");
        if (x.length > 0 && !x.includes(s.length))
          throw Error(
            "Uint8Array expected of length " + x + ", got length=" + s.length
          );
      }
      function ahash(s) {
        if ("function" != typeof s || "function" != typeof s.create)
          throw Error("Hash should be wrapped by utils.wrapConstructor");
        anumber(s.outputLen), anumber(s.blockLen);
      }
      function aexists(s, x = !0) {
        if (s.destroyed) throw Error("Hash instance has been destroyed");
        if (x && s.finished)
          throw Error("Hash#digest() has already been called");
      }
      function aoutput(s, x) {
        abytes(s);
        let W = x.outputLen;
        if (s.length < W)
          throw Error(
            "digestInto() expects output buffer of length at least " + W
          );
      }
      W.d(x, {
        $h: function () {
          return aexists;
        },
        eB: function () {
          return aoutput;
        },
        gk: function () {
          return abytes;
        },
        k8: function () {
          return anumber;
        },
        z3: function () {
          return ahash;
        },
      });
    },
    3868: function (s, x, W) {
      "use strict";
      W.d(x, {
        JQ: function () {
          return eo;
        },
      });
      var X = W(41656),
        ee = W(15448);
      let HashMD = class HashMD extends ee.kb {
        constructor(s, x, W, X) {
          super(),
            (this.blockLen = s),
            (this.outputLen = x),
            (this.padOffset = W),
            (this.isLE = X),
            (this.finished = !1),
            (this.length = 0),
            (this.pos = 0),
            (this.destroyed = !1),
            (this.buffer = new Uint8Array(s)),
            (this.view = (0, ee.GL)(this.buffer));
        }
        update(s) {
          (0, X.$h)(this);
          let { view: x, buffer: W, blockLen: et } = this;
          s = (0, ee.O0)(s);
          let er = s.length;
          for (let X = 0; X < er; ) {
            let ei = Math.min(et - this.pos, er - X);
            if (ei === et) {
              let x = (0, ee.GL)(s);
              for (; et <= er - X; X += et) this.process(x, X);
              continue;
            }
            W.set(s.subarray(X, X + ei), this.pos),
              (this.pos += ei),
              (X += ei),
              this.pos === et && (this.process(x, 0), (this.pos = 0));
          }
          return (this.length += s.length), this.roundClean(), this;
        }
        digestInto(s) {
          (0, X.$h)(this), (0, X.eB)(s, this), (this.finished = !0);
          let { buffer: x, view: W, blockLen: et, isLE: er } = this,
            { pos: ei } = this;
          (x[ei++] = 128),
            this.buffer.subarray(ei).fill(0),
            this.padOffset > et - ei && (this.process(W, 0), (ei = 0));
          for (let s = ei; s < et; s++) x[s] = 0;
          !(function (s, x, W, X) {
            if ("function" == typeof s.setBigUint64)
              return s.setBigUint64(x, W, X);
            let ee = BigInt(32),
              et = BigInt(4294967295),
              er = Number((W >> ee) & et),
              ei = Number(W & et),
              eo = X ? 4 : 0,
              ea = X ? 0 : 4;
            s.setUint32(x + eo, er, X), s.setUint32(x + ea, ei, X);
          })(W, et - 8, BigInt(8 * this.length), er),
            this.process(W, 0);
          let eo = (0, ee.GL)(s),
            ea = this.outputLen;
          if (ea % 4)
            throw Error("_sha2: outputLen should be aligned to 32bit");
          let es = ea / 4,
            el = this.get();
          if (es > el.length) throw Error("_sha2: outputLen bigger than state");
          for (let s = 0; s < es; s++) eo.setUint32(4 * s, el[s], er);
        }
        digest() {
          let { buffer: s, outputLen: x } = this;
          this.digestInto(s);
          let W = s.slice(0, x);
          return this.destroy(), W;
        }
        _cloneInto(s) {
          s || (s = new this.constructor()), s.set(...this.get());
          let {
            blockLen: x,
            buffer: W,
            length: X,
            finished: ee,
            destroyed: et,
            pos: er,
          } = this;
          return (
            (s.length = X),
            (s.pos = er),
            (s.finished = ee),
            (s.destroyed = et),
            X % x && s.buffer.set(W),
            s
          );
        }
      };
      let et = new Uint32Array([
          1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,
          2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,
          1925078388, 2162078206, 2614888103, 3248222580, 3835390401,
          4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692,
          1996064986, 2554220882, 2821834349, 2952996808, 3210313671,
          3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912,
          1294757372, 1396182291, 1695183700, 1986661051, 2177026350,
          2456956037, 2730485921, 2820302411, 3259730800, 3345764771,
          3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616,
          659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779,
          1955562222, 2024104815, 2227730452, 2361852424, 2428436474,
          2756734187, 3204031479, 3329325298,
        ]),
        er = new Uint32Array([
          1779033703, 3144134277, 1013904242, 2773480762, 1359893119,
          2600822924, 528734635, 1541459225,
        ]),
        ei = new Uint32Array(64);
      let SHA256 = class SHA256 extends HashMD {
        constructor() {
          super(64, 32, 8, !1),
            (this.A = 0 | er[0]),
            (this.B = 0 | er[1]),
            (this.C = 0 | er[2]),
            (this.D = 0 | er[3]),
            (this.E = 0 | er[4]),
            (this.F = 0 | er[5]),
            (this.G = 0 | er[6]),
            (this.H = 0 | er[7]);
        }
        get() {
          let { A: s, B: x, C: W, D: X, E: ee, F: et, G: er, H: ei } = this;
          return [s, x, W, X, ee, et, er, ei];
        }
        set(s, x, W, X, ee, et, er, ei) {
          (this.A = 0 | s),
            (this.B = 0 | x),
            (this.C = 0 | W),
            (this.D = 0 | X),
            (this.E = 0 | ee),
            (this.F = 0 | et),
            (this.G = 0 | er),
            (this.H = 0 | ei);
        }
        process(s, x) {
          for (let W = 0; W < 16; W++, x += 4) ei[W] = s.getUint32(x, !1);
          for (let s = 16; s < 64; s++) {
            let x = ei[s - 15],
              W = ei[s - 2],
              X = (0, ee.np)(x, 7) ^ (0, ee.np)(x, 18) ^ (x >>> 3),
              et = (0, ee.np)(W, 17) ^ (0, ee.np)(W, 19) ^ (W >>> 10);
            ei[s] = (et + ei[s - 7] + X + ei[s - 16]) | 0;
          }
          let { A: W, B: X, C: er, D: eo, E: ea, F: es, G: el, H: ec } = this;
          for (let s = 0; s < 64; s++) {
            var eu, ed, eh, ep;
            let x = (0, ee.np)(ea, 6) ^ (0, ee.np)(ea, 11) ^ (0, ee.np)(ea, 25),
              ef =
                (ec + x + (((eu = ea) & es) ^ (~eu & el)) + et[s] + ei[s]) | 0,
              eg = (0, ee.np)(W, 2) ^ (0, ee.np)(W, 13) ^ (0, ee.np)(W, 22),
              em =
                (eg + (((ed = W) & (eh = X)) ^ (ed & (ep = er)) ^ (eh & ep))) |
                0;
            (ec = el),
              (el = es),
              (es = ea),
              (ea = (eo + ef) | 0),
              (eo = er),
              (er = X),
              (X = W),
              (W = (ef + em) | 0);
          }
          (W = (W + this.A) | 0),
            (X = (X + this.B) | 0),
            (er = (er + this.C) | 0),
            (eo = (eo + this.D) | 0),
            (ea = (ea + this.E) | 0),
            (es = (es + this.F) | 0),
            (el = (el + this.G) | 0),
            (ec = (ec + this.H) | 0),
            this.set(W, X, er, eo, ea, es, el, ec);
        }
        roundClean() {
          ei.fill(0);
        }
        destroy() {
          this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
        }
      };
      let eo = (0, ee.hE)(() => new SHA256());
    },
    15448: function (s, x, W) {
      "use strict";
      W.d(x, {
        kb: function () {
          return Hash;
        },
        l1: function () {
          return byteSwap32;
        },
        eV: function () {
          return concatBytes;
        },
        GL: function () {
          return createView;
        },
        iA: function () {
          return et;
        },
        O6: function () {
          return randomBytes;
        },
        np: function () {
          return rotr;
        },
        O0: function () {
          return toBytes;
        },
        Jq: function () {
          return u32;
        },
        hE: function () {
          return wrapConstructor;
        },
      });
      let X =
        "object" == typeof globalThis && "crypto" in globalThis
          ? globalThis.crypto
          : void 0;
      var ee = W(41656);
      function u32(s) {
        return new Uint32Array(
          s.buffer,
          s.byteOffset,
          Math.floor(s.byteLength / 4)
        );
      }
      function createView(s) {
        return new DataView(s.buffer, s.byteOffset, s.byteLength);
      }
      function rotr(s, x) {
        return (s << (32 - x)) | (s >>> x);
      }
      let et = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0];
      function byteSwap32(s) {
        for (let W = 0; W < s.length; W++) {
          var x;
          s[W] =
            (((x = s[W]) << 24) & 4278190080) |
            ((x << 8) & 16711680) |
            ((x >>> 8) & 65280) |
            ((x >>> 24) & 255);
        }
      }
      function toBytes(s) {
        return (
          "string" == typeof s &&
            (s = (function (s) {
              if ("string" != typeof s)
                throw Error("utf8ToBytes expected string, got " + typeof s);
              return new Uint8Array(new TextEncoder().encode(s));
            })(s)),
          (0, ee.gk)(s),
          s
        );
      }
      function concatBytes(...s) {
        let x = 0;
        for (let W = 0; W < s.length; W++) {
          let X = s[W];
          (0, ee.gk)(X), (x += X.length);
        }
        let W = new Uint8Array(x);
        for (let x = 0, X = 0; x < s.length; x++) {
          let ee = s[x];
          W.set(ee, X), (X += ee.length);
        }
        return W;
      }
      let Hash = class Hash {
        clone() {
          return this._cloneInto();
        }
      };
      function wrapConstructor(s) {
        let hashC = (x) => s().update(toBytes(x)).digest(),
          x = s();
        return (
          (hashC.outputLen = x.outputLen),
          (hashC.blockLen = x.blockLen),
          (hashC.create = () => s()),
          hashC
        );
      }
      function randomBytes(s = 32) {
        if (X && "function" == typeof X.getRandomValues)
          return X.getRandomValues(new Uint8Array(s));
        if (X && "function" == typeof X.randomBytes) return X.randomBytes(s);
        throw Error("crypto.getRandomValues must be defined");
      }
    },
    49739: function (s, x, W) {
      "use strict";
      W.d(x, {
        V: function () {
          return et;
        },
        F: function () {
          return WagmiProvider;
        },
      });
      var X = W(67294),
        ee = W(51785);
      function Hydrate(s) {
        let {
            children: x,
            config: W,
            initialState: et,
            reconnectOnMount: er = !0,
          } = s,
          { onMount: ei } = (function (s, x) {
            let { initialState: W, reconnectOnMount: X } = x;
            return (
              W &&
                !s._internal.store.persist.hasHydrated() &&
                s.setState({
                  ...W,
                  chainId: s.chains.some((s) => s.id === W.chainId)
                    ? W.chainId
                    : s.chains[0].id,
                  connections: X ? W.connections : new Map(),
                  status: X ? "reconnecting" : "disconnected",
                }),
              {
                async onMount() {
                  s._internal.ssr &&
                    (await s._internal.store.persist.rehydrate(),
                    s._internal.mipd &&
                      s._internal.connectors.setState((x) => {
                        let W = new Set();
                        for (let s of x ?? [])
                          if (s.rdns) {
                            let x = Array.isArray(s.rdns) ? s.rdns : [s.rdns];
                            for (let s of x) W.add(s);
                          }
                        let X = [],
                          ee = s._internal.mipd?.getProviders() ?? [];
                        for (let x of ee) {
                          if (W.has(x.info.rdns)) continue;
                          let ee =
                              s._internal.connectors.providerDetailToConnector(
                                x
                              ),
                            et = s._internal.connectors.setup(ee);
                          X.push(et);
                        }
                        return [...x, ...X];
                      })),
                    X
                      ? (0, ee.G)(s)
                      : s.storage &&
                        s.setState((s) => ({ ...s, connections: new Map() }));
                },
              }
            );
          })(W, { initialState: et, reconnectOnMount: er });
        W._internal.ssr || ei();
        let eo = (0, X.useRef)(!0);
        return (
          (0, X.useEffect)(() => {
            if (eo.current && W._internal.ssr)
              return (
                ei(),
                () => {
                  eo.current = !1;
                }
              );
          }, []),
          x
        );
      }
      let et = (0, X.createContext)(void 0);
      function WagmiProvider(s) {
        let { children: x, config: W } = s;
        return (0, X.createElement)(
          Hydrate,
          s,
          (0, X.createElement)(et.Provider, { value: W }, x)
        );
      }
    },
    92321: function (s, x, W) {
      "use strict";
      W.d(x, {
        m: function () {
          return useAccount;
        },
      });
      var X = W(33397),
        ee = W(52425),
        et = W(37122),
        er = W(74751),
        ei = W(67294),
        eo = W(810);
      let isPlainObject = (s) => "object" == typeof s && !Array.isArray(s);
      function useAccount(s = {}) {
        let x = (0, et.Z)(s);
        return (function (s, x, W = x, X = er.v) {
          let ee = (0, ei.useRef)([]),
            et = (0, eo.useSyncExternalStoreWithSelector)(
              s,
              x,
              W,
              (s) => s,
              (s, x) => {
                if (isPlainObject(s) && isPlainObject(x) && ee.current.length) {
                  for (let W of ee.current) {
                    let ee = X(s[W], x[W]);
                    if (!ee) return !1;
                  }
                  return !0;
                }
                return X(s, x);
              }
            );
          return (0, ei.useMemo)(() => {
            if (isPlainObject(et)) {
              let s = { ...et },
                x = {};
              for (let [W, X] of Object.entries(s))
                x = {
                  ...x,
                  [W]: {
                    configurable: !1,
                    enumerable: !0,
                    get: () => (
                      ee.current.includes(W) || ee.current.push(W), X
                    ),
                  },
                };
              return Object.defineProperties(s, x), s;
            }
            return et;
          }, [et]);
        })(
          (s) => (0, X.u)(x, { onChange: s }),
          () => (0, ee.D)(x)
        );
      }
    },
    37122: function (s, x, W) {
      "use strict";
      W.d(x, {
        Z: function () {
          return useConfig;
        },
      });
      var X = W(67294),
        ee = W(49739),
        et = W(7066);
      let getVersion = () => "wagmi@2.14.9";
      let BaseError = class BaseError extends et.G {
        constructor() {
          super(...arguments),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "WagmiError",
            });
        }
        get docsBaseUrl() {
          return "https://wagmi.sh/react";
        }
        get version() {
          return getVersion();
        }
      };
      let WagmiProviderNotFoundError = class WagmiProviderNotFoundError extends BaseError {
        constructor() {
          super("`useConfig` must be used within `WagmiProvider`.", {
            docsPath: "/api/WagmiProvider",
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "WagmiProviderNotFoundError",
            });
        }
      };
      function useConfig(s = {}) {
        let x = s.config ?? (0, X.useContext)(ee.V);
        if (!x) throw new WagmiProviderNotFoundError();
        return x;
      }
    },
    18597: function (s) {
      "use strict";
      s.exports = { i8: "6.6.1" };
    },
  },
  function (s) {
    var __webpack_exec__ = function (x) {
      return s((s.s = x));
    };
    s.O(0, [9774, 179], function () {
      return __webpack_exec__(6840), __webpack_exec__(59974);
    }),
      (_N_E = s.O());
  },
]);
